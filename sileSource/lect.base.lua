#!/usr/bin/env lua

do

package.preload[ "lua-libraries\\std\\strict" ] = assert( (loadstring or load)(
"--[[--\
 Checks uses of undeclared global variables.\
\
 All global variables must be 'declared' through a regular\
 assignment (even assigning `nil` will do) in a top-level\
 chunk before being used anywhere or assigned to inside a function.\
 From Lua distribution (`etc/strict.lua`).\
\
 @module std.strict\
]]\
\
local getinfo, error, rawset, rawget = debug.getinfo, error, rawset, rawget\
\
local mt = getmetatable (_G)\
if mt == nil then\
  mt = {}\
  setmetatable (_G, mt)\
end\
\
mt.__declared = {}\
\
local function what ()\
  local d = getinfo (3, \"S\")\
  return d and d.what or \"C\"\
end\
\
--- Detect assignment to undeclared global.\
-- @function __newindex\
mt.__newindex = function (t, n, v)\
  if not mt.__declared[n] then\
    local w = what ()\
    if w ~= \"main\" and w ~= \"C\" then\
      error (\"assignment to undeclared variable '\" .. n .. \"'\", 2)\
    end\
    mt.__declared[n] = true\
  end\
  rawset (t, n, v)\
end\
\
--- Detect derefrence of undeclared global.\
-- @function __index\
mt.__index = function (t, n)\
  if not mt.__declared[n] and what () ~= \"C\" then\
    error (\"variable '\" .. n .. \"' is not declared\", 2)\
  end\
  return rawget (t, n)\
end\
"
, '@'..".\\lua-libraries\\std\\strict.lua" ) )

package.preload[ "lua-libraries\\std\\list" ] = assert( (loadstring or load)(
"--[[--\
 Tables as lists.\
\
 Every list is also an object, and thus inherits all of the `std.object`\
 methods, particularly use of object cloning for making new list objects.\
\
 In addition to calling methods on list objects in OO style...\
\
     local List = require \"std.list\"\
     local l = List {1, 2, 3}\
     for e in l:relems () do print (e) end\
       => 3\
       => 2\
       => 1\
\
 ... some can also be called as module functions with an explicit list\
 argument in the first or last parameter, check the documentation for\
 details:\
\
     local List = require \"std.list\"\
     local l = List {1, 2, 3}\
     for e in List.relems (l) do print (e) end\
       => 3\
       => 2\
       => 1\
\
 @classmod std.list\
]]\
\
local base    = require \"std.base\"\
local func    = require \"std.functional\"\
local Object  = require \"std.object\"\
\
\
local List -- forward declaration\
\
------\
-- An Object derived List.\
-- @table List\
\
--- Append an item to a list.\
-- @tparam List l a list\
-- @param x item\
-- @treturn List new list containing `{l[1], ..., l[#l], x}`\
local function append (l, x)\
  return List (base.append (l, x))\
end\
\
\
--- Compare two lists element-by-element, from left-to-right.\
--\
--     if a_list:compare (another_list) == 0 then print \"same\" end\
-- @static\
-- @function compare\
-- @tparam List l a list\
-- @tparam table m another list\
-- @return -1 if `l` is less than `m`, 0 if they are the same, and 1\
--   if `l` is greater than `m`\
local compare = base.compare\
\
\
--- Concatenate arguments into a list.\
-- @tparam List l a list\
-- @param ... tuple of lists\
-- @treturn List new list containing\
--   `{l[1], ..., l[#l], l\\_1[1], ..., l\\_1[#l\\_1], ..., l\\_n[1], ..., l\\_n[#l\\_n]}`\
local function concat (l, ...)\
  return List (base.concat (l, ...))\
end\
\
\
--- Prepend an item to a list.\
-- @tparam List l a list\
-- @param x item\
-- @treturn List new list containing `{x, unpack (l)}`\
local function cons (l, x)\
  return List {x, unpack (l)}\
end\
\
\
--- An iterator over the elements of a list.\
-- @static\
-- @function elems\
-- @tparam List l a list\
-- @treturn function  iterator function which returns successive elements\
--   of `l`\
-- @treturn List `l`\
-- @return `true`\
local elems = base.elems\
\
\
--- Turn a list of pairs into a table.\
-- @todo Find a better name.\
-- @tparam  table ls list of lists `{{i1, v1}, ..., {in, vn}}`\
-- @treturn table a new list containing table `{i1=v1, ..., in=vn}`\
-- @see enpair\
local function depair (ls)\
  local t = {}\
  for v in elems (ls) do\
    t[v[1]] = v[2]\
  end\
  return t\
end\
\
\
--- Turn a table into a list of pairs.\
-- @todo Find a better name.\
-- @tparam  table t  a table `{i1=v1, ..., in=vn}`\
-- @treturn List a new list containing `{{i1, v1}, ..., {in, vn}}`\
-- @see depair\
local function enpair (t)\
  local ls = List {}\
  for i, v in pairs (t) do\
    table.insert (ls, List {i, v})\
  end\
  return ls\
end\
\
\
--- Filter a list according to a predicate.\
-- @func p predicate function, of one argument returning a boolean\
-- @tparam List l a list\
-- @treturn List new list containing elements `e` of `l` for which\
--   `p (e)` is true\
-- @see std.list:filter\
local function filter (p, l)\
  return List (func.filter (p, elems, l))\
end\
\
\
--- Flatten a list.\
-- @tparam List l a list\
-- @treturn List flattened list\
local function flatten (l)\
  local r = List {}\
  for v in base.ileaves (l) do\
    table.insert (r, v)\
  end\
  return r\
end\
\
\
--- Fold a binary function through a list left associatively.\
-- @func fn binary function\
-- @param e element to place in left-most position\
-- @tparam List l a list\
-- @return result\
-- @see std.list:foldl\
local function foldl (fn, e, l)\
  return func.fold (fn, e, elems, l)\
end\
\
\
--- An iterator over the elements of a list, in reverse.\
-- @tparam List l a list\
-- @treturn function iterator function which returns precessive elements\
--   of the `l`\
-- @treturn List `l`\
-- @return `true`\
local function relems (l)\
  local n = #l + 1\
  return function (l)\
           n = n - 1\
           if n > 0 then\
             return l[n]\
           end\
         end,\
  l, true\
end\
\
\
--- Fold a binary function through a list right associatively.\
-- @func fn binary function\
-- @param e element to place in right-most position\
-- @tparam List l a list\
-- @return result\
-- @see std.list:foldr\
local function foldr (fn, e, l)\
  return List (func.fold (function (x, y) return fn (y, x) end,\
                          e, relems, l))\
end\
\
\
--- Make an index of a list of tables on a given field\
-- @param f field\
-- @tparam List l list of tables `{t1, ..., tn}`\
-- @treturn List index `{t1[f]=1, ..., tn[f]=n}`\
local function index_key (f, l)\
  local r = List {}\
  for i, v in ipairs (l) do\
    local k = v[f]\
    if k then\
      r[k] = i\
    end\
  end\
  return r\
end\
\
\
--- Copy a list of tables, indexed on a given field\
-- @param f field whose value should be used as index\
-- @tparam List l list of tables `{i1=t1, ..., in=tn}`\
-- @treturn List index `{t1[f]=t1, ..., tn[f]=tn}`\
local function index_value (f, l)\
  local r = List {}\
  for i, v in ipairs (l) do\
    local k = v[f]\
    if k then\
      r[k] = v\
    end\
  end\
  return r\
end\
\
\
--- Map a function over a list.\
-- @func fn map function\
-- @tparam List l a list\
-- @treturn List new list containing `{fn (l[1]), ..., fn (l[#l])}`\
-- @see std.list:map\
local function map (fn, l)\
  return List (func.map (fn, elems, l))\
end\
\
\
--- Map a function over a list of lists.\
-- @func fn map function\
-- @tparam List ls a list of lists\
-- @treturn List new list `{fn (unpack (ls[1]))), ..., fn (unpack (ls[#ls]))}`\
local function map_with (fn, ls)\
  return List (func.map (func.compose (fn, unpack), elems, ls))\
end\
\
\
--- Project a list of fields from a list of tables.\
-- @param f field to project\
-- @tparam List l a list\
-- @treturn List list of `f` fields\
-- @see std.list:project\
local function project (f, l)\
  return map (function (t) return t[f] end, l)\
end\
\
\
--- Repeat a list.\
-- @tparam List l a list\
-- @int n number of times to repeat\
-- @treturn List `n` copies of `l` appended together\
local function rep (l, n)\
  local r = List {}\
  for i = 1, n do\
    r = concat (r, l)\
  end\
  return r\
end\
\
\
--- Reverse a list.\
-- @tparam List l a list\
-- @treturn List new list containing `{l[#l], ..., l[1]}`\
local function reverse (l)\
  local r = List {}\
  for i = #l, 1, -1 do\
    table.insert (r, l[i])\
  end\
  return r\
end\
\
\
--- Shape a list according to a list of dimensions.\
--\
-- Dimensions are given outermost first and items from the original\
-- list are distributed breadth first; there may be one 0 indicating\
-- an indefinite number. Hence, `{0}` is a flat list,\
-- `{1}` is a singleton, `{2, 0}` is a list of\
-- two lists, and `{0, 2}` is a list of pairs.\
--\
-- Algorithm: turn shape into all positive numbers, calculating\
-- the zero if necessary and making sure there is at most one;\
-- recursively walk the shape, adding empty tables until the bottom\
-- level is reached at which point add table items instead, using a\
-- counter to walk the flattened original list.\
--\
-- @todo Use ileaves instead of flatten (needs a while instead of a\
-- for in fill function)\
-- @tparam table s `{d1, ..., dn}`\
-- @tparam List l a list\
-- @return reshaped list\
-- @see std.list:shape\
local function shape (s, l)\
  l = flatten (l)\
  -- Check the shape and calculate the size of the zero, if any\
  local size = 1\
  local zero\
  for i, v in ipairs (s) do\
    if v == 0 then\
      if zero then -- bad shape: two zeros\
        return nil\
      else\
        zero = i\
      end\
    else\
      size = size * v\
    end\
  end\
  if zero then\
    s[zero] = math.ceil (#l / size)\
  end\
  local function fill (i, d)\
    if d > #s then\
      return l[i], i + 1\
    else\
      local r = List {}\
      for j = 1, s[d] do\
        local e\
        e, i = fill (i, d + 1)\
        table.insert (r, e)\
      end\
      return r, i\
    end\
  end\
  return (fill (1, 1))\
end\
\
\
--- Return a sub-range of a list.\
-- (The equivalent of `string.sub` on strings; negative list indices\
-- count from the end of the list.)\
-- @tparam List l a list\
-- @int from start of range (default: 1)\
-- @int to end of range (default: `#l`)\
-- @treturn List new list containing `{l[from], ..., l[to]}`\
local function sub (l, from, to)\
  local r = List {}\
  local len = #l\
  from = from or 1\
  to = to or len\
  if from < 0 then\
    from = from + len + 1\
  end\
  if to < 0 then\
    to = to + len + 1\
  end\
  for i = from, to do\
    table.insert (r, l[i])\
  end\
  return r\
end\
\
\
--- Return a list with its first element removed.\
-- @tparam List l a list\
-- @treturn List new list containing `{l[2], ..., l[#l]}`\
local function tail (l)\
  return sub (l, 2)\
end\
\
\
--- Transpose a list of lists.\
-- This function in Lua is equivalent to zip and unzip in more strongly\
-- typed languages.\
-- @tparam table ls\
-- `{{ls<1,1>, ..., ls<1,c>}, ..., {ls&lt;r,1>, ..., ls&lt;r,c>}}`\
-- @treturn List new list containing\
-- `{{ls<1,1>, ..., ls&lt;r,1>}, ..., {ls<1,c>, ..., ls&lt;r,c>}}`\
local function transpose (ls)\
  local rs, len = List {}, #ls\
  for i = 1, math.max (unpack (map (ls, function (l) return #l end))) do\
    rs[i] = List {}\
    for j = 1, len do\
      rs[i][j] = ls[j][i]\
    end\
  end\
  return rs\
end\
\
\
--- Zip a list of lists together with a function.\
-- @tparam  table    ls list of lists\
-- @tparam  function f  function\
-- @treturn List    a new list containing\
--   `{f (ls[1][1], ..., ls[#ls][1]), ..., f (ls[1][N], ..., ls[#ls][N])`\
-- where `N = max {map (function (l) return #l end, ls)}`\
local function zip_with (ls, f)\
  return map_with (transpose (ls), f)\
end\
\
\
--- @export\
local _functions = {\
  append      = append,\
  compare     = compare,\
  concat      = concat,\
  cons        = cons,\
  depair      = depair,\
  elems       = elems,\
  enpair      = enpair,\
  filter      = filter,\
  flatten     = flatten,\
  foldl       = foldl,\
  foldr       = foldr,\
  index_key   = index_key,\
  index_value = index_value,\
  map         = map,\
  map_with    = map_with,\
  project     = project,\
  relems      = relems,\
  rep         = rep,\
  reverse     = reverse,\
  shape       = shape,\
  sub         = sub,\
  tail        = tail,\
  transpose   = transpose,\
  zip_with    = zip_with,\
}\
\
\
List = Object {\
  -- Derived object type.\
  _type = \"List\",\
\
  ------\
  -- Concatenate lists.\
  --     new = list .. table\
  -- @function __concat\
  -- @tparam List list a list\
  -- @tparam table    table another list, hash part is ignored\
  -- @see concat\
  __concat = concat,\
\
  ------\
  -- Append element to list.\
  --     list = list + element\
  -- @function __add\
  -- @tparam List list a list\
  -- @param           element element to append\
  -- @see append\
  __add    = append,\
\
  ------\
  -- List order operator.\
  --     max = list1 > list2 and list1 or list2\
  -- @tparam List list1 a list\
  -- @tparam List list2 another list\
  -- @see std.list:compare\
  __lt = function (list1, list2) return compare (list1, list2) < 0 end,\
\
  ------\
  -- List equality or order operator.\
  --     min = list1 <= list2 and list1 or list2\
  -- @tparam List list1 a list\
  -- @tparam List list2 another list\
  -- @see std.list:compare\
  __le = function (list1, list2) return compare (list1, list2) <= 0 end,\
\
  __index = {\
    ------\
    -- Append an item to a list.\
    -- @function append\
    -- @param x item\
    -- @treturn List new list containing `{self[1], ..., self[#self], x}`\
    append = append,\
\
    ------\
    -- Compare two lists element-by-element, from left-to-right.\
    --\
    --     if a_list:compare (another_list) == 0 then print \"same\" end\
    -- @function compare\
    -- @tparam table l a list\
    -- @return -1 if `self` is less than `l`, 0 if they are the same, and 1\
    --   if `self` is greater than `l`\
    compare = compare,\
\
    ------\
    -- Concatenate arguments into a list.\
    -- @function concat\
    -- @param ... tuple of lists\
    -- @treturn List new list containing\
    --   `{self[1], ..., self[#self], l\\_1[1], ..., l\\_1[#l\\_1], ..., l\\_n[1], ..., l\\_n[#l\\_n]}`\
    concat = concat,\
\
    ------\
    -- Prepend an item to a list.\
    -- @function cons\
    -- @param x item\
    -- @treturn List new list containing `{x, unpack (self)}`\
    cons = cons,\
\
    ------\
    -- An iterator over the elements of a list.\
    -- @function elems\
    -- @treturn function  iterator function which returns successive\
    --   elements of `self`\
    -- @treturn List `self`\
    -- @return `true`\
    elems = elems,\
\
    ------\
    -- Filter a list according to a predicate.\
    -- @function filter\
    -- @func p predicate function, of one argument returning a boolean\
    -- @treturn List new list containing elements `e` of `self` for which\
    --   `p (e)` is true\
    -- @see std.list.filter\
    filter = function (self, p) return filter (p, self) end,\
\
    ------\
    -- Flatten a list.\
    -- @function flatten\
    -- @treturn List flattened list\
    flatten = flatten,\
\
    ------\
    -- Fold a binary function through a list left associatively.\
    -- @function foldl\
    -- @func fn binary function\
    -- @param e element to place in left-most position\
    -- @return result\
    -- @see std.list.foldl\
    foldl = function (self, fn, e) return foldl (fn, e, self) end,\
\
    ------\
    -- Fold a binary function through a list right associatively.\
    -- @function foldr\
    -- @func f binary function\
    -- @param e  element to place in right-most position\
    -- @return result\
    -- @see std.list.foldr\
    foldr = function (self, fn, e) return foldr (fn, e, self) end,\
\
    ------\
    -- Map a function over a list.\
    -- @function map\
    -- @func fn map function\
    -- @treturn List new list containing\
    --   `{fn (self[1]), ..., fn (self[#self])}`\
    -- @see std.list.map\
    map = function (self, fn) return map (fn, self) end,\
\
    ------\
    -- Project a list of fields from a list of tables.\
    -- @function project\
    -- @param f field to project\
    -- @treturn List list of `f` fields\
    -- @see std.list.project\
    project = function (self, f) return project (f, self) end,\
\
    ------\
    -- An iterator over the elements of a list, in reverse.\
    -- @function relems\
    -- @treturn function iterator function which returns precessive elements\
    --   of the `self`\
    -- @treturn List `self`\
    -- @return `true`\
    relems = relems,\
\
    ------\
    -- Repeat a list.\
    -- @function rep\
    -- @int n number of times to repeat\
    -- @treturn List `n` copies of `self` appended together\
    rep = rep,\
\
    ------\
    -- Reverse a list.\
    -- @function reverse\
    -- @treturn List new list containing `{self[#self], ..., self[1]}`\
    reverse = reverse,\
\
    -----\
    -- Shape a list according to a list of dimensions.\
    -- @function shape\
    -- @tparam table s `{d1, ..., dn}`\
    -- @return reshaped list\
    -- @see std.list.shape\
    shape = function (self, s) return shape (s, self) end,\
\
    ------\
    -- Return a sub-range of a list.\
    -- (The equivalent of `string.sub` on strings; negative list indices\
    -- count from the end of the list.)\
    -- @function sub\
    -- @int from start of range (default: 1)\
    -- @int to end of range (default: `#self`)\
    -- @treturn List new list containing `{self[from], ..., self[to]}`\
    sub = sub,\
\
    ------\
    -- Return a list with its first element removed.\
    -- @function tail\
    -- @treturn List new list containing `{self[2], ..., self[#self]}`\
    tail = tail,\
\
    -- For backwards compatibility with pre-Object era lists, but\
    -- undocumented so that new code doesn't get tangled up in it.\
    depair      = depair,\
    index_key   = function (self, f) return index_key (f, self)   end,\
    index_value = function (self, f) return index_value (f, self) end,\
    indexKey    = function (self, f) return indexKey (f, self)    end,\
    indexValue  = function (self, f) return indexValue (f, self)  end,\
    map_with    = function (self, f) return map_with (f, self)    end,\
    transpose   = transpose,\
    zip_with    = function (self, f) return zip_with (f, self)    end,\
  },\
\
  _functions = (base.merge (_functions, {\
    -- backwards compatibility\
    new         = function (t) return List (t or {}) end,\
    slice       = sub,\
\
    -- camelCase compatibility\
    indexKey    = index_key,\
    indexValue  = index_value,\
    mapWith     = map_with,\
    zipWith     = zip_with,\
  })),\
}\
\
\
-- Function forms of operators\
func.op[\"..\"] = concat\
\
\
return List\
"
, '@'..".\\lua-libraries\\std\\list.lua" ) )

package.preload[ "core\\cairo-output" ] = assert( (loadstring or load)(
"local lgi = require(\"lgi\");\
local cairo = lgi.cairo\
local pango = lgi.Pango\
local fm = lgi.PangoCairo.FontMap.get_default()\
local pango_context = lgi.Pango.FontMap.create_context(fm)\
\
if (not SILE.outputters) then SILE.outputters = {} end\
\
local cr\
local move -- See https://github.com/pavouk/lgi/issues/48\
local sgs\
\
SILE.outputters.cairo = {\
  init = function()\
    local surface = cairo.PdfSurface.create(SILE.outputFilename, SILE.documentState.paperSize[1], SILE.documentState.paperSize[2])\
    cr = cairo.Context.create(surface)\
    move = cr.move_to\
    sgs = cr.show_glyph_string\
  end,\
  newPage = function()\
  \9cr:show_page();\
  end,\
  finish = function() \
  end,\
  setColor = function (self, color)\
    cr:set_source_rgb(color.r, color.g, color.b)\
  end,\
  outputHbox = function (value)\
    if not value then return end\
    if value.pgs then\
      sgs(cr, value.font, value.pgs)\
    elseif value.text then\
      cr:show_text(value.text)\
    end\
  end,\
  setFont = function (options)\
    cr:select_font_face(options.font, options.style == \"italic\" and 1 or 0, options.weight > 100 and 0 or 1)\
    cr:set_font_size(options.size)\
  end,\
  drawImage = function (src, x,y,w,h)\
    local image = cairo.ImageSurface.create_from_png(src)\
    if not image then SU.error(\"Could not load image \"..src) end\
    local src_width = image:get_width()\
    local src_height = image:get_height()\
    if not (src_width > 0) then SU.error(\"Something went wrong loading image \"..src) end\
    cr:save()\
    cr:set_source_surface(image, 0,0)\
    local p = cr:get_source()\
    local matrix, sx, sy\
    if w or h then \
      if w > 0 then sx = src_width / w end\
      if h > 0 then sy = src_height / h end\
      matrix = cairo.Matrix.create_scale(sx or sy, sy or sx)\
    else\
      matrix = cairo.Matrix.create_identity()\
    end\
    matrix:translate(-x,-y)\
    p:set_matrix(matrix)\
    cr:paint()\
    cr:restore()\
  end,\
  moveTo = function (x,y)\
    move(cr, x,y)\
  end,\
  rule = function (x,y,w,d)\
    cr:rectangle(x,y,w,d)\
    cr:fill()\
  end,\
  debugFrame = function (self,f)\
    cr:set_source_rgb(0.8,0,0)\
    cr:set_line_width(0.5);\
  \9cr:rectangle(f:left(), f:top(), f:width(), f:height());\
    cr:stroke();\
  \9cr:move_to(f:left() - 10, f:top() -2);\
  \9cr:show_text(f.id);\
    cr:set_source_rgb(0,0,0);\
  end,\
  debugHbox = function(typesetter, hbox, scaledWidth)\
    cr:set_source_rgb(0.9,0.9,0.9);\
    cr:set_line_width(0.5);\
    cr:rectangle(typesetter.frame.state.cursorX, typesetter.frame.state.cursorY-(hbox.height), scaledWidth, hbox.height+hbox.depth);\
    if (hbox.depth) then cr:rectangle(typesetter.frame.state.cursorX, typesetter.frame.state.cursorY-(hbox.height), scaledWidth, hbox.height); end\
    cr:stroke();\
    cr:set_source_rgb(0,0,0);\
    cr:move_to(typesetter.frame.state.cursorX, typesetter.frame.state.cursorY);\
  end\
}\
\
SILE.outputter = SILE.outputters.cairo"
, '@'..".\\core\\cairo-output.lua" ) )

package.preload[ "lua-libraries\\imagesize" ] = assert( (loadstring or load)(
"-- Perl version copyright (c) 2008 by Randy J. Ray, all rights reserved\
-- Lua port copyright (c) 2008 Geoff Richards.\
--\
-- Copying and distribution are permitted under the terms of the Artistic\
-- License 2.0 (http://www.opensource.org/licenses/artistic-license-2.0.php) or\
-- the GNU LGPL (http://www.opensource.org/licenses/lgpl-license.php).\
--\
-- Once upon a time, this code was lifted almost verbatim from wwwis by Alex\
-- Knowles, alex@ed.ac.uk. Since then, even I barely recognize it. It has\
-- contributions, fixes, additions and enhancements from all over the world.\
\
local M = { _NAME = \"imagesize\" }\
\
local TYPE_MAP = {\
    [\"^GIF8[7,9]a\"]          = \"gif\",\
    [\"^\\255\\216\"]            = \"jpeg\",\
    [\"^\\137PNG\\13\\10\\26\\10\"] = \"png\",\
    [\"^P[1-7]\"]              = \"pnm\",   -- also XVpics\
    [\"#define%s+%S+%s+%d+\"]  = \"xbm\",\
    [\"/%* XPM %*/\"]          = \"xpm\",\
    [\"^MM%z%*\"]              = \"tiff\",\
    [\"^II%*%z\"]              = \"tiff\",\
    [\"^BM\"]                  = \"bmp\",\
    [\"^8BPS\"]                = \"psd\",\
    [\"^PCD_OPA\"]             = \"pcd\",\
    [\"^[FC]WS\"]              = \"swf\",\
    [\"^\\138MNG\\13\\10\\26\\10\"] = \"mng\",\
    [\"^gimp xcf \"]           = \"xcf\",   -- TODO - usually gziped\
}\
\
-- This is empty because each option's defaults are handled individually\
-- by the modules for the specific file format.  This is here just to avoid\
-- creating a new empty table every time.  It should never change.\
local DEFAULT_OPTIONS = {}\
\
function M.imgsize (filename, options)\
    options = options or DEFAULT_OPTIONS\
\
    local filetype = type(filename)\
    local file, closefile, origoffset\
    if filetype == \"string\" or filetype == \"number\" then\
        file, err = io.open(filename, \"rb\")\
        if not file then\
            return nil, nil, \"error opening file '\" .. filename .. \"': \" .. err\
        end\
        closefile = true\
    else\
        file, closefile = filename, false\
        origoffset = file:seek()\
    end\
\
    local header = file:read(256)\
    if not header then return nil, nil, \"file is empty\" end\
    local ok, err = file:seek(\"set\")\
    if not ok then return nil, nil, \"error seeking in file: \" .. err end\
\
    for pattern, format in pairs(TYPE_MAP) do\
        if header:find(pattern) then\
            local sizefunc = require(\"imagesize.format.\" .. format)\
            local x, y, id = sizefunc(file, options)\
            if closefile then file:close() end\
            if origoffset then file:seek(\"set\", origoffset) end\
            return x, y, id\
        end\
    end\
\
    if closefile then file:close() end\
    if origoffset then file:seek(\"set\", origoffset) end\
    return nil, nil, \"file format not recognized\"\
end\
\
-- This StringFile class is a very simple read-only file handle for reading\
-- from a string.  It supports just enough of the normal file handle API to\
-- do what the format functions need.\
local StringFile = {}\
StringFile.__index = StringFile\
\
function StringFile:read (bytes)\
    assert(type(bytes) == \"number\",\
           \"this mock file handle can only read a number of bytes\")\
    if self._offset >= self._data:len() then return nil end\
    local buf = self._data:sub(self._offset + 1, self._offset + bytes)\
    self._offset = self._offset + bytes\
    return buf\
end\
\
function StringFile:seek (whence, offset)\
    if not whence and not offset then return self._offset end\
    assert(whence == \"set\", \"this mock file handle can only seek with 'set'\")\
    offset = offset or 0\
    self._offset = offset\
    return offset\
end\
\
local function _line_iter (self)\
    if self._offset >= self._data:len() then return nil end\
    local _, endp, line = self._data:find(\"([^\\n]*)\\n?\", self._offset + 1)\
    self._offset = endp\
    return line\
end\
function StringFile:lines () return _line_iter, self end\
\
function M.imgsize_string (s, options)\
    local file = setmetatable({\
        _data = s,\
        _offset = 0,\
    }, StringFile)\
    return M.imgsize(file, options)\
end\
\
return M\
-- vi:ts=4 sw=4 expandtab\
"
, '@'..".\\lua-libraries\\imagesize.lua" ) )

package.preload[ "lua-libraries\\bit32-compat" ] = assert( (loadstring or load)(
"--[[---------------\
This is derived from LuaBit v0.4\
Under the MIT license.\
copyright(c) 2006~2007 hanzhao (abrash_han@hotmail.com)\
--]]---------------\
\
if (not pcall(function() bit32 = require(\"bit32\") end)) then\
\
local function check_int(n)\
 -- checking not float\
 if(n - math.floor(n) > 0) then\
  error(\"trying to use bitwise operation on non-integer!\")\
 end\
end\
\
local function to_bits(n)\
 check_int(n)\
 if(n < 0) then\
  -- negative\
  return to_bits(bit.bnot(math.abs(n)) + 1)\
 end\
 -- to bits table\
 local tbl = {}\
 local cnt = 1\
 while (n > 0) do\
  local last = math.mod(n,2)\
  if(last == 1) then\
   tbl[cnt] = 1\
  else\
   tbl[cnt] = 0\
  end\
  n = (n-last)/2\
  cnt = cnt + 1\
 end\
\
 return tbl\
end\
\
local function tbl_to_number(tbl)\
 local n = table.getn(tbl)\
\
 local rslt = 0\
 local power = 1\
 for i = 1, n do\
  rslt = rslt + tbl[i]*power\
  power = power*2\
 end\
 \
 return rslt\
end\
\
local function expand(tbl_m, tbl_n)\
 local big = {}\
 local small = {}\
 if(table.getn(tbl_m) > table.getn(tbl_n)) then\
  big = tbl_m\
  small = tbl_n\
 else\
  big = tbl_n\
  small = tbl_m\
 end\
 -- expand small\
 for i = table.getn(small) + 1, table.getn(big) do\
  small[i] = 0\
 end\
\
end\
\
local function bit_or(m, n)\
 local tbl_m = to_bits(m)\
 local tbl_n = to_bits(n)\
 expand(tbl_m, tbl_n)\
\
 local tbl = {}\
 local rslt = math.max(table.getn(tbl_m), table.getn(tbl_n))\
 for i = 1, rslt do\
  if(tbl_m[i]== 0 and tbl_n[i] == 0) then\
   tbl[i] = 0\
  else\
   tbl[i] = 1\
  end\
 end\
 \
 return tbl_to_number(tbl)\
end\
\
local function bit_and(m, n)\
 local tbl_m = to_bits(m)\
 local tbl_n = to_bits(n)\
 expand(tbl_m, tbl_n) \
\
 local tbl = {}\
 local rslt = math.max(table.getn(tbl_m), table.getn(tbl_n))\
 for i = 1, rslt do\
  if(tbl_m[i]== 0 or tbl_n[i] == 0) then\
   tbl[i] = 0\
  else\
   tbl[i] = 1\
  end\
 end\
\
 return tbl_to_number(tbl)\
end\
\
local function bit_not(n)\
 \
 local tbl = to_bits(n)\
 local size = math.max(table.getn(tbl), 32)\
 for i = 1, size do\
  if(tbl[i] == 1) then \
   tbl[i] = 0\
  else\
   tbl[i] = 1\
  end\
 end\
 return tbl_to_number(tbl)\
end\
\
local function bit_xor(m, n)\
 local tbl_m = to_bits(m)\
 local tbl_n = to_bits(n)\
 expand(tbl_m, tbl_n) \
\
 local tbl = {}\
 local rslt = math.max(table.getn(tbl_m), table.getn(tbl_n))\
 for i = 1, rslt do\
  if(tbl_m[i] ~= tbl_n[i]) then\
   tbl[i] = 1\
  else\
   tbl[i] = 0\
  end\
 end\
 \
 --table.foreach(tbl, print)\
\
 return tbl_to_number(tbl)\
end\
\
local function bit_rshift(n, bits)\
 check_int(n)\
 \
 local high_bit = 0\
 if(n < 0) then\
  -- negative\
  n = bit_not(math.abs(n)) + 1\
  high_bit = 2147483648 -- 0x80000000\
 end\
\
 for i=1, bits do\
  n = n/2\
  n = bit_or(math.floor(n), high_bit)\
 end\
 return math.floor(n)\
end\
\
-- logic rightshift assures zero filling shift\
local function bit_logic_rshift(n, bits)\
 check_int(n)\
 if(n < 0) then\
  -- negative\
  n = bit_not(math.abs(n)) + 1\
 end\
 for i=1, bits do\
  n = n/2\
 end\
 return math.floor(n)\
end\
\
local function bit_lshift(n, bits)\
 check_int(n)\
 \
 if(n < 0) then\
  -- negative\
  n = bit_not(math.abs(n)) + 1\
 end\
\
 for i=1, bits do\
  n = n*2\
 end\
 return bit_and(n, 4294967295) -- 0xFFFFFFFF\
end\
\
local function bit_xor2(m, n)\
 local rhs = bit_or(bit_not(m), bit_not(n))\
 local lhs = bit_or(m, n)\
 local rslt = bit_and(lhs, rhs)\
 return rslt\
end\
\
--------------------\
-- bit lib interface\
\
bit32 = {\
 -- bit operations\
 bnot = bit_not,\
 band = bit_and,\
 bor  = bit_or,\
 bxor = bit_xor,\
 rshift = bit_rshift,\
 lshift = bit_lshift,\
 bxor2 = bit_xor2,\
 blogic_rshift = bit_logic_rshift,\
\
 -- utility func\
 tobits = to_bits,\
 tonumb = tbl_to_number,\
}\
\
end\
"
, '@'..".\\lua-libraries\\bit32-compat.lua" ) )

package.preload[ "lua-libraries\\epnf" ] = assert( (loadstring or load)(
"local L = require( \"lpeg\" )\
\
local assert = assert\
local _VERSION = assert( _VERSION )\
local string, io = assert( string ), assert( io )\
local error = assert( error )\
local pairs = assert( pairs )\
local next = assert( next )\
local type = assert( type )\
local tostring = assert( tostring )\
local setmetatable = assert( setmetatable )\
local setfenv = setfenv\
if _VERSION == \"Lua 5.1\" then\
  assert( setfenv )\
end\
\
\
-- module table\
local epnf = {}\
\
\
-- maximum of two numbers while avoiding math lib as a dependency\
local function max( a, b )\
  if a < b then return b else return a end\
end\
\
\
-- get the line which p points into, the line number and the position\
-- of the beginning of the line\
local function getline( s, p )\
  local lno, sol = 1, 1\
  for i = 1, p do\
    if string.sub( s, i, i ) == \"\\n\" then\
      lno = lno + 1\
      sol = i + 1\
    end\
  end\
  local eol = #s\
  for i = sol, #s do\
    if string.sub( s, i, i ) == \"\\n\" then\
      eol = i - 1\
      break\
    end\
  end\
  return string.sub( s, sol, eol ), lno, sol\
end\
\
\
-- raise an error during semantic validation of the ast\
local function raise_error( n, msg, s, p )\
  local line, lno, sol = getline( s, p )\
  assert( p <= #s )\
  local clen = max( 70, p+10-sol )\
  if #line > clen then\
    line = string.sub( line, 1, clen ) .. \"...\"\
  end\
  local marker = string.rep( \" \", p-sol ) .. \"^\"\
  error( n..\":\"..lno..\": \"..msg..\"\\n\"..line..\"\\n\"..marker, 0 )\
end\
\
\
-- parse-error reporting function\
local function parse_error( s, p, n, e )\
  if p <= #s then\
    local msg = \"parse error\"\
    if e then msg = msg .. \", \" .. e end\
    raise_error( n, msg, s, p )\
  else -- parse error at end of input\
    local _,lno = string.gsub( s, \"\\n\", \"\\n\" )\
    if string.sub( s, -1, -1 ) ~= \"\\n\" then lno = lno + 1 end\
    local msg = \": parse error at <eof>\"\
    if e then msg = msg .. \", \" .. e end\
    error( n..\":\"..lno..msg, 0 )\
  end\
end\
\
\
local function make_ast_node( id, pos, t )\
  t.id = id\
  t.pos = pos\
  return t\
end\
\
\
-- some useful/common lpeg patterns\
local L_Cp = L.Cp()\
local L_Carg_1 = L.Carg( 1 )\
local function E( msg )\
  return L.Cmt( L_Carg_1 * L.Cc( msg ), parse_error )\
end\
local function EOF( msg )\
  return -L.P( 1 ) + E( msg )\
end\
local letter = L.R( \"az\", \"AZ\" ) + L.P\"_\"\
local digit = L.R\"09\"\
local ID = L.C( letter * (letter+digit)^0 )\
local function W( s )\
  return L.P( s ) * -(letter+digit)\
end\
local WS = L.S\" \\r\\n\\t\\f\\v\"\
\
\
-- setup an environment where you can easily define lpeg grammars\
-- with lots of syntax sugar\
function epnf.define( func, g )\
  g = g or {}\
  local env = {}\
  local env_index = {\
    START = function( name ) g[ 1 ] = name end,\
    E = E,\
    EOF = EOF,\
    ID = ID,\
    W = W,\
    WS = WS,\
  }\
  -- copy lpeg shortcuts\
  for k,v in pairs( L ) do\
    if string.match( k, \"^%u%w*$\" ) then\
      env_index[ k ] = v\
    end\
  end\
  setmetatable( env_index, { __index = _G } )\
  setmetatable( env, {\
    __index = env_index,\
    __newindex = function( _, name, val )\
      g[ name ] = (L.Cc( name ) * L_Cp * L.Ct( val )) / make_ast_node\
    end\
  } )\
  -- call passed function with custom environment (5.1- and 5.2-style)\
  if _VERSION == \"Lua 5.1\" then\
    setfenv( func, env )\
  end\
  func( env )\
  assert( g[ 1 ] and g[ g[ 1 ] ], \"no start rule defined\" )\
  return g\
end\
\
\
-- apply a given grammar to a string and return the ast. also allows\
-- to set the name of the string for error messages\
function epnf.parse( g, name, input, ... )\
  return L.match( L.P( g ), input, 1, name, ... ), name, input\
end\
\
\
-- apply a given grammar to the contents of a file and return the ast\
function epnf.parsefile( g, fname, ... )\
  local f = assert( io.open( fname, \"r\" ) )\
  local a,n,i = epnf.parse( g, fname, assert( f:read\"*a\" ), ... )\
  f:close()\
  return a,n,i\
end\
\
\
-- apply a given grammar to a string and return the ast. automatically\
-- picks a sensible name for error messages\
function epnf.parsestring( g, str, ... )\
  local s = string.sub( str, 1, 20 )\
  if #s < #str then s = s .. \"...\" end\
  local name = \"[\\\"\" .. string.gsub( s, \"\\n\", \"\\\\n\" ) .. \"\\\"]\"\
  return epnf.parse( g, name, str, ... )\
end\
\
\
local function write( ... ) return io.stderr:write( ... ) end\
local function dump_ast( node, prefix )\
  if type( node ) == \"table\" then\
    write( \"{\" )\
    if next( node ) ~= nil then\
      write( \"\\n\" )\
      if type( node.id ) == \"string\" and\
         type( node.pos ) == \"number\" then\
        write( prefix, \"  id = \", node.id,\
               \",  pos = \", tostring( node.pos ), \"\\n\" )\
      end\
      for k,v in pairs( node ) do\
        if k ~= \"id\" and k ~= \"pos\" then\
          write( prefix, \"  \", tostring( k ), \" = \" )\
          dump_ast( v, prefix..\"  \" )\
        end\
      end\
    end\
    write( prefix, \"}\\n\" )\
  else\
    write( tostring( node ), \"\\n\" )\
  end\
end\
\
-- write a string representation of the given ast to stderr for\
-- debugging\
function epnf.dumpast( node )\
  return dump_ast( node, \"\" )\
end\
\
\
-- export a function for reporting errors during ast validation\
epnf.raise = raise_error\
\
\
-- return module table\
return epnf\
\
"
, '@'..".\\lua-libraries\\epnf.lua" ) )

package.preload[ "packages\\rules" ] = assert( (loadstring or load)(
"SILE.baseClass:loadPackage(\"raiselower\")\
\
SILE.registerCommand(\"hrule\", function(options, content)\
  local width = options.width or 0\
  local height = options.height or 0\
  SILE.typesetter:pushHbox({ \
    width= SILE.length.new({length = SILE.parseComplexFrameDimension(width,\"w\") }),\
    height= SILE.length.new({ length = SILE.parseComplexFrameDimension(height,\"h\") }),\
    depth= 0,\
    value= options.src,\
    outputYourself= function (self, typesetter, line)\
      local scaledWidth = self.width.length\
      if line.ratio < 0 and self.width.shrink > 0 then\
        scaledWidth = scaledWidth + self.width.shrink * line.ratio\
      elseif line.ratio > 0 and self.width.stretch > 0 then\
        scaledWidth = scaledWidth + self.width.stretch * line.ratio\
      end    \
      typesetter.frame:normalize()\
\
      SILE.outputter.rule(typesetter.frame.state.cursorX, typesetter.frame.state.cursorY-(self.height.length), scaledWidth, self.height.length+self.depth)\
      typesetter.frame:moveX(scaledWidth)\
    end\
  });\
end, \"Creates a line of width <width> and height <height>\");\
\
SILE.registerCommand(\"underline\", function(options, content)\
  local hbox = SILE.Commands[\"hbox\"]({}, content)\
  local gl = SILE.length.new() - hbox.width\
  SILE.Commands[\"lower\"]({height = \"0.5pt\"}, function()\
    SILE.Commands[\"hrule\"]({width = gl.length, height = \"0.5pt\"})\
  end);\
  SILE.typesetter:pushGlue({width = hbox.width})\
\
end, \"Underlines some content (badly)\")"
, '@'..".\\packages\\rules.lua" ) )

package.preload[ "packages\\folio" ] = assert( (loadstring or load)(
"-- Folios class\
SILE.require(\"packages/counters\");\
SILE.scratch.counters.folio = { value= 1, display= \"arabic\" };\
\
SILE.registerCommand(\"folios\", function () SILE.scratch.counters.folio.off = false end)\
SILE.registerCommand(\"nofolios\", function () SILE.scratch.counters.folio.off = true end)\
SILE.registerCommand(\"nofoliosthispage\", function () SILE.scratch.counters.folio.off = 2 end)\
\
return {\
  init = function () end,\
  exports = {\
    outputFolio = function (this, frame) \
      if not frame then frame = \"folio\" end\
      if SILE.scratch.counters.folio.off then \
        if SILE.scratch.counters.folio.off == 2 then\
          SILE.scratch.counters.folio.off = false\
        end\
        SILE.scratch.counters.folio.value = SILE.scratch.counters.folio.value + 1\
        return \
      end\
      io.write(\"[\"..SILE.formatCounter(SILE.scratch.counters.folio)..\"] \");\
      local f = SILE.getFrame(\"folio\");\
      if (f) then\
        SILE.typesetNaturally(f, function()\
          SILE.settings.pushState()\
          SILE.settings.reset()\
          SILE.settings.set(\"typesetter.parfillskip\", SILE.nodefactory.zeroGlue)\
          SILE.call(\"hss\")\
          SILE.typesetter:typeset(SILE.formatCounter(SILE.scratch.counters.folio))\
          SILE.call(\"hss\")\
          SILE.settings.popState()\
        end)\
      end\
      SILE.scratch.counters.folio.value = SILE.scratch.counters.folio.value + 1\
    end\
  }\
}"
, '@'..".\\packages\\folio.lua" ) )

package.preload[ "core\\sile" ] = assert( (loadstring or load)(
"SILE = {}\
SILE.version = \"0.9.1\"\
SILE.utilities = require(\"core/utilities\")\
SU = SILE.utilities\
SILE.inputs = {}\
SILE.Commands = {};\
SILE.debugFlags = {}\
SILE.tokenizers = {}\
std = require(\"std\")\
\
SILE.documentState = std.object {};\
SILE.scratch = {};\
SILE.length = require(\"core/length\")\
require(\"core/parserbits\")\
require(\"core/measurements\")\
require(\"core/baseclass\")\
SILE.nodefactory = require(\"core/nodefactory\")\
require(\"core/settings\")\
require(\"core/inputs-texlike\")\
require(\"core/inputs-xml\")\
require(\"core/inputs-common\")\
require(\"core/papersizes\")\
require(\"core/colorparser\")\
require(\"core/pagebuilder\")\
require(\"core/typesetter\")\
require(\"core/hyphenator-liang\")\
require(\"core/languages\")\
require(\"core/font\")\
\
SILE.frameParser = require(\"core/frameparser\")\
SILE.linebreak = require(\"core/break\")\
\
require(\"core/frame\")\
\
SILE.init = function()\
  if not SILE.backend then\
    if pcall(function () require(\"justenoughharfbuzz\") end) then\
      SILE.backend = \"libtexpdf\"\
    elseif pcall(function() require(\"lgi\") end) then\
      SILE.backend = \"pangocairo\"\
    else\
      SU.error(\"Neither libtexpdf nor pangocairo backends available!\")\
    end\
  end\
  if SILE.backend == \"libtexpdf\" then\
    require(\"core/harfbuzz-shaper\")\
    require(\"core/libtexpdf-output\")\
  else\
    require(\"core/pango-shaper\")\
    require(\"core/cairo-output\")\
  end\
end\
\
SILE.require = function(d)\
  -- path?\
  return require(d)\
end\
\
SILE.parseArguments = function()\
local parser = std.optparse (\"This is SILE \"..SILE.version..[[\
\
 Usage: sile [options] file.sil|file.xml\
\
 The SILE typesetter.\
\
 Options:\
\
   -d, --debug=VALUE        debug SILE's operation\
   -b, --backend=VALUE      choose between libtexpdf/pangocairo backends\
   -I, --include=[FILE]     include a class or SILE file before \
                            processing main file\
       --version            display version information, then exit\
       --help               display this help, then exit\
]])\
\
  parser:on ('--', parser.finished)\
  _G.unparsed, _G.opts = parser:parse(_G.arg)\
  SILE.debugFlags = {}\
  if opts.debug then\
    for k,v in ipairs(std.string.split(opts.debug, \",\")) do SILE.debugFlags[v] = 1 end\
  end\
  if opts.backend then\
    SILE.backend = opts.backend\
  end\
  if opts.include then\
    SILE.preamble = opts.include\
  end\
end\
\
function SILE.initRepl ()\
  SILE._repl          = require 'repl.console'\
  local has_linenoise = pcall(require, 'linenoise')\
\
  if has_linenoise then\
    SILE._repl:loadplugin 'linenoise'\
  else\
    -- XXX check that we're not receiving input from a non-tty\
    local has_rlwrap = os.execute('which rlwrap >/dev/null 2>/dev/null') == 0\
\
    if has_rlwrap and not os.getenv 'LUA_REPL_RLWRAP' then\
      local command = 'LUA_REPL_RLWRAP=1 rlwrap'\
      local index = 0\
      while arg[index - 1] do\
        index = index - 1\
      end\
      while arg[index] do\
        command = string.format('%s %q', command, arg[index])\
        index = index + 1\
      end\
      os.execute(command)\
      return\
    end\
  end\
\
  SILE._repl:loadplugin 'history'\
  SILE._repl:loadplugin 'completion'\
  SILE._repl:loadplugin 'autoreturn'\
  SILE._repl:loadplugin 'rcfile'\
end\
\
function SILE.repl()\
  if _VERSION:match(\"5.2\") then\
    setfenv = function(f, t)\
        f = (type(f) == 'function' and f or debug.getinfo(f + 1, 'f').func)\
        local name\
        local up = 0\
        repeat\
            up = up + 1\
            name = debug.getupvalue(f, up)\
        until name == '_ENV' or name == nil\
        if name then\
    debug.upvaluejoin(f, up, function() return t end, 1) -- use unique upvalue, set it to f\
        end\
    end\
  end\
  if not SILE._repl then SILE.initRepl() end\
  SILE._repl:run()\
end\
\
function SILE.readFile(fn)\
  SILE.currentlyProcessingFile = fn\
  fn = SILE.resolveFile(fn)\
  if not fn then\
    SU.error(\"Could not find file\")\
  end\
  local file, err = io.open(fn)\
  if not file then\
    print(\"Could not open \"..fn..\": \"..err)\
    return\
  end\
  io.write(\"<\"..fn..\">\")\
  -- Sniff first few bytes\
  local sniff = file:read(\"*l\") or \"\"\
  file:seek(\"set\", 0)\
  if sniff:find(\"<\") then\
    SILE.inputs.XML.process(fn)\
  else\
    SILE.inputs.TeXlike.process(fn)\
  end\
end\
\
local function file_exists(name)\
   local f=io.open(name,\"r\")\
   if f~=nil then io.close(f) return true else return false end\
end\
\
function SILE.resolveFile(fn)\
  if file_exists(fn) then return fn end\
  if file_exists(fn..\".sil\") then return fn..\".sil\" end\
\
  for k in SU.gtoke(os.getenv(\"SILE_PATH\"), \";\") do\
    if k.string then\
      local f = std.io.catfile(k.string, fn)\
      if file_exists(f) then return f end\
      if file_exists(f..\".sil\") then return f..\".sil\" end\
    end\
  end\
end\
\
function SILE.call(cmd,options, content)\
  SILE.currentCommand = content\
  if not SILE.Commands[cmd] then SU.error(\"Unknown command \"..cmd) end\
  SILE.Commands[cmd](options or {}, content or {})\
end\
\
return SILE\
"
, '@'..".\\core\\sile.lua" ) )

package.preload[ "lua-libraries\\imagesize\\format\\png" ] = assert( (loadstring or load)(
"local Util = require \"imagesize.util\"\
\
local MIME_TYPE=  \"image/png\"\
\
-- Re-written and tested by tmetro@vl.com\
local function size (stream, options)\
    -- Offset to first Chunk Type code = 8-byte ident + 4-byte chunk length + 1\
    local offset = 12\
    local length = 4\
\
    local ok, err = stream:seek(\"set\", offset)\
    if not ok then return nil, nil, \"error seeking in PNG file: \" .. err end\
\
    local buf = stream:read(length)\
    if not buf or buf:len() ~= length then\
        return nil, nil, \"PNG file not big enough to contain header data\"\
    end\
\
    if buf == \"IHDR\" then\
        -- IHDR = Image Header\
        length = 8\
        buf = stream:read(length)\
        if not buf or buf:len() ~= length then\
            return nil, nil, \"PNG file not big enough to contain header data\"\
        end\
        return Util.get_uint32_be(buf, 1), Util.get_uint32_be(buf, 5), MIME_TYPE\
    else\
        return nil, nil, \"can't find header data in PNG file\"\
    end\
end\
\
return size\
-- vi:ts=4 sw=4 expandtab\
"
, '@'..".\\lua-libraries\\imagesize\\format\\png.lua" ) )

package.preload[ "lua-libraries\\imagesize\\format\\pnm" ] = assert( (loadstring or load)(
"-- Gets data on the PPM/PGM/PBM family.\
-- Contributed by Carsten Dominik <dominik@strw.LeidenUniv.nl>\
local function size (stream, options)\
    local header = stream:read(1024)\
    if not header or header:len() < 9 then\
        return nil, nil, \"PNM file header missing\"\
    end\
\
    local without_comments = header:gsub(\"\\n#[^\\n]*\", \"\\n\")\
\
    -- PNM file of some sort\
    local _, _, n, x, y = without_comments:find(\"^(P[1-7])%s+(%d+)%s+(%d+)\")\
    if not n then return nil, nil, \"bad PNM header\" end\
    x, y = tonumber(x), tonumber(y)\
\
    if n == \"P1\" or n == \"P4\" then\
        return x, y, \"image/x-portable-bitmap\"\
    elseif n == \"P2\" or n == \"P5\" then\
        return x, y, \"image/x-portable-graymap\"\
    elseif n == \"P3\" or n == \"P6\" then\
        return x, y, \"image/x-portable-pixmap\"\
    elseif n == \"P7\" then\
        -- John Bradley's XV thumbnail pics (thanks to inwap@jomis.Tymnet.COM)\
        _, _, x, y = header:find(\"IMGINFO:(%d+)x(%d+)\")\
        if not x then return nil, nil, \"bad XV thumbnail header\" end\
        return tonumber(x), tonumber(y), \"image/x-xv-thumbnail\"\
    else\
        assert(false, \"this should never happen\")\
    end\
end\
\
return size\
-- vi:ts=4 sw=4 expandtab\
"
, '@'..".\\lua-libraries\\imagesize\\format\\pnm.lua" ) )

package.preload[ "core\\harfbuzz-shaper" ] = assert( (loadstring or load)(
"\
if not SILE.shapers then SILE.shapers = { } end\
SILE.shapers.harfbuzz = {}\
\
SILE.tokenizers.default = function(text)\
  return SU.gtoke(text, SILE.settings.get(\"shaper.spacepattern\"))\
end\
\
SILE.settings.declare({\
  name = \"shaper.spacepattern\", \
  type = \"string\",\
  default = \"%s+\",\
  help = \"The Lua pattern used for splitting words on spaces\"\
})\
\
SILE.shapers.harfbuzz = require(\"justenoughharfbuzz\")\
\
local debugging_face = function(opts)\
  local face = SILE.shapers.harfbuzz._face(opts)\
  if not face then \
    SU.error(\"Could not find requested font \"..opts..\" or any suitable substitutes\")\
  end\
  SU.debug(\"fonts\", \"Resolved font family \"..opts.font..\" -> \"..face.filename)\
  return face\
end\
\
local function doShape (s, options)\
  local face = SILE.font.cache(options, debugging_face)\
  if not face then \
    SU.error(\"Could not find requested font \"..options..\" or any suitable substitutes\")\
  end\
  return { SILE.shapers.harfbuzz._shape(s,face.face,options.script, options.direction,options.language, options.size, options.features) }\
end\
\
local function measureSpace( options )\
  local ss = SILE.settings.get(\"document.spaceskip\") \
  if ss then return ss end\
  local i = doShape(\" \", options)\
  if not i[1] then return SILE.length.new() end\
  local spacewidth = i[1].width\
  return SILE.length.new({ length = spacewidth * 1.2, shrink = spacewidth/3, stretch = spacewidth /2 }) -- XXX\
end\
\
function SILE.shapers.harfbuzz.measureDim(char)\
  local options = SILE.font.loadDefaults({})\
  local i = doShape(char, options)\
  if char == \"x\" then \
    return i[1].height\
  else\
    return i[1].width\
  end\
end \
\
function SILE.shapers.harfbuzz.shape(text, options)\
  if not options then options = {} end\
  options = SILE.font.loadDefaults(options)\
  -- Cache the font\
  face = SILE.font.cache(options, SILE.shapers.harfbuzz._face)\
  local nodes = {}\
  local gluewidth = measureSpace(options)\
\
  -- Do language-specific tokenization\
  pcall(function () SILE.require(\"languages/\"..options.language) end)\
  local tokenizer = SILE.tokenizers[options.language]\
  if not tokenizer then\
    tokenizer = SILE.tokenizers.default\
  end\
\
  for token in tokenizer(text) do\
    if (token.separator) then\
      table.insert(nodes, SILE.nodefactory.newGlue({ width = gluewidth }))\
    elseif (token.node) then\
      table.insert(nodes, token.node)\
    else\
      local items = doShape(token.string, options)\
      local nnode = {}\
\
      local glyphs = {}\
      local totalWidth = 0\
      local depth = 0\
      local height = 0\
      local glyphNames = {}\
\
      for i = 1,#items do local glyph = items[i]        \
        if glyph.depth > depth then depth = glyph.depth end\
        if glyph.height > height then height = glyph.height end\
        totalWidth = totalWidth + glyph.width\
        table.insert(glyphs, glyph.codepoint)\
        table.insert(glyphNames, glyph.name)\
      end\
\
      table.insert(nnode, SILE.nodefactory.newHbox({ \
        depth = depth,\
        height= height,\
        width = SILE.length.new({ length = totalWidth }),\
        value = {glyphString = glyphs, glyphNames = glyphNames, options = options, text = token.string[i] }\
      }))\
\
      table.insert(nodes, SILE.nodefactory.newNnode({ \
        nodes = nnode,\
        text = token.string,\
        options = options,\
        language = options.language\
      }))\
    end\
  end\
  return nodes\
end\
\
SILE.shaper = SILE.shapers.harfbuzz\
"
, '@'..".\\core\\harfbuzz-shaper.lua" ) )

package.preload[ "classes\\plain" ] = assert( (loadstring or load)(
"\
plain = SILE.baseClass { id = \"plain\" }\
\
plain:declareFrame(\"content\",     {left = \"5%\",  right = \"95%\",  top = \"5%\",  bottom = \"90%\" });\
plain:declareFrame(\"folio\", {left = \"5%\",  right = \"95%\",  top = \"92%\", bottom = \"97%\" });\
\
plain.pageTemplate.firstContentFrame = plain.pageTemplate.frames[\"content\"];\
plain:loadPackage(\"folio\");\
\
plain.endPage = function(self)\
  plain:outputFolio()\
  return SILE.baseClass.endPage(self)\
end\
\
SILE.registerCommand(\"noindent\", function ( options, content )\
  SILE.settings.set(\"current.parindent\", SILE.nodefactory.zeroGlue)\
  SILE.process(content)\
end, \"Do not add an indent to the start of this paragraph\")\
\
SILE.registerCommand(\"indent\", function ( options, content )\
  SILE.settings.set(\"current.parindent\", SILE.settings.get(\"document.parindent\"))\
  SILE.process(content)\
end, \"Do add an indent to the start of this paragraph, even if previously told otherwise\")\
\
local skips = { small= \"3pt plus 1pt minus 1pt\", \
      med = \"6pt plus 2pt minus 2pt\",\
      big = \"12pt plus 4pt minus 4pt\"}\
\
for k,v in pairs(skips) do\
  SILE.settings.declare({ \
    name = \"plain.\"..k..\"skipamount\", type=\"VGlue\", default = SILE.nodefactory.newVglue(v),\
    help = \"The amount of a \\\\\"..k..\"skip\"})\
  SILE.registerCommand(k..\"skip\", function ( options, content )\
    SILE.typesetter:leaveHmode();    \
    SILE.typesetter:pushVglue(SILE.settings.get(\"plain.\"..k..\"skipamount\"))\
  end, \"Skip vertically by a \"..k..\" amount\")\
end\
\
SILE.registerCommand(\"hfill\", function(o,c) SILE.typesetter:pushGlue(SILE.nodefactory.hfillGlue) end, \"Add a huge horizontal glue\")\
SILE.registerCommand(\"vfill\", function(o,c) \
  SILE.typesetter:leaveHmode()\
  SILE.typesetter:pushVglue(SILE.nodefactory.vfillGlue) end, \"Add huge vertical glue\")\
SILE.registerCommand(\"hss\", function(o,c) \
  SILE.typesetter:initline()\
  SILE.typesetter:pushGlue(SILE.nodefactory.hssGlue)\
  table.insert(SILE.typesetter.state.nodes, SILE.nodefactory.zeroHbox) \
end, \"Add glue which stretches and shrinks horizontally (good for centering)\")\
SILE.registerCommand(\"vss\", function(o,c) SILE.typesetter:pushVglue(SILE.nodefactory.vssGlue) end, \"Add glue which stretches and shrinks vertically\")\
\
plain.registerCommands = function()\
  SILE.baseClass.registerCommands()\
  SILE.doTexlike([[\\define[command=thinspace]{\\glue[width=0.16667em]}%\
\\define[command=negthinspace]{\\glue[width=-0.16667em]}%\
\\define[command=enspace]{\\glue[width=0.5em]}%\
\\define[command=enskip]{\\enspace}%\
\\define[command=quad]{\\glue[width=1em]}%\
\\define[command=qquad]{\\glue[width=2em]}%\
\\define[command=slash]{/\\penalty[penalty=50]}%\
\\define[command=break]{\\penalty[penalty=-10000]}%\
\\define[command=framebreak]{\\break}%\
\\define[command=pagebreak]{\\penalty[penalty=-20000]}%\
\\define[command=nobreak]{\\penalty[penalty=10000]}%\
\\define[command=novbreak]{\\penalty[penalty=10000,vertical=1]}%\
\\define[command=allowbreak]{\\penalty[penalty=0]}%\
\\define[command=filbreak]{\\vfill\\penalty[penalty=-200]}%\
\\define[command=goodbreak]{\\penalty[penalty=-500]}%\
\\define[command=eject]{\\par\\break}%\
\\define[command=supereject]{\\par\\penalty[penalty=-20000]}%\
\\define[command=justified]{\\set[parameter=document.rskip,value=0]\\set[parameter=document.spaceskip]}%\
\\define[command=rightalign]{\\set[parameter=typesetter.parfillskip,value=0]{\\hfill\\process\\par}}%\
\\define[command=em]{\\font[style=italic]{\\process}}%\
\\define[command=nohyphenation]{\\font[language=xx]{\\process}}%\
\\define[command=raggedright]{\\ragged[right=true]{\\process}}%\
\\define[command=raggedleft]{\\ragged[left=true]{\\process}}%\
\\define[command=center]{\\ragged[left=true,right=true]{\\process}}%\
]])\
end\
\
SILE.registerCommand(\"{\", function (o,c) SILE.typesetter:typeset(\"{\") end)\
SILE.registerCommand(\"}\", function (o,c) SILE.typesetter:typeset(\"}\") end)\
SILE.registerCommand(\"%\", function (o,c) SILE.typesetter:typeset(\"%\") end)\
SILE.registerCommand(\"\\\\\", function (o,c) SILE.typesetter:typeset(\"\\\\\") end)\
\
SILE.registerCommand(\"ragged\", function(options,c)\
  SILE.settings.temporarily(function()\
    if options.left then SILE.settings.set(\"document.lskip\", SILE.nodefactory.hfillGlue) end\
    if options.right then SILE.settings.set(\"document.rskip\", SILE.nodefactory.hfillGlue) end\
    SILE.settings.set(\"typesetter.parfillskip\", SILE.nodefactory.zeroGlue)\
    SILE.settings.set(\"document.parindent\", SILE.nodefactory.zeroGlue)\
    SILE.settings.set(\"current.parindent\", SILE.nodefactory.zeroGlue)\
    -- SILE.settings.set(\"document.spaceskip\", SILE.length.new({ length = SILE.shaper.measureDim(\" \") }))\
    SILE.process(c)\
    SILE.call(\"par\")\
  end)\
end)\
SILE.registerCommand(\"hbox\", function (o,c)\
  local index = #(SILE.typesetter.state.nodes)+1\
  local recentContribution = {}\
  SILE.process(c)\
  local l = SILE.length.new()\
  local h,d = 0,0\
  for i = index, #(SILE.typesetter.state.nodes) do\
    local node = SILE.typesetter.state.nodes[i]\
    table.insert(recentContribution, node)\
    l = l + node.width\
    h = node.height > h and node.height or h\
    d = node.depth > d and node.depth or d\
    SILE.typesetter.state.nodes[i] = nil\
  end\
  local hbox = SILE.nodefactory.newHbox({\
    height = h,\
    width = l,\
    depth = d,\
    value = recentContribution,\
    outputYourself = function (self, typesetter, line)\
      for i = 1, #(self.value) do local node = self.value[i]\
        node:outputYourself(typesetter, line)\
      end\
    end\
  })\
  table.insert(SILE.typesetter.state.nodes, hbox)\
  return hbox\
end, \"Compiles all the enclosed horizontal-mode material into a single hbox\")\
\
SILE.registerCommand(\"vbox\", function (options,c)\
  local vbox\
  SILE.settings.temporarily(function()\
    if (options.width) then SILE.settings.set(\"typesetter.breakwidth\", options.width) end\
    SILE.typesetter:pushState()\
    SILE.process(c)\
    SILE.typesetter:leaveHmode()\
    vbox = SILE.pagebuilder.collateVboxes(SILE.typesetter.state.outputQueue)\
    SILE.typesetter:popState()    \
  end)\
  return vbox\
end, \"Compiles all the enclosed horizontal-mode material into a single hbox\")\
\
return plain;"
, '@'..".\\classes\\plain.lua" ) )

package.preload[ "packages\\balanced-frames" ] = assert( (loadstring or load)(
"local BALANCE_PENALTY = -17777\
\
SILE.registerCommand(\"balancecolumns\", function(o,c)\
  SILE.typesetter:leaveHmode()\
  SILE.call(\"penalty\", {penalty = BALANCE_PENALTY})\
end)\
\
SILE.typesetter.pageBuilder = function (self, independent)\
  local frame = self.frame\
  if not (frame.balanced == true) then return SILE.defaultTypesetter.pageBuilder(self, independent) end\
\
  local colCount = 0\
  local target = SILE.length.new({  })\
  while frame and frame.balanced == true do\
    target = target + frame:height() \
    colCount = colCount + 1\
    if frame.next then frame = SILE.getFrame(frame.next) else break end\
  end\
\
  -- Really, try and avoid doing anything, where possible.\
  if colCount == 1 then return SILE.defaultTypesetter.pageBuilder(self, independent) end\
  -- If the total amount of stuff on the output list is greater then the total\
  -- of frame space on the page, and there are no magic requests to balance the\
  -- columns, then we have a full page. Just send it out normally.\
  local q = self.state.outputQueue\
  local totalHeight = 0\
  local mustBalance = 0\
  for i=1,#q do \
    totalHeight = totalHeight + q[i].height + q[i].depth\
    if q[i]:isPenalty() and q[i].penalty <= BALANCE_PENALTY then\
      mustBalance = i\
      break\
    end\
  end\
  if totalHeight > target and mustBalance == 0 and not independent then\
    return SILE.defaultTypesetter.pageBuilder(self, independent)\
  end\
\
  -- Have we been explicitly asked to find a pagebreak at this point?\
  -- If not, don't bother\
  if mustBalance == 0 and not independent then return false end\
  SU.debug(\"balancer\", \"Balancing \"..totalHeight..\" of material over \" ..colCount..\" frames (total of \"..target..\"pts)\")\
  SU.debug(\"balancer\", \"Must balance because mustBalance=\"..mustBalance..\" and independent = \"..independent)\
  -- OK. Now we have to balance the frames. We are going to cheat and\
  -- adjust the height of each frame to be an appropriate fraction of\
  -- the content height\
  local frame = self.frame\
  while frame and frame.balanced == true do\
    frame:relax(\"bottom\")\
    frame:constrain(\"height\", totalHeight.length / colCount + SILE.toPoints(\"3ex\"))\
    if frame.next then frame = SILE.getFrame(frame.next) else break end\
  end\
  self.state.lastPenalty = 0\
  while self.frame and self.frame.balanced do\
    SILE.defaultTypesetter.pageBuilder(self,true)\
    if self.frame.next and SILE.getFrame(self.frame.next).balanced == true then\
      self:initFrame(SILE.getFrame(self.frame.next))\
    else\
      break -- Break early, because when we return\
    end\
  end\
  SU.debug(\"balancer\", \"Finished this balance, frame id is now \"..self.frame:toString())\
  -- SILE.typesetter:debugState()\
  -- We're done.\
  return true\
end"
, '@'..".\\packages\\balanced-frames.lua" ) )

package.preload[ "lua-libraries\\imagesize\\format\\xcf" ] = assert( (loadstring or load)(
"local Util = require \"imagesize.util\"\
\
local MIME_TYPE=  \"application/x-xcf\"\
\
-- Based on the draft specification here:\
--    http://svn.gnome.org/viewvc/gimp/trunk/devel-docs/xcf.txt?view=markup\
local function size (stream, options)\
    local length = 22\
    local buf = stream:read(length)\
    if not buf or buf:len() ~= length then\
        return nil, nil, \"XCF file header incomplete\"\
    end\
\
    return Util.get_uint32_be(buf, 15), Util.get_uint32_be(buf, 19), MIME_TYPE\
end\
\
return size\
-- vi:ts=4 sw=4 expandtab\
"
, '@'..".\\lua-libraries\\imagesize\\format\\xcf.lua" ) )

package.preload[ "lua-libraries\\std\\container" ] = assert( (loadstring or load)(
"--[[--\
 Container object.\
\
 A container is a @{std.object} with no methods.  It's functionality is\
 instead defined by its *meta*methods.\
\
 Where an Object uses the `\\_\\_index` metatable entry to hold object\
 methods, a Container stores its contents using `\\_\\_index`, preventing\
 it from having methods in there too.\
\
 Although there are no actual methods, Containers are free to use\
 metamethods (`\\_\\_index`, `\\_\\_sub`, etc) and, like Objects, can supply\
 module functions by listing them in `\\_functions`.  Also, since a\
 @{std.container} is a @{std.object}, it can be passed to the\
 @{std.object} module functions, or anywhere else a @{std.object} is\
 expected.\
\
 Container derived objects returned directly from a `require` statement\
 may also provide module functions, which can be called only from the\
 initial prototype object returned by `require`, but are **not** passed\
 on to derived objects during cloning:\
\
      > Container = require \"std.container\"\
      > x = Container {}\
      > = Container.prototype (x)\
      Object\
      > = x.prototype (o)\
      stdin:1: attempt to call field 'prototype' (a nil value)\
      ...\
\
 To add functions like this to your own prototype objects, pass a table\
 of the module functions in the `_functions` private field before\
 cloning, and those functions will not be inherited by clones.\
\
      > Container = require \"std.container\"\
      > Graph = Container {\
      >>   _type = \"Graph\",\
      >>   _functions = {\
      >>     nodes = function (graph)\
      >>       local n = 0\
      >>       for _ in pairs (graph) do n = n + 1 end\
      >>       return n\
      >>     end,\
      >>   },\
      >> }\
      > g = Graph { \"node1\", \"node2\" }\
      > = Graph.nodes (g)\
      2\
      > = g.nodes\
      nil\
\
 When making your own prototypes, start from @{std.container} if you\
 want to access the contents of your objects with the `[]` operator, or\
 @{std.object} if you want to access the functionality of your objects\
 with named object methods.\
\
 @classmod std.container\
]]\
\
\
local base = require \"std.base\"\
\
local clone, merge = base.clone, base.merge\
\
\
local ModuleFunction = {\
  __tostring = function (self) return tostring (self.call) end,\
  __call     = function (self, ...) return self.call (...) end,\
}\
\
\
--- Mark a function not to be copied into clones.\
--\
-- It responds to `type` with `table`, but otherwise behaves like a\
-- regular function.  Marking uncopied module functions in-situ like this\
-- (as opposed to doing book keeping in the metatable) means that we\
-- don't have to create a new metatable with the book keeping removed for\
-- cloned objects, we can just share our existing metatable directly.\
-- @func fn a function\
-- @treturn functable a callable functable for `fn`\
local function modulefunction (fn)\
  return setmetatable ({_type = \"modulefunction\", call = fn}, ModuleFunction)\
end\
\
\
--- Return `obj` with references to the fields of `src` merged in.\
-- @static\
-- @tparam table obj destination object\
-- @tparam table src fields to copy int clone\
-- @tparam[opt={}] table map `{old_key=new_key, ...}`\
-- @treturn table `obj` with non-private fields from `src` merged, and\
--   a metatable with private fields (if any) merged, both sets of keys\
--   renamed according to `map`\
-- @see std.object.mapfields\
local function mapfields (obj, src, map)\
  map = map or {}\
  local mt = getmetatable (obj) or {}\
\
  -- Map key pairs.\
  for k, v in pairs (src) do\
    local key, dst = map[k] or k, obj\
    if type (key) == \"string\" and key:sub (1, 1) == \"_\" then\
      dst = mt\
    end\
    dst[key] = v\
  end\
\
  -- Quicker to remove this after copying fields than test for it\
  -- it on every iteration above.\
  mt._functions = nil\
\
  -- Inject module functions.\
  for k, v in pairs (src._functions or {}) do\
    obj[k] = modulefunction (v)\
  end\
\
  -- Only set non-empty metatable.\
  if next (mt) then\
    setmetatable (obj, mt)\
  end\
  return obj\
end\
\
\
-- Type of this container.\
-- @static\
-- @tparam  std.container o  an container\
-- @treturn string        type of the container\
-- @see std.object.prototype\
local function prototype (o)\
  return (getmetatable (o) or {})._type or type (o)\
end\
\
\
--- Container prototype.\
-- @table std.container\
-- @string[opt=\"Container\"] _type type of Container, returned by\
--   @{std.object.prototype}\
-- @tfield table|function _init a table of field names, or\
--   initialisation function, used by @{__call}\
-- @tfield nil|table _functions a table of module functions not copied\
--   by @{std.object.__call}\
local metatable = {\
  _type = \"Container\",\
  _init = {},\
\
  --- Return a clone of this container.\
  -- @function __call\
  -- @param x a table if prototype `_init` is a table, otherwise first\
  --   argument for a function type `_init`\
  -- @param ... any additional arguments for `_init`\
  -- @treturn std.container a clone of the called container.\
  -- @see std.object:__call\
  __call = function (self, x, ...)\
    local mt     = getmetatable (self)\
    local obj_mt = mt\
    local obj    = {}\
\
    -- This is the slowest part of cloning for any objects that have\
    -- a lot of fields to test and copy.  If you need to clone a lot of\
    -- objects from a prototype with several module functions, it's much\
    -- faster to clone objects from each other than the prototype!\
    for k, v in pairs (self) do\
      if type (v) ~= \"table\" or v._type ~= \"modulefunction\" then\
\9obj[k] = v\
      end\
    end\
\
    if type (mt._init) == \"table\" then\
      obj = (self.mapfields or mapfields) (obj, x, mt._init)\
    else\
      obj = mt._init (obj, x, ...)\
    end\
\
    -- If a metatable was set, then merge our fields and use it.\
    if next (getmetatable (obj) or {}) then\
      obj_mt = merge (clone (mt), getmetatable (obj))\
\
      -- Merge object methods.\
      if type (obj_mt.__index) == \"table\" and\
        type ((mt or {}).__index) == \"table\"\
      then\
\9obj_mt.__index = merge (clone (mt.__index), obj_mt.__index)\
      end\
    end\
\
    return setmetatable (obj, obj_mt)\
  end,\
\
\
  --- Return a string representation of this container.\
  -- @function __tostring\
  -- @treturn string        stringified container representation\
  -- @see std.object.__tostring\
  __tostring = function (self)\
    local totable = getmetatable (self).__totable\
    local array = clone (totable (self), \"nometa\")\
    local other = clone (array, \"nometa\")\
    local s = \"\"\
    if #other > 0 then\
      for i in ipairs (other) do other[i] = nil end\
    end\
    for k in pairs (other) do array[k] = nil end\
    for i, v in ipairs (array) do array[i] = tostring (v) end\
\
    local keys, dict = {}, {}\
    for k in pairs (other) do table.insert (keys, k) end\
    table.sort (keys, function (a, b) return tostring (a) < tostring (b) end)\
    for _, k in ipairs (keys) do\
      table.insert (dict, tostring (k) .. \"=\" .. tostring (other[k]))\
    end\
\
    if #array > 0 then\
      s = s .. table.concat (array, \", \")\
      if next (dict) ~= nil then s = s .. \"; \" end\
    end\
    if #dict > 0 then\
      s = s .. table.concat (dict, \", \")\
    end\
\
    return prototype (self) .. \" {\" .. s .. \"}\"\
  end,\
\
\
  --- Return a table representation of this container.\
  -- @function __totable\
  -- @treturn table a shallow copy of non-private container fields\
  -- @see std.object:__totable\
  __totable  = function (self)\
    local t = {}\
    for k, v in pairs (self) do\
      if type (k) ~= \"string\" or k:sub (1, 1) ~= \"_\" then\
\9t[k] = v\
      end\
    end\
    return t\
  end,\
}\
\
return setmetatable ({\
\
  -- Normally, these are set and wrapped automatically during cloning.\
  -- But, we have to bootstrap the first object, so in this one instance\
  -- it has to be done manually.\
\
  mapfields = modulefunction (mapfields),\
  prototype = modulefunction (prototype),\
}, metatable)\
"
, '@'..".\\lua-libraries\\std\\container.lua" ) )

package.preload[ "core\\papersizes" ] = assert( (loadstring or load)(
"SILE.paperSizes = { a4 = { 595.275597, 841.8897728999999 },\
  letter = { 612, 792 },\
  note = { 612, 792 },\
  legal = { 612, 1008 },\
  executive = { 522, 756 },\
  halfletter = { 396, 612 },\
  halfexecutive = { 378, 522 },\
  statement = { 396, 612 },\
  folio = { 612, 936 },\
  quarto = { 610, 780 },\
  ledger = { 1224, 792 },\
  tabloid = { 792, 1224 },\
  a0 = { 2383.9370337, 3370.3937373 },\
  a1 = { 1683.7795457999998, 2383.9370337 },\
  a2 = { 1190.551194, 1683.7795457999998 },\
  a3 = { 841.8897728999999, 1190.551194 },\
  a5 = { 419.52756359999995, 595.275597 },\
  a6 = { 297.6377985, 419.52756359999995 },\
  a7 = { 209.76378179999998, 297.6377985 },\
  a8 = { 147.40157639999998, 209.76378179999998 },\
  a9 = { 104.88189089999999, 147.40157639999998 },\
  a10 = { 73.70078819999999, 104.88189089999999 },\
  b0 = { 2834.6457, 4008.1890197999996 },\
  b1 = { 2004.0945098999998, 2834.6457 },\
  b2 = { 1417.32285, 2004.0945098999998 },\
  b3 = { 1000.6299320999999, 1417.32285 },\
  b4 = { 708.661425, 1000.6299320999999 },\
  b5 = { 498.89764319999995, 708.661425 },\
  b6 = { 354.3307125, 498.89764319999995 },\
  b7 = { 249.44882159999997, 354.3307125 },\
  b8 = { 175.7480334, 249.44882159999997 },\
  b9 = { 124.72441079999999, 175.7480334 },\
  b10 = { 87.8740167, 124.72441079999999 },\
  c2 = { 1298.2677305999998, 1836.8504136 },\
  c3 = { 918.4252068, 1298.2677305999998 },\
  c4 = { 649.1338652999999, 1003.4645777999999 },\
  c5 = { 459.2126034, 649.1338652999999 },\
  c6 = { 323.1496098, 459.2126034 },\
  c7 = { 229.6063017, 323.1496098 },\
  c8 = { 161.5748049, 229.6063017 },\
  DL = { 311.81102699999997, 623.6220539999999 },\
  Comm10 = { 297, 684 },\
  Monarch = { 279, 540 },\
  archE = { 2592, 3456 },\
  archD = { 1728, 2592 },\
  archC = { 1296, 1728 },\
  archB = { 864, 1296 },\
  archA = { 648, 864 },\
  flsa = { 612, 936 },\
  flse = { 612, 936 },\
  csheet = { 1224, 1584 },\
  dsheet = { 1584, 2448 },\
  esheet = { 2448, 3168 }\
}"
, '@'..".\\core\\papersizes.lua" ) )

package.preload[ "lua-libraries\\imagesize\\format\\tiff" ] = assert( (loadstring or load)(
"local Util = require \"imagesize.util\"\
\
local MIME_TYPE = \"image/tiff\"\
\
local function _get_uint8 (s, p) return s:byte(p) end\
\
local function _get_int8 (s, p)\
    local n = s:byte(p)\
    return (n >= 128) and -(256 - n) or n\
end\
\
-- Contributed by Cloyce Spradling <cloyce@headgear.org>\
local function size (stream, options)\
    -- Figure out how to read numbers, in little or big-endian format.\
    local get_uint16, get_uint32 = Util.get_uint16_be, Util.get_uint32_be\
    local header = stream:read(4)\
    assert(header and header:len() == 4)    -- already checked magic number\
    if header:find(\"^II\") then\
        get_uint16, get_uint32 = Util.get_uint16_le, Util.get_uint32_le\
    end\
\
    -- Set up an association between data types and their corresponding\
    -- pack/unpack specification.  Don't take any special pains to deal with\
    -- signed numbers; treat them as unsigned because none of the image\
    -- dimensions should ever be negative.  (I hope.)\
    local packspec = {\
        _get_uint8, -- BYTE (8-bit unsigned integer)\
        nil,        -- ASCII\
        get_uint16, -- SHORT (16-bit unsigned integer)\
        get_uint32, -- LONG (32-bit unsigned integer)\
        nil,        -- RATIONAL\
        _get_int8,  -- SBYTE (8-bit signed integer)\
        nil,        -- UNDEFINED\
        get_uint16, -- SSHORT (16-bit unsigned integer)\
        get_uint32, -- SLONG (32-bit unsigned integer)\
    }\
\
    -- Get offset to IFD.\
    header = stream:read(4)\
    if not header or header:len() ~= 4 then\
        return nil, nil, \"incomplete header in TIFF file\"\
    end\
    local offset = get_uint32(header, 1)\
\
    -- Get number of directory entries\
    local ok, err = stream:seek(\"set\", offset)\
    if not ok then\
        return nil, nil, \"error seeking to TIFF number of dir entries: \" .. err\
    end\
    local ifd = stream:read(2)\
    local num_dirent = get_uint16(ifd, 1)   -- Make it useful\
\
    offset = offset + 2\
    num_dirent = offset + (num_dirent * 12) -- Calc. maximum offset of IFD\
\
    -- Do all the work\
    local x, y\
    while not x or not y do\
        ok, err = stream:seek(\"set\", offset)\
        if not ok then\
            return nil, nil, \"error seeking to TIFF directory entry: \" .. err\
        end\
\
        ifd = stream:read(12)\
        if not ifd or ifd == \"\" or offset > num_dirent then break end\
        if ifd:len() ~= 12 then\
            return nil, nil, \"incomplete directory entry in TIFF file\"\
        end\
        offset = offset + 12\
\
        local tag = get_uint16(ifd, 1)  -- ...and decode its tag\
        local typ = get_uint16(ifd, 3)  -- ...and the data type\
\
        -- Check the type for sanity.\
        if packspec[typ] then\
            if tag == 0x0100 then       -- ImageWidth (x)\
                -- Decode the value\
                x = packspec[typ](ifd, 9)\
            elseif tag == 0x0101 then   -- ImageLength (y)\
                -- Decode the value\
                y = packspec[typ](ifd, 9)\
            end\
        end\
    end\
\
    -- Decide if we were successful or not\
    if x and y then\
        return x, y, MIME_TYPE\
    else\
        local id = \"\"\
        if not x then id = \"ImageWidth \" end\
        if not y then\
            if id ~= \"\" then id = id .. \"and \" end\
            id = id .. \"ImageLength \"\
        end\
        return nil, nil, id .. \"tag(s) could not be found\"\
    end\
end\
\
return size\
-- vi:ts=4 sw=4 expandtab\
"
, '@'..".\\lua-libraries\\imagesize\\format\\tiff.lua" ) )

package.preload[ "core\\pango-shaper" ] = assert( (loadstring or load)(
"local lgi = require(\"lgi\");\
require \"string\"\
local pango = lgi.Pango\
local fm = lgi.PangoCairo.FontMap.get_default()\
local pango_context = lgi.Pango.FontMap.create_context(fm)\
\
if not SILE.shapers then SILE.shapers = { } end\
SILE.shapers.pango = {}\
\
SILE.settings.declare({\
  name = \"shaper.spacepattern\", \
  type = \"string\",\
  default = \"%s+\",\
  help = \"The Lua pattern used for splitting words on spaces\"\
})\
\
function itemize(s, pal)\
  return pango.itemize(pango_context, s, 0, string.len(s), pal, nil)\
end\
\
function _shape(s, item)\
  local offset = item.offset\
  local length = item.length\
  local analysis = item.analysis\
  local pgs = pango.GlyphString.new()\
  pango.shape(string.sub(s,1+offset), length, analysis, pgs)\
  return pgs\
end\
\
local palcache = {}\
local spacecache = {}\
local function getPal(options)\
  if options.pal then\
    pal = options.pal\
    return pal\
  end\
  local p = std.string.pickle(options)\
  if palcache[p] then return palcache[p]\
  else\
    pal = pango.AttrList.new();\
    if options.language then pal:insert(pango.Attribute.language_new(pango.Language.from_string(options.language))) end\
    if options.font then pal:insert(pango.Attribute.family_new(options.font)) end\
    if options.weight then pal:insert(pango.Attribute.weight_new(tonumber(options.weight))) end\
    if options.size then pal:insert(pango.Attribute.size_new(options.size * 1024 * 0.75)) end -- I don't know why 0.75\
    if options.style then pal:insert(pango.Attribute.style_new(\
      options.style == \"italic\" and pango.Style.ITALIC or pango.Style.NORMAL)) end\
    if options.variant then pal:insert(pango.Attribute.variant_new(\
      options.variant == \"smallcaps\" and pango.Variant.SMALL_CAPS or pango.Variant.NORMAL)) end\
  end\
  if options.language then\
    pango_context:set_language(pango.Language.from_string(options.language))\
  end\
  palcache[p] = pal\
  return pal\
end  \
\
local function measureSpace( pal )\
  local ss = SILE.settings.get(\"document.spaceskip\") \
  if ss then return ss end\
  if spacecache[pal] then return spacecache[pal] end\
  local spaceitem = itemize(\" \",pal)[1]\
  local g = (_shape(\" \",spaceitem).glyphs)[1]\
  local spacewidth = g.geometry.width / 1024;\
  spacecache[pal] = SILE.length.new({ length = spacewidth * 1.2, shrink = spacewidth/3, stretch = spacewidth /2 }) -- XXX\
  return spacecache[pal]\
end\
\
local dimcache = {}\
function SILE.shapers.pango.measureDim(char)\
  local options = SILE.font.loadDefaults({})\
  local pal = getPal(options)\
  if dimcache[pal] and dimcache[pal][char] then return dimcache[pal][char] end\
  if not dimcache[pal] then dimcache[pal] = {} end\
  local charitem = itemize(char,pal)[1]\
  local g = (_shape(char,charitem).glyphs)[1]\
  if char == \"x\" then \
    local font = charitem.analysis.font\
    local rect = font:get_glyph_extents(g.glyph)\
    dimcache[pal][char] = -rect.y/1024\
  else\
    dimcache[pal][char] = g.geometry.width / 1024\
  end\
  return dimcache[pal][char]\
end \
\
function SILE.shapers.pango.shape(text, options)\
  if not options then options = {} end\
  options = SILE.font.loadDefaults(options)\
\
  local pal = getPal(options)\
  local nodes = {}\
  local gluewidth = measureSpace(pal)\
  for token in SU.gtoke(text, SILE.settings.get(\"shaper.spacepattern\")) do\
    if (token.separator) then\
      table.insert(nodes, SILE.nodefactory.newGlue({ width = gluewidth }))\
    else\
      local items = itemize(token.string, pal)\
      local nnode = {}\
      for i in pairs(items) do\
        local pgs = _shape(token.string, items[i])\
        -- Sum the glyphs in this string\
        local text = string.sub(token.string,1+items[i].offset, items[i].length)\
        local depth, height = 0,0\
        local font = items[i].analysis.font\
        local glyphs = {}\
        for g in pairs(pgs.glyphs) do\
          local rect = font:get_glyph_extents(pgs.glyphs[g].glyph)\
          local desc = rect.y + rect.height\
          local asc  = -rect.y \
          if desc > depth then depth = desc end\
          if asc > height then height = asc end\
          table.insert(glyphs, pgs.glyphs[g].glyph)\
        end\
        table.insert(nnode, SILE.nodefactory.newHbox({ \
          depth = depth / 1024,\
          height= height / 1024,\
          width = SILE.length.new({ length= pgs:get_width() / 1024 }),\
          value = {font = font, text = text, glyphString = pgs, glyphs = glyphs, options = options }\
        }))\
      end\
      table.insert(nodes, SILE.nodefactory.newNnode({ \
        nodes = nnode,\
        text = token.string,\
        pal = pal,\
        options = options,\
        language = options.language\
      }))\
    end\
  end\
  return nodes\
end\
\
\
SILE.shaper = SILE.shapers.pango\
\
-- \
-- local s = \"ltr שָׁוְא ltr\"\
-- \
\
-- for i in pairs(items) do\
--   local offset = items[i].offset\
--   local length = items[i].length\
--   local analysis = items[i].analysis\
--   local pgs = pango.GlyphString.new()\
--   pango.shape(string.sub(s,1+offset), length, analysis, pgs)\
--   return pgs\
--   cr:move_to(x, 50)\
--   cr:show_glyph_string(analysis.font, pgs)\
--   x = x + pgs:get_width()/1024\
--   print(x)\
-- end\
"
, '@'..".\\core\\pango-shaper.lua" ) )

package.preload[ "packages\\footnotes" ] = assert( (loadstring or load)(
"-- Footnotes class\
\
-- Exports: The \\footnote command\
--          outputInsertions (call this in endPage)\
\
SILE.require(\"packages/counters\")\
SILE.require(\"packages/raiselower\")\
local insertions = SILE.require(\"packages/insertions\")\
SILE.scratch.counters.footnote = { value= 1, display= \"arabic\" };\
\
SILE.registerCommand(\"footnotemark\", function(options, content)\
  SILE.Commands[\"raise\"]({height = \"0.7ex\"}, function()\
    SILE.Commands[\"font\"]({ size = \"1.5ex\" }, function()\
      SILE.typesetter:typeset(SILE.formatCounter(SILE.scratch.counters.footnote))\
    end)\
  end)\
end)\
\
SILE.registerCommand(\"footnote\", function(options, content)\
  SILE.call(\"footnotemark\")\
  -- XXX We need to vbox the material in the context of the frame it's going to\
  -- be inserted into, not in the frame it's coming from; e.g. when a two-column\
  -- layout has a full-width footnotes frame.\
  insertions.exports:insert(\"footnote\", SILE.Commands[\"vbox\"]({}, function()\
    SILE.Commands[\"font\"]({size = \"9pt\"}, function()\
      SILE.typesetter:typeset(SILE.formatCounter(SILE.scratch.counters.footnote)..\".\")\
      SILE.call(\"qquad\")\
      SILE.process(content)\
    end)\
  end\
  ))\
  SILE.scratch.counters.footnote.value = SILE.scratch.counters.footnote.value + 1\
end)\
\
return {\
  init = function (class, args)\
    insertions.exports:initInsertionClass(\"footnote\", { \
    insertInto = args.insertInto,\
    stealFrom = args.stealFrom,\
    maxHeight = SILE.length.new({length = SILE.toPoints(\"25\", \"%\",\"h\") }),\
    topSkip = SILE.length.parse(\"2ex\"),\
    interInsertionSkip = SILE.length.parse(\"1ex\"),\
  })\
  end,\
  exports = {\
    outputInsertions = insertions.exports.outputInsertions\
  }\
}"
, '@'..".\\packages\\footnotes.lua" ) )

package.preload[ "packages\\insertions" ] = assert( (loadstring or load)(
"SILE.scratch.insertions = {\
  classes = {},\
  thispage = {},\
  typesetters = {},\
  nextpage = {}\
}\
\
local initInsertionClass = function (self, classname, options)\
  SU.required(options, \"insertInto\", \"initializing insertions\")\
  SU.required(options, \"stealFrom\", \"initializing insertions\")\
  SU.required(options, \"maxHeight\", \"initializing insertions\")\
  SU.required(options, \"topSkip\", \"initializing insertions\")\
\
  -- Turn stealFrom into a hash, if it isn't one.\
  if type(options.stealFrom) == \"string\" then options.stealFrom = { options.stealFrom } end\
  if options.stealFrom[1] then\
    local rl = {}\
    for i = 1,#(options.stealFrom) do rl[options.stealFrom[i]] = 1 end\
    options.stealFrom = rl\
  end\
  SILE.scratch.insertions.classes[classname] = options\
end\
\
local _insertionVbox = SILE.nodefactory.newVbox({})\
_insertionVbox.outputYourself = function (self)\
  local t = SILE.scratch.insertions.typesetters[self.class]\
  if not t then \
    t = SILE.defaultTypesetter {}\
    t:init(SILE.getFrame(self.frame))\
    SILE.scratch.insertions.typesetters[self.class] = t\
  end\
  if self.material:isVglue() then\
    self.material:outputYourself(t, self.material)\
  else  -- Unvbox\
    for i,node in pairs(self.material.nodes) do\
      node:outputYourself(t, node)\
    end\
  end\
end\
_insertionVbox.actualHeight = 0\
_insertionVbox.frame = nil\
_insertionVbox.isVbox = function () return true end\
_insertionVbox.type = \"insertionVbox\"\
_insertionVbox.active = 0\
_insertionVbox.class = nil\
\
SILE.typesetter.pageTarget = function (self)\
  if not self.frame.state.totals.shrinkage then self.frame.state.totals.shrinkage = 0 end\
  return self.frame:height() - self.frame.state.totals.shrinkage\
end\
\
local setShrinkage = function(classname, amount)\
  SU.debug(\"insertions\", \"Shrinking main box by \"..amount.length)\
  local reduceList = SILE.scratch.insertions.classes[classname].stealFrom\
  for fName, ratio in pairs(reduceList) do local f = SILE.getFrame(fName)\
    if not f.state.totals.shrinkage then f.state.totals.shrinkage = 0 end\
    f.state.totals.shrinkage = f.state.totals.shrinkage + amount.length * ratio\
  end\
end\
\
local commitShrinkage = function(classname)\
  local opts = SILE.scratch.insertions.classes[classname]\
  local reduceList = opts[\"stealFrom\"]\
  local stealPosition = opts[\"steal-position\"] or \"bottom\"\
\
  for fName, ratio in pairs(reduceList) do local f = SILE.getFrame(fName)\
    if not f.state.totals.shrinkage then f.state.totals.shrinkage = 0 end\
    local newHeight = f:height() - f.state.totals.shrinkage\
    local oldBottom = f:bottom()\
    if stealPosition == \"bottom\" then f:relax(\"bottom\") else f:relax(\"top\") end\
    SU.debug(\"insertions\", \"Constraining height of \"..fName..\" to \"..newHeight)\
    f:constrain(\"height\", newHeight)\
    f.state.totals.shrinkage = 0\
  end\
end\
\
local increaseInsertionFrame = function(classname, amount)\
  local opts = SILE.scratch.insertions.classes[classname]\
  local stealPosition = opts[\"steal-position\"] or \"bottom\"\
  local f = SILE.getFrame(opts[\"insertInto\"])\
  local oldHeight = f:height()\
  f:constrain(\"height\", oldHeight + amount.length)\
  if stealPosition == \"bottom\" then f:relax(\"top\") end\
end\
\
local addInsertion = function(classname, material)\
  setShrinkage(classname, material.height)\
  if not SILE.scratch.insertions.thispage[classname] then SILE.scratch.insertions.thispage[classname] = {} end\
  local ins = SILE.scratch.insertions.thispage[classname]\
  ins[#ins+1] = material\
  table.insert(SILE.typesetter.state.nodes, _insertionVbox {\
    class = classname,\
    material = material,\
    actualHeight = material.height,\
    frame = SILE.scratch.insertions.classes[classname].insertInto\
  })\
end\
\
local heightSoFar = function(classname)\
  local h = 0\
  for i = 1,#(SILE.scratch.insertions.thispage[classname]) do \
    local ins = SILE.scratch.insertions.thispage[classname][i]\
    h = h + ins.height.length + ins.depth\
  end\
  return h\
end\
\
local mainFrameHeightSoFar = function()\
  local heightOfBodySoFar = SILE.pagebuilder.collateVboxes(SILE.typesetter.state.outputQueue)\
  local nodes = std.tree.clone(SILE.typesetter.state.nodes)\
  SILE.typesetter:pushState()\
  SILE.typesetter.state.nodes = nodes\
  SILE.typesetter:leaveHmode()\
  local upcomingHeight = SILE.pagebuilder.collateVboxes(SILE.typesetter.state.outputQueue)\
  SILE.typesetter:popState()\
  SU.debug(\"insertions\", \"Height on the main list is \".. (heightOfBodySoFar.height +heightOfBodySoFar.depth) .. \", upcoming height is \"..(upcomingHeight.height + upcomingHeight.depth))\
  return heightOfBodySoFar.height + upcomingHeight.height + heightOfBodySoFar.depth + upcomingHeight.depth\
end\
\
local insert = function (self, classname, vbox)\
  local thisclass = SILE.scratch.insertions.classes[classname]\
  if not thisclass then SU.error(\"Uninitialized insertion class \"..classname) end\
  local opts = SILE.scratch.insertions.classes[classname]\
\
  if not SILE.scratch.insertions.thispage[classname] then\
    SILE.scratch.insertions.thispage[classname] = {}\
    if thisclass[\"topSkip\"] then\
      local vglue = SILE.nodefactory.newVglue({ height = thisclass[\"topSkip\"] })\
      addInsertion(classname, vglue)\
    end\
  elseif thisclass[\"interInsertionSkip\"] then\
    local vglue = SILE.nodefactory.newVglue({ height = thisclass[\"interInsertionSkip\"] })\
    addInsertion(classname, vglue)\
  end\
\
  SU.debug(\"insertions\", \"Maxheight is \"..tostring(thisclass[\"maxHeight\"]))\
  SU.debug(\"insertions\", \"height is \"..tostring((heightSoFar(classname) + vbox.height + vbox.depth)))\
  -- If the current frame is in the steal list\
  SU.debug(\"insertions\", \"Total is \"..SILE.typesetter:pageTarget())\
  if heightSoFar(classname) + vbox.height + vbox.depth < thisclass[\"maxHeight\"] and\
    ( (vbox.height + vbox.depth).length < 0 or\
    (mainFrameHeightSoFar() + vbox.height + vbox.depth - SILE.typesetter:pageTarget()).length < 0\
    ) then\
    addInsertion(classname, vbox)\
  elseif mainFrameHeightSoFar() > SILE.typesetter:pageTarget() then\
    -- No hope; defer until next time\
    SILE.scratch.insertions.nextpage[#(SILE.scratch.insertions.nextpage)+1] = {class=classname, material=vbox}\
  else -- split\
    SU.error(\"I need to split this insertion and I don't know how\")\
  end\
end\
\
\
SILE.typesetter:registerPageBreakHook(function (self,nl)\
  -- Find the insertion vboxes\
  local totals = {}\
  for i = 1,#nl do local node = nl[i]\
    if node.nodes then\
      for i = 1,#node.nodes do local node = node.nodes[i]\
        if node.type == \"insertionVbox\" then\
          if not totals[node.class] then totals[node.class] = 0 end\
          totals[node.class] = totals[node.class] + node.actualHeight\
        end\
      end\
    end\
  end\
  -- Commit the size changes\
  for class, opts in pairs(SILE.scratch.insertions.classes) do\
    if totals[class] then increaseInsertionFrame(class, totals[class]) end\
  end\
  SILE.scratch.insertions.thispage = {}\
  SILE.scratch.insertions.typesetters = {}\
  return nl\
end)\
\
SILE.typesetter:registerNewPageHook(function(self)\
  -- Process deferred insertions\
  for i = 1,#SILE.scratch.insertions.nextpage do local ins = SILE.scratch.insertions.nextpage[i]\
    insert(self,ins.class, ins.material)\
  end\
  SILE.scratch.insertions.nextpage = {}  \
end)\
\
local outputInsertions = function(self)end\
\
return {\
  init = function () end,\
  exports = {\
    initInsertionClass = initInsertionClass,\
    insert = insert,\
    outputInsertions = outputInsertions\
  }\
}\
"
, '@'..".\\packages\\insertions.lua" ) )

package.preload[ "packages\\verbatim" ] = assert( (loadstring or load)(
"SILE.registerCommand(\"verbatim:font\", function(options, content)\
    SILE.settings.set(\"font.family\", \"Monaco\")\
    SILE.settings.set(\"font.size\", SILE.settings.get(\"font.size\") - 3)\
end, \"The font chosen for the verbatim environment\")\
\
SILE.registerCommand(\"verbatim\", function(options, content)\
  SILE.typesetter:pushVglue({ height = SILE.length.new({ length = 6 }) })\
  SILE.typesetter:leaveHmode()\
  SILE.settings.temporarily(function()\
    SILE.settings.set(\"typesetter.parseppattern\", \"\\n\")\
    SILE.settings.set(\"document.rskip\", SILE.nodefactory.newGlue(\"0 plus 10000pt\"))\
    SILE.settings.set(\"document.parindent\", SILE.nodefactory.newGlue(\"0\"))\
    SILE.settings.set(\"current.parindent\", SILE.nodefactory.newGlue(\"0\"))\
    SILE.settings.set(\"document.baselineskip\", SILE.nodefactory.newVglue(\"0\"))\
    SILE.settings.set(\"document.lineskip\", SILE.nodefactory.newVglue(\"2pt\"))\
    SILE.settings.set(\"document.spaceskip\", SILE.length.parse(\"1en\"))\
    SILE.call(\"verbatim:font\")\
    SILE.settings.set(\"document.language\", \"xx\")\
    SILE.settings.set(\"shaper.spacepattern\", '%s')\
    SILE.process(content)\
  end)\
\
  SILE.typesetter:pushVglue({ height = SILE.length.new({ length = 6 }) })\
end, \"Typesets its contents in a monospaced font.\")"
, '@'..".\\packages\\verbatim.lua" ) )

package.preload[ "lua-libraries\\std\\package" ] = assert( (loadstring or load)(
"--[[--\
 Additions to the package module.\
 @module std.package\
]]\
\
local M = {}\
\
--- Make named constants for `package.config`\
-- (undocumented in 5.1; see luaconf.h for C equivalents).\
-- @table package\
-- @field dirsep directory separator\
-- @field pathsep path separator\
-- @field path_mark string that marks substitution points in a path template\
-- @field execdir (Windows only) replaced by the executable's directory in a path\
-- @field igmark Mark to ignore all before it when building `luaopen_` function name.\
M.dirsep, M.pathsep, M.path_mark, M.execdir, M.igmark =\
  string.match (package.config, \"^([^\\n]+)\\n([^\\n]+)\\n([^\\n]+)\\n([^\\n]+)\\n([^\\n]+)\")\
\
for k, v in pairs (package) do\
  M[k] = M[k] or v\
end\
\
return M\
"
, '@'..".\\lua-libraries\\std\\package.lua" ) )

package.preload[ "packages\\counters" ] = assert( (loadstring or load)(
"if not SILE.scratch.counters then SILE.scratch.counters = {} end\
romans = {\
  {1000, \"M\"},\
  {900, \"CM\"}, {500, \"D\"}, {400, \"CD\"}, {100, \"C\"},\
  {90, \"XC\"}, {50, \"L\"}, {40, \"XL\"}, {10, \"X\"},\
  {9, \"IX\"}, {5, \"V\"}, {4, \"IV\"}, {1, \"I\"} \
}\
 \
local function romanize(k)\
  str = \"\"\
  k = k + 0\
  for _, v in ipairs(romans) do --note that this is -not- ipairs.\
    val, let = unpack(v)\
    while k >= val do\
      k = k - val\
      str = str..let\
    end\
  end\
  return str\
end\
\
local function alpha(n)\
  local out = \"\"\
  local a = string.byte(\"a\")\
  repeat\
    n = n - 1\
    out = string.char(n%26 + a) .. out\
    n = (n - n%26)/26\
  until n < 1\
  return out\
end\
\
SILE.formatCounter = function(options)\
  if (options.display == \"roman\") then return romanize(options.value):lower() end\
  if (options.display == \"Roman\") then return romanize(options.value) end\
  if (options.display == \"alpha\") then return alpha(options.value) end\
  return tostring(options.value);\
end\
  \
SILE.registerCommand(\"increment-counter\", function (options,content)\
  local c = options.id\
  if not(SILE.scratch.counters[c]) then\
    SILE.scratch.counters[c] = { value= 0, display= \"arabic\" };\
  end\
  if (options[\"set-to\"]) then \
    SILE.scratch.counters[c].value = tonumber(options[\"set-to\"])\
  else\
    SILE.scratch.counters[c].value = SILE.scratch.counters[c].value + 1\
  end\
  if options.display then SILE.scratch.counters[c].display = options.display end\
  -- SILE.typesetter:setpar(SILE.formatCounter(SILE.scratch.counters[c]))\
end, \"Increments the counter named by the <id> option\")\
\
SILE.registerCommand(\"set-counter\", function (options, content) \
  local c = options.id;\
  if not(SILE.scratch.counters[c]) then\
    SILE.scratch.counters[c] = { value= 0, display= \"arabic\" };\
  end\
  if options.value then SILE.scratch.counters[c].value = tonumber(options.value) end\
  if options.display then SILE.scratch.counters[c].display = options.display end\
end, \"Sets the counter named by the <id> option to <value>; sets its display type (roman/Roman/arabic) to type <display>.\");\
\
\
SILE.registerCommand(\"show-counter\", function (options, content)\
  local c = options.id;\
  if not(SILE.scratch.counters[c]) then\
    SILE.scratch.counters[c] = { value= 0, display= \"arabic\" };\
  end    \
  if options.display then SILE.scratch.counters[c].display = options.display end\
  SILE.typesetter:setpar(SILE.formatCounter(SILE.scratch.counters[c]));\
end, \"Outputs the value of counter <id>, optionally displaying it with the <display> format.\");"
, '@'..".\\packages\\counters.lua" ) )

package.preload[ "lua-libraries\\imagesize\\format\\xbm" ] = assert( (loadstring or load)(
"local MIME_TYPE = \"image/x-xbitmap\"\
\
local function size (stream, options)\
    local input = stream:read(1024)\
    assert(input, \"error reading\")\
\
    local _, _, x, y = input:find(\"#define%s*%S*%s*(%d+)%s*\\n\" ..\
                                  \"#define%s*%S*%s*(%d+)\")\
    if x then return tonumber(x), tonumber(y), MIME_TYPE end\
    return nil, nil, \"can't find size definitions in XBM file\"\
end\
\
return size\
-- vi:ts=4 sw=4 expandtab\
"
, '@'..".\\lua-libraries\\imagesize\\format\\xbm.lua" ) )

package.preload[ "classes\\docbook" ] = assert( (loadstring or load)(
"local plain = SILE.require(\"classes/plain\");\
docbook = plain { id = \"docbook\" };\
SILE.scratch.docbook = {\
  seclevel = 0,\
  seccount = {}\
}\
\
docbook:loadPackage(\"image\")\
docbook:loadPackage(\"simpletable\", {\
  tableTag = \"tgroup\",\
  trTag = \"row\",\
  tdTag = \"entry\"\
})\
\
function docbook.push(t, val)\
  if not SILE.scratch.docbook[t] then SILE.scratch.docbook[t] = {} end\
  local q = SILE.scratch.docbook[t]\
  q[#q+1] = val\
end\
function docbook.pop(t)\
  local q = SILE.scratch.docbook[t]\
  q[#q] = nil\
end\
function docbook.val(t)\
  local q = SILE.scratch.docbook[t]\
  return q[#q]\
end\
function docbook.wipe(tbl)\
  while((#tbl) > 0) do tbl[#tbl] = nil end\
end\
\
SILE.registerCommand(\"article\", function (options, content)\
  local info = SILE.findInTree(content, \"info\") or SILE.findInTree(content, \"articleinfo\")\
  local title = SILE.findInTree(content, \"title\") or (info and SILE.findInTree(info, \"title\"))\
  local author = SILE.findInTree(content, \"author\") or (info and SILE.findInTree(info, \"author\"))\
\
  if title then \
    SILE.call(\"docbook-article-title\",{},title) \
    docbook.wipe(title)\
  end\
  if author then\
    SILE.call(\"docbook-main-author\",{},function()\
      for _,t in ipairs(author) do\
        if type(t) == \"table\" then\
          SILE.call(t.tag,{},t)\
          SILE.typesetter:leaveHmode()\
          SILE.call(\"bigskip\")\
        end\
      end\
    end)\
  end\
  SILE.process(content)\
  SILE.typesetter:chuck()\
end)\
\
SILE.registerCommand(\"info\", function()end)\
\
SILE.registerCommand(\"section\", function (options, content)\
  SILE.scratch.docbook.seclevel = SILE.scratch.docbook.seclevel + 1\
  SILE.scratch.docbook.seccount[SILE.scratch.docbook.seclevel] = (SILE.scratch.docbook.seccount[SILE.scratch.docbook.seclevel] or 0) + 1\
  while #(SILE.scratch.docbook.seccount) > SILE.scratch.docbook.seclevel do\
    SILE.scratch.docbook.seccount[#(SILE.scratch.docbook.seccount)] = nil\
  end\
  local title = SILE.findInTree(content, \"title\")\
  local number = table.concat(SILE.scratch.docbook.seccount, '.')\
  if title then \
    SILE.call(\"docbook-section-\"..SILE.scratch.docbook.seclevel..\"-title\",{},function()\
      SILE.typesetter:typeset(number..\" \")\
      SILE.process(title)\
    end) \
    docbook.wipe(title)\
  end\
  SILE.process(content)\
  SILE.scratch.docbook.seclevel = SILE.scratch.docbook.seclevel - 1\
end)\
\
function countedThing(thing, options, content)\
  SILE.call(\"increment-counter\", {id=thing})\
  SILE.call(\"bigskip\")\
  SILE.call(\"docbook-line\")\
  SILE.call(\"docbook-titling\", {}, function()\
    SILE.typesetter:typeset(thing..\" \".. SILE.formatCounter(SILE.scratch.counters[thing]))\
    local t = SILE.findInTree(content, \"title\")\
    if t then\
      SILE.typesetter:typeset(\": \")\
      SILE.process(t)\
      docbook.wipe(t)\
    end\
  end)\
  SILE.call(\"smallskip\")\
  SILE.process(content)\
  SILE.call(\"docbook-line\")\
  SILE.call(\"bigskip\")\
end\
\
SILE.registerCommand(\"example\", function(options,content)\
  countedThing(\"Example\", options, content)\
end)\
\
SILE.registerCommand(\"table\", function(options,content)\
  countedThing(\"Table\", options, content)\
end)\
SILE.registerCommand(\"figure\", function(options, content)\
  countedThing(\"Figure\", options, content)\
end)\
\
SILE.registerCommand(\"imagedata\", function(options, content)\
  local width = SILE.parseComplexFrameDimension(options.width or \"100%\",\"w\") or 0 \
  SILE.call(\"img\", {\
    src = options.fileref,\
    width = width / 2\
  })\
end)\
\
\
SILE.registerCommand(\"itemizedlist\", function(options,content)\
  docbook.push(\"list\", {type = \"itemized\", ctr = 1})\
  SILE.call(\"medskip\")\
  -- Indentation\
  SILE.process(content)\
  SILE.call(\"medskip\")\
  docbook.pop(\"list\")\
end)\
\
\
SILE.registerCommand(\"orderedlist\", function(options,content)\
  docbook.push(\"list\", {type = \"ordered\"})\
  SILE.call(\"medskip\")\
  -- Indentation\
  SILE.process(content)\
  SILE.call(\"medskip\")\
  docbook.pop(\"list\")\
end)\
SILE.registerCommand(\"listitem\", function(options,content)\
  local ctx = docbook.val(\"list\")\
  if ctx and ctx.type == \"ordered\" then\
    SILE.typesetter:typeset( ctx.ctr ..\". \")\
    ctx.ctr = ctx.ctr + 1\
  elseif ctx and ctx.type == \"itemized\" then\
    SILE.typesetter:typeset( \"• \")\
  elseif ctx and ctx.type == \"\" then\
    -- Other types?\
  else\
    SU.error(\"Listitem in outer space\")\
  end\
  SILE.call(\"noindent\")\
  for i=1, #ctx-1 do SILE.call(\"qquad\") end -- Setting lskip better?\
  SILE.process(content)\
  SILE.call(\"medskip\")\
end)\
\
SILE.registerCommand(\"link\", function(options, content)\
  SILE.process(content)\
  if (options[\"xl:href\"]) then\
    SILE.typesetter:typeset(\" (\")\
    SILE.call(\"code\", {}, {options[\"xl:href\"]})\
    SILE.typesetter:typeset(\")\")\
  end\
end)\
return docbook"
, '@'..".\\classes\\docbook.lua" ) )

package.preload[ "packages\\tableofcontents" ] = assert( (loadstring or load)(
"-- Table of contents class\
\
-- Exports: The \\tableofcontents command\
--          The \\tocentry command (call this in your sectioning commands)\
--          writeToc (call this in finish)\
--          moveTocNodes (call this in endPage)\
\
SILE.scratch.tableofcontents = { }\
\
local moveNodes = function(self)\
  local n = SILE.scratch.info.thispage.toc\
  if n then \
    for i = 1,#n do \
      n[i].pageno = SILE.formatCounter(SILE.scratch.counters.folio)\
      SILE.scratch.tableofcontents[#(SILE.scratch.tableofcontents)+1] = n[i]\
    end\
  end\
end\
\
local writeToc = function ()\
  local t = \"return \"..std.string.pickle(SILE.scratch.tableofcontents)\
  local f,err = io.open(SILE.masterFileName .. '.toc',\"w\")\
  if not f then return SU.error(err) end\
  f:write(t)\
end\
\
SILE.registerCommand(\"tableofcontents\", function (options, content)\
  local f,err = io.open(SILE.masterFileName .. '.toc')\
  if not f then\
    SILE.call(\"tableofcontents:notocmessage\")\
    return\
  end\
  local doc = f:read(\"*all\")\
  local toc = assert(loadstring(doc))()\
  SILE.call(\"tableofcontents:header\")\
  for i = 1,#toc do\
    local item = toc[i]\
    SILE.call(\"tableofcontents:item\", {level = item.level, pageno= item.pageno}, item.label)\
  end\
end)\
\
SILE.registerCommand(\"tableofcontents:item\", function (o,c)\
  SILE.settings.temporarily(function ()\
    SILE.settings.set(\"typesetter.parfillskip\", SILE.nodefactory.zeroGlue)\
    SILE.call(\"tableofcontents:level\"..o.level..\"item\", {}, function()\
      SILE.process({c})\
      -- Ideally, leaders\
      SILE.call(\"hss\")\
      SILE.typesetter:typeset(o.pageno)\
    end)\
  end)\
end)\
\
SILE.registerCommand(\"tocentry\", function (options, content)\
  SILE.call(\"info\", {\
    category = \"toc\",\
    value = {\
      label = content[1],\
      level = (options.level or 1)\
    }\
  })\
end)\
\
\
return {\
  exports = {writeToc = writeToc, moveTocNodes = moveNodes},\
  init = function (self)\
    self:loadPackage(\"infonode\")\
SILE.doTexlike([[%\
\\define[command=tableofcontents:notocmessage]{\\tableofcontents:headerfont{Rerun SILE to process table of contents!}}%\
\\define[command=tableofcontents:headerfont]{\\font[size=24pt,weight=800]{\\process}}%\
\\define[command=tableofcontents:header]{\\par\\noindent\\tableofcontents:headerfont{Table of Contents}\\medskip}%\
\\define[command=tableofcontents:level1item]{\\bigskip\\noindent\\font[size=14pt,weight=800]{\\process}\\medskip}%\
\\define[command=tableofcontents:level2item]{\\noindent\\font[size=12pt]{\\process}\\medskip}%\
]])\
\
  end \
}"
, '@'..".\\packages\\tableofcontents.lua" ) )

package.preload[ "lua-libraries\\char-def" ] = assert( (loadstring or load)(
"-- Extracted from the Unicode Character Database by way of Context.\
-- I presume that, because it's the UCD's data, Context can't claim\
-- copyright over it.\
characters = characters or { }\
\
characters.data={\
 [0x0000]={\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"s\",\
 },\
 {\
  direction=\"b\",\
 },\
 {\
  direction=\"s\",\
 },\
 {\
  direction=\"ws\",\
 },\
 {\
  direction=\"b\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"b\",\
 },\
 {\
  direction=\"b\",\
 },\
 {\
  direction=\"b\",\
 },\
 {\
  direction=\"s\",\
 },\
 {\
  direction=\"ws\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"et\",\
 },\
 {\
  direction=\"et\",\
 },\
 {\
  direction=\"et\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
  mirror=0x0029,\
 },\
 {\
  direction=\"on\",\
  mirror=0x0028,\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"es\",\
 },\
 {\
  direction=\"cs\",\
 },\
 {\
  direction=\"es\",\
 },\
 {\
  direction=\"cs\",\
 },\
 {\
  direction=\"cs\",\
 },\
 {\
  direction=\"en\",\
 },\
 {\
  direction=\"en\",\
 },\
 {\
  direction=\"en\",\
 },\
 {\
  direction=\"en\",\
 },\
 {\
  direction=\"en\",\
 },\
 {\
  direction=\"en\",\
 },\
 {\
  direction=\"en\",\
 },\
 {\
  direction=\"en\",\
 },\
 {\
  direction=\"en\",\
 },\
 {\
  direction=\"en\",\
 },\
 {\
  direction=\"cs\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
  mirror=0x003E,\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
  mirror=0x003C,\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"on\",\
  mirror=0x005D,\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
  mirror=0x005B,\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"on\",\
  mirror=0x007D,\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
  mirror=0x007B,\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"b\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"cs\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"et\",\
 },\
 {\
  direction=\"et\",\
 },\
 {\
  direction=\"et\",\
 },\
 {\
  direction=\"et\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"on\",\
  mirror=0x00BB,\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"bn\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"et\",\
 },\
 {\
  direction=\"et\",\
 },\
 {\
  direction=\"en\",\
 },\
 {\
  direction=\"en\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"en\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"on\",\
  mirror=0x00AB,\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"nsm\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"on\",\
 },\
 {\
  direction=\"l\",\
 },\
 {\
  direction=\"l\",\
 },\
 [0x037A]={\
  direction=\"l\",\
 },\
 [0x037B]={\
  direction=\"l\",\
 },\
 [0x037C]={\
  direction=\"l\",\
 },\
 [0x037D]={\
  direction=\"l\",\
 },\
 [0x037E]={\
  direction=\"on\",\
 },\
 [0x0384]={\
  direction=\"on\",\
 },\
 [0x0385]={\
  direction=\"on\",\
 },\
 [0x0386]={\
  direction=\"l\",\
 },\
 [0x0387]={\
  direction=\"on\",\
 },\
 [0x0388]={\
  direction=\"l\",\
 },\
 [0x0389]={\
  direction=\"l\",\
 },\
 [0x038A]={\
  direction=\"l\",\
 },\
 [0x038C]={\
  direction=\"l\",\
 },\
 [0x038E]={\
  direction=\"l\",\
 },\
 [0x038F]={\
  direction=\"l\",\
 },\
 [0x0390]={\
  direction=\"l\",\
 },\
 [0x0391]={\
  direction=\"l\",\
 },\
 [0x0392]={\
  direction=\"l\",\
 },\
 [0x0393]={\
  direction=\"l\",\
 },\
 [0x0394]={\
  direction=\"l\",\
 },\
 [0x0395]={\
  direction=\"l\",\
 },\
 [0x0396]={\
  direction=\"l\",\
 },\
 [0x0397]={\
  direction=\"l\",\
 },\
 [0x0398]={\
  direction=\"l\",\
 },\
 [0x0399]={\
  direction=\"l\",\
 },\
 [0x039A]={\
  direction=\"l\",\
 },\
 [0x039B]={\
  direction=\"l\",\
 },\
 [0x039C]={\
  direction=\"l\",\
 },\
 [0x039D]={\
  direction=\"l\",\
 },\
 [0x039E]={\
  direction=\"l\",\
 },\
 [0x039F]={\
  direction=\"l\",\
 },\
 [0x03A0]={\
  direction=\"l\",\
 },\
 [0x03A1]={\
  direction=\"l\",\
 },\
 [0x03A3]={\
  direction=\"l\",\
 },\
 [0x03A4]={\
  direction=\"l\",\
 },\
 [0x03A5]={\
  direction=\"l\",\
 },\
 [0x03A6]={\
  direction=\"l\",\
 },\
 [0x03A7]={\
  direction=\"l\",\
 },\
 [0x03A8]={\
  direction=\"l\",\
 },\
 [0x03A9]={\
  direction=\"l\",\
 },\
 [0x03AA]={\
  direction=\"l\",\
 },\
 [0x03AB]={\
  direction=\"l\",\
 },\
 [0x03AC]={\
  direction=\"l\",\
 },\
 [0x03AD]={\
  direction=\"l\",\
 },\
 [0x03AE]={\
  direction=\"l\",\
 },\
 [0x03AF]={\
  direction=\"l\",\
 },\
 [0x03B0]={\
  direction=\"l\",\
 },\
 [0x03B1]={\
  direction=\"l\",\
 },\
 [0x03B2]={\
  direction=\"l\",\
 },\
 [0x03B3]={\
  direction=\"l\",\
 },\
 [0x03B4]={\
  direction=\"l\",\
 },\
 [0x03B5]={\
  direction=\"l\",\
 },\
 [0x03B6]={\
  direction=\"l\",\
 },\
 [0x03B7]={\
  direction=\"l\",\
 },\
 [0x03B8]={\
  direction=\"l\",\
 },\
 [0x03B9]={\
  direction=\"l\",\
 },\
 [0x03BA]={\
  direction=\"l\",\
 },\
 [0x03BB]={\
  direction=\"l\",\
 },\
 [0x03BC]={\
  direction=\"l\",\
 },\
 [0x03BD]={\
  direction=\"l\",\
 },\
 [0x03BE]={\
  direction=\"l\",\
 },\
 [0x03BF]={\
  direction=\"l\",\
 },\
 [0x03C0]={\
  direction=\"l\",\
 },\
 [0x03C1]={\
  direction=\"l\",\
 },\
 [0x03C2]={\
  direction=\"l\",\
 },\
 [0x03C3]={\
  direction=\"l\",\
 },\
 [0x03C4]={\
  direction=\"l\",\
 },\
 [0x03C5]={\
  direction=\"l\",\
 },\
 [0x03C6]={\
  direction=\"l\",\
 },\
 [0x03C7]={\
  direction=\"l\",\
 },\
 [0x03C8]={\
  direction=\"l\",\
 },\
 [0x03C9]={\
  direction=\"l\",\
 },\
 [0x03CA]={\
  direction=\"l\",\
 },\
 [0x03CB]={\
  direction=\"l\",\
 },\
 [0x03CC]={\
  direction=\"l\",\
 },\
 [0x03CD]={\
  direction=\"l\",\
 },\
 [0x03CE]={\
  direction=\"l\",\
 },\
 [0x03CF]={\
  direction=\"l\",\
 },\
 [0x03D0]={\
  direction=\"l\",\
 },\
 [0x03D1]={\
  direction=\"l\",\
 },\
 [0x03D2]={\
  direction=\"l\",\
 },\
 [0x03D3]={\
  direction=\"l\",\
 },\
 [0x03D4]={\
  direction=\"l\",\
 },\
 [0x03D5]={\
  direction=\"l\",\
 },\
 [0x03D6]={\
  direction=\"l\",\
 },\
 [0x03D7]={\
  direction=\"l\",\
 },\
 [0x03D8]={\
  direction=\"l\",\
 },\
 [0x03D9]={\
  direction=\"l\",\
 },\
 [0x03DA]={\
  direction=\"l\",\
 },\
 [0x03DB]={\
  direction=\"l\",\
 },\
 [0x03DC]={\
  direction=\"l\",\
 },\
 [0x03DD]={\
  direction=\"l\",\
 },\
 [0x03DE]={\
  direction=\"l\",\
 },\
 [0x03DF]={\
  direction=\"l\",\
 },\
 [0x03E0]={\
  direction=\"l\",\
 },\
 [0x03E1]={\
  direction=\"l\",\
 },\
 [0x03E2]={\
  direction=\"l\",\
 },\
 [0x03E3]={\
  direction=\"l\",\
 },\
 [0x03E4]={\
  direction=\"l\",\
 },\
 [0x03E5]={\
  direction=\"l\",\
 },\
 [0x03E6]={\
  direction=\"l\",\
 },\
 [0x03E7]={\
  direction=\"l\",\
 },\
 [0x03E8]={\
  direction=\"l\",\
 },\
 [0x03E9]={\
  direction=\"l\",\
 },\
 [0x03EA]={\
  direction=\"l\",\
 },\
 [0x03EB]={\
  direction=\"l\",\
 },\
 [0x03EC]={\
  direction=\"l\",\
 },\
 [0x03ED]={\
  direction=\"l\",\
 },\
 [0x03EE]={\
  direction=\"l\",\
 },\
 [0x03EF]={\
  direction=\"l\",\
 },\
 [0x03F0]={\
  direction=\"l\",\
 },\
 [0x03F1]={\
  direction=\"l\",\
 },\
 [0x03F2]={\
  direction=\"l\",\
 },\
 [0x03F3]={\
  direction=\"l\",\
 },\
 [0x03F4]={\
  direction=\"l\",\
 },\
 [0x03F5]={\
  direction=\"l\",\
 },\
 [0x03F6]={\
  direction=\"on\",\
 },\
 [0x03F7]={\
  direction=\"l\",\
 },\
 [0x03F8]={\
  direction=\"l\",\
 },\
 [0x03F9]={\
  direction=\"l\",\
 },\
 [0x03FA]={\
  direction=\"l\",\
 },\
 [0x03FB]={\
  direction=\"l\",\
 },\
 [0x03FC]={\
  direction=\"l\",\
 },\
 [0x03FD]={\
  direction=\"l\",\
 },\
 [0x03FE]={\
  direction=\"l\",\
 },\
 [0x03FF]={\
  direction=\"l\",\
 },\
 [0x0400]={\
  direction=\"l\",\
 },\
 [0x0401]={\
  direction=\"l\",\
 },\
 [0x0402]={\
  direction=\"l\",\
 },\
 [0x0403]={\
  direction=\"l\",\
 },\
 [0x0404]={\
  direction=\"l\",\
 },\
 [0x0405]={\
  direction=\"l\",\
 },\
 [0x0406]={\
  direction=\"l\",\
 },\
 [0x0407]={\
  direction=\"l\",\
 },\
 [0x0408]={\
  direction=\"l\",\
 },\
 [0x0409]={\
  direction=\"l\",\
 },\
 [0x040A]={\
  direction=\"l\",\
 },\
 [0x040B]={\
  direction=\"l\",\
 },\
 [0x040C]={\
  direction=\"l\",\
 },\
 [0x040D]={\
  direction=\"l\",\
 },\
 [0x040E]={\
  direction=\"l\",\
 },\
 [0x040F]={\
  direction=\"l\",\
 },\
 [0x0410]={\
  direction=\"l\",\
 },\
 [0x0411]={\
  direction=\"l\",\
 },\
 [0x0412]={\
  direction=\"l\",\
 },\
 [0x0413]={\
  direction=\"l\",\
 },\
 [0x0414]={\
  direction=\"l\",\
 },\
 [0x0415]={\
  direction=\"l\",\
 },\
 [0x0416]={\
  direction=\"l\",\
 },\
 [0x0417]={\
  direction=\"l\",\
 },\
 [0x0418]={\
  direction=\"l\",\
 },\
 [0x0419]={\
  direction=\"l\",\
 },\
 [0x041A]={\
  direction=\"l\",\
 },\
 [0x041B]={\
  direction=\"l\",\
 },\
 [0x041C]={\
  direction=\"l\",\
 },\
 [0x041D]={\
  direction=\"l\",\
 },\
 [0x041E]={\
  direction=\"l\",\
 },\
 [0x041F]={\
  direction=\"l\",\
 },\
 [0x0420]={\
  direction=\"l\",\
 },\
 [0x0421]={\
  direction=\"l\",\
 },\
 [0x0422]={\
  direction=\"l\",\
 },\
 [0x0423]={\
  direction=\"l\",\
 },\
 [0x0424]={\
  direction=\"l\",\
 },\
 [0x0425]={\
  direction=\"l\",\
 },\
 [0x0426]={\
  direction=\"l\",\
 },\
 [0x0427]={\
  direction=\"l\",\
 },\
 [0x0428]={\
  direction=\"l\",\
 },\
 [0x0429]={\
  direction=\"l\",\
 },\
 [0x042A]={\
  direction=\"l\",\
 },\
 [0x042B]={\
  direction=\"l\",\
 },\
 [0x042C]={\
  direction=\"l\",\
 },\
 [0x042D]={\
  direction=\"l\",\
 },\
 [0x042E]={\
  direction=\"l\",\
 },\
 [0x042F]={\
  direction=\"l\",\
 },\
 [0x0430]={\
  direction=\"l\",\
 },\
 [0x0431]={\
  direction=\"l\",\
 },\
 [0x0432]={\
  direction=\"l\",\
 },\
 [0x0433]={\
  direction=\"l\",\
 },\
 [0x0434]={\
  direction=\"l\",\
 },\
 [0x0435]={\
  direction=\"l\",\
 },\
 [0x0436]={\
  direction=\"l\",\
 },\
 [0x0437]={\
  direction=\"l\",\
 },\
 [0x0438]={\
  direction=\"l\",\
 },\
 [0x0439]={\
  direction=\"l\",\
 },\
 [0x043A]={\
  direction=\"l\",\
 },\
 [0x043B]={\
  direction=\"l\",\
 },\
 [0x043C]={\
  direction=\"l\",\
 },\
 [0x043D]={\
  direction=\"l\",\
 },\
 [0x043E]={\
  direction=\"l\",\
 },\
 [0x043F]={\
  direction=\"l\",\
 },\
 [0x0440]={\
  direction=\"l\",\
 },\
 [0x0441]={\
  direction=\"l\",\
 },\
 [0x0442]={\
  direction=\"l\",\
 },\
 [0x0443]={\
  direction=\"l\",\
 },\
 [0x0444]={\
  direction=\"l\",\
 },\
 [0x0445]={\
  direction=\"l\",\
 },\
 [0x0446]={\
  direction=\"l\",\
 },\
 [0x0447]={\
  direction=\"l\",\
 },\
 [0x0448]={\
  direction=\"l\",\
 },\
 [0x0449]={\
  direction=\"l\",\
 },\
 [0x044A]={\
  direction=\"l\",\
 },\
 [0x044B]={\
  direction=\"l\",\
 },\
 [0x044C]={\
  direction=\"l\",\
 },\
 [0x044D]={\
  direction=\"l\",\
 },\
 [0x044E]={\
  direction=\"l\",\
 },\
 [0x044F]={\
  direction=\"l\",\
 },\
 [0x0450]={\
  direction=\"l\",\
 },\
 [0x0451]={\
  direction=\"l\",\
 },\
 [0x0452]={\
  direction=\"l\",\
 },\
 [0x0453]={\
  direction=\"l\",\
 },\
 [0x0454]={\
  direction=\"l\",\
 },\
 [0x0455]={\
  direction=\"l\",\
 },\
 [0x0456]={\
  direction=\"l\",\
 },\
 [0x0457]={\
  direction=\"l\",\
 },\
 [0x0458]={\
  direction=\"l\",\
 },\
 [0x0459]={\
  direction=\"l\",\
 },\
 [0x045A]={\
  direction=\"l\",\
 },\
 [0x045B]={\
  direction=\"l\",\
 },\
 [0x045C]={\
  direction=\"l\",\
 },\
 [0x045D]={\
  direction=\"l\",\
 },\
 [0x045E]={\
  direction=\"l\",\
 },\
 [0x045F]={\
  direction=\"l\",\
 },\
 [0x0460]={\
  direction=\"l\",\
 },\
 [0x0461]={\
  direction=\"l\",\
 },\
 [0x0462]={\
  direction=\"l\",\
 },\
 [0x0463]={\
  direction=\"l\",\
 },\
 [0x0464]={\
  direction=\"l\",\
 },\
 [0x0465]={\
  direction=\"l\",\
 },\
 [0x0466]={\
  direction=\"l\",\
 },\
 [0x0467]={\
  direction=\"l\",\
 },\
 [0x0468]={\
  direction=\"l\",\
 },\
 [0x0469]={\
  direction=\"l\",\
 },\
 [0x046A]={\
  direction=\"l\",\
 },\
 [0x046B]={\
  direction=\"l\",\
 },\
 [0x046C]={\
  direction=\"l\",\
 },\
 [0x046D]={\
  direction=\"l\",\
 },\
 [0x046E]={\
  direction=\"l\",\
 },\
 [0x046F]={\
  direction=\"l\",\
 },\
 [0x0470]={\
  direction=\"l\",\
 },\
 [0x0471]={\
  direction=\"l\",\
 },\
 [0x0472]={\
  direction=\"l\",\
 },\
 [0x0473]={\
  direction=\"l\",\
 },\
 [0x0474]={\
  direction=\"l\",\
 },\
 [0x0475]={\
  direction=\"l\",\
 },\
 [0x0476]={\
  direction=\"l\",\
 },\
 [0x0477]={\
  direction=\"l\",\
 },\
 [0x0478]={\
  direction=\"l\",\
 },\
 [0x0479]={\
  direction=\"l\",\
 },\
 [0x047A]={\
  direction=\"l\",\
 },\
 [0x047B]={\
  direction=\"l\",\
 },\
 [0x047C]={\
  direction=\"l\",\
 },\
 [0x047D]={\
  direction=\"l\",\
 },\
 [0x047E]={\
  direction=\"l\",\
 },\
 [0x047F]={\
  direction=\"l\",\
 },\
 [0x0480]={\
  direction=\"l\",\
 },\
 [0x0481]={\
  direction=\"l\",\
 },\
 [0x0482]={\
  direction=\"l\",\
 },\
 [0x0483]={\
  direction=\"nsm\",\
 },\
 [0x0484]={\
  direction=\"nsm\",\
 },\
 [0x0485]={\
  direction=\"nsm\",\
 },\
 [0x0486]={\
  direction=\"nsm\",\
 },\
 [0x0487]={\
  direction=\"nsm\",\
 },\
 [0x0488]={\
  direction=\"nsm\",\
 },\
 [0x0489]={\
  direction=\"nsm\",\
 },\
 [0x048A]={\
  direction=\"l\",\
 },\
 [0x048B]={\
  direction=\"l\",\
 },\
 [0x048C]={\
  direction=\"l\",\
 },\
 [0x048D]={\
  direction=\"l\",\
 },\
 [0x048E]={\
  direction=\"l\",\
 },\
 [0x048F]={\
  direction=\"l\",\
 },\
 [0x0490]={\
  direction=\"l\",\
 },\
 [0x0491]={\
  direction=\"l\",\
 },\
 [0x0492]={\
  direction=\"l\",\
 },\
 [0x0493]={\
  direction=\"l\",\
 },\
 [0x0494]={\
  direction=\"l\",\
 },\
 [0x0495]={\
  direction=\"l\",\
 },\
 [0x0496]={\
  direction=\"l\",\
 },\
 [0x0497]={\
  direction=\"l\",\
 },\
 [0x0498]={\
  direction=\"l\",\
 },\
 [0x0499]={\
  direction=\"l\",\
 },\
 [0x049A]={\
  direction=\"l\",\
 },\
 [0x049B]={\
  direction=\"l\",\
 },\
 [0x049C]={\
  direction=\"l\",\
 },\
 [0x049D]={\
  direction=\"l\",\
 },\
 [0x049E]={\
  direction=\"l\",\
 },\
 [0x049F]={\
  direction=\"l\",\
 },\
 [0x04A0]={\
  direction=\"l\",\
 },\
 [0x04A1]={\
  direction=\"l\",\
 },\
 [0x04A2]={\
  direction=\"l\",\
 },\
 [0x04A3]={\
  direction=\"l\",\
 },\
 [0x04A4]={\
  direction=\"l\",\
 },\
 [0x04A5]={\
  direction=\"l\",\
 },\
 [0x04A6]={\
  direction=\"l\",\
 },\
 [0x04A7]={\
  direction=\"l\",\
 },\
 [0x04A8]={\
  direction=\"l\",\
 },\
 [0x04A9]={\
  direction=\"l\",\
 },\
 [0x04AA]={\
  direction=\"l\",\
 },\
 [0x04AB]={\
  direction=\"l\",\
 },\
 [0x04AC]={\
  direction=\"l\",\
 },\
 [0x04AD]={\
  direction=\"l\",\
 },\
 [0x04AE]={\
  direction=\"l\",\
 },\
 [0x04AF]={\
  direction=\"l\",\
 },\
 [0x04B0]={\
  direction=\"l\",\
 },\
 [0x04B1]={\
  direction=\"l\",\
 },\
 [0x04B2]={\
  direction=\"l\",\
 },\
 [0x04B3]={\
  direction=\"l\",\
 },\
 [0x04B4]={\
  direction=\"l\",\
 },\
 [0x04B5]={\
  direction=\"l\",\
 },\
 [0x04B6]={\
  direction=\"l\",\
 },\
 [0x04B7]={\
  direction=\"l\",\
 },\
 [0x04B8]={\
  direction=\"l\",\
 },\
 [0x04B9]={\
  direction=\"l\",\
 },\
 [0x04BA]={\
  direction=\"l\",\
 },\
 [0x04BB]={\
  direction=\"l\",\
 },\
 [0x04BC]={\
  direction=\"l\",\
 },\
 [0x04BD]={\
  direction=\"l\",\
 },\
 [0x04BE]={\
  direction=\"l\",\
 },\
 [0x04BF]={\
  direction=\"l\",\
 },\
 [0x04C0]={\
  direction=\"l\",\
 },\
 [0x04C1]={\
  direction=\"l\",\
 },\
 [0x04C2]={\
  direction=\"l\",\
 },\
 [0x04C3]={\
  direction=\"l\",\
 },\
 [0x04C4]={\
  direction=\"l\",\
 },\
 [0x04C5]={\
  direction=\"l\",\
 },\
 [0x04C6]={\
  direction=\"l\",\
 },\
 [0x04C7]={\
  direction=\"l\",\
 },\
 [0x04C8]={\
  direction=\"l\",\
 },\
 [0x04C9]={\
  direction=\"l\",\
 },\
 [0x04CA]={\
  direction=\"l\",\
 },\
 [0x04CB]={\
  direction=\"l\",\
 },\
 [0x04CC]={\
  direction=\"l\",\
 },\
 [0x04CD]={\
  direction=\"l\",\
 },\
 [0x04CE]={\
  direction=\"l\",\
 },\
 [0x04CF]={\
  direction=\"l\",\
 },\
 [0x04D0]={\
  direction=\"l\",\
 },\
 [0x04D1]={\
  direction=\"l\",\
 },\
 [0x04D2]={\
  direction=\"l\",\
 },\
 [0x04D3]={\
  direction=\"l\",\
 },\
 [0x04D4]={\
  direction=\"l\",\
 },\
 [0x04D5]={\
  direction=\"l\",\
 },\
 [0x04D6]={\
  direction=\"l\",\
 },\
 [0x04D7]={\
  direction=\"l\",\
 },\
 [0x04D8]={\
  direction=\"l\",\
 },\
 [0x04D9]={\
  direction=\"l\",\
 },\
 [0x04DA]={\
  direction=\"l\",\
 },\
 [0x04DB]={\
  direction=\"l\",\
 },\
 [0x04DC]={\
  direction=\"l\",\
 },\
 [0x04DD]={\
  direction=\"l\",\
 },\
 [0x04DE]={\
  direction=\"l\",\
 },\
 [0x04DF]={\
  direction=\"l\",\
 },\
 [0x04E0]={\
  direction=\"l\",\
 },\
 [0x04E1]={\
  direction=\"l\",\
 },\
 [0x04E2]={\
  direction=\"l\",\
 },\
 [0x04E3]={\
  direction=\"l\",\
 },\
 [0x04E4]={\
  direction=\"l\",\
 },\
 [0x04E5]={\
  direction=\"l\",\
 },\
 [0x04E6]={\
  direction=\"l\",\
 },\
 [0x04E7]={\
  direction=\"l\",\
 },\
 [0x04E8]={\
  direction=\"l\",\
 },\
 [0x04E9]={\
  direction=\"l\",\
 },\
 [0x04EA]={\
  direction=\"l\",\
 },\
 [0x04EB]={\
  direction=\"l\",\
 },\
 [0x04EC]={\
  direction=\"l\",\
 },\
 [0x04ED]={\
  direction=\"l\",\
 },\
 [0x04EE]={\
  direction=\"l\",\
 },\
 [0x04EF]={\
  direction=\"l\",\
 },\
 [0x04F0]={\
  direction=\"l\",\
 },\
 [0x04F1]={\
  direction=\"l\",\
 },\
 [0x04F2]={\
  direction=\"l\",\
 },\
 [0x04F3]={\
  direction=\"l\",\
 },\
 [0x04F4]={\
  direction=\"l\",\
 },\
 [0x04F5]={\
  direction=\"l\",\
 },\
 [0x04F6]={\
  direction=\"l\",\
 },\
 [0x04F7]={\
  direction=\"l\",\
 },\
 [0x04F8]={\
  direction=\"l\",\
 },\
 [0x04F9]={\
  direction=\"l\",\
 },\
 [0x04FA]={\
  direction=\"l\",\
 },\
 [0x04FB]={\
  direction=\"l\",\
 },\
 [0x04FC]={\
  direction=\"l\",\
 },\
 [0x04FD]={\
  direction=\"l\",\
 },\
 [0x04FE]={\
  direction=\"l\",\
 },\
 [0x04FF]={\
  direction=\"l\",\
 },\
 [0x0500]={\
  direction=\"l\",\
 },\
 [0x0501]={\
  direction=\"l\",\
 },\
 [0x0502]={\
  direction=\"l\",\
 },\
 [0x0503]={\
  direction=\"l\",\
 },\
 [0x0504]={\
  direction=\"l\",\
 },\
 [0x0505]={\
  direction=\"l\",\
 },\
 [0x0506]={\
  direction=\"l\",\
 },\
 [0x0507]={\
  direction=\"l\",\
 },\
 [0x0508]={\
  direction=\"l\",\
 },\
 [0x0509]={\
  direction=\"l\",\
 },\
 [0x050A]={\
  direction=\"l\",\
 },\
 [0x050B]={\
  direction=\"l\",\
 },\
 [0x050C]={\
  direction=\"l\",\
 },\
 [0x050D]={\
  direction=\"l\",\
 },\
 [0x050E]={\
  direction=\"l\",\
 },\
 [0x050F]={\
  direction=\"l\",\
 },\
 [0x0510]={\
  direction=\"l\",\
 },\
 [0x0511]={\
  direction=\"l\",\
 },\
 [0x0512]={\
  direction=\"l\",\
 },\
 [0x0513]={\
  direction=\"l\",\
 },\
 [0x0514]={\
  direction=\"l\",\
 },\
 [0x0515]={\
  direction=\"l\",\
 },\
 [0x0516]={\
  direction=\"l\",\
 },\
 [0x0517]={\
  direction=\"l\",\
 },\
 [0x0518]={\
  direction=\"l\",\
 },\
 [0x0519]={\
  direction=\"l\",\
 },\
 [0x051A]={\
  direction=\"l\",\
 },\
 [0x051B]={\
  direction=\"l\",\
 },\
 [0x051C]={\
  direction=\"l\",\
 },\
 [0x051D]={\
  direction=\"l\",\
 },\
 [0x051E]={\
  direction=\"l\",\
 },\
 [0x051F]={\
  direction=\"l\",\
 },\
 [0x0520]={\
  direction=\"l\",\
 },\
 [0x0521]={\
  direction=\"l\",\
 },\
 [0x0522]={\
  direction=\"l\",\
 },\
 [0x0523]={\
  direction=\"l\",\
 },\
 [0x0524]={\
  direction=\"l\",\
 },\
 [0x0525]={\
  direction=\"l\",\
 },\
 [0x0526]={\
  direction=\"l\",\
 },\
 [0x0527]={\
  direction=\"l\",\
 },\
 [0x0531]={\
  direction=\"l\",\
 },\
 [0x0532]={\
  direction=\"l\",\
 },\
 [0x0533]={\
  direction=\"l\",\
 },\
 [0x0534]={\
  direction=\"l\",\
 },\
 [0x0535]={\
  direction=\"l\",\
 },\
 [0x0536]={\
  direction=\"l\",\
 },\
 [0x0537]={\
  direction=\"l\",\
 },\
 [0x0538]={\
  direction=\"l\",\
 },\
 [0x0539]={\
  direction=\"l\",\
 },\
 [0x053A]={\
  direction=\"l\",\
 },\
 [0x053B]={\
  direction=\"l\",\
 },\
 [0x053C]={\
  direction=\"l\",\
 },\
 [0x053D]={\
  direction=\"l\",\
 },\
 [0x053E]={\
  direction=\"l\",\
 },\
 [0x053F]={\
  direction=\"l\",\
 },\
 [0x0540]={\
  direction=\"l\",\
 },\
 [0x0541]={\
  direction=\"l\",\
 },\
 [0x0542]={\
  direction=\"l\",\
 },\
 [0x0543]={\
  direction=\"l\",\
 },\
 [0x0544]={\
  direction=\"l\",\
 },\
 [0x0545]={\
  direction=\"l\",\
 },\
 [0x0546]={\
  direction=\"l\",\
 },\
 [0x0547]={\
  direction=\"l\",\
 },\
 [0x0548]={\
  direction=\"l\",\
 },\
 [0x0549]={\
  direction=\"l\",\
 },\
 [0x054A]={\
  direction=\"l\",\
 },\
 [0x054B]={\
  direction=\"l\",\
 },\
 [0x054C]={\
  direction=\"l\",\
 },\
 [0x054D]={\
  direction=\"l\",\
 },\
 [0x054E]={\
  direction=\"l\",\
 },\
 [0x054F]={\
  direction=\"l\",\
 },\
 [0x0550]={\
  direction=\"l\",\
 },\
 [0x0551]={\
  direction=\"l\",\
 },\
 [0x0552]={\
  direction=\"l\",\
 },\
 [0x0553]={\
  direction=\"l\",\
 },\
 [0x0554]={\
  direction=\"l\",\
 },\
 [0x0555]={\
  direction=\"l\",\
 },\
 [0x0556]={\
  direction=\"l\",\
 },\
 [0x0559]={\
  direction=\"l\",\
 },\
 [0x055A]={\
  direction=\"l\",\
 },\
 [0x055B]={\
  direction=\"l\",\
 },\
 [0x055C]={\
  direction=\"l\",\
 },\
 [0x055D]={\
  direction=\"l\",\
 },\
 [0x055E]={\
  direction=\"l\",\
 },\
 [0x055F]={\
  direction=\"l\",\
 },\
 [0x0561]={\
  direction=\"l\",\
 },\
 [0x0562]={\
  direction=\"l\",\
 },\
 [0x0563]={\
  direction=\"l\",\
 },\
 [0x0564]={\
  direction=\"l\",\
 },\
 [0x0565]={\
  direction=\"l\",\
 },\
 [0x0566]={\
  direction=\"l\",\
 },\
 [0x0567]={\
  direction=\"l\",\
 },\
 [0x0568]={\
  direction=\"l\",\
 },\
 [0x0569]={\
  direction=\"l\",\
 },\
 [0x056A]={\
  direction=\"l\",\
 },\
 [0x056B]={\
  direction=\"l\",\
 },\
 [0x056C]={\
  direction=\"l\",\
 },\
 [0x056D]={\
  direction=\"l\",\
 },\
 [0x056E]={\
  direction=\"l\",\
 },\
 [0x056F]={\
  direction=\"l\",\
 },\
 [0x0570]={\
  direction=\"l\",\
 },\
 [0x0571]={\
  direction=\"l\",\
 },\
 [0x0572]={\
  direction=\"l\",\
 },\
 [0x0573]={\
  direction=\"l\",\
 },\
 [0x0574]={\
  direction=\"l\",\
 },\
 [0x0575]={\
  direction=\"l\",\
 },\
 [0x0576]={\
  direction=\"l\",\
 },\
 [0x0577]={\
  direction=\"l\",\
 },\
 [0x0578]={\
  direction=\"l\",\
 },\
 [0x0579]={\
  direction=\"l\",\
 },\
 [0x057A]={\
  direction=\"l\",\
 },\
 [0x057B]={\
  direction=\"l\",\
 },\
 [0x057C]={\
  direction=\"l\",\
 },\
 [0x057D]={\
  direction=\"l\",\
 },\
 [0x057E]={\
  direction=\"l\",\
 },\
 [0x057F]={\
  direction=\"l\",\
 },\
 [0x0580]={\
  direction=\"l\",\
 },\
 [0x0581]={\
  direction=\"l\",\
 },\
 [0x0582]={\
  direction=\"l\",\
 },\
 [0x0583]={\
  direction=\"l\",\
 },\
 [0x0584]={\
  direction=\"l\",\
 },\
 [0x0585]={\
  direction=\"l\",\
 },\
 [0x0586]={\
  direction=\"l\",\
 },\
 [0x0587]={\
  direction=\"l\",\
 },\
 [0x0589]={\
  direction=\"l\",\
 },\
 [0x058A]={\
  direction=\"on\",\
 },\
 [0x058F]={\
  direction=\"et\",\
 },\
 [0x0591]={\
  direction=\"nsm\",\
 },\
 [0x0592]={\
  direction=\"nsm\",\
 },\
 [0x0593]={\
  direction=\"nsm\",\
 },\
 [0x0594]={\
  direction=\"nsm\",\
 },\
 [0x0595]={\
  direction=\"nsm\",\
 },\
 [0x0596]={\
  direction=\"nsm\",\
 },\
 [0x0597]={\
  direction=\"nsm\",\
 },\
 [0x0598]={\
  direction=\"nsm\",\
 },\
 [0x0599]={\
  direction=\"nsm\",\
 },\
 [0x059A]={\
  direction=\"nsm\",\
 },\
 [0x059B]={\
  direction=\"nsm\",\
 },\
 [0x059C]={\
  direction=\"nsm\",\
 },\
 [0x059D]={\
  direction=\"nsm\",\
 },\
 [0x059E]={\
  direction=\"nsm\",\
 },\
 [0x059F]={\
  direction=\"nsm\",\
 },\
 [0x05A0]={\
  direction=\"nsm\",\
 },\
 [0x05A1]={\
  direction=\"nsm\",\
 },\
 [0x05A2]={\
  direction=\"nsm\",\
 },\
 [0x05A3]={\
  direction=\"nsm\",\
 },\
 [0x05A4]={\
  direction=\"nsm\",\
 },\
 [0x05A5]={\
  direction=\"nsm\",\
 },\
 [0x05A6]={\
  direction=\"nsm\",\
 },\
 [0x05A7]={\
  direction=\"nsm\",\
 },\
 [0x05A8]={\
  direction=\"nsm\",\
 },\
 [0x05A9]={\
  direction=\"nsm\",\
 },\
 [0x05AA]={\
  direction=\"nsm\",\
 },\
 [0x05AB]={\
  direction=\"nsm\",\
 },\
 [0x05AC]={\
  direction=\"nsm\",\
 },\
 [0x05AD]={\
  direction=\"nsm\",\
 },\
 [0x05AE]={\
  direction=\"nsm\",\
 },\
 [0x05AF]={\
  direction=\"nsm\",\
 },\
 [0x05B0]={\
  direction=\"nsm\",\
 },\
 [0x05B1]={\
  direction=\"nsm\",\
 },\
 [0x05B2]={\
  direction=\"nsm\",\
 },\
 [0x05B3]={\
  direction=\"nsm\",\
 },\
 [0x05B4]={\
  direction=\"nsm\",\
 },\
 [0x05B5]={\
  direction=\"nsm\",\
 },\
 [0x05B6]={\
  direction=\"nsm\",\
 },\
 [0x05B7]={\
  direction=\"nsm\",\
 },\
 [0x05B8]={\
  direction=\"nsm\",\
 },\
 [0x05B9]={\
  direction=\"nsm\",\
 },\
 [0x05BA]={\
  direction=\"nsm\",\
 },\
 [0x05BB]={\
  direction=\"nsm\",\
 },\
 [0x05BC]={\
  direction=\"nsm\",\
 },\
 [0x05BD]={\
  direction=\"nsm\",\
 },\
 [0x05BE]={\
  direction=\"r\",\
 },\
 [0x05BF]={\
  direction=\"nsm\",\
 },\
 [0x05C0]={\
  direction=\"r\",\
 },\
 [0x05C1]={\
  direction=\"nsm\",\
 },\
 [0x05C2]={\
  direction=\"nsm\",\
 },\
 [0x05C3]={\
  direction=\"r\",\
 },\
 [0x05C4]={\
  direction=\"nsm\",\
 },\
 [0x05C5]={\
  direction=\"nsm\",\
 },\
 [0x05C6]={\
  direction=\"r\",\
 },\
 [0x05C7]={\
  direction=\"nsm\",\
 },\
 [0x05D0]={\
  direction=\"r\",\
 },\
 [0x05D1]={\
  direction=\"r\",\
 },\
 [0x05D2]={\
  direction=\"r\",\
 },\
 [0x05D3]={\
  direction=\"r\",\
 },\
 [0x05D4]={\
  direction=\"r\",\
 },\
 [0x05D5]={\
  direction=\"r\",\
 },\
 [0x05D6]={\
  direction=\"r\",\
 },\
 [0x05D7]={\
  direction=\"r\",\
 },\
 [0x05D8]={\
  direction=\"r\",\
 },\
 [0x05D9]={\
  direction=\"r\",\
 },\
 [0x05DA]={\
  direction=\"r\",\
 },\
 [0x05DB]={\
  direction=\"r\",\
 },\
 [0x05DC]={\
  direction=\"r\",\
 },\
 [0x05DD]={\
  direction=\"r\",\
 },\
 [0x05DE]={\
  direction=\"r\",\
 },\
 [0x05DF]={\
  direction=\"r\",\
 },\
 [0x05E0]={\
  direction=\"r\",\
 },\
 [0x05E1]={\
  direction=\"r\",\
 },\
 [0x05E2]={\
  direction=\"r\",\
 },\
 [0x05E3]={\
  direction=\"r\",\
 },\
 [0x05E4]={\
  direction=\"r\",\
 },\
 [0x05E5]={\
  direction=\"r\",\
 },\
 [0x05E6]={\
  direction=\"r\",\
 },\
 [0x05E7]={\
  direction=\"r\",\
 },\
 [0x05E8]={\
  direction=\"r\",\
 },\
 [0x05E9]={\
  direction=\"r\",\
 },\
 [0x05EA]={\
  direction=\"r\",\
 },\
 [0x05F0]={\
  direction=\"r\",\
 },\
 [0x05F1]={\
  direction=\"r\",\
 },\
 [0x05F2]={\
  direction=\"r\",\
 },\
 [0x05F3]={\
  direction=\"r\",\
 },\
 [0x05F4]={\
  direction=\"r\",\
 },\
 [0x0600]={\
  direction=\"an\",\
 },\
 [0x0601]={\
  direction=\"an\",\
 },\
 [0x0602]={\
  direction=\"an\",\
 },\
 [0x0603]={\
  direction=\"an\",\
 },\
 [0x0604]={\
  direction=\"an\",\
 },\
 [0x0606]={\
  direction=\"on\",\
 },\
 [0x0607]={\
  direction=\"on\",\
 },\
 [0x0608]={\
  direction=\"al\",\
 },\
 [0x0609]={\
  direction=\"et\",\
 },\
 [0x060A]={\
  direction=\"et\",\
 },\
 [0x060B]={\
  direction=\"al\",\
 },\
 [0x060C]={\
  direction=\"cs\",\
 },\
 [0x060D]={\
  direction=\"al\",\
 },\
 [0x060E]={\
  direction=\"on\",\
 },\
 [0x060F]={\
  direction=\"on\",\
 },\
 [0x0610]={\
  direction=\"nsm\",\
 },\
 [0x0611]={\
  direction=\"nsm\",\
 },\
 [0x0612]={\
  direction=\"nsm\",\
 },\
 [0x0613]={\
  direction=\"nsm\",\
 },\
 [0x0614]={\
  direction=\"nsm\",\
 },\
 [0x0615]={\
  direction=\"nsm\",\
 },\
 [0x0616]={\
  direction=\"nsm\",\
 },\
 [0x0617]={\
  direction=\"nsm\",\
 },\
 [0x0618]={\
  direction=\"nsm\",\
 },\
 [0x0619]={\
  direction=\"nsm\",\
 },\
 [0x061A]={\
  direction=\"nsm\",\
 },\
 [0x061B]={\
  direction=\"al\",\
 },\
 [0x061E]={\
  direction=\"al\",\
 },\
 [0x061F]={\
  direction=\"al\",\
 },\
 [0x0620]={\
  direction=\"al\",\
 },\
 [0x0621]={\
  direction=\"al\",\
 },\
 [0x0622]={\
  direction=\"al\",\
 },\
 [0x0623]={\
  direction=\"al\",\
 },\
 [0x0624]={\
  direction=\"al\",\
 },\
 [0x0625]={\
  direction=\"al\",\
 },\
 [0x0626]={\
  direction=\"al\",\
 },\
 [0x0627]={\
  direction=\"al\",\
 },\
 [0x0628]={\
  direction=\"al\",\
 },\
 [0x0629]={\
  direction=\"al\",\
 },\
 [0x062A]={\
  direction=\"al\",\
 },\
 [0x062B]={\
  direction=\"al\",\
 },\
 [0x062C]={\
  direction=\"al\",\
 },\
 [0x062D]={\
  direction=\"al\",\
 },\
 [0x062E]={\
  direction=\"al\",\
 },\
 [0x062F]={\
  direction=\"al\",\
 },\
 [0x0630]={\
  direction=\"al\",\
 },\
 [0x0631]={\
  direction=\"al\",\
 },\
 [0x0632]={\
  direction=\"al\",\
 },\
 [0x0633]={\
  direction=\"al\",\
 },\
 [0x0634]={\
  direction=\"al\",\
 },\
 [0x0635]={\
  direction=\"al\",\
 },\
 [0x0636]={\
  direction=\"al\",\
 },\
 [0x0637]={\
  direction=\"al\",\
 },\
 [0x0638]={\
  direction=\"al\",\
 },\
 [0x0639]={\
  direction=\"al\",\
 },\
 [0x063A]={\
  direction=\"al\",\
 },\
 [0x063B]={\
  direction=\"al\",\
 },\
 [0x063C]={\
  direction=\"al\",\
 },\
 [0x063D]={\
  direction=\"al\",\
 },\
 [0x063E]={\
  direction=\"al\",\
 },\
 [0x063F]={\
  direction=\"al\",\
 },\
 [0x0640]={\
  direction=\"al\",\
 },\
 [0x0641]={\
  direction=\"al\",\
 },\
 [0x0642]={\
  direction=\"al\",\
 },\
 [0x0643]={\
  direction=\"al\",\
 },\
 [0x0644]={\
  direction=\"al\",\
 },\
 [0x0645]={\
  direction=\"al\",\
 },\
 [0x0646]={\
  direction=\"al\",\
 },\
 [0x0647]={\
  direction=\"al\",\
 },\
 [0x0648]={\
  direction=\"al\",\
 },\
 [0x0649]={\
  direction=\"al\",\
 },\
 [0x064A]={\
  direction=\"al\",\
 },\
 [0x064B]={\
  direction=\"nsm\",\
 },\
 [0x064C]={\
  direction=\"nsm\",\
 },\
 [0x064D]={\
  direction=\"nsm\",\
 },\
 [0x064E]={\
  direction=\"nsm\",\
 },\
 [0x064F]={\
  direction=\"nsm\",\
 },\
 [0x0650]={\
  direction=\"nsm\",\
 },\
 [0x0651]={\
  direction=\"nsm\",\
 },\
 [0x0652]={\
  direction=\"nsm\",\
 },\
 [0x0653]={\
  direction=\"nsm\",\
 },\
 [0x0654]={\
  direction=\"nsm\",\
 },\
 [0x0655]={\
  direction=\"nsm\",\
 },\
 [0x0656]={\
  direction=\"nsm\",\
 },\
 [0x0657]={\
  direction=\"nsm\",\
 },\
 [0x0658]={\
  direction=\"nsm\",\
 },\
 [0x0659]={\
  direction=\"nsm\",\
 },\
 [0x065A]={\
  direction=\"nsm\",\
 },\
 [0x065B]={\
  direction=\"nsm\",\
 },\
 [0x065C]={\
  direction=\"nsm\",\
 },\
 [0x065D]={\
  direction=\"nsm\",\
 },\
 [0x065E]={\
  direction=\"nsm\",\
 },\
 [0x065F]={\
  direction=\"nsm\",\
 },\
 [0x0660]={\
  direction=\"an\",\
 },\
 [0x0661]={\
  direction=\"an\",\
 },\
 [0x0662]={\
  direction=\"an\",\
 },\
 [0x0663]={\
  direction=\"an\",\
 },\
 [0x0664]={\
  direction=\"an\",\
 },\
 [0x0665]={\
  direction=\"an\",\
 },\
 [0x0666]={\
  direction=\"an\",\
 },\
 [0x0667]={\
  direction=\"an\",\
 },\
 [0x0668]={\
  direction=\"an\",\
 },\
 [0x0669]={\
  direction=\"an\",\
 },\
 [0x066A]={\
  direction=\"et\",\
 },\
 [0x066B]={\
  direction=\"an\",\
 },\
 [0x066C]={\
  direction=\"an\",\
 },\
 [0x066D]={\
  direction=\"al\",\
 },\
 [0x066E]={\
  direction=\"al\",\
 },\
 [0x066F]={\
  direction=\"al\",\
 },\
 [0x0670]={\
  direction=\"nsm\",\
 },\
 [0x0671]={\
  direction=\"al\",\
 },\
 [0x0672]={\
  direction=\"al\",\
 },\
 [0x0673]={\
  direction=\"al\",\
 },\
 [0x0674]={\
  direction=\"al\",\
 },\
 [0x0675]={\
  direction=\"al\",\
 },\
 [0x0676]={\
  direction=\"al\",\
 },\
 [0x0677]={\
  direction=\"al\",\
 },\
 [0x0678]={\
  direction=\"al\",\
 },\
 [0x0679]={\
  direction=\"al\",\
 },\
 [0x067A]={\
  direction=\"al\",\
 },\
 [0x067B]={\
  direction=\"al\",\
 },\
 [0x067C]={\
  direction=\"al\",\
 },\
 [0x067D]={\
  direction=\"al\",\
 },\
 [0x067E]={\
  direction=\"al\",\
 },\
 [0x067F]={\
  direction=\"al\",\
 },\
 [0x0680]={\
  direction=\"al\",\
 },\
 [0x0681]={\
  direction=\"al\",\
 },\
 [0x0682]={\
  direction=\"al\",\
 },\
 [0x0683]={\
  direction=\"al\",\
 },\
 [0x0684]={\
  direction=\"al\",\
 },\
 [0x0685]={\
  direction=\"al\",\
 },\
 [0x0686]={\
  direction=\"al\",\
 },\
 [0x0687]={\
  direction=\"al\",\
 },\
 [0x0688]={\
  direction=\"al\",\
 },\
 [0x0689]={\
  direction=\"al\",\
 },\
 [0x068A]={\
  direction=\"al\",\
 },\
 [0x068B]={\
  direction=\"al\",\
 },\
 [0x068C]={\
  direction=\"al\",\
 },\
 [0x068D]={\
  direction=\"al\",\
 },\
 [0x068E]={\
  direction=\"al\",\
 },\
 [0x068F]={\
  direction=\"al\",\
 },\
 [0x0690]={\
  direction=\"al\",\
 },\
 [0x0691]={\
  direction=\"al\",\
 },\
 [0x0692]={\
  direction=\"al\",\
 },\
 [0x0693]={\
  direction=\"al\",\
 },\
 [0x0694]={\
  direction=\"al\",\
 },\
 [0x0695]={\
  direction=\"al\",\
 },\
 [0x0696]={\
  direction=\"al\",\
 },\
 [0x0697]={\
  direction=\"al\",\
 },\
 [0x0698]={\
  direction=\"al\",\
 },\
 [0x0699]={\
  direction=\"al\",\
 },\
 [0x069A]={\
  direction=\"al\",\
 },\
 [0x069B]={\
  direction=\"al\",\
 },\
 [0x069C]={\
  direction=\"al\",\
 },\
 [0x069D]={\
  direction=\"al\",\
 },\
 [0x069E]={\
  direction=\"al\",\
 },\
 [0x069F]={\
  direction=\"al\",\
 },\
 [0x06A0]={\
  direction=\"al\",\
 },\
 [0x06A1]={\
  direction=\"al\",\
 },\
 [0x06A2]={\
  direction=\"al\",\
 },\
 [0x06A3]={\
  direction=\"al\",\
 },\
 [0x06A4]={\
  direction=\"al\",\
 },\
 [0x06A5]={\
  direction=\"al\",\
 },\
 [0x06A6]={\
  direction=\"al\",\
 },\
 [0x06A7]={\
  direction=\"al\",\
 },\
 [0x06A8]={\
  direction=\"al\",\
 },\
 [0x06A9]={\
  direction=\"al\",\
 },\
 [0x06AA]={\
  direction=\"al\",\
 },\
 [0x06AB]={\
  direction=\"al\",\
 },\
 [0x06AC]={\
  direction=\"al\",\
 },\
 [0x06AD]={\
  direction=\"al\",\
 },\
 [0x06AE]={\
  direction=\"al\",\
 },\
 [0x06AF]={\
  direction=\"al\",\
 },\
 [0x06B0]={\
  direction=\"al\",\
 },\
 [0x06B1]={\
  direction=\"al\",\
 },\
 [0x06B2]={\
  direction=\"al\",\
 },\
 [0x06B3]={\
  direction=\"al\",\
 },\
 [0x06B4]={\
  direction=\"al\",\
 },\
 [0x06B5]={\
  direction=\"al\",\
 },\
 [0x06B6]={\
  direction=\"al\",\
 },\
 [0x06B7]={\
  direction=\"al\",\
 },\
 [0x06B8]={\
  direction=\"al\",\
 },\
 [0x06B9]={\
  direction=\"al\",\
 },\
 [0x06BA]={\
  direction=\"al\",\
 },\
 [0x06BB]={\
  direction=\"al\",\
 },\
 [0x06BC]={\
  direction=\"al\",\
 },\
 [0x06BD]={\
  direction=\"al\",\
 },\
 [0x06BE]={\
  direction=\"al\",\
 },\
 [0x06BF]={\
  direction=\"al\",\
 },\
 [0x06C0]={\
  direction=\"al\",\
 },\
 [0x06C1]={\
  direction=\"al\",\
 },\
 [0x06C2]={\
  direction=\"al\",\
 },\
 [0x06C3]={\
  direction=\"al\",\
 },\
 [0x06C4]={\
  direction=\"al\",\
 },\
 [0x06C5]={\
  direction=\"al\",\
 },\
 [0x06C6]={\
  direction=\"al\",\
 },\
 [0x06C7]={\
  direction=\"al\",\
 },\
 [0x06C8]={\
  direction=\"al\",\
 },\
 [0x06C9]={\
  direction=\"al\",\
 },\
 [0x06CA]={\
  direction=\"al\",\
 },\
 [0x06CB]={\
  direction=\"al\",\
 },\
 [0x06CC]={\
  direction=\"al\",\
 },\
 [0x06CD]={\
  direction=\"al\",\
 },\
 [0x06CE]={\
  direction=\"al\",\
 },\
 [0x06CF]={\
  direction=\"al\",\
 },\
 [0x06D0]={\
  direction=\"al\",\
 },\
 [0x06D1]={\
  direction=\"al\",\
 },\
 [0x06D2]={\
  direction=\"al\",\
 },\
 [0x06D3]={\
  direction=\"al\",\
 },\
 [0x06D4]={\
  direction=\"al\",\
 },\
 [0x06D5]={\
  direction=\"al\",\
 },\
 [0x06D6]={\
  direction=\"nsm\",\
 },\
 [0x06D7]={\
  direction=\"nsm\",\
 },\
 [0x06D8]={\
  direction=\"nsm\",\
 },\
 [0x06D9]={\
  direction=\"nsm\",\
 },\
 [0x06DA]={\
  direction=\"nsm\",\
 },\
 [0x06DB]={\
  direction=\"nsm\",\
 },\
 [0x06DC]={\
  direction=\"nsm\",\
 },\
 [0x06DD]={\
  direction=\"an\",\
 },\
 [0x06DE]={\
  direction=\"on\",\
 },\
 [0x06DF]={\
  direction=\"nsm\",\
 },\
 [0x06E0]={\
  direction=\"nsm\",\
 },\
 [0x06E1]={\
  direction=\"nsm\",\
 },\
 [0x06E2]={\
  direction=\"nsm\",\
 },\
 [0x06E3]={\
  direction=\"nsm\",\
 },\
 [0x06E4]={\
  direction=\"nsm\",\
 },\
 [0x06E5]={\
  direction=\"al\",\
 },\
 [0x06E6]={\
  direction=\"al\",\
 },\
 [0x06E7]={\
  direction=\"nsm\",\
 },\
 [0x06E8]={\
  direction=\"nsm\",\
 },\
 [0x06E9]={\
  direction=\"on\",\
 },\
 [0x06EA]={\
  direction=\"nsm\",\
 },\
 [0x06EB]={\
  direction=\"nsm\",\
 },\
 [0x06EC]={\
  direction=\"nsm\",\
 },\
 [0x06ED]={\
  direction=\"nsm\",\
 },\
 [0x06EE]={\
  direction=\"al\",\
 },\
 [0x06EF]={\
  direction=\"al\",\
 },\
 [0x06F0]={\
  direction=\"en\",\
 },\
 [0x06F1]={\
  direction=\"en\",\
 },\
 [0x06F2]={\
  direction=\"en\",\
 },\
 [0x06F3]={\
  direction=\"en\",\
 },\
 [0x06F4]={\
  direction=\"en\",\
 },\
 [0x06F5]={\
  direction=\"en\",\
 },\
 [0x06F6]={\
  direction=\"en\",\
 },\
 [0x06F7]={\
  direction=\"en\",\
 },\
 [0x06F8]={\
  direction=\"en\",\
 },\
 [0x06F9]={\
  direction=\"en\",\
 },\
 [0x06FA]={\
  direction=\"al\",\
 },\
 [0x06FB]={\
  direction=\"al\",\
 },\
 [0x06FC]={\
  direction=\"al\",\
 },\
 [0x06FD]={\
  direction=\"al\",\
 },\
 [0x06FE]={\
  direction=\"al\",\
 },\
 [0x06FF]={\
  direction=\"al\",\
 },\
 [0x0700]={\
  direction=\"al\",\
 },\
 [0x0701]={\
  direction=\"al\",\
 },\
 [0x0702]={\
  direction=\"al\",\
 },\
 [0x0703]={\
  direction=\"al\",\
 },\
 [0x0704]={\
  direction=\"al\",\
 },\
 [0x0705]={\
  direction=\"al\",\
 },\
 [0x0706]={\
  direction=\"al\",\
 },\
 [0x0707]={\
  direction=\"al\",\
 },\
 [0x0708]={\
  direction=\"al\",\
 },\
 [0x0709]={\
  direction=\"al\",\
 },\
 [0x070A]={\
  direction=\"al\",\
 },\
 [0x070B]={\
  direction=\"al\",\
 },\
 [0x070C]={\
  direction=\"al\",\
 },\
 [0x070D]={\
  direction=\"al\",\
 },\
 [0x070F]={\
  direction=\"al\",\
 },\
 [0x0710]={\
  direction=\"al\",\
 },\
 [0x0711]={\
  direction=\"nsm\",\
 },\
 [0x0712]={\
  direction=\"al\",\
 },\
 [0x0713]={\
  direction=\"al\",\
 },\
 [0x0714]={\
  direction=\"al\",\
 },\
 [0x0715]={\
  direction=\"al\",\
 },\
 [0x0716]={\
  direction=\"al\",\
 },\
 [0x0717]={\
  direction=\"al\",\
 },\
 [0x0718]={\
  direction=\"al\",\
 },\
 [0x0719]={\
  direction=\"al\",\
 },\
 [0x071A]={\
  direction=\"al\",\
 },\
 [0x071B]={\
  direction=\"al\",\
 },\
 [0x071C]={\
  direction=\"al\",\
 },\
 [0x071D]={\
  direction=\"al\",\
 },\
 [0x071E]={\
  direction=\"al\",\
 },\
 [0x071F]={\
  direction=\"al\",\
 },\
 [0x0720]={\
  direction=\"al\",\
 },\
 [0x0721]={\
  direction=\"al\",\
 },\
 [0x0722]={\
  direction=\"al\",\
 },\
 [0x0723]={\
  direction=\"al\",\
 },\
 [0x0724]={\
  direction=\"al\",\
 },\
 [0x0725]={\
  direction=\"al\",\
 },\
 [0x0726]={\
  direction=\"al\",\
 },\
 [0x0727]={\
  direction=\"al\",\
 },\
 [0x0728]={\
  direction=\"al\",\
 },\
 [0x0729]={\
  direction=\"al\",\
 },\
 [0x072A]={\
  direction=\"al\",\
 },\
 [0x072B]={\
  direction=\"al\",\
 },\
 [0x072C]={\
  direction=\"al\",\
 },\
 [0x072D]={\
  direction=\"al\",\
 },\
 [0x072E]={\
  direction=\"al\",\
 },\
 [0x072F]={\
  direction=\"al\",\
 },\
 [0x0730]={\
  direction=\"nsm\",\
 },\
 [0x0731]={\
  direction=\"nsm\",\
 },\
 [0x0732]={\
  direction=\"nsm\",\
 },\
 [0x0733]={\
  direction=\"nsm\",\
 },\
 [0x0734]={\
  direction=\"nsm\",\
 },\
 [0x0735]={\
  direction=\"nsm\",\
 },\
 [0x0736]={\
  direction=\"nsm\",\
 },\
 [0x0737]={\
  direction=\"nsm\",\
 },\
 [0x0738]={\
  direction=\"nsm\",\
 },\
 [0x0739]={\
  direction=\"nsm\",\
 },\
 [0x073A]={\
  direction=\"nsm\",\
 },\
 [0x073B]={\
  direction=\"nsm\",\
 },\
 [0x073C]={\
  direction=\"nsm\",\
 },\
 [0x073D]={\
  direction=\"nsm\",\
 },\
 [0x073E]={\
  direction=\"nsm\",\
 },\
 [0x073F]={\
  direction=\"nsm\",\
 },\
 [0x0740]={\
  direction=\"nsm\",\
 },\
 [0x0741]={\
  direction=\"nsm\",\
 },\
 [0x0742]={\
  direction=\"nsm\",\
 },\
 [0x0743]={\
  direction=\"nsm\",\
 },\
 [0x0744]={\
  direction=\"nsm\",\
 },\
 [0x0745]={\
  direction=\"nsm\",\
 },\
 [0x0746]={\
  direction=\"nsm\",\
 },\
 [0x0747]={\
  direction=\"nsm\",\
 },\
 [0x0748]={\
  direction=\"nsm\",\
 },\
 [0x0749]={\
  direction=\"nsm\",\
 },\
 [0x074A]={\
  direction=\"nsm\",\
 },\
 [0x074D]={\
  direction=\"al\",\
 },\
 [0x074E]={\
  direction=\"al\",\
 },\
 [0x074F]={\
  direction=\"al\",\
 },\
 [0x0750]={\
  direction=\"al\",\
 },\
 [0x0751]={\
  direction=\"al\",\
 },\
 [0x0752]={\
  direction=\"al\",\
 },\
 [0x0753]={\
  direction=\"al\",\
 },\
 [0x0754]={\
  direction=\"al\",\
 },\
 [0x0755]={\
  direction=\"al\",\
 },\
 [0x0756]={\
  direction=\"al\",\
 },\
 [0x0757]={\
  direction=\"al\",\
 },\
 [0x0758]={\
  direction=\"al\",\
 },\
 [0x0759]={\
  direction=\"al\",\
 },\
 [0x075A]={\
  direction=\"al\",\
 },\
 [0x075B]={\
  direction=\"al\",\
 },\
 [0x075C]={\
  direction=\"al\",\
 },\
 [0x075D]={\
  direction=\"al\",\
 },\
 [0x075E]={\
  direction=\"al\",\
 },\
 [0x075F]={\
  direction=\"al\",\
 },\
 [0x0760]={\
  direction=\"al\",\
 },\
 [0x0761]={\
  direction=\"al\",\
 },\
 [0x0762]={\
  direction=\"al\",\
 },\
 [0x0763]={\
  direction=\"al\",\
 },\
 [0x0764]={\
  direction=\"al\",\
 },\
 [0x0765]={\
  direction=\"al\",\
 },\
 [0x0766]={\
  direction=\"al\",\
 },\
 [0x0767]={\
  direction=\"al\",\
 },\
 [0x0768]={\
  direction=\"al\",\
 },\
 [0x0769]={\
  direction=\"al\",\
 },\
 [0x076A]={\
  direction=\"al\",\
 },\
 [0x076B]={\
  direction=\"al\",\
 },\
 [0x076C]={\
  direction=\"al\",\
 },\
 [0x076D]={\
  direction=\"al\",\
 },\
 [0x076E]={\
  direction=\"al\",\
 },\
 [0x076F]={\
  direction=\"al\",\
 },\
 [0x0770]={\
  direction=\"al\",\
 },\
 [0x0771]={\
  direction=\"al\",\
 },\
 [0x0772]={\
  direction=\"al\",\
 },\
 [0x0773]={\
  direction=\"al\",\
 },\
 [0x0774]={\
  direction=\"al\",\
 },\
 [0x0775]={\
  direction=\"al\",\
 },\
 [0x0776]={\
  direction=\"al\",\
 },\
 [0x0777]={\
  direction=\"al\",\
 },\
 [0x0778]={\
  direction=\"al\",\
 },\
 [0x0779]={\
  direction=\"al\",\
 },\
 [0x077A]={\
  direction=\"al\",\
 },\
 [0x077B]={\
  direction=\"al\",\
 },\
 [0x077C]={\
  direction=\"al\",\
 },\
 [0x077D]={\
  direction=\"al\",\
 },\
 [0x077E]={\
  direction=\"al\",\
 },\
 [0x077F]={\
  direction=\"al\",\
 },\
 [0x0780]={\
  direction=\"al\",\
 },\
 [0x0781]={\
  direction=\"al\",\
 },\
 [0x0782]={\
  direction=\"al\",\
 },\
 [0x0783]={\
  direction=\"al\",\
 },\
 [0x0784]={\
  direction=\"al\",\
 },\
 [0x0785]={\
  direction=\"al\",\
 },\
 [0x0786]={\
  direction=\"al\",\
 },\
 [0x0787]={\
  direction=\"al\",\
 },\
 [0x0788]={\
  direction=\"al\",\
 },\
 [0x0789]={\
  direction=\"al\",\
 },\
 [0x078A]={\
  direction=\"al\",\
 },\
 [0x078B]={\
  direction=\"al\",\
 },\
 [0x078C]={\
  direction=\"al\",\
 },\
 [0x078D]={\
  direction=\"al\",\
 },\
 [0x078E]={\
  direction=\"al\",\
 },\
 [0x078F]={\
  direction=\"al\",\
 },\
 [0x0790]={\
  direction=\"al\",\
 },\
 [0x0791]={\
  direction=\"al\",\
 },\
 [0x0792]={\
  direction=\"al\",\
 },\
 [0x0793]={\
  direction=\"al\",\
 },\
 [0x0794]={\
  direction=\"al\",\
 },\
 [0x0795]={\
  direction=\"al\",\
 },\
 [0x0796]={\
  direction=\"al\",\
 },\
 [0x0797]={\
  direction=\"al\",\
 },\
 [0x0798]={\
  direction=\"al\",\
 },\
 [0x0799]={\
  direction=\"al\",\
 },\
 [0x079A]={\
  direction=\"al\",\
 },\
 [0x079B]={\
  direction=\"al\",\
 },\
 [0x079C]={\
  direction=\"al\",\
 },\
 [0x079D]={\
  direction=\"al\",\
 },\
 [0x079E]={\
  direction=\"al\",\
 },\
 [0x079F]={\
  direction=\"al\",\
 },\
 [0x07A0]={\
  direction=\"al\",\
 },\
 [0x07A1]={\
  direction=\"al\",\
 },\
 [0x07A2]={\
  direction=\"al\",\
 },\
 [0x07A3]={\
  direction=\"al\",\
 },\
 [0x07A4]={\
  direction=\"al\",\
 },\
 [0x07A5]={\
  direction=\"al\",\
 },\
 [0x07A6]={\
  direction=\"nsm\",\
 },\
 [0x07A7]={\
  direction=\"nsm\",\
 },\
 [0x07A8]={\
  direction=\"nsm\",\
 },\
 [0x07A9]={\
  direction=\"nsm\",\
 },\
 [0x07AA]={\
  direction=\"nsm\",\
 },\
 [0x07AB]={\
  direction=\"nsm\",\
 },\
 [0x07AC]={\
  direction=\"nsm\",\
 },\
 [0x07AD]={\
  direction=\"nsm\",\
 },\
 [0x07AE]={\
  direction=\"nsm\",\
 },\
 [0x07AF]={\
  direction=\"nsm\",\
 },\
 [0x07B0]={\
  direction=\"nsm\",\
 },\
 [0x07B1]={\
  direction=\"al\",\
 },\
 [0x07C0]={\
  direction=\"r\",\
 },\
 [0x07C1]={\
  direction=\"r\",\
 },\
 [0x07C2]={\
  direction=\"r\",\
 },\
 [0x07C3]={\
  direction=\"r\",\
 },\
 [0x07C4]={\
  direction=\"r\",\
 },\
 [0x07C5]={\
  direction=\"r\",\
 },\
 [0x07C6]={\
  direction=\"r\",\
 },\
 [0x07C7]={\
  direction=\"r\",\
 },\
 [0x07C8]={\
  direction=\"r\",\
 },\
 [0x07C9]={\
  direction=\"r\",\
 },\
 [0x07CA]={\
  direction=\"r\",\
 },\
 [0x07CB]={\
  direction=\"r\",\
 },\
 [0x07CC]={\
  direction=\"r\",\
 },\
 [0x07CD]={\
  direction=\"r\",\
 },\
 [0x07CE]={\
  direction=\"r\",\
 },\
 [0x07CF]={\
  direction=\"r\",\
 },\
 [0x07D0]={\
  direction=\"r\",\
 },\
 [0x07D1]={\
  direction=\"r\",\
 },\
 [0x07D2]={\
  direction=\"r\",\
 },\
 [0x07D3]={\
  direction=\"r\",\
 },\
 [0x07D4]={\
  direction=\"r\",\
 },\
 [0x07D5]={\
  direction=\"r\",\
 },\
 [0x07D6]={\
  direction=\"r\",\
 },\
 [0x07D7]={\
  direction=\"r\",\
 },\
 [0x07D8]={\
  direction=\"r\",\
 },\
 [0x07D9]={\
  direction=\"r\",\
 },\
 [0x07DA]={\
  direction=\"r\",\
 },\
 [0x07DB]={\
  direction=\"r\",\
 },\
 [0x07DC]={\
  direction=\"r\",\
 },\
 [0x07DD]={\
  direction=\"r\",\
 },\
 [0x07DE]={\
  direction=\"r\",\
 },\
 [0x07DF]={\
  direction=\"r\",\
 },\
 [0x07E0]={\
  direction=\"r\",\
 },\
 [0x07E1]={\
  direction=\"r\",\
 },\
 [0x07E2]={\
  direction=\"r\",\
 },\
 [0x07E3]={\
  direction=\"r\",\
 },\
 [0x07E4]={\
  direction=\"r\",\
 },\
 [0x07E5]={\
  direction=\"r\",\
 },\
 [0x07E6]={\
  direction=\"r\",\
 },\
 [0x07E7]={\
  direction=\"r\",\
 },\
 [0x07E8]={\
  direction=\"r\",\
 },\
 [0x07E9]={\
  direction=\"r\",\
 },\
 [0x07EA]={\
  direction=\"r\",\
 },\
 [0x07EB]={\
  direction=\"nsm\",\
 },\
 [0x07EC]={\
  direction=\"nsm\",\
 },\
 [0x07ED]={\
  direction=\"nsm\",\
 },\
 [0x07EE]={\
  direction=\"nsm\",\
 },\
 [0x07EF]={\
  direction=\"nsm\",\
 },\
 [0x07F0]={\
  direction=\"nsm\",\
 },\
 [0x07F1]={\
  direction=\"nsm\",\
 },\
 [0x07F2]={\
  direction=\"nsm\",\
 },\
 [0x07F3]={\
  direction=\"nsm\",\
 },\
 [0x07F4]={\
  direction=\"r\",\
 },\
 [0x07F5]={\
  direction=\"r\",\
 },\
 [0x07F6]={\
  direction=\"on\",\
 },\
 [0x07F7]={\
  direction=\"on\",\
 },\
 [0x07F8]={\
  direction=\"on\",\
 },\
 [0x07F9]={\
  direction=\"on\",\
 },\
 [0x07FA]={\
  direction=\"r\",\
 },\
 [0x0800]={\
  direction=\"r\",\
 },\
 [0x0801]={\
  direction=\"r\",\
 },\
 [0x0802]={\
  direction=\"r\",\
 },\
 [0x0803]={\
  direction=\"r\",\
 },\
 [0x0804]={\
  direction=\"r\",\
 },\
 [0x0805]={\
  direction=\"r\",\
 },\
 [0x0806]={\
  direction=\"r\",\
 },\
 [0x0807]={\
  direction=\"r\",\
 },\
 [0x0808]={\
  direction=\"r\",\
 },\
 [0x0809]={\
  direction=\"r\",\
 },\
 [0x080A]={\
  direction=\"r\",\
 },\
 [0x080B]={\
  direction=\"r\",\
 },\
 [0x080C]={\
  direction=\"r\",\
 },\
 [0x080D]={\
  direction=\"r\",\
 },\
 [0x080E]={\
  direction=\"r\",\
 },\
 [0x080F]={\
  direction=\"r\",\
 },\
 [0x0810]={\
  direction=\"r\",\
 },\
 [0x0811]={\
  direction=\"r\",\
 },\
 [0x0812]={\
  direction=\"r\",\
 },\
 [0x0813]={\
  direction=\"r\",\
 },\
 [0x0814]={\
  direction=\"r\",\
 },\
 [0x0815]={\
  direction=\"r\",\
 },\
 [0x0816]={\
  direction=\"nsm\",\
 },\
 [0x0817]={\
  direction=\"nsm\",\
 },\
 [0x0818]={\
  direction=\"nsm\",\
 },\
 [0x0819]={\
  direction=\"nsm\",\
 },\
 [0x081A]={\
  direction=\"r\",\
 },\
 [0x081B]={\
  direction=\"nsm\",\
 },\
 [0x081C]={\
  direction=\"nsm\",\
 },\
 [0x081D]={\
  direction=\"nsm\",\
 },\
 [0x081E]={\
  direction=\"nsm\",\
 },\
 [0x081F]={\
  direction=\"nsm\",\
 },\
 [0x0820]={\
  direction=\"nsm\",\
 },\
 [0x0821]={\
  direction=\"nsm\",\
 },\
 [0x0822]={\
  direction=\"nsm\",\
 },\
 [0x0823]={\
  direction=\"nsm\",\
 },\
 [0x0824]={\
  direction=\"r\",\
 },\
 [0x0825]={\
  direction=\"nsm\",\
 },\
 [0x0826]={\
  direction=\"nsm\",\
 },\
 [0x0827]={\
  direction=\"nsm\",\
 },\
 [0x0828]={\
  direction=\"r\",\
 },\
 [0x0829]={\
  direction=\"nsm\",\
 },\
 [0x082A]={\
  direction=\"nsm\",\
 },\
 [0x082B]={\
  direction=\"nsm\",\
 },\
 [0x082C]={\
  direction=\"nsm\",\
 },\
 [0x082D]={\
  direction=\"nsm\",\
 },\
 [0x0830]={\
  direction=\"r\",\
 },\
 [0x0831]={\
  direction=\"r\",\
 },\
 [0x0832]={\
  direction=\"r\",\
 },\
 [0x0833]={\
  direction=\"r\",\
 },\
 [0x0834]={\
  direction=\"r\",\
 },\
 [0x0835]={\
  direction=\"r\",\
 },\
 [0x0836]={\
  direction=\"r\",\
 },\
 [0x0837]={\
  direction=\"r\",\
 },\
 [0x0838]={\
  direction=\"r\",\
 },\
 [0x0839]={\
  direction=\"r\",\
 },\
 [0x083A]={\
  direction=\"r\",\
 },\
 [0x083B]={\
  direction=\"r\",\
 },\
 [0x083C]={\
  direction=\"r\",\
 },\
 [0x083D]={\
  direction=\"r\",\
 },\
 [0x083E]={\
  direction=\"r\",\
 },\
 [0x0840]={\
  direction=\"r\",\
 },\
 [0x0841]={\
  direction=\"r\",\
 },\
 [0x0842]={\
  direction=\"r\",\
 },\
 [0x0843]={\
  direction=\"r\",\
 },\
 [0x0844]={\
  direction=\"r\",\
 },\
 [0x0845]={\
  direction=\"r\",\
 },\
 [0x0846]={\
  direction=\"r\",\
 },\
 [0x0847]={\
  direction=\"r\",\
 },\
 [0x0848]={\
  direction=\"r\",\
 },\
 [0x0849]={\
  direction=\"r\",\
 },\
 [0x084A]={\
  direction=\"r\",\
 },\
 [0x084B]={\
  direction=\"r\",\
 },\
 [0x084C]={\
  direction=\"r\",\
 },\
 [0x084D]={\
  direction=\"r\",\
 },\
 [0x084E]={\
  direction=\"r\",\
 },\
 [0x084F]={\
  direction=\"r\",\
 },\
 [0x0850]={\
  direction=\"r\",\
 },\
 [0x0851]={\
  direction=\"r\",\
 },\
 [0x0852]={\
  direction=\"r\",\
 },\
 [0x0853]={\
  direction=\"r\",\
 },\
 [0x0854]={\
  direction=\"r\",\
 },\
 [0x0855]={\
  direction=\"r\",\
 },\
 [0x0856]={\
  direction=\"r\",\
 },\
 [0x0857]={\
  direction=\"r\",\
 },\
 [0x0858]={\
  direction=\"r\",\
 },\
 [0x0859]={\
  direction=\"nsm\",\
 },\
 [0x085A]={\
  direction=\"nsm\",\
 },\
 [0x085B]={\
  direction=\"nsm\",\
 },\
 [0x085E]={\
  direction=\"r\",\
 },\
 [0x08A0]={\
  direction=\"al\",\
 },\
 [0x08A2]={\
  direction=\"al\",\
 },\
 [0x08A3]={\
  direction=\"al\",\
 },\
 [0x08A4]={\
  direction=\"al\",\
 },\
 [0x08A5]={\
  direction=\"al\",\
 },\
 [0x08A6]={\
  direction=\"al\",\
 },\
 [0x08A7]={\
  direction=\"al\",\
 },\
 [0x08A8]={\
  direction=\"al\",\
 },\
 [0x08A9]={\
  direction=\"al\",\
 },\
 [0x08AA]={\
  direction=\"al\",\
 },\
 [0x08AB]={\
  direction=\"al\",\
 },\
 [0x08AC]={\
  direction=\"al\",\
 },\
 [0x08E4]={\
  direction=\"nsm\",\
 },\
 [0x08E5]={\
  direction=\"nsm\",\
 },\
 [0x08E6]={\
  direction=\"nsm\",\
 },\
 [0x08E7]={\
  direction=\"nsm\",\
 },\
 [0x08E8]={\
  direction=\"nsm\",\
 },\
 [0x08E9]={\
  direction=\"nsm\",\
 },\
 [0x08EA]={\
  direction=\"nsm\",\
 },\
 [0x08EB]={\
  direction=\"nsm\",\
 },\
 [0x08EC]={\
  direction=\"nsm\",\
 },\
 [0x08ED]={\
  direction=\"nsm\",\
 },\
 [0x08EE]={\
  direction=\"nsm\",\
 },\
 [0x08EF]={\
  direction=\"nsm\",\
 },\
 [0x08F0]={\
  direction=\"nsm\",\
 },\
 [0x08F1]={\
  direction=\"nsm\",\
 },\
 [0x08F2]={\
  direction=\"nsm\",\
 },\
 [0x08F3]={\
  direction=\"nsm\",\
 },\
 [0x08F4]={\
  direction=\"nsm\",\
 },\
 [0x08F5]={\
  direction=\"nsm\",\
 },\
 [0x08F6]={\
  direction=\"nsm\",\
 },\
 [0x08F7]={\
  direction=\"nsm\",\
 },\
 [0x08F8]={\
  direction=\"nsm\",\
 },\
 [0x08F9]={\
  direction=\"nsm\",\
 },\
 [0x08FA]={\
  direction=\"nsm\",\
 },\
 [0x08FB]={\
  direction=\"nsm\",\
 },\
 [0x08FC]={\
  direction=\"nsm\",\
 },\
 [0x08FD]={\
  direction=\"nsm\",\
 },\
 [0x08FE]={\
  direction=\"nsm\",\
 },\
 [0x0900]={\
  direction=\"nsm\",\
 },\
 [0x0901]={\
  direction=\"nsm\",\
 },\
 [0x0902]={\
  direction=\"nsm\",\
 },\
 [0x0903]={\
  direction=\"l\",\
 },\
 [0x0904]={\
  direction=\"l\",\
 },\
 [0x0905]={\
  direction=\"l\",\
 },\
 [0x0906]={\
  direction=\"l\",\
 },\
 [0x0907]={\
  direction=\"l\",\
 },\
 [0x0908]={\
  direction=\"l\",\
 },\
 [0x0909]={\
  direction=\"l\",\
 },\
 [0x090A]={\
  direction=\"l\",\
 },\
 [0x090B]={\
  direction=\"l\",\
 },\
 [0x090C]={\
  direction=\"l\",\
 },\
 [0x090D]={\
  direction=\"l\",\
 },\
 [0x090E]={\
  direction=\"l\",\
 },\
 [0x090F]={\
  direction=\"l\",\
 },\
 [0x0910]={\
  direction=\"l\",\
 },\
 [0x0911]={\
  direction=\"l\",\
 },\
 [0x0912]={\
  direction=\"l\",\
 },\
 [0x0913]={\
  direction=\"l\",\
 },\
 [0x0914]={\
  direction=\"l\",\
 },\
 [0x0915]={\
  direction=\"l\",\
 },\
 [0x0916]={\
  direction=\"l\",\
 },\
 [0x0917]={\
  direction=\"l\",\
 },\
 [0x0918]={\
  direction=\"l\",\
 },\
 [0x0919]={\
  direction=\"l\",\
 },\
 [0x091A]={\
  direction=\"l\",\
 },\
 [0x091B]={\
  direction=\"l\",\
 },\
 [0x091C]={\
  direction=\"l\",\
 },\
 [0x091D]={\
  direction=\"l\",\
 },\
 [0x091E]={\
  direction=\"l\",\
 },\
 [0x091F]={\
  direction=\"l\",\
 },\
 [0x0920]={\
  direction=\"l\",\
 },\
 [0x0921]={\
  direction=\"l\",\
 },\
 [0x0922]={\
  direction=\"l\",\
 },\
 [0x0923]={\
  direction=\"l\",\
 },\
 [0x0924]={\
  direction=\"l\",\
 },\
 [0x0925]={\
  direction=\"l\",\
 },\
 [0x0926]={\
  direction=\"l\",\
 },\
 [0x0927]={\
  direction=\"l\",\
 },\
 [0x0928]={\
  direction=\"l\",\
 },\
 [0x0929]={\
  direction=\"l\",\
 },\
 [0x092A]={\
  direction=\"l\",\
 },\
 [0x092B]={\
  direction=\"l\",\
 },\
 [0x092C]={\
  direction=\"l\",\
 },\
 [0x092D]={\
  direction=\"l\",\
 },\
 [0x092E]={\
  direction=\"l\",\
 },\
 [0x092F]={\
  direction=\"l\",\
 },\
 [0x0930]={\
  direction=\"l\",\
 },\
 [0x0931]={\
  direction=\"l\",\
 },\
 [0x0932]={\
  direction=\"l\",\
 },\
 [0x0933]={\
  direction=\"l\",\
 },\
 [0x0934]={\
  direction=\"l\",\
 },\
 [0x0935]={\
  direction=\"l\",\
 },\
 [0x0936]={\
  direction=\"l\",\
 },\
 [0x0937]={\
  direction=\"l\",\
 },\
 [0x0938]={\
  direction=\"l\",\
 },\
 [0x0939]={\
  direction=\"l\",\
 },\
 [0x093A]={\
  direction=\"nsm\",\
 },\
 [0x093B]={\
  direction=\"l\",\
 },\
 [0x093C]={\
  direction=\"nsm\",\
 },\
 [0x093D]={\
  direction=\"l\",\
 },\
 [0x093E]={\
  direction=\"l\",\
 },\
 [0x093F]={\
  direction=\"l\",\
 },\
 [0x0940]={\
  direction=\"l\",\
 },\
 [0x0941]={\
  direction=\"nsm\",\
 },\
 [0x0942]={\
  direction=\"nsm\",\
 },\
 [0x0943]={\
  direction=\"nsm\",\
 },\
 [0x0944]={\
  direction=\"nsm\",\
 },\
 [0x0945]={\
  direction=\"nsm\",\
 },\
 [0x0946]={\
  direction=\"nsm\",\
 },\
 [0x0947]={\
  direction=\"nsm\",\
 },\
 [0x0948]={\
  direction=\"nsm\",\
 },\
 [0x0949]={\
  direction=\"l\",\
 },\
 [0x094A]={\
  direction=\"l\",\
 },\
 [0x094B]={\
  direction=\"l\",\
 },\
 [0x094C]={\
  direction=\"l\",\
 },\
 [0x094D]={\
  direction=\"nsm\",\
 },\
 [0x094E]={\
  direction=\"l\",\
 },\
 [0x094F]={\
  direction=\"l\",\
 },\
 [0x0950]={\
  direction=\"l\",\
 },\
 [0x0951]={\
  direction=\"nsm\",\
 },\
 [0x0952]={\
  direction=\"nsm\",\
 },\
 [0x0953]={\
  direction=\"nsm\",\
 },\
 [0x0954]={\
  direction=\"nsm\",\
 },\
 [0x0955]={\
  direction=\"nsm\",\
 },\
 [0x0956]={\
  direction=\"nsm\",\
 },\
 [0x0957]={\
  direction=\"nsm\",\
 },\
 [0x0958]={\
  direction=\"l\",\
 },\
 [0x0959]={\
  direction=\"l\",\
 },\
 [0x095A]={\
  direction=\"l\",\
 },\
 [0x095B]={\
  direction=\"l\",\
 },\
 [0x095C]={\
  direction=\"l\",\
 },\
 [0x095D]={\
  direction=\"l\",\
 },\
 [0x095E]={\
  direction=\"l\",\
 },\
 [0x095F]={\
  direction=\"l\",\
 },\
 [0x0960]={\
  direction=\"l\",\
 },\
 [0x0961]={\
  direction=\"l\",\
 },\
 [0x0962]={\
  direction=\"nsm\",\
 },\
 [0x0963]={\
  direction=\"nsm\",\
 },\
 [0x0964]={\
  direction=\"l\",\
 },\
 [0x0965]={\
  direction=\"l\",\
 },\
 [0x0966]={\
  direction=\"l\",\
 },\
 [0x0967]={\
  direction=\"l\",\
 },\
 [0x0968]={\
  direction=\"l\",\
 },\
 [0x0969]={\
  direction=\"l\",\
 },\
 [0x096A]={\
  direction=\"l\",\
 },\
 [0x096B]={\
  direction=\"l\",\
 },\
 [0x096C]={\
  direction=\"l\",\
 },\
 [0x096D]={\
  direction=\"l\",\
 },\
 [0x096E]={\
  direction=\"l\",\
 },\
 [0x096F]={\
  direction=\"l\",\
 },\
 [0x0970]={\
  direction=\"l\",\
 },\
 [0x0971]={\
  direction=\"l\",\
 },\
 [0x0972]={\
  direction=\"l\",\
 },\
 [0x0973]={\
  direction=\"l\",\
 },\
 [0x0974]={\
  direction=\"l\",\
 },\
 [0x0975]={\
  direction=\"l\",\
 },\
 [0x0976]={\
  direction=\"l\",\
 },\
 [0x0977]={\
  direction=\"l\",\
 },\
 [0x0979]={\
  direction=\"l\",\
 },\
 [0x097A]={\
  direction=\"l\",\
 },\
 [0x097B]={\
  direction=\"l\",\
 },\
 [0x097C]={\
  direction=\"l\",\
 },\
 [0x097D]={\
  direction=\"l\",\
 },\
 [0x097E]={\
  direction=\"l\",\
 },\
 [0x097F]={\
  direction=\"l\",\
 },\
 [0x0981]={\
  direction=\"nsm\",\
 },\
 [0x0982]={\
  direction=\"l\",\
 },\
 [0x0983]={\
  direction=\"l\",\
 },\
 [0x0985]={\
  direction=\"l\",\
 },\
 [0x0986]={\
  direction=\"l\",\
 },\
 [0x0987]={\
  direction=\"l\",\
 },\
 [0x0988]={\
  direction=\"l\",\
 },\
 [0x0989]={\
  direction=\"l\",\
 },\
 [0x098A]={\
  direction=\"l\",\
 },\
 [0x098B]={\
  direction=\"l\",\
 },\
 [0x098C]={\
  direction=\"l\",\
 },\
 [0x098F]={\
  direction=\"l\",\
 },\
 [0x0990]={\
  direction=\"l\",\
 },\
 [0x0993]={\
  direction=\"l\",\
 },\
 [0x0994]={\
  direction=\"l\",\
 },\
 [0x0995]={\
  direction=\"l\",\
 },\
 [0x0996]={\
  direction=\"l\",\
 },\
 [0x0997]={\
  direction=\"l\",\
 },\
 [0x0998]={\
  direction=\"l\",\
 },\
 [0x0999]={\
  direction=\"l\",\
 },\
 [0x099A]={\
  direction=\"l\",\
 },\
 [0x099B]={\
  direction=\"l\",\
 },\
 [0x099C]={\
  direction=\"l\",\
 },\
 [0x099D]={\
  direction=\"l\",\
 },\
 [0x099E]={\
  direction=\"l\",\
 },\
 [0x099F]={\
  direction=\"l\",\
 },\
 [0x09A0]={\
  direction=\"l\",\
 },\
 [0x09A1]={\
  direction=\"l\",\
 },\
 [0x09A2]={\
  direction=\"l\",\
 },\
 [0x09A3]={\
  direction=\"l\",\
 },\
 [0x09A4]={\
  direction=\"l\",\
 },\
 [0x09A5]={\
  direction=\"l\",\
 },\
 [0x09A6]={\
  direction=\"l\",\
 },\
 [0x09A7]={\
  direction=\"l\",\
 },\
 [0x09A8]={\
  direction=\"l\",\
 },\
 [0x09AA]={\
  direction=\"l\",\
 },\
 [0x09AB]={\
  direction=\"l\",\
 },\
 [0x09AC]={\
  direction=\"l\",\
 },\
 [0x09AD]={\
  direction=\"l\",\
 },\
 [0x09AE]={\
  direction=\"l\",\
 },\
 [0x09AF]={\
  direction=\"l\",\
 },\
 [0x09B0]={\
  direction=\"l\",\
 },\
 [0x09B2]={\
  direction=\"l\",\
 },\
 [0x09B6]={\
  direction=\"l\",\
 },\
 [0x09B7]={\
  direction=\"l\",\
 },\
 [0x09B8]={\
  direction=\"l\",\
 },\
 [0x09B9]={\
  direction=\"l\",\
 },\
 [0x09BC]={\
  direction=\"nsm\",\
 },\
 [0x09BD]={\
  direction=\"l\",\
 },\
 [0x09BE]={\
  direction=\"l\",\
 },\
 [0x09BF]={\
  direction=\"l\",\
 },\
 [0x09C0]={\
  direction=\"l\",\
 },\
 [0x09C1]={\
  direction=\"nsm\",\
 },\
 [0x09C2]={\
  direction=\"nsm\",\
 },\
 [0x09C3]={\
  direction=\"nsm\",\
 },\
 [0x09C4]={\
  direction=\"nsm\",\
 },\
 [0x09C7]={\
  direction=\"l\",\
 },\
 [0x09C8]={\
  direction=\"l\",\
 },\
 [0x09CB]={\
  direction=\"l\",\
 },\
 [0x09CC]={\
  direction=\"l\",\
 },\
 [0x09CD]={\
  direction=\"nsm\",\
 },\
 [0x09CE]={\
  direction=\"l\",\
 },\
 [0x09D7]={\
  direction=\"l\",\
 },\
 [0x09DC]={\
  direction=\"l\",\
 },\
 [0x09DD]={\
  direction=\"l\",\
 },\
 [0x09DF]={\
  direction=\"l\",\
 },\
 [0x09E0]={\
  direction=\"l\",\
 },\
 [0x09E1]={\
  direction=\"l\",\
 },\
 [0x09E2]={\
  direction=\"nsm\",\
 },\
 [0x09E3]={\
  direction=\"nsm\",\
 },\
 [0x09E6]={\
  direction=\"l\",\
 },\
 [0x09E7]={\
  direction=\"l\",\
 },\
 [0x09E8]={\
  direction=\"l\",\
 },\
 [0x09E9]={\
  direction=\"l\",\
 },\
 [0x09EA]={\
  direction=\"l\",\
 },\
 [0x09EB]={\
  direction=\"l\",\
 },\
 [0x09EC]={\
  direction=\"l\",\
 },\
 [0x09ED]={\
  direction=\"l\",\
 },\
 [0x09EE]={\
  direction=\"l\",\
 },\
 [0x09EF]={\
  direction=\"l\",\
 },\
 [0x09F0]={\
  direction=\"l\",\
 },\
 [0x09F1]={\
  direction=\"l\",\
 },\
 [0x09F2]={\
  direction=\"et\",\
 },\
 [0x09F3]={\
  direction=\"et\",\
 },\
 [0x09F4]={\
  direction=\"l\",\
 },\
 [0x09F5]={\
  direction=\"l\",\
 },\
 [0x09F6]={\
  direction=\"l\",\
 },\
 [0x09F7]={\
  direction=\"l\",\
 },\
 [0x09F8]={\
  direction=\"l\",\
 },\
 [0x09F9]={\
  direction=\"l\",\
 },\
 [0x09FA]={\
  direction=\"l\",\
 },\
 [0x09FB]={\
  direction=\"et\",\
 },\
 [0x0A01]={\
  direction=\"nsm\",\
 },\
 [0x0A02]={\
  direction=\"nsm\",\
 },\
 [0x0A03]={\
  direction=\"l\",\
 },\
 [0x0A05]={\
  direction=\"l\",\
 },\
 [0x0A06]={\
  direction=\"l\",\
 },\
 [0x0A07]={\
  direction=\"l\",\
 },\
 [0x0A08]={\
  direction=\"l\",\
 },\
 [0x0A09]={\
  direction=\"l\",\
 },\
 [0x0A0A]={\
  direction=\"l\",\
 },\
 [0x0A0F]={\
  direction=\"l\",\
 },\
 [0x0A10]={\
  direction=\"l\",\
 },\
 [0x0A13]={\
  direction=\"l\",\
 },\
 [0x0A14]={\
  direction=\"l\",\
 },\
 [0x0A15]={\
  direction=\"l\",\
 },\
 [0x0A16]={\
  direction=\"l\",\
 },\
 [0x0A17]={\
  direction=\"l\",\
 },\
 [0x0A18]={\
  direction=\"l\",\
 },\
 [0x0A19]={\
  direction=\"l\",\
 },\
 [0x0A1A]={\
  direction=\"l\",\
 },\
 [0x0A1B]={\
  direction=\"l\",\
 },\
 [0x0A1C]={\
  direction=\"l\",\
 },\
 [0x0A1D]={\
  direction=\"l\",\
 },\
 [0x0A1E]={\
  direction=\"l\",\
 },\
 [0x0A1F]={\
  direction=\"l\",\
 },\
 [0x0A20]={\
  direction=\"l\",\
 },\
 [0x0A21]={\
  direction=\"l\",\
 },\
 [0x0A22]={\
  direction=\"l\",\
 },\
 [0x0A23]={\
  direction=\"l\",\
 },\
 [0x0A24]={\
  direction=\"l\",\
 },\
 [0x0A25]={\
  direction=\"l\",\
 },\
 [0x0A26]={\
  direction=\"l\",\
 },\
 [0x0A27]={\
  direction=\"l\",\
 },\
 [0x0A28]={\
  direction=\"l\",\
 },\
 [0x0A2A]={\
  direction=\"l\",\
 },\
 [0x0A2B]={\
  direction=\"l\",\
 },\
 [0x0A2C]={\
  direction=\"l\",\
 },\
 [0x0A2D]={\
  direction=\"l\",\
 },\
 [0x0A2E]={\
  direction=\"l\",\
 },\
 [0x0A2F]={\
  direction=\"l\",\
 },\
 [0x0A30]={\
  direction=\"l\",\
 },\
 [0x0A32]={\
  direction=\"l\",\
 },\
 [0x0A33]={\
  direction=\"l\",\
 },\
 [0x0A35]={\
  direction=\"l\",\
 },\
 [0x0A36]={\
  direction=\"l\",\
 },\
 [0x0A38]={\
  direction=\"l\",\
 },\
 [0x0A39]={\
  direction=\"l\",\
 },\
 [0x0A3C]={\
  direction=\"nsm\",\
 },\
 [0x0A3E]={\
  direction=\"l\",\
 },\
 [0x0A3F]={\
  direction=\"l\",\
 },\
 [0x0A40]={\
  direction=\"l\",\
 },\
 [0x0A41]={\
  direction=\"nsm\",\
 },\
 [0x0A42]={\
  direction=\"nsm\",\
 },\
 [0x0A47]={\
  direction=\"nsm\",\
 },\
 [0x0A48]={\
  direction=\"nsm\",\
 },\
 [0x0A4B]={\
  direction=\"nsm\",\
 },\
 [0x0A4C]={\
  direction=\"nsm\",\
 },\
 [0x0A4D]={\
  direction=\"nsm\",\
 },\
 [0x0A51]={\
  direction=\"nsm\",\
 },\
 [0x0A59]={\
  direction=\"l\",\
 },\
 [0x0A5A]={\
  direction=\"l\",\
 },\
 [0x0A5B]={\
  direction=\"l\",\
 },\
 [0x0A5C]={\
  direction=\"l\",\
 },\
 [0x0A5E]={\
  direction=\"l\",\
 },\
 [0x0A66]={\
  direction=\"l\",\
 },\
 [0x0A67]={\
  direction=\"l\",\
 },\
 [0x0A68]={\
  direction=\"l\",\
 },\
 [0x0A69]={\
  direction=\"l\",\
 },\
 [0x0A6A]={\
  direction=\"l\",\
 },\
 [0x0A6B]={\
  direction=\"l\",\
 },\
 [0x0A6C]={\
  direction=\"l\",\
 },\
 [0x0A6D]={\
  direction=\"l\",\
 },\
 [0x0A6E]={\
  direction=\"l\",\
 },\
 [0x0A6F]={\
  direction=\"l\",\
 },\
 [0x0A70]={\
  direction=\"nsm\",\
 },\
 [0x0A71]={\
  direction=\"nsm\",\
 },\
 [0x0A72]={\
  direction=\"l\",\
 },\
 [0x0A73]={\
  direction=\"l\",\
 },\
 [0x0A74]={\
  direction=\"l\",\
 },\
 [0x0A75]={\
  direction=\"nsm\",\
 },\
 [0x0A81]={\
  direction=\"nsm\",\
 },\
 [0x0A82]={\
  direction=\"nsm\",\
 },\
 [0x0A83]={\
  direction=\"l\",\
 },\
 [0x0A85]={\
  direction=\"l\",\
 },\
 [0x0A86]={\
  direction=\"l\",\
 },\
 [0x0A87]={\
  direction=\"l\",\
 },\
 [0x0A88]={\
  direction=\"l\",\
 },\
 [0x0A89]={\
  direction=\"l\",\
 },\
 [0x0A8A]={\
  direction=\"l\",\
 },\
 [0x0A8B]={\
  direction=\"l\",\
 },\
 [0x0A8C]={\
  direction=\"l\",\
 },\
 [0x0A8D]={\
  direction=\"l\",\
 },\
 [0x0A8F]={\
  direction=\"l\",\
 },\
 [0x0A90]={\
  direction=\"l\",\
 },\
 [0x0A91]={\
  direction=\"l\",\
 },\
 [0x0A93]={\
  direction=\"l\",\
 },\
 [0x0A94]={\
  direction=\"l\",\
 },\
 [0x0A95]={\
  direction=\"l\",\
 },\
 [0x0A96]={\
  direction=\"l\",\
 },\
 [0x0A97]={\
  direction=\"l\",\
 },\
 [0x0A98]={\
  direction=\"l\",\
 },\
 [0x0A99]={\
  direction=\"l\",\
 },\
 [0x0A9A]={\
  direction=\"l\",\
 },\
 [0x0A9B]={\
  direction=\"l\",\
 },\
 [0x0A9C]={\
  direction=\"l\",\
 },\
 [0x0A9D]={\
  direction=\"l\",\
 },\
 [0x0A9E]={\
  direction=\"l\",\
 },\
 [0x0A9F]={\
  direction=\"l\",\
 },\
 [0x0AA0]={\
  direction=\"l\",\
 },\
 [0x0AA1]={\
  direction=\"l\",\
 },\
 [0x0AA2]={\
  direction=\"l\",\
 },\
 [0x0AA3]={\
  direction=\"l\",\
 },\
 [0x0AA4]={\
  direction=\"l\",\
 },\
 [0x0AA5]={\
  direction=\"l\",\
 },\
 [0x0AA6]={\
  direction=\"l\",\
 },\
 [0x0AA7]={\
  direction=\"l\",\
 },\
 [0x0AA8]={\
  direction=\"l\",\
 },\
 [0x0AAA]={\
  direction=\"l\",\
 },\
 [0x0AAB]={\
  direction=\"l\",\
 },\
 [0x0AAC]={\
  direction=\"l\",\
 },\
 [0x0AAD]={\
  direction=\"l\",\
 },\
 [0x0AAE]={\
  direction=\"l\",\
 },\
 [0x0AAF]={\
  direction=\"l\",\
 },\
 [0x0AB0]={\
  direction=\"l\",\
 },\
 [0x0AB2]={\
  direction=\"l\",\
 },\
 [0x0AB3]={\
  direction=\"l\",\
 },\
 [0x0AB5]={\
  direction=\"l\",\
 },\
 [0x0AB6]={\
  direction=\"l\",\
 },\
 [0x0AB7]={\
  direction=\"l\",\
 },\
 [0x0AB8]={\
  direction=\"l\",\
 },\
 [0x0AB9]={\
  direction=\"l\",\
 },\
 [0x0ABC]={\
  direction=\"nsm\",\
 },\
 [0x0ABD]={\
  direction=\"l\",\
 },\
 [0x0ABE]={\
  direction=\"l\",\
 },\
 [0x0ABF]={\
  direction=\"l\",\
 },\
 [0x0AC0]={\
  direction=\"l\",\
 },\
 [0x0AC1]={\
  direction=\"nsm\",\
 },\
 [0x0AC2]={\
  direction=\"nsm\",\
 },\
 [0x0AC3]={\
  direction=\"nsm\",\
 },\
 [0x0AC4]={\
  direction=\"nsm\",\
 },\
 [0x0AC5]={\
  direction=\"nsm\",\
 },\
 [0x0AC7]={\
  direction=\"nsm\",\
 },\
 [0x0AC8]={\
  direction=\"nsm\",\
 },\
 [0x0AC9]={\
  direction=\"l\",\
 },\
 [0x0ACB]={\
  direction=\"l\",\
 },\
 [0x0ACC]={\
  direction=\"l\",\
 },\
 [0x0ACD]={\
  direction=\"nsm\",\
 },\
 [0x0AD0]={\
  direction=\"l\",\
 },\
 [0x0AE0]={\
  direction=\"l\",\
 },\
 [0x0AE1]={\
  direction=\"l\",\
 },\
 [0x0AE2]={\
  direction=\"nsm\",\
 },\
 [0x0AE3]={\
  direction=\"nsm\",\
 },\
 [0x0AE6]={\
  direction=\"l\",\
 },\
 [0x0AE7]={\
  direction=\"l\",\
 },\
 [0x0AE8]={\
  direction=\"l\",\
 },\
 [0x0AE9]={\
  direction=\"l\",\
 },\
 [0x0AEA]={\
  direction=\"l\",\
 },\
 [0x0AEB]={\
  direction=\"l\",\
 },\
 [0x0AEC]={\
  direction=\"l\",\
 },\
 [0x0AED]={\
  direction=\"l\",\
 },\
 [0x0AEE]={\
  direction=\"l\",\
 },\
 [0x0AEF]={\
  direction=\"l\",\
 },\
 [0x0AF0]={\
  direction=\"l\",\
 },\
 [0x0AF1]={\
  direction=\"et\",\
 },\
 [0x0B01]={\
  direction=\"nsm\",\
 },\
 [0x0B02]={\
  direction=\"l\",\
 },\
 [0x0B03]={\
  direction=\"l\",\
 },\
 [0x0B05]={\
  direction=\"l\",\
 },\
 [0x0B06]={\
  direction=\"l\",\
 },\
 [0x0B07]={\
  direction=\"l\",\
 },\
 [0x0B08]={\
  direction=\"l\",\
 },\
 [0x0B09]={\
  direction=\"l\",\
 },\
 [0x0B0A]={\
  direction=\"l\",\
 },\
 [0x0B0B]={\
  direction=\"l\",\
 },\
 [0x0B0C]={\
  direction=\"l\",\
 },\
 [0x0B0F]={\
  direction=\"l\",\
 },\
 [0x0B10]={\
  direction=\"l\",\
 },\
 [0x0B13]={\
  direction=\"l\",\
 },\
 [0x0B14]={\
  direction=\"l\",\
 },\
 [0x0B15]={\
  direction=\"l\",\
 },\
 [0x0B16]={\
  direction=\"l\",\
 },\
 [0x0B17]={\
  direction=\"l\",\
 },\
 [0x0B18]={\
  direction=\"l\",\
 },\
 [0x0B19]={\
  direction=\"l\",\
 },\
 [0x0B1A]={\
  direction=\"l\",\
 },\
 [0x0B1B]={\
  direction=\"l\",\
 },\
 [0x0B1C]={\
  direction=\"l\",\
 },\
 [0x0B1D]={\
  direction=\"l\",\
 },\
 [0x0B1E]={\
  direction=\"l\",\
 },\
 [0x0B1F]={\
  direction=\"l\",\
 },\
 [0x0B20]={\
  direction=\"l\",\
 },\
 [0x0B21]={\
  direction=\"l\",\
 },\
 [0x0B22]={\
  direction=\"l\",\
 },\
 [0x0B23]={\
  direction=\"l\",\
 },\
 [0x0B24]={\
  direction=\"l\",\
 },\
 [0x0B25]={\
  direction=\"l\",\
 },\
 [0x0B26]={\
  direction=\"l\",\
 },\
 [0x0B27]={\
  direction=\"l\",\
 },\
 [0x0B28]={\
  direction=\"l\",\
 },\
 [0x0B2A]={\
  direction=\"l\",\
 },\
 [0x0B2B]={\
  direction=\"l\",\
 },\
 [0x0B2C]={\
  direction=\"l\",\
 },\
 [0x0B2D]={\
  direction=\"l\",\
 },\
 [0x0B2E]={\
  direction=\"l\",\
 },\
 [0x0B2F]={\
  direction=\"l\",\
 },\
 [0x0B30]={\
  direction=\"l\",\
 },\
 [0x0B32]={\
  direction=\"l\",\
 },\
 [0x0B33]={\
  direction=\"l\",\
 },\
 [0x0B35]={\
  direction=\"l\",\
 },\
 [0x0B36]={\
  direction=\"l\",\
 },\
 [0x0B37]={\
  direction=\"l\",\
 },\
 [0x0B38]={\
  direction=\"l\",\
 },\
 [0x0B39]={\
  direction=\"l\",\
 },\
 [0x0B3C]={\
  direction=\"nsm\",\
 },\
 [0x0B3D]={\
  direction=\"l\",\
 },\
 [0x0B3E]={\
  direction=\"l\",\
 },\
 [0x0B3F]={\
  direction=\"nsm\",\
 },\
 [0x0B40]={\
  direction=\"l\",\
 },\
 [0x0B41]={\
  direction=\"nsm\",\
 },\
 [0x0B42]={\
  direction=\"nsm\",\
 },\
 [0x0B43]={\
  direction=\"nsm\",\
 },\
 [0x0B44]={\
  direction=\"nsm\",\
 },\
 [0x0B47]={\
  direction=\"l\",\
 },\
 [0x0B48]={\
  direction=\"l\",\
 },\
 [0x0B4B]={\
  direction=\"l\",\
 },\
 [0x0B4C]={\
  direction=\"l\",\
 },\
 [0x0B4D]={\
  direction=\"nsm\",\
 },\
 [0x0B56]={\
  direction=\"nsm\",\
 },\
 [0x0B57]={\
  direction=\"l\",\
 },\
 [0x0B5C]={\
  direction=\"l\",\
 },\
 [0x0B5D]={\
  direction=\"l\",\
 },\
 [0x0B5F]={\
  direction=\"l\",\
 },\
 [0x0B60]={\
  direction=\"l\",\
 },\
 [0x0B61]={\
  direction=\"l\",\
 },\
 [0x0B62]={\
  direction=\"nsm\",\
 },\
 [0x0B63]={\
  direction=\"nsm\",\
 },\
 [0x0B66]={\
  direction=\"l\",\
 },\
 [0x0B67]={\
  direction=\"l\",\
 },\
 [0x0B68]={\
  direction=\"l\",\
 },\
 [0x0B69]={\
  direction=\"l\",\
 },\
 [0x0B6A]={\
  direction=\"l\",\
 },\
 [0x0B6B]={\
  direction=\"l\",\
 },\
 [0x0B6C]={\
  direction=\"l\",\
 },\
 [0x0B6D]={\
  direction=\"l\",\
 },\
 [0x0B6E]={\
  direction=\"l\",\
 },\
 [0x0B6F]={\
  direction=\"l\",\
 },\
 [0x0B70]={\
  direction=\"l\",\
 },\
 [0x0B71]={\
  direction=\"l\",\
 },\
 [0x0B72]={\
  direction=\"l\",\
 },\
 [0x0B73]={\
  direction=\"l\",\
 },\
 [0x0B74]={\
  direction=\"l\",\
 },\
 [0x0B75]={\
  direction=\"l\",\
 },\
 [0x0B76]={\
  direction=\"l\",\
 },\
 [0x0B77]={\
  direction=\"l\",\
 },\
 [0x0B82]={\
  direction=\"nsm\",\
 },\
 [0x0B83]={\
  direction=\"l\",\
 },\
 [0x0B85]={\
  direction=\"l\",\
 },\
 [0x0B86]={\
  direction=\"l\",\
 },\
 [0x0B87]={\
  direction=\"l\",\
 },\
 [0x0B88]={\
  direction=\"l\",\
 },\
 [0x0B89]={\
  direction=\"l\",\
 },\
 [0x0B8A]={\
  direction=\"l\",\
 },\
 [0x0B8E]={\
  direction=\"l\",\
 },\
 [0x0B8F]={\
  direction=\"l\",\
 },\
 [0x0B90]={\
  direction=\"l\",\
 },\
 [0x0B92]={\
  direction=\"l\",\
 },\
 [0x0B93]={\
  direction=\"l\",\
 },\
 [0x0B94]={\
  direction=\"l\",\
 },\
 [0x0B95]={\
  direction=\"l\",\
 },\
 [0x0B99]={\
  direction=\"l\",\
 },\
 [0x0B9A]={\
  direction=\"l\",\
 },\
 [0x0B9C]={\
  direction=\"l\",\
 },\
 [0x0B9E]={\
  direction=\"l\",\
 },\
 [0x0B9F]={\
  direction=\"l\",\
 },\
 [0x0BA3]={\
  direction=\"l\",\
 },\
 [0x0BA4]={\
  direction=\"l\",\
 },\
 [0x0BA8]={\
  direction=\"l\",\
 },\
 [0x0BA9]={\
  direction=\"l\",\
 },\
 [0x0BAA]={\
  direction=\"l\",\
 },\
 [0x0BAE]={\
  direction=\"l\",\
 },\
 [0x0BAF]={\
  direction=\"l\",\
 },\
 [0x0BB0]={\
  direction=\"l\",\
 },\
 [0x0BB1]={\
  direction=\"l\",\
 },\
 [0x0BB2]={\
  direction=\"l\",\
 },\
 [0x0BB3]={\
  direction=\"l\",\
 },\
 [0x0BB4]={\
  direction=\"l\",\
 },\
 [0x0BB5]={\
  direction=\"l\",\
 },\
 [0x0BB6]={\
  direction=\"l\",\
 },\
 [0x0BB7]={\
  direction=\"l\",\
 },\
 [0x0BB8]={\
  direction=\"l\",\
 },\
 [0x0BB9]={\
  direction=\"l\",\
 },\
 [0x0BBE]={\
  direction=\"l\",\
 },\
 [0x0BBF]={\
  direction=\"l\",\
 },\
 [0x0BC0]={\
  direction=\"nsm\",\
 },\
 [0x0BC1]={\
  direction=\"l\",\
 },\
 [0x0BC2]={\
  direction=\"l\",\
 },\
 [0x0BC6]={\
  direction=\"l\",\
 },\
 [0x0BC7]={\
  direction=\"l\",\
 },\
 [0x0BC8]={\
  direction=\"l\",\
 },\
 [0x0BCA]={\
  direction=\"l\",\
 },\
 [0x0BCB]={\
  direction=\"l\",\
 },\
 [0x0BCC]={\
  direction=\"l\",\
 },\
 [0x0BCD]={\
  direction=\"nsm\",\
 },\
 [0x0BD0]={\
  direction=\"l\",\
 },\
 [0x0BD7]={\
  direction=\"l\",\
 },\
 [0x0BE6]={\
  direction=\"l\",\
 },\
 [0x0BE7]={\
  direction=\"l\",\
 },\
 [0x0BE8]={\
  direction=\"l\",\
 },\
 [0x0BE9]={\
  direction=\"l\",\
 },\
 [0x0BEA]={\
  direction=\"l\",\
 },\
 [0x0BEB]={\
  direction=\"l\",\
 },\
 [0x0BEC]={\
  direction=\"l\",\
 },\
 [0x0BED]={\
  direction=\"l\",\
 },\
 [0x0BEE]={\
  direction=\"l\",\
 },\
 [0x0BEF]={\
  direction=\"l\",\
 },\
 [0x0BF0]={\
  direction=\"l\",\
 },\
 [0x0BF1]={\
  direction=\"l\",\
 },\
 [0x0BF2]={\
  direction=\"l\",\
 },\
 [0x0BF3]={\
  direction=\"on\",\
 },\
 [0x0BF4]={\
  direction=\"on\",\
 },\
 [0x0BF5]={\
  direction=\"on\",\
 },\
 [0x0BF6]={\
  direction=\"on\",\
 },\
 [0x0BF7]={\
  direction=\"on\",\
 },\
 [0x0BF8]={\
  direction=\"on\",\
 },\
 [0x0BF9]={\
  direction=\"et\",\
 },\
 [0x0BFA]={\
  direction=\"on\",\
 },\
 [0x0C01]={\
  direction=\"l\",\
 },\
 [0x0C02]={\
  direction=\"l\",\
 },\
 [0x0C03]={\
  direction=\"l\",\
 },\
 [0x0C05]={\
  direction=\"l\",\
 },\
 [0x0C06]={\
  direction=\"l\",\
 },\
 [0x0C07]={\
  direction=\"l\",\
 },\
 [0x0C08]={\
  direction=\"l\",\
 },\
 [0x0C09]={\
  direction=\"l\",\
 },\
 [0x0C0A]={\
  direction=\"l\",\
 },\
 [0x0C0B]={\
  direction=\"l\",\
 },\
 [0x0C0C]={\
  direction=\"l\",\
 },\
 [0x0C0E]={\
  direction=\"l\",\
 },\
 [0x0C0F]={\
  direction=\"l\",\
 },\
 [0x0C10]={\
  direction=\"l\",\
 },\
 [0x0C12]={\
  direction=\"l\",\
 },\
 [0x0C13]={\
  direction=\"l\",\
 },\
 [0x0C14]={\
  direction=\"l\",\
 },\
 [0x0C15]={\
  direction=\"l\",\
 },\
 [0x0C16]={\
  direction=\"l\",\
 },\
 [0x0C17]={\
  direction=\"l\",\
 },\
 [0x0C18]={\
  direction=\"l\",\
 },\
 [0x0C19]={\
  direction=\"l\",\
 },\
 [0x0C1A]={\
  direction=\"l\",\
 },\
 [0x0C1B]={\
  direction=\"l\",\
 },\
 [0x0C1C]={\
  direction=\"l\",\
 },\
 [0x0C1D]={\
  direction=\"l\",\
 },\
 [0x0C1E]={\
  direction=\"l\",\
 },\
 [0x0C1F]={\
  direction=\"l\",\
 },\
 [0x0C20]={\
  direction=\"l\",\
 },\
 [0x0C21]={\
  direction=\"l\",\
 },\
 [0x0C22]={\
  direction=\"l\",\
 },\
 [0x0C23]={\
  direction=\"l\",\
 },\
 [0x0C24]={\
  direction=\"l\",\
 },\
 [0x0C25]={\
  direction=\"l\",\
 },\
 [0x0C26]={\
  direction=\"l\",\
 },\
 [0x0C27]={\
  direction=\"l\",\
 },\
 [0x0C28]={\
  direction=\"l\",\
 },\
 [0x0C2A]={\
  direction=\"l\",\
 },\
 [0x0C2B]={\
  direction=\"l\",\
 },\
 [0x0C2C]={\
  direction=\"l\",\
 },\
 [0x0C2D]={\
  direction=\"l\",\
 },\
 [0x0C2E]={\
  direction=\"l\",\
 },\
 [0x0C2F]={\
  direction=\"l\",\
 },\
 [0x0C30]={\
  direction=\"l\",\
 },\
 [0x0C31]={\
  direction=\"l\",\
 },\
 [0x0C32]={\
  direction=\"l\",\
 },\
 [0x0C33]={\
  direction=\"l\",\
 },\
 [0x0C35]={\
  direction=\"l\",\
 },\
 [0x0C36]={\
  direction=\"l\",\
 },\
 [0x0C37]={\
  direction=\"l\",\
 },\
 [0x0C38]={\
  direction=\"l\",\
 },\
 [0x0C39]={\
  direction=\"l\",\
 },\
 [0x0C3D]={\
  direction=\"l\",\
 },\
 [0x0C3E]={\
  direction=\"nsm\",\
 },\
 [0x0C3F]={\
  direction=\"nsm\",\
 },\
 [0x0C40]={\
  direction=\"nsm\",\
 },\
 [0x0C41]={\
  direction=\"l\",\
 },\
 [0x0C42]={\
  direction=\"l\",\
 },\
 [0x0C43]={\
  direction=\"l\",\
 },\
 [0x0C44]={\
  direction=\"l\",\
 },\
 [0x0C46]={\
  direction=\"nsm\",\
 },\
 [0x0C47]={\
  direction=\"nsm\",\
 },\
 [0x0C48]={\
  direction=\"nsm\",\
 },\
 [0x0C4A]={\
  direction=\"nsm\",\
 },\
 [0x0C4B]={\
  direction=\"nsm\",\
 },\
 [0x0C4C]={\
  direction=\"nsm\",\
 },\
 [0x0C4D]={\
  direction=\"nsm\",\
 },\
 [0x0C55]={\
  direction=\"nsm\",\
 },\
 [0x0C56]={\
  direction=\"nsm\",\
 },\
 [0x0C58]={\
  direction=\"l\",\
 },\
 [0x0C59]={\
  direction=\"l\",\
 },\
 [0x0C60]={\
  direction=\"l\",\
 },\
 [0x0C61]={\
  direction=\"l\",\
 },\
 [0x0C62]={\
  direction=\"nsm\",\
 },\
 [0x0C63]={\
  direction=\"nsm\",\
 },\
 [0x0C66]={\
  direction=\"l\",\
 },\
 [0x0C67]={\
  direction=\"l\",\
 },\
 [0x0C68]={\
  direction=\"l\",\
 },\
 [0x0C69]={\
  direction=\"l\",\
 },\
 [0x0C6A]={\
  direction=\"l\",\
 },\
 [0x0C6B]={\
  direction=\"l\",\
 },\
 [0x0C6C]={\
  direction=\"l\",\
 },\
 [0x0C6D]={\
  direction=\"l\",\
 },\
 [0x0C6E]={\
  direction=\"l\",\
 },\
 [0x0C6F]={\
  direction=\"l\",\
 },\
 [0x0C78]={\
  direction=\"on\",\
 },\
 [0x0C79]={\
  direction=\"on\",\
 },\
 [0x0C7A]={\
  direction=\"on\",\
 },\
 [0x0C7B]={\
  direction=\"on\",\
 },\
 [0x0C7C]={\
  direction=\"on\",\
 },\
 [0x0C7D]={\
  direction=\"on\",\
 },\
 [0x0C7E]={\
  direction=\"on\",\
 },\
 [0x0C7F]={\
  direction=\"l\",\
 },\
 [0x0C82]={\
  direction=\"l\",\
 },\
 [0x0C83]={\
  direction=\"l\",\
 },\
 [0x0C85]={\
  direction=\"l\",\
 },\
 [0x0C86]={\
  direction=\"l\",\
 },\
 [0x0C87]={\
  direction=\"l\",\
 },\
 [0x0C88]={\
  direction=\"l\",\
 },\
 [0x0C89]={\
  direction=\"l\",\
 },\
 [0x0C8A]={\
  direction=\"l\",\
 },\
 [0x0C8B]={\
  direction=\"l\",\
 },\
 [0x0C8C]={\
  direction=\"l\",\
 },\
 [0x0C8E]={\
  direction=\"l\",\
 },\
 [0x0C8F]={\
  direction=\"l\",\
 },\
 [0x0C90]={\
  direction=\"l\",\
 },\
 [0x0C92]={\
  direction=\"l\",\
 },\
 [0x0C93]={\
  direction=\"l\",\
 },\
 [0x0C94]={\
  direction=\"l\",\
 },\
 [0x0C95]={\
  direction=\"l\",\
 },\
 [0x0C96]={\
  direction=\"l\",\
 },\
 [0x0C97]={\
  direction=\"l\",\
 },\
 [0x0C98]={\
  direction=\"l\",\
 },\
 [0x0C99]={\
  direction=\"l\",\
 },\
 [0x0C9A]={\
  direction=\"l\",\
 },\
 [0x0C9B]={\
  direction=\"l\",\
 },\
 [0x0C9C]={\
  direction=\"l\",\
 },\
 [0x0C9D]={\
  direction=\"l\",\
 },\
 [0x0C9E]={\
  direction=\"l\",\
 },\
 [0x0C9F]={\
  direction=\"l\",\
 },\
 [0x0CA0]={\
  direction=\"l\",\
 },\
 [0x0CA1]={\
  direction=\"l\",\
 },\
 [0x0CA2]={\
  direction=\"l\",\
 },\
 [0x0CA3]={\
  direction=\"l\",\
 },\
 [0x0CA4]={\
  direction=\"l\",\
 },\
 [0x0CA5]={\
  direction=\"l\",\
 },\
 [0x0CA6]={\
  direction=\"l\",\
 },\
 [0x0CA7]={\
  direction=\"l\",\
 },\
 [0x0CA8]={\
  direction=\"l\",\
 },\
 [0x0CAA]={\
  direction=\"l\",\
 },\
 [0x0CAB]={\
  direction=\"l\",\
 },\
 [0x0CAC]={\
  direction=\"l\",\
 },\
 [0x0CAD]={\
  direction=\"l\",\
 },\
 [0x0CAE]={\
  direction=\"l\",\
 },\
 [0x0CAF]={\
  direction=\"l\",\
 },\
 [0x0CB0]={\
  direction=\"l\",\
 },\
 [0x0CB1]={\
  direction=\"l\",\
 },\
 [0x0CB2]={\
  direction=\"l\",\
 },\
 [0x0CB3]={\
  direction=\"l\",\
 },\
 [0x0CB5]={\
  direction=\"l\",\
 },\
 [0x0CB6]={\
  direction=\"l\",\
 },\
 [0x0CB7]={\
  direction=\"l\",\
 },\
 [0x0CB8]={\
  direction=\"l\",\
 },\
 [0x0CB9]={\
  direction=\"l\",\
 },\
 [0x0CBC]={\
  direction=\"nsm\",\
 },\
 [0x0CBD]={\
  direction=\"l\",\
 },\
 [0x0CBE]={\
  direction=\"l\",\
 },\
 [0x0CBF]={\
  direction=\"l\",\
 },\
 [0x0CC0]={\
  direction=\"l\",\
 },\
 [0x0CC1]={\
  direction=\"l\",\
 },\
 [0x0CC2]={\
  direction=\"l\",\
 },\
 [0x0CC3]={\
  direction=\"l\",\
 },\
 [0x0CC4]={\
  direction=\"l\",\
 },\
 [0x0CC6]={\
  direction=\"l\",\
 },\
 [0x0CC7]={\
  direction=\"l\",\
 },\
 [0x0CC8]={\
  direction=\"l\",\
 },\
 [0x0CCA]={\
  direction=\"l\",\
 },\
 [0x0CCB]={\
  direction=\"l\",\
 },\
 [0x0CCC]={\
  direction=\"nsm\",\
 },\
 [0x0CCD]={\
  direction=\"nsm\",\
 },\
 [0x0CD5]={\
  direction=\"l\",\
 },\
 [0x0CD6]={\
  direction=\"l\",\
 },\
 [0x0CDE]={\
  direction=\"l\",\
 },\
 [0x0CE0]={\
  direction=\"l\",\
 },\
 [0x0CE1]={\
  direction=\"l\",\
 },\
 [0x0CE2]={\
  direction=\"nsm\",\
 },\
 [0x0CE3]={\
  direction=\"nsm\",\
 },\
 [0x0CE6]={\
  direction=\"l\",\
 },\
 [0x0CE7]={\
  direction=\"l\",\
 },\
 [0x0CE8]={\
  direction=\"l\",\
 },\
 [0x0CE9]={\
  direction=\"l\",\
 },\
 [0x0CEA]={\
  direction=\"l\",\
 },\
 [0x0CEB]={\
  direction=\"l\",\
 },\
 [0x0CEC]={\
  direction=\"l\",\
 },\
 [0x0CED]={\
  direction=\"l\",\
 },\
 [0x0CEE]={\
  direction=\"l\",\
 },\
 [0x0CEF]={\
  direction=\"l\",\
 },\
 [0x0CF1]={\
  direction=\"l\",\
 },\
 [0x0CF2]={\
  direction=\"l\",\
 },\
 [0x0D02]={\
  direction=\"l\",\
 },\
 [0x0D03]={\
  direction=\"l\",\
 },\
 [0x0D05]={\
  direction=\"l\",\
 },\
 [0x0D06]={\
  direction=\"l\",\
 },\
 [0x0D07]={\
  direction=\"l\",\
 },\
 [0x0D08]={\
  direction=\"l\",\
 },\
 [0x0D09]={\
  direction=\"l\",\
 },\
 [0x0D0A]={\
  direction=\"l\",\
 },\
 [0x0D0B]={\
  direction=\"l\",\
 },\
 [0x0D0C]={\
  direction=\"l\",\
 },\
 [0x0D0E]={\
  direction=\"l\",\
 },\
 [0x0D0F]={\
  direction=\"l\",\
 },\
 [0x0D10]={\
  direction=\"l\",\
 },\
 [0x0D12]={\
  direction=\"l\",\
 },\
 [0x0D13]={\
  direction=\"l\",\
 },\
 [0x0D14]={\
  direction=\"l\",\
 },\
 [0x0D15]={\
  direction=\"l\",\
 },\
 [0x0D16]={\
  direction=\"l\",\
 },\
 [0x0D17]={\
  direction=\"l\",\
 },\
 [0x0D18]={\
  direction=\"l\",\
 },\
 [0x0D19]={\
  direction=\"l\",\
 },\
 [0x0D1A]={\
  direction=\"l\",\
 },\
 [0x0D1B]={\
  direction=\"l\",\
 },\
 [0x0D1C]={\
  direction=\"l\",\
 },\
 [0x0D1D]={\
  direction=\"l\",\
 },\
 [0x0D1E]={\
  direction=\"l\",\
 },\
 [0x0D1F]={\
  direction=\"l\",\
 },\
 [0x0D20]={\
  direction=\"l\",\
 },\
 [0x0D21]={\
  direction=\"l\",\
 },\
 [0x0D22]={\
  direction=\"l\",\
 },\
 [0x0D23]={\
  direction=\"l\",\
 },\
 [0x0D24]={\
  direction=\"l\",\
 },\
 [0x0D25]={\
  direction=\"l\",\
 },\
 [0x0D26]={\
  direction=\"l\",\
 },\
 [0x0D27]={\
  direction=\"l\",\
 },\
 [0x0D28]={\
  direction=\"l\",\
 },\
 [0x0D29]={\
  direction=\"l\",\
 },\
 [0x0D2A]={\
  direction=\"l\",\
 },\
 [0x0D2B]={\
  direction=\"l\",\
 },\
 [0x0D2C]={\
  direction=\"l\",\
 },\
 [0x0D2D]={\
  direction=\"l\",\
 },\
 [0x0D2E]={\
  direction=\"l\",\
 },\
 [0x0D2F]={\
  direction=\"l\",\
 },\
 [0x0D30]={\
  direction=\"l\",\
 },\
 [0x0D31]={\
  direction=\"l\",\
 },\
 [0x0D32]={\
  direction=\"l\",\
 },\
 [0x0D33]={\
  direction=\"l\",\
 },\
 [0x0D34]={\
  direction=\"l\",\
 },\
 [0x0D35]={\
  direction=\"l\",\
 },\
 [0x0D36]={\
  direction=\"l\",\
 },\
 [0x0D37]={\
  direction=\"l\",\
 },\
 [0x0D38]={\
  direction=\"l\",\
 },\
 [0x0D39]={\
  direction=\"l\",\
 },\
 [0x0D3A]={\
  direction=\"l\",\
 },\
 [0x0D3D]={\
  direction=\"l\",\
 },\
 [0x0D3E]={\
  direction=\"l\",\
 },\
 [0x0D3F]={\
  direction=\"l\",\
 },\
 [0x0D40]={\
  direction=\"l\",\
 },\
 [0x0D41]={\
  direction=\"nsm\",\
 },\
 [0x0D42]={\
  direction=\"nsm\",\
 },\
 [0x0D43]={\
  direction=\"nsm\",\
 },\
 [0x0D44]={\
  direction=\"nsm\",\
 },\
 [0x0D46]={\
  direction=\"l\",\
 },\
 [0x0D47]={\
  direction=\"l\",\
 },\
 [0x0D48]={\
  direction=\"l\",\
 },\
 [0x0D4A]={\
  direction=\"l\",\
 },\
 [0x0D4B]={\
  direction=\"l\",\
 },\
 [0x0D4C]={\
  direction=\"l\",\
 },\
 [0x0D4D]={\
  direction=\"nsm\",\
 },\
 [0x0D4E]={\
  direction=\"l\",\
 },\
 [0x0D57]={\
  direction=\"l\",\
 },\
 [0x0D60]={\
  direction=\"l\",\
 },\
 [0x0D61]={\
  direction=\"l\",\
 },\
 [0x0D62]={\
  direction=\"nsm\",\
 },\
 [0x0D63]={\
  direction=\"nsm\",\
 },\
 [0x0D66]={\
  direction=\"l\",\
 },\
 [0x0D67]={\
  direction=\"l\",\
 },\
 [0x0D68]={\
  direction=\"l\",\
 },\
 [0x0D69]={\
  direction=\"l\",\
 },\
 [0x0D6A]={\
  direction=\"l\",\
 },\
 [0x0D6B]={\
  direction=\"l\",\
 },\
 [0x0D6C]={\
  direction=\"l\",\
 },\
 [0x0D6D]={\
  direction=\"l\",\
 },\
 [0x0D6E]={\
  direction=\"l\",\
 },\
 [0x0D6F]={\
  direction=\"l\",\
 },\
 [0x0D70]={\
  direction=\"l\",\
 },\
 [0x0D71]={\
  direction=\"l\",\
 },\
 [0x0D72]={\
  direction=\"l\",\
 },\
 [0x0D73]={\
  direction=\"l\",\
 },\
 [0x0D74]={\
  direction=\"l\",\
 },\
 [0x0D75]={\
  direction=\"l\",\
 },\
 [0x0D79]={\
  direction=\"l\",\
 },\
 [0x0D7A]={\
  direction=\"l\",\
 },\
 [0x0D7B]={\
  direction=\"l\",\
 },\
 [0x0D7C]={\
  direction=\"l\",\
 },\
 [0x0D7D]={\
  direction=\"l\",\
 },\
 [0x0D7E]={\
  direction=\"l\",\
 },\
 [0x0D7F]={\
  direction=\"l\",\
 },\
 [0x0D82]={\
  direction=\"l\",\
 },\
 [0x0D83]={\
  direction=\"l\",\
 },\
 [0x0D85]={\
  direction=\"l\",\
 },\
 [0x0D86]={\
  direction=\"l\",\
 },\
 [0x0D87]={\
  direction=\"l\",\
 },\
 [0x0D88]={\
  direction=\"l\",\
 },\
 [0x0D89]={\
  direction=\"l\",\
 },\
 [0x0D8A]={\
  direction=\"l\",\
 },\
 [0x0D8B]={\
  direction=\"l\",\
 },\
 [0x0D8C]={\
  direction=\"l\",\
 },\
 [0x0D8D]={\
  direction=\"l\",\
 },\
 [0x0D8E]={\
  direction=\"l\",\
 },\
 [0x0D8F]={\
  direction=\"l\",\
 },\
 [0x0D90]={\
  direction=\"l\",\
 },\
 [0x0D91]={\
  direction=\"l\",\
 },\
 [0x0D92]={\
  direction=\"l\",\
 },\
 [0x0D93]={\
  direction=\"l\",\
 },\
 [0x0D94]={\
  direction=\"l\",\
 },\
 [0x0D95]={\
  direction=\"l\",\
 },\
 [0x0D96]={\
  direction=\"l\",\
 },\
 [0x0D9A]={\
  direction=\"l\",\
 },\
 [0x0D9B]={\
  direction=\"l\",\
 },\
 [0x0D9C]={\
  direction=\"l\",\
 },\
 [0x0D9D]={\
  direction=\"l\",\
 },\
 [0x0D9E]={\
  direction=\"l\",\
 },\
 [0x0D9F]={\
  direction=\"l\",\
 },\
 [0x0DA0]={\
  direction=\"l\",\
 },\
 [0x0DA1]={\
  direction=\"l\",\
 },\
 [0x0DA2]={\
  direction=\"l\",\
 },\
 [0x0DA3]={\
  direction=\"l\",\
 },\
 [0x0DA4]={\
  direction=\"l\",\
 },\
 [0x0DA5]={\
  direction=\"l\",\
 },\
 [0x0DA6]={\
  direction=\"l\",\
 },\
 [0x0DA7]={\
  direction=\"l\",\
 },\
 [0x0DA8]={\
  direction=\"l\",\
 },\
 [0x0DA9]={\
  direction=\"l\",\
 },\
 [0x0DAA]={\
  direction=\"l\",\
 },\
 [0x0DAB]={\
  direction=\"l\",\
 },\
 [0x0DAC]={\
  direction=\"l\",\
 },\
 [0x0DAD]={\
  direction=\"l\",\
 },\
 [0x0DAE]={\
  direction=\"l\",\
 },\
 [0x0DAF]={\
  direction=\"l\",\
 },\
 [0x0DB0]={\
  direction=\"l\",\
 },\
 [0x0DB1]={\
  direction=\"l\",\
 },\
 [0x0DB3]={\
  direction=\"l\",\
 },\
 [0x0DB4]={\
  direction=\"l\",\
 },\
 [0x0DB5]={\
  direction=\"l\",\
 },\
 [0x0DB6]={\
  direction=\"l\",\
 },\
 [0x0DB7]={\
  direction=\"l\",\
 },\
 [0x0DB8]={\
  direction=\"l\",\
 },\
 [0x0DB9]={\
  direction=\"l\",\
 },\
 [0x0DBA]={\
  direction=\"l\",\
 },\
 [0x0DBB]={\
  direction=\"l\",\
 },\
 [0x0DBD]={\
  direction=\"l\",\
 },\
 [0x0DC0]={\
  direction=\"l\",\
 },\
 [0x0DC1]={\
  direction=\"l\",\
 },\
 [0x0DC2]={\
  direction=\"l\",\
 },\
 [0x0DC3]={\
  direction=\"l\",\
 },\
 [0x0DC4]={\
  direction=\"l\",\
 },\
 [0x0DC5]={\
  direction=\"l\",\
 },\
 [0x0DC6]={\
  direction=\"l\",\
 },\
 [0x0DCA]={\
  direction=\"nsm\",\
 },\
 [0x0DCF]={\
  direction=\"l\",\
 },\
 [0x0DD0]={\
  direction=\"l\",\
 },\
 [0x0DD1]={\
  direction=\"l\",\
 },\
 [0x0DD2]={\
  direction=\"nsm\",\
 },\
 [0x0DD3]={\
  direction=\"nsm\",\
 },\
 [0x0DD4]={\
  direction=\"nsm\",\
 },\
 [0x0DD6]={\
  direction=\"nsm\",\
 },\
 [0x0DD8]={\
  direction=\"l\",\
 },\
 [0x0DD9]={\
  direction=\"l\",\
 },\
 [0x0DDA]={\
  direction=\"l\",\
 },\
 [0x0DDB]={\
  direction=\"l\",\
 },\
 [0x0DDC]={\
  direction=\"l\",\
 },\
 [0x0DDD]={\
  direction=\"l\",\
 },\
 [0x0DDE]={\
  direction=\"l\",\
 },\
 [0x0DDF]={\
  direction=\"l\",\
 },\
 [0x0DF2]={\
  direction=\"l\",\
 },\
 [0x0DF3]={\
  direction=\"l\",\
 },\
 [0x0DF4]={\
  direction=\"l\",\
 },\
 [0x0E01]={\
  direction=\"l\",\
 },\
 [0x0E02]={\
  direction=\"l\",\
 },\
 [0x0E03]={\
  direction=\"l\",\
 },\
 [0x0E04]={\
  direction=\"l\",\
 },\
 [0x0E05]={\
  direction=\"l\",\
 },\
 [0x0E06]={\
  direction=\"l\",\
 },\
 [0x0E07]={\
  direction=\"l\",\
 },\
 [0x0E08]={\
  direction=\"l\",\
 },\
 [0x0E09]={\
  direction=\"l\",\
 },\
 [0x0E0A]={\
  direction=\"l\",\
 },\
 [0x0E0B]={\
  direction=\"l\",\
 },\
 [0x0E0C]={\
  direction=\"l\",\
 },\
 [0x0E0D]={\
  direction=\"l\",\
 },\
 [0x0E0E]={\
  direction=\"l\",\
 },\
 [0x0E0F]={\
  direction=\"l\",\
 },\
 [0x0E10]={\
  direction=\"l\",\
 },\
 [0x0E11]={\
  direction=\"l\",\
 },\
 [0x0E12]={\
  direction=\"l\",\
 },\
 [0x0E13]={\
  direction=\"l\",\
 },\
 [0x0E14]={\
  direction=\"l\",\
 },\
 [0x0E15]={\
  direction=\"l\",\
 },\
 [0x0E16]={\
  direction=\"l\",\
 },\
 [0x0E17]={\
  direction=\"l\",\
 },\
 [0x0E18]={\
  direction=\"l\",\
 },\
 [0x0E19]={\
  direction=\"l\",\
 },\
 [0x0E1A]={\
  direction=\"l\",\
 },\
 [0x0E1B]={\
  direction=\"l\",\
 },\
 [0x0E1C]={\
  direction=\"l\",\
 },\
 [0x0E1D]={\
  direction=\"l\",\
 },\
 [0x0E1E]={\
  direction=\"l\",\
 },\
 [0x0E1F]={\
  direction=\"l\",\
 },\
 [0x0E20]={\
  direction=\"l\",\
 },\
 [0x0E21]={\
  direction=\"l\",\
 },\
 [0x0E22]={\
  direction=\"l\",\
 },\
 [0x0E23]={\
  direction=\"l\",\
 },\
 [0x0E24]={\
  direction=\"l\",\
 },\
 [0x0E25]={\
  direction=\"l\",\
 },\
 [0x0E26]={\
  direction=\"l\",\
 },\
 [0x0E27]={\
  direction=\"l\",\
 },\
 [0x0E28]={\
  direction=\"l\",\
 },\
 [0x0E29]={\
  direction=\"l\",\
 },\
 [0x0E2A]={\
  direction=\"l\",\
 },\
 [0x0E2B]={\
  direction=\"l\",\
 },\
 [0x0E2C]={\
  direction=\"l\",\
 },\
 [0x0E2D]={\
  direction=\"l\",\
 },\
 [0x0E2E]={\
  direction=\"l\",\
 },\
 [0x0E2F]={\
  direction=\"l\",\
 },\
 [0x0E30]={\
  direction=\"l\",\
 },\
 [0x0E31]={\
  direction=\"nsm\",\
 },\
 [0x0E32]={\
  direction=\"l\",\
 },\
 [0x0E33]={\
  direction=\"l\",\
 },\
 [0x0E34]={\
  direction=\"nsm\",\
 },\
 [0x0E35]={\
  direction=\"nsm\",\
 },\
 [0x0E36]={\
  direction=\"nsm\",\
 },\
 [0x0E37]={\
  direction=\"nsm\",\
 },\
 [0x0E38]={\
  direction=\"nsm\",\
 },\
 [0x0E39]={\
  direction=\"nsm\",\
 },\
 [0x0E3A]={\
  direction=\"nsm\",\
 },\
 [0x0E3F]={\
  direction=\"et\",\
 },\
 [0x0E40]={\
  direction=\"l\",\
 },\
 [0x0E41]={\
  direction=\"l\",\
 },\
 [0x0E42]={\
  direction=\"l\",\
 },\
 [0x0E43]={\
  direction=\"l\",\
 },\
 [0x0E44]={\
  direction=\"l\",\
 },\
 [0x0E45]={\
  direction=\"l\",\
 },\
 [0x0E46]={\
  direction=\"l\",\
 },\
 [0x0E47]={\
  direction=\"nsm\",\
 },\
 [0x0E48]={\
  direction=\"nsm\",\
 },\
 [0x0E49]={\
  direction=\"nsm\",\
 },\
 [0x0E4A]={\
  direction=\"nsm\",\
 },\
 [0x0E4B]={\
  direction=\"nsm\",\
 },\
 [0x0E4C]={\
  direction=\"nsm\",\
 },\
 [0x0E4D]={\
  direction=\"nsm\",\
 },\
 [0x0E4E]={\
  direction=\"nsm\",\
 },\
 [0x0E4F]={\
  direction=\"l\",\
 },\
 [0x0E50]={\
  direction=\"l\",\
 },\
 [0x0E51]={\
  direction=\"l\",\
 },\
 [0x0E52]={\
  direction=\"l\",\
 },\
 [0x0E53]={\
  direction=\"l\",\
 },\
 [0x0E54]={\
  direction=\"l\",\
 },\
 [0x0E55]={\
  direction=\"l\",\
 },\
 [0x0E56]={\
  direction=\"l\",\
 },\
 [0x0E57]={\
  direction=\"l\",\
 },\
 [0x0E58]={\
  direction=\"l\",\
 },\
 [0x0E59]={\
  direction=\"l\",\
 },\
 [0x0E5A]={\
  direction=\"l\",\
 },\
 [0x0E5B]={\
  direction=\"l\",\
 },\
 [0x0E81]={\
  direction=\"l\",\
 },\
 [0x0E82]={\
  direction=\"l\",\
 },\
 [0x0E84]={\
  direction=\"l\",\
 },\
 [0x0E87]={\
  direction=\"l\",\
 },\
 [0x0E88]={\
  direction=\"l\",\
 },\
 [0x0E8A]={\
  direction=\"l\",\
 },\
 [0x0E8D]={\
  direction=\"l\",\
 },\
 [0x0E94]={\
  direction=\"l\",\
 },\
 [0x0E95]={\
  direction=\"l\",\
 },\
 [0x0E96]={\
  direction=\"l\",\
 },\
 [0x0E97]={\
  direction=\"l\",\
 },\
 [0x0E99]={\
  direction=\"l\",\
 },\
 [0x0E9A]={\
  direction=\"l\",\
 },\
 [0x0E9B]={\
  direction=\"l\",\
 },\
 [0x0E9C]={\
  direction=\"l\",\
 },\
 [0x0E9D]={\
  direction=\"l\",\
 },\
 [0x0E9E]={\
  direction=\"l\",\
 },\
 [0x0E9F]={\
  direction=\"l\",\
 },\
 [0x0EA1]={\
  direction=\"l\",\
 },\
 [0x0EA2]={\
  direction=\"l\",\
 },\
 [0x0EA3]={\
  direction=\"l\",\
 },\
 [0x0EA5]={\
  direction=\"l\",\
 },\
 [0x0EA7]={\
  direction=\"l\",\
 },\
 [0x0EAA]={\
  direction=\"l\",\
 },\
 [0x0EAB]={\
  direction=\"l\",\
 },\
 [0x0EAD]={\
  direction=\"l\",\
 },\
 [0x0EAE]={\
  direction=\"l\",\
 },\
 [0x0EAF]={\
  direction=\"l\",\
 },\
 [0x0EB0]={\
  direction=\"l\",\
 },\
 [0x0EB1]={\
  direction=\"nsm\",\
 },\
 [0x0EB2]={\
  direction=\"l\",\
 },\
 [0x0EB3]={\
  direction=\"l\",\
 },\
 [0x0EB4]={\
  direction=\"nsm\",\
 },\
 [0x0EB5]={\
  direction=\"nsm\",\
 },\
 [0x0EB6]={\
  direction=\"nsm\",\
 },\
 [0x0EB7]={\
  direction=\"nsm\",\
 },\
 [0x0EB8]={\
  direction=\"nsm\",\
 },\
 [0x0EB9]={\
  direction=\"nsm\",\
 },\
 [0x0EBB]={\
  direction=\"nsm\",\
 },\
 [0x0EBC]={\
  direction=\"nsm\",\
 },\
 [0x0EBD]={\
  direction=\"l\",\
 },\
 [0x0EC0]={\
  direction=\"l\",\
 },\
 [0x0EC1]={\
  direction=\"l\",\
 },\
 [0x0EC2]={\
  direction=\"l\",\
 },\
 [0x0EC3]={\
  direction=\"l\",\
 },\
 [0x0EC4]={\
  direction=\"l\",\
 },\
 [0x0EC6]={\
  direction=\"l\",\
 },\
 [0x0EC8]={\
  direction=\"nsm\",\
 },\
 [0x0EC9]={\
  direction=\"nsm\",\
 },\
 [0x0ECA]={\
  direction=\"nsm\",\
 },\
 [0x0ECB]={\
  direction=\"nsm\",\
 },\
 [0x0ECC]={\
  direction=\"nsm\",\
 },\
 [0x0ECD]={\
  direction=\"nsm\",\
 },\
 [0x0ED0]={\
  direction=\"l\",\
 },\
 [0x0ED1]={\
  direction=\"l\",\
 },\
 [0x0ED2]={\
  direction=\"l\",\
 },\
 [0x0ED3]={\
  direction=\"l\",\
 },\
 [0x0ED4]={\
  direction=\"l\",\
 },\
 [0x0ED5]={\
  direction=\"l\",\
 },\
 [0x0ED6]={\
  direction=\"l\",\
 },\
 [0x0ED7]={\
  direction=\"l\",\
 },\
 [0x0ED8]={\
  direction=\"l\",\
 },\
 [0x0ED9]={\
  direction=\"l\",\
 },\
 [0x0EDC]={\
  direction=\"l\",\
 },\
 [0x0EDD]={\
  direction=\"l\",\
 },\
 [0x0EDE]={\
  direction=\"l\",\
 },\
 [0x0EDF]={\
  direction=\"l\",\
 },\
 [0x0F00]={\
  direction=\"l\",\
 },\
 [0x0F01]={\
  direction=\"l\",\
 },\
 [0x0F02]={\
  direction=\"l\",\
 },\
 [0x0F03]={\
  direction=\"l\",\
 },\
 [0x0F04]={\
  direction=\"l\",\
 },\
 [0x0F05]={\
  direction=\"l\",\
 },\
 [0x0F06]={\
  direction=\"l\",\
 },\
 [0x0F07]={\
  direction=\"l\",\
 },\
 [0x0F08]={\
  direction=\"l\",\
 },\
 [0x0F09]={\
  direction=\"l\",\
 },\
 [0x0F0A]={\
  direction=\"l\",\
 },\
 [0x0F0B]={\
  direction=\"l\",\
 },\
 [0x0F0C]={\
  direction=\"l\",\
 },\
 [0x0F0D]={\
  direction=\"l\",\
 },\
 [0x0F0E]={\
  direction=\"l\",\
 },\
 [0x0F0F]={\
  direction=\"l\",\
 },\
 [0x0F10]={\
  direction=\"l\",\
 },\
 [0x0F11]={\
  direction=\"l\",\
 },\
 [0x0F12]={\
  direction=\"l\",\
 },\
 [0x0F13]={\
  direction=\"l\",\
 },\
 [0x0F14]={\
  direction=\"l\",\
 },\
 [0x0F15]={\
  direction=\"l\",\
 },\
 [0x0F16]={\
  direction=\"l\",\
 },\
 [0x0F17]={\
  direction=\"l\",\
 },\
 [0x0F18]={\
  direction=\"nsm\",\
 },\
 [0x0F19]={\
  direction=\"nsm\",\
 },\
 [0x0F1A]={\
  direction=\"l\",\
 },\
 [0x0F1B]={\
  direction=\"l\",\
 },\
 [0x0F1C]={\
  direction=\"l\",\
 },\
 [0x0F1D]={\
  direction=\"l\",\
 },\
 [0x0F1E]={\
  direction=\"l\",\
 },\
 [0x0F1F]={\
  direction=\"l\",\
 },\
 [0x0F20]={\
  direction=\"l\",\
 },\
 [0x0F21]={\
  direction=\"l\",\
 },\
 [0x0F22]={\
  direction=\"l\",\
 },\
 [0x0F23]={\
  direction=\"l\",\
 },\
 [0x0F24]={\
  direction=\"l\",\
 },\
 [0x0F25]={\
  direction=\"l\",\
 },\
 [0x0F26]={\
  direction=\"l\",\
 },\
 [0x0F27]={\
  direction=\"l\",\
 },\
 [0x0F28]={\
  direction=\"l\",\
 },\
 [0x0F29]={\
  direction=\"l\",\
 },\
 [0x0F2A]={\
  direction=\"l\",\
 },\
 [0x0F2B]={\
  direction=\"l\",\
 },\
 [0x0F2C]={\
  direction=\"l\",\
 },\
 [0x0F2D]={\
  direction=\"l\",\
 },\
 [0x0F2E]={\
  direction=\"l\",\
 },\
 [0x0F2F]={\
  direction=\"l\",\
 },\
 [0x0F30]={\
  direction=\"l\",\
 },\
 [0x0F31]={\
  direction=\"l\",\
 },\
 [0x0F32]={\
  direction=\"l\",\
 },\
 [0x0F33]={\
  direction=\"l\",\
 },\
 [0x0F34]={\
  direction=\"l\",\
 },\
 [0x0F35]={\
  direction=\"nsm\",\
 },\
 [0x0F36]={\
  direction=\"l\",\
 },\
 [0x0F37]={\
  direction=\"nsm\",\
 },\
 [0x0F38]={\
  direction=\"l\",\
 },\
 [0x0F39]={\
  direction=\"nsm\",\
 },\
 [0x0F3A]={\
  direction=\"on\",\
  mirror=0x0F3B,\
 },\
 [0x0F3B]={\
  direction=\"on\",\
  mirror=0x0F3A,\
 },\
 [0x0F3C]={\
  direction=\"on\",\
  mirror=0x0F3D,\
 },\
 [0x0F3D]={\
  direction=\"on\",\
  mirror=0x0F3C,\
 },\
 [0x0F3E]={\
  direction=\"l\",\
 },\
 [0x0F3F]={\
  direction=\"l\",\
 },\
 [0x0F40]={\
  direction=\"l\",\
 },\
 [0x0F41]={\
  direction=\"l\",\
 },\
 [0x0F42]={\
  direction=\"l\",\
 },\
 [0x0F43]={\
  direction=\"l\",\
 },\
 [0x0F44]={\
  direction=\"l\",\
 },\
 [0x0F45]={\
  direction=\"l\",\
 },\
 [0x0F46]={\
  direction=\"l\",\
 },\
 [0x0F47]={\
  direction=\"l\",\
 },\
 [0x0F49]={\
  direction=\"l\",\
 },\
 [0x0F4A]={\
  direction=\"l\",\
 },\
 [0x0F4B]={\
  direction=\"l\",\
 },\
 [0x0F4C]={\
  direction=\"l\",\
 },\
 [0x0F4D]={\
  direction=\"l\",\
 },\
 [0x0F4E]={\
  direction=\"l\",\
 },\
 [0x0F4F]={\
  direction=\"l\",\
 },\
 [0x0F50]={\
  direction=\"l\",\
 },\
 [0x0F51]={\
  direction=\"l\",\
 },\
 [0x0F52]={\
  direction=\"l\",\
 },\
 [0x0F53]={\
  direction=\"l\",\
 },\
 [0x0F54]={\
  direction=\"l\",\
 },\
 [0x0F55]={\
  direction=\"l\",\
 },\
 [0x0F56]={\
  direction=\"l\",\
 },\
 [0x0F57]={\
  direction=\"l\",\
 },\
 [0x0F58]={\
  direction=\"l\",\
 },\
 [0x0F59]={\
  direction=\"l\",\
 },\
 [0x0F5A]={\
  direction=\"l\",\
 },\
 [0x0F5B]={\
  direction=\"l\",\
 },\
 [0x0F5C]={\
  direction=\"l\",\
 },\
 [0x0F5D]={\
  direction=\"l\",\
 },\
 [0x0F5E]={\
  direction=\"l\",\
 },\
 [0x0F5F]={\
  direction=\"l\",\
 },\
 [0x0F60]={\
  direction=\"l\",\
 },\
 [0x0F61]={\
  direction=\"l\",\
 },\
 [0x0F62]={\
  direction=\"l\",\
 },\
 [0x0F63]={\
  direction=\"l\",\
 },\
 [0x0F64]={\
  direction=\"l\",\
 },\
 [0x0F65]={\
  direction=\"l\",\
 },\
 [0x0F66]={\
  direction=\"l\",\
 },\
 [0x0F67]={\
  direction=\"l\",\
 },\
 [0x0F68]={\
  direction=\"l\",\
 },\
 [0x0F69]={\
  direction=\"l\",\
 },\
 [0x0F6A]={\
  direction=\"l\",\
 },\
 [0x0F6B]={\
  direction=\"l\",\
 },\
 [0x0F6C]={\
  direction=\"l\",\
 },\
 [0x0F71]={\
  direction=\"nsm\",\
 },\
 [0x0F72]={\
  direction=\"nsm\",\
 },\
 [0x0F73]={\
  direction=\"nsm\",\
 },\
 [0x0F74]={\
  direction=\"nsm\",\
 },\
 [0x0F75]={\
  direction=\"nsm\",\
 },\
 [0x0F76]={\
  direction=\"nsm\",\
 },\
 [0x0F77]={\
  direction=\"nsm\",\
 },\
 [0x0F78]={\
  direction=\"nsm\",\
 },\
 [0x0F79]={\
  direction=\"nsm\",\
 },\
 [0x0F7A]={\
  direction=\"nsm\",\
 },\
 [0x0F7B]={\
  direction=\"nsm\",\
 },\
 [0x0F7C]={\
  direction=\"nsm\",\
 },\
 [0x0F7D]={\
  direction=\"nsm\",\
 },\
 [0x0F7E]={\
  direction=\"nsm\",\
 },\
 [0x0F7F]={\
  direction=\"l\",\
 },\
 [0x0F80]={\
  direction=\"nsm\",\
 },\
 [0x0F81]={\
  direction=\"nsm\",\
 },\
 [0x0F82]={\
  direction=\"nsm\",\
 },\
 [0x0F83]={\
  direction=\"nsm\",\
 },\
 [0x0F84]={\
  direction=\"nsm\",\
 },\
 [0x0F85]={\
  direction=\"l\",\
 },\
 [0x0F86]={\
  direction=\"nsm\",\
 },\
 [0x0F87]={\
  direction=\"nsm\",\
 },\
 [0x0F88]={\
  direction=\"l\",\
 },\
 [0x0F89]={\
  direction=\"l\",\
 },\
 [0x0F8A]={\
  direction=\"l\",\
 },\
 [0x0F8B]={\
  direction=\"l\",\
 },\
 [0x0F8C]={\
  direction=\"l\",\
 },\
 [0x0F8D]={\
  direction=\"nsm\",\
 },\
 [0x0F8E]={\
  direction=\"nsm\",\
 },\
 [0x0F8F]={\
  direction=\"nsm\",\
 },\
 [0x0F90]={\
  direction=\"nsm\",\
 },\
 [0x0F91]={\
  direction=\"nsm\",\
 },\
 [0x0F92]={\
  direction=\"nsm\",\
 },\
 [0x0F93]={\
  direction=\"nsm\",\
 },\
 [0x0F94]={\
  direction=\"nsm\",\
 },\
 [0x0F95]={\
  direction=\"nsm\",\
 },\
 [0x0F96]={\
  direction=\"nsm\",\
 },\
 [0x0F97]={\
  direction=\"nsm\",\
 },\
 [0x0F99]={\
  direction=\"nsm\",\
 },\
 [0x0F9A]={\
  direction=\"nsm\",\
 },\
 [0x0F9B]={\
  direction=\"nsm\",\
 },\
 [0x0F9C]={\
  direction=\"nsm\",\
 },\
 [0x0F9D]={\
  direction=\"nsm\",\
 },\
 [0x0F9E]={\
  direction=\"nsm\",\
 },\
 [0x0F9F]={\
  direction=\"nsm\",\
 },\
 [0x0FA0]={\
  direction=\"nsm\",\
 },\
 [0x0FA1]={\
  direction=\"nsm\",\
 },\
 [0x0FA2]={\
  direction=\"nsm\",\
 },\
 [0x0FA3]={\
  direction=\"nsm\",\
 },\
 [0x0FA4]={\
  direction=\"nsm\",\
 },\
 [0x0FA5]={\
  direction=\"nsm\",\
 },\
 [0x0FA6]={\
  direction=\"nsm\",\
 },\
 [0x0FA7]={\
  direction=\"nsm\",\
 },\
 [0x0FA8]={\
  direction=\"nsm\",\
 },\
 [0x0FA9]={\
  direction=\"nsm\",\
 },\
 [0x0FAA]={\
  direction=\"nsm\",\
 },\
 [0x0FAB]={\
  direction=\"nsm\",\
 },\
 [0x0FAC]={\
  direction=\"nsm\",\
 },\
 [0x0FAD]={\
  direction=\"nsm\",\
 },\
 [0x0FAE]={\
  direction=\"nsm\",\
 },\
 [0x0FAF]={\
  direction=\"nsm\",\
 },\
 [0x0FB0]={\
  direction=\"nsm\",\
 },\
 [0x0FB1]={\
  direction=\"nsm\",\
 },\
 [0x0FB2]={\
  direction=\"nsm\",\
 },\
 [0x0FB3]={\
  direction=\"nsm\",\
 },\
 [0x0FB4]={\
  direction=\"nsm\",\
 },\
 [0x0FB5]={\
  direction=\"nsm\",\
 },\
 [0x0FB6]={\
  direction=\"nsm\",\
 },\
 [0x0FB7]={\
  direction=\"nsm\",\
 },\
 [0x0FB8]={\
  direction=\"nsm\",\
 },\
 [0x0FB9]={\
  direction=\"nsm\",\
 },\
 [0x0FBA]={\
  direction=\"nsm\",\
 },\
 [0x0FBB]={\
  direction=\"nsm\",\
 },\
 [0x0FBC]={\
  direction=\"nsm\",\
 },\
 [0x0FBE]={\
  direction=\"l\",\
 },\
 [0x0FBF]={\
  direction=\"l\",\
 },\
 [0x0FC0]={\
  direction=\"l\",\
 },\
 [0x0FC1]={\
  direction=\"l\",\
 },\
 [0x0FC2]={\
  direction=\"l\",\
 },\
 [0x0FC3]={\
  direction=\"l\",\
 },\
 [0x0FC4]={\
  direction=\"l\",\
 },\
 [0x0FC5]={\
  direction=\"l\",\
 },\
 [0x0FC6]={\
  direction=\"nsm\",\
 },\
 [0x0FC7]={\
  direction=\"l\",\
 },\
 [0x0FC8]={\
  direction=\"l\",\
 },\
 [0x0FC9]={\
  direction=\"l\",\
 },\
 [0x0FCA]={\
  direction=\"l\",\
 },\
 [0x0FCB]={\
  direction=\"l\",\
 },\
 [0x0FCC]={\
  direction=\"l\",\
 },\
 [0x0FCE]={\
  direction=\"l\",\
 },\
 [0x0FCF]={\
  direction=\"l\",\
 },\
 [0x0FD0]={\
  direction=\"l\",\
 },\
 [0x0FD1]={\
  direction=\"l\",\
 },\
 [0x0FD2]={\
  direction=\"l\",\
 },\
 [0x0FD3]={\
  direction=\"l\",\
 },\
 [0x0FD4]={\
  direction=\"l\",\
 },\
 [0x0FD5]={\
  direction=\"l\",\
 },\
 [0x0FD6]={\
  direction=\"l\",\
 },\
 [0x0FD7]={\
  direction=\"l\",\
 },\
 [0x0FD8]={\
  direction=\"l\",\
 },\
 [0x0FD9]={\
  direction=\"l\",\
 },\
 [0x0FDA]={\
  direction=\"l\",\
 },\
 [0x1000]={\
  direction=\"l\",\
 },\
 [0x1001]={\
  direction=\"l\",\
 },\
 [0x1002]={\
  direction=\"l\",\
 },\
 [0x1003]={\
  direction=\"l\",\
 },\
 [0x1004]={\
  direction=\"l\",\
 },\
 [0x1005]={\
  direction=\"l\",\
 },\
 [0x1006]={\
  direction=\"l\",\
 },\
 [0x1007]={\
  direction=\"l\",\
 },\
 [0x1008]={\
  direction=\"l\",\
 },\
 [0x1009]={\
  direction=\"l\",\
 },\
 [0x100A]={\
  direction=\"l\",\
 },\
 [0x100B]={\
  direction=\"l\",\
 },\
 [0x100C]={\
  direction=\"l\",\
 },\
 [0x100D]={\
  direction=\"l\",\
 },\
 [0x100E]={\
  direction=\"l\",\
 },\
 [0x100F]={\
  direction=\"l\",\
 },\
 [0x1010]={\
  direction=\"l\",\
 },\
 [0x1011]={\
  direction=\"l\",\
 },\
 [0x1012]={\
  direction=\"l\",\
 },\
 [0x1013]={\
  direction=\"l\",\
 },\
 [0x1014]={\
  direction=\"l\",\
 },\
 [0x1015]={\
  direction=\"l\",\
 },\
 [0x1016]={\
  direction=\"l\",\
 },\
 [0x1017]={\
  direction=\"l\",\
 },\
 [0x1018]={\
  direction=\"l\",\
 },\
 [0x1019]={\
  direction=\"l\",\
 },\
 [0x101A]={\
  direction=\"l\",\
 },\
 [0x101B]={\
  direction=\"l\",\
 },\
 [0x101C]={\
  direction=\"l\",\
 },\
 [0x101D]={\
  direction=\"l\",\
 },\
 [0x101E]={\
  direction=\"l\",\
 },\
 [0x101F]={\
  direction=\"l\",\
 },\
 [0x1020]={\
  direction=\"l\",\
 },\
 [0x1021]={\
  direction=\"l\",\
 },\
 [0x1022]={\
  direction=\"l\",\
 },\
 [0x1023]={\
  direction=\"l\",\
 },\
 [0x1024]={\
  direction=\"l\",\
 },\
 [0x1025]={\
  direction=\"l\",\
 },\
 [0x1026]={\
  direction=\"l\",\
 },\
 [0x1027]={\
  direction=\"l\",\
 },\
 [0x1028]={\
  direction=\"l\",\
 },\
 [0x1029]={\
  direction=\"l\",\
 },\
 [0x102A]={\
  direction=\"l\",\
 },\
 [0x102B]={\
  direction=\"l\",\
 },\
 [0x102C]={\
  direction=\"l\",\
 },\
 [0x102D]={\
  direction=\"nsm\",\
 },\
 [0x102E]={\
  direction=\"nsm\",\
 },\
 [0x102F]={\
  direction=\"nsm\",\
 },\
 [0x1030]={\
  direction=\"nsm\",\
 },\
 [0x1031]={\
  direction=\"l\",\
 },\
 [0x1032]={\
  direction=\"nsm\",\
 },\
 [0x1033]={\
  direction=\"nsm\",\
 },\
 [0x1034]={\
  direction=\"nsm\",\
 },\
 [0x1035]={\
  direction=\"nsm\",\
 },\
 [0x1036]={\
  direction=\"nsm\",\
 },\
 [0x1037]={\
  direction=\"nsm\",\
 },\
 [0x1038]={\
  direction=\"l\",\
 },\
 [0x1039]={\
  direction=\"nsm\",\
 },\
 [0x103A]={\
  direction=\"nsm\",\
 },\
 [0x103B]={\
  direction=\"l\",\
 },\
 [0x103C]={\
  direction=\"l\",\
 },\
 [0x103D]={\
  direction=\"nsm\",\
 },\
 [0x103E]={\
  direction=\"nsm\",\
 },\
 [0x103F]={\
  direction=\"l\",\
 },\
 [0x1040]={\
  direction=\"l\",\
 },\
 [0x1041]={\
  direction=\"l\",\
 },\
 [0x1042]={\
  direction=\"l\",\
 },\
 [0x1043]={\
  direction=\"l\",\
 },\
 [0x1044]={\
  direction=\"l\",\
 },\
 [0x1045]={\
  direction=\"l\",\
 },\
 [0x1046]={\
  direction=\"l\",\
 },\
 [0x1047]={\
  direction=\"l\",\
 },\
 [0x1048]={\
  direction=\"l\",\
 },\
 [0x1049]={\
  direction=\"l\",\
 },\
 [0x104A]={\
  direction=\"l\",\
 },\
 [0x104B]={\
  direction=\"l\",\
 },\
 [0x104C]={\
  direction=\"l\",\
 },\
 [0x104D]={\
  direction=\"l\",\
 },\
 [0x104E]={\
  direction=\"l\",\
 },\
 [0x104F]={\
  direction=\"l\",\
 },\
 [0x1050]={\
  direction=\"l\",\
 },\
 [0x1051]={\
  direction=\"l\",\
 },\
 [0x1052]={\
  direction=\"l\",\
 },\
 [0x1053]={\
  direction=\"l\",\
 },\
 [0x1054]={\
  direction=\"l\",\
 },\
 [0x1055]={\
  direction=\"l\",\
 },\
 [0x1056]={\
  direction=\"l\",\
 },\
 [0x1057]={\
  direction=\"l\",\
 },\
 [0x1058]={\
  direction=\"nsm\",\
 },\
 [0x1059]={\
  direction=\"nsm\",\
 },\
 [0x105A]={\
  direction=\"l\",\
 },\
 [0x105B]={\
  direction=\"l\",\
 },\
 [0x105C]={\
  direction=\"l\",\
 },\
 [0x105D]={\
  direction=\"l\",\
 },\
 [0x105E]={\
  direction=\"nsm\",\
 },\
 [0x105F]={\
  direction=\"nsm\",\
 },\
 [0x1060]={\
  direction=\"nsm\",\
 },\
 [0x1061]={\
  direction=\"l\",\
 },\
 [0x1062]={\
  direction=\"l\",\
 },\
 [0x1063]={\
  direction=\"l\",\
 },\
 [0x1064]={\
  direction=\"l\",\
 },\
 [0x1065]={\
  direction=\"l\",\
 },\
 [0x1066]={\
  direction=\"l\",\
 },\
 [0x1067]={\
  direction=\"l\",\
 },\
 [0x1068]={\
  direction=\"l\",\
 },\
 [0x1069]={\
  direction=\"l\",\
 },\
 [0x106A]={\
  direction=\"l\",\
 },\
 [0x106B]={\
  direction=\"l\",\
 },\
 [0x106C]={\
  direction=\"l\",\
 },\
 [0x106D]={\
  direction=\"l\",\
 },\
 [0x106E]={\
  direction=\"l\",\
 },\
 [0x106F]={\
  direction=\"l\",\
 },\
 [0x1070]={\
  direction=\"l\",\
 },\
 [0x1071]={\
  direction=\"nsm\",\
 },\
 [0x1072]={\
  direction=\"nsm\",\
 },\
 [0x1073]={\
  direction=\"nsm\",\
 },\
 [0x1074]={\
  direction=\"nsm\",\
 },\
 [0x1075]={\
  direction=\"l\",\
 },\
 [0x1076]={\
  direction=\"l\",\
 },\
 [0x1077]={\
  direction=\"l\",\
 },\
 [0x1078]={\
  direction=\"l\",\
 },\
 [0x1079]={\
  direction=\"l\",\
 },\
 [0x107A]={\
  direction=\"l\",\
 },\
 [0x107B]={\
  direction=\"l\",\
 },\
 [0x107C]={\
  direction=\"l\",\
 },\
 [0x107D]={\
  direction=\"l\",\
 },\
 [0x107E]={\
  direction=\"l\",\
 },\
 [0x107F]={\
  direction=\"l\",\
 },\
 [0x1080]={\
  direction=\"l\",\
 },\
 [0x1081]={\
  direction=\"l\",\
 },\
 [0x1082]={\
  direction=\"nsm\",\
 },\
 [0x1083]={\
  direction=\"l\",\
 },\
 [0x1084]={\
  direction=\"l\",\
 },\
 [0x1085]={\
  direction=\"nsm\",\
 },\
 [0x1086]={\
  direction=\"nsm\",\
 },\
 [0x1087]={\
  direction=\"l\",\
 },\
 [0x1088]={\
  direction=\"l\",\
 },\
 [0x1089]={\
  direction=\"l\",\
 },\
 [0x108A]={\
  direction=\"l\",\
 },\
 [0x108B]={\
  direction=\"l\",\
 },\
 [0x108C]={\
  direction=\"l\",\
 },\
 [0x108D]={\
  direction=\"nsm\",\
 },\
 [0x108E]={\
  direction=\"l\",\
 },\
 [0x108F]={\
  direction=\"l\",\
 },\
 [0x1090]={\
  direction=\"l\",\
 },\
 [0x1091]={\
  direction=\"l\",\
 },\
 [0x1092]={\
  direction=\"l\",\
 },\
 [0x1093]={\
  direction=\"l\",\
 },\
 [0x1094]={\
  direction=\"l\",\
 },\
 [0x1095]={\
  direction=\"l\",\
 },\
 [0x1096]={\
  direction=\"l\",\
 },\
 [0x1097]={\
  direction=\"l\",\
 },\
 [0x1098]={\
  direction=\"l\",\
 },\
 [0x1099]={\
  direction=\"l\",\
 },\
 [0x109A]={\
  direction=\"l\",\
 },\
 [0x109B]={\
  direction=\"l\",\
 },\
 [0x109C]={\
  direction=\"l\",\
 },\
 [0x109D]={\
  direction=\"nsm\",\
 },\
 [0x109E]={\
  direction=\"l\",\
 },\
 [0x109F]={\
  direction=\"l\",\
 },\
 [0x10A0]={\
  direction=\"l\",\
 },\
 [0x10A1]={\
  direction=\"l\",\
 },\
 [0x10A2]={\
  direction=\"l\",\
 },\
 [0x10A3]={\
  direction=\"l\",\
 },\
 [0x10A4]={\
  direction=\"l\",\
 },\
 [0x10A5]={\
  direction=\"l\",\
 },\
 [0x10A6]={\
  direction=\"l\",\
 },\
 [0x10A7]={\
  direction=\"l\",\
 },\
 [0x10A8]={\
  direction=\"l\",\
 },\
 [0x10A9]={\
  direction=\"l\",\
 },\
 [0x10AA]={\
  direction=\"l\",\
 },\
 [0x10AB]={\
  direction=\"l\",\
 },\
 [0x10AC]={\
  direction=\"l\",\
 },\
 [0x10AD]={\
  direction=\"l\",\
 },\
 [0x10AE]={\
  direction=\"l\",\
 },\
 [0x10AF]={\
  direction=\"l\",\
 },\
 [0x10B0]={\
  direction=\"l\",\
 },\
 [0x10B1]={\
  direction=\"l\",\
 },\
 [0x10B2]={\
  direction=\"l\",\
 },\
 [0x10B3]={\
  direction=\"l\",\
 },\
 [0x10B4]={\
  direction=\"l\",\
 },\
 [0x10B5]={\
  direction=\"l\",\
 },\
 [0x10B6]={\
  direction=\"l\",\
 },\
 [0x10B7]={\
  direction=\"l\",\
 },\
 [0x10B8]={\
  direction=\"l\",\
 },\
 [0x10B9]={\
  direction=\"l\",\
 },\
 [0x10BA]={\
  direction=\"l\",\
 },\
 [0x10BB]={\
  direction=\"l\",\
 },\
 [0x10BC]={\
  direction=\"l\",\
 },\
 [0x10BD]={\
  direction=\"l\",\
 },\
 [0x10BE]={\
  direction=\"l\",\
 },\
 [0x10BF]={\
  direction=\"l\",\
 },\
 [0x10C0]={\
  direction=\"l\",\
 },\
 [0x10C1]={\
  direction=\"l\",\
 },\
 [0x10C2]={\
  direction=\"l\",\
 },\
 [0x10C3]={\
  direction=\"l\",\
 },\
 [0x10C4]={\
  direction=\"l\",\
 },\
 [0x10C5]={\
  direction=\"l\",\
 },\
 [0x10C7]={\
  direction=\"l\",\
 },\
 [0x10CD]={\
  direction=\"l\",\
 },\
 [0x10D0]={\
  direction=\"l\",\
 },\
 [0x10D1]={\
  direction=\"l\",\
 },\
 [0x10D2]={\
  direction=\"l\",\
 },\
 [0x10D3]={\
  direction=\"l\",\
 },\
 [0x10D4]={\
  direction=\"l\",\
 },\
 [0x10D5]={\
  direction=\"l\",\
 },\
 [0x10D6]={\
  direction=\"l\",\
 },\
 [0x10D7]={\
  direction=\"l\",\
 },\
 [0x10D8]={\
  direction=\"l\",\
 },\
 [0x10D9]={\
  direction=\"l\",\
 },\
 [0x10DA]={\
  direction=\"l\",\
 },\
 [0x10DB]={\
  direction=\"l\",\
 },\
 [0x10DC]={\
  direction=\"l\",\
 },\
 [0x10DD]={\
  direction=\"l\",\
 },\
 [0x10DE]={\
  direction=\"l\",\
 },\
 [0x10DF]={\
  direction=\"l\",\
 },\
 [0x10E0]={\
  direction=\"l\",\
 },\
 [0x10E1]={\
  direction=\"l\",\
 },\
 [0x10E2]={\
  direction=\"l\",\
 },\
 [0x10E3]={\
  direction=\"l\",\
 },\
 [0x10E4]={\
  direction=\"l\",\
 },\
 [0x10E5]={\
  direction=\"l\",\
 },\
 [0x10E6]={\
  direction=\"l\",\
 },\
 [0x10E7]={\
  direction=\"l\",\
 },\
 [0x10E8]={\
  direction=\"l\",\
 },\
 [0x10E9]={\
  direction=\"l\",\
 },\
 [0x10EA]={\
  direction=\"l\",\
 },\
 [0x10EB]={\
  direction=\"l\",\
 },\
 [0x10EC]={\
  direction=\"l\",\
 },\
 [0x10ED]={\
  direction=\"l\",\
 },\
 [0x10EE]={\
  direction=\"l\",\
 },\
 [0x10EF]={\
  direction=\"l\",\
 },\
 [0x10F0]={\
  direction=\"l\",\
 },\
 [0x10F1]={\
  direction=\"l\",\
 },\
 [0x10F2]={\
  direction=\"l\",\
 },\
 [0x10F3]={\
  direction=\"l\",\
 },\
 [0x10F4]={\
  direction=\"l\",\
 },\
 [0x10F5]={\
  direction=\"l\",\
 },\
 [0x10F6]={\
  direction=\"l\",\
 },\
 [0x10F7]={\
  direction=\"l\",\
 },\
 [0x10F8]={\
  direction=\"l\",\
 },\
 [0x10F9]={\
  direction=\"l\",\
 },\
 [0x10FA]={\
  direction=\"l\",\
 },\
 [0x10FB]={\
  direction=\"l\",\
 },\
 [0x10FC]={\
  direction=\"l\",\
 },\
 [0x10FD]={\
  direction=\"l\",\
 },\
 [0x10FE]={\
  direction=\"l\",\
 },\
 [0x10FF]={\
  direction=\"l\",\
 },\
 [0x1100]={\
  direction=\"l\",\
 },\
 [0x1101]={\
  direction=\"l\",\
 },\
 [0x1102]={\
  direction=\"l\",\
 },\
 [0x1103]={\
  direction=\"l\",\
 },\
 [0x1104]={\
  direction=\"l\",\
 },\
 [0x1105]={\
  direction=\"l\",\
 },\
 [0x1106]={\
  direction=\"l\",\
 },\
 [0x1107]={\
  direction=\"l\",\
 },\
 [0x1108]={\
  direction=\"l\",\
 },\
 [0x1109]={\
  direction=\"l\",\
 },\
 [0x110A]={\
  direction=\"l\",\
 },\
 [0x110B]={\
  direction=\"l\",\
 },\
 [0x110C]={\
  direction=\"l\",\
 },\
 [0x110D]={\
  direction=\"l\",\
 },\
 [0x110E]={\
  direction=\"l\",\
 },\
 [0x110F]={\
  direction=\"l\",\
 },\
 [0x1110]={\
  direction=\"l\",\
 },\
 [0x1111]={\
  direction=\"l\",\
 },\
 [0x1112]={\
  direction=\"l\",\
 },\
 [0x1113]={\
  direction=\"l\",\
 },\
 [0x1114]={\
  direction=\"l\",\
 },\
 [0x1115]={\
  direction=\"l\",\
 },\
 [0x1116]={\
  direction=\"l\",\
 },\
 [0x1117]={\
  direction=\"l\",\
 },\
 [0x1118]={\
  direction=\"l\",\
 },\
 [0x1119]={\
  direction=\"l\",\
 },\
 [0x111A]={\
  direction=\"l\",\
 },\
 [0x111B]={\
  direction=\"l\",\
 },\
 [0x111C]={\
  direction=\"l\",\
 },\
 [0x111D]={\
  direction=\"l\",\
 },\
 [0x111E]={\
  direction=\"l\",\
 },\
 [0x111F]={\
  direction=\"l\",\
 },\
 [0x1120]={\
  direction=\"l\",\
 },\
 [0x1121]={\
  direction=\"l\",\
 },\
 [0x1122]={\
  direction=\"l\",\
 },\
 [0x1123]={\
  direction=\"l\",\
 },\
 [0x1124]={\
  direction=\"l\",\
 },\
 [0x1125]={\
  direction=\"l\",\
 },\
 [0x1126]={\
  direction=\"l\",\
 },\
 [0x1127]={\
  direction=\"l\",\
 },\
 [0x1128]={\
  direction=\"l\",\
 },\
 [0x1129]={\
  direction=\"l\",\
 },\
 [0x112A]={\
  direction=\"l\",\
 },\
 [0x112B]={\
  direction=\"l\",\
 },\
 [0x112C]={\
  direction=\"l\",\
 },\
 [0x112D]={\
  direction=\"l\",\
 },\
 [0x112E]={\
  direction=\"l\",\
 },\
 [0x112F]={\
  direction=\"l\",\
 },\
 [0x1130]={\
  direction=\"l\",\
 },\
 [0x1131]={\
  direction=\"l\",\
 },\
 [0x1132]={\
  direction=\"l\",\
 },\
 [0x1133]={\
  direction=\"l\",\
 },\
 [0x1134]={\
  direction=\"l\",\
 },\
 [0x1135]={\
  direction=\"l\",\
 },\
 [0x1136]={\
  direction=\"l\",\
 },\
 [0x1137]={\
  direction=\"l\",\
 },\
 [0x1138]={\
  direction=\"l\",\
 },\
 [0x1139]={\
  direction=\"l\",\
 },\
 [0x113A]={\
  direction=\"l\",\
 },\
 [0x113B]={\
  direction=\"l\",\
 },\
 [0x113C]={\
  direction=\"l\",\
 },\
 [0x113D]={\
  direction=\"l\",\
 },\
 [0x113E]={\
  direction=\"l\",\
 },\
 [0x113F]={\
  direction=\"l\",\
 },\
 [0x1140]={\
  direction=\"l\",\
 },\
 [0x1141]={\
  direction=\"l\",\
 },\
 [0x1142]={\
  direction=\"l\",\
 },\
 [0x1143]={\
  direction=\"l\",\
 },\
 [0x1144]={\
  direction=\"l\",\
 },\
 [0x1145]={\
  direction=\"l\",\
 },\
 [0x1146]={\
  direction=\"l\",\
 },\
 [0x1147]={\
  direction=\"l\",\
 },\
 [0x1148]={\
  direction=\"l\",\
 },\
 [0x1149]={\
  direction=\"l\",\
 },\
 [0x114A]={\
  direction=\"l\",\
 },\
 [0x114B]={\
  direction=\"l\",\
 },\
 [0x114C]={\
  direction=\"l\",\
 },\
 [0x114D]={\
  direction=\"l\",\
 },\
 [0x114E]={\
  direction=\"l\",\
 },\
 [0x114F]={\
  direction=\"l\",\
 },\
 [0x1150]={\
  direction=\"l\",\
 },\
 [0x1151]={\
  direction=\"l\",\
 },\
 [0x1152]={\
  direction=\"l\",\
 },\
 [0x1153]={\
  direction=\"l\",\
 },\
 [0x1154]={\
  direction=\"l\",\
 },\
 [0x1155]={\
  direction=\"l\",\
 },\
 [0x1156]={\
  direction=\"l\",\
 },\
 [0x1157]={\
  direction=\"l\",\
 },\
 [0x1158]={\
  direction=\"l\",\
 },\
 [0x1159]={\
  direction=\"l\",\
 },\
 [0x115A]={\
  direction=\"l\",\
 },\
 [0x115B]={\
  direction=\"l\",\
 },\
 [0x115C]={\
  direction=\"l\",\
 },\
 [0x115D]={\
  direction=\"l\",\
 },\
 [0x115E]={\
  direction=\"l\",\
 },\
 [0x115F]={\
  direction=\"l\",\
 },\
 [0x1160]={\
  direction=\"l\",\
 },\
 [0x1161]={\
  direction=\"l\",\
 },\
 [0x1162]={\
  direction=\"l\",\
 },\
 [0x1163]={\
  direction=\"l\",\
 },\
 [0x1164]={\
  direction=\"l\",\
 },\
 [0x1165]={\
  direction=\"l\",\
 },\
 [0x1166]={\
  direction=\"l\",\
 },\
 [0x1167]={\
  direction=\"l\",\
 },\
 [0x1168]={\
  direction=\"l\",\
 },\
 [0x1169]={\
  direction=\"l\",\
 },\
 [0x116A]={\
  direction=\"l\",\
 },\
 [0x116B]={\
  direction=\"l\",\
 },\
 [0x116C]={\
  direction=\"l\",\
 },\
 [0x116D]={\
  direction=\"l\",\
 },\
 [0x116E]={\
  direction=\"l\",\
 },\
 [0x116F]={\
  direction=\"l\",\
 },\
 [0x1170]={\
  direction=\"l\",\
 },\
 [0x1171]={\
  direction=\"l\",\
 },\
 [0x1172]={\
  direction=\"l\",\
 },\
 [0x1173]={\
  direction=\"l\",\
 },\
 [0x1174]={\
  direction=\"l\",\
 },\
 [0x1175]={\
  direction=\"l\",\
 },\
 [0x1176]={\
  direction=\"l\",\
 },\
 [0x1177]={\
  direction=\"l\",\
 },\
 [0x1178]={\
  direction=\"l\",\
 },\
 [0x1179]={\
  direction=\"l\",\
 },\
 [0x117A]={\
  direction=\"l\",\
 },\
 [0x117B]={\
  direction=\"l\",\
 },\
 [0x117C]={\
  direction=\"l\",\
 },\
 [0x117D]={\
  direction=\"l\",\
 },\
 [0x117E]={\
  direction=\"l\",\
 },\
 [0x117F]={\
  direction=\"l\",\
 },\
 [0x1180]={\
  direction=\"l\",\
 },\
 [0x1181]={\
  direction=\"l\",\
 },\
 [0x1182]={\
  direction=\"l\",\
 },\
 [0x1183]={\
  direction=\"l\",\
 },\
 [0x1184]={\
  direction=\"l\",\
 },\
 [0x1185]={\
  direction=\"l\",\
 },\
 [0x1186]={\
  direction=\"l\",\
 },\
 [0x1187]={\
  direction=\"l\",\
 },\
 [0x1188]={\
  direction=\"l\",\
 },\
 [0x1189]={\
  direction=\"l\",\
 },\
 [0x118A]={\
  direction=\"l\",\
 },\
 [0x118B]={\
  direction=\"l\",\
 },\
 [0x118C]={\
  direction=\"l\",\
 },\
 [0x118D]={\
  direction=\"l\",\
 },\
 [0x118E]={\
  direction=\"l\",\
 },\
 [0x118F]={\
  direction=\"l\",\
 },\
 [0x1190]={\
  direction=\"l\",\
 },\
 [0x1191]={\
  direction=\"l\",\
 },\
 [0x1192]={\
  direction=\"l\",\
 },\
 [0x1193]={\
  direction=\"l\",\
 },\
 [0x1194]={\
  direction=\"l\",\
 },\
 [0x1195]={\
  direction=\"l\",\
 },\
 [0x1196]={\
  direction=\"l\",\
 },\
 [0x1197]={\
  direction=\"l\",\
 },\
 [0x1198]={\
  direction=\"l\",\
 },\
 [0x1199]={\
  direction=\"l\",\
 },\
 [0x119A]={\
  direction=\"l\",\
 },\
 [0x119B]={\
  direction=\"l\",\
 },\
 [0x119C]={\
  direction=\"l\",\
 },\
 [0x119D]={\
  direction=\"l\",\
 },\
 [0x119E]={\
  direction=\"l\",\
 },\
 [0x119F]={\
  direction=\"l\",\
 },\
 [0x11A0]={\
  direction=\"l\",\
 },\
 [0x11A1]={\
  direction=\"l\",\
 },\
 [0x11A2]={\
  direction=\"l\",\
 },\
 [0x11A3]={\
  direction=\"l\",\
 },\
 [0x11A4]={\
  direction=\"l\",\
 },\
 [0x11A5]={\
  direction=\"l\",\
 },\
 [0x11A6]={\
  direction=\"l\",\
 },\
 [0x11A7]={\
  direction=\"l\",\
 },\
 [0x11A8]={\
  direction=\"l\",\
 },\
 [0x11A9]={\
  direction=\"l\",\
 },\
 [0x11AA]={\
  direction=\"l\",\
 },\
 [0x11AB]={\
  direction=\"l\",\
 },\
 [0x11AC]={\
  direction=\"l\",\
 },\
 [0x11AD]={\
  direction=\"l\",\
 },\
 [0x11AE]={\
  direction=\"l\",\
 },\
 [0x11AF]={\
  direction=\"l\",\
 },\
 [0x11B0]={\
  direction=\"l\",\
 },\
 [0x11B1]={\
  direction=\"l\",\
 },\
 [0x11B2]={\
  direction=\"l\",\
 },\
 [0x11B3]={\
  direction=\"l\",\
 },\
 [0x11B4]={\
  direction=\"l\",\
 },\
 [0x11B5]={\
  direction=\"l\",\
 },\
 [0x11B6]={\
  direction=\"l\",\
 },\
 [0x11B7]={\
  direction=\"l\",\
 },\
 [0x11B8]={\
  direction=\"l\",\
 },\
 [0x11B9]={\
  direction=\"l\",\
 },\
 [0x11BA]={\
  direction=\"l\",\
 },\
 [0x11BB]={\
  direction=\"l\",\
 },\
 [0x11BC]={\
  direction=\"l\",\
 },\
 [0x11BD]={\
  direction=\"l\",\
 },\
 [0x11BE]={\
  direction=\"l\",\
 },\
 [0x11BF]={\
  direction=\"l\",\
 },\
 [0x11C0]={\
  direction=\"l\",\
 },\
 [0x11C1]={\
  direction=\"l\",\
 },\
 [0x11C2]={\
  direction=\"l\",\
 },\
 [0x11C3]={\
  direction=\"l\",\
 },\
 [0x11C4]={\
  direction=\"l\",\
 },\
 [0x11C5]={\
  direction=\"l\",\
 },\
 [0x11C6]={\
  direction=\"l\",\
 },\
 [0x11C7]={\
  direction=\"l\",\
 },\
 [0x11C8]={\
  direction=\"l\",\
 },\
 [0x11C9]={\
  direction=\"l\",\
 },\
 [0x11CA]={\
  direction=\"l\",\
 },\
 [0x11CB]={\
  direction=\"l\",\
 },\
 [0x11CC]={\
  direction=\"l\",\
 },\
 [0x11CD]={\
  direction=\"l\",\
 },\
 [0x11CE]={\
  direction=\"l\",\
 },\
 [0x11CF]={\
  direction=\"l\",\
 },\
 [0x11D0]={\
  direction=\"l\",\
 },\
 [0x11D1]={\
  direction=\"l\",\
 },\
 [0x11D2]={\
  direction=\"l\",\
 },\
 [0x11D3]={\
  direction=\"l\",\
 },\
 [0x11D4]={\
  direction=\"l\",\
 },\
 [0x11D5]={\
  direction=\"l\",\
 },\
 [0x11D6]={\
  direction=\"l\",\
 },\
 [0x11D7]={\
  direction=\"l\",\
 },\
 [0x11D8]={\
  direction=\"l\",\
 },\
 [0x11D9]={\
  direction=\"l\",\
 },\
 [0x11DA]={\
  direction=\"l\",\
 },\
 [0x11DB]={\
  direction=\"l\",\
 },\
 [0x11DC]={\
  direction=\"l\",\
 },\
 [0x11DD]={\
  direction=\"l\",\
 },\
 [0x11DE]={\
  direction=\"l\",\
 },\
 [0x11DF]={\
  direction=\"l\",\
 },\
 [0x11E0]={\
  direction=\"l\",\
 },\
 [0x11E1]={\
  direction=\"l\",\
 },\
 [0x11E2]={\
  direction=\"l\",\
 },\
 [0x11E3]={\
  direction=\"l\",\
 },\
 [0x11E4]={\
  direction=\"l\",\
 },\
 [0x11E5]={\
  direction=\"l\",\
 },\
 [0x11E6]={\
  direction=\"l\",\
 },\
 [0x11E7]={\
  direction=\"l\",\
 },\
 [0x11E8]={\
  direction=\"l\",\
 },\
 [0x11E9]={\
  direction=\"l\",\
 },\
 [0x11EA]={\
  direction=\"l\",\
 },\
 [0x11EB]={\
  direction=\"l\",\
 },\
 [0x11EC]={\
  direction=\"l\",\
 },\
 [0x11ED]={\
  direction=\"l\",\
 },\
 [0x11EE]={\
  direction=\"l\",\
 },\
 [0x11EF]={\
  direction=\"l\",\
 },\
 [0x11F0]={\
  direction=\"l\",\
 },\
 [0x11F1]={\
  direction=\"l\",\
 },\
 [0x11F2]={\
  direction=\"l\",\
 },\
 [0x11F3]={\
  direction=\"l\",\
 },\
 [0x11F4]={\
  direction=\"l\",\
 },\
 [0x11F5]={\
  direction=\"l\",\
 },\
 [0x11F6]={\
  direction=\"l\",\
 },\
 [0x11F7]={\
  direction=\"l\",\
 },\
 [0x11F8]={\
  direction=\"l\",\
 },\
 [0x11F9]={\
  direction=\"l\",\
 },\
 [0x11FA]={\
  direction=\"l\",\
 },\
 [0x11FB]={\
  direction=\"l\",\
 },\
 [0x11FC]={\
  direction=\"l\",\
 },\
 [0x11FD]={\
  direction=\"l\",\
 },\
 [0x11FE]={\
  direction=\"l\",\
 },\
 [0x11FF]={\
  direction=\"l\",\
 },\
 [0x1200]={\
  direction=\"l\",\
 },\
 [0x1201]={\
  direction=\"l\",\
 },\
 [0x1202]={\
  direction=\"l\",\
 },\
 [0x1203]={\
  direction=\"l\",\
 },\
 [0x1204]={\
  direction=\"l\",\
 },\
 [0x1205]={\
  direction=\"l\",\
 },\
 [0x1206]={\
  direction=\"l\",\
 },\
 [0x1207]={\
  direction=\"l\",\
 },\
 [0x1208]={\
  direction=\"l\",\
 },\
 [0x1209]={\
  direction=\"l\",\
 },\
 [0x120A]={\
  direction=\"l\",\
 },\
 [0x120B]={\
  direction=\"l\",\
 },\
 [0x120C]={\
  direction=\"l\",\
 },\
 [0x120D]={\
  direction=\"l\",\
 },\
 [0x120E]={\
  direction=\"l\",\
 },\
 [0x120F]={\
  direction=\"l\",\
 },\
 [0x1210]={\
  direction=\"l\",\
 },\
 [0x1211]={\
  direction=\"l\",\
 },\
 [0x1212]={\
  direction=\"l\",\
 },\
 [0x1213]={\
  direction=\"l\",\
 },\
 [0x1214]={\
  direction=\"l\",\
 },\
 [0x1215]={\
  direction=\"l\",\
 },\
 [0x1216]={\
  direction=\"l\",\
 },\
 [0x1217]={\
  direction=\"l\",\
 },\
 [0x1218]={\
  direction=\"l\",\
 },\
 [0x1219]={\
  direction=\"l\",\
 },\
 [0x121A]={\
  direction=\"l\",\
 },\
 [0x121B]={\
  direction=\"l\",\
 },\
 [0x121C]={\
  direction=\"l\",\
 },\
 [0x121D]={\
  direction=\"l\",\
 },\
 [0x121E]={\
  direction=\"l\",\
 },\
 [0x121F]={\
  direction=\"l\",\
 },\
 [0x1220]={\
  direction=\"l\",\
 },\
 [0x1221]={\
  direction=\"l\",\
 },\
 [0x1222]={\
  direction=\"l\",\
 },\
 [0x1223]={\
  direction=\"l\",\
 },\
 [0x1224]={\
  direction=\"l\",\
 },\
 [0x1225]={\
  direction=\"l\",\
 },\
 [0x1226]={\
  direction=\"l\",\
 },\
 [0x1227]={\
  direction=\"l\",\
 },\
 [0x1228]={\
  direction=\"l\",\
 },\
 [0x1229]={\
  direction=\"l\",\
 },\
 [0x122A]={\
  direction=\"l\",\
 },\
 [0x122B]={\
  direction=\"l\",\
 },\
 [0x122C]={\
  direction=\"l\",\
 },\
 [0x122D]={\
  direction=\"l\",\
 },\
 [0x122E]={\
  direction=\"l\",\
 },\
 [0x122F]={\
  direction=\"l\",\
 },\
 [0x1230]={\
  direction=\"l\",\
 },\
 [0x1231]={\
  direction=\"l\",\
 },\
 [0x1232]={\
  direction=\"l\",\
 },\
 [0x1233]={\
  direction=\"l\",\
 },\
 [0x1234]={\
  direction=\"l\",\
 },\
 [0x1235]={\
  direction=\"l\",\
 },\
 [0x1236]={\
  direction=\"l\",\
 },\
 [0x1237]={\
  direction=\"l\",\
 },\
 [0x1238]={\
  direction=\"l\",\
 },\
 [0x1239]={\
  direction=\"l\",\
 },\
 [0x123A]={\
  direction=\"l\",\
 },\
 [0x123B]={\
  direction=\"l\",\
 },\
 [0x123C]={\
  direction=\"l\",\
 },\
 [0x123D]={\
  direction=\"l\",\
 },\
 [0x123E]={\
  direction=\"l\",\
 },\
 [0x123F]={\
  direction=\"l\",\
 },\
 [0x1240]={\
  direction=\"l\",\
 },\
 [0x1241]={\
  direction=\"l\",\
 },\
 [0x1242]={\
  direction=\"l\",\
 },\
 [0x1243]={\
  direction=\"l\",\
 },\
 [0x1244]={\
  direction=\"l\",\
 },\
 [0x1245]={\
  direction=\"l\",\
 },\
 [0x1246]={\
  direction=\"l\",\
 },\
 [0x1247]={\
  direction=\"l\",\
 },\
 [0x1248]={\
  direction=\"l\",\
 },\
 [0x124A]={\
  direction=\"l\",\
 },\
 [0x124B]={\
  direction=\"l\",\
 },\
 [0x124C]={\
  direction=\"l\",\
 },\
 [0x124D]={\
  direction=\"l\",\
 },\
 [0x1250]={\
  direction=\"l\",\
 },\
 [0x1251]={\
  direction=\"l\",\
 },\
 [0x1252]={\
  direction=\"l\",\
 },\
 [0x1253]={\
  direction=\"l\",\
 },\
 [0x1254]={\
  direction=\"l\",\
 },\
 [0x1255]={\
  direction=\"l\",\
 },\
 [0x1256]={\
  direction=\"l\",\
 },\
 [0x1258]={\
  direction=\"l\",\
 },\
 [0x125A]={\
  direction=\"l\",\
 },\
 [0x125B]={\
  direction=\"l\",\
 },\
 [0x125C]={\
  direction=\"l\",\
 },\
 [0x125D]={\
  direction=\"l\",\
 },\
 [0x1260]={\
  direction=\"l\",\
 },\
 [0x1261]={\
  direction=\"l\",\
 },\
 [0x1262]={\
  direction=\"l\",\
 },\
 [0x1263]={\
  direction=\"l\",\
 },\
 [0x1264]={\
  direction=\"l\",\
 },\
 [0x1265]={\
  direction=\"l\",\
 },\
 [0x1266]={\
  direction=\"l\",\
 },\
 [0x1267]={\
  direction=\"l\",\
 },\
 [0x1268]={\
  direction=\"l\",\
 },\
 [0x1269]={\
  direction=\"l\",\
 },\
 [0x126A]={\
  direction=\"l\",\
 },\
 [0x126B]={\
  direction=\"l\",\
 },\
 [0x126C]={\
  direction=\"l\",\
 },\
 [0x126D]={\
  direction=\"l\",\
 },\
 [0x126E]={\
  direction=\"l\",\
 },\
 [0x126F]={\
  direction=\"l\",\
 },\
 [0x1270]={\
  direction=\"l\",\
 },\
 [0x1271]={\
  direction=\"l\",\
 },\
 [0x1272]={\
  direction=\"l\",\
 },\
 [0x1273]={\
  direction=\"l\",\
 },\
 [0x1274]={\
  direction=\"l\",\
 },\
 [0x1275]={\
  direction=\"l\",\
 },\
 [0x1276]={\
  direction=\"l\",\
 },\
 [0x1277]={\
  direction=\"l\",\
 },\
 [0x1278]={\
  direction=\"l\",\
 },\
 [0x1279]={\
  direction=\"l\",\
 },\
 [0x127A]={\
  direction=\"l\",\
 },\
 [0x127B]={\
  direction=\"l\",\
 },\
 [0x127C]={\
  direction=\"l\",\
 },\
 [0x127D]={\
  direction=\"l\",\
 },\
 [0x127E]={\
  direction=\"l\",\
 },\
 [0x127F]={\
  direction=\"l\",\
 },\
 [0x1280]={\
  direction=\"l\",\
 },\
 [0x1281]={\
  direction=\"l\",\
 },\
 [0x1282]={\
  direction=\"l\",\
 },\
 [0x1283]={\
  direction=\"l\",\
 },\
 [0x1284]={\
  direction=\"l\",\
 },\
 [0x1285]={\
  direction=\"l\",\
 },\
 [0x1286]={\
  direction=\"l\",\
 },\
 [0x1287]={\
  direction=\"l\",\
 },\
 [0x1288]={\
  direction=\"l\",\
 },\
 [0x128A]={\
  direction=\"l\",\
 },\
 [0x128B]={\
  direction=\"l\",\
 },\
 [0x128C]={\
  direction=\"l\",\
 },\
 [0x128D]={\
  direction=\"l\",\
 },\
 [0x1290]={\
  direction=\"l\",\
 },\
 [0x1291]={\
  direction=\"l\",\
 },\
 [0x1292]={\
  direction=\"l\",\
 },\
 [0x1293]={\
  direction=\"l\",\
 },\
 [0x1294]={\
  direction=\"l\",\
 },\
 [0x1295]={\
  direction=\"l\",\
 },\
 [0x1296]={\
  direction=\"l\",\
 },\
 [0x1297]={\
  direction=\"l\",\
 },\
 [0x1298]={\
  direction=\"l\",\
 },\
 [0x1299]={\
  direction=\"l\",\
 },\
 [0x129A]={\
  direction=\"l\",\
 },\
 [0x129B]={\
  direction=\"l\",\
 },\
 [0x129C]={\
  direction=\"l\",\
 },\
 [0x129D]={\
  direction=\"l\",\
 },\
 [0x129E]={\
  direction=\"l\",\
 },\
 [0x129F]={\
  direction=\"l\",\
 },\
 [0x12A0]={\
  direction=\"l\",\
 },\
 [0x12A1]={\
  direction=\"l\",\
 },\
 [0x12A2]={\
  direction=\"l\",\
 },\
 [0x12A3]={\
  direction=\"l\",\
 },\
 [0x12A4]={\
  direction=\"l\",\
 },\
 [0x12A5]={\
  direction=\"l\",\
 },\
 [0x12A6]={\
  direction=\"l\",\
 },\
 [0x12A7]={\
  direction=\"l\",\
 },\
 [0x12A8]={\
  direction=\"l\",\
 },\
 [0x12A9]={\
  direction=\"l\",\
 },\
 [0x12AA]={\
  direction=\"l\",\
 },\
 [0x12AB]={\
  direction=\"l\",\
 },\
 [0x12AC]={\
  direction=\"l\",\
 },\
 [0x12AD]={\
  direction=\"l\",\
 },\
 [0x12AE]={\
  direction=\"l\",\
 },\
 [0x12AF]={\
  direction=\"l\",\
 },\
 [0x12B0]={\
  direction=\"l\",\
 },\
 [0x12B2]={\
  direction=\"l\",\
 },\
 [0x12B3]={\
  direction=\"l\",\
 },\
 [0x12B4]={\
  direction=\"l\",\
 },\
 [0x12B5]={\
  direction=\"l\",\
 },\
 [0x12B8]={\
  direction=\"l\",\
 },\
 [0x12B9]={\
  direction=\"l\",\
 },\
 [0x12BA]={\
  direction=\"l\",\
 },\
 [0x12BB]={\
  direction=\"l\",\
 },\
 [0x12BC]={\
  direction=\"l\",\
 },\
 [0x12BD]={\
  direction=\"l\",\
 },\
 [0x12BE]={\
  direction=\"l\",\
 },\
 [0x12C0]={\
  direction=\"l\",\
 },\
 [0x12C2]={\
  direction=\"l\",\
 },\
 [0x12C3]={\
  direction=\"l\",\
 },\
 [0x12C4]={\
  direction=\"l\",\
 },\
 [0x12C5]={\
  direction=\"l\",\
 },\
 [0x12C8]={\
  direction=\"l\",\
 },\
 [0x12C9]={\
  direction=\"l\",\
 },\
 [0x12CA]={\
  direction=\"l\",\
 },\
 [0x12CB]={\
  direction=\"l\",\
 },\
 [0x12CC]={\
  direction=\"l\",\
 },\
 [0x12CD]={\
  direction=\"l\",\
 },\
 [0x12CE]={\
  direction=\"l\",\
 },\
 [0x12CF]={\
  direction=\"l\",\
 },\
 [0x12D0]={\
  direction=\"l\",\
 },\
 [0x12D1]={\
  direction=\"l\",\
 },\
 [0x12D2]={\
  direction=\"l\",\
 },\
 [0x12D3]={\
  direction=\"l\",\
 },\
 [0x12D4]={\
  direction=\"l\",\
 },\
 [0x12D5]={\
  direction=\"l\",\
 },\
 [0x12D6]={\
  direction=\"l\",\
 },\
 [0x12D8]={\
  direction=\"l\",\
 },\
 [0x12D9]={\
  direction=\"l\",\
 },\
 [0x12DA]={\
  direction=\"l\",\
 },\
 [0x12DB]={\
  direction=\"l\",\
 },\
 [0x12DC]={\
  direction=\"l\",\
 },\
 [0x12DD]={\
  direction=\"l\",\
 },\
 [0x12DE]={\
  direction=\"l\",\
 },\
 [0x12DF]={\
  direction=\"l\",\
 },\
 [0x12E0]={\
  direction=\"l\",\
 },\
 [0x12E1]={\
  direction=\"l\",\
 },\
 [0x12E2]={\
  direction=\"l\",\
 },\
 [0x12E3]={\
  direction=\"l\",\
 },\
 [0x12E4]={\
  direction=\"l\",\
 },\
 [0x12E5]={\
  direction=\"l\",\
 },\
 [0x12E6]={\
  direction=\"l\",\
 },\
 [0x12E7]={\
  direction=\"l\",\
 },\
 [0x12E8]={\
  direction=\"l\",\
 },\
 [0x12E9]={\
  direction=\"l\",\
 },\
 [0x12EA]={\
  direction=\"l\",\
 },\
 [0x12EB]={\
  direction=\"l\",\
 },\
 [0x12EC]={\
  direction=\"l\",\
 },\
 [0x12ED]={\
  direction=\"l\",\
 },\
 [0x12EE]={\
  direction=\"l\",\
 },\
 [0x12EF]={\
  direction=\"l\",\
 },\
 [0x12F0]={\
  direction=\"l\",\
 },\
 [0x12F1]={\
  direction=\"l\",\
 },\
 [0x12F2]={\
  direction=\"l\",\
 },\
 [0x12F3]={\
  direction=\"l\",\
 },\
 [0x12F4]={\
  direction=\"l\",\
 },\
 [0x12F5]={\
  direction=\"l\",\
 },\
 [0x12F6]={\
  direction=\"l\",\
 },\
 [0x12F7]={\
  direction=\"l\",\
 },\
 [0x12F8]={\
  direction=\"l\",\
 },\
 [0x12F9]={\
  direction=\"l\",\
 },\
 [0x12FA]={\
  direction=\"l\",\
 },\
 [0x12FB]={\
  direction=\"l\",\
 },\
 [0x12FC]={\
  direction=\"l\",\
 },\
 [0x12FD]={\
  direction=\"l\",\
 },\
 [0x12FE]={\
  direction=\"l\",\
 },\
 [0x12FF]={\
  direction=\"l\",\
 },\
 [0x1300]={\
  direction=\"l\",\
 },\
 [0x1301]={\
  direction=\"l\",\
 },\
 [0x1302]={\
  direction=\"l\",\
 },\
 [0x1303]={\
  direction=\"l\",\
 },\
 [0x1304]={\
  direction=\"l\",\
 },\
 [0x1305]={\
  direction=\"l\",\
 },\
 [0x1306]={\
  direction=\"l\",\
 },\
 [0x1307]={\
  direction=\"l\",\
 },\
 [0x1308]={\
  direction=\"l\",\
 },\
 [0x1309]={\
  direction=\"l\",\
 },\
 [0x130A]={\
  direction=\"l\",\
 },\
 [0x130B]={\
  direction=\"l\",\
 },\
 [0x130C]={\
  direction=\"l\",\
 },\
 [0x130D]={\
  direction=\"l\",\
 },\
 [0x130E]={\
  direction=\"l\",\
 },\
 [0x130F]={\
  direction=\"l\",\
 },\
 [0x1310]={\
  direction=\"l\",\
 },\
 [0x1312]={\
  direction=\"l\",\
 },\
 [0x1313]={\
  direction=\"l\",\
 },\
 [0x1314]={\
  direction=\"l\",\
 },\
 [0x1315]={\
  direction=\"l\",\
 },\
 [0x1318]={\
  direction=\"l\",\
 },\
 [0x1319]={\
  direction=\"l\",\
 },\
 [0x131A]={\
  direction=\"l\",\
 },\
 [0x131B]={\
  direction=\"l\",\
 },\
 [0x131C]={\
  direction=\"l\",\
 },\
 [0x131D]={\
  direction=\"l\",\
 },\
 [0x131E]={\
  direction=\"l\",\
 },\
 [0x131F]={\
  direction=\"l\",\
 },\
 [0x1320]={\
  direction=\"l\",\
 },\
 [0x1321]={\
  direction=\"l\",\
 },\
 [0x1322]={\
  direction=\"l\",\
 },\
 [0x1323]={\
  direction=\"l\",\
 },\
 [0x1324]={\
  direction=\"l\",\
 },\
 [0x1325]={\
  direction=\"l\",\
 },\
 [0x1326]={\
  direction=\"l\",\
 },\
 [0x1327]={\
  direction=\"l\",\
 },\
 [0x1328]={\
  direction=\"l\",\
 },\
 [0x1329]={\
  direction=\"l\",\
 },\
 [0x132A]={\
  direction=\"l\",\
 },\
 [0x132B]={\
  direction=\"l\",\
 },\
 [0x132C]={\
  direction=\"l\",\
 },\
 [0x132D]={\
  direction=\"l\",\
 },\
 [0x132E]={\
  direction=\"l\",\
 },\
 [0x132F]={\
  direction=\"l\",\
 },\
 [0x1330]={\
  direction=\"l\",\
 },\
 [0x1331]={\
  direction=\"l\",\
 },\
 [0x1332]={\
  direction=\"l\",\
 },\
 [0x1333]={\
  direction=\"l\",\
 },\
 [0x1334]={\
  direction=\"l\",\
 },\
 [0x1335]={\
  direction=\"l\",\
 },\
 [0x1336]={\
  direction=\"l\",\
 },\
 [0x1337]={\
  direction=\"l\",\
 },\
 [0x1338]={\
  direction=\"l\",\
 },\
 [0x1339]={\
  direction=\"l\",\
 },\
 [0x133A]={\
  direction=\"l\",\
 },\
 [0x133B]={\
  direction=\"l\",\
 },\
 [0x133C]={\
  direction=\"l\",\
 },\
 [0x133D]={\
  direction=\"l\",\
 },\
 [0x133E]={\
  direction=\"l\",\
 },\
 [0x133F]={\
  direction=\"l\",\
 },\
 [0x1340]={\
  direction=\"l\",\
 },\
 [0x1341]={\
  direction=\"l\",\
 },\
 [0x1342]={\
  direction=\"l\",\
 },\
 [0x1343]={\
  direction=\"l\",\
 },\
 [0x1344]={\
  direction=\"l\",\
 },\
 [0x1345]={\
  direction=\"l\",\
 },\
 [0x1346]={\
  direction=\"l\",\
 },\
 [0x1347]={\
  direction=\"l\",\
 },\
 [0x1348]={\
  direction=\"l\",\
 },\
 [0x1349]={\
  direction=\"l\",\
 },\
 [0x134A]={\
  direction=\"l\",\
 },\
 [0x134B]={\
  direction=\"l\",\
 },\
 [0x134C]={\
  direction=\"l\",\
 },\
 [0x134D]={\
  direction=\"l\",\
 },\
 [0x134E]={\
  direction=\"l\",\
 },\
 [0x134F]={\
  direction=\"l\",\
 },\
 [0x1350]={\
  direction=\"l\",\
 },\
 [0x1351]={\
  direction=\"l\",\
 },\
 [0x1352]={\
  direction=\"l\",\
 },\
 [0x1353]={\
  direction=\"l\",\
 },\
 [0x1354]={\
  direction=\"l\",\
 },\
 [0x1355]={\
  direction=\"l\",\
 },\
 [0x1356]={\
  direction=\"l\",\
 },\
 [0x1357]={\
  direction=\"l\",\
 },\
 [0x1358]={\
  direction=\"l\",\
 },\
 [0x1359]={\
  direction=\"l\",\
 },\
 [0x135A]={\
  direction=\"l\",\
 },\
 [0x135D]={\
  direction=\"nsm\",\
 },\
 [0x135E]={\
  direction=\"nsm\",\
 },\
 [0x135F]={\
  direction=\"nsm\",\
 },\
 [0x1360]={\
  direction=\"l\",\
 },\
 [0x1361]={\
  direction=\"l\",\
 },\
 [0x1362]={\
  direction=\"l\",\
 },\
 [0x1363]={\
  direction=\"l\",\
 },\
 [0x1364]={\
  direction=\"l\",\
 },\
 [0x1365]={\
  direction=\"l\",\
 },\
 [0x1366]={\
  direction=\"l\",\
 },\
 [0x1367]={\
  direction=\"l\",\
 },\
 [0x1368]={\
  direction=\"l\",\
 },\
 [0x1369]={\
  direction=\"l\",\
 },\
 [0x136A]={\
  direction=\"l\",\
 },\
 [0x136B]={\
  direction=\"l\",\
 },\
 [0x136C]={\
  direction=\"l\",\
 },\
 [0x136D]={\
  direction=\"l\",\
 },\
 [0x136E]={\
  direction=\"l\",\
 },\
 [0x136F]={\
  direction=\"l\",\
 },\
 [0x1370]={\
  direction=\"l\",\
 },\
 [0x1371]={\
  direction=\"l\",\
 },\
 [0x1372]={\
  direction=\"l\",\
 },\
 [0x1373]={\
  direction=\"l\",\
 },\
 [0x1374]={\
  direction=\"l\",\
 },\
 [0x1375]={\
  direction=\"l\",\
 },\
 [0x1376]={\
  direction=\"l\",\
 },\
 [0x1377]={\
  direction=\"l\",\
 },\
 [0x1378]={\
  direction=\"l\",\
 },\
 [0x1379]={\
  direction=\"l\",\
 },\
 [0x137A]={\
  direction=\"l\",\
 },\
 [0x137B]={\
  direction=\"l\",\
 },\
 [0x137C]={\
  direction=\"l\",\
 },\
 [0x1380]={\
  direction=\"l\",\
 },\
 [0x1381]={\
  direction=\"l\",\
 },\
 [0x1382]={\
  direction=\"l\",\
 },\
 [0x1383]={\
  direction=\"l\",\
 },\
 [0x1384]={\
  direction=\"l\",\
 },\
 [0x1385]={\
  direction=\"l\",\
 },\
 [0x1386]={\
  direction=\"l\",\
 },\
 [0x1387]={\
  direction=\"l\",\
 },\
 [0x1388]={\
  direction=\"l\",\
 },\
 [0x1389]={\
  direction=\"l\",\
 },\
 [0x138A]={\
  direction=\"l\",\
 },\
 [0x138B]={\
  direction=\"l\",\
 },\
 [0x138C]={\
  direction=\"l\",\
 },\
 [0x138D]={\
  direction=\"l\",\
 },\
 [0x138E]={\
  direction=\"l\",\
 },\
 [0x138F]={\
  direction=\"l\",\
 },\
 [0x1390]={\
  direction=\"on\",\
 },\
 [0x1391]={\
  direction=\"on\",\
 },\
 [0x1392]={\
  direction=\"on\",\
 },\
 [0x1393]={\
  direction=\"on\",\
 },\
 [0x1394]={\
  direction=\"on\",\
 },\
 [0x1395]={\
  direction=\"on\",\
 },\
 [0x1396]={\
  direction=\"on\",\
 },\
 [0x1397]={\
  direction=\"on\",\
 },\
 [0x1398]={\
  direction=\"on\",\
 },\
 [0x1399]={\
  direction=\"on\",\
 },\
 [0x13A0]={\
  direction=\"l\",\
 },\
 [0x13A1]={\
  direction=\"l\",\
 },\
 [0x13A2]={\
  direction=\"l\",\
 },\
 [0x13A3]={\
  direction=\"l\",\
 },\
 [0x13A4]={\
  direction=\"l\",\
 },\
 [0x13A5]={\
  direction=\"l\",\
 },\
 [0x13A6]={\
  direction=\"l\",\
 },\
 [0x13A7]={\
  direction=\"l\",\
 },\
 [0x13A8]={\
  direction=\"l\",\
 },\
 [0x13A9]={\
  direction=\"l\",\
 },\
 [0x13AA]={\
  direction=\"l\",\
 },\
 [0x13AB]={\
  direction=\"l\",\
 },\
 [0x13AC]={\
  direction=\"l\",\
 },\
 [0x13AD]={\
  direction=\"l\",\
 },\
 [0x13AE]={\
  direction=\"l\",\
 },\
 [0x13AF]={\
  direction=\"l\",\
 },\
 [0x13B0]={\
  direction=\"l\",\
 },\
 [0x13B1]={\
  direction=\"l\",\
 },\
 [0x13B2]={\
  direction=\"l\",\
 },\
 [0x13B3]={\
  direction=\"l\",\
 },\
 [0x13B4]={\
  direction=\"l\",\
 },\
 [0x13B5]={\
  direction=\"l\",\
 },\
 [0x13B6]={\
  direction=\"l\",\
 },\
 [0x13B7]={\
  direction=\"l\",\
 },\
 [0x13B8]={\
  direction=\"l\",\
 },\
 [0x13B9]={\
  direction=\"l\",\
 },\
 [0x13BA]={\
  direction=\"l\",\
 },\
 [0x13BB]={\
  direction=\"l\",\
 },\
 [0x13BC]={\
  direction=\"l\",\
 },\
 [0x13BD]={\
  direction=\"l\",\
 },\
 [0x13BE]={\
  direction=\"l\",\
 },\
 [0x13BF]={\
  direction=\"l\",\
 },\
 [0x13C0]={\
  direction=\"l\",\
 },\
 [0x13C1]={\
  direction=\"l\",\
 },\
 [0x13C2]={\
  direction=\"l\",\
 },\
 [0x13C3]={\
  direction=\"l\",\
 },\
 [0x13C4]={\
  direction=\"l\",\
 },\
 [0x13C5]={\
  direction=\"l\",\
 },\
 [0x13C6]={\
  direction=\"l\",\
 },\
 [0x13C7]={\
  direction=\"l\",\
 },\
 [0x13C8]={\
  direction=\"l\",\
 },\
 [0x13C9]={\
  direction=\"l\",\
 },\
 [0x13CA]={\
  direction=\"l\",\
 },\
 [0x13CB]={\
  direction=\"l\",\
 },\
 [0x13CC]={\
  direction=\"l\",\
 },\
 [0x13CD]={\
  direction=\"l\",\
 },\
 [0x13CE]={\
  direction=\"l\",\
 },\
 [0x13CF]={\
  direction=\"l\",\
 },\
 [0x13D0]={\
  direction=\"l\",\
 },\
 [0x13D1]={\
  direction=\"l\",\
 },\
 [0x13D2]={\
  direction=\"l\",\
 },\
 [0x13D3]={\
  direction=\"l\",\
 },\
 [0x13D4]={\
  direction=\"l\",\
 },\
 [0x13D5]={\
  direction=\"l\",\
 },\
 [0x13D6]={\
  direction=\"l\",\
 },\
 [0x13D7]={\
  direction=\"l\",\
 },\
 [0x13D8]={\
  direction=\"l\",\
 },\
 [0x13D9]={\
  direction=\"l\",\
 },\
 [0x13DA]={\
  direction=\"l\",\
 },\
 [0x13DB]={\
  direction=\"l\",\
 },\
 [0x13DC]={\
  direction=\"l\",\
 },\
 [0x13DD]={\
  direction=\"l\",\
 },\
 [0x13DE]={\
  direction=\"l\",\
 },\
 [0x13DF]={\
  direction=\"l\",\
 },\
 [0x13E0]={\
  direction=\"l\",\
 },\
 [0x13E1]={\
  direction=\"l\",\
 },\
 [0x13E2]={\
  direction=\"l\",\
 },\
 [0x13E3]={\
  direction=\"l\",\
 },\
 [0x13E4]={\
  direction=\"l\",\
 },\
 [0x13E5]={\
  direction=\"l\",\
 },\
 [0x13E6]={\
  direction=\"l\",\
 },\
 [0x13E7]={\
  direction=\"l\",\
 },\
 [0x13E8]={\
  direction=\"l\",\
 },\
 [0x13E9]={\
  direction=\"l\",\
 },\
 [0x13EA]={\
  direction=\"l\",\
 },\
 [0x13EB]={\
  direction=\"l\",\
 },\
 [0x13EC]={\
  direction=\"l\",\
 },\
 [0x13ED]={\
  direction=\"l\",\
 },\
 [0x13EE]={\
  direction=\"l\",\
 },\
 [0x13EF]={\
  direction=\"l\",\
 },\
 [0x13F0]={\
  direction=\"l\",\
 },\
 [0x13F1]={\
  direction=\"l\",\
 },\
 [0x13F2]={\
  direction=\"l\",\
 },\
 [0x13F3]={\
  direction=\"l\",\
 },\
 [0x13F4]={\
  direction=\"l\",\
 },\
 [0x1400]={\
  direction=\"on\",\
 },\
 [0x1401]={\
  direction=\"l\",\
 },\
 [0x1402]={\
  direction=\"l\",\
 },\
 [0x1403]={\
  direction=\"l\",\
 },\
 [0x1404]={\
  direction=\"l\",\
 },\
 [0x1405]={\
  direction=\"l\",\
 },\
 [0x1406]={\
  direction=\"l\",\
 },\
 [0x1407]={\
  direction=\"l\",\
 },\
 [0x1408]={\
  direction=\"l\",\
 },\
 [0x1409]={\
  direction=\"l\",\
 },\
 [0x140A]={\
  direction=\"l\",\
 },\
 [0x140B]={\
  direction=\"l\",\
 },\
 [0x140C]={\
  direction=\"l\",\
 },\
 [0x140D]={\
  direction=\"l\",\
 },\
 [0x140E]={\
  direction=\"l\",\
 },\
 [0x140F]={\
  direction=\"l\",\
 },\
 [0x1410]={\
  direction=\"l\",\
 },\
 [0x1411]={\
  direction=\"l\",\
 },\
 [0x1412]={\
  direction=\"l\",\
 },\
 [0x1413]={\
  direction=\"l\",\
 },\
 [0x1414]={\
  direction=\"l\",\
 },\
 [0x1415]={\
  direction=\"l\",\
 },\
 [0x1416]={\
  direction=\"l\",\
 },\
 [0x1417]={\
  direction=\"l\",\
 },\
 [0x1418]={\
  direction=\"l\",\
 },\
 [0x1419]={\
  direction=\"l\",\
 },\
 [0x141A]={\
  direction=\"l\",\
 },\
 [0x141B]={\
  direction=\"l\",\
 },\
 [0x141C]={\
  direction=\"l\",\
 },\
 [0x141D]={\
  direction=\"l\",\
 },\
 [0x141E]={\
  direction=\"l\",\
 },\
 [0x141F]={\
  direction=\"l\",\
 },\
 [0x1420]={\
  direction=\"l\",\
 },\
 [0x1421]={\
  direction=\"l\",\
 },\
 [0x1422]={\
  direction=\"l\",\
 },\
 [0x1423]={\
  direction=\"l\",\
 },\
 [0x1424]={\
  direction=\"l\",\
 },\
 [0x1425]={\
  direction=\"l\",\
 },\
 [0x1426]={\
  direction=\"l\",\
 },\
 [0x1427]={\
  direction=\"l\",\
 },\
 [0x1428]={\
  direction=\"l\",\
 },\
 [0x1429]={\
  direction=\"l\",\
 },\
 [0x142A]={\
  direction=\"l\",\
 },\
 [0x142B]={\
  direction=\"l\",\
 },\
 [0x142C]={\
  direction=\"l\",\
 },\
 [0x142D]={\
  direction=\"l\",\
 },\
 [0x142E]={\
  direction=\"l\",\
 },\
 [0x142F]={\
  direction=\"l\",\
 },\
 [0x1430]={\
  direction=\"l\",\
 },\
 [0x1431]={\
  direction=\"l\",\
 },\
 [0x1432]={\
  direction=\"l\",\
 },\
 [0x1433]={\
  direction=\"l\",\
 },\
 [0x1434]={\
  direction=\"l\",\
 },\
 [0x1435]={\
  direction=\"l\",\
 },\
 [0x1436]={\
  direction=\"l\",\
 },\
 [0x1437]={\
  direction=\"l\",\
 },\
 [0x1438]={\
  direction=\"l\",\
 },\
 [0x1439]={\
  direction=\"l\",\
 },\
 [0x143A]={\
  direction=\"l\",\
 },\
 [0x143B]={\
  direction=\"l\",\
 },\
 [0x143C]={\
  direction=\"l\",\
 },\
 [0x143D]={\
  direction=\"l\",\
 },\
 [0x143E]={\
  direction=\"l\",\
 },\
 [0x143F]={\
  direction=\"l\",\
 },\
 [0x1440]={\
  direction=\"l\",\
 },\
 [0x1441]={\
  direction=\"l\",\
 },\
 [0x1442]={\
  direction=\"l\",\
 },\
 [0x1443]={\
  direction=\"l\",\
 },\
 [0x1444]={\
  direction=\"l\",\
 },\
 [0x1445]={\
  direction=\"l\",\
 },\
 [0x1446]={\
  direction=\"l\",\
 },\
 [0x1447]={\
  direction=\"l\",\
 },\
 [0x1448]={\
  direction=\"l\",\
 },\
 [0x1449]={\
  direction=\"l\",\
 },\
 [0x144A]={\
  direction=\"l\",\
 },\
 [0x144B]={\
  direction=\"l\",\
 },\
 [0x144C]={\
  direction=\"l\",\
 },\
 [0x144D]={\
  direction=\"l\",\
 },\
 [0x144E]={\
  direction=\"l\",\
 },\
 [0x144F]={\
  direction=\"l\",\
 },\
 [0x1450]={\
  direction=\"l\",\
 },\
 [0x1451]={\
  direction=\"l\",\
 },\
 [0x1452]={\
  direction=\"l\",\
 },\
 [0x1453]={\
  direction=\"l\",\
 },\
 [0x1454]={\
  direction=\"l\",\
 },\
 [0x1455]={\
  direction=\"l\",\
 },\
 [0x1456]={\
  direction=\"l\",\
 },\
 [0x1457]={\
  direction=\"l\",\
 },\
 [0x1458]={\
  direction=\"l\",\
 },\
 [0x1459]={\
  direction=\"l\",\
 },\
 [0x145A]={\
  direction=\"l\",\
 },\
 [0x145B]={\
  direction=\"l\",\
 },\
 [0x145C]={\
  direction=\"l\",\
 },\
 [0x145D]={\
  direction=\"l\",\
 },\
 [0x145E]={\
  direction=\"l\",\
 },\
 [0x145F]={\
  direction=\"l\",\
 },\
 [0x1460]={\
  direction=\"l\",\
 },\
 [0x1461]={\
  direction=\"l\",\
 },\
 [0x1462]={\
  direction=\"l\",\
 },\
 [0x1463]={\
  direction=\"l\",\
 },\
 [0x1464]={\
  direction=\"l\",\
 },\
 [0x1465]={\
  direction=\"l\",\
 },\
 [0x1466]={\
  direction=\"l\",\
 },\
 [0x1467]={\
  direction=\"l\",\
 },\
 [0x1468]={\
  direction=\"l\",\
 },\
 [0x1469]={\
  direction=\"l\",\
 },\
 [0x146A]={\
  direction=\"l\",\
 },\
 [0x146B]={\
  direction=\"l\",\
 },\
 [0x146C]={\
  direction=\"l\",\
 },\
 [0x146D]={\
  direction=\"l\",\
 },\
 [0x146E]={\
  direction=\"l\",\
 },\
 [0x146F]={\
  direction=\"l\",\
 },\
 [0x1470]={\
  direction=\"l\",\
 },\
 [0x1471]={\
  direction=\"l\",\
 },\
 [0x1472]={\
  direction=\"l\",\
 },\
 [0x1473]={\
  direction=\"l\",\
 },\
 [0x1474]={\
  direction=\"l\",\
 },\
 [0x1475]={\
  direction=\"l\",\
 },\
 [0x1476]={\
  direction=\"l\",\
 },\
 [0x1477]={\
  direction=\"l\",\
 },\
 [0x1478]={\
  direction=\"l\",\
 },\
 [0x1479]={\
  direction=\"l\",\
 },\
 [0x147A]={\
  direction=\"l\",\
 },\
 [0x147B]={\
  direction=\"l\",\
 },\
 [0x147C]={\
  direction=\"l\",\
 },\
 [0x147D]={\
  direction=\"l\",\
 },\
 [0x147E]={\
  direction=\"l\",\
 },\
 [0x147F]={\
  direction=\"l\",\
 },\
 [0x1480]={\
  direction=\"l\",\
 },\
 [0x1481]={\
  direction=\"l\",\
 },\
 [0x1482]={\
  direction=\"l\",\
 },\
 [0x1483]={\
  direction=\"l\",\
 },\
 [0x1484]={\
  direction=\"l\",\
 },\
 [0x1485]={\
  direction=\"l\",\
 },\
 [0x1486]={\
  direction=\"l\",\
 },\
 [0x1487]={\
  direction=\"l\",\
 },\
 [0x1488]={\
  direction=\"l\",\
 },\
 [0x1489]={\
  direction=\"l\",\
 },\
 [0x148A]={\
  direction=\"l\",\
 },\
 [0x148B]={\
  direction=\"l\",\
 },\
 [0x148C]={\
  direction=\"l\",\
 },\
 [0x148D]={\
  direction=\"l\",\
 },\
 [0x148E]={\
  direction=\"l\",\
 },\
 [0x148F]={\
  direction=\"l\",\
 },\
 [0x1490]={\
  direction=\"l\",\
 },\
 [0x1491]={\
  direction=\"l\",\
 },\
 [0x1492]={\
  direction=\"l\",\
 },\
 [0x1493]={\
  direction=\"l\",\
 },\
 [0x1494]={\
  direction=\"l\",\
 },\
 [0x1495]={\
  direction=\"l\",\
 },\
 [0x1496]={\
  direction=\"l\",\
 },\
 [0x1497]={\
  direction=\"l\",\
 },\
 [0x1498]={\
  direction=\"l\",\
 },\
 [0x1499]={\
  direction=\"l\",\
 },\
 [0x149A]={\
  direction=\"l\",\
 },\
 [0x149B]={\
  direction=\"l\",\
 },\
 [0x149C]={\
  direction=\"l\",\
 },\
 [0x149D]={\
  direction=\"l\",\
 },\
 [0x149E]={\
  direction=\"l\",\
 },\
 [0x149F]={\
  direction=\"l\",\
 },\
 [0x14A0]={\
  direction=\"l\",\
 },\
 [0x14A1]={\
  direction=\"l\",\
 },\
 [0x14A2]={\
  direction=\"l\",\
 },\
 [0x14A3]={\
  direction=\"l\",\
 },\
 [0x14A4]={\
  direction=\"l\",\
 },\
 [0x14A5]={\
  direction=\"l\",\
 },\
 [0x14A6]={\
  direction=\"l\",\
 },\
 [0x14A7]={\
  direction=\"l\",\
 },\
 [0x14A8]={\
  direction=\"l\",\
 },\
 [0x14A9]={\
  direction=\"l\",\
 },\
 [0x14AA]={\
  direction=\"l\",\
 },\
 [0x14AB]={\
  direction=\"l\",\
 },\
 [0x14AC]={\
  direction=\"l\",\
 },\
 [0x14AD]={\
  direction=\"l\",\
 },\
 [0x14AE]={\
  direction=\"l\",\
 },\
 [0x14AF]={\
  direction=\"l\",\
 },\
 [0x14B0]={\
  direction=\"l\",\
 },\
 [0x14B1]={\
  direction=\"l\",\
 },\
 [0x14B2]={\
  direction=\"l\",\
 },\
 [0x14B3]={\
  direction=\"l\",\
 },\
 [0x14B4]={\
  direction=\"l\",\
 },\
 [0x14B5]={\
  direction=\"l\",\
 },\
 [0x14B6]={\
  direction=\"l\",\
 },\
 [0x14B7]={\
  direction=\"l\",\
 },\
 [0x14B8]={\
  direction=\"l\",\
 },\
 [0x14B9]={\
  direction=\"l\",\
 },\
 [0x14BA]={\
  direction=\"l\",\
 },\
 [0x14BB]={\
  direction=\"l\",\
 },\
 [0x14BC]={\
  direction=\"l\",\
 },\
 [0x14BD]={\
  direction=\"l\",\
 },\
 [0x14BE]={\
  direction=\"l\",\
 },\
 [0x14BF]={\
  direction=\"l\",\
 },\
 [0x14C0]={\
  direction=\"l\",\
 },\
 [0x14C1]={\
  direction=\"l\",\
 },\
 [0x14C2]={\
  direction=\"l\",\
 },\
 [0x14C3]={\
  direction=\"l\",\
 },\
 [0x14C4]={\
  direction=\"l\",\
 },\
 [0x14C5]={\
  direction=\"l\",\
 },\
 [0x14C6]={\
  direction=\"l\",\
 },\
 [0x14C7]={\
  direction=\"l\",\
 },\
 [0x14C8]={\
  direction=\"l\",\
 },\
 [0x14C9]={\
  direction=\"l\",\
 },\
 [0x14CA]={\
  direction=\"l\",\
 },\
 [0x14CB]={\
  direction=\"l\",\
 },\
 [0x14CC]={\
  direction=\"l\",\
 },\
 [0x14CD]={\
  direction=\"l\",\
 },\
 [0x14CE]={\
  direction=\"l\",\
 },\
 [0x14CF]={\
  direction=\"l\",\
 },\
 [0x14D0]={\
  direction=\"l\",\
 },\
 [0x14D1]={\
  direction=\"l\",\
 },\
 [0x14D2]={\
  direction=\"l\",\
 },\
 [0x14D3]={\
  direction=\"l\",\
 },\
 [0x14D4]={\
  direction=\"l\",\
 },\
 [0x14D5]={\
  direction=\"l\",\
 },\
 [0x14D6]={\
  direction=\"l\",\
 },\
 [0x14D7]={\
  direction=\"l\",\
 },\
 [0x14D8]={\
  direction=\"l\",\
 },\
 [0x14D9]={\
  direction=\"l\",\
 },\
 [0x14DA]={\
  direction=\"l\",\
 },\
 [0x14DB]={\
  direction=\"l\",\
 },\
 [0x14DC]={\
  direction=\"l\",\
 },\
 [0x14DD]={\
  direction=\"l\",\
 },\
 [0x14DE]={\
  direction=\"l\",\
 },\
 [0x14DF]={\
  direction=\"l\",\
 },\
 [0x14E0]={\
  direction=\"l\",\
 },\
 [0x14E1]={\
  direction=\"l\",\
 },\
 [0x14E2]={\
  direction=\"l\",\
 },\
 [0x14E3]={\
  direction=\"l\",\
 },\
 [0x14E4]={\
  direction=\"l\",\
 },\
 [0x14E5]={\
  direction=\"l\",\
 },\
 [0x14E6]={\
  direction=\"l\",\
 },\
 [0x14E7]={\
  direction=\"l\",\
 },\
 [0x14E8]={\
  direction=\"l\",\
 },\
 [0x14E9]={\
  direction=\"l\",\
 },\
 [0x14EA]={\
  direction=\"l\",\
 },\
 [0x14EB]={\
  direction=\"l\",\
 },\
 [0x14EC]={\
  direction=\"l\",\
 },\
 [0x14ED]={\
  direction=\"l\",\
 },\
 [0x14EE]={\
  direction=\"l\",\
 },\
 [0x14EF]={\
  direction=\"l\",\
 },\
 [0x14F0]={\
  direction=\"l\",\
 },\
 [0x14F1]={\
  direction=\"l\",\
 },\
 [0x14F2]={\
  direction=\"l\",\
 },\
 [0x14F3]={\
  direction=\"l\",\
 },\
 [0x14F4]={\
  direction=\"l\",\
 },\
 [0x14F5]={\
  direction=\"l\",\
 },\
 [0x14F6]={\
  direction=\"l\",\
 },\
 [0x14F7]={\
  direction=\"l\",\
 },\
 [0x14F8]={\
  direction=\"l\",\
 },\
 [0x14F9]={\
  direction=\"l\",\
 },\
 [0x14FA]={\
  direction=\"l\",\
 },\
 [0x14FB]={\
  direction=\"l\",\
 },\
 [0x14FC]={\
  direction=\"l\",\
 },\
 [0x14FD]={\
  direction=\"l\",\
 },\
 [0x14FE]={\
  direction=\"l\",\
 },\
 [0x14FF]={\
  direction=\"l\",\
 },\
 [0x1500]={\
  direction=\"l\",\
 },\
 [0x1501]={\
  direction=\"l\",\
 },\
 [0x1502]={\
  direction=\"l\",\
 },\
 [0x1503]={\
  direction=\"l\",\
 },\
 [0x1504]={\
  direction=\"l\",\
 },\
 [0x1505]={\
  direction=\"l\",\
 },\
 [0x1506]={\
  direction=\"l\",\
 },\
 [0x1507]={\
  direction=\"l\",\
 },\
 [0x1508]={\
  direction=\"l\",\
 },\
 [0x1509]={\
  direction=\"l\",\
 },\
 [0x150A]={\
  direction=\"l\",\
 },\
 [0x150B]={\
  direction=\"l\",\
 },\
 [0x150C]={\
  direction=\"l\",\
 },\
 [0x150D]={\
  direction=\"l\",\
 },\
 [0x150E]={\
  direction=\"l\",\
 },\
 [0x150F]={\
  direction=\"l\",\
 },\
 [0x1510]={\
  direction=\"l\",\
 },\
 [0x1511]={\
  direction=\"l\",\
 },\
 [0x1512]={\
  direction=\"l\",\
 },\
 [0x1513]={\
  direction=\"l\",\
 },\
 [0x1514]={\
  direction=\"l\",\
 },\
 [0x1515]={\
  direction=\"l\",\
 },\
 [0x1516]={\
  direction=\"l\",\
 },\
 [0x1517]={\
  direction=\"l\",\
 },\
 [0x1518]={\
  direction=\"l\",\
 },\
 [0x1519]={\
  direction=\"l\",\
 },\
 [0x151A]={\
  direction=\"l\",\
 },\
 [0x151B]={\
  direction=\"l\",\
 },\
 [0x151C]={\
  direction=\"l\",\
 },\
 [0x151D]={\
  direction=\"l\",\
 },\
 [0x151E]={\
  direction=\"l\",\
 },\
 [0x151F]={\
  direction=\"l\",\
 },\
 [0x1520]={\
  direction=\"l\",\
 },\
 [0x1521]={\
  direction=\"l\",\
 },\
 [0x1522]={\
  direction=\"l\",\
 },\
 [0x1523]={\
  direction=\"l\",\
 },\
 [0x1524]={\
  direction=\"l\",\
 },\
 [0x1525]={\
  direction=\"l\",\
 },\
 [0x1526]={\
  direction=\"l\",\
 },\
 [0x1527]={\
  direction=\"l\",\
 },\
 [0x1528]={\
  direction=\"l\",\
 },\
 [0x1529]={\
  direction=\"l\",\
 },\
 [0x152A]={\
  direction=\"l\",\
 },\
 [0x152B]={\
  direction=\"l\",\
 },\
 [0x152C]={\
  direction=\"l\",\
 },\
 [0x152D]={\
  direction=\"l\",\
 },\
 [0x152E]={\
  direction=\"l\",\
 },\
 [0x152F]={\
  direction=\"l\",\
 },\
 [0x1530]={\
  direction=\"l\",\
 },\
 [0x1531]={\
  direction=\"l\",\
 },\
 [0x1532]={\
  direction=\"l\",\
 },\
 [0x1533]={\
  direction=\"l\",\
 },\
 [0x1534]={\
  direction=\"l\",\
 },\
 [0x1535]={\
  direction=\"l\",\
 },\
 [0x1536]={\
  direction=\"l\",\
 },\
 [0x1537]={\
  direction=\"l\",\
 },\
 [0x1538]={\
  direction=\"l\",\
 },\
 [0x1539]={\
  direction=\"l\",\
 },\
 [0x153A]={\
  direction=\"l\",\
 },\
 [0x153B]={\
  direction=\"l\",\
 },\
 [0x153C]={\
  direction=\"l\",\
 },\
 [0x153D]={\
  direction=\"l\",\
 },\
 [0x153E]={\
  direction=\"l\",\
 },\
 [0x153F]={\
  direction=\"l\",\
 },\
 [0x1540]={\
  direction=\"l\",\
 },\
 [0x1541]={\
  direction=\"l\",\
 },\
 [0x1542]={\
  direction=\"l\",\
 },\
 [0x1543]={\
  direction=\"l\",\
 },\
 [0x1544]={\
  direction=\"l\",\
 },\
 [0x1545]={\
  direction=\"l\",\
 },\
 [0x1546]={\
  direction=\"l\",\
 },\
 [0x1547]={\
  direction=\"l\",\
 },\
 [0x1548]={\
  direction=\"l\",\
 },\
 [0x1549]={\
  direction=\"l\",\
 },\
 [0x154A]={\
  direction=\"l\",\
 },\
 [0x154B]={\
  direction=\"l\",\
 },\
 [0x154C]={\
  direction=\"l\",\
 },\
 [0x154D]={\
  direction=\"l\",\
 },\
 [0x154E]={\
  direction=\"l\",\
 },\
 [0x154F]={\
  direction=\"l\",\
 },\
 [0x1550]={\
  direction=\"l\",\
 },\
 [0x1551]={\
  direction=\"l\",\
 },\
 [0x1552]={\
  direction=\"l\",\
 },\
 [0x1553]={\
  direction=\"l\",\
 },\
 [0x1554]={\
  direction=\"l\",\
 },\
 [0x1555]={\
  direction=\"l\",\
 },\
 [0x1556]={\
  direction=\"l\",\
 },\
 [0x1557]={\
  direction=\"l\",\
 },\
 [0x1558]={\
  direction=\"l\",\
 },\
 [0x1559]={\
  direction=\"l\",\
 },\
 [0x155A]={\
  direction=\"l\",\
 },\
 [0x155B]={\
  direction=\"l\",\
 },\
 [0x155C]={\
  direction=\"l\",\
 },\
 [0x155D]={\
  direction=\"l\",\
 },\
 [0x155E]={\
  direction=\"l\",\
 },\
 [0x155F]={\
  direction=\"l\",\
 },\
 [0x1560]={\
  direction=\"l\",\
 },\
 [0x1561]={\
  direction=\"l\",\
 },\
 [0x1562]={\
  direction=\"l\",\
 },\
 [0x1563]={\
  direction=\"l\",\
 },\
 [0x1564]={\
  direction=\"l\",\
 },\
 [0x1565]={\
  direction=\"l\",\
 },\
 [0x1566]={\
  direction=\"l\",\
 },\
 [0x1567]={\
  direction=\"l\",\
 },\
 [0x1568]={\
  direction=\"l\",\
 },\
 [0x1569]={\
  direction=\"l\",\
 },\
 [0x156A]={\
  direction=\"l\",\
 },\
 [0x156B]={\
  direction=\"l\",\
 },\
 [0x156C]={\
  direction=\"l\",\
 },\
 [0x156D]={\
  direction=\"l\",\
 },\
 [0x156E]={\
  direction=\"l\",\
 },\
 [0x156F]={\
  direction=\"l\",\
 },\
 [0x1570]={\
  direction=\"l\",\
 },\
 [0x1571]={\
  direction=\"l\",\
 },\
 [0x1572]={\
  direction=\"l\",\
 },\
 [0x1573]={\
  direction=\"l\",\
 },\
 [0x1574]={\
  direction=\"l\",\
 },\
 [0x1575]={\
  direction=\"l\",\
 },\
 [0x1576]={\
  direction=\"l\",\
 },\
 [0x1577]={\
  direction=\"l\",\
 },\
 [0x1578]={\
  direction=\"l\",\
 },\
 [0x1579]={\
  direction=\"l\",\
 },\
 [0x157A]={\
  direction=\"l\",\
 },\
 [0x157B]={\
  direction=\"l\",\
 },\
 [0x157C]={\
  direction=\"l\",\
 },\
 [0x157D]={\
  direction=\"l\",\
 },\
 [0x157E]={\
  direction=\"l\",\
 },\
 [0x157F]={\
  direction=\"l\",\
 },\
 [0x1580]={\
  direction=\"l\",\
 },\
 [0x1581]={\
  direction=\"l\",\
 },\
 [0x1582]={\
  direction=\"l\",\
 },\
 [0x1583]={\
  direction=\"l\",\
 },\
 [0x1584]={\
  direction=\"l\",\
 },\
 [0x1585]={\
  direction=\"l\",\
 },\
 [0x1586]={\
  direction=\"l\",\
 },\
 [0x1587]={\
  direction=\"l\",\
 },\
 [0x1588]={\
  direction=\"l\",\
 },\
 [0x1589]={\
  direction=\"l\",\
 },\
 [0x158A]={\
  direction=\"l\",\
 },\
 [0x158B]={\
  direction=\"l\",\
 },\
 [0x158C]={\
  direction=\"l\",\
 },\
 [0x158D]={\
  direction=\"l\",\
 },\
 [0x158E]={\
  direction=\"l\",\
 },\
 [0x158F]={\
  direction=\"l\",\
 },\
 [0x1590]={\
  direction=\"l\",\
 },\
 [0x1591]={\
  direction=\"l\",\
 },\
 [0x1592]={\
  direction=\"l\",\
 },\
 [0x1593]={\
  direction=\"l\",\
 },\
 [0x1594]={\
  direction=\"l\",\
 },\
 [0x1595]={\
  direction=\"l\",\
 },\
 [0x1596]={\
  direction=\"l\",\
 },\
 [0x1597]={\
  direction=\"l\",\
 },\
 [0x1598]={\
  direction=\"l\",\
 },\
 [0x1599]={\
  direction=\"l\",\
 },\
 [0x159A]={\
  direction=\"l\",\
 },\
 [0x159B]={\
  direction=\"l\",\
 },\
 [0x159C]={\
  direction=\"l\",\
 },\
 [0x159D]={\
  direction=\"l\",\
 },\
 [0x159E]={\
  direction=\"l\",\
 },\
 [0x159F]={\
  direction=\"l\",\
 },\
 [0x15A0]={\
  direction=\"l\",\
 },\
 [0x15A1]={\
  direction=\"l\",\
 },\
 [0x15A2]={\
  direction=\"l\",\
 },\
 [0x15A3]={\
  direction=\"l\",\
 },\
 [0x15A4]={\
  direction=\"l\",\
 },\
 [0x15A5]={\
  direction=\"l\",\
 },\
 [0x15A6]={\
  direction=\"l\",\
 },\
 [0x15A7]={\
  direction=\"l\",\
 },\
 [0x15A8]={\
  direction=\"l\",\
 },\
 [0x15A9]={\
  direction=\"l\",\
 },\
 [0x15AA]={\
  direction=\"l\",\
 },\
 [0x15AB]={\
  direction=\"l\",\
 },\
 [0x15AC]={\
  direction=\"l\",\
 },\
 [0x15AD]={\
  direction=\"l\",\
 },\
 [0x15AE]={\
  direction=\"l\",\
 },\
 [0x15AF]={\
  direction=\"l\",\
 },\
 [0x15B0]={\
  direction=\"l\",\
 },\
 [0x15B1]={\
  direction=\"l\",\
 },\
 [0x15B2]={\
  direction=\"l\",\
 },\
 [0x15B3]={\
  direction=\"l\",\
 },\
 [0x15B4]={\
  direction=\"l\",\
 },\
 [0x15B5]={\
  direction=\"l\",\
 },\
 [0x15B6]={\
  direction=\"l\",\
 },\
 [0x15B7]={\
  direction=\"l\",\
 },\
 [0x15B8]={\
  direction=\"l\",\
 },\
 [0x15B9]={\
  direction=\"l\",\
 },\
 [0x15BA]={\
  direction=\"l\",\
 },\
 [0x15BB]={\
  direction=\"l\",\
 },\
 [0x15BC]={\
  direction=\"l\",\
 },\
 [0x15BD]={\
  direction=\"l\",\
 },\
 [0x15BE]={\
  direction=\"l\",\
 },\
 [0x15BF]={\
  direction=\"l\",\
 },\
 [0x15C0]={\
  direction=\"l\",\
 },\
 [0x15C1]={\
  direction=\"l\",\
 },\
 [0x15C2]={\
  direction=\"l\",\
 },\
 [0x15C3]={\
  direction=\"l\",\
 },\
 [0x15C4]={\
  direction=\"l\",\
 },\
 [0x15C5]={\
  direction=\"l\",\
 },\
 [0x15C6]={\
  direction=\"l\",\
 },\
 [0x15C7]={\
  direction=\"l\",\
 },\
 [0x15C8]={\
  direction=\"l\",\
 },\
 [0x15C9]={\
  direction=\"l\",\
 },\
 [0x15CA]={\
  direction=\"l\",\
 },\
 [0x15CB]={\
  direction=\"l\",\
 },\
 [0x15CC]={\
  direction=\"l\",\
 },\
 [0x15CD]={\
  direction=\"l\",\
 },\
 [0x15CE]={\
  direction=\"l\",\
 },\
 [0x15CF]={\
  direction=\"l\",\
 },\
 [0x15D0]={\
  direction=\"l\",\
 },\
 [0x15D1]={\
  direction=\"l\",\
 },\
 [0x15D2]={\
  direction=\"l\",\
 },\
 [0x15D3]={\
  direction=\"l\",\
 },\
 [0x15D4]={\
  direction=\"l\",\
 },\
 [0x15D5]={\
  direction=\"l\",\
 },\
 [0x15D6]={\
  direction=\"l\",\
 },\
 [0x15D7]={\
  direction=\"l\",\
 },\
 [0x15D8]={\
  direction=\"l\",\
 },\
 [0x15D9]={\
  direction=\"l\",\
 },\
 [0x15DA]={\
  direction=\"l\",\
 },\
 [0x15DB]={\
  direction=\"l\",\
 },\
 [0x15DC]={\
  direction=\"l\",\
 },\
 [0x15DD]={\
  direction=\"l\",\
 },\
 [0x15DE]={\
  direction=\"l\",\
 },\
 [0x15DF]={\
  direction=\"l\",\
 },\
 [0x15E0]={\
  direction=\"l\",\
 },\
 [0x15E1]={\
  direction=\"l\",\
 },\
 [0x15E2]={\
  direction=\"l\",\
 },\
 [0x15E3]={\
  direction=\"l\",\
 },\
 [0x15E4]={\
  direction=\"l\",\
 },\
 [0x15E5]={\
  direction=\"l\",\
 },\
 [0x15E6]={\
  direction=\"l\",\
 },\
 [0x15E7]={\
  direction=\"l\",\
 },\
 [0x15E8]={\
  direction=\"l\",\
 },\
 [0x15E9]={\
  direction=\"l\",\
 },\
 [0x15EA]={\
  direction=\"l\",\
 },\
 [0x15EB]={\
  direction=\"l\",\
 },\
 [0x15EC]={\
  direction=\"l\",\
 },\
 [0x15ED]={\
  direction=\"l\",\
 },\
 [0x15EE]={\
  direction=\"l\",\
 },\
 [0x15EF]={\
  direction=\"l\",\
 },\
 [0x15F0]={\
  direction=\"l\",\
 },\
 [0x15F1]={\
  direction=\"l\",\
 },\
 [0x15F2]={\
  direction=\"l\",\
 },\
 [0x15F3]={\
  direction=\"l\",\
 },\
 [0x15F4]={\
  direction=\"l\",\
 },\
 [0x15F5]={\
  direction=\"l\",\
 },\
 [0x15F6]={\
  direction=\"l\",\
 },\
 [0x15F7]={\
  direction=\"l\",\
 },\
 [0x15F8]={\
  direction=\"l\",\
 },\
 [0x15F9]={\
  direction=\"l\",\
 },\
 [0x15FA]={\
  direction=\"l\",\
 },\
 [0x15FB]={\
  direction=\"l\",\
 },\
 [0x15FC]={\
  direction=\"l\",\
 },\
 [0x15FD]={\
  direction=\"l\",\
 },\
 [0x15FE]={\
  direction=\"l\",\
 },\
 [0x15FF]={\
  direction=\"l\",\
 },\
 [0x1600]={\
  direction=\"l\",\
 },\
 [0x1601]={\
  direction=\"l\",\
 },\
 [0x1602]={\
  direction=\"l\",\
 },\
 [0x1603]={\
  direction=\"l\",\
 },\
 [0x1604]={\
  direction=\"l\",\
 },\
 [0x1605]={\
  direction=\"l\",\
 },\
 [0x1606]={\
  direction=\"l\",\
 },\
 [0x1607]={\
  direction=\"l\",\
 },\
 [0x1608]={\
  direction=\"l\",\
 },\
 [0x1609]={\
  direction=\"l\",\
 },\
 [0x160A]={\
  direction=\"l\",\
 },\
 [0x160B]={\
  direction=\"l\",\
 },\
 [0x160C]={\
  direction=\"l\",\
 },\
 [0x160D]={\
  direction=\"l\",\
 },\
 [0x160E]={\
  direction=\"l\",\
 },\
 [0x160F]={\
  direction=\"l\",\
 },\
 [0x1610]={\
  direction=\"l\",\
 },\
 [0x1611]={\
  direction=\"l\",\
 },\
 [0x1612]={\
  direction=\"l\",\
 },\
 [0x1613]={\
  direction=\"l\",\
 },\
 [0x1614]={\
  direction=\"l\",\
 },\
 [0x1615]={\
  direction=\"l\",\
 },\
 [0x1616]={\
  direction=\"l\",\
 },\
 [0x1617]={\
  direction=\"l\",\
 },\
 [0x1618]={\
  direction=\"l\",\
 },\
 [0x1619]={\
  direction=\"l\",\
 },\
 [0x161A]={\
  direction=\"l\",\
 },\
 [0x161B]={\
  direction=\"l\",\
 },\
 [0x161C]={\
  direction=\"l\",\
 },\
 [0x161D]={\
  direction=\"l\",\
 },\
 [0x161E]={\
  direction=\"l\",\
 },\
 [0x161F]={\
  direction=\"l\",\
 },\
 [0x1620]={\
  direction=\"l\",\
 },\
 [0x1621]={\
  direction=\"l\",\
 },\
 [0x1622]={\
  direction=\"l\",\
 },\
 [0x1623]={\
  direction=\"l\",\
 },\
 [0x1624]={\
  direction=\"l\",\
 },\
 [0x1625]={\
  direction=\"l\",\
 },\
 [0x1626]={\
  direction=\"l\",\
 },\
 [0x1627]={\
  direction=\"l\",\
 },\
 [0x1628]={\
  direction=\"l\",\
 },\
 [0x1629]={\
  direction=\"l\",\
 },\
 [0x162A]={\
  direction=\"l\",\
 },\
 [0x162B]={\
  direction=\"l\",\
 },\
 [0x162C]={\
  direction=\"l\",\
 },\
 [0x162D]={\
  direction=\"l\",\
 },\
 [0x162E]={\
  direction=\"l\",\
 },\
 [0x162F]={\
  direction=\"l\",\
 },\
 [0x1630]={\
  direction=\"l\",\
 },\
 [0x1631]={\
  direction=\"l\",\
 },\
 [0x1632]={\
  direction=\"l\",\
 },\
 [0x1633]={\
  direction=\"l\",\
 },\
 [0x1634]={\
  direction=\"l\",\
 },\
 [0x1635]={\
  direction=\"l\",\
 },\
 [0x1636]={\
  direction=\"l\",\
 },\
 [0x1637]={\
  direction=\"l\",\
 },\
 [0x1638]={\
  direction=\"l\",\
 },\
 [0x1639]={\
  direction=\"l\",\
 },\
 [0x163A]={\
  direction=\"l\",\
 },\
 [0x163B]={\
  direction=\"l\",\
 },\
 [0x163C]={\
  direction=\"l\",\
 },\
 [0x163D]={\
  direction=\"l\",\
 },\
 [0x163E]={\
  direction=\"l\",\
 },\
 [0x163F]={\
  direction=\"l\",\
 },\
 [0x1640]={\
  direction=\"l\",\
 },\
 [0x1641]={\
  direction=\"l\",\
 },\
 [0x1642]={\
  direction=\"l\",\
 },\
 [0x1643]={\
  direction=\"l\",\
 },\
 [0x1644]={\
  direction=\"l\",\
 },\
 [0x1645]={\
  direction=\"l\",\
 },\
 [0x1646]={\
  direction=\"l\",\
 },\
 [0x1647]={\
  direction=\"l\",\
 },\
 [0x1648]={\
  direction=\"l\",\
 },\
 [0x1649]={\
  direction=\"l\",\
 },\
 [0x164A]={\
  direction=\"l\",\
 },\
 [0x164B]={\
  direction=\"l\",\
 },\
 [0x164C]={\
  direction=\"l\",\
 },\
 [0x164D]={\
  direction=\"l\",\
 },\
 [0x164E]={\
  direction=\"l\",\
 },\
 [0x164F]={\
  direction=\"l\",\
 },\
 [0x1650]={\
  direction=\"l\",\
 },\
 [0x1651]={\
  direction=\"l\",\
 },\
 [0x1652]={\
  direction=\"l\",\
 },\
 [0x1653]={\
  direction=\"l\",\
 },\
 [0x1654]={\
  direction=\"l\",\
 },\
 [0x1655]={\
  direction=\"l\",\
 },\
 [0x1656]={\
  direction=\"l\",\
 },\
 [0x1657]={\
  direction=\"l\",\
 },\
 [0x1658]={\
  direction=\"l\",\
 },\
 [0x1659]={\
  direction=\"l\",\
 },\
 [0x165A]={\
  direction=\"l\",\
 },\
 [0x165B]={\
  direction=\"l\",\
 },\
 [0x165C]={\
  direction=\"l\",\
 },\
 [0x165D]={\
  direction=\"l\",\
 },\
 [0x165E]={\
  direction=\"l\",\
 },\
 [0x165F]={\
  direction=\"l\",\
 },\
 [0x1660]={\
  direction=\"l\",\
 },\
 [0x1661]={\
  direction=\"l\",\
 },\
 [0x1662]={\
  direction=\"l\",\
 },\
 [0x1663]={\
  direction=\"l\",\
 },\
 [0x1664]={\
  direction=\"l\",\
 },\
 [0x1665]={\
  direction=\"l\",\
 },\
 [0x1666]={\
  direction=\"l\",\
 },\
 [0x1667]={\
  direction=\"l\",\
 },\
 [0x1668]={\
  direction=\"l\",\
 },\
 [0x1669]={\
  direction=\"l\",\
 },\
 [0x166A]={\
  direction=\"l\",\
 },\
 [0x166B]={\
  direction=\"l\",\
 },\
 [0x166C]={\
  direction=\"l\",\
 },\
 [0x166D]={\
  direction=\"l\",\
 },\
 [0x166E]={\
  direction=\"l\",\
 },\
 [0x166F]={\
  direction=\"l\",\
 },\
 [0x1670]={\
  direction=\"l\",\
 },\
 [0x1671]={\
  direction=\"l\",\
 },\
 [0x1672]={\
  direction=\"l\",\
 },\
 [0x1673]={\
  direction=\"l\",\
 },\
 [0x1674]={\
  direction=\"l\",\
 },\
 [0x1675]={\
  direction=\"l\",\
 },\
 [0x1676]={\
  direction=\"l\",\
 },\
 [0x1677]={\
  direction=\"l\",\
 },\
 [0x1678]={\
  direction=\"l\",\
 },\
 [0x1679]={\
  direction=\"l\",\
 },\
 [0x167A]={\
  direction=\"l\",\
 },\
 [0x167B]={\
  direction=\"l\",\
 },\
 [0x167C]={\
  direction=\"l\",\
 },\
 [0x167D]={\
  direction=\"l\",\
 },\
 [0x167E]={\
  direction=\"l\",\
 },\
 [0x167F]={\
  direction=\"l\",\
 },\
 [0x1680]={\
  direction=\"ws\",\
 },\
 [0x1681]={\
  direction=\"l\",\
 },\
 [0x1682]={\
  direction=\"l\",\
 },\
 [0x1683]={\
  direction=\"l\",\
 },\
 [0x1684]={\
  direction=\"l\",\
 },\
 [0x1685]={\
  direction=\"l\",\
 },\
 [0x1686]={\
  direction=\"l\",\
 },\
 [0x1687]={\
  direction=\"l\",\
 },\
 [0x1688]={\
  direction=\"l\",\
 },\
 [0x1689]={\
  direction=\"l\",\
 },\
 [0x168A]={\
  direction=\"l\",\
 },\
 [0x168B]={\
  direction=\"l\",\
 },\
 [0x168C]={\
  direction=\"l\",\
 },\
 [0x168D]={\
  direction=\"l\",\
 },\
 [0x168E]={\
  direction=\"l\",\
 },\
 [0x168F]={\
  direction=\"l\",\
 },\
 [0x1690]={\
  direction=\"l\",\
 },\
 [0x1691]={\
  direction=\"l\",\
 },\
 [0x1692]={\
  direction=\"l\",\
 },\
 [0x1693]={\
  direction=\"l\",\
 },\
 [0x1694]={\
  direction=\"l\",\
 },\
 [0x1695]={\
  direction=\"l\",\
 },\
 [0x1696]={\
  direction=\"l\",\
 },\
 [0x1697]={\
  direction=\"l\",\
 },\
 [0x1698]={\
  direction=\"l\",\
 },\
 [0x1699]={\
  direction=\"l\",\
 },\
 [0x169A]={\
  direction=\"l\",\
 },\
 [0x169B]={\
  direction=\"on\",\
  mirror=0x169C,\
 },\
 [0x169C]={\
  direction=\"on\",\
  mirror=0x169B,\
 },\
 [0x16A0]={\
  direction=\"l\",\
 },\
 [0x16A1]={\
  direction=\"l\",\
 },\
 [0x16A2]={\
  direction=\"l\",\
 },\
 [0x16A3]={\
  direction=\"l\",\
 },\
 [0x16A4]={\
  direction=\"l\",\
 },\
 [0x16A5]={\
  direction=\"l\",\
 },\
 [0x16A6]={\
  direction=\"l\",\
 },\
 [0x16A7]={\
  direction=\"l\",\
 },\
 [0x16A8]={\
  direction=\"l\",\
 },\
 [0x16A9]={\
  direction=\"l\",\
 },\
 [0x16AA]={\
  direction=\"l\",\
 },\
 [0x16AB]={\
  direction=\"l\",\
 },\
 [0x16AC]={\
  direction=\"l\",\
 },\
 [0x16AD]={\
  direction=\"l\",\
 },\
 [0x16AE]={\
  direction=\"l\",\
 },\
 [0x16AF]={\
  direction=\"l\",\
 },\
 [0x16B0]={\
  direction=\"l\",\
 },\
 [0x16B1]={\
  direction=\"l\",\
 },\
 [0x16B2]={\
  direction=\"l\",\
 },\
 [0x16B3]={\
  direction=\"l\",\
 },\
 [0x16B4]={\
  direction=\"l\",\
 },\
 [0x16B5]={\
  direction=\"l\",\
 },\
 [0x16B6]={\
  direction=\"l\",\
 },\
 [0x16B7]={\
  direction=\"l\",\
 },\
 [0x16B8]={\
  direction=\"l\",\
 },\
 [0x16B9]={\
  direction=\"l\",\
 },\
 [0x16BA]={\
  direction=\"l\",\
 },\
 [0x16BB]={\
  direction=\"l\",\
 },\
 [0x16BC]={\
  direction=\"l\",\
 },\
 [0x16BD]={\
  direction=\"l\",\
 },\
 [0x16BE]={\
  direction=\"l\",\
 },\
 [0x16BF]={\
  direction=\"l\",\
 },\
 [0x16C0]={\
  direction=\"l\",\
 },\
 [0x16C1]={\
  direction=\"l\",\
 },\
 [0x16C2]={\
  direction=\"l\",\
 },\
 [0x16C3]={\
  direction=\"l\",\
 },\
 [0x16C4]={\
  direction=\"l\",\
 },\
 [0x16C5]={\
  direction=\"l\",\
 },\
 [0x16C6]={\
  direction=\"l\",\
 },\
 [0x16C7]={\
  direction=\"l\",\
 },\
 [0x16C8]={\
  direction=\"l\",\
 },\
 [0x16C9]={\
  direction=\"l\",\
 },\
 [0x16CA]={\
  direction=\"l\",\
 },\
 [0x16CB]={\
  direction=\"l\",\
 },\
 [0x16CC]={\
  direction=\"l\",\
 },\
 [0x16CD]={\
  direction=\"l\",\
 },\
 [0x16CE]={\
  direction=\"l\",\
 },\
 [0x16CF]={\
  direction=\"l\",\
 },\
 [0x16D0]={\
  direction=\"l\",\
 },\
 [0x16D1]={\
  direction=\"l\",\
 },\
 [0x16D2]={\
  direction=\"l\",\
 },\
 [0x16D3]={\
  direction=\"l\",\
 },\
 [0x16D4]={\
  direction=\"l\",\
 },\
 [0x16D5]={\
  direction=\"l\",\
 },\
 [0x16D6]={\
  direction=\"l\",\
 },\
 [0x16D7]={\
  direction=\"l\",\
 },\
 [0x16D8]={\
  direction=\"l\",\
 },\
 [0x16D9]={\
  direction=\"l\",\
 },\
 [0x16DA]={\
  direction=\"l\",\
 },\
 [0x16DB]={\
  direction=\"l\",\
 },\
 [0x16DC]={\
  direction=\"l\",\
 },\
 [0x16DD]={\
  direction=\"l\",\
 },\
 [0x16DE]={\
  direction=\"l\",\
 },\
 [0x16DF]={\
  direction=\"l\",\
 },\
 [0x16E0]={\
  direction=\"l\",\
 },\
 [0x16E1]={\
  direction=\"l\",\
 },\
 [0x16E2]={\
  direction=\"l\",\
 },\
 [0x16E3]={\
  direction=\"l\",\
 },\
 [0x16E4]={\
  direction=\"l\",\
 },\
 [0x16E5]={\
  direction=\"l\",\
 },\
 [0x16E6]={\
  direction=\"l\",\
 },\
 [0x16E7]={\
  direction=\"l\",\
 },\
 [0x16E8]={\
  direction=\"l\",\
 },\
 [0x16E9]={\
  direction=\"l\",\
 },\
 [0x16EA]={\
  direction=\"l\",\
 },\
 [0x16EB]={\
  direction=\"l\",\
 },\
 [0x16EC]={\
  direction=\"l\",\
 },\
 [0x16ED]={\
  direction=\"l\",\
 },\
 [0x16EE]={\
  direction=\"l\",\
 },\
 [0x16EF]={\
  direction=\"l\",\
 },\
 [0x16F0]={\
  direction=\"l\",\
 },\
 [0x1700]={\
  direction=\"l\",\
 },\
 [0x1701]={\
  direction=\"l\",\
 },\
 [0x1702]={\
  direction=\"l\",\
 },\
 [0x1703]={\
  direction=\"l\",\
 },\
 [0x1704]={\
  direction=\"l\",\
 },\
 [0x1705]={\
  direction=\"l\",\
 },\
 [0x1706]={\
  direction=\"l\",\
 },\
 [0x1707]={\
  direction=\"l\",\
 },\
 [0x1708]={\
  direction=\"l\",\
 },\
 [0x1709]={\
  direction=\"l\",\
 },\
 [0x170A]={\
  direction=\"l\",\
 },\
 [0x170B]={\
  direction=\"l\",\
 },\
 [0x170C]={\
  direction=\"l\",\
 },\
 [0x170E]={\
  direction=\"l\",\
 },\
 [0x170F]={\
  direction=\"l\",\
 },\
 [0x1710]={\
  direction=\"l\",\
 },\
 [0x1711]={\
  direction=\"l\",\
 },\
 [0x1712]={\
  direction=\"nsm\",\
 },\
 [0x1713]={\
  direction=\"nsm\",\
 },\
 [0x1714]={\
  direction=\"nsm\",\
 },\
 [0x1720]={\
  direction=\"l\",\
 },\
 [0x1721]={\
  direction=\"l\",\
 },\
 [0x1722]={\
  direction=\"l\",\
 },\
 [0x1723]={\
  direction=\"l\",\
 },\
 [0x1724]={\
  direction=\"l\",\
 },\
 [0x1725]={\
  direction=\"l\",\
 },\
 [0x1726]={\
  direction=\"l\",\
 },\
 [0x1727]={\
  direction=\"l\",\
 },\
 [0x1728]={\
  direction=\"l\",\
 },\
 [0x1729]={\
  direction=\"l\",\
 },\
 [0x172A]={\
  direction=\"l\",\
 },\
 [0x172B]={\
  direction=\"l\",\
 },\
 [0x172C]={\
  direction=\"l\",\
 },\
 [0x172D]={\
  direction=\"l\",\
 },\
 [0x172E]={\
  direction=\"l\",\
 },\
 [0x172F]={\
  direction=\"l\",\
 },\
 [0x1730]={\
  direction=\"l\",\
 },\
 [0x1731]={\
  direction=\"l\",\
 },\
 [0x1732]={\
  direction=\"nsm\",\
 },\
 [0x1733]={\
  direction=\"nsm\",\
 },\
 [0x1734]={\
  direction=\"nsm\",\
 },\
 [0x1735]={\
  direction=\"l\",\
 },\
 [0x1736]={\
  direction=\"l\",\
 },\
 [0x1740]={\
  direction=\"l\",\
 },\
 [0x1741]={\
  direction=\"l\",\
 },\
 [0x1742]={\
  direction=\"l\",\
 },\
 [0x1743]={\
  direction=\"l\",\
 },\
 [0x1744]={\
  direction=\"l\",\
 },\
 [0x1745]={\
  direction=\"l\",\
 },\
 [0x1746]={\
  direction=\"l\",\
 },\
 [0x1747]={\
  direction=\"l\",\
 },\
 [0x1748]={\
  direction=\"l\",\
 },\
 [0x1749]={\
  direction=\"l\",\
 },\
 [0x174A]={\
  direction=\"l\",\
 },\
 [0x174B]={\
  direction=\"l\",\
 },\
 [0x174C]={\
  direction=\"l\",\
 },\
 [0x174D]={\
  direction=\"l\",\
 },\
 [0x174E]={\
  direction=\"l\",\
 },\
 [0x174F]={\
  direction=\"l\",\
 },\
 [0x1750]={\
  direction=\"l\",\
 },\
 [0x1751]={\
  direction=\"l\",\
 },\
 [0x1752]={\
  direction=\"nsm\",\
 },\
 [0x1753]={\
  direction=\"nsm\",\
 },\
 [0x1760]={\
  direction=\"l\",\
 },\
 [0x1761]={\
  direction=\"l\",\
 },\
 [0x1762]={\
  direction=\"l\",\
 },\
 [0x1763]={\
  direction=\"l\",\
 },\
 [0x1764]={\
  direction=\"l\",\
 },\
 [0x1765]={\
  direction=\"l\",\
 },\
 [0x1766]={\
  direction=\"l\",\
 },\
 [0x1767]={\
  direction=\"l\",\
 },\
 [0x1768]={\
  direction=\"l\",\
 },\
 [0x1769]={\
  direction=\"l\",\
 },\
 [0x176A]={\
  direction=\"l\",\
 },\
 [0x176B]={\
  direction=\"l\",\
 },\
 [0x176C]={\
  direction=\"l\",\
 },\
 [0x176E]={\
  direction=\"l\",\
 },\
 [0x176F]={\
  direction=\"l\",\
 },\
 [0x1770]={\
  direction=\"l\",\
 },\
 [0x1772]={\
  direction=\"nsm\",\
 },\
 [0x1773]={\
  direction=\"nsm\",\
 },\
 [0x1780]={\
  direction=\"l\",\
 },\
 [0x1781]={\
  direction=\"l\",\
 },\
 [0x1782]={\
  direction=\"l\",\
 },\
 [0x1783]={\
  direction=\"l\",\
 },\
 [0x1784]={\
  direction=\"l\",\
 },\
 [0x1785]={\
  direction=\"l\",\
 },\
 [0x1786]={\
  direction=\"l\",\
 },\
 [0x1787]={\
  direction=\"l\",\
 },\
 [0x1788]={\
  direction=\"l\",\
 },\
 [0x1789]={\
  direction=\"l\",\
 },\
 [0x178A]={\
  direction=\"l\",\
 },\
 [0x178B]={\
  direction=\"l\",\
 },\
 [0x178C]={\
  direction=\"l\",\
 },\
 [0x178D]={\
  direction=\"l\",\
 },\
 [0x178E]={\
  direction=\"l\",\
 },\
 [0x178F]={\
  direction=\"l\",\
 },\
 [0x1790]={\
  direction=\"l\",\
 },\
 [0x1791]={\
  direction=\"l\",\
 },\
 [0x1792]={\
  direction=\"l\",\
 },\
 [0x1793]={\
  direction=\"l\",\
 },\
 [0x1794]={\
  direction=\"l\",\
 },\
 [0x1795]={\
  direction=\"l\",\
 },\
 [0x1796]={\
  direction=\"l\",\
 },\
 [0x1797]={\
  direction=\"l\",\
 },\
 [0x1798]={\
  direction=\"l\",\
 },\
 [0x1799]={\
  direction=\"l\",\
 },\
 [0x179A]={\
  direction=\"l\",\
 },\
 [0x179B]={\
  direction=\"l\",\
 },\
 [0x179C]={\
  direction=\"l\",\
 },\
 [0x179D]={\
  direction=\"l\",\
 },\
 [0x179E]={\
  direction=\"l\",\
 },\
 [0x179F]={\
  direction=\"l\",\
 },\
 [0x17A0]={\
  direction=\"l\",\
 },\
 [0x17A1]={\
  direction=\"l\",\
 },\
 [0x17A2]={\
  direction=\"l\",\
 },\
 [0x17A3]={\
  direction=\"l\",\
 },\
 [0x17A4]={\
  direction=\"l\",\
 },\
 [0x17A5]={\
  direction=\"l\",\
 },\
 [0x17A6]={\
  direction=\"l\",\
 },\
 [0x17A7]={\
  direction=\"l\",\
 },\
 [0x17A8]={\
  direction=\"l\",\
 },\
 [0x17A9]={\
  direction=\"l\",\
 },\
 [0x17AA]={\
  direction=\"l\",\
 },\
 [0x17AB]={\
  direction=\"l\",\
 },\
 [0x17AC]={\
  direction=\"l\",\
 },\
 [0x17AD]={\
  direction=\"l\",\
 },\
 [0x17AE]={\
  direction=\"l\",\
 },\
 [0x17AF]={\
  direction=\"l\",\
 },\
 [0x17B0]={\
  direction=\"l\",\
 },\
 [0x17B1]={\
  direction=\"l\",\
 },\
 [0x17B2]={\
  direction=\"l\",\
 },\
 [0x17B3]={\
  direction=\"l\",\
 },\
 [0x17B4]={\
  direction=\"nsm\",\
 },\
 [0x17B5]={\
  direction=\"nsm\",\
 },\
 [0x17B6]={\
  direction=\"l\",\
 },\
 [0x17B7]={\
  direction=\"nsm\",\
 },\
 [0x17B8]={\
  direction=\"nsm\",\
 },\
 [0x17B9]={\
  direction=\"nsm\",\
 },\
 [0x17BA]={\
  direction=\"nsm\",\
 },\
 [0x17BB]={\
  direction=\"nsm\",\
 },\
 [0x17BC]={\
  direction=\"nsm\",\
 },\
 [0x17BD]={\
  direction=\"nsm\",\
 },\
 [0x17BE]={\
  direction=\"l\",\
 },\
 [0x17BF]={\
  direction=\"l\",\
 },\
 [0x17C0]={\
  direction=\"l\",\
 },\
 [0x17C1]={\
  direction=\"l\",\
 },\
 [0x17C2]={\
  direction=\"l\",\
 },\
 [0x17C3]={\
  direction=\"l\",\
 },\
 [0x17C4]={\
  direction=\"l\",\
 },\
 [0x17C5]={\
  direction=\"l\",\
 },\
 [0x17C6]={\
  direction=\"nsm\",\
 },\
 [0x17C7]={\
  direction=\"l\",\
 },\
 [0x17C8]={\
  direction=\"l\",\
 },\
 [0x17C9]={\
  direction=\"nsm\",\
 },\
 [0x17CA]={\
  direction=\"nsm\",\
 },\
 [0x17CB]={\
  direction=\"nsm\",\
 },\
 [0x17CC]={\
  direction=\"nsm\",\
 },\
 [0x17CD]={\
  direction=\"nsm\",\
 },\
 [0x17CE]={\
  direction=\"nsm\",\
 },\
 [0x17CF]={\
  direction=\"nsm\",\
 },\
 [0x17D0]={\
  direction=\"nsm\",\
 },\
 [0x17D1]={\
  direction=\"nsm\",\
 },\
 [0x17D2]={\
  direction=\"nsm\",\
 },\
 [0x17D3]={\
  direction=\"nsm\",\
 },\
 [0x17D4]={\
  direction=\"l\",\
 },\
 [0x17D5]={\
  direction=\"l\",\
 },\
 [0x17D6]={\
  direction=\"l\",\
 },\
 [0x17D7]={\
  direction=\"l\",\
 },\
 [0x17D8]={\
  direction=\"l\",\
 },\
 [0x17D9]={\
  direction=\"l\",\
 },\
 [0x17DA]={\
  direction=\"l\",\
 },\
 [0x17DB]={\
  direction=\"et\",\
 },\
 [0x17DC]={\
  direction=\"l\",\
 },\
 [0x17DD]={\
  direction=\"nsm\",\
 },\
 [0x17E0]={\
  direction=\"l\",\
 },\
 [0x17E1]={\
  direction=\"l\",\
 },\
 [0x17E2]={\
  direction=\"l\",\
 },\
 [0x17E3]={\
  direction=\"l\",\
 },\
 [0x17E4]={\
  direction=\"l\",\
 },\
 [0x17E5]={\
  direction=\"l\",\
 },\
 [0x17E6]={\
  direction=\"l\",\
 },\
 [0x17E7]={\
  direction=\"l\",\
 },\
 [0x17E8]={\
  direction=\"l\",\
 },\
 [0x17E9]={\
  direction=\"l\",\
 },\
 [0x17F0]={\
  direction=\"on\",\
 },\
 [0x17F1]={\
  direction=\"on\",\
 },\
 [0x17F2]={\
  direction=\"on\",\
 },\
 [0x17F3]={\
  direction=\"on\",\
 },\
 [0x17F4]={\
  direction=\"on\",\
 },\
 [0x17F5]={\
  direction=\"on\",\
 },\
 [0x17F6]={\
  direction=\"on\",\
 },\
 [0x17F7]={\
  direction=\"on\",\
 },\
 [0x17F8]={\
  direction=\"on\",\
 },\
 [0x17F9]={\
  direction=\"on\",\
 },\
 [0x1800]={\
  direction=\"on\",\
 },\
 [0x1801]={\
  direction=\"on\",\
 },\
 [0x1802]={\
  direction=\"on\",\
 },\
 [0x1803]={\
  direction=\"on\",\
 },\
 [0x1804]={\
  direction=\"on\",\
 },\
 [0x1805]={\
  direction=\"on\",\
 },\
 [0x1806]={\
  direction=\"on\",\
 },\
 [0x1807]={\
  direction=\"on\",\
 },\
 [0x1808]={\
  direction=\"on\",\
 },\
 [0x1809]={\
  direction=\"on\",\
 },\
 [0x180A]={\
  direction=\"on\",\
 },\
 [0x180B]={\
  direction=\"nsm\",\
 },\
 [0x180C]={\
  direction=\"nsm\",\
 },\
 [0x180D]={\
  direction=\"nsm\",\
 },\
 [0x180E]={\
  direction=\"ws\",\
 },\
 [0x1810]={\
  direction=\"l\",\
 },\
 [0x1811]={\
  direction=\"l\",\
 },\
 [0x1812]={\
  direction=\"l\",\
 },\
 [0x1813]={\
  direction=\"l\",\
 },\
 [0x1814]={\
  direction=\"l\",\
 },\
 [0x1815]={\
  direction=\"l\",\
 },\
 [0x1816]={\
  direction=\"l\",\
 },\
 [0x1817]={\
  direction=\"l\",\
 },\
 [0x1818]={\
  direction=\"l\",\
 },\
 [0x1819]={\
  direction=\"l\",\
 },\
 [0x1820]={\
  direction=\"l\",\
 },\
 [0x1821]={\
  direction=\"l\",\
 },\
 [0x1822]={\
  direction=\"l\",\
 },\
 [0x1823]={\
  direction=\"l\",\
 },\
 [0x1824]={\
  direction=\"l\",\
 },\
 [0x1825]={\
  direction=\"l\",\
 },\
 [0x1826]={\
  direction=\"l\",\
 },\
 [0x1827]={\
  direction=\"l\",\
 },\
 [0x1828]={\
  direction=\"l\",\
 },\
 [0x1829]={\
  direction=\"l\",\
 },\
 [0x182A]={\
  direction=\"l\",\
 },\
 [0x182B]={\
  direction=\"l\",\
 },\
 [0x182C]={\
  direction=\"l\",\
 },\
 [0x182D]={\
  direction=\"l\",\
 },\
 [0x182E]={\
  direction=\"l\",\
 },\
 [0x182F]={\
  direction=\"l\",\
 },\
 [0x1830]={\
  direction=\"l\",\
 },\
 [0x1831]={\
  direction=\"l\",\
 },\
 [0x1832]={\
  direction=\"l\",\
 },\
 [0x1833]={\
  direction=\"l\",\
 },\
 [0x1834]={\
  direction=\"l\",\
 },\
 [0x1835]={\
  direction=\"l\",\
 },\
 [0x1836]={\
  direction=\"l\",\
 },\
 [0x1837]={\
  direction=\"l\",\
 },\
 [0x1838]={\
  direction=\"l\",\
 },\
 [0x1839]={\
  direction=\"l\",\
 },\
 [0x183A]={\
  direction=\"l\",\
 },\
 [0x183B]={\
  direction=\"l\",\
 },\
 [0x183C]={\
  direction=\"l\",\
 },\
 [0x183D]={\
  direction=\"l\",\
 },\
 [0x183E]={\
  direction=\"l\",\
 },\
 [0x183F]={\
  direction=\"l\",\
 },\
 [0x1840]={\
  direction=\"l\",\
 },\
 [0x1841]={\
  direction=\"l\",\
 },\
 [0x1842]={\
  direction=\"l\",\
 },\
 [0x1843]={\
  direction=\"l\",\
 },\
 [0x1844]={\
  direction=\"l\",\
 },\
 [0x1845]={\
  direction=\"l\",\
 },\
 [0x1846]={\
  direction=\"l\",\
 },\
 [0x1847]={\
  direction=\"l\",\
 },\
 [0x1848]={\
  direction=\"l\",\
 },\
 [0x1849]={\
  direction=\"l\",\
 },\
 [0x184A]={\
  direction=\"l\",\
 },\
 [0x184B]={\
  direction=\"l\",\
 },\
 [0x184C]={\
  direction=\"l\",\
 },\
 [0x184D]={\
  direction=\"l\",\
 },\
 [0x184E]={\
  direction=\"l\",\
 },\
 [0x184F]={\
  direction=\"l\",\
 },\
 [0x1850]={\
  direction=\"l\",\
 },\
 [0x1851]={\
  direction=\"l\",\
 },\
 [0x1852]={\
  direction=\"l\",\
 },\
 [0x1853]={\
  direction=\"l\",\
 },\
 [0x1854]={\
  direction=\"l\",\
 },\
 [0x1855]={\
  direction=\"l\",\
 },\
 [0x1856]={\
  direction=\"l\",\
 },\
 [0x1857]={\
  direction=\"l\",\
 },\
 [0x1858]={\
  direction=\"l\",\
 },\
 [0x1859]={\
  direction=\"l\",\
 },\
 [0x185A]={\
  direction=\"l\",\
 },\
 [0x185B]={\
  direction=\"l\",\
 },\
 [0x185C]={\
  direction=\"l\",\
 },\
 [0x185D]={\
  direction=\"l\",\
 },\
 [0x185E]={\
  direction=\"l\",\
 },\
 [0x185F]={\
  direction=\"l\",\
 },\
 [0x1860]={\
  direction=\"l\",\
 },\
 [0x1861]={\
  direction=\"l\",\
 },\
 [0x1862]={\
  direction=\"l\",\
 },\
 [0x1863]={\
  direction=\"l\",\
 },\
 [0x1864]={\
  direction=\"l\",\
 },\
 [0x1865]={\
  direction=\"l\",\
 },\
 [0x1866]={\
  direction=\"l\",\
 },\
 [0x1867]={\
  direction=\"l\",\
 },\
 [0x1868]={\
  direction=\"l\",\
 },\
 [0x1869]={\
  direction=\"l\",\
 },\
 [0x186A]={\
  direction=\"l\",\
 },\
 [0x186B]={\
  direction=\"l\",\
 },\
 [0x186C]={\
  direction=\"l\",\
 },\
 [0x186D]={\
  direction=\"l\",\
 },\
 [0x186E]={\
  direction=\"l\",\
 },\
 [0x186F]={\
  direction=\"l\",\
 },\
 [0x1870]={\
  direction=\"l\",\
 },\
 [0x1871]={\
  direction=\"l\",\
 },\
 [0x1872]={\
  direction=\"l\",\
 },\
 [0x1873]={\
  direction=\"l\",\
 },\
 [0x1874]={\
  direction=\"l\",\
 },\
 [0x1875]={\
  direction=\"l\",\
 },\
 [0x1876]={\
  direction=\"l\",\
 },\
 [0x1877]={\
  direction=\"l\",\
 },\
 [0x1880]={\
  direction=\"l\",\
 },\
 [0x1881]={\
  direction=\"l\",\
 },\
 [0x1882]={\
  direction=\"l\",\
 },\
 [0x1883]={\
  direction=\"l\",\
 },\
 [0x1884]={\
  direction=\"l\",\
 },\
 [0x1885]={\
  direction=\"l\",\
 },\
 [0x1886]={\
  direction=\"l\",\
 },\
 [0x1887]={\
  direction=\"l\",\
 },\
 [0x1888]={\
  direction=\"l\",\
 },\
 [0x1889]={\
  direction=\"l\",\
 },\
 [0x188A]={\
  direction=\"l\",\
 },\
 [0x188B]={\
  direction=\"l\",\
 },\
 [0x188C]={\
  direction=\"l\",\
 },\
 [0x188D]={\
  direction=\"l\",\
 },\
 [0x188E]={\
  direction=\"l\",\
 },\
 [0x188F]={\
  direction=\"l\",\
 },\
 [0x1890]={\
  direction=\"l\",\
 },\
 [0x1891]={\
  direction=\"l\",\
 },\
 [0x1892]={\
  direction=\"l\",\
 },\
 [0x1893]={\
  direction=\"l\",\
 },\
 [0x1894]={\
  direction=\"l\",\
 },\
 [0x1895]={\
  direction=\"l\",\
 },\
 [0x1896]={\
  direction=\"l\",\
 },\
 [0x1897]={\
  direction=\"l\",\
 },\
 [0x1898]={\
  direction=\"l\",\
 },\
 [0x1899]={\
  direction=\"l\",\
 },\
 [0x189A]={\
  direction=\"l\",\
 },\
 [0x189B]={\
  direction=\"l\",\
 },\
 [0x189C]={\
  direction=\"l\",\
 },\
 [0x189D]={\
  direction=\"l\",\
 },\
 [0x189E]={\
  direction=\"l\",\
 },\
 [0x189F]={\
  direction=\"l\",\
 },\
 [0x18A0]={\
  direction=\"l\",\
 },\
 [0x18A1]={\
  direction=\"l\",\
 },\
 [0x18A2]={\
  direction=\"l\",\
 },\
 [0x18A3]={\
  direction=\"l\",\
 },\
 [0x18A4]={\
  direction=\"l\",\
 },\
 [0x18A5]={\
  direction=\"l\",\
 },\
 [0x18A6]={\
  direction=\"l\",\
 },\
 [0x18A7]={\
  direction=\"l\",\
 },\
 [0x18A8]={\
  direction=\"l\",\
 },\
 [0x18A9]={\
  direction=\"nsm\",\
 },\
 [0x18AA]={\
  direction=\"l\",\
 },\
 [0x18B0]={\
  direction=\"l\",\
 },\
 [0x18B1]={\
  direction=\"l\",\
 },\
 [0x18B2]={\
  direction=\"l\",\
 },\
 [0x18B3]={\
  direction=\"l\",\
 },\
 [0x18B4]={\
  direction=\"l\",\
 },\
 [0x18B5]={\
  direction=\"l\",\
 },\
 [0x18B6]={\
  direction=\"l\",\
 },\
 [0x18B7]={\
  direction=\"l\",\
 },\
 [0x18B8]={\
  direction=\"l\",\
 },\
 [0x18B9]={\
  direction=\"l\",\
 },\
 [0x18BA]={\
  direction=\"l\",\
 },\
 [0x18BB]={\
  direction=\"l\",\
 },\
 [0x18BC]={\
  direction=\"l\",\
 },\
 [0x18BD]={\
  direction=\"l\",\
 },\
 [0x18BE]={\
  direction=\"l\",\
 },\
 [0x18BF]={\
  direction=\"l\",\
 },\
 [0x18C0]={\
  direction=\"l\",\
 },\
 [0x18C1]={\
  direction=\"l\",\
 },\
 [0x18C2]={\
  direction=\"l\",\
 },\
 [0x18C3]={\
  direction=\"l\",\
 },\
 [0x18C4]={\
  direction=\"l\",\
 },\
 [0x18C5]={\
  direction=\"l\",\
 },\
 [0x18C6]={\
  direction=\"l\",\
 },\
 [0x18C7]={\
  direction=\"l\",\
 },\
 [0x18C8]={\
  direction=\"l\",\
 },\
 [0x18C9]={\
  direction=\"l\",\
 },\
 [0x18CA]={\
  direction=\"l\",\
 },\
 [0x18CB]={\
  direction=\"l\",\
 },\
 [0x18CC]={\
  direction=\"l\",\
 },\
 [0x18CD]={\
  direction=\"l\",\
 },\
 [0x18CE]={\
  direction=\"l\",\
 },\
 [0x18CF]={\
  direction=\"l\",\
 },\
 [0x18D0]={\
  direction=\"l\",\
 },\
 [0x18D1]={\
  direction=\"l\",\
 },\
 [0x18D2]={\
  direction=\"l\",\
 },\
 [0x18D3]={\
  direction=\"l\",\
 },\
 [0x18D4]={\
  direction=\"l\",\
 },\
 [0x18D5]={\
  direction=\"l\",\
 },\
 [0x18D6]={\
  direction=\"l\",\
 },\
 [0x18D7]={\
  direction=\"l\",\
 },\
 [0x18D8]={\
  direction=\"l\",\
 },\
 [0x18D9]={\
  direction=\"l\",\
 },\
 [0x18DA]={\
  direction=\"l\",\
 },\
 [0x18DB]={\
  direction=\"l\",\
 },\
 [0x18DC]={\
  direction=\"l\",\
 },\
 [0x18DD]={\
  direction=\"l\",\
 },\
 [0x18DE]={\
  direction=\"l\",\
 },\
 [0x18DF]={\
  direction=\"l\",\
 },\
 [0x18E0]={\
  direction=\"l\",\
 },\
 [0x18E1]={\
  direction=\"l\",\
 },\
 [0x18E2]={\
  direction=\"l\",\
 },\
 [0x18E3]={\
  direction=\"l\",\
 },\
 [0x18E4]={\
  direction=\"l\",\
 },\
 [0x18E5]={\
  direction=\"l\",\
 },\
 [0x18E6]={\
  direction=\"l\",\
 },\
 [0x18E7]={\
  direction=\"l\",\
 },\
 [0x18E8]={\
  direction=\"l\",\
 },\
 [0x18E9]={\
  direction=\"l\",\
 },\
 [0x18EA]={\
  direction=\"l\",\
 },\
 [0x18EB]={\
  direction=\"l\",\
 },\
 [0x18EC]={\
  direction=\"l\",\
 },\
 [0x18ED]={\
  direction=\"l\",\
 },\
 [0x18EE]={\
  direction=\"l\",\
 },\
 [0x18EF]={\
  direction=\"l\",\
 },\
 [0x18F0]={\
  direction=\"l\",\
 },\
 [0x18F1]={\
  direction=\"l\",\
 },\
 [0x18F2]={\
  direction=\"l\",\
 },\
 [0x18F3]={\
  direction=\"l\",\
 },\
 [0x18F4]={\
  direction=\"l\",\
 },\
 [0x18F5]={\
  direction=\"l\",\
 },\
 [0x1900]={\
  direction=\"l\",\
 },\
 [0x1901]={\
  direction=\"l\",\
 },\
 [0x1902]={\
  direction=\"l\",\
 },\
 [0x1903]={\
  direction=\"l\",\
 },\
 [0x1904]={\
  direction=\"l\",\
 },\
 [0x1905]={\
  direction=\"l\",\
 },\
 [0x1906]={\
  direction=\"l\",\
 },\
 [0x1907]={\
  direction=\"l\",\
 },\
 [0x1908]={\
  direction=\"l\",\
 },\
 [0x1909]={\
  direction=\"l\",\
 },\
 [0x190A]={\
  direction=\"l\",\
 },\
 [0x190B]={\
  direction=\"l\",\
 },\
 [0x190C]={\
  direction=\"l\",\
 },\
 [0x190D]={\
  direction=\"l\",\
 },\
 [0x190E]={\
  direction=\"l\",\
 },\
 [0x190F]={\
  direction=\"l\",\
 },\
 [0x1910]={\
  direction=\"l\",\
 },\
 [0x1911]={\
  direction=\"l\",\
 },\
 [0x1912]={\
  direction=\"l\",\
 },\
 [0x1913]={\
  direction=\"l\",\
 },\
 [0x1914]={\
  direction=\"l\",\
 },\
 [0x1915]={\
  direction=\"l\",\
 },\
 [0x1916]={\
  direction=\"l\",\
 },\
 [0x1917]={\
  direction=\"l\",\
 },\
 [0x1918]={\
  direction=\"l\",\
 },\
 [0x1919]={\
  direction=\"l\",\
 },\
 [0x191A]={\
  direction=\"l\",\
 },\
 [0x191B]={\
  direction=\"l\",\
 },\
 [0x191C]={\
  direction=\"l\",\
 },\
 [0x1920]={\
  direction=\"nsm\",\
 },\
 [0x1921]={\
  direction=\"nsm\",\
 },\
 [0x1922]={\
  direction=\"nsm\",\
 },\
 [0x1923]={\
  direction=\"l\",\
 },\
 [0x1924]={\
  direction=\"l\",\
 },\
 [0x1925]={\
  direction=\"l\",\
 },\
 [0x1926]={\
  direction=\"l\",\
 },\
 [0x1927]={\
  direction=\"nsm\",\
 },\
 [0x1928]={\
  direction=\"nsm\",\
 },\
 [0x1929]={\
  direction=\"l\",\
 },\
 [0x192A]={\
  direction=\"l\",\
 },\
 [0x192B]={\
  direction=\"l\",\
 },\
 [0x1930]={\
  direction=\"l\",\
 },\
 [0x1931]={\
  direction=\"l\",\
 },\
 [0x1932]={\
  direction=\"nsm\",\
 },\
 [0x1933]={\
  direction=\"l\",\
 },\
 [0x1934]={\
  direction=\"l\",\
 },\
 [0x1935]={\
  direction=\"l\",\
 },\
 [0x1936]={\
  direction=\"l\",\
 },\
 [0x1937]={\
  direction=\"l\",\
 },\
 [0x1938]={\
  direction=\"l\",\
 },\
 [0x1939]={\
  direction=\"nsm\",\
 },\
 [0x193A]={\
  direction=\"nsm\",\
 },\
 [0x193B]={\
  direction=\"nsm\",\
 },\
 [0x1940]={\
  direction=\"on\",\
 },\
 [0x1944]={\
  direction=\"on\",\
 },\
 [0x1945]={\
  direction=\"on\",\
 },\
 [0x1946]={\
  direction=\"l\",\
 },\
 [0x1947]={\
  direction=\"l\",\
 },\
 [0x1948]={\
  direction=\"l\",\
 },\
 [0x1949]={\
  direction=\"l\",\
 },\
 [0x194A]={\
  direction=\"l\",\
 },\
 [0x194B]={\
  direction=\"l\",\
 },\
 [0x194C]={\
  direction=\"l\",\
 },\
 [0x194D]={\
  direction=\"l\",\
 },\
 [0x194E]={\
  direction=\"l\",\
 },\
 [0x194F]={\
  direction=\"l\",\
 },\
 [0x1950]={\
  direction=\"l\",\
 },\
 [0x1951]={\
  direction=\"l\",\
 },\
 [0x1952]={\
  direction=\"l\",\
 },\
 [0x1953]={\
  direction=\"l\",\
 },\
 [0x1954]={\
  direction=\"l\",\
 },\
 [0x1955]={\
  direction=\"l\",\
 },\
 [0x1956]={\
  direction=\"l\",\
 },\
 [0x1957]={\
  direction=\"l\",\
 },\
 [0x1958]={\
  direction=\"l\",\
 },\
 [0x1959]={\
  direction=\"l\",\
 },\
 [0x195A]={\
  direction=\"l\",\
 },\
 [0x195B]={\
  direction=\"l\",\
 },\
 [0x195C]={\
  direction=\"l\",\
 },\
 [0x195D]={\
  direction=\"l\",\
 },\
 [0x195E]={\
  direction=\"l\",\
 },\
 [0x195F]={\
  direction=\"l\",\
 },\
 [0x1960]={\
  direction=\"l\",\
 },\
 [0x1961]={\
  direction=\"l\",\
 },\
 [0x1962]={\
  direction=\"l\",\
 },\
 [0x1963]={\
  direction=\"l\",\
 },\
 [0x1964]={\
  direction=\"l\",\
 },\
 [0x1965]={\
  direction=\"l\",\
 },\
 [0x1966]={\
  direction=\"l\",\
 },\
 [0x1967]={\
  direction=\"l\",\
 },\
 [0x1968]={\
  direction=\"l\",\
 },\
 [0x1969]={\
  direction=\"l\",\
 },\
 [0x196A]={\
  direction=\"l\",\
 },\
 [0x196B]={\
  direction=\"l\",\
 },\
 [0x196C]={\
  direction=\"l\",\
 },\
 [0x196D]={\
  direction=\"l\",\
 },\
 [0x1970]={\
  direction=\"l\",\
 },\
 [0x1971]={\
  direction=\"l\",\
 },\
 [0x1972]={\
  direction=\"l\",\
 },\
 [0x1973]={\
  direction=\"l\",\
 },\
 [0x1974]={\
  direction=\"l\",\
 },\
 [0x1980]={\
  direction=\"l\",\
 },\
 [0x1981]={\
  direction=\"l\",\
 },\
 [0x1982]={\
  direction=\"l\",\
 },\
 [0x1983]={\
  direction=\"l\",\
 },\
 [0x1984]={\
  direction=\"l\",\
 },\
 [0x1985]={\
  direction=\"l\",\
 },\
 [0x1986]={\
  direction=\"l\",\
 },\
 [0x1987]={\
  direction=\"l\",\
 },\
 [0x1988]={\
  direction=\"l\",\
 },\
 [0x1989]={\
  direction=\"l\",\
 },\
 [0x198A]={\
  direction=\"l\",\
 },\
 [0x198B]={\
  direction=\"l\",\
 },\
 [0x198C]={\
  direction=\"l\",\
 },\
 [0x198D]={\
  direction=\"l\",\
 },\
 [0x198E]={\
  direction=\"l\",\
 },\
 [0x198F]={\
  direction=\"l\",\
 },\
 [0x1990]={\
  direction=\"l\",\
 },\
 [0x1991]={\
  direction=\"l\",\
 },\
 [0x1992]={\
  direction=\"l\",\
 },\
 [0x1993]={\
  direction=\"l\",\
 },\
 [0x1994]={\
  direction=\"l\",\
 },\
 [0x1995]={\
  direction=\"l\",\
 },\
 [0x1996]={\
  direction=\"l\",\
 },\
 [0x1997]={\
  direction=\"l\",\
 },\
 [0x1998]={\
  direction=\"l\",\
 },\
 [0x1999]={\
  direction=\"l\",\
 },\
 [0x199A]={\
  direction=\"l\",\
 },\
 [0x199B]={\
  direction=\"l\",\
 },\
 [0x199C]={\
  direction=\"l\",\
 },\
 [0x199D]={\
  direction=\"l\",\
 },\
 [0x199E]={\
  direction=\"l\",\
 },\
 [0x199F]={\
  direction=\"l\",\
 },\
 [0x19A0]={\
  direction=\"l\",\
 },\
 [0x19A1]={\
  direction=\"l\",\
 },\
 [0x19A2]={\
  direction=\"l\",\
 },\
 [0x19A3]={\
  direction=\"l\",\
 },\
 [0x19A4]={\
  direction=\"l\",\
 },\
 [0x19A5]={\
  direction=\"l\",\
 },\
 [0x19A6]={\
  direction=\"l\",\
 },\
 [0x19A7]={\
  direction=\"l\",\
 },\
 [0x19A8]={\
  direction=\"l\",\
 },\
 [0x19A9]={\
  direction=\"l\",\
 },\
 [0x19AA]={\
  direction=\"l\",\
 },\
 [0x19AB]={\
  direction=\"l\",\
 },\
 [0x19B0]={\
  direction=\"l\",\
 },\
 [0x19B1]={\
  direction=\"l\",\
 },\
 [0x19B2]={\
  direction=\"l\",\
 },\
 [0x19B3]={\
  direction=\"l\",\
 },\
 [0x19B4]={\
  direction=\"l\",\
 },\
 [0x19B5]={\
  direction=\"l\",\
 },\
 [0x19B6]={\
  direction=\"l\",\
 },\
 [0x19B7]={\
  direction=\"l\",\
 },\
 [0x19B8]={\
  direction=\"l\",\
 },\
 [0x19B9]={\
  direction=\"l\",\
 },\
 [0x19BA]={\
  direction=\"l\",\
 },\
 [0x19BB]={\
  direction=\"l\",\
 },\
 [0x19BC]={\
  direction=\"l\",\
 },\
 [0x19BD]={\
  direction=\"l\",\
 },\
 [0x19BE]={\
  direction=\"l\",\
 },\
 [0x19BF]={\
  direction=\"l\",\
 },\
 [0x19C0]={\
  direction=\"l\",\
 },\
 [0x19C1]={\
  direction=\"l\",\
 },\
 [0x19C2]={\
  direction=\"l\",\
 },\
 [0x19C3]={\
  direction=\"l\",\
 },\
 [0x19C4]={\
  direction=\"l\",\
 },\
 [0x19C5]={\
  direction=\"l\",\
 },\
 [0x19C6]={\
  direction=\"l\",\
 },\
 [0x19C7]={\
  direction=\"l\",\
 },\
 [0x19C8]={\
  direction=\"l\",\
 },\
 [0x19C9]={\
  direction=\"l\",\
 },\
 [0x19D0]={\
  direction=\"l\",\
 },\
 [0x19D1]={\
  direction=\"l\",\
 },\
 [0x19D2]={\
  direction=\"l\",\
 },\
 [0x19D3]={\
  direction=\"l\",\
 },\
 [0x19D4]={\
  direction=\"l\",\
 },\
 [0x19D5]={\
  direction=\"l\",\
 },\
 [0x19D6]={\
  direction=\"l\",\
 },\
 [0x19D7]={\
  direction=\"l\",\
 },\
 [0x19D8]={\
  direction=\"l\",\
 },\
 [0x19D9]={\
  direction=\"l\",\
 },\
 [0x19DA]={\
  direction=\"l\",\
 },\
 [0x19DE]={\
  direction=\"on\",\
 },\
 [0x19DF]={\
  direction=\"on\",\
 },\
 [0x19E0]={\
  direction=\"on\",\
 },\
 [0x19E1]={\
  direction=\"on\",\
 },\
 [0x19E2]={\
  direction=\"on\",\
 },\
 [0x19E3]={\
  direction=\"on\",\
 },\
 [0x19E4]={\
  direction=\"on\",\
 },\
 [0x19E5]={\
  direction=\"on\",\
 },\
 [0x19E6]={\
  direction=\"on\",\
 },\
 [0x19E7]={\
  direction=\"on\",\
 },\
 [0x19E8]={\
  direction=\"on\",\
 },\
 [0x19E9]={\
  direction=\"on\",\
 },\
 [0x19EA]={\
  direction=\"on\",\
 },\
 [0x19EB]={\
  direction=\"on\",\
 },\
 [0x19EC]={\
  direction=\"on\",\
 },\
 [0x19ED]={\
  direction=\"on\",\
 },\
 [0x19EE]={\
  direction=\"on\",\
 },\
 [0x19EF]={\
  direction=\"on\",\
 },\
 [0x19F0]={\
  direction=\"on\",\
 },\
 [0x19F1]={\
  direction=\"on\",\
 },\
 [0x19F2]={\
  direction=\"on\",\
 },\
 [0x19F3]={\
  direction=\"on\",\
 },\
 [0x19F4]={\
  direction=\"on\",\
 },\
 [0x19F5]={\
  direction=\"on\",\
 },\
 [0x19F6]={\
  direction=\"on\",\
 },\
 [0x19F7]={\
  direction=\"on\",\
 },\
 [0x19F8]={\
  direction=\"on\",\
 },\
 [0x19F9]={\
  direction=\"on\",\
 },\
 [0x19FA]={\
  direction=\"on\",\
 },\
 [0x19FB]={\
  direction=\"on\",\
 },\
 [0x19FC]={\
  direction=\"on\",\
 },\
 [0x19FD]={\
  direction=\"on\",\
 },\
 [0x19FE]={\
  direction=\"on\",\
 },\
 [0x19FF]={\
  direction=\"on\",\
 },\
 [0x1A00]={\
  direction=\"l\",\
 },\
 [0x1A01]={\
  direction=\"l\",\
 },\
 [0x1A02]={\
  direction=\"l\",\
 },\
 [0x1A03]={\
  direction=\"l\",\
 },\
 [0x1A04]={\
  direction=\"l\",\
 },\
 [0x1A05]={\
  direction=\"l\",\
 },\
 [0x1A06]={\
  direction=\"l\",\
 },\
 [0x1A07]={\
  direction=\"l\",\
 },\
 [0x1A08]={\
  direction=\"l\",\
 },\
 [0x1A09]={\
  direction=\"l\",\
 },\
 [0x1A0A]={\
  direction=\"l\",\
 },\
 [0x1A0B]={\
  direction=\"l\",\
 },\
 [0x1A0C]={\
  direction=\"l\",\
 },\
 [0x1A0D]={\
  direction=\"l\",\
 },\
 [0x1A0E]={\
  direction=\"l\",\
 },\
 [0x1A0F]={\
  direction=\"l\",\
 },\
 [0x1A10]={\
  direction=\"l\",\
 },\
 [0x1A11]={\
  direction=\"l\",\
 },\
 [0x1A12]={\
  direction=\"l\",\
 },\
 [0x1A13]={\
  direction=\"l\",\
 },\
 [0x1A14]={\
  direction=\"l\",\
 },\
 [0x1A15]={\
  direction=\"l\",\
 },\
 [0x1A16]={\
  direction=\"l\",\
 },\
 [0x1A17]={\
  direction=\"nsm\",\
 },\
 [0x1A18]={\
  direction=\"nsm\",\
 },\
 [0x1A19]={\
  direction=\"l\",\
 },\
 [0x1A1A]={\
  direction=\"l\",\
 },\
 [0x1A1B]={\
  direction=\"l\",\
 },\
 [0x1A1E]={\
  direction=\"l\",\
 },\
 [0x1A1F]={\
  direction=\"l\",\
 },\
 [0x1A20]={\
  direction=\"l\",\
 },\
 [0x1A21]={\
  direction=\"l\",\
 },\
 [0x1A22]={\
  direction=\"l\",\
 },\
 [0x1A23]={\
  direction=\"l\",\
 },\
 [0x1A24]={\
  direction=\"l\",\
 },\
 [0x1A25]={\
  direction=\"l\",\
 },\
 [0x1A26]={\
  direction=\"l\",\
 },\
 [0x1A27]={\
  direction=\"l\",\
 },\
 [0x1A28]={\
  direction=\"l\",\
 },\
 [0x1A29]={\
  direction=\"l\",\
 },\
 [0x1A2A]={\
  direction=\"l\",\
 },\
 [0x1A2B]={\
  direction=\"l\",\
 },\
 [0x1A2C]={\
  direction=\"l\",\
 },\
 [0x1A2D]={\
  direction=\"l\",\
 },\
 [0x1A2E]={\
  direction=\"l\",\
 },\
 [0x1A2F]={\
  direction=\"l\",\
 },\
 [0x1A30]={\
  direction=\"l\",\
 },\
 [0x1A31]={\
  direction=\"l\",\
 },\
 [0x1A32]={\
  direction=\"l\",\
 },\
 [0x1A33]={\
  direction=\"l\",\
 },\
 [0x1A34]={\
  direction=\"l\",\
 },\
 [0x1A35]={\
  direction=\"l\",\
 },\
 [0x1A36]={\
  direction=\"l\",\
 },\
 [0x1A37]={\
  direction=\"l\",\
 },\
 [0x1A38]={\
  direction=\"l\",\
 },\
 [0x1A39]={\
  direction=\"l\",\
 },\
 [0x1A3A]={\
  direction=\"l\",\
 },\
 [0x1A3B]={\
  direction=\"l\",\
 },\
 [0x1A3C]={\
  direction=\"l\",\
 },\
 [0x1A3D]={\
  direction=\"l\",\
 },\
 [0x1A3E]={\
  direction=\"l\",\
 },\
 [0x1A3F]={\
  direction=\"l\",\
 },\
 [0x1A40]={\
  direction=\"l\",\
 },\
 [0x1A41]={\
  direction=\"l\",\
 },\
 [0x1A42]={\
  direction=\"l\",\
 },\
 [0x1A43]={\
  direction=\"l\",\
 },\
 [0x1A44]={\
  direction=\"l\",\
 },\
 [0x1A45]={\
  direction=\"l\",\
 },\
 [0x1A46]={\
  direction=\"l\",\
 },\
 [0x1A47]={\
  direction=\"l\",\
 },\
 [0x1A48]={\
  direction=\"l\",\
 },\
 [0x1A49]={\
  direction=\"l\",\
 },\
 [0x1A4A]={\
  direction=\"l\",\
 },\
 [0x1A4B]={\
  direction=\"l\",\
 },\
 [0x1A4C]={\
  direction=\"l\",\
 },\
 [0x1A4D]={\
  direction=\"l\",\
 },\
 [0x1A4E]={\
  direction=\"l\",\
 },\
 [0x1A4F]={\
  direction=\"l\",\
 },\
 [0x1A50]={\
  direction=\"l\",\
 },\
 [0x1A51]={\
  direction=\"l\",\
 },\
 [0x1A52]={\
  direction=\"l\",\
 },\
 [0x1A53]={\
  direction=\"l\",\
 },\
 [0x1A54]={\
  direction=\"l\",\
 },\
 [0x1A55]={\
  direction=\"l\",\
 },\
 [0x1A56]={\
  direction=\"nsm\",\
 },\
 [0x1A57]={\
  direction=\"l\",\
 },\
 [0x1A58]={\
  direction=\"nsm\",\
 },\
 [0x1A59]={\
  direction=\"nsm\",\
 },\
 [0x1A5A]={\
  direction=\"nsm\",\
 },\
 [0x1A5B]={\
  direction=\"nsm\",\
 },\
 [0x1A5C]={\
  direction=\"nsm\",\
 },\
 [0x1A5D]={\
  direction=\"nsm\",\
 },\
 [0x1A5E]={\
  direction=\"nsm\",\
 },\
 [0x1A60]={\
  direction=\"nsm\",\
 },\
 [0x1A61]={\
  direction=\"l\",\
 },\
 [0x1A62]={\
  direction=\"nsm\",\
 },\
 [0x1A63]={\
  direction=\"l\",\
 },\
 [0x1A64]={\
  direction=\"l\",\
 },\
 [0x1A65]={\
  direction=\"nsm\",\
 },\
 [0x1A66]={\
  direction=\"nsm\",\
 },\
 [0x1A67]={\
  direction=\"nsm\",\
 },\
 [0x1A68]={\
  direction=\"nsm\",\
 },\
 [0x1A69]={\
  direction=\"nsm\",\
 },\
 [0x1A6A]={\
  direction=\"nsm\",\
 },\
 [0x1A6B]={\
  direction=\"nsm\",\
 },\
 [0x1A6C]={\
  direction=\"nsm\",\
 },\
 [0x1A6D]={\
  direction=\"l\",\
 },\
 [0x1A6E]={\
  direction=\"l\",\
 },\
 [0x1A6F]={\
  direction=\"l\",\
 },\
 [0x1A70]={\
  direction=\"l\",\
 },\
 [0x1A71]={\
  direction=\"l\",\
 },\
 [0x1A72]={\
  direction=\"l\",\
 },\
 [0x1A73]={\
  direction=\"nsm\",\
 },\
 [0x1A74]={\
  direction=\"nsm\",\
 },\
 [0x1A75]={\
  direction=\"nsm\",\
 },\
 [0x1A76]={\
  direction=\"nsm\",\
 },\
 [0x1A77]={\
  direction=\"nsm\",\
 },\
 [0x1A78]={\
  direction=\"nsm\",\
 },\
 [0x1A79]={\
  direction=\"nsm\",\
 },\
 [0x1A7A]={\
  direction=\"nsm\",\
 },\
 [0x1A7B]={\
  direction=\"nsm\",\
 },\
 [0x1A7C]={\
  direction=\"nsm\",\
 },\
 [0x1A7F]={\
  direction=\"nsm\",\
 },\
 [0x1A80]={\
  direction=\"l\",\
 },\
 [0x1A81]={\
  direction=\"l\",\
 },\
 [0x1A82]={\
  direction=\"l\",\
 },\
 [0x1A83]={\
  direction=\"l\",\
 },\
 [0x1A84]={\
  direction=\"l\",\
 },\
 [0x1A85]={\
  direction=\"l\",\
 },\
 [0x1A86]={\
  direction=\"l\",\
 },\
 [0x1A87]={\
  direction=\"l\",\
 },\
 [0x1A88]={\
  direction=\"l\",\
 },\
 [0x1A89]={\
  direction=\"l\",\
 },\
 [0x1A90]={\
  direction=\"l\",\
 },\
 [0x1A91]={\
  direction=\"l\",\
 },\
 [0x1A92]={\
  direction=\"l\",\
 },\
 [0x1A93]={\
  direction=\"l\",\
 },\
 [0x1A94]={\
  direction=\"l\",\
 },\
 [0x1A95]={\
  direction=\"l\",\
 },\
 [0x1A96]={\
  direction=\"l\",\
 },\
 [0x1A97]={\
  direction=\"l\",\
 },\
 [0x1A98]={\
  direction=\"l\",\
 },\
 [0x1A99]={\
  direction=\"l\",\
 },\
 [0x1AA0]={\
  direction=\"l\",\
 },\
 [0x1AA1]={\
  direction=\"l\",\
 },\
 [0x1AA2]={\
  direction=\"l\",\
 },\
 [0x1AA3]={\
  direction=\"l\",\
 },\
 [0x1AA4]={\
  direction=\"l\",\
 },\
 [0x1AA5]={\
  direction=\"l\",\
 },\
 [0x1AA6]={\
  direction=\"l\",\
 },\
 [0x1AA7]={\
  direction=\"l\",\
 },\
 [0x1AA8]={\
  direction=\"l\",\
 },\
 [0x1AA9]={\
  direction=\"l\",\
 },\
 [0x1AAA]={\
  direction=\"l\",\
 },\
 [0x1AAB]={\
  direction=\"l\",\
 },\
 [0x1AAC]={\
  direction=\"l\",\
 },\
 [0x1AAD]={\
  direction=\"l\",\
 },\
 [0x1B00]={\
  direction=\"nsm\",\
 },\
 [0x1B01]={\
  direction=\"nsm\",\
 },\
 [0x1B02]={\
  direction=\"nsm\",\
 },\
 [0x1B03]={\
  direction=\"nsm\",\
 },\
 [0x1B04]={\
  direction=\"l\",\
 },\
 [0x1B05]={\
  direction=\"l\",\
 },\
 [0x1B06]={\
  direction=\"l\",\
 },\
 [0x1B07]={\
  direction=\"l\",\
 },\
 [0x1B08]={\
  direction=\"l\",\
 },\
 [0x1B09]={\
  direction=\"l\",\
 },\
 [0x1B0A]={\
  direction=\"l\",\
 },\
 [0x1B0B]={\
  direction=\"l\",\
 },\
 [0x1B0C]={\
  direction=\"l\",\
 },\
 [0x1B0D]={\
  direction=\"l\",\
 },\
 [0x1B0E]={\
  direction=\"l\",\
 },\
 [0x1B0F]={\
  direction=\"l\",\
 },\
 [0x1B10]={\
  direction=\"l\",\
 },\
 [0x1B11]={\
  direction=\"l\",\
 },\
 [0x1B12]={\
  direction=\"l\",\
 },\
 [0x1B13]={\
  direction=\"l\",\
 },\
 [0x1B14]={\
  direction=\"l\",\
 },\
 [0x1B15]={\
  direction=\"l\",\
 },\
 [0x1B16]={\
  direction=\"l\",\
 },\
 [0x1B17]={\
  direction=\"l\",\
 },\
 [0x1B18]={\
  direction=\"l\",\
 },\
 [0x1B19]={\
  direction=\"l\",\
 },\
 [0x1B1A]={\
  direction=\"l\",\
 },\
 [0x1B1B]={\
  direction=\"l\",\
 },\
 [0x1B1C]={\
  direction=\"l\",\
 },\
 [0x1B1D]={\
  direction=\"l\",\
 },\
 [0x1B1E]={\
  direction=\"l\",\
 },\
 [0x1B1F]={\
  direction=\"l\",\
 },\
 [0x1B20]={\
  direction=\"l\",\
 },\
 [0x1B21]={\
  direction=\"l\",\
 },\
 [0x1B22]={\
  direction=\"l\",\
 },\
 [0x1B23]={\
  direction=\"l\",\
 },\
 [0x1B24]={\
  direction=\"l\",\
 },\
 [0x1B25]={\
  direction=\"l\",\
 },\
 [0x1B26]={\
  direction=\"l\",\
 },\
 [0x1B27]={\
  direction=\"l\",\
 },\
 [0x1B28]={\
  direction=\"l\",\
 },\
 [0x1B29]={\
  direction=\"l\",\
 },\
 [0x1B2A]={\
  direction=\"l\",\
 },\
 [0x1B2B]={\
  direction=\"l\",\
 },\
 [0x1B2C]={\
  direction=\"l\",\
 },\
 [0x1B2D]={\
  direction=\"l\",\
 },\
 [0x1B2E]={\
  direction=\"l\",\
 },\
 [0x1B2F]={\
  direction=\"l\",\
 },\
 [0x1B30]={\
  direction=\"l\",\
 },\
 [0x1B31]={\
  direction=\"l\",\
 },\
 [0x1B32]={\
  direction=\"l\",\
 },\
 [0x1B33]={\
  direction=\"l\",\
 },\
 [0x1B34]={\
  direction=\"nsm\",\
 },\
 [0x1B35]={\
  direction=\"l\",\
 },\
 [0x1B36]={\
  direction=\"nsm\",\
 },\
 [0x1B37]={\
  direction=\"nsm\",\
 },\
 [0x1B38]={\
  direction=\"nsm\",\
 },\
 [0x1B39]={\
  direction=\"nsm\",\
 },\
 [0x1B3A]={\
  direction=\"nsm\",\
 },\
 [0x1B3B]={\
  direction=\"l\",\
 },\
 [0x1B3C]={\
  direction=\"nsm\",\
 },\
 [0x1B3D]={\
  direction=\"l\",\
 },\
 [0x1B3E]={\
  direction=\"l\",\
 },\
 [0x1B3F]={\
  direction=\"l\",\
 },\
 [0x1B40]={\
  direction=\"l\",\
 },\
 [0x1B41]={\
  direction=\"l\",\
 },\
 [0x1B42]={\
  direction=\"nsm\",\
 },\
 [0x1B43]={\
  direction=\"l\",\
 },\
 [0x1B44]={\
  direction=\"l\",\
 },\
 [0x1B45]={\
  direction=\"l\",\
 },\
 [0x1B46]={\
  direction=\"l\",\
 },\
 [0x1B47]={\
  direction=\"l\",\
 },\
 [0x1B48]={\
  direction=\"l\",\
 },\
 [0x1B49]={\
  direction=\"l\",\
 },\
 [0x1B4A]={\
  direction=\"l\",\
 },\
 [0x1B4B]={\
  direction=\"l\",\
 },\
 [0x1B50]={\
  direction=\"l\",\
 },\
 [0x1B51]={\
  direction=\"l\",\
 },\
 [0x1B52]={\
  direction=\"l\",\
 },\
 [0x1B53]={\
  direction=\"l\",\
 },\
 [0x1B54]={\
  direction=\"l\",\
 },\
 [0x1B55]={\
  direction=\"l\",\
 },\
 [0x1B56]={\
  direction=\"l\",\
 },\
 [0x1B57]={\
  direction=\"l\",\
 },\
 [0x1B58]={\
  direction=\"l\",\
 },\
 [0x1B59]={\
  direction=\"l\",\
 },\
 [0x1B5A]={\
  direction=\"l\",\
 },\
 [0x1B5B]={\
  direction=\"l\",\
 },\
 [0x1B5C]={\
  direction=\"l\",\
 },\
 [0x1B5D]={\
  direction=\"l\",\
 },\
 [0x1B5E]={\
  direction=\"l\",\
 },\
 [0x1B5F]={\
  direction=\"l\",\
 },\
 [0x1B60]={\
  direction=\"l\",\
 },\
 [0x1B61]={\
  direction=\"l\",\
 },\
 [0x1B62]={\
  direction=\"l\",\
 },\
 [0x1B63]={\
  direction=\"l\",\
 },\
 [0x1B64]={\
  direction=\"l\",\
 },\
 [0x1B65]={\
  direction=\"l\",\
 },\
 [0x1B66]={\
  direction=\"l\",\
 },\
 [0x1B67]={\
  direction=\"l\",\
 },\
 [0x1B68]={\
  direction=\"l\",\
 },\
 [0x1B69]={\
  direction=\"l\",\
 },\
 [0x1B6A]={\
  direction=\"l\",\
 },\
 [0x1B6B]={\
  direction=\"nsm\",\
 },\
 [0x1B6C]={\
  direction=\"nsm\",\
 },\
 [0x1B6D]={\
  direction=\"nsm\",\
 },\
 [0x1B6E]={\
  direction=\"nsm\",\
 },\
 [0x1B6F]={\
  direction=\"nsm\",\
 },\
 [0x1B70]={\
  direction=\"nsm\",\
 },\
 [0x1B71]={\
  direction=\"nsm\",\
 },\
 [0x1B72]={\
  direction=\"nsm\",\
 },\
 [0x1B73]={\
  direction=\"nsm\",\
 },\
 [0x1B74]={\
  direction=\"l\",\
 },\
 [0x1B75]={\
  direction=\"l\",\
 },\
 [0x1B76]={\
  direction=\"l\",\
 },\
 [0x1B77]={\
  direction=\"l\",\
 },\
 [0x1B78]={\
  direction=\"l\",\
 },\
 [0x1B79]={\
  direction=\"l\",\
 },\
 [0x1B7A]={\
  direction=\"l\",\
 },\
 [0x1B7B]={\
  direction=\"l\",\
 },\
 [0x1B7C]={\
  direction=\"l\",\
 },\
 [0x1B80]={\
  direction=\"nsm\",\
 },\
 [0x1B81]={\
  direction=\"nsm\",\
 },\
 [0x1B82]={\
  direction=\"l\",\
 },\
 [0x1B83]={\
  direction=\"l\",\
 },\
 [0x1B84]={\
  direction=\"l\",\
 },\
 [0x1B85]={\
  direction=\"l\",\
 },\
 [0x1B86]={\
  direction=\"l\",\
 },\
 [0x1B87]={\
  direction=\"l\",\
 },\
 [0x1B88]={\
  direction=\"l\",\
 },\
 [0x1B89]={\
  direction=\"l\",\
 },\
 [0x1B8A]={\
  direction=\"l\",\
 },\
 [0x1B8B]={\
  direction=\"l\",\
 },\
 [0x1B8C]={\
  direction=\"l\",\
 },\
 [0x1B8D]={\
  direction=\"l\",\
 },\
 [0x1B8E]={\
  direction=\"l\",\
 },\
 [0x1B8F]={\
  direction=\"l\",\
 },\
 [0x1B90]={\
  direction=\"l\",\
 },\
 [0x1B91]={\
  direction=\"l\",\
 },\
 [0x1B92]={\
  direction=\"l\",\
 },\
 [0x1B93]={\
  direction=\"l\",\
 },\
 [0x1B94]={\
  direction=\"l\",\
 },\
 [0x1B95]={\
  direction=\"l\",\
 },\
 [0x1B96]={\
  direction=\"l\",\
 },\
 [0x1B97]={\
  direction=\"l\",\
 },\
 [0x1B98]={\
  direction=\"l\",\
 },\
 [0x1B99]={\
  direction=\"l\",\
 },\
 [0x1B9A]={\
  direction=\"l\",\
 },\
 [0x1B9B]={\
  direction=\"l\",\
 },\
 [0x1B9C]={\
  direction=\"l\",\
 },\
 [0x1B9D]={\
  direction=\"l\",\
 },\
 [0x1B9E]={\
  direction=\"l\",\
 },\
 [0x1B9F]={\
  direction=\"l\",\
 },\
 [0x1BA0]={\
  direction=\"l\",\
 },\
 [0x1BA1]={\
  direction=\"l\",\
 },\
 [0x1BA2]={\
  direction=\"nsm\",\
 },\
 [0x1BA3]={\
  direction=\"nsm\",\
 },\
 [0x1BA4]={\
  direction=\"nsm\",\
 },\
 [0x1BA5]={\
  direction=\"nsm\",\
 },\
 [0x1BA6]={\
  direction=\"l\",\
 },\
 [0x1BA7]={\
  direction=\"l\",\
 },\
 [0x1BA8]={\
  direction=\"nsm\",\
 },\
 [0x1BA9]={\
  direction=\"nsm\",\
 },\
 [0x1BAA]={\
  direction=\"l\",\
 },\
 [0x1BAB]={\
  direction=\"nsm\",\
 },\
 [0x1BAC]={\
  direction=\"l\",\
 },\
 [0x1BAD]={\
  direction=\"l\",\
 },\
 [0x1BAE]={\
  direction=\"l\",\
 },\
 [0x1BAF]={\
  direction=\"l\",\
 },\
 [0x1BB0]={\
  direction=\"l\",\
 },\
 [0x1BB1]={\
  direction=\"l\",\
 },\
 [0x1BB2]={\
  direction=\"l\",\
 },\
 [0x1BB3]={\
  direction=\"l\",\
 },\
 [0x1BB4]={\
  direction=\"l\",\
 },\
 [0x1BB5]={\
  direction=\"l\",\
 },\
 [0x1BB6]={\
  direction=\"l\",\
 },\
 [0x1BB7]={\
  direction=\"l\",\
 },\
 [0x1BB8]={\
  direction=\"l\",\
 },\
 [0x1BB9]={\
  direction=\"l\",\
 },\
 [0x1BBA]={\
  direction=\"l\",\
 },\
 [0x1BBB]={\
  direction=\"l\",\
 },\
 [0x1BBC]={\
  direction=\"l\",\
 },\
 [0x1BBD]={\
  direction=\"l\",\
 },\
 [0x1BBE]={\
  direction=\"l\",\
 },\
 [0x1BBF]={\
  direction=\"l\",\
 },\
 [0x1BC0]={\
  direction=\"l\",\
 },\
 [0x1BC1]={\
  direction=\"l\",\
 },\
 [0x1BC2]={\
  direction=\"l\",\
 },\
 [0x1BC3]={\
  direction=\"l\",\
 },\
 [0x1BC4]={\
  direction=\"l\",\
 },\
 [0x1BC5]={\
  direction=\"l\",\
 },\
 [0x1BC6]={\
  direction=\"l\",\
 },\
 [0x1BC7]={\
  direction=\"l\",\
 },\
 [0x1BC8]={\
  direction=\"l\",\
 },\
 [0x1BC9]={\
  direction=\"l\",\
 },\
 [0x1BCA]={\
  direction=\"l\",\
 },\
 [0x1BCB]={\
  direction=\"l\",\
 },\
 [0x1BCC]={\
  direction=\"l\",\
 },\
 [0x1BCD]={\
  direction=\"l\",\
 },\
 [0x1BCE]={\
  direction=\"l\",\
 },\
 [0x1BCF]={\
  direction=\"l\",\
 },\
 [0x1BD0]={\
  direction=\"l\",\
 },\
 [0x1BD1]={\
  direction=\"l\",\
 },\
 [0x1BD2]={\
  direction=\"l\",\
 },\
 [0x1BD3]={\
  direction=\"l\",\
 },\
 [0x1BD4]={\
  direction=\"l\",\
 },\
 [0x1BD5]={\
  direction=\"l\",\
 },\
 [0x1BD6]={\
  direction=\"l\",\
 },\
 [0x1BD7]={\
  direction=\"l\",\
 },\
 [0x1BD8]={\
  direction=\"l\",\
 },\
 [0x1BD9]={\
  direction=\"l\",\
 },\
 [0x1BDA]={\
  direction=\"l\",\
 },\
 [0x1BDB]={\
  direction=\"l\",\
 },\
 [0x1BDC]={\
  direction=\"l\",\
 },\
 [0x1BDD]={\
  direction=\"l\",\
 },\
 [0x1BDE]={\
  direction=\"l\",\
 },\
 [0x1BDF]={\
  direction=\"l\",\
 },\
 [0x1BE0]={\
  direction=\"l\",\
 },\
 [0x1BE1]={\
  direction=\"l\",\
 },\
 [0x1BE2]={\
  direction=\"l\",\
 },\
 [0x1BE3]={\
  direction=\"l\",\
 },\
 [0x1BE4]={\
  direction=\"l\",\
 },\
 [0x1BE5]={\
  direction=\"l\",\
 },\
 [0x1BE6]={\
  direction=\"nsm\",\
 },\
 [0x1BE7]={\
  direction=\"l\",\
 },\
 [0x1BE8]={\
  direction=\"nsm\",\
 },\
 [0x1BE9]={\
  direction=\"nsm\",\
 },\
 [0x1BEA]={\
  direction=\"l\",\
 },\
 [0x1BEB]={\
  direction=\"l\",\
 },\
 [0x1BEC]={\
  direction=\"l\",\
 },\
 [0x1BED]={\
  direction=\"nsm\",\
 },\
 [0x1BEE]={\
  direction=\"l\",\
 },\
 [0x1BEF]={\
  direction=\"nsm\",\
 },\
 [0x1BF0]={\
  direction=\"nsm\",\
 },\
 [0x1BF1]={\
  direction=\"nsm\",\
 },\
 [0x1BF2]={\
  direction=\"l\",\
 },\
 [0x1BF3]={\
  direction=\"l\",\
 },\
 [0x1BFC]={\
  direction=\"l\",\
 },\
 [0x1BFD]={\
  direction=\"l\",\
 },\
 [0x1BFE]={\
  direction=\"l\",\
 },\
 [0x1BFF]={\
  direction=\"l\",\
 },\
 [0x1C00]={\
  direction=\"l\",\
 },\
 [0x1C01]={\
  direction=\"l\",\
 },\
 [0x1C02]={\
  direction=\"l\",\
 },\
 [0x1C03]={\
  direction=\"l\",\
 },\
 [0x1C04]={\
  direction=\"l\",\
 },\
 [0x1C05]={\
  direction=\"l\",\
 },\
 [0x1C06]={\
  direction=\"l\",\
 },\
 [0x1C07]={\
  direction=\"l\",\
 },\
 [0x1C08]={\
  direction=\"l\",\
 },\
 [0x1C09]={\
  direction=\"l\",\
 },\
 [0x1C0A]={\
  direction=\"l\",\
 },\
 [0x1C0B]={\
  direction=\"l\",\
 },\
 [0x1C0C]={\
  direction=\"l\",\
 },\
 [0x1C0D]={\
  direction=\"l\",\
 },\
 [0x1C0E]={\
  direction=\"l\",\
 },\
 [0x1C0F]={\
  direction=\"l\",\
 },\
 [0x1C10]={\
  direction=\"l\",\
 },\
 [0x1C11]={\
  direction=\"l\",\
 },\
 [0x1C12]={\
  direction=\"l\",\
 },\
 [0x1C13]={\
  direction=\"l\",\
 },\
 [0x1C14]={\
  direction=\"l\",\
 },\
 [0x1C15]={\
  direction=\"l\",\
 },\
 [0x1C16]={\
  direction=\"l\",\
 },\
 [0x1C17]={\
  direction=\"l\",\
 },\
 [0x1C18]={\
  direction=\"l\",\
 },\
 [0x1C19]={\
  direction=\"l\",\
 },\
 [0x1C1A]={\
  direction=\"l\",\
 },\
 [0x1C1B]={\
  direction=\"l\",\
 },\
 [0x1C1C]={\
  direction=\"l\",\
 },\
 [0x1C1D]={\
  direction=\"l\",\
 },\
 [0x1C1E]={\
  direction=\"l\",\
 },\
 [0x1C1F]={\
  direction=\"l\",\
 },\
 [0x1C20]={\
  direction=\"l\",\
 },\
 [0x1C21]={\
  direction=\"l\",\
 },\
 [0x1C22]={\
  direction=\"l\",\
 },\
 [0x1C23]={\
  direction=\"l\",\
 },\
 [0x1C24]={\
  direction=\"l\",\
 },\
 [0x1C25]={\
  direction=\"l\",\
 },\
 [0x1C26]={\
  direction=\"l\",\
 },\
 [0x1C27]={\
  direction=\"l\",\
 },\
 [0x1C28]={\
  direction=\"l\",\
 },\
 [0x1C29]={\
  direction=\"l\",\
 },\
 [0x1C2A]={\
  direction=\"l\",\
 },\
 [0x1C2B]={\
  direction=\"l\",\
 },\
 [0x1C2C]={\
  direction=\"nsm\",\
 },\
 [0x1C2D]={\
  direction=\"nsm\",\
 },\
 [0x1C2E]={\
  direction=\"nsm\",\
 },\
 [0x1C2F]={\
  direction=\"nsm\",\
 },\
 [0x1C30]={\
  direction=\"nsm\",\
 },\
 [0x1C31]={\
  direction=\"nsm\",\
 },\
 [0x1C32]={\
  direction=\"nsm\",\
 },\
 [0x1C33]={\
  direction=\"nsm\",\
 },\
 [0x1C34]={\
  direction=\"l\",\
 },\
 [0x1C35]={\
  direction=\"l\",\
 },\
 [0x1C36]={\
  direction=\"nsm\",\
 },\
 [0x1C37]={\
  direction=\"nsm\",\
 },\
 [0x1C3B]={\
  direction=\"l\",\
 },\
 [0x1C3C]={\
  direction=\"l\",\
 },\
 [0x1C3D]={\
  direction=\"l\",\
 },\
 [0x1C3E]={\
  direction=\"l\",\
 },\
 [0x1C3F]={\
  direction=\"l\",\
 },\
 [0x1C40]={\
  direction=\"l\",\
 },\
 [0x1C41]={\
  direction=\"l\",\
 },\
 [0x1C42]={\
  direction=\"l\",\
 },\
 [0x1C43]={\
  direction=\"l\",\
 },\
 [0x1C44]={\
  direction=\"l\",\
 },\
 [0x1C45]={\
  direction=\"l\",\
 },\
 [0x1C46]={\
  direction=\"l\",\
 },\
 [0x1C47]={\
  direction=\"l\",\
 },\
 [0x1C48]={\
  direction=\"l\",\
 },\
 [0x1C49]={\
  direction=\"l\",\
 },\
 [0x1C4D]={\
  direction=\"l\",\
 },\
 [0x1C4E]={\
  direction=\"l\",\
 },\
 [0x1C4F]={\
  direction=\"l\",\
 },\
 [0x1C50]={\
  direction=\"l\",\
 },\
 [0x1C51]={\
  direction=\"l\",\
 },\
 [0x1C52]={\
  direction=\"l\",\
 },\
 [0x1C53]={\
  direction=\"l\",\
 },\
 [0x1C54]={\
  direction=\"l\",\
 },\
 [0x1C55]={\
  direction=\"l\",\
 },\
 [0x1C56]={\
  direction=\"l\",\
 },\
 [0x1C57]={\
  direction=\"l\",\
 },\
 [0x1C58]={\
  direction=\"l\",\
 },\
 [0x1C59]={\
  direction=\"l\",\
 },\
 [0x1C5A]={\
  direction=\"l\",\
 },\
 [0x1C5B]={\
  direction=\"l\",\
 },\
 [0x1C5C]={\
  direction=\"l\",\
 },\
 [0x1C5D]={\
  direction=\"l\",\
 },\
 [0x1C5E]={\
  direction=\"l\",\
 },\
 [0x1C5F]={\
  direction=\"l\",\
 },\
 [0x1C60]={\
  direction=\"l\",\
 },\
 [0x1C61]={\
  direction=\"l\",\
 },\
 [0x1C62]={\
  direction=\"l\",\
 },\
 [0x1C63]={\
  direction=\"l\",\
 },\
 [0x1C64]={\
  direction=\"l\",\
 },\
 [0x1C65]={\
  direction=\"l\",\
 },\
 [0x1C66]={\
  direction=\"l\",\
 },\
 [0x1C67]={\
  direction=\"l\",\
 },\
 [0x1C68]={\
  direction=\"l\",\
 },\
 [0x1C69]={\
  direction=\"l\",\
 },\
 [0x1C6A]={\
  direction=\"l\",\
 },\
 [0x1C6B]={\
  direction=\"l\",\
 },\
 [0x1C6C]={\
  direction=\"l\",\
 },\
 [0x1C6D]={\
  direction=\"l\",\
 },\
 [0x1C6E]={\
  direction=\"l\",\
 },\
 [0x1C6F]={\
  direction=\"l\",\
 },\
 [0x1C70]={\
  direction=\"l\",\
 },\
 [0x1C71]={\
  direction=\"l\",\
 },\
 [0x1C72]={\
  direction=\"l\",\
 },\
 [0x1C73]={\
  direction=\"l\",\
 },\
 [0x1C74]={\
  direction=\"l\",\
 },\
 [0x1C75]={\
  direction=\"l\",\
 },\
 [0x1C76]={\
  direction=\"l\",\
 },\
 [0x1C77]={\
  direction=\"l\",\
 },\
 [0x1C78]={\
  direction=\"l\",\
 },\
 [0x1C79]={\
  direction=\"l\",\
 },\
 [0x1C7A]={\
  direction=\"l\",\
 },\
 [0x1C7B]={\
  direction=\"l\",\
 },\
 [0x1C7C]={\
  direction=\"l\",\
 },\
 [0x1C7D]={\
  direction=\"l\",\
 },\
 [0x1C7E]={\
  direction=\"l\",\
 },\
 [0x1C7F]={\
  direction=\"l\",\
 },\
 [0x1CC0]={\
  direction=\"l\",\
 },\
 [0x1CC1]={\
  direction=\"l\",\
 },\
 [0x1CC2]={\
  direction=\"l\",\
 },\
 [0x1CC3]={\
  direction=\"l\",\
 },\
 [0x1CC4]={\
  direction=\"l\",\
 },\
 [0x1CC5]={\
  direction=\"l\",\
 },\
 [0x1CC6]={\
  direction=\"l\",\
 },\
 [0x1CC7]={\
  direction=\"l\",\
 },\
 [0x1CD0]={\
  direction=\"nsm\",\
 },\
 [0x1CD1]={\
  direction=\"nsm\",\
 },\
 [0x1CD2]={\
  direction=\"nsm\",\
 },\
 [0x1CD3]={\
  direction=\"l\",\
 },\
 [0x1CD4]={\
  direction=\"nsm\",\
 },\
 [0x1CD5]={\
  direction=\"nsm\",\
 },\
 [0x1CD6]={\
  direction=\"nsm\",\
 },\
 [0x1CD7]={\
  direction=\"nsm\",\
 },\
 [0x1CD8]={\
  direction=\"nsm\",\
 },\
 [0x1CD9]={\
  direction=\"nsm\",\
 },\
 [0x1CDA]={\
  direction=\"nsm\",\
 },\
 [0x1CDB]={\
  direction=\"nsm\",\
 },\
 [0x1CDC]={\
  direction=\"nsm\",\
 },\
 [0x1CDD]={\
  direction=\"nsm\",\
 },\
 [0x1CDE]={\
  direction=\"nsm\",\
 },\
 [0x1CDF]={\
  direction=\"nsm\",\
 },\
 [0x1CE0]={\
  direction=\"nsm\",\
 },\
 [0x1CE1]={\
  direction=\"l\",\
 },\
 [0x1CE2]={\
  direction=\"nsm\",\
 },\
 [0x1CE3]={\
  direction=\"nsm\",\
 },\
 [0x1CE4]={\
  direction=\"nsm\",\
 },\
 [0x1CE5]={\
  direction=\"nsm\",\
 },\
 [0x1CE6]={\
  direction=\"nsm\",\
 },\
 [0x1CE7]={\
  direction=\"nsm\",\
 },\
 [0x1CE8]={\
  direction=\"nsm\",\
 },\
 [0x1CE9]={\
  direction=\"l\",\
 },\
 [0x1CEA]={\
  direction=\"l\",\
 },\
 [0x1CEB]={\
  direction=\"l\",\
 },\
 [0x1CEC]={\
  direction=\"l\",\
 },\
 [0x1CED]={\
  direction=\"nsm\",\
 },\
 [0x1CEE]={\
  direction=\"l\",\
 },\
 [0x1CEF]={\
  direction=\"l\",\
 },\
 [0x1CF0]={\
  direction=\"l\",\
 },\
 [0x1CF1]={\
  direction=\"l\",\
 },\
 [0x1CF2]={\
  direction=\"l\",\
 },\
 [0x1CF3]={\
  direction=\"l\",\
 },\
 [0x1CF4]={\
  direction=\"nsm\",\
 },\
 [0x1CF5]={\
  direction=\"l\",\
 },\
 [0x1CF6]={\
  direction=\"l\",\
 },\
 [0x1D00]={\
  direction=\"l\",\
 },\
 [0x1D01]={\
  direction=\"l\",\
 },\
 [0x1D02]={\
  direction=\"l\",\
 },\
 [0x1D03]={\
  direction=\"l\",\
 },\
 [0x1D04]={\
  direction=\"l\",\
 },\
 [0x1D05]={\
  direction=\"l\",\
 },\
 [0x1D06]={\
  direction=\"l\",\
 },\
 [0x1D07]={\
  direction=\"l\",\
 },\
 [0x1D08]={\
  direction=\"l\",\
 },\
 [0x1D09]={\
  direction=\"l\",\
 },\
 [0x1D0A]={\
  direction=\"l\",\
 },\
 [0x1D0B]={\
  direction=\"l\",\
 },\
 [0x1D0C]={\
  direction=\"l\",\
 },\
 [0x1D0D]={\
  direction=\"l\",\
 },\
 [0x1D0E]={\
  direction=\"l\",\
 },\
 [0x1D0F]={\
  direction=\"l\",\
 },\
 [0x1D10]={\
  direction=\"l\",\
 },\
 [0x1D11]={\
  direction=\"l\",\
 },\
 [0x1D12]={\
  direction=\"l\",\
 },\
 [0x1D13]={\
  direction=\"l\",\
 },\
 [0x1D14]={\
  direction=\"l\",\
 },\
 [0x1D15]={\
  direction=\"l\",\
 },\
 [0x1D16]={\
  direction=\"l\",\
 },\
 [0x1D17]={\
  direction=\"l\",\
 },\
 [0x1D18]={\
  direction=\"l\",\
 },\
 [0x1D19]={\
  direction=\"l\",\
 },\
 [0x1D1A]={\
  direction=\"l\",\
 },\
 [0x1D1B]={\
  direction=\"l\",\
 },\
 [0x1D1C]={\
  direction=\"l\",\
 },\
 [0x1D1D]={\
  direction=\"l\",\
 },\
 [0x1D1E]={\
  direction=\"l\",\
 },\
 [0x1D1F]={\
  direction=\"l\",\
 },\
 [0x1D20]={\
  direction=\"l\",\
 },\
 [0x1D21]={\
  direction=\"l\",\
 },\
 [0x1D22]={\
  direction=\"l\",\
 },\
 [0x1D23]={\
  direction=\"l\",\
 },\
 [0x1D24]={\
  direction=\"l\",\
 },\
 [0x1D25]={\
  direction=\"l\",\
 },\
 [0x1D26]={\
  direction=\"l\",\
 },\
 [0x1D27]={\
  direction=\"l\",\
 },\
 [0x1D28]={\
  direction=\"l\",\
 },\
 [0x1D29]={\
  direction=\"l\",\
 },\
 [0x1D2A]={\
  direction=\"l\",\
 },\
 [0x1D2B]={\
  direction=\"l\",\
 },\
 [0x1D2C]={\
  direction=\"l\",\
 },\
 [0x1D2D]={\
  direction=\"l\",\
 },\
 [0x1D2E]={\
  direction=\"l\",\
 },\
 [0x1D2F]={\
  direction=\"l\",\
 },\
 [0x1D30]={\
  direction=\"l\",\
 },\
 [0x1D31]={\
  direction=\"l\",\
 },\
 [0x1D32]={\
  direction=\"l\",\
 },\
 [0x1D33]={\
  direction=\"l\",\
 },\
 [0x1D34]={\
  direction=\"l\",\
 },\
 [0x1D35]={\
  direction=\"l\",\
 },\
 [0x1D36]={\
  direction=\"l\",\
 },\
 [0x1D37]={\
  direction=\"l\",\
 },\
 [0x1D38]={\
  direction=\"l\",\
 },\
 [0x1D39]={\
  direction=\"l\",\
 },\
 [0x1D3A]={\
  direction=\"l\",\
 },\
 [0x1D3B]={\
  direction=\"l\",\
 },\
 [0x1D3C]={\
  direction=\"l\",\
 },\
 [0x1D3D]={\
  direction=\"l\",\
 },\
 [0x1D3E]={\
  direction=\"l\",\
 },\
 [0x1D3F]={\
  direction=\"l\",\
 },\
 [0x1D40]={\
  direction=\"l\",\
 },\
 [0x1D41]={\
  direction=\"l\",\
 },\
 [0x1D42]={\
  direction=\"l\",\
 },\
 [0x1D43]={\
  direction=\"l\",\
 },\
 [0x1D44]={\
  direction=\"l\",\
 },\
 [0x1D45]={\
  direction=\"l\",\
 },\
 [0x1D46]={\
  direction=\"l\",\
 },\
 [0x1D47]={\
  direction=\"l\",\
 },\
 [0x1D48]={\
  direction=\"l\",\
 },\
 [0x1D49]={\
  direction=\"l\",\
 },\
 [0x1D4A]={\
  direction=\"l\",\
 },\
 [0x1D4B]={\
  direction=\"l\",\
 },\
 [0x1D4C]={\
  direction=\"l\",\
 },\
 [0x1D4D]={\
  direction=\"l\",\
 },\
 [0x1D4E]={\
  direction=\"l\",\
 },\
 [0x1D4F]={\
  direction=\"l\",\
 },\
 [0x1D50]={\
  direction=\"l\",\
 },\
 [0x1D51]={\
  direction=\"l\",\
 },\
 [0x1D52]={\
  direction=\"l\",\
 },\
 [0x1D53]={\
  direction=\"l\",\
 },\
 [0x1D54]={\
  direction=\"l\",\
 },\
 [0x1D55]={\
  direction=\"l\",\
 },\
 [0x1D56]={\
  direction=\"l\",\
 },\
 [0x1D57]={\
  direction=\"l\",\
 },\
 [0x1D58]={\
  direction=\"l\",\
 },\
 [0x1D59]={\
  direction=\"l\",\
 },\
 [0x1D5A]={\
  direction=\"l\",\
 },\
 [0x1D5B]={\
  direction=\"l\",\
 },\
 [0x1D5C]={\
  direction=\"l\",\
 },\
 [0x1D5D]={\
  direction=\"l\",\
 },\
 [0x1D5E]={\
  direction=\"l\",\
 },\
 [0x1D5F]={\
  direction=\"l\",\
 },\
 [0x1D60]={\
  direction=\"l\",\
 },\
 [0x1D61]={\
  direction=\"l\",\
 },\
 [0x1D62]={\
  direction=\"l\",\
 },\
 [0x1D63]={\
  direction=\"l\",\
 },\
 [0x1D64]={\
  direction=\"l\",\
 },\
 [0x1D65]={\
  direction=\"l\",\
 },\
 [0x1D66]={\
  direction=\"l\",\
 },\
 [0x1D67]={\
  direction=\"l\",\
 },\
 [0x1D68]={\
  direction=\"l\",\
 },\
 [0x1D69]={\
  direction=\"l\",\
 },\
 [0x1D6A]={\
  direction=\"l\",\
 },\
 [0x1D6B]={\
  direction=\"l\",\
 },\
 [0x1D6C]={\
  direction=\"l\",\
 },\
 [0x1D6D]={\
  direction=\"l\",\
 },\
 [0x1D6E]={\
  direction=\"l\",\
 },\
 [0x1D6F]={\
  direction=\"l\",\
 },\
 [0x1D70]={\
  direction=\"l\",\
 },\
 [0x1D71]={\
  direction=\"l\",\
 },\
 [0x1D72]={\
  direction=\"l\",\
 },\
 [0x1D73]={\
  direction=\"l\",\
 },\
 [0x1D74]={\
  direction=\"l\",\
 },\
 [0x1D75]={\
  direction=\"l\",\
 },\
 [0x1D76]={\
  direction=\"l\",\
 },\
 [0x1D77]={\
  direction=\"l\",\
 },\
 [0x1D78]={\
  direction=\"l\",\
 },\
 [0x1D79]={\
  direction=\"l\",\
 },\
 [0x1D7A]={\
  direction=\"l\",\
 },\
 [0x1D7B]={\
  direction=\"l\",\
 },\
 [0x1D7C]={\
  direction=\"l\",\
 },\
 [0x1D7D]={\
  direction=\"l\",\
 },\
 [0x1D7E]={\
  direction=\"l\",\
 },\
 [0x1D7F]={\
  direction=\"l\",\
 },\
 [0x1D80]={\
  direction=\"l\",\
 },\
 [0x1D81]={\
  direction=\"l\",\
 },\
 [0x1D82]={\
  direction=\"l\",\
 },\
 [0x1D83]={\
  direction=\"l\",\
 },\
 [0x1D84]={\
  direction=\"l\",\
 },\
 [0x1D85]={\
  direction=\"l\",\
 },\
 [0x1D86]={\
  direction=\"l\",\
 },\
 [0x1D87]={\
  direction=\"l\",\
 },\
 [0x1D88]={\
  direction=\"l\",\
 },\
 [0x1D89]={\
  direction=\"l\",\
 },\
 [0x1D8A]={\
  direction=\"l\",\
 },\
 [0x1D8B]={\
  direction=\"l\",\
 },\
 [0x1D8C]={\
  direction=\"l\",\
 },\
 [0x1D8D]={\
  direction=\"l\",\
 },\
 [0x1D8E]={\
  direction=\"l\",\
 },\
 [0x1D8F]={\
  direction=\"l\",\
 },\
 [0x1D90]={\
  direction=\"l\",\
 },\
 [0x1D91]={\
  direction=\"l\",\
 },\
 [0x1D92]={\
  direction=\"l\",\
 },\
 [0x1D93]={\
  direction=\"l\",\
 },\
 [0x1D94]={\
  direction=\"l\",\
 },\
 [0x1D95]={\
  direction=\"l\",\
 },\
 [0x1D96]={\
  direction=\"l\",\
 },\
 [0x1D97]={\
  direction=\"l\",\
 },\
 [0x1D98]={\
  direction=\"l\",\
 },\
 [0x1D99]={\
  direction=\"l\",\
 },\
 [0x1D9A]={\
  direction=\"l\",\
 },\
 [0x1D9B]={\
  direction=\"l\",\
 },\
 [0x1D9C]={\
  direction=\"l\",\
 },\
 [0x1D9D]={\
  direction=\"l\",\
 },\
 [0x1D9E]={\
  direction=\"l\",\
 },\
 [0x1D9F]={\
  direction=\"l\",\
 },\
 [0x1DA0]={\
  direction=\"l\",\
 },\
 [0x1DA1]={\
  direction=\"l\",\
 },\
 [0x1DA2]={\
  direction=\"l\",\
 },\
 [0x1DA3]={\
  direction=\"l\",\
 },\
 [0x1DA4]={\
  direction=\"l\",\
 },\
 [0x1DA5]={\
  direction=\"l\",\
 },\
 [0x1DA6]={\
  direction=\"l\",\
 },\
 [0x1DA7]={\
  direction=\"l\",\
 },\
 [0x1DA8]={\
  direction=\"l\",\
 },\
 [0x1DA9]={\
  direction=\"l\",\
 },\
 [0x1DAA]={\
  direction=\"l\",\
 },\
 [0x1DAB]={\
  direction=\"l\",\
 },\
 [0x1DAC]={\
  direction=\"l\",\
 },\
 [0x1DAD]={\
  direction=\"l\",\
 },\
 [0x1DAE]={\
  direction=\"l\",\
 },\
 [0x1DAF]={\
  direction=\"l\",\
 },\
 [0x1DB0]={\
  direction=\"l\",\
 },\
 [0x1DB1]={\
  direction=\"l\",\
 },\
 [0x1DB2]={\
  direction=\"l\",\
 },\
 [0x1DB3]={\
  direction=\"l\",\
 },\
 [0x1DB4]={\
  direction=\"l\",\
 },\
 [0x1DB5]={\
  direction=\"l\",\
 },\
 [0x1DB6]={\
  direction=\"l\",\
 },\
 [0x1DB7]={\
  direction=\"l\",\
 },\
 [0x1DB8]={\
  direction=\"l\",\
 },\
 [0x1DB9]={\
  direction=\"l\",\
 },\
 [0x1DBA]={\
  direction=\"l\",\
 },\
 [0x1DBB]={\
  direction=\"l\",\
 },\
 [0x1DBC]={\
  direction=\"l\",\
 },\
 [0x1DBD]={\
  direction=\"l\",\
 },\
 [0x1DBE]={\
  direction=\"l\",\
 },\
 [0x1DBF]={\
  direction=\"l\",\
 },\
 [0x1DC0]={\
  direction=\"nsm\",\
 },\
 [0x1DC1]={\
  direction=\"nsm\",\
 },\
 [0x1DC2]={\
  direction=\"nsm\",\
 },\
 [0x1DC3]={\
  direction=\"nsm\",\
 },\
 [0x1DC4]={\
  direction=\"nsm\",\
 },\
 [0x1DC5]={\
  direction=\"nsm\",\
 },\
 [0x1DC6]={\
  direction=\"nsm\",\
 },\
 [0x1DC7]={\
  direction=\"nsm\",\
 },\
 [0x1DC8]={\
  direction=\"nsm\",\
 },\
 [0x1DC9]={\
  direction=\"nsm\",\
 },\
 [0x1DCA]={\
  direction=\"nsm\",\
 },\
 [0x1DCB]={\
  direction=\"nsm\",\
 },\
 [0x1DCC]={\
  direction=\"nsm\",\
 },\
 [0x1DCD]={\
  direction=\"nsm\",\
 },\
 [0x1DCE]={\
  direction=\"nsm\",\
 },\
 [0x1DCF]={\
  direction=\"nsm\",\
 },\
 [0x1DD0]={\
  direction=\"nsm\",\
 },\
 [0x1DD1]={\
  direction=\"nsm\",\
 },\
 [0x1DD2]={\
  direction=\"nsm\",\
 },\
 [0x1DD3]={\
  direction=\"nsm\",\
 },\
 [0x1DD4]={\
  direction=\"nsm\",\
 },\
 [0x1DD5]={\
  direction=\"nsm\",\
 },\
 [0x1DD6]={\
  direction=\"nsm\",\
 },\
 [0x1DD7]={\
  direction=\"nsm\",\
 },\
 [0x1DD8]={\
  direction=\"nsm\",\
 },\
 [0x1DD9]={\
  direction=\"nsm\",\
 },\
 [0x1DDA]={\
  direction=\"nsm\",\
 },\
 [0x1DDB]={\
  direction=\"nsm\",\
 },\
 [0x1DDC]={\
  direction=\"nsm\",\
 },\
 [0x1DDD]={\
  direction=\"nsm\",\
 },\
 [0x1DDE]={\
  direction=\"nsm\",\
 },\
 [0x1DDF]={\
  direction=\"nsm\",\
 },\
 [0x1DE0]={\
  direction=\"nsm\",\
 },\
 [0x1DE1]={\
  direction=\"nsm\",\
 },\
 [0x1DE2]={\
  direction=\"nsm\",\
 },\
 [0x1DE3]={\
  direction=\"nsm\",\
 },\
 [0x1DE4]={\
  direction=\"nsm\",\
 },\
 [0x1DE5]={\
  direction=\"nsm\",\
 },\
 [0x1DE6]={\
  direction=\"nsm\",\
 },\
 [0x1DFC]={\
  direction=\"nsm\",\
 },\
 [0x1DFD]={\
  direction=\"nsm\",\
 },\
 [0x1DFE]={\
  direction=\"nsm\",\
 },\
 [0x1DFF]={\
  direction=\"nsm\",\
 },\
 [0x1E00]={\
  direction=\"l\",\
 },\
 [0x1E01]={\
  direction=\"l\",\
 },\
 [0x1E02]={\
  direction=\"l\",\
 },\
 [0x1E03]={\
  direction=\"l\",\
 },\
 [0x1E04]={\
  direction=\"l\",\
 },\
 [0x1E05]={\
  direction=\"l\",\
 },\
 [0x1E06]={\
  direction=\"l\",\
 },\
 [0x1E07]={\
  direction=\"l\",\
 },\
 [0x1E08]={\
  direction=\"l\",\
 },\
 [0x1E09]={\
  direction=\"l\",\
 },\
 [0x1E0A]={\
  direction=\"l\",\
 },\
 [0x1E0B]={\
  direction=\"l\",\
 },\
 [0x1E0C]={\
  direction=\"l\",\
 },\
 [0x1E0D]={\
  direction=\"l\",\
 },\
 [0x1E0E]={\
  direction=\"l\",\
 },\
 [0x1E0F]={\
  direction=\"l\",\
 },\
 [0x1E10]={\
  direction=\"l\",\
 },\
 [0x1E11]={\
  direction=\"l\",\
 },\
 [0x1E12]={\
  direction=\"l\",\
 },\
 [0x1E13]={\
  direction=\"l\",\
 },\
 [0x1E14]={\
  direction=\"l\",\
 },\
 [0x1E15]={\
  direction=\"l\",\
 },\
 [0x1E16]={\
  direction=\"l\",\
 },\
 [0x1E17]={\
  direction=\"l\",\
 },\
 [0x1E18]={\
  direction=\"l\",\
 },\
 [0x1E19]={\
  direction=\"l\",\
 },\
 [0x1E1A]={\
  direction=\"l\",\
 },\
 [0x1E1B]={\
  direction=\"l\",\
 },\
 [0x1E1C]={\
  direction=\"l\",\
 },\
 [0x1E1D]={\
  direction=\"l\",\
 },\
 [0x1E1E]={\
  direction=\"l\",\
 },\
 [0x1E1F]={\
  direction=\"l\",\
 },\
 [0x1E20]={\
  direction=\"l\",\
 },\
 [0x1E21]={\
  direction=\"l\",\
 },\
 [0x1E22]={\
  direction=\"l\",\
 },\
 [0x1E23]={\
  direction=\"l\",\
 },\
 [0x1E24]={\
  direction=\"l\",\
 },\
 [0x1E25]={\
  direction=\"l\",\
 },\
 [0x1E26]={\
  direction=\"l\",\
 },\
 [0x1E27]={\
  direction=\"l\",\
 },\
 [0x1E28]={\
  direction=\"l\",\
 },\
 [0x1E29]={\
  direction=\"l\",\
 },\
 [0x1E2A]={\
  direction=\"l\",\
 },\
 [0x1E2B]={\
  direction=\"l\",\
 },\
 [0x1E2C]={\
  direction=\"l\",\
 },\
 [0x1E2D]={\
  direction=\"l\",\
 },\
 [0x1E2E]={\
  direction=\"l\",\
 },\
 [0x1E2F]={\
  direction=\"l\",\
 },\
 [0x1E30]={\
  direction=\"l\",\
 },\
 [0x1E31]={\
  direction=\"l\",\
 },\
 [0x1E32]={\
  direction=\"l\",\
 },\
 [0x1E33]={\
  direction=\"l\",\
 },\
 [0x1E34]={\
  direction=\"l\",\
 },\
 [0x1E35]={\
  direction=\"l\",\
 },\
 [0x1E36]={\
  direction=\"l\",\
 },\
 [0x1E37]={\
  direction=\"l\",\
 },\
 [0x1E38]={\
  direction=\"l\",\
 },\
 [0x1E39]={\
  direction=\"l\",\
 },\
 [0x1E3A]={\
  direction=\"l\",\
 },\
 [0x1E3B]={\
  direction=\"l\",\
 },\
 [0x1E3C]={\
  direction=\"l\",\
 },\
 [0x1E3D]={\
  direction=\"l\",\
 },\
 [0x1E3E]={\
  direction=\"l\",\
 },\
 [0x1E3F]={\
  direction=\"l\",\
 },\
 [0x1E40]={\
  direction=\"l\",\
 },\
 [0x1E41]={\
  direction=\"l\",\
 },\
 [0x1E42]={\
  direction=\"l\",\
 },\
 [0x1E43]={\
  direction=\"l\",\
 },\
 [0x1E44]={\
  direction=\"l\",\
 },\
 [0x1E45]={\
  direction=\"l\",\
 },\
 [0x1E46]={\
  direction=\"l\",\
 },\
 [0x1E47]={\
  direction=\"l\",\
 },\
 [0x1E48]={\
  direction=\"l\",\
 },\
 [0x1E49]={\
  direction=\"l\",\
 },\
 [0x1E4A]={\
  direction=\"l\",\
 },\
 [0x1E4B]={\
  direction=\"l\",\
 },\
 [0x1E4C]={\
  direction=\"l\",\
 },\
 [0x1E4D]={\
  direction=\"l\",\
 },\
 [0x1E4E]={\
  direction=\"l\",\
 },\
 [0x1E4F]={\
  direction=\"l\",\
 },\
 [0x1E50]={\
  direction=\"l\",\
 },\
 [0x1E51]={\
  direction=\"l\",\
 },\
 [0x1E52]={\
  direction=\"l\",\
 },\
 [0x1E53]={\
  direction=\"l\",\
 },\
 [0x1E54]={\
  direction=\"l\",\
 },\
 [0x1E55]={\
  direction=\"l\",\
 },\
 [0x1E56]={\
  direction=\"l\",\
 },\
 [0x1E57]={\
  direction=\"l\",\
 },\
 [0x1E58]={\
  direction=\"l\",\
 },\
 [0x1E59]={\
  direction=\"l\",\
 },\
 [0x1E5A]={\
  direction=\"l\",\
 },\
 [0x1E5B]={\
  direction=\"l\",\
 },\
 [0x1E5C]={\
  direction=\"l\",\
 },\
 [0x1E5D]={\
  direction=\"l\",\
 },\
 [0x1E5E]={\
  direction=\"l\",\
 },\
 [0x1E5F]={\
  direction=\"l\",\
 },\
 [0x1E60]={\
  direction=\"l\",\
 },\
 [0x1E61]={\
  direction=\"l\",\
 },\
 [0x1E62]={\
  direction=\"l\",\
 },\
 [0x1E63]={\
  direction=\"l\",\
 },\
 [0x1E64]={\
  direction=\"l\",\
 },\
 [0x1E65]={\
  direction=\"l\",\
 },\
 [0x1E66]={\
  direction=\"l\",\
 },\
 [0x1E67]={\
  direction=\"l\",\
 },\
 [0x1E68]={\
  direction=\"l\",\
 },\
 [0x1E69]={\
  direction=\"l\",\
 },\
 [0x1E6A]={\
  direction=\"l\",\
 },\
 [0x1E6B]={\
  direction=\"l\",\
 },\
 [0x1E6C]={\
  direction=\"l\",\
 },\
 [0x1E6D]={\
  direction=\"l\",\
 },\
 [0x1E6E]={\
  direction=\"l\",\
 },\
 [0x1E6F]={\
  direction=\"l\",\
 },\
 [0x1E70]={\
  direction=\"l\",\
 },\
 [0x1E71]={\
  direction=\"l\",\
 },\
 [0x1E72]={\
  direction=\"l\",\
 },\
 [0x1E73]={\
  direction=\"l\",\
 },\
 [0x1E74]={\
  direction=\"l\",\
 },\
 [0x1E75]={\
  direction=\"l\",\
 },\
 [0x1E76]={\
  direction=\"l\",\
 },\
 [0x1E77]={\
  direction=\"l\",\
 },\
 [0x1E78]={\
  direction=\"l\",\
 },\
 [0x1E79]={\
  direction=\"l\",\
 },\
 [0x1E7A]={\
  direction=\"l\",\
 },\
 [0x1E7B]={\
  direction=\"l\",\
 },\
 [0x1E7C]={\
  direction=\"l\",\
 },\
 [0x1E7D]={\
  direction=\"l\",\
 },\
 [0x1E7E]={\
  direction=\"l\",\
 },\
 [0x1E7F]={\
  direction=\"l\",\
 },\
 [0x1E80]={\
  direction=\"l\",\
 },\
 [0x1E81]={\
  direction=\"l\",\
 },\
 [0x1E82]={\
  direction=\"l\",\
 },\
 [0x1E83]={\
  direction=\"l\",\
 },\
 [0x1E84]={\
  direction=\"l\",\
 },\
 [0x1E85]={\
  direction=\"l\",\
 },\
 [0x1E86]={\
  direction=\"l\",\
 },\
 [0x1E87]={\
  direction=\"l\",\
 },\
 [0x1E88]={\
  direction=\"l\",\
 },\
 [0x1E89]={\
  direction=\"l\",\
 },\
 [0x1E8A]={\
  direction=\"l\",\
 },\
 [0x1E8B]={\
  direction=\"l\",\
 },\
 [0x1E8C]={\
  direction=\"l\",\
 },\
 [0x1E8D]={\
  direction=\"l\",\
 },\
 [0x1E8E]={\
  direction=\"l\",\
 },\
 [0x1E8F]={\
  direction=\"l\",\
 },\
 [0x1E90]={\
  direction=\"l\",\
 },\
 [0x1E91]={\
  direction=\"l\",\
 },\
 [0x1E92]={\
  direction=\"l\",\
 },\
 [0x1E93]={\
  direction=\"l\",\
 },\
 [0x1E94]={\
  direction=\"l\",\
 },\
 [0x1E95]={\
  direction=\"l\",\
 },\
 [0x1E96]={\
  direction=\"l\",\
 },\
 [0x1E97]={\
  direction=\"l\",\
 },\
 [0x1E98]={\
  direction=\"l\",\
 },\
 [0x1E99]={\
  direction=\"l\",\
 },\
 [0x1E9A]={\
  direction=\"l\",\
 },\
 [0x1E9B]={\
  direction=\"l\",\
 },\
 [0x1E9C]={\
  direction=\"l\",\
 },\
 [0x1E9D]={\
  direction=\"l\",\
 },\
 [0x1E9E]={\
  direction=\"l\",\
 },\
 [0x1E9F]={\
  direction=\"l\",\
 },\
 [0x1EA0]={\
  direction=\"l\",\
 },\
 [0x1EA1]={\
  direction=\"l\",\
 },\
 [0x1EA2]={\
  direction=\"l\",\
 },\
 [0x1EA3]={\
  direction=\"l\",\
 },\
 [0x1EA4]={\
  direction=\"l\",\
 },\
 [0x1EA5]={\
  direction=\"l\",\
 },\
 [0x1EA6]={\
  direction=\"l\",\
 },\
 [0x1EA7]={\
  direction=\"l\",\
 },\
 [0x1EA8]={\
  direction=\"l\",\
 },\
 [0x1EA9]={\
  direction=\"l\",\
 },\
 [0x1EAA]={\
  direction=\"l\",\
 },\
 [0x1EAB]={\
  direction=\"l\",\
 },\
 [0x1EAC]={\
  direction=\"l\",\
 },\
 [0x1EAD]={\
  direction=\"l\",\
 },\
 [0x1EAE]={\
  direction=\"l\",\
 },\
 [0x1EAF]={\
  direction=\"l\",\
 },\
 [0x1EB0]={\
  direction=\"l\",\
 },\
 [0x1EB1]={\
  direction=\"l\",\
 },\
 [0x1EB2]={\
  direction=\"l\",\
 },\
 [0x1EB3]={\
  direction=\"l\",\
 },\
 [0x1EB4]={\
  direction=\"l\",\
 },\
 [0x1EB5]={\
  direction=\"l\",\
 },\
 [0x1EB6]={\
  direction=\"l\",\
 },\
 [0x1EB7]={\
  direction=\"l\",\
 },\
 [0x1EB8]={\
  direction=\"l\",\
 },\
 [0x1EB9]={\
  direction=\"l\",\
 },\
 [0x1EBA]={\
  direction=\"l\",\
 },\
 [0x1EBB]={\
  direction=\"l\",\
 },\
 [0x1EBC]={\
  direction=\"l\",\
 },\
 [0x1EBD]={\
  direction=\"l\",\
 },\
 [0x1EBE]={\
  direction=\"l\",\
 },\
 [0x1EBF]={\
  direction=\"l\",\
 },\
 [0x1EC0]={\
  direction=\"l\",\
 },\
 [0x1EC1]={\
  direction=\"l\",\
 },\
 [0x1EC2]={\
  direction=\"l\",\
 },\
 [0x1EC3]={\
  direction=\"l\",\
 },\
 [0x1EC4]={\
  direction=\"l\",\
 },\
 [0x1EC5]={\
  direction=\"l\",\
 },\
 [0x1EC6]={\
  direction=\"l\",\
 },\
 [0x1EC7]={\
  direction=\"l\",\
 },\
 [0x1EC8]={\
  direction=\"l\",\
 },\
 [0x1EC9]={\
  direction=\"l\",\
 },\
 [0x1ECA]={\
  direction=\"l\",\
 },\
 [0x1ECB]={\
  direction=\"l\",\
 },\
 [0x1ECC]={\
  direction=\"l\",\
 },\
 [0x1ECD]={\
  direction=\"l\",\
 },\
 [0x1ECE]={\
  direction=\"l\",\
 },\
 [0x1ECF]={\
  direction=\"l\",\
 },\
 [0x1ED0]={\
  direction=\"l\",\
 },\
 [0x1ED1]={\
  direction=\"l\",\
 },\
 [0x1ED2]={\
  direction=\"l\",\
 },\
 [0x1ED3]={\
  direction=\"l\",\
 },\
 [0x1ED4]={\
  direction=\"l\",\
 },\
 [0x1ED5]={\
  direction=\"l\",\
 },\
 [0x1ED6]={\
  direction=\"l\",\
 },\
 [0x1ED7]={\
  direction=\"l\",\
 },\
 [0x1ED8]={\
  direction=\"l\",\
 },\
 [0x1ED9]={\
  direction=\"l\",\
 },\
 [0x1EDA]={\
  direction=\"l\",\
 },\
 [0x1EDB]={\
  direction=\"l\",\
 },\
 [0x1EDC]={\
  direction=\"l\",\
 },\
 [0x1EDD]={\
  direction=\"l\",\
 },\
 [0x1EDE]={\
  direction=\"l\",\
 },\
 [0x1EDF]={\
  direction=\"l\",\
 },\
 [0x1EE0]={\
  direction=\"l\",\
 },\
 [0x1EE1]={\
  direction=\"l\",\
 },\
 [0x1EE2]={\
  direction=\"l\",\
 },\
 [0x1EE3]={\
  direction=\"l\",\
 },\
 [0x1EE4]={\
  direction=\"l\",\
 },\
 [0x1EE5]={\
  direction=\"l\",\
 },\
 [0x1EE6]={\
  direction=\"l\",\
 },\
 [0x1EE7]={\
  direction=\"l\",\
 },\
 [0x1EE8]={\
  direction=\"l\",\
 },\
 [0x1EE9]={\
  direction=\"l\",\
 },\
 [0x1EEA]={\
  direction=\"l\",\
 },\
 [0x1EEB]={\
  direction=\"l\",\
 },\
 [0x1EEC]={\
  direction=\"l\",\
 },\
 [0x1EED]={\
  direction=\"l\",\
 },\
 [0x1EEE]={\
  direction=\"l\",\
 },\
 [0x1EEF]={\
  direction=\"l\",\
 },\
 [0x1EF0]={\
  direction=\"l\",\
 },\
 [0x1EF1]={\
  direction=\"l\",\
 },\
 [0x1EF2]={\
  direction=\"l\",\
 },\
 [0x1EF3]={\
  direction=\"l\",\
 },\
 [0x1EF4]={\
  direction=\"l\",\
 },\
 [0x1EF5]={\
  direction=\"l\",\
 },\
 [0x1EF6]={\
  direction=\"l\",\
 },\
 [0x1EF7]={\
  direction=\"l\",\
 },\
 [0x1EF8]={\
  direction=\"l\",\
 },\
 [0x1EF9]={\
  direction=\"l\",\
 },\
 [0x1EFA]={\
  direction=\"l\",\
 },\
 [0x1EFB]={\
  direction=\"l\",\
 },\
 [0x1EFC]={\
  direction=\"l\",\
 },\
 [0x1EFD]={\
  direction=\"l\",\
 },\
 [0x1EFE]={\
  direction=\"l\",\
 },\
 [0x1EFF]={\
  direction=\"l\",\
 },\
 [0x1F00]={\
  direction=\"l\",\
 },\
 [0x1F01]={\
  direction=\"l\",\
 },\
 [0x1F02]={\
  direction=\"l\",\
 },\
 [0x1F03]={\
  direction=\"l\",\
 },\
 [0x1F04]={\
  direction=\"l\",\
 },\
 [0x1F05]={\
  direction=\"l\",\
 },\
 [0x1F06]={\
  direction=\"l\",\
 },\
 [0x1F07]={\
  direction=\"l\",\
 },\
 [0x1F08]={\
  direction=\"l\",\
 },\
 [0x1F09]={\
  direction=\"l\",\
 },\
 [0x1F0A]={\
  direction=\"l\",\
 },\
 [0x1F0B]={\
  direction=\"l\",\
 },\
 [0x1F0C]={\
  direction=\"l\",\
 },\
 [0x1F0D]={\
  direction=\"l\",\
 },\
 [0x1F0E]={\
  direction=\"l\",\
 },\
 [0x1F0F]={\
  direction=\"l\",\
 },\
 [0x1F10]={\
  direction=\"l\",\
 },\
 [0x1F11]={\
  direction=\"l\",\
 },\
 [0x1F12]={\
  direction=\"l\",\
 },\
 [0x1F13]={\
  direction=\"l\",\
 },\
 [0x1F14]={\
  direction=\"l\",\
 },\
 [0x1F15]={\
  direction=\"l\",\
 },\
 [0x1F18]={\
  direction=\"l\",\
 },\
 [0x1F19]={\
  direction=\"l\",\
 },\
 [0x1F1A]={\
  direction=\"l\",\
 },\
 [0x1F1B]={\
  direction=\"l\",\
 },\
 [0x1F1C]={\
  direction=\"l\",\
 },\
 [0x1F1D]={\
  direction=\"l\",\
 },\
 [0x1F20]={\
  direction=\"l\",\
 },\
 [0x1F21]={\
  direction=\"l\",\
 },\
 [0x1F22]={\
  direction=\"l\",\
 },\
 [0x1F23]={\
  direction=\"l\",\
 },\
 [0x1F24]={\
  direction=\"l\",\
 },\
 [0x1F25]={\
  direction=\"l\",\
 },\
 [0x1F26]={\
  direction=\"l\",\
 },\
 [0x1F27]={\
  direction=\"l\",\
 },\
 [0x1F28]={\
  direction=\"l\",\
 },\
 [0x1F29]={\
  direction=\"l\",\
 },\
 [0x1F2A]={\
  direction=\"l\",\
 },\
 [0x1F2B]={\
  direction=\"l\",\
 },\
 [0x1F2C]={\
  direction=\"l\",\
 },\
 [0x1F2D]={\
  direction=\"l\",\
 },\
 [0x1F2E]={\
  direction=\"l\",\
 },\
 [0x1F2F]={\
  direction=\"l\",\
 },\
 [0x1F30]={\
  direction=\"l\",\
 },\
 [0x1F31]={\
  direction=\"l\",\
 },\
 [0x1F32]={\
  direction=\"l\",\
 },\
 [0x1F33]={\
  direction=\"l\",\
 },\
 [0x1F34]={\
  direction=\"l\",\
 },\
 [0x1F35]={\
  direction=\"l\",\
 },\
 [0x1F36]={\
  direction=\"l\",\
 },\
 [0x1F37]={\
  direction=\"l\",\
 },\
 [0x1F38]={\
  direction=\"l\",\
 },\
 [0x1F39]={\
  direction=\"l\",\
 },\
 [0x1F3A]={\
  direction=\"l\",\
 },\
 [0x1F3B]={\
  direction=\"l\",\
 },\
 [0x1F3C]={\
  direction=\"l\",\
 },\
 [0x1F3D]={\
  direction=\"l\",\
 },\
 [0x1F3E]={\
  direction=\"l\",\
 },\
 [0x1F3F]={\
  direction=\"l\",\
 },\
 [0x1F40]={\
  direction=\"l\",\
 },\
 [0x1F41]={\
  direction=\"l\",\
 },\
 [0x1F42]={\
  direction=\"l\",\
 },\
 [0x1F43]={\
  direction=\"l\",\
 },\
 [0x1F44]={\
  direction=\"l\",\
 },\
 [0x1F45]={\
  direction=\"l\",\
 },\
 [0x1F48]={\
  direction=\"l\",\
 },\
 [0x1F49]={\
  direction=\"l\",\
 },\
 [0x1F4A]={\
  direction=\"l\",\
 },\
 [0x1F4B]={\
  direction=\"l\",\
 },\
 [0x1F4C]={\
  direction=\"l\",\
 },\
 [0x1F4D]={\
  direction=\"l\",\
 },\
 [0x1F50]={\
  direction=\"l\",\
 },\
 [0x1F51]={\
  direction=\"l\",\
 },\
 [0x1F52]={\
  direction=\"l\",\
 },\
 [0x1F53]={\
  direction=\"l\",\
 },\
 [0x1F54]={\
  direction=\"l\",\
 },\
 [0x1F55]={\
  direction=\"l\",\
 },\
 [0x1F56]={\
  direction=\"l\",\
 },\
 [0x1F57]={\
  direction=\"l\",\
 },\
 [0x1F59]={\
  direction=\"l\",\
 },\
 [0x1F5B]={\
  direction=\"l\",\
 },\
 [0x1F5D]={\
  direction=\"l\",\
 },\
 [0x1F5F]={\
  direction=\"l\",\
 },\
 [0x1F60]={\
  direction=\"l\",\
 },\
 [0x1F61]={\
  direction=\"l\",\
 },\
 [0x1F62]={\
  direction=\"l\",\
 },\
 [0x1F63]={\
  direction=\"l\",\
 },\
 [0x1F64]={\
  direction=\"l\",\
 },\
 [0x1F65]={\
  direction=\"l\",\
 },\
 [0x1F66]={\
  direction=\"l\",\
 },\
 [0x1F67]={\
  direction=\"l\",\
 },\
 [0x1F68]={\
  direction=\"l\",\
 },\
 [0x1F69]={\
  direction=\"l\",\
 },\
 [0x1F6A]={\
  direction=\"l\",\
 },\
 [0x1F6B]={\
  direction=\"l\",\
 },\
 [0x1F6C]={\
  direction=\"l\",\
 },\
 [0x1F6D]={\
  direction=\"l\",\
 },\
 [0x1F6E]={\
  direction=\"l\",\
 },\
 [0x1F6F]={\
  direction=\"l\",\
 },\
 [0x1F70]={\
  direction=\"l\",\
 },\
 [0x1F71]={\
  direction=\"l\",\
 },\
 [0x1F72]={\
  direction=\"l\",\
 },\
 [0x1F73]={\
  direction=\"l\",\
 },\
 [0x1F74]={\
  direction=\"l\",\
 },\
 [0x1F75]={\
  direction=\"l\",\
 },\
 [0x1F76]={\
  direction=\"l\",\
 },\
 [0x1F77]={\
  direction=\"l\",\
 },\
 [0x1F78]={\
  direction=\"l\",\
 },\
 [0x1F79]={\
  direction=\"l\",\
 },\
 [0x1F7A]={\
  direction=\"l\",\
 },\
 [0x1F7B]={\
  direction=\"l\",\
 },\
 [0x1F7C]={\
  direction=\"l\",\
 },\
 [0x1F7D]={\
  direction=\"l\",\
 },\
 [0x1F80]={\
  direction=\"l\",\
 },\
 [0x1F81]={\
  direction=\"l\",\
 },\
 [0x1F82]={\
  direction=\"l\",\
 },\
 [0x1F83]={\
  direction=\"l\",\
 },\
 [0x1F84]={\
  direction=\"l\",\
 },\
 [0x1F85]={\
  direction=\"l\",\
 },\
 [0x1F86]={\
  direction=\"l\",\
 },\
 [0x1F87]={\
  direction=\"l\",\
 },\
 [0x1F88]={\
  direction=\"l\",\
 },\
 [0x1F89]={\
  direction=\"l\",\
 },\
 [0x1F8A]={\
  direction=\"l\",\
 },\
 [0x1F8B]={\
  direction=\"l\",\
 },\
 [0x1F8C]={\
  direction=\"l\",\
 },\
 [0x1F8D]={\
  direction=\"l\",\
 },\
 [0x1F8E]={\
  direction=\"l\",\
 },\
 [0x1F8F]={\
  direction=\"l\",\
 },\
 [0x1F90]={\
  direction=\"l\",\
 },\
 [0x1F91]={\
  direction=\"l\",\
 },\
 [0x1F92]={\
  direction=\"l\",\
 },\
 [0x1F93]={\
  direction=\"l\",\
 },\
 [0x1F94]={\
  direction=\"l\",\
 },\
 [0x1F95]={\
  direction=\"l\",\
 },\
 [0x1F96]={\
  direction=\"l\",\
 },\
 [0x1F97]={\
  direction=\"l\",\
 },\
 [0x1F98]={\
  direction=\"l\",\
 },\
 [0x1F99]={\
  direction=\"l\",\
 },\
 [0x1F9A]={\
  direction=\"l\",\
 },\
 [0x1F9B]={\
  direction=\"l\",\
 },\
 [0x1F9C]={\
  direction=\"l\",\
 },\
 [0x1F9D]={\
  direction=\"l\",\
 },\
 [0x1F9E]={\
  direction=\"l\",\
 },\
 [0x1F9F]={\
  direction=\"l\",\
 },\
 [0x1FA0]={\
  direction=\"l\",\
 },\
 [0x1FA1]={\
  direction=\"l\",\
 },\
 [0x1FA2]={\
  direction=\"l\",\
 },\
 [0x1FA3]={\
  direction=\"l\",\
 },\
 [0x1FA4]={\
  direction=\"l\",\
 },\
 [0x1FA5]={\
  direction=\"l\",\
 },\
 [0x1FA6]={\
  direction=\"l\",\
 },\
 [0x1FA7]={\
  direction=\"l\",\
 },\
 [0x1FA8]={\
  direction=\"l\",\
 },\
 [0x1FA9]={\
  direction=\"l\",\
 },\
 [0x1FAA]={\
  direction=\"l\",\
 },\
 [0x1FAB]={\
  direction=\"l\",\
 },\
 [0x1FAC]={\
  direction=\"l\",\
 },\
 [0x1FAD]={\
  direction=\"l\",\
 },\
 [0x1FAE]={\
  direction=\"l\",\
 },\
 [0x1FAF]={\
  direction=\"l\",\
 },\
 [0x1FB0]={\
  direction=\"l\",\
 },\
 [0x1FB1]={\
  direction=\"l\",\
 },\
 [0x1FB2]={\
  direction=\"l\",\
 },\
 [0x1FB3]={\
  direction=\"l\",\
 },\
 [0x1FB4]={\
  direction=\"l\",\
 },\
 [0x1FB6]={\
  direction=\"l\",\
 },\
 [0x1FB7]={\
  direction=\"l\",\
 },\
 [0x1FB8]={\
  direction=\"l\",\
 },\
 [0x1FB9]={\
  direction=\"l\",\
 },\
 [0x1FBA]={\
  direction=\"l\",\
 },\
 [0x1FBB]={\
  direction=\"l\",\
 },\
 [0x1FBC]={\
  direction=\"l\",\
 },\
 [0x1FBD]={\
  direction=\"on\",\
 },\
 [0x1FBE]={\
  direction=\"l\",\
 },\
 [0x1FBF]={\
  direction=\"on\",\
 },\
 [0x1FC0]={\
  direction=\"on\",\
 },\
 [0x1FC1]={\
  direction=\"on\",\
 },\
 [0x1FC2]={\
  direction=\"l\",\
 },\
 [0x1FC3]={\
  direction=\"l\",\
 },\
 [0x1FC4]={\
  direction=\"l\",\
 },\
 [0x1FC6]={\
  direction=\"l\",\
 },\
 [0x1FC7]={\
  direction=\"l\",\
 },\
 [0x1FC8]={\
  direction=\"l\",\
 },\
 [0x1FC9]={\
  direction=\"l\",\
 },\
 [0x1FCA]={\
  direction=\"l\",\
 },\
 [0x1FCB]={\
  direction=\"l\",\
 },\
 [0x1FCC]={\
  direction=\"l\",\
 },\
 [0x1FCD]={\
  direction=\"on\",\
 },\
 [0x1FCE]={\
  direction=\"on\",\
 },\
 [0x1FCF]={\
  direction=\"on\",\
 },\
 [0x1FD0]={\
  direction=\"l\",\
 },\
 [0x1FD1]={\
  direction=\"l\",\
 },\
 [0x1FD2]={\
  direction=\"l\",\
 },\
 [0x1FD3]={\
  direction=\"l\",\
 },\
 [0x1FD6]={\
  direction=\"l\",\
 },\
 [0x1FD7]={\
  direction=\"l\",\
 },\
 [0x1FD8]={\
  direction=\"l\",\
 },\
 [0x1FD9]={\
  direction=\"l\",\
 },\
 [0x1FDA]={\
  direction=\"l\",\
 },\
 [0x1FDB]={\
  direction=\"l\",\
 },\
 [0x1FDD]={\
  direction=\"on\",\
 },\
 [0x1FDE]={\
  direction=\"on\",\
 },\
 [0x1FDF]={\
  direction=\"on\",\
 },\
 [0x1FE0]={\
  direction=\"l\",\
 },\
 [0x1FE1]={\
  direction=\"l\",\
 },\
 [0x1FE2]={\
  direction=\"l\",\
 },\
 [0x1FE3]={\
  direction=\"l\",\
 },\
 [0x1FE4]={\
  direction=\"l\",\
 },\
 [0x1FE5]={\
  direction=\"l\",\
 },\
 [0x1FE6]={\
  direction=\"l\",\
 },\
 [0x1FE7]={\
  direction=\"l\",\
 },\
 [0x1FE8]={\
  direction=\"l\",\
 },\
 [0x1FE9]={\
  direction=\"l\",\
 },\
 [0x1FEA]={\
  direction=\"l\",\
 },\
 [0x1FEB]={\
  direction=\"l\",\
 },\
 [0x1FEC]={\
  direction=\"l\",\
 },\
 [0x1FED]={\
  direction=\"on\",\
 },\
 [0x1FEE]={\
  direction=\"on\",\
 },\
 [0x1FEF]={\
  direction=\"on\",\
 },\
 [0x1FF2]={\
  direction=\"l\",\
 },\
 [0x1FF3]={\
  direction=\"l\",\
 },\
 [0x1FF4]={\
  direction=\"l\",\
 },\
 [0x1FF6]={\
  direction=\"l\",\
 },\
 [0x1FF7]={\
  direction=\"l\",\
 },\
 [0x1FF8]={\
  direction=\"l\",\
 },\
 [0x1FF9]={\
  direction=\"l\",\
 },\
 [0x1FFA]={\
  direction=\"l\",\
 },\
 [0x1FFB]={\
  direction=\"l\",\
 },\
 [0x1FFC]={\
  direction=\"l\",\
 },\
 [0x1FFD]={\
  direction=\"on\",\
 },\
 [0x1FFE]={\
  direction=\"on\",\
 },\
 [0x2000]={\
  direction=\"ws\",\
 },\
 [0x2001]={\
  direction=\"ws\",\
 },\
 [0x2002]={\
  direction=\"ws\",\
 },\
 [0x2003]={\
  direction=\"ws\",\
 },\
 [0x2004]={\
  direction=\"ws\",\
 },\
 [0x2005]={\
  direction=\"ws\",\
 },\
 [0x2006]={\
  direction=\"ws\",\
 },\
 [0x2007]={\
  direction=\"ws\",\
 },\
 [0x2008]={\
  direction=\"ws\",\
 },\
 [0x2009]={\
  direction=\"ws\",\
 },\
 [0x200A]={\
  direction=\"ws\",\
 },\
 [0x200B]={\
  direction=\"bn\",\
 },\
 [0x200C]={\
  direction=\"bn\",\
 },\
 [0x200D]={\
  direction=\"bn\",\
 },\
 [0x200E]={\
  direction=\"l\",\
 },\
 [0x200F]={\
  direction=\"r\",\
 },\
 [0x2010]={\
  direction=\"on\",\
 },\
 [0x2011]={\
  direction=\"on\",\
 },\
 [0x2012]={\
  direction=\"on\",\
 },\
 [0x2013]={\
  direction=\"on\",\
 },\
 [0x2014]={\
  direction=\"on\",\
 },\
 [0x2015]={\
  direction=\"on\",\
 },\
 [0x2016]={\
  direction=\"on\",\
 },\
 [0x2017]={\
  direction=\"on\",\
 },\
 [0x2018]={\
  direction=\"on\",\
 },\
 [0x2019]={\
  direction=\"on\",\
 },\
 [0x201A]={\
  direction=\"on\",\
 },\
 [0x201B]={\
  direction=\"on\",\
 },\
 [0x201C]={\
  direction=\"on\",\
 },\
 [0x201D]={\
  direction=\"on\",\
 },\
 [0x201E]={\
  direction=\"on\",\
 },\
 [0x201F]={\
  direction=\"on\",\
 },\
 [0x2020]={\
  direction=\"on\",\
 },\
 [0x2021]={\
  direction=\"on\",\
 },\
 [0x2022]={\
  direction=\"on\",\
 },\
 [0x2023]={\
  direction=\"on\",\
 },\
 [0x2024]={\
  direction=\"on\",\
 },\
 [0x2025]={\
  direction=\"on\",\
 },\
 [0x2026]={\
  direction=\"on\",\
 },\
 [0x2027]={\
  direction=\"on\",\
 },\
 [0x2028]={\
  direction=\"ws\",\
 },\
 [0x2029]={\
  direction=\"b\",\
 },\
 [0x202A]={\
  direction=\"lre\",\
 },\
 [0x202B]={\
  direction=\"rle\",\
 },\
 [0x202C]={\
  direction=\"pdf\",\
 },\
 [0x202D]={\
  direction=\"lro\",\
 },\
 [0x202E]={\
  direction=\"rlo\",\
 },\
 [0x202F]={\
  direction=\"cs\",\
 },\
 [0x2030]={\
  direction=\"et\",\
 },\
 [0x2031]={\
  direction=\"et\",\
 },\
 [0x2032]={\
  direction=\"et\",\
 },\
 [0x2033]={\
  direction=\"et\",\
 },\
 [0x2034]={\
  direction=\"et\",\
 },\
 [0x2035]={\
  direction=\"on\",\
 },\
 [0x2036]={\
  direction=\"on\",\
 },\
 [0x2037]={\
  direction=\"on\",\
 },\
 [0x2038]={\
  direction=\"on\",\
 },\
 [0x2039]={\
  direction=\"on\",\
  mirror=0x203A,\
 },\
 [0x203A]={\
  direction=\"on\",\
  mirror=0x2039,\
 },\
 [0x203B]={\
  direction=\"on\",\
 },\
 [0x203C]={\
  direction=\"on\",\
 },\
 [0x203D]={\
  direction=\"on\",\
 },\
 [0x203E]={\
  direction=\"on\",\
 },\
 [0x203F]={\
  direction=\"on\",\
 },\
 [0x2040]={\
  direction=\"on\",\
 },\
 [0x2041]={\
  direction=\"on\",\
 },\
 [0x2042]={\
  direction=\"on\",\
 },\
 [0x2043]={\
  direction=\"on\",\
 },\
 [0x2044]={\
  direction=\"cs\",\
 },\
 [0x2045]={\
  direction=\"on\",\
  mirror=0x2046,\
 },\
 [0x2046]={\
  direction=\"on\",\
  mirror=0x2045,\
 },\
 [0x2047]={\
  direction=\"on\",\
 },\
 [0x2048]={\
  direction=\"on\",\
 },\
 [0x2049]={\
  direction=\"on\",\
 },\
 [0x204A]={\
  direction=\"on\",\
 },\
 [0x204B]={\
  direction=\"on\",\
 },\
 [0x204C]={\
  direction=\"on\",\
 },\
 [0x204D]={\
  direction=\"on\",\
 },\
 [0x204E]={\
  direction=\"on\",\
 },\
 [0x204F]={\
  direction=\"on\",\
 },\
 [0x2050]={\
  direction=\"on\",\
 },\
 [0x2051]={\
  direction=\"on\",\
 },\
 [0x2052]={\
  direction=\"on\",\
 },\
 [0x2053]={\
  direction=\"on\",\
 },\
 [0x2054]={\
  direction=\"on\",\
 },\
 [0x2055]={\
  direction=\"on\",\
 },\
 [0x2056]={\
  direction=\"on\",\
 },\
 [0x2057]={\
  direction=\"on\",\
 },\
 [0x2058]={\
  direction=\"on\",\
 },\
 [0x2059]={\
  direction=\"on\",\
 },\
 [0x205A]={\
  direction=\"on\",\
 },\
 [0x205B]={\
  direction=\"on\",\
 },\
 [0x205C]={\
  direction=\"on\",\
 },\
 [0x205D]={\
  direction=\"on\",\
 },\
 [0x205E]={\
  direction=\"on\",\
 },\
 [0x205F]={\
  direction=\"ws\",\
 },\
 [0x2060]={\
  direction=\"bn\",\
 },\
 [0x2061]={\
  direction=\"bn\",\
 },\
 [0x2062]={\
  direction=\"bn\",\
 },\
 [0x2063]={\
  direction=\"bn\",\
 },\
 [0x2064]={\
  direction=\"bn\",\
 },\
 [0x206A]={\
  direction=\"bn\",\
 },\
 [0x206B]={\
  direction=\"bn\",\
 },\
 [0x206C]={\
  direction=\"bn\",\
 },\
 [0x206D]={\
  direction=\"bn\",\
 },\
 [0x206E]={\
  direction=\"bn\",\
 },\
 [0x206F]={\
  direction=\"bn\",\
 },\
 [0x2070]={\
  direction=\"en\",\
 },\
 [0x2071]={\
  direction=\"l\",\
 },\
 [0x2074]={\
  direction=\"en\",\
 },\
 [0x2075]={\
  direction=\"en\",\
 },\
 [0x2076]={\
  direction=\"en\",\
 },\
 [0x2077]={\
  direction=\"en\",\
 },\
 [0x2078]={\
  direction=\"en\",\
 },\
 [0x2079]={\
  direction=\"en\",\
 },\
 [0x207A]={\
  direction=\"es\",\
 },\
 [0x207B]={\
  direction=\"es\",\
 },\
 [0x207C]={\
  direction=\"on\",\
 },\
 [0x207D]={\
  direction=\"on\",\
  mirror=0x207E,\
 },\
 [0x207E]={\
  direction=\"on\",\
  mirror=0x207D,\
 },\
 [0x207F]={\
  direction=\"l\",\
 },\
 [0x2080]={\
  direction=\"en\",\
 },\
 [0x2081]={\
  direction=\"en\",\
 },\
 [0x2082]={\
  direction=\"en\",\
 },\
 [0x2083]={\
  direction=\"en\",\
 },\
 [0x2084]={\
  direction=\"en\",\
 },\
 [0x2085]={\
  direction=\"en\",\
 },\
 [0x2086]={\
  direction=\"en\",\
 },\
 [0x2087]={\
  direction=\"en\",\
 },\
 [0x2088]={\
  direction=\"en\",\
 },\
 [0x2089]={\
  direction=\"en\",\
 },\
 [0x208A]={\
  direction=\"es\",\
 },\
 [0x208B]={\
  direction=\"es\",\
 },\
 [0x208C]={\
  direction=\"on\",\
 },\
 [0x208D]={\
  direction=\"on\",\
  mirror=0x208E,\
 },\
 [0x208E]={\
  direction=\"on\",\
  mirror=0x208D,\
 },\
 [0x2090]={\
  direction=\"l\",\
 },\
 [0x2091]={\
  direction=\"l\",\
 },\
 [0x2092]={\
  direction=\"l\",\
 },\
 [0x2093]={\
  direction=\"l\",\
 },\
 [0x2094]={\
  direction=\"l\",\
 },\
 [0x2095]={\
  direction=\"l\",\
 },\
 [0x2096]={\
  direction=\"l\",\
 },\
 [0x2097]={\
  direction=\"l\",\
 },\
 [0x2098]={\
  direction=\"l\",\
 },\
 [0x2099]={\
  direction=\"l\",\
 },\
 [0x209A]={\
  direction=\"l\",\
 },\
 [0x209B]={\
  direction=\"l\",\
 },\
 [0x209C]={\
  direction=\"l\",\
 },\
 [0x20A0]={\
  direction=\"et\",\
 },\
 [0x20A1]={\
  direction=\"et\",\
 },\
 [0x20A2]={\
  direction=\"et\",\
 },\
 [0x20A3]={\
  direction=\"et\",\
 },\
 [0x20A4]={\
  direction=\"et\",\
 },\
 [0x20A5]={\
  direction=\"et\",\
 },\
 [0x20A6]={\
  direction=\"et\",\
 },\
 [0x20A7]={\
  direction=\"et\",\
 },\
 [0x20A8]={\
  direction=\"et\",\
 },\
 [0x20A9]={\
  direction=\"et\",\
 },\
 [0x20AA]={\
  direction=\"et\",\
 },\
 [0x20AB]={\
  direction=\"et\",\
 },\
 [0x20AC]={\
  direction=\"et\",\
 },\
 [0x20AD]={\
  direction=\"et\",\
 },\
 [0x20AE]={\
  direction=\"et\",\
 },\
 [0x20AF]={\
  direction=\"et\",\
 },\
 [0x20B0]={\
  direction=\"et\",\
 },\
 [0x20B1]={\
  direction=\"et\",\
 },\
 [0x20B2]={\
  direction=\"et\",\
 },\
 [0x20B3]={\
  direction=\"et\",\
 },\
 [0x20B4]={\
  direction=\"et\",\
 },\
 [0x20B5]={\
  direction=\"et\",\
 },\
 [0x20B6]={\
  direction=\"et\",\
 },\
 [0x20B7]={\
  direction=\"et\",\
 },\
 [0x20B8]={\
  direction=\"et\",\
 },\
 [0x20B9]={\
  direction=\"et\",\
 },\
 [0x20BA]={\
  direction=\"et\",\
 },\
 [0x20D0]={\
  direction=\"nsm\",\
 },\
 [0x20D1]={\
  direction=\"nsm\",\
 },\
 [0x20D2]={\
  direction=\"nsm\",\
 },\
 [0x20D3]={\
  direction=\"nsm\",\
 },\
 [0x20D4]={\
  direction=\"nsm\",\
 },\
 [0x20D5]={\
  direction=\"nsm\",\
 },\
 [0x20D6]={\
  direction=\"nsm\",\
 },\
 [0x20D7]={\
  direction=\"nsm\",\
 },\
 [0x20D8]={\
  direction=\"nsm\",\
 },\
 [0x20D9]={\
  direction=\"nsm\",\
 },\
 [0x20DA]={\
  direction=\"nsm\",\
 },\
 [0x20DB]={\
  direction=\"nsm\",\
 },\
 [0x20DC]={\
  direction=\"nsm\",\
 },\
 [0x20DD]={\
  direction=\"nsm\",\
 },\
 [0x20DE]={\
  direction=\"nsm\",\
 },\
 [0x20DF]={\
  direction=\"nsm\",\
 },\
 [0x20E0]={\
  direction=\"nsm\",\
 },\
 [0x20E1]={\
  direction=\"nsm\",\
 },\
 [0x20E2]={\
  direction=\"nsm\",\
 },\
 [0x20E3]={\
  direction=\"nsm\",\
 },\
 [0x20E4]={\
  direction=\"nsm\",\
 },\
 [0x20E5]={\
  direction=\"nsm\",\
 },\
 [0x20E6]={\
  direction=\"nsm\",\
 },\
 [0x20E7]={\
  direction=\"nsm\",\
 },\
 [0x20E8]={\
  direction=\"nsm\",\
 },\
 [0x20E9]={\
  direction=\"nsm\",\
 },\
 [0x20EA]={\
  direction=\"nsm\",\
 },\
 [0x20EB]={\
  direction=\"nsm\",\
 },\
 [0x20EC]={\
  direction=\"nsm\",\
 },\
 [0x20ED]={\
  direction=\"nsm\",\
 },\
 [0x20EE]={\
  direction=\"nsm\",\
 },\
 [0x20EF]={\
  direction=\"nsm\",\
 },\
 [0x20F0]={\
  direction=\"nsm\",\
 },\
 [0x2100]={\
  direction=\"on\",\
 },\
 [0x2101]={\
  direction=\"on\",\
 },\
 [0x2102]={\
  direction=\"l\",\
 },\
 [0x2103]={\
  direction=\"on\",\
 },\
 [0x2104]={\
  direction=\"on\",\
 },\
 [0x2105]={\
  direction=\"on\",\
 },\
 [0x2106]={\
  direction=\"on\",\
 },\
 [0x2107]={\
  direction=\"l\",\
 },\
 [0x2108]={\
  direction=\"on\",\
 },\
 [0x2109]={\
  direction=\"on\",\
 },\
 [0x210A]={\
  direction=\"l\",\
 },\
 [0x210B]={\
  direction=\"l\",\
 },\
 [0x210C]={\
  direction=\"l\",\
 },\
 [0x210D]={\
  direction=\"l\",\
 },\
 [0x210E]={\
  direction=\"l\",\
 },\
 [0x210F]={\
  direction=\"l\",\
 },\
 [0x2110]={\
  direction=\"l\",\
 },\
 [0x2111]={\
  direction=\"l\",\
 },\
 [0x2112]={\
  direction=\"l\",\
 },\
 [0x2113]={\
  direction=\"l\",\
 },\
 [0x2114]={\
  direction=\"on\",\
 },\
 [0x2115]={\
  direction=\"l\",\
 },\
 [0x2116]={\
  direction=\"on\",\
 },\
 [0x2117]={\
  direction=\"on\",\
 },\
 [0x2118]={\
  direction=\"on\",\
 },\
 [0x2119]={\
  direction=\"l\",\
 },\
 [0x211A]={\
  direction=\"l\",\
 },\
 [0x211B]={\
  direction=\"l\",\
 },\
 [0x211C]={\
  direction=\"l\",\
 },\
 [0x211D]={\
  direction=\"l\",\
 },\
 [0x211E]={\
  direction=\"on\",\
 },\
 [0x211F]={\
  direction=\"on\",\
 },\
 [0x2120]={\
  direction=\"on\",\
 },\
 [0x2121]={\
  direction=\"on\",\
 },\
 [0x2122]={\
  direction=\"on\",\
 },\
 [0x2123]={\
  direction=\"on\",\
 },\
 [0x2124]={\
  direction=\"l\",\
 },\
 [0x2125]={\
  direction=\"on\",\
 },\
 [0x2126]={\
  direction=\"l\",\
 },\
 [0x2127]={\
  direction=\"on\",\
 },\
 [0x2128]={\
  direction=\"l\",\
 },\
 [0x2129]={\
  direction=\"on\",\
 },\
 [0x212A]={\
  direction=\"l\",\
 },\
 [0x212B]={\
  direction=\"l\",\
 },\
 [0x212C]={\
  direction=\"l\",\
 },\
 [0x212D]={\
  direction=\"l\",\
 },\
 [0x212E]={\
  direction=\"et\",\
 },\
 [0x212F]={\
  direction=\"l\",\
 },\
 [0x2130]={\
  direction=\"l\",\
 },\
 [0x2131]={\
  direction=\"l\",\
 },\
 [0x2132]={\
  direction=\"l\",\
 },\
 [0x2133]={\
  direction=\"l\",\
 },\
 [0x2134]={\
  direction=\"l\",\
 },\
 [0x2135]={\
  direction=\"l\",\
 },\
 [0x2136]={\
  direction=\"l\",\
 },\
 [0x2137]={\
  direction=\"l\",\
 },\
 [0x2138]={\
  direction=\"l\",\
 },\
 [0x2139]={\
  direction=\"l\",\
 },\
 [0x213A]={\
  direction=\"on\",\
 },\
 [0x213B]={\
  direction=\"on\",\
 },\
 [0x213C]={\
  direction=\"l\",\
 },\
 [0x213D]={\
  direction=\"l\",\
 },\
 [0x213E]={\
  direction=\"l\",\
 },\
 [0x213F]={\
  direction=\"l\",\
 },\
 [0x2140]={\
  direction=\"on\",\
 },\
 [0x2141]={\
  direction=\"on\",\
 },\
 [0x2142]={\
  direction=\"on\",\
 },\
 [0x2143]={\
  comment=\"mathname=sansLmirrored\",\
  direction=\"on\",\
 },\
 [0x2144]={\
  direction=\"on\",\
 },\
 [0x2145]={\
  direction=\"l\",\
 },\
 [0x2146]={\
  direction=\"l\",\
 },\
 [0x2147]={\
  direction=\"l\",\
 },\
 [0x2148]={\
  direction=\"l\",\
 },\
 [0x2149]={\
  direction=\"l\",\
 },\
 [0x214A]={\
  direction=\"on\",\
 },\
 [0x214B]={\
  direction=\"on\",\
 },\
 [0x214C]={\
  direction=\"on\",\
 },\
 [0x214D]={\
  direction=\"on\",\
 },\
 [0x214E]={\
  direction=\"l\",\
 },\
 [0x214F]={\
  direction=\"l\",\
 },\
 [0x2150]={\
  direction=\"on\",\
 },\
 [0x2151]={\
  direction=\"on\",\
 },\
 [0x2152]={\
  direction=\"on\",\
 },\
 [0x2153]={\
  direction=\"on\",\
 },\
 [0x2154]={\
  direction=\"on\",\
 },\
 [0x2155]={\
  direction=\"on\",\
 },\
 [0x2156]={\
  direction=\"on\",\
 },\
 [0x2157]={\
  direction=\"on\",\
 },\
 [0x2158]={\
  direction=\"on\",\
 },\
 [0x2159]={\
  direction=\"on\",\
 },\
 [0x215A]={\
  direction=\"on\",\
 },\
 [0x215B]={\
  direction=\"on\",\
 },\
 [0x215C]={\
  direction=\"on\",\
 },\
 [0x215D]={\
  direction=\"on\",\
 },\
 [0x215E]={\
  direction=\"on\",\
 },\
 [0x215F]={\
  direction=\"on\",\
 },\
 [0x2160]={\
  direction=\"l\",\
 },\
 [0x2161]={\
  direction=\"l\",\
 },\
 [0x2162]={\
  direction=\"l\",\
 },\
 [0x2163]={\
  direction=\"l\",\
 },\
 [0x2164]={\
  direction=\"l\",\
 },\
 [0x2165]={\
  direction=\"l\",\
 },\
 [0x2166]={\
  direction=\"l\",\
 },\
 [0x2167]={\
  direction=\"l\",\
 },\
 [0x2168]={\
  direction=\"l\",\
 },\
 [0x2169]={\
  direction=\"l\",\
 },\
 [0x216A]={\
  direction=\"l\",\
 },\
 [0x216B]={\
  direction=\"l\",\
 },\
 [0x216C]={\
  direction=\"l\",\
 },\
 [0x216D]={\
  direction=\"l\",\
 },\
 [0x216E]={\
  direction=\"l\",\
 },\
 [0x216F]={\
  direction=\"l\",\
 },\
 [0x2170]={\
  direction=\"l\",\
 },\
 [0x2171]={\
  direction=\"l\",\
 },\
 [0x2172]={\
  direction=\"l\",\
 },\
 [0x2173]={\
  direction=\"l\",\
 },\
 [0x2174]={\
  direction=\"l\",\
 },\
 [0x2175]={\
  direction=\"l\",\
 },\
 [0x2176]={\
  direction=\"l\",\
 },\
 [0x2177]={\
  direction=\"l\",\
 },\
 [0x2178]={\
  direction=\"l\",\
 },\
 [0x2179]={\
  direction=\"l\",\
 },\
 [0x217A]={\
  direction=\"l\",\
 },\
 [0x217B]={\
  direction=\"l\",\
 },\
 [0x217C]={\
  direction=\"l\",\
 },\
 [0x217D]={\
  direction=\"l\",\
 },\
 [0x217E]={\
  direction=\"l\",\
 },\
 [0x217F]={\
  direction=\"l\",\
 },\
 [0x2180]={\
  direction=\"l\",\
 },\
 [0x2181]={\
  direction=\"l\",\
 },\
 [0x2182]={\
  direction=\"l\",\
 },\
 [0x2183]={\
  direction=\"l\",\
 },\
 [0x2184]={\
  direction=\"l\",\
 },\
 [0x2185]={\
  direction=\"l\",\
 },\
 [0x2186]={\
  direction=\"l\",\
 },\
 [0x2187]={\
  direction=\"l\",\
 },\
 [0x2188]={\
  direction=\"l\",\
 },\
 [0x2189]={\
  direction=\"on\",\
 },\
 [0x2190]={\
  direction=\"on\",\
 },\
 [0x2191]={\
  direction=\"on\",\
 },\
 [0x2192]={\
  direction=\"on\",\
 },\
 [0x2193]={\
  direction=\"on\",\
 },\
 [0x2194]={\
  direction=\"on\",\
 },\
 [0x2195]={\
  direction=\"on\",\
 },\
 [0x2196]={\
  direction=\"on\",\
 },\
 [0x2197]={\
  direction=\"on\",\
 },\
 [0x2198]={\
  direction=\"on\",\
 },\
 [0x2199]={\
  direction=\"on\",\
 },\
 [0x219A]={\
  direction=\"on\",\
 },\
 [0x219B]={\
  direction=\"on\",\
 },\
 [0x219C]={\
  direction=\"on\",\
 },\
 [0x219D]={\
  direction=\"on\",\
 },\
 [0x219E]={\
  direction=\"on\",\
 },\
 [0x219F]={\
  direction=\"on\",\
 },\
 [0x21A0]={\
  direction=\"on\",\
 },\
 [0x21A1]={\
  direction=\"on\",\
 },\
 [0x21A2]={\
  direction=\"on\",\
 },\
 [0x21A3]={\
  direction=\"on\",\
 },\
 [0x21A4]={\
  direction=\"on\",\
 },\
 [0x21A5]={\
  direction=\"on\",\
 },\
 [0x21A6]={\
  direction=\"on\",\
 },\
 [0x21A7]={\
  direction=\"on\",\
 },\
 [0x21A8]={\
  direction=\"on\",\
 },\
 [0x21A9]={\
  direction=\"on\",\
 },\
 [0x21AA]={\
  direction=\"on\",\
 },\
 [0x21AB]={\
  direction=\"on\",\
 },\
 [0x21AC]={\
  direction=\"on\",\
 },\
 [0x21AD]={\
  direction=\"on\",\
 },\
 [0x21AE]={\
  direction=\"on\",\
 },\
 [0x21AF]={\
  direction=\"on\",\
 },\
 [0x21B0]={\
  direction=\"on\",\
 },\
 [0x21B1]={\
  direction=\"on\",\
 },\
 [0x21B2]={\
  direction=\"on\",\
 },\
 [0x21B3]={\
  direction=\"on\",\
 },\
 [0x21B4]={\
  direction=\"on\",\
 },\
 [0x21B5]={\
  direction=\"on\",\
 },\
 [0x21B6]={\
  direction=\"on\",\
 },\
 [0x21B7]={\
  direction=\"on\",\
 },\
 [0x21B8]={\
  direction=\"on\",\
 },\
 [0x21B9]={\
  direction=\"on\",\
 },\
 [0x21BA]={\
  direction=\"on\",\
 },\
 [0x21BB]={\
  direction=\"on\",\
 },\
 [0x21BC]={\
  direction=\"on\",\
 },\
 [0x21BD]={\
  direction=\"on\",\
 },\
 [0x21BE]={\
  direction=\"on\",\
 },\
 [0x21BF]={\
  direction=\"on\",\
 },\
 [0x21C0]={\
  direction=\"on\",\
 },\
 [0x21C1]={\
  direction=\"on\",\
 },\
 [0x21C2]={\
  direction=\"on\",\
 },\
 [0x21C3]={\
  direction=\"on\",\
 },\
 [0x21C4]={\
  direction=\"on\",\
 },\
 [0x21C5]={\
  direction=\"on\",\
 },\
 [0x21C6]={\
  direction=\"on\",\
 },\
 [0x21C7]={\
  direction=\"on\",\
 },\
 [0x21C8]={\
  direction=\"on\",\
 },\
 [0x21C9]={\
  direction=\"on\",\
 },\
 [0x21CA]={\
  direction=\"on\",\
 },\
 [0x21CB]={\
  direction=\"on\",\
 },\
 [0x21CC]={\
  direction=\"on\",\
 },\
 [0x21CD]={\
  direction=\"on\",\
 },\
 [0x21CE]={\
  direction=\"on\",\
 },\
 [0x21CF]={\
  direction=\"on\",\
 },\
 [0x21D0]={\
  direction=\"on\",\
 },\
 [0x21D1]={\
  direction=\"on\",\
 },\
 [0x21D2]={\
  direction=\"on\",\
 },\
 [0x21D3]={\
  direction=\"on\",\
 },\
 [0x21D4]={\
  direction=\"on\",\
 },\
 [0x21D5]={\
  direction=\"on\",\
 },\
 [0x21D6]={\
  direction=\"on\",\
 },\
 [0x21D7]={\
  direction=\"on\",\
 },\
 [0x21D8]={\
  direction=\"on\",\
 },\
 [0x21D9]={\
  direction=\"on\",\
 },\
 [0x21DA]={\
  direction=\"on\",\
 },\
 [0x21DB]={\
  direction=\"on\",\
 },\
 [0x21DC]={\
  direction=\"on\",\
 },\
 [0x21DD]={\
  direction=\"on\",\
 },\
 [0x21DE]={\
  direction=\"on\",\
 },\
 [0x21DF]={\
  direction=\"on\",\
 },\
 [0x21E0]={\
  direction=\"on\",\
 },\
 [0x21E1]={\
  direction=\"on\",\
 },\
 [0x21E2]={\
  direction=\"on\",\
 },\
 [0x21E3]={\
  direction=\"on\",\
 },\
 [0x21E4]={\
  direction=\"on\",\
 },\
 [0x21E5]={\
  direction=\"on\",\
 },\
 [0x21E6]={\
  direction=\"on\",\
 },\
 [0x21E7]={\
  direction=\"on\",\
 },\
 [0x21E8]={\
  direction=\"on\",\
 },\
 [0x21E9]={\
  direction=\"on\",\
 },\
 [0x21EA]={\
  direction=\"on\",\
 },\
 [0x21EB]={\
  direction=\"on\",\
 },\
 [0x21EC]={\
  direction=\"on\",\
 },\
 [0x21ED]={\
  direction=\"on\",\
 },\
 [0x21EE]={\
  direction=\"on\",\
 },\
 [0x21EF]={\
  direction=\"on\",\
 },\
 [0x21F0]={\
  direction=\"on\",\
 },\
 [0x21F1]={\
  direction=\"on\",\
 },\
 [0x21F2]={\
  direction=\"on\",\
 },\
 [0x21F3]={\
  direction=\"on\",\
 },\
 [0x21F4]={\
  direction=\"on\",\
 },\
 [0x21F5]={\
  direction=\"on\",\
 },\
 [0x21F6]={\
  direction=\"on\",\
 },\
 [0x21F7]={\
  direction=\"on\",\
 },\
 [0x21F8]={\
  direction=\"on\",\
 },\
 [0x21F9]={\
  direction=\"on\",\
 },\
 [0x21FA]={\
  direction=\"on\",\
 },\
 [0x21FB]={\
  direction=\"on\",\
 },\
 [0x21FC]={\
  direction=\"on\",\
 },\
 [0x21FD]={\
  direction=\"on\",\
 },\
 [0x21FE]={\
  direction=\"on\",\
 },\
 [0x21FF]={\
  direction=\"on\",\
 },\
 [0x2200]={\
  direction=\"on\",\
 },\
 [0x2201]={\
  direction=\"on\",\
 },\
 [0x2202]={\
  direction=\"on\",\
 },\
 [0x2203]={\
  direction=\"on\",\
 },\
 [0x2204]={\
  direction=\"on\",\
 },\
 [0x2205]={\
  direction=\"on\",\
 },\
 [0x2206]={\
  direction=\"on\",\
 },\
 [0x2207]={\
  direction=\"on\",\
 },\
 [0x2208]={\
  direction=\"on\",\
  mirror=0x220B,\
 },\
 [0x2209]={\
  direction=\"on\",\
  mirror=0x220C,\
 },\
 [0x220A]={\
  direction=\"on\",\
  mirror=0x220D,\
 },\
 [0x220B]={\
  direction=\"on\",\
  mirror=0x2208,\
 },\
 [0x220C]={\
  direction=\"on\",\
  mirror=0x2209,\
 },\
 [0x220D]={\
  direction=\"on\",\
  mirror=0x220A,\
 },\
 [0x220E]={\
  direction=\"on\",\
 },\
 [0x220F]={\
  direction=\"on\",\
 },\
 [0x2210]={\
  direction=\"on\",\
 },\
 [0x2211]={\
  direction=\"on\",\
 },\
 [0x2212]={\
  direction=\"es\",\
 },\
 [0x2213]={\
  direction=\"et\",\
 },\
 [0x2214]={\
  direction=\"on\",\
 },\
 [0x2215]={\
  direction=\"on\",\
  mirror=0x29F5,\
 },\
 [0x2216]={\
  direction=\"on\",\
 },\
 [0x2217]={\
  direction=\"on\",\
 },\
 [0x2218]={\
  direction=\"on\",\
 },\
 [0x2219]={\
  direction=\"on\",\
 },\
 [0x221A]={\
  direction=\"on\",\
 },\
 [0x221B]={\
  direction=\"on\",\
 },\
 [0x221C]={\
  direction=\"on\",\
 },\
 [0x221D]={\
  direction=\"on\",\
 },\
 [0x221E]={\
  direction=\"on\",\
 },\
 [0x221F]={\
  direction=\"on\",\
 },\
 [0x2220]={\
  direction=\"on\",\
 },\
 [0x2221]={\
  direction=\"on\",\
 },\
 [0x2222]={\
  direction=\"on\",\
 },\
 [0x2223]={\
  direction=\"on\",\
 },\
 [0x2224]={\
  direction=\"on\",\
 },\
 [0x2225]={\
  direction=\"on\",\
 },\
 [0x2226]={\
  direction=\"on\",\
 },\
 [0x2227]={\
  direction=\"on\",\
 },\
 [0x2228]={\
  direction=\"on\",\
 },\
 [0x2229]={\
  direction=\"on\",\
 },\
 [0x222A]={\
  direction=\"on\",\
 },\
 [0x222B]={\
  direction=\"on\",\
 },\
 [0x222C]={\
  direction=\"on\",\
 },\
 [0x222D]={\
  direction=\"on\",\
 },\
 [0x222E]={\
  direction=\"on\",\
 },\
 [0x222F]={\
  direction=\"on\",\
 },\
 [0x2230]={\
  direction=\"on\",\
 },\
 [0x2231]={\
  direction=\"on\",\
 },\
 [0x2232]={\
  direction=\"on\",\
 },\
 [0x2233]={\
  direction=\"on\",\
 },\
 [0x2234]={\
  direction=\"on\",\
 },\
 [0x2235]={\
  direction=\"on\",\
 },\
 [0x2236]={\
  direction=\"on\",\
 },\
 [0x2237]={\
  direction=\"on\",\
 },\
 [0x2238]={\
  direction=\"on\",\
 },\
 [0x2239]={\
  direction=\"on\",\
 },\
 [0x223A]={\
  direction=\"on\",\
 },\
 [0x223B]={\
  direction=\"on\",\
 },\
 [0x223C]={\
  direction=\"on\",\
  mirror=0x223D,\
 },\
 [0x223D]={\
  direction=\"on\",\
  mirror=0x223C,\
 },\
 [0x223E]={\
  direction=\"on\",\
 },\
 [0x223F]={\
  direction=\"on\",\
 },\
 [0x2240]={\
  direction=\"on\",\
 },\
 [0x2241]={\
  direction=\"on\",\
 },\
 [0x2242]={\
  direction=\"on\",\
 },\
 [0x2243]={\
  direction=\"on\",\
  mirror=0x22CD,\
 },\
 [0x2244]={\
  direction=\"on\",\
 },\
 [0x2245]={\
  direction=\"on\",\
 },\
 [0x2246]={\
  direction=\"on\",\
 },\
 [0x2247]={\
  direction=\"on\",\
 },\
 [0x2248]={\
  direction=\"on\",\
 },\
 [0x2249]={\
  direction=\"on\",\
 },\
 [0x224A]={\
  direction=\"on\",\
 },\
 [0x224B]={\
  direction=\"on\",\
 },\
 [0x224C]={\
  direction=\"on\",\
 },\
 [0x224D]={\
  direction=\"on\",\
 },\
 [0x224E]={\
  direction=\"on\",\
 },\
 [0x224F]={\
  direction=\"on\",\
 },\
 [0x2250]={\
  direction=\"on\",\
 },\
 [0x2251]={\
  direction=\"on\",\
 },\
 [0x2252]={\
  direction=\"on\",\
  mirror=0x2253,\
 },\
 [0x2253]={\
  direction=\"on\",\
  mirror=0x2252,\
 },\
 [0x2254]={\
  direction=\"on\",\
  mirror=0x2255,\
 },\
 [0x2255]={\
  direction=\"on\",\
  mirror=0x2254,\
 },\
 [0x2256]={\
  direction=\"on\",\
 },\
 [0x2257]={\
  direction=\"on\",\
 },\
 [0x2258]={\
  direction=\"on\",\
 },\
 [0x2259]={\
  direction=\"on\",\
 },\
 [0x225A]={\
  direction=\"on\",\
 },\
 [0x225B]={\
  direction=\"on\",\
 },\
 [0x225C]={\
  direction=\"on\",\
 },\
 [0x225D]={\
  direction=\"on\",\
 },\
 [0x225E]={\
  direction=\"on\",\
 },\
 [0x225F]={\
  direction=\"on\",\
 },\
 [0x2260]={\
  direction=\"on\",\
 },\
 [0x2261]={\
  direction=\"on\",\
 },\
 [0x2262]={\
  direction=\"on\",\
 },\
 [0x2263]={\
  direction=\"on\",\
 },\
 [0x2264]={\
  direction=\"on\",\
  mirror=0x2265,\
 },\
 [0x2265]={\
  direction=\"on\",\
  mirror=0x2264,\
 },\
 [0x2266]={\
  direction=\"on\",\
  mirror=0x2267,\
 },\
 [0x2267]={\
  direction=\"on\",\
  mirror=0x2266,\
 },\
 [0x2268]={\
  direction=\"on\",\
  mirror=0x2269,\
 },\
 [0x2269]={\
  direction=\"on\",\
  mirror=0x2268,\
 },\
 [0x226A]={\
  direction=\"on\",\
  mirror=0x226B,\
 },\
 [0x226B]={\
  direction=\"on\",\
  mirror=0x226A,\
 },\
 [0x226C]={\
  direction=\"on\",\
 },\
 [0x226D]={\
  direction=\"on\",\
 },\
 [0x226E]={\
  direction=\"on\",\
  mirror=0x226F,\
 },\
 [0x226F]={\
  direction=\"on\",\
  mirror=0x226E,\
 },\
 [0x2270]={\
  direction=\"on\",\
  mirror=0x2271,\
 },\
 [0x2271]={\
  direction=\"on\",\
  mirror=0x2270,\
 },\
 [0x2272]={\
  direction=\"on\",\
  mirror=0x2273,\
 },\
 [0x2273]={\
  direction=\"on\",\
  mirror=0x2272,\
 },\
 [0x2274]={\
  direction=\"on\",\
  mirror=0x2275,\
 },\
 [0x2275]={\
  direction=\"on\",\
  mirror=0x2274,\
 },\
 [0x2276]={\
  direction=\"on\",\
  mirror=0x2277,\
 },\
 [0x2277]={\
  direction=\"on\",\
  mirror=0x2276,\
 },\
 [0x2278]={\
  direction=\"on\",\
  mirror=0x2279,\
 },\
 [0x2279]={\
  direction=\"on\",\
  mirror=0x2278,\
 },\
 [0x227A]={\
  direction=\"on\",\
  mirror=0x227B,\
 },\
 [0x227B]={\
  direction=\"on\",\
  mirror=0x227A,\
 },\
 [0x227C]={\
  direction=\"on\",\
  mirror=0x227D,\
 },\
 [0x227D]={\
  direction=\"on\",\
  mirror=0x227C,\
 },\
 [0x227E]={\
  direction=\"on\",\
  mirror=0x227F,\
 },\
 [0x227F]={\
  direction=\"on\",\
  mirror=0x227E,\
 },\
 [0x2280]={\
  direction=\"on\",\
  mirror=0x2281,\
 },\
 [0x2281]={\
  direction=\"on\",\
  mirror=0x2280,\
 },\
 [0x2282]={\
  direction=\"on\",\
  mirror=0x2283,\
 },\
 [0x2283]={\
  direction=\"on\",\
  mirror=0x2282,\
 },\
 [0x2284]={\
  direction=\"on\",\
  mirror=0x2285,\
 },\
 [0x2285]={\
  direction=\"on\",\
  mirror=0x2284,\
 },\
 [0x2286]={\
  direction=\"on\",\
  mirror=0x2287,\
 },\
 [0x2287]={\
  direction=\"on\",\
  mirror=0x2286,\
 },\
 [0x2288]={\
  direction=\"on\",\
  mirror=0x2289,\
 },\
 [0x2289]={\
  direction=\"on\",\
  mirror=0x2288,\
 },\
 [0x228A]={\
  direction=\"on\",\
  mirror=0x228B,\
 },\
 [0x228B]={\
  direction=\"on\",\
  mirror=0x228A,\
 },\
 [0x228C]={\
  direction=\"on\",\
 },\
 [0x228D]={\
  direction=\"on\",\
 },\
 [0x228E]={\
  direction=\"on\",\
 },\
 [0x228F]={\
  direction=\"on\",\
  mirror=0x2290,\
 },\
 [0x2290]={\
  direction=\"on\",\
  mirror=0x228F,\
 },\
 [0x2291]={\
  direction=\"on\",\
  mirror=0x2292,\
 },\
 [0x2292]={\
  direction=\"on\",\
  mirror=0x2291,\
 },\
 [0x2293]={\
  direction=\"on\",\
 },\
 [0x2294]={\
  direction=\"on\",\
 },\
 [0x2295]={\
  direction=\"on\",\
 },\
 [0x2296]={\
  direction=\"on\",\
 },\
 [0x2297]={\
  direction=\"on\",\
 },\
 [0x2298]={\
  direction=\"on\",\
  mirror=0x29B8,\
 },\
 [0x2299]={\
  direction=\"on\",\
 },\
 [0x229A]={\
  direction=\"on\",\
 },\
 [0x229B]={\
  direction=\"on\",\
 },\
 [0x229C]={\
  direction=\"on\",\
 },\
 [0x229D]={\
  direction=\"on\",\
 },\
 [0x229E]={\
  direction=\"on\",\
 },\
 [0x229F]={\
  direction=\"on\",\
 },\
 [0x22A0]={\
  direction=\"on\",\
 },\
 [0x22A1]={\
  direction=\"on\",\
 },\
 [0x22A2]={\
  direction=\"on\",\
  mirror=0x22A3,\
 },\
 [0x22A3]={\
  direction=\"on\",\
  mirror=0x22A2,\
 },\
 [0x22A4]={\
  direction=\"on\",\
 },\
 [0x22A5]={\
  direction=\"on\",\
 },\
 [0x22A6]={\
  direction=\"on\",\
  mirror=0x2ADE,\
 },\
 [0x22A7]={\
  direction=\"on\",\
 },\
 [0x22A8]={\
  direction=\"on\",\
  mirror=0x2AE4,\
 },\
 [0x22A9]={\
  direction=\"on\",\
  mirror=0x2AE3,\
 },\
 [0x22AA]={\
  direction=\"on\",\
 },\
 [0x22AB]={\
  direction=\"on\",\
  mirror=0x2AE5,\
 },\
 [0x22AC]={\
  direction=\"on\",\
 },\
 [0x22AD]={\
  direction=\"on\",\
 },\
 [0x22AE]={\
  direction=\"on\",\
 },\
 [0x22AF]={\
  direction=\"on\",\
 },\
 [0x22B0]={\
  direction=\"on\",\
  mirror=0x22B1,\
 },\
 [0x22B1]={\
  direction=\"on\",\
  mirror=0x22B0,\
 },\
 [0x22B2]={\
  direction=\"on\",\
  mirror=0x22B3,\
 },\
 [0x22B3]={\
  direction=\"on\",\
  mirror=0x22B2,\
 },\
 [0x22B4]={\
  direction=\"on\",\
  mirror=0x22B5,\
 },\
 [0x22B5]={\
  direction=\"on\",\
  mirror=0x22B4,\
 },\
 [0x22B6]={\
  direction=\"on\",\
  mirror=0x22B7,\
 },\
 [0x22B7]={\
  direction=\"on\",\
  mirror=0x22B6,\
 },\
 [0x22B8]={\
  direction=\"on\",\
 },\
 [0x22B9]={\
  direction=\"on\",\
 },\
 [0x22BA]={\
  direction=\"on\",\
 },\
 [0x22BB]={\
  direction=\"on\",\
 },\
 [0x22BC]={\
  direction=\"on\",\
 },\
 [0x22BD]={\
  direction=\"on\",\
 },\
 [0x22BE]={\
  direction=\"on\",\
 },\
 [0x22BF]={\
  direction=\"on\",\
 },\
 [0x22C0]={\
  direction=\"on\",\
 },\
 [0x22C1]={\
  direction=\"on\",\
 },\
 [0x22C2]={\
  direction=\"on\",\
 },\
 [0x22C3]={\
  direction=\"on\",\
 },\
 [0x22C4]={\
  direction=\"on\",\
 },\
 [0x22C5]={\
  direction=\"on\",\
 },\
 [0x22C6]={\
  direction=\"on\",\
 },\
 [0x22C7]={\
  direction=\"on\",\
 },\
 [0x22C8]={\
  direction=\"on\",\
 },\
 [0x22C9]={\
  direction=\"on\",\
  mirror=0x22CA,\
 },\
 [0x22CA]={\
  direction=\"on\",\
  mirror=0x22C9,\
 },\
 [0x22CB]={\
  direction=\"on\",\
  mirror=0x22CC,\
 },\
 [0x22CC]={\
  direction=\"on\",\
  mirror=0x22CB,\
 },\
 [0x22CD]={\
  direction=\"on\",\
  mirror=0x2243,\
 },\
 [0x22CE]={\
  direction=\"on\",\
 },\
 [0x22CF]={\
  direction=\"on\",\
 },\
 [0x22D0]={\
  direction=\"on\",\
  mirror=0x22D1,\
 },\
 [0x22D1]={\
  direction=\"on\",\
  mirror=0x22D0,\
 },\
 [0x22D2]={\
  direction=\"on\",\
 },\
 [0x22D3]={\
  direction=\"on\",\
 },\
 [0x22D4]={\
  direction=\"on\",\
 },\
 [0x22D5]={\
  direction=\"on\",\
 },\
 [0x22D6]={\
  direction=\"on\",\
  mirror=0x22D7,\
 },\
 [0x22D7]={\
  direction=\"on\",\
  mirror=0x22D6,\
 },\
 [0x22D8]={\
  direction=\"on\",\
  mirror=0x22D9,\
 },\
 [0x22D9]={\
  direction=\"on\",\
  mirror=0x22D8,\
 },\
 [0x22DA]={\
  direction=\"on\",\
  mirror=0x22DB,\
 },\
 [0x22DB]={\
  direction=\"on\",\
  mirror=0x22DA,\
 },\
 [0x22DC]={\
  direction=\"on\",\
  mirror=0x22DD,\
 },\
 [0x22DD]={\
  direction=\"on\",\
  mirror=0x22DC,\
 },\
 [0x22DE]={\
  direction=\"on\",\
  mirror=0x22DF,\
 },\
 [0x22DF]={\
  direction=\"on\",\
  mirror=0x22DE,\
 },\
 [0x22E0]={\
  direction=\"on\",\
  mirror=0x22E1,\
 },\
 [0x22E1]={\
  direction=\"on\",\
  mirror=0x22E0,\
 },\
 [0x22E2]={\
  direction=\"on\",\
  mirror=0x22E3,\
 },\
 [0x22E3]={\
  direction=\"on\",\
  mirror=0x22E2,\
 },\
 [0x22E4]={\
  direction=\"on\",\
  mirror=0x22E5,\
 },\
 [0x22E5]={\
  direction=\"on\",\
  mirror=0x22E4,\
 },\
 [0x22E6]={\
  direction=\"on\",\
  mirror=0x22E7,\
 },\
 [0x22E7]={\
  direction=\"on\",\
  mirror=0x22E6,\
 },\
 [0x22E8]={\
  direction=\"on\",\
  mirror=0x22E9,\
 },\
 [0x22E9]={\
  direction=\"on\",\
  mirror=0x22E8,\
 },\
 [0x22EA]={\
  direction=\"on\",\
  mirror=0x22EB,\
 },\
 [0x22EB]={\
  direction=\"on\",\
  mirror=0x22EA,\
 },\
 [0x22EC]={\
  direction=\"on\",\
  mirror=0x22ED,\
 },\
 [0x22ED]={\
  direction=\"on\",\
  mirror=0x22EC,\
 },\
 [0x22EE]={\
  direction=\"on\",\
 },\
 [0x22EF]={\
  direction=\"on\",\
 },\
 [0x22F0]={\
  direction=\"on\",\
  mirror=0x22F1,\
 },\
 [0x22F1]={\
  direction=\"on\",\
  mirror=0x22F0,\
 },\
 [0x22F2]={\
  direction=\"on\",\
  mirror=0x22FA,\
 },\
 [0x22F3]={\
  direction=\"on\",\
  mirror=0x22FB,\
 },\
 [0x22F4]={\
  direction=\"on\",\
  mirror=0x22FC,\
 },\
 [0x22F5]={\
  direction=\"on\",\
 },\
 [0x22F6]={\
  direction=\"on\",\
  mirror=0x22FD,\
 },\
 [0x22F7]={\
  direction=\"on\",\
  mirror=0x22FE,\
 },\
 [0x22F8]={\
  direction=\"on\",\
 },\
 [0x22F9]={\
  direction=\"on\",\
 },\
 [0x22FA]={\
  direction=\"on\",\
  mirror=0x22F2,\
 },\
 [0x22FB]={\
  direction=\"on\",\
  mirror=0x22F3,\
 },\
 [0x22FC]={\
  direction=\"on\",\
  mirror=0x22F4,\
 },\
 [0x22FD]={\
  direction=\"on\",\
  mirror=0x22F6,\
 },\
 [0x22FE]={\
  direction=\"on\",\
  mirror=0x22F7,\
 },\
 [0x22FF]={\
  direction=\"on\",\
 },\
 [0x2300]={\
  direction=\"on\",\
 },\
 [0x2301]={\
  direction=\"on\",\
 },\
 [0x2302]={\
  direction=\"on\",\
 },\
 [0x2303]={\
  direction=\"on\",\
 },\
 [0x2304]={\
  direction=\"on\",\
 },\
 [0x2305]={\
  direction=\"on\",\
 },\
 [0x2306]={\
  direction=\"on\",\
 },\
 [0x2307]={\
  direction=\"on\",\
 },\
 [0x2308]={\
  direction=\"on\",\
  mirror=0x2309,\
 },\
 [0x2309]={\
  direction=\"on\",\
  mirror=0x2308,\
 },\
 [0x230A]={\
  direction=\"on\",\
  mirror=0x230B,\
 },\
 [0x230B]={\
  direction=\"on\",\
  mirror=0x230A,\
 },\
 [0x230C]={\
  direction=\"on\",\
 },\
 [0x230D]={\
  direction=\"on\",\
 },\
 [0x230E]={\
  direction=\"on\",\
 },\
 [0x230F]={\
  direction=\"on\",\
 },\
 [0x2310]={\
  direction=\"on\",\
 },\
 [0x2311]={\
  direction=\"on\",\
 },\
 [0x2312]={\
  direction=\"on\",\
 },\
 [0x2313]={\
  direction=\"on\",\
 },\
 [0x2314]={\
  direction=\"on\",\
 },\
 [0x2315]={\
  direction=\"on\",\
 },\
 [0x2316]={\
  direction=\"on\",\
 },\
 [0x2317]={\
  direction=\"on\",\
 },\
 [0x2318]={\
  direction=\"on\",\
 },\
 [0x2319]={\
  direction=\"on\",\
 },\
 [0x231A]={\
  direction=\"on\",\
 },\
 [0x231B]={\
  direction=\"on\",\
 },\
 [0x231C]={\
  direction=\"on\",\
 },\
 [0x231D]={\
  direction=\"on\",\
 },\
 [0x231E]={\
  direction=\"on\",\
 },\
 [0x231F]={\
  direction=\"on\",\
 },\
 [0x2320]={\
  direction=\"on\",\
 },\
 [0x2321]={\
  direction=\"on\",\
 },\
 [0x2322]={\
  direction=\"on\",\
 },\
 [0x2323]={\
  direction=\"on\",\
 },\
 [0x2324]={\
  direction=\"on\",\
 },\
 [0x2325]={\
  direction=\"on\",\
 },\
 [0x2326]={\
  direction=\"on\",\
 },\
 [0x2327]={\
  direction=\"on\",\
 },\
 [0x2328]={\
  direction=\"on\",\
 },\
 [0x2329]={\
  direction=\"on\",\
  mirror=0x232A,\
 },\
 [0x232A]={\
  direction=\"on\",\
  mirror=0x2329,\
 },\
 [0x232B]={\
  direction=\"on\",\
 },\
 [0x232C]={\
  direction=\"on\",\
 },\
 [0x232D]={\
  direction=\"on\",\
 },\
 [0x232E]={\
  direction=\"on\",\
 },\
 [0x232F]={\
  direction=\"on\",\
 },\
 [0x2330]={\
  direction=\"on\",\
 },\
 [0x2331]={\
  direction=\"on\",\
 },\
 [0x2332]={\
  direction=\"on\",\
 },\
 [0x2333]={\
  direction=\"on\",\
 },\
 [0x2334]={\
  direction=\"on\",\
 },\
 [0x2335]={\
  direction=\"on\",\
 },\
 [0x2336]={\
  direction=\"l\",\
 },\
 [0x2337]={\
  direction=\"l\",\
 },\
 [0x2338]={\
  direction=\"l\",\
 },\
 [0x2339]={\
  direction=\"l\",\
 },\
 [0x233A]={\
  direction=\"l\",\
 },\
 [0x233B]={\
  direction=\"l\",\
 },\
 [0x233C]={\
  direction=\"l\",\
 },\
 [0x233D]={\
  direction=\"l\",\
 },\
 [0x233E]={\
  direction=\"l\",\
 },\
 [0x233F]={\
  direction=\"l\",\
 },\
 [0x2340]={\
  direction=\"l\",\
 },\
 [0x2341]={\
  direction=\"l\",\
 },\
 [0x2342]={\
  direction=\"l\",\
 },\
 [0x2343]={\
  direction=\"l\",\
 },\
 [0x2344]={\
  direction=\"l\",\
 },\
 [0x2345]={\
  direction=\"l\",\
 },\
 [0x2346]={\
  direction=\"l\",\
 },\
 [0x2347]={\
  direction=\"l\",\
 },\
 [0x2348]={\
  direction=\"l\",\
 },\
 [0x2349]={\
  direction=\"l\",\
 },\
 [0x234A]={\
  direction=\"l\",\
 },\
 [0x234B]={\
  direction=\"l\",\
 },\
 [0x234C]={\
  direction=\"l\",\
 },\
 [0x234D]={\
  direction=\"l\",\
 },\
 [0x234E]={\
  direction=\"l\",\
 },\
 [0x234F]={\
  direction=\"l\",\
 },\
 [0x2350]={\
  direction=\"l\",\
 },\
 [0x2351]={\
  direction=\"l\",\
 },\
 [0x2352]={\
  direction=\"l\",\
 },\
 [0x2353]={\
  direction=\"l\",\
 },\
 [0x2354]={\
  direction=\"l\",\
 },\
 [0x2355]={\
  direction=\"l\",\
 },\
 [0x2356]={\
  direction=\"l\",\
 },\
 [0x2357]={\
  direction=\"l\",\
 },\
 [0x2358]={\
  direction=\"l\",\
 },\
 [0x2359]={\
  direction=\"l\",\
 },\
 [0x235A]={\
  direction=\"l\",\
 },\
 [0x235B]={\
  direction=\"l\",\
 },\
 [0x235C]={\
  direction=\"l\",\
 },\
 [0x235D]={\
  direction=\"l\",\
 },\
 [0x235E]={\
  direction=\"l\",\
 },\
 [0x235F]={\
  direction=\"l\",\
 },\
 [0x2360]={\
  direction=\"l\",\
 },\
 [0x2361]={\
  direction=\"l\",\
 },\
 [0x2362]={\
  direction=\"l\",\
 },\
 [0x2363]={\
  direction=\"l\",\
 },\
 [0x2364]={\
  direction=\"l\",\
 },\
 [0x2365]={\
  direction=\"l\",\
 },\
 [0x2366]={\
  direction=\"l\",\
 },\
 [0x2367]={\
  direction=\"l\",\
 },\
 [0x2368]={\
  direction=\"l\",\
 },\
 [0x2369]={\
  direction=\"l\",\
 },\
 [0x236A]={\
  direction=\"l\",\
 },\
 [0x236B]={\
  direction=\"l\",\
 },\
 [0x236C]={\
  direction=\"l\",\
 },\
 [0x236D]={\
  direction=\"l\",\
 },\
 [0x236E]={\
  direction=\"l\",\
 },\
 [0x236F]={\
  direction=\"l\",\
 },\
 [0x2370]={\
  direction=\"l\",\
 },\
 [0x2371]={\
  direction=\"l\",\
 },\
 [0x2372]={\
  direction=\"l\",\
 },\
 [0x2373]={\
  direction=\"l\",\
 },\
 [0x2374]={\
  direction=\"l\",\
 },\
 [0x2375]={\
  direction=\"l\",\
 },\
 [0x2376]={\
  direction=\"l\",\
 },\
 [0x2377]={\
  direction=\"l\",\
 },\
 [0x2378]={\
  direction=\"l\",\
 },\
 [0x2379]={\
  direction=\"l\",\
 },\
 [0x237A]={\
  direction=\"l\",\
 },\
 [0x237B]={\
  direction=\"on\",\
 },\
 [0x237C]={\
  direction=\"on\",\
 },\
 [0x237D]={\
  direction=\"on\",\
 },\
 [0x237E]={\
  direction=\"on\",\
 },\
 [0x237F]={\
  direction=\"on\",\
 },\
 [0x2380]={\
  direction=\"on\",\
 },\
 [0x2381]={\
  direction=\"on\",\
 },\
 [0x2382]={\
  direction=\"on\",\
 },\
 [0x2383]={\
  direction=\"on\",\
 },\
 [0x2384]={\
  direction=\"on\",\
 },\
 [0x2385]={\
  direction=\"on\",\
 },\
 [0x2386]={\
  direction=\"on\",\
 },\
 [0x2387]={\
  direction=\"on\",\
 },\
 [0x2388]={\
  direction=\"on\",\
 },\
 [0x2389]={\
  direction=\"on\",\
 },\
 [0x238A]={\
  direction=\"on\",\
 },\
 [0x238B]={\
  direction=\"on\",\
 },\
 [0x238C]={\
  direction=\"on\",\
 },\
 [0x238D]={\
  direction=\"on\",\
 },\
 [0x238E]={\
  direction=\"on\",\
 },\
 [0x238F]={\
  direction=\"on\",\
 },\
 [0x2390]={\
  direction=\"on\",\
 },\
 [0x2391]={\
  direction=\"on\",\
 },\
 [0x2392]={\
  direction=\"on\",\
 },\
 [0x2393]={\
  direction=\"on\",\
 },\
 [0x2394]={\
  direction=\"on\",\
 },\
 [0x2395]={\
  direction=\"l\",\
 },\
 [0x2396]={\
  direction=\"on\",\
 },\
 [0x2397]={\
  direction=\"on\",\
 },\
 [0x2398]={\
  direction=\"on\",\
 },\
 [0x2399]={\
  direction=\"on\",\
 },\
 [0x239A]={\
  direction=\"on\",\
 },\
 [0x239B]={\
  direction=\"on\",\
 },\
 [0x239C]={\
  direction=\"on\",\
 },\
 [0x239D]={\
  direction=\"on\",\
 },\
 [0x239E]={\
  direction=\"on\",\
 },\
 [0x239F]={\
  direction=\"on\",\
 },\
 [0x23A0]={\
  direction=\"on\",\
 },\
 [0x23A1]={\
  direction=\"on\",\
 },\
 [0x23A2]={\
  direction=\"on\",\
 },\
 [0x23A3]={\
  direction=\"on\",\
 },\
 [0x23A4]={\
  direction=\"on\",\
 },\
 [0x23A5]={\
  direction=\"on\",\
 },\
 [0x23A6]={\
  direction=\"on\",\
 },\
 [0x23A7]={\
  direction=\"on\",\
 },\
 [0x23A8]={\
  direction=\"on\",\
 },\
 [0x23A9]={\
  direction=\"on\",\
 },\
 [0x23AA]={\
  direction=\"on\",\
 },\
 [0x23AB]={\
  direction=\"on\",\
 },\
 [0x23AC]={\
  direction=\"on\",\
 },\
 [0x23AD]={\
  direction=\"on\",\
 },\
 [0x23AE]={\
  direction=\"on\",\
 },\
 [0x23AF]={\
  direction=\"on\",\
 },\
 [0x23B0]={\
  direction=\"on\",\
 },\
 [0x23B1]={\
  direction=\"on\",\
 },\
 [0x23B2]={\
  direction=\"on\",\
 },\
 [0x23B3]={\
  direction=\"on\",\
 },\
 [0x23B4]={\
  direction=\"on\",\
 },\
 [0x23B5]={\
  direction=\"on\",\
 },\
 [0x23B6]={\
  direction=\"on\",\
 },\
 [0x23B7]={\
  direction=\"on\",\
 },\
 [0x23B8]={\
  direction=\"on\",\
 },\
 [0x23B9]={\
  direction=\"on\",\
 },\
 [0x23BA]={\
  direction=\"on\",\
 },\
 [0x23BB]={\
  direction=\"on\",\
 },\
 [0x23BC]={\
  direction=\"on\",\
 },\
 [0x23BD]={\
  direction=\"on\",\
 },\
 [0x23BE]={\
  direction=\"on\",\
 },\
 [0x23BF]={\
  direction=\"on\",\
 },\
 [0x23C0]={\
  direction=\"on\",\
 },\
 [0x23C1]={\
  direction=\"on\",\
 },\
 [0x23C2]={\
  direction=\"on\",\
 },\
 [0x23C3]={\
  direction=\"on\",\
 },\
 [0x23C4]={\
  direction=\"on\",\
 },\
 [0x23C5]={\
  direction=\"on\",\
 },\
 [0x23C6]={\
  direction=\"on\",\
 },\
 [0x23C7]={\
  direction=\"on\",\
 },\
 [0x23C8]={\
  direction=\"on\",\
 },\
 [0x23C9]={\
  direction=\"on\",\
 },\
 [0x23CA]={\
  direction=\"on\",\
 },\
 [0x23CB]={\
  direction=\"on\",\
 },\
 [0x23CC]={\
  direction=\"on\",\
 },\
 [0x23CD]={\
  direction=\"on\",\
 },\
 [0x23CE]={\
  direction=\"on\",\
 },\
 [0x23CF]={\
  direction=\"on\",\
 },\
 [0x23D0]={\
  direction=\"on\",\
 },\
 [0x23D1]={\
  direction=\"on\",\
 },\
 [0x23D2]={\
  direction=\"on\",\
 },\
 [0x23D3]={\
  direction=\"on\",\
 },\
 [0x23D4]={\
  direction=\"on\",\
 },\
 [0x23D5]={\
  direction=\"on\",\
 },\
 [0x23D6]={\
  direction=\"on\",\
 },\
 [0x23D7]={\
  direction=\"on\",\
 },\
 [0x23D8]={\
  direction=\"on\",\
 },\
 [0x23D9]={\
  direction=\"on\",\
 },\
 [0x23DA]={\
  direction=\"on\",\
 },\
 [0x23DB]={\
  direction=\"on\",\
 },\
 [0x23DC]={\
  direction=\"on\",\
 },\
 [0x23DD]={\
  direction=\"on\",\
 },\
 [0x23DE]={\
  direction=\"on\",\
 },\
 [0x23DF]={\
  direction=\"on\",\
 },\
 [0x23E0]={\
  direction=\"on\",\
 },\
 [0x23E1]={\
  direction=\"on\",\
 },\
 [0x23E2]={\
  direction=\"on\",\
 },\
 [0x23E3]={\
  direction=\"on\",\
 },\
 [0x23E4]={\
  direction=\"on\",\
 },\
 [0x23E5]={\
  direction=\"on\",\
 },\
 [0x23E6]={\
  direction=\"on\",\
 },\
 [0x23E7]={\
  direction=\"on\",\
 },\
 [0x23E8]={\
  direction=\"on\",\
 },\
 [0x23E9]={\
  direction=\"on\",\
 },\
 [0x23EA]={\
  direction=\"on\",\
 },\
 [0x23EB]={\
  direction=\"on\",\
 },\
 [0x23EC]={\
  direction=\"on\",\
 },\
 [0x23ED]={\
  direction=\"on\",\
 },\
 [0x23EE]={\
  direction=\"on\",\
 },\
 [0x23EF]={\
  direction=\"on\",\
 },\
 [0x23F0]={\
  direction=\"on\",\
 },\
 [0x23F1]={\
  direction=\"on\",\
 },\
 [0x23F2]={\
  direction=\"on\",\
 },\
 [0x23F3]={\
  direction=\"on\",\
 },\
 [0x2400]={\
  direction=\"on\",\
 },\
 [0x2401]={\
  direction=\"on\",\
 },\
 [0x2402]={\
  direction=\"on\",\
 },\
 [0x2403]={\
  direction=\"on\",\
 },\
 [0x2404]={\
  direction=\"on\",\
 },\
 [0x2405]={\
  direction=\"on\",\
 },\
 [0x2406]={\
  direction=\"on\",\
 },\
 [0x2407]={\
  direction=\"on\",\
 },\
 [0x2408]={\
  direction=\"on\",\
 },\
 [0x2409]={\
  direction=\"on\",\
 },\
 [0x240A]={\
  direction=\"on\",\
 },\
 [0x240B]={\
  direction=\"on\",\
 },\
 [0x240C]={\
  direction=\"on\",\
 },\
 [0x240D]={\
  direction=\"on\",\
 },\
 [0x240E]={\
  direction=\"on\",\
 },\
 [0x240F]={\
  direction=\"on\",\
 },\
 [0x2410]={\
  direction=\"on\",\
 },\
 [0x2411]={\
  direction=\"on\",\
 },\
 [0x2412]={\
  direction=\"on\",\
 },\
 [0x2413]={\
  direction=\"on\",\
 },\
 [0x2414]={\
  direction=\"on\",\
 },\
 [0x2415]={\
  direction=\"on\",\
 },\
 [0x2416]={\
  direction=\"on\",\
 },\
 [0x2417]={\
  direction=\"on\",\
 },\
 [0x2418]={\
  direction=\"on\",\
 },\
 [0x2419]={\
  direction=\"on\",\
 },\
 [0x241A]={\
  direction=\"on\",\
 },\
 [0x241B]={\
  direction=\"on\",\
 },\
 [0x241C]={\
  direction=\"on\",\
 },\
 [0x241D]={\
  direction=\"on\",\
 },\
 [0x241E]={\
  direction=\"on\",\
 },\
 [0x241F]={\
  direction=\"on\",\
 },\
 [0x2420]={\
  direction=\"on\",\
 },\
 [0x2421]={\
  direction=\"on\",\
 },\
 [0x2422]={\
  direction=\"on\",\
 },\
 [0x2423]={\
  direction=\"on\",\
 },\
 [0x2424]={\
  direction=\"on\",\
 },\
 [0x2425]={\
  direction=\"on\",\
 },\
 [0x2426]={\
  direction=\"on\",\
 },\
 [0x2440]={\
  direction=\"on\",\
 },\
 [0x2441]={\
  direction=\"on\",\
 },\
 [0x2442]={\
  direction=\"on\",\
 },\
 [0x2443]={\
  direction=\"on\",\
 },\
 [0x2444]={\
  direction=\"on\",\
 },\
 [0x2445]={\
  direction=\"on\",\
 },\
 [0x2446]={\
  direction=\"on\",\
 },\
 [0x2447]={\
  direction=\"on\",\
 },\
 [0x2448]={\
  direction=\"on\",\
 },\
 [0x2449]={\
  direction=\"on\",\
 },\
 [0x244A]={\
  direction=\"on\",\
 },\
 [0x2460]={\
  direction=\"on\",\
 },\
 [0x2461]={\
  direction=\"on\",\
 },\
 [0x2462]={\
  direction=\"on\",\
 },\
 [0x2463]={\
  direction=\"on\",\
 },\
 [0x2464]={\
  direction=\"on\",\
 },\
 [0x2465]={\
  direction=\"on\",\
 },\
 [0x2466]={\
  direction=\"on\",\
 },\
 [0x2467]={\
  direction=\"on\",\
 },\
 [0x2468]={\
  direction=\"on\",\
 },\
 [0x2469]={\
  direction=\"on\",\
 },\
 [0x246A]={\
  direction=\"on\",\
 },\
 [0x246B]={\
  direction=\"on\",\
 },\
 [0x246C]={\
  direction=\"on\",\
 },\
 [0x246D]={\
  direction=\"on\",\
 },\
 [0x246E]={\
  direction=\"on\",\
 },\
 [0x246F]={\
  direction=\"on\",\
 },\
 [0x2470]={\
  direction=\"on\",\
 },\
 [0x2471]={\
  direction=\"on\",\
 },\
 [0x2472]={\
  direction=\"on\",\
 },\
 [0x2473]={\
  direction=\"on\",\
 },\
 [0x2474]={\
  direction=\"on\",\
 },\
 [0x2475]={\
  direction=\"on\",\
 },\
 [0x2476]={\
  direction=\"on\",\
 },\
 [0x2477]={\
  direction=\"on\",\
 },\
 [0x2478]={\
  direction=\"on\",\
 },\
 [0x2479]={\
  direction=\"on\",\
 },\
 [0x247A]={\
  direction=\"on\",\
 },\
 [0x247B]={\
  direction=\"on\",\
 },\
 [0x247C]={\
  direction=\"on\",\
 },\
 [0x247D]={\
  direction=\"on\",\
 },\
 [0x247E]={\
  direction=\"on\",\
 },\
 [0x247F]={\
  direction=\"on\",\
 },\
 [0x2480]={\
  direction=\"on\",\
 },\
 [0x2481]={\
  direction=\"on\",\
 },\
 [0x2482]={\
  direction=\"on\",\
 },\
 [0x2483]={\
  direction=\"on\",\
 },\
 [0x2484]={\
  direction=\"on\",\
 },\
 [0x2485]={\
  direction=\"on\",\
 },\
 [0x2486]={\
  direction=\"on\",\
 },\
 [0x2487]={\
  direction=\"on\",\
 },\
 [0x2488]={\
  direction=\"en\",\
 },\
 [0x2489]={\
  direction=\"en\",\
 },\
 [0x248A]={\
  direction=\"en\",\
 },\
 [0x248B]={\
  direction=\"en\",\
 },\
 [0x248C]={\
  direction=\"en\",\
 },\
 [0x248D]={\
  direction=\"en\",\
 },\
 [0x248E]={\
  direction=\"en\",\
 },\
 [0x248F]={\
  direction=\"en\",\
 },\
 [0x2490]={\
  direction=\"en\",\
 },\
 [0x2491]={\
  direction=\"en\",\
 },\
 [0x2492]={\
  direction=\"en\",\
 },\
 [0x2493]={\
  direction=\"en\",\
 },\
 [0x2494]={\
  direction=\"en\",\
 },\
 [0x2495]={\
  direction=\"en\",\
 },\
 [0x2496]={\
  direction=\"en\",\
 },\
 [0x2497]={\
  direction=\"en\",\
 },\
 [0x2498]={\
  direction=\"en\",\
 },\
 [0x2499]={\
  direction=\"en\",\
 },\
 [0x249A]={\
  direction=\"en\",\
 },\
 [0x249B]={\
  direction=\"en\",\
 },\
 [0x249C]={\
  direction=\"l\",\
 },\
 [0x249D]={\
  direction=\"l\",\
 },\
 [0x249E]={\
  direction=\"l\",\
 },\
 [0x249F]={\
  direction=\"l\",\
 },\
 [0x24A0]={\
  direction=\"l\",\
 },\
 [0x24A1]={\
  direction=\"l\",\
 },\
 [0x24A2]={\
  direction=\"l\",\
 },\
 [0x24A3]={\
  direction=\"l\",\
 },\
 [0x24A4]={\
  direction=\"l\",\
 },\
 [0x24A5]={\
  direction=\"l\",\
 },\
 [0x24A6]={\
  direction=\"l\",\
 },\
 [0x24A7]={\
  direction=\"l\",\
 },\
 [0x24A8]={\
  direction=\"l\",\
 },\
 [0x24A9]={\
  direction=\"l\",\
 },\
 [0x24AA]={\
  direction=\"l\",\
 },\
 [0x24AB]={\
  direction=\"l\",\
 },\
 [0x24AC]={\
  direction=\"l\",\
 },\
 [0x24AD]={\
  direction=\"l\",\
 },\
 [0x24AE]={\
  direction=\"l\",\
 },\
 [0x24AF]={\
  direction=\"l\",\
 },\
 [0x24B0]={\
  direction=\"l\",\
 },\
 [0x24B1]={\
  direction=\"l\",\
 },\
 [0x24B2]={\
  direction=\"l\",\
 },\
 [0x24B3]={\
  direction=\"l\",\
 },\
 [0x24B4]={\
  direction=\"l\",\
 },\
 [0x24B5]={\
  direction=\"l\",\
 },\
 [0x24B6]={\
  direction=\"l\",\
 },\
 [0x24B7]={\
  direction=\"l\",\
 },\
 [0x24B8]={\
  direction=\"l\",\
 },\
 [0x24B9]={\
  direction=\"l\",\
 },\
 [0x24BA]={\
  direction=\"l\",\
 },\
 [0x24BB]={\
  direction=\"l\",\
 },\
 [0x24BC]={\
  direction=\"l\",\
 },\
 [0x24BD]={\
  direction=\"l\",\
 },\
 [0x24BE]={\
  direction=\"l\",\
 },\
 [0x24BF]={\
  direction=\"l\",\
 },\
 [0x24C0]={\
  direction=\"l\",\
 },\
 [0x24C1]={\
  direction=\"l\",\
 },\
 [0x24C2]={\
  direction=\"l\",\
 },\
 [0x24C3]={\
  direction=\"l\",\
 },\
 [0x24C4]={\
  direction=\"l\",\
 },\
 [0x24C5]={\
  direction=\"l\",\
 },\
 [0x24C6]={\
  direction=\"l\",\
 },\
 [0x24C7]={\
  direction=\"l\",\
 },\
 [0x24C8]={\
  direction=\"l\",\
 },\
 [0x24C9]={\
  direction=\"l\",\
 },\
 [0x24CA]={\
  direction=\"l\",\
 },\
 [0x24CB]={\
  direction=\"l\",\
 },\
 [0x24CC]={\
  direction=\"l\",\
 },\
 [0x24CD]={\
  direction=\"l\",\
 },\
 [0x24CE]={\
  direction=\"l\",\
 },\
 [0x24CF]={\
  direction=\"l\",\
 },\
 [0x24D0]={\
  direction=\"l\",\
 },\
 [0x24D1]={\
  direction=\"l\",\
 },\
 [0x24D2]={\
  direction=\"l\",\
 },\
 [0x24D3]={\
  direction=\"l\",\
 },\
 [0x24D4]={\
  direction=\"l\",\
 },\
 [0x24D5]={\
  direction=\"l\",\
 },\
 [0x24D6]={\
  direction=\"l\",\
 },\
 [0x24D7]={\
  direction=\"l\",\
 },\
 [0x24D8]={\
  direction=\"l\",\
 },\
 [0x24D9]={\
  direction=\"l\",\
 },\
 [0x24DA]={\
  direction=\"l\",\
 },\
 [0x24DB]={\
  direction=\"l\",\
 },\
 [0x24DC]={\
  direction=\"l\",\
 },\
 [0x24DD]={\
  direction=\"l\",\
 },\
 [0x24DE]={\
  direction=\"l\",\
 },\
 [0x24DF]={\
  direction=\"l\",\
 },\
 [0x24E0]={\
  direction=\"l\",\
 },\
 [0x24E1]={\
  direction=\"l\",\
 },\
 [0x24E2]={\
  direction=\"l\",\
 },\
 [0x24E3]={\
  direction=\"l\",\
 },\
 [0x24E4]={\
  direction=\"l\",\
 },\
 [0x24E5]={\
  direction=\"l\",\
 },\
 [0x24E6]={\
  direction=\"l\",\
 },\
 [0x24E7]={\
  direction=\"l\",\
 },\
 [0x24E8]={\
  direction=\"l\",\
 },\
 [0x24E9]={\
  direction=\"l\",\
 },\
 [0x24EA]={\
  direction=\"on\",\
 },\
 [0x24EB]={\
  direction=\"on\",\
 },\
 [0x24EC]={\
  direction=\"on\",\
 },\
 [0x24ED]={\
  direction=\"on\",\
 },\
 [0x24EE]={\
  direction=\"on\",\
 },\
 [0x24EF]={\
  direction=\"on\",\
 },\
 [0x24F0]={\
  direction=\"on\",\
 },\
 [0x24F1]={\
  direction=\"on\",\
 },\
 [0x24F2]={\
  direction=\"on\",\
 },\
 [0x24F3]={\
  direction=\"on\",\
 },\
 [0x24F4]={\
  direction=\"on\",\
 },\
 [0x24F5]={\
  direction=\"on\",\
 },\
 [0x24F6]={\
  direction=\"on\",\
 },\
 [0x24F7]={\
  direction=\"on\",\
 },\
 [0x24F8]={\
  direction=\"on\",\
 },\
 [0x24F9]={\
  direction=\"on\",\
 },\
 [0x24FA]={\
  direction=\"on\",\
 },\
 [0x24FB]={\
  direction=\"on\",\
 },\
 [0x24FC]={\
  direction=\"on\",\
 },\
 [0x24FD]={\
  direction=\"on\",\
 },\
 [0x24FE]={\
  direction=\"on\",\
 },\
 [0x24FF]={\
  direction=\"on\",\
 },\
 [0x2500]={\
  direction=\"on\",\
 },\
 [0x2501]={\
  direction=\"on\",\
 },\
 [0x2502]={\
  direction=\"on\",\
 },\
 [0x2503]={\
  direction=\"on\",\
 },\
 [0x2504]={\
  direction=\"on\",\
 },\
 [0x2505]={\
  direction=\"on\",\
 },\
 [0x2506]={\
  direction=\"on\",\
 },\
 [0x2507]={\
  direction=\"on\",\
 },\
 [0x2508]={\
  direction=\"on\",\
 },\
 [0x2509]={\
  direction=\"on\",\
 },\
 [0x250A]={\
  direction=\"on\",\
 },\
 [0x250B]={\
  direction=\"on\",\
 },\
 [0x250C]={\
  direction=\"on\",\
 },\
 [0x250D]={\
  direction=\"on\",\
 },\
 [0x250E]={\
  direction=\"on\",\
 },\
 [0x250F]={\
  direction=\"on\",\
 },\
 [0x2510]={\
  direction=\"on\",\
 },\
 [0x2511]={\
  direction=\"on\",\
 },\
 [0x2512]={\
  direction=\"on\",\
 },\
 [0x2513]={\
  direction=\"on\",\
 },\
 [0x2514]={\
  direction=\"on\",\
 },\
 [0x2515]={\
  direction=\"on\",\
 },\
 [0x2516]={\
  direction=\"on\",\
 },\
 [0x2517]={\
  direction=\"on\",\
 },\
 [0x2518]={\
  direction=\"on\",\
 },\
 [0x2519]={\
  direction=\"on\",\
 },\
 [0x251A]={\
  direction=\"on\",\
 },\
 [0x251B]={\
  direction=\"on\",\
 },\
 [0x251C]={\
  direction=\"on\",\
 },\
 [0x251D]={\
  direction=\"on\",\
 },\
 [0x251E]={\
  direction=\"on\",\
 },\
 [0x251F]={\
  direction=\"on\",\
 },\
 [0x2520]={\
  direction=\"on\",\
 },\
 [0x2521]={\
  direction=\"on\",\
 },\
 [0x2522]={\
  direction=\"on\",\
 },\
 [0x2523]={\
  direction=\"on\",\
 },\
 [0x2524]={\
  direction=\"on\",\
 },\
 [0x2525]={\
  direction=\"on\",\
 },\
 [0x2526]={\
  direction=\"on\",\
 },\
 [0x2527]={\
  direction=\"on\",\
 },\
 [0x2528]={\
  direction=\"on\",\
 },\
 [0x2529]={\
  direction=\"on\",\
 },\
 [0x252A]={\
  direction=\"on\",\
 },\
 [0x252B]={\
  direction=\"on\",\
 },\
 [0x252C]={\
  direction=\"on\",\
 },\
 [0x252D]={\
  direction=\"on\",\
 },\
 [0x252E]={\
  direction=\"on\",\
 },\
 [0x252F]={\
  direction=\"on\",\
 },\
 [0x2530]={\
  direction=\"on\",\
 },\
 [0x2531]={\
  direction=\"on\",\
 },\
 [0x2532]={\
  direction=\"on\",\
 },\
 [0x2533]={\
  direction=\"on\",\
 },\
 [0x2534]={\
  direction=\"on\",\
 },\
 [0x2535]={\
  direction=\"on\",\
 },\
 [0x2536]={\
  direction=\"on\",\
 },\
 [0x2537]={\
  direction=\"on\",\
 },\
 [0x2538]={\
  direction=\"on\",\
 },\
 [0x2539]={\
  direction=\"on\",\
 },\
 [0x253A]={\
  direction=\"on\",\
 },\
 [0x253B]={\
  direction=\"on\",\
 },\
 [0x253C]={\
  direction=\"on\",\
 },\
 [0x253D]={\
  direction=\"on\",\
 },\
 [0x253E]={\
  direction=\"on\",\
 },\
 [0x253F]={\
  direction=\"on\",\
 },\
 [0x2540]={\
  direction=\"on\",\
 },\
 [0x2541]={\
  direction=\"on\",\
 },\
 [0x2542]={\
  direction=\"on\",\
 },\
 [0x2543]={\
  direction=\"on\",\
 },\
 [0x2544]={\
  direction=\"on\",\
 },\
 [0x2545]={\
  direction=\"on\",\
 },\
 [0x2546]={\
  direction=\"on\",\
 },\
 [0x2547]={\
  direction=\"on\",\
 },\
 [0x2548]={\
  direction=\"on\",\
 },\
 [0x2549]={\
  direction=\"on\",\
 },\
 [0x254A]={\
  direction=\"on\",\
 },\
 [0x254B]={\
  direction=\"on\",\
 },\
 [0x254C]={\
  direction=\"on\",\
 },\
 [0x254D]={\
  direction=\"on\",\
 },\
 [0x254E]={\
  direction=\"on\",\
 },\
 [0x254F]={\
  direction=\"on\",\
 },\
 [0x2550]={\
  direction=\"on\",\
 },\
 [0x2551]={\
  direction=\"on\",\
 },\
 [0x2552]={\
  direction=\"on\",\
 },\
 [0x2553]={\
  direction=\"on\",\
 },\
 [0x2554]={\
  direction=\"on\",\
 },\
 [0x2555]={\
  direction=\"on\",\
 },\
 [0x2556]={\
  direction=\"on\",\
 },\
 [0x2557]={\
  direction=\"on\",\
 },\
 [0x2558]={\
  direction=\"on\",\
 },\
 [0x2559]={\
  direction=\"on\",\
 },\
 [0x255A]={\
  direction=\"on\",\
 },\
 [0x255B]={\
  direction=\"on\",\
 },\
 [0x255C]={\
  direction=\"on\",\
 },\
 [0x255D]={\
  direction=\"on\",\
 },\
 [0x255E]={\
  direction=\"on\",\
 },\
 [0x255F]={\
  direction=\"on\",\
 },\
 [0x2560]={\
  direction=\"on\",\
 },\
 [0x2561]={\
  direction=\"on\",\
 },\
 [0x2562]={\
  direction=\"on\",\
 },\
 [0x2563]={\
  direction=\"on\",\
 },\
 [0x2564]={\
  direction=\"on\",\
 },\
 [0x2565]={\
  direction=\"on\",\
 },\
 [0x2566]={\
  direction=\"on\",\
 },\
 [0x2567]={\
  direction=\"on\",\
 },\
 [0x2568]={\
  direction=\"on\",\
 },\
 [0x2569]={\
  direction=\"on\",\
 },\
 [0x256A]={\
  direction=\"on\",\
 },\
 [0x256B]={\
  direction=\"on\",\
 },\
 [0x256C]={\
  direction=\"on\",\
 },\
 [0x256D]={\
  direction=\"on\",\
 },\
 [0x256E]={\
  direction=\"on\",\
 },\
 [0x256F]={\
  direction=\"on\",\
 },\
 [0x2570]={\
  direction=\"on\",\
 },\
 [0x2571]={\
  direction=\"on\",\
 },\
 [0x2572]={\
  direction=\"on\",\
 },\
 [0x2573]={\
  direction=\"on\",\
 },\
 [0x2574]={\
  direction=\"on\",\
 },\
 [0x2575]={\
  direction=\"on\",\
 },\
 [0x2576]={\
  direction=\"on\",\
 },\
 [0x2577]={\
  direction=\"on\",\
 },\
 [0x2578]={\
  direction=\"on\",\
 },\
 [0x2579]={\
  direction=\"on\",\
 },\
 [0x257A]={\
  direction=\"on\",\
 },\
 [0x257B]={\
  direction=\"on\",\
 },\
 [0x257C]={\
  direction=\"on\",\
 },\
 [0x257D]={\
  direction=\"on\",\
 },\
 [0x257E]={\
  direction=\"on\",\
 },\
 [0x257F]={\
  direction=\"on\",\
 },\
 [0x2580]={\
  direction=\"on\",\
 },\
 [0x2581]={\
  direction=\"on\",\
 },\
 [0x2582]={\
  direction=\"on\",\
 },\
 [0x2583]={\
  direction=\"on\",\
 },\
 [0x2584]={\
  direction=\"on\",\
 },\
 [0x2585]={\
  direction=\"on\",\
 },\
 [0x2586]={\
  direction=\"on\",\
 },\
 [0x2587]={\
  direction=\"on\",\
 },\
 [0x2588]={\
  direction=\"on\",\
 },\
 [0x2589]={\
  direction=\"on\",\
 },\
 [0x258A]={\
  direction=\"on\",\
 },\
 [0x258B]={\
  direction=\"on\",\
 },\
 [0x258C]={\
  direction=\"on\",\
 },\
 [0x258D]={\
  direction=\"on\",\
 },\
 [0x258E]={\
  direction=\"on\",\
 },\
 [0x258F]={\
  direction=\"on\",\
 },\
 [0x2590]={\
  direction=\"on\",\
 },\
 [0x2591]={\
  direction=\"on\",\
 },\
 [0x2592]={\
  direction=\"on\",\
 },\
 [0x2593]={\
  direction=\"on\",\
 },\
 [0x2594]={\
  direction=\"on\",\
 },\
 [0x2595]={\
  direction=\"on\",\
 },\
 [0x2596]={\
  direction=\"on\",\
 },\
 [0x2597]={\
  direction=\"on\",\
 },\
 [0x2598]={\
  direction=\"on\",\
 },\
 [0x2599]={\
  direction=\"on\",\
 },\
 [0x259A]={\
  direction=\"on\",\
 },\
 [0x259B]={\
  direction=\"on\",\
 },\
 [0x259C]={\
  direction=\"on\",\
 },\
 [0x259D]={\
  direction=\"on\",\
 },\
 [0x259E]={\
  direction=\"on\",\
 },\
 [0x259F]={\
  direction=\"on\",\
 },\
 [0x25A0]={\
  direction=\"on\",\
 },\
 [0x25A1]={\
  direction=\"on\",\
 },\
 [0x25A2]={\
  direction=\"on\",\
 },\
 [0x25A3]={\
  direction=\"on\",\
 },\
 [0x25A4]={\
  direction=\"on\",\
 },\
 [0x25A5]={\
  direction=\"on\",\
 },\
 [0x25A6]={\
  direction=\"on\",\
 },\
 [0x25A7]={\
  direction=\"on\",\
 },\
 [0x25A8]={\
  direction=\"on\",\
 },\
 [0x25A9]={\
  direction=\"on\",\
 },\
 [0x25AA]={\
  direction=\"on\",\
 },\
 [0x25AB]={\
  direction=\"on\",\
 },\
 [0x25AC]={\
  direction=\"on\",\
 },\
 [0x25AD]={\
  direction=\"on\",\
 },\
 [0x25AE]={\
  direction=\"on\",\
 },\
 [0x25AF]={\
  direction=\"on\",\
 },\
 [0x25B0]={\
  direction=\"on\",\
 },\
 [0x25B1]={\
  direction=\"on\",\
 },\
 [0x25B2]={\
  direction=\"on\",\
 },\
 [0x25B3]={\
  direction=\"on\",\
 },\
 [0x25B4]={\
  direction=\"on\",\
 },\
 [0x25B5]={\
  direction=\"on\",\
 },\
 [0x25B6]={\
  direction=\"on\",\
 },\
 [0x25B7]={\
  direction=\"on\",\
 },\
 [0x25B8]={\
  direction=\"on\",\
 },\
 [0x25B9]={\
  direction=\"on\",\
 },\
 [0x25BA]={\
  direction=\"on\",\
 },\
 [0x25BB]={\
  direction=\"on\",\
 },\
 [0x25BC]={\
  direction=\"on\",\
 },\
 [0x25BD]={\
  direction=\"on\",\
 },\
 [0x25BE]={\
  direction=\"on\",\
 },\
 [0x25BF]={\
  direction=\"on\",\
 },\
 [0x25C0]={\
  direction=\"on\",\
 },\
 [0x25C1]={\
  direction=\"on\",\
 },\
 [0x25C2]={\
  direction=\"on\",\
 },\
 [0x25C3]={\
  direction=\"on\",\
 },\
 [0x25C4]={\
  direction=\"on\",\
 },\
 [0x25C5]={\
  direction=\"on\",\
 },\
 [0x25C6]={\
  direction=\"on\",\
 },\
 [0x25C7]={\
  direction=\"on\",\
 },\
 [0x25C8]={\
  direction=\"on\",\
 },\
 [0x25C9]={\
  direction=\"on\",\
 },\
 [0x25CA]={\
  direction=\"on\",\
 },\
 [0x25CB]={\
  direction=\"on\",\
 },\
 [0x25CC]={\
  direction=\"on\",\
 },\
 [0x25CD]={\
  direction=\"on\",\
 },\
 [0x25CE]={\
  direction=\"on\",\
 },\
 [0x25CF]={\
  direction=\"on\",\
 },\
 [0x25D0]={\
  direction=\"on\",\
 },\
 [0x25D1]={\
  direction=\"on\",\
 },\
 [0x25D2]={\
  direction=\"on\",\
 },\
 [0x25D3]={\
  direction=\"on\",\
 },\
 [0x25D4]={\
  direction=\"on\",\
 },\
 [0x25D5]={\
  direction=\"on\",\
 },\
 [0x25D6]={\
  direction=\"on\",\
 },\
 [0x25D7]={\
  direction=\"on\",\
 },\
 [0x25D8]={\
  direction=\"on\",\
 },\
 [0x25D9]={\
  direction=\"on\",\
 },\
 [0x25DA]={\
  direction=\"on\",\
 },\
 [0x25DB]={\
  direction=\"on\",\
 },\
 [0x25DC]={\
  direction=\"on\",\
 },\
 [0x25DD]={\
  direction=\"on\",\
 },\
 [0x25DE]={\
  direction=\"on\",\
 },\
 [0x25DF]={\
  direction=\"on\",\
 },\
 [0x25E0]={\
  direction=\"on\",\
 },\
 [0x25E1]={\
  direction=\"on\",\
 },\
 [0x25E2]={\
  direction=\"on\",\
 },\
 [0x25E3]={\
  direction=\"on\",\
 },\
 [0x25E4]={\
  direction=\"on\",\
 },\
 [0x25E5]={\
  direction=\"on\",\
 },\
 [0x25E6]={\
  direction=\"on\",\
 },\
 [0x25E7]={\
  direction=\"on\",\
 },\
 [0x25E8]={\
  direction=\"on\",\
 },\
 [0x25E9]={\
  direction=\"on\",\
 },\
 [0x25EA]={\
  direction=\"on\",\
 },\
 [0x25EB]={\
  direction=\"on\",\
 },\
 [0x25EC]={\
  direction=\"on\",\
 },\
 [0x25ED]={\
  direction=\"on\",\
 },\
 [0x25EE]={\
  direction=\"on\",\
 },\
 [0x25EF]={\
  direction=\"on\",\
 },\
 [0x25F0]={\
  direction=\"on\",\
 },\
 [0x25F1]={\
  direction=\"on\",\
 },\
 [0x25F2]={\
  direction=\"on\",\
 },\
 [0x25F3]={\
  direction=\"on\",\
 },\
 [0x25F4]={\
  direction=\"on\",\
 },\
 [0x25F5]={\
  direction=\"on\",\
 },\
 [0x25F6]={\
  direction=\"on\",\
 },\
 [0x25F7]={\
  direction=\"on\",\
 },\
 [0x25F8]={\
  direction=\"on\",\
 },\
 [0x25F9]={\
  direction=\"on\",\
 },\
 [0x25FA]={\
  direction=\"on\",\
 },\
 [0x25FB]={\
  direction=\"on\",\
 },\
 [0x25FC]={\
  direction=\"on\",\
 },\
 [0x25FD]={\
  direction=\"on\",\
 },\
 [0x25FE]={\
  direction=\"on\",\
 },\
 [0x25FF]={\
  direction=\"on\",\
 },\
 [0x2600]={\
  direction=\"on\",\
 },\
 [0x2601]={\
  direction=\"on\",\
 },\
 [0x2602]={\
  direction=\"on\",\
 },\
 [0x2603]={\
  direction=\"on\",\
 },\
 [0x2604]={\
  direction=\"on\",\
 },\
 [0x2605]={\
  direction=\"on\",\
 },\
 [0x2606]={\
  direction=\"on\",\
 },\
 [0x2607]={\
  direction=\"on\",\
 },\
 [0x2608]={\
  direction=\"on\",\
 },\
 [0x2609]={\
  direction=\"on\",\
 },\
 [0x260A]={\
  direction=\"on\",\
 },\
 [0x260B]={\
  direction=\"on\",\
 },\
 [0x260C]={\
  direction=\"on\",\
 },\
 [0x260D]={\
  direction=\"on\",\
 },\
 [0x260E]={\
  direction=\"on\",\
 },\
 [0x260F]={\
  direction=\"on\",\
 },\
 [0x2610]={\
  direction=\"on\",\
 },\
 [0x2611]={\
  direction=\"on\",\
 },\
 [0x2612]={\
  direction=\"on\",\
 },\
 [0x2613]={\
  direction=\"on\",\
 },\
 [0x2614]={\
  direction=\"on\",\
 },\
 [0x2615]={\
  direction=\"on\",\
 },\
 [0x2616]={\
  direction=\"on\",\
 },\
 [0x2617]={\
  direction=\"on\",\
 },\
 [0x2618]={\
  direction=\"on\",\
 },\
 [0x2619]={\
  direction=\"on\",\
 },\
 [0x261A]={\
  direction=\"on\",\
 },\
 [0x261B]={\
  direction=\"on\",\
 },\
 [0x261C]={\
  direction=\"on\",\
 },\
 [0x261D]={\
  direction=\"on\",\
 },\
 [0x261E]={\
  direction=\"on\",\
 },\
 [0x261F]={\
  direction=\"on\",\
 },\
 [0x2620]={\
  direction=\"on\",\
 },\
 [0x2621]={\
  direction=\"on\",\
 },\
 [0x2622]={\
  direction=\"on\",\
 },\
 [0x2623]={\
  direction=\"on\",\
 },\
 [0x2624]={\
  direction=\"on\",\
 },\
 [0x2625]={\
  direction=\"on\",\
 },\
 [0x2626]={\
  direction=\"on\",\
 },\
 [0x2627]={\
  direction=\"on\",\
 },\
 [0x2628]={\
  direction=\"on\",\
 },\
 [0x2629]={\
  direction=\"on\",\
 },\
 [0x262A]={\
  direction=\"on\",\
 },\
 [0x262B]={\
  direction=\"on\",\
 },\
 [0x262C]={\
  direction=\"on\",\
 },\
 [0x262D]={\
  direction=\"on\",\
 },\
 [0x262E]={\
  direction=\"on\",\
 },\
 [0x262F]={\
  direction=\"on\",\
 },\
 [0x2630]={\
  direction=\"on\",\
 },\
 [0x2631]={\
  direction=\"on\",\
 },\
 [0x2632]={\
  direction=\"on\",\
 },\
 [0x2633]={\
  direction=\"on\",\
 },\
 [0x2634]={\
  direction=\"on\",\
 },\
 [0x2635]={\
  direction=\"on\",\
 },\
 [0x2636]={\
  direction=\"on\",\
 },\
 [0x2637]={\
  direction=\"on\",\
 },\
 [0x2638]={\
  direction=\"on\",\
 },\
 [0x2639]={\
  direction=\"on\",\
 },\
 [0x263A]={\
  direction=\"on\",\
 },\
 [0x263B]={\
  direction=\"on\",\
 },\
 [0x263C]={\
  direction=\"on\",\
 },\
 [0x263D]={\
  direction=\"on\",\
 },\
 [0x263E]={\
  direction=\"on\",\
 },\
 [0x263F]={\
  direction=\"on\",\
 },\
 [0x2640]={\
  direction=\"on\",\
 },\
 [0x2641]={\
  direction=\"on\",\
 },\
 [0x2642]={\
  direction=\"on\",\
 },\
 [0x2643]={\
  direction=\"on\",\
 },\
 [0x2644]={\
  direction=\"on\",\
 },\
 [0x2645]={\
  direction=\"on\",\
 },\
 [0x2646]={\
  direction=\"on\",\
 },\
 [0x2647]={\
  direction=\"on\",\
 },\
 [0x2648]={\
  direction=\"on\",\
 },\
 [0x2649]={\
  direction=\"on\",\
 },\
 [0x264A]={\
  direction=\"on\",\
 },\
 [0x264B]={\
  direction=\"on\",\
 },\
 [0x264C]={\
  direction=\"on\",\
 },\
 [0x264D]={\
  direction=\"on\",\
 },\
 [0x264E]={\
  direction=\"on\",\
 },\
 [0x264F]={\
  direction=\"on\",\
 },\
 [0x2650]={\
  direction=\"on\",\
 },\
 [0x2651]={\
  direction=\"on\",\
 },\
 [0x2652]={\
  direction=\"on\",\
 },\
 [0x2653]={\
  direction=\"on\",\
 },\
 [0x2654]={\
  direction=\"on\",\
 },\
 [0x2655]={\
  direction=\"on\",\
 },\
 [0x2656]={\
  direction=\"on\",\
 },\
 [0x2657]={\
  direction=\"on\",\
 },\
 [0x2658]={\
  direction=\"on\",\
 },\
 [0x2659]={\
  direction=\"on\",\
 },\
 [0x265A]={\
  direction=\"on\",\
 },\
 [0x265B]={\
  direction=\"on\",\
 },\
 [0x265C]={\
  direction=\"on\",\
 },\
 [0x265D]={\
  direction=\"on\",\
 },\
 [0x265E]={\
  direction=\"on\",\
 },\
 [0x265F]={\
  direction=\"on\",\
 },\
 [0x2660]={\
  direction=\"on\",\
 },\
 [0x2661]={\
  direction=\"on\",\
 },\
 [0x2662]={\
  direction=\"on\",\
 },\
 [0x2663]={\
  direction=\"on\",\
 },\
 [0x2664]={\
  direction=\"on\",\
 },\
 [0x2665]={\
  direction=\"on\",\
 },\
 [0x2666]={\
  direction=\"on\",\
 },\
 [0x2667]={\
  direction=\"on\",\
 },\
 [0x2668]={\
  direction=\"on\",\
 },\
 [0x2669]={\
  direction=\"on\",\
 },\
 [0x266A]={\
  direction=\"on\",\
 },\
 [0x266B]={\
  direction=\"on\",\
 },\
 [0x266C]={\
  direction=\"on\",\
 },\
 [0x266D]={\
  direction=\"on\",\
 },\
 [0x266E]={\
  direction=\"on\",\
 },\
 [0x266F]={\
  direction=\"on\",\
 },\
 [0x2670]={\
  direction=\"on\",\
 },\
 [0x2671]={\
  direction=\"on\",\
 },\
 [0x2672]={\
  direction=\"on\",\
 },\
 [0x2673]={\
  direction=\"on\",\
 },\
 [0x2674]={\
  direction=\"on\",\
 },\
 [0x2675]={\
  direction=\"on\",\
 },\
 [0x2676]={\
  direction=\"on\",\
 },\
 [0x2677]={\
  direction=\"on\",\
 },\
 [0x2678]={\
  direction=\"on\",\
 },\
 [0x2679]={\
  direction=\"on\",\
 },\
 [0x267A]={\
  direction=\"on\",\
 },\
 [0x267B]={\
  direction=\"on\",\
 },\
 [0x267C]={\
  direction=\"on\",\
 },\
 [0x267D]={\
  direction=\"on\",\
 },\
 [0x267E]={\
  direction=\"on\",\
 },\
 [0x267F]={\
  direction=\"on\",\
 },\
 [0x2680]={\
  direction=\"on\",\
 },\
 [0x2681]={\
  direction=\"on\",\
 },\
 [0x2682]={\
  direction=\"on\",\
 },\
 [0x2683]={\
  direction=\"on\",\
 },\
 [0x2684]={\
  direction=\"on\",\
 },\
 [0x2685]={\
  direction=\"on\",\
 },\
 [0x2686]={\
  direction=\"on\",\
 },\
 [0x2687]={\
  direction=\"on\",\
 },\
 [0x2688]={\
  direction=\"on\",\
 },\
 [0x2689]={\
  direction=\"on\",\
 },\
 [0x268A]={\
  direction=\"on\",\
 },\
 [0x268B]={\
  direction=\"on\",\
 },\
 [0x268C]={\
  direction=\"on\",\
 },\
 [0x268D]={\
  direction=\"on\",\
 },\
 [0x268E]={\
  direction=\"on\",\
 },\
 [0x268F]={\
  direction=\"on\",\
 },\
 [0x2690]={\
  direction=\"on\",\
 },\
 [0x2691]={\
  direction=\"on\",\
 },\
 [0x2692]={\
  direction=\"on\",\
 },\
 [0x2693]={\
  direction=\"on\",\
 },\
 [0x2694]={\
  direction=\"on\",\
 },\
 [0x2695]={\
  direction=\"on\",\
 },\
 [0x2696]={\
  direction=\"on\",\
 },\
 [0x2697]={\
  direction=\"on\",\
 },\
 [0x2698]={\
  direction=\"on\",\
 },\
 [0x2699]={\
  direction=\"on\",\
 },\
 [0x269A]={\
  direction=\"on\",\
 },\
 [0x269B]={\
  direction=\"on\",\
 },\
 [0x269C]={\
  direction=\"on\",\
 },\
 [0x269D]={\
  direction=\"on\",\
 },\
 [0x269E]={\
  direction=\"on\",\
 },\
 [0x269F]={\
  direction=\"on\",\
 },\
 [0x26A0]={\
  direction=\"on\",\
 },\
 [0x26A1]={\
  direction=\"on\",\
 },\
 [0x26A2]={\
  direction=\"on\",\
 },\
 [0x26A3]={\
  direction=\"on\",\
 },\
 [0x26A4]={\
  direction=\"on\",\
 },\
 [0x26A5]={\
  direction=\"on\",\
 },\
 [0x26A6]={\
  direction=\"on\",\
 },\
 [0x26A7]={\
  direction=\"on\",\
 },\
 [0x26A8]={\
  direction=\"on\",\
 },\
 [0x26A9]={\
  direction=\"on\",\
 },\
 [0x26AA]={\
  direction=\"on\",\
 },\
 [0x26AB]={\
  direction=\"on\",\
 },\
 [0x26AC]={\
  direction=\"l\",\
 },\
 [0x26AD]={\
  direction=\"on\",\
 },\
 [0x26AE]={\
  direction=\"on\",\
 },\
 [0x26AF]={\
  direction=\"on\",\
 },\
 [0x26B0]={\
  direction=\"on\",\
 },\
 [0x26B1]={\
  direction=\"on\",\
 },\
 [0x26B2]={\
  direction=\"on\",\
 },\
 [0x26B3]={\
  direction=\"on\",\
 },\
 [0x26B4]={\
  direction=\"on\",\
 },\
 [0x26B5]={\
  direction=\"on\",\
 },\
 [0x26B6]={\
  direction=\"on\",\
 },\
 [0x26B7]={\
  direction=\"on\",\
 },\
 [0x26B8]={\
  direction=\"on\",\
 },\
 [0x26B9]={\
  direction=\"on\",\
 },\
 [0x26BA]={\
  direction=\"on\",\
 },\
 [0x26BB]={\
  direction=\"on\",\
 },\
 [0x26BC]={\
  direction=\"on\",\
 },\
 [0x26BD]={\
  direction=\"on\",\
 },\
 [0x26BE]={\
  direction=\"on\",\
 },\
 [0x26BF]={\
  direction=\"on\",\
 },\
 [0x26C0]={\
  direction=\"on\",\
 },\
 [0x26C1]={\
  direction=\"on\",\
 },\
 [0x26C2]={\
  direction=\"on\",\
 },\
 [0x26C3]={\
  direction=\"on\",\
 },\
 [0x26C4]={\
  direction=\"on\",\
 },\
 [0x26C5]={\
  direction=\"on\",\
 },\
 [0x26C6]={\
  direction=\"on\",\
 },\
 [0x26C7]={\
  direction=\"on\",\
 },\
 [0x26C8]={\
  direction=\"on\",\
 },\
 [0x26C9]={\
  direction=\"on\",\
 },\
 [0x26CA]={\
  direction=\"on\",\
 },\
 [0x26CB]={\
  direction=\"on\",\
 },\
 [0x26CC]={\
  direction=\"on\",\
 },\
 [0x26CD]={\
  direction=\"on\",\
 },\
 [0x26CE]={\
  direction=\"on\",\
 },\
 [0x26CF]={\
  direction=\"on\",\
 },\
 [0x26D0]={\
  direction=\"on\",\
 },\
 [0x26D1]={\
  direction=\"on\",\
 },\
 [0x26D2]={\
  direction=\"on\",\
 },\
 [0x26D3]={\
  direction=\"on\",\
 },\
 [0x26D4]={\
  direction=\"on\",\
 },\
 [0x26D5]={\
  direction=\"on\",\
 },\
 [0x26D6]={\
  direction=\"on\",\
 },\
 [0x26D7]={\
  direction=\"on\",\
 },\
 [0x26D8]={\
  direction=\"on\",\
 },\
 [0x26D9]={\
  direction=\"on\",\
 },\
 [0x26DA]={\
  direction=\"on\",\
 },\
 [0x26DB]={\
  direction=\"on\",\
 },\
 [0x26DC]={\
  direction=\"on\",\
 },\
 [0x26DD]={\
  direction=\"on\",\
 },\
 [0x26DE]={\
  direction=\"on\",\
 },\
 [0x26DF]={\
  direction=\"on\",\
 },\
 [0x26E0]={\
  direction=\"on\",\
 },\
 [0x26E1]={\
  direction=\"on\",\
 },\
 [0x26E2]={\
  direction=\"on\",\
 },\
 [0x26E3]={\
  direction=\"on\",\
 },\
 [0x26E4]={\
  direction=\"on\",\
 },\
 [0x26E5]={\
  direction=\"on\",\
 },\
 [0x26E6]={\
  direction=\"on\",\
 },\
 [0x26E7]={\
  direction=\"on\",\
 },\
 [0x26E8]={\
  direction=\"on\",\
 },\
 [0x26E9]={\
  direction=\"on\",\
 },\
 [0x26EA]={\
  direction=\"on\",\
 },\
 [0x26EB]={\
  direction=\"on\",\
 },\
 [0x26EC]={\
  direction=\"on\",\
 },\
 [0x26ED]={\
  direction=\"on\",\
 },\
 [0x26EE]={\
  direction=\"on\",\
 },\
 [0x26EF]={\
  direction=\"on\",\
 },\
 [0x26F0]={\
  direction=\"on\",\
 },\
 [0x26F1]={\
  direction=\"on\",\
 },\
 [0x26F2]={\
  direction=\"on\",\
 },\
 [0x26F3]={\
  direction=\"on\",\
 },\
 [0x26F4]={\
  direction=\"on\",\
 },\
 [0x26F5]={\
  direction=\"on\",\
 },\
 [0x26F6]={\
  direction=\"on\",\
 },\
 [0x26F7]={\
  direction=\"on\",\
 },\
 [0x26F8]={\
  direction=\"on\",\
 },\
 [0x26F9]={\
  direction=\"on\",\
 },\
 [0x26FA]={\
  direction=\"on\",\
 },\
 [0x26FB]={\
  direction=\"on\",\
 },\
 [0x26FC]={\
  direction=\"on\",\
 },\
 [0x26FD]={\
  direction=\"on\",\
 },\
 [0x26FE]={\
  direction=\"on\",\
 },\
 [0x26FF]={\
  direction=\"on\",\
 },\
 [0x2701]={\
  direction=\"on\",\
 },\
 [0x2702]={\
  direction=\"on\",\
 },\
 [0x2703]={\
  direction=\"on\",\
 },\
 [0x2704]={\
  direction=\"on\",\
 },\
 [0x2705]={\
  direction=\"on\",\
 },\
 [0x2706]={\
  direction=\"on\",\
 },\
 [0x2707]={\
  direction=\"on\",\
 },\
 [0x2708]={\
  direction=\"on\",\
 },\
 [0x2709]={\
  direction=\"on\",\
 },\
 [0x270A]={\
  direction=\"on\",\
 },\
 [0x270B]={\
  direction=\"on\",\
 },\
 [0x270C]={\
  direction=\"on\",\
 },\
 [0x270D]={\
  direction=\"on\",\
 },\
 [0x270E]={\
  direction=\"on\",\
 },\
 [0x270F]={\
  direction=\"on\",\
 },\
 [0x2710]={\
  direction=\"on\",\
 },\
 [0x2711]={\
  direction=\"on\",\
 },\
 [0x2712]={\
  direction=\"on\",\
 },\
 [0x2713]={\
  direction=\"on\",\
 },\
 [0x2714]={\
  direction=\"on\",\
 },\
 [0x2715]={\
  direction=\"on\",\
 },\
 [0x2716]={\
  direction=\"on\",\
 },\
 [0x2717]={\
  direction=\"on\",\
 },\
 [0x2718]={\
  direction=\"on\",\
 },\
 [0x2719]={\
  direction=\"on\",\
 },\
 [0x271A]={\
  direction=\"on\",\
 },\
 [0x271B]={\
  direction=\"on\",\
 },\
 [0x271C]={\
  direction=\"on\",\
 },\
 [0x271D]={\
  direction=\"on\",\
 },\
 [0x271E]={\
  direction=\"on\",\
 },\
 [0x271F]={\
  direction=\"on\",\
 },\
 [0x2720]={\
  direction=\"on\",\
 },\
 [0x2721]={\
  direction=\"on\",\
 },\
 [0x2722]={\
  direction=\"on\",\
 },\
 [0x2723]={\
  direction=\"on\",\
 },\
 [0x2724]={\
  direction=\"on\",\
 },\
 [0x2725]={\
  direction=\"on\",\
 },\
 [0x2726]={\
  direction=\"on\",\
 },\
 [0x2727]={\
  direction=\"on\",\
 },\
 [0x2728]={\
  direction=\"on\",\
 },\
 [0x2729]={\
  direction=\"on\",\
 },\
 [0x272A]={\
  direction=\"on\",\
 },\
 [0x272B]={\
  direction=\"on\",\
 },\
 [0x272C]={\
  direction=\"on\",\
 },\
 [0x272D]={\
  direction=\"on\",\
 },\
 [0x272E]={\
  direction=\"on\",\
 },\
 [0x272F]={\
  direction=\"on\",\
 },\
 [0x2730]={\
  direction=\"on\",\
 },\
 [0x2731]={\
  direction=\"on\",\
 },\
 [0x2732]={\
  direction=\"on\",\
 },\
 [0x2733]={\
  direction=\"on\",\
 },\
 [0x2734]={\
  direction=\"on\",\
 },\
 [0x2735]={\
  direction=\"on\",\
 },\
 [0x2736]={\
  direction=\"on\",\
 },\
 [0x2737]={\
  direction=\"on\",\
 },\
 [0x2738]={\
  direction=\"on\",\
 },\
 [0x2739]={\
  direction=\"on\",\
 },\
 [0x273A]={\
  direction=\"on\",\
 },\
 [0x273B]={\
  direction=\"on\",\
 },\
 [0x273C]={\
  direction=\"on\",\
 },\
 [0x273D]={\
  direction=\"on\",\
 },\
 [0x273E]={\
  direction=\"on\",\
 },\
 [0x273F]={\
  direction=\"on\",\
 },\
 [0x2740]={\
  direction=\"on\",\
 },\
 [0x2741]={\
  direction=\"on\",\
 },\
 [0x2742]={\
  direction=\"on\",\
 },\
 [0x2743]={\
  direction=\"on\",\
 },\
 [0x2744]={\
  direction=\"on\",\
 },\
 [0x2745]={\
  direction=\"on\",\
 },\
 [0x2746]={\
  direction=\"on\",\
 },\
 [0x2747]={\
  direction=\"on\",\
 },\
 [0x2748]={\
  direction=\"on\",\
 },\
 [0x2749]={\
  direction=\"on\",\
 },\
 [0x274A]={\
  direction=\"on\",\
 },\
 [0x274B]={\
  direction=\"on\",\
 },\
 [0x274C]={\
  direction=\"on\",\
 },\
 [0x274D]={\
  direction=\"on\",\
 },\
 [0x274E]={\
  direction=\"on\",\
 },\
 [0x274F]={\
  direction=\"on\",\
 },\
 [0x2750]={\
  direction=\"on\",\
 },\
 [0x2751]={\
  direction=\"on\",\
 },\
 [0x2752]={\
  direction=\"on\",\
 },\
 [0x2753]={\
  direction=\"on\",\
 },\
 [0x2754]={\
  direction=\"on\",\
 },\
 [0x2755]={\
  direction=\"on\",\
 },\
 [0x2756]={\
  direction=\"on\",\
 },\
 [0x2757]={\
  direction=\"on\",\
 },\
 [0x2758]={\
  direction=\"on\",\
 },\
 [0x2759]={\
  direction=\"on\",\
 },\
 [0x275A]={\
  direction=\"on\",\
 },\
 [0x275B]={\
  direction=\"on\",\
 },\
 [0x275C]={\
  direction=\"on\",\
 },\
 [0x275D]={\
  direction=\"on\",\
 },\
 [0x275E]={\
  direction=\"on\",\
 },\
 [0x275F]={\
  direction=\"on\",\
 },\
 [0x2760]={\
  direction=\"on\",\
 },\
 [0x2761]={\
  direction=\"on\",\
 },\
 [0x2762]={\
  direction=\"on\",\
 },\
 [0x2763]={\
  direction=\"on\",\
 },\
 [0x2764]={\
  direction=\"on\",\
 },\
 [0x2765]={\
  direction=\"on\",\
 },\
 [0x2766]={\
  direction=\"on\",\
 },\
 [0x2767]={\
  direction=\"on\",\
 },\
 [0x2768]={\
  direction=\"on\",\
  mirror=0x2769,\
 },\
 [0x2769]={\
  direction=\"on\",\
  mirror=0x2768,\
 },\
 [0x276A]={\
  direction=\"on\",\
  mirror=0x276B,\
 },\
 [0x276B]={\
  direction=\"on\",\
  mirror=0x276A,\
 },\
 [0x276C]={\
  direction=\"on\",\
  mirror=0x276D,\
 },\
 [0x276D]={\
  direction=\"on\",\
  mirror=0x276C,\
 },\
 [0x276E]={\
  direction=\"on\",\
  mirror=0x276F,\
 },\
 [0x276F]={\
  direction=\"on\",\
  mirror=0x276E,\
 },\
 [0x2770]={\
  direction=\"on\",\
  mirror=0x2771,\
 },\
 [0x2771]={\
  direction=\"on\",\
  mirror=0x2770,\
 },\
 [0x2772]={\
  direction=\"on\",\
  mirror=0x2773,\
 },\
 [0x2773]={\
  direction=\"on\",\
  mirror=0x2772,\
 },\
 [0x2774]={\
  direction=\"on\",\
  mirror=0x2775,\
 },\
 [0x2775]={\
  direction=\"on\",\
  mirror=0x2774,\
 },\
 [0x2776]={\
  direction=\"on\",\
 },\
 [0x2777]={\
  direction=\"on\",\
 },\
 [0x2778]={\
  direction=\"on\",\
 },\
 [0x2779]={\
  direction=\"on\",\
 },\
 [0x277A]={\
  direction=\"on\",\
 },\
 [0x277B]={\
  direction=\"on\",\
 },\
 [0x277C]={\
  direction=\"on\",\
 },\
 [0x277D]={\
  direction=\"on\",\
 },\
 [0x277E]={\
  direction=\"on\",\
 },\
 [0x277F]={\
  direction=\"on\",\
 },\
 [0x2780]={\
  direction=\"on\",\
 },\
 [0x2781]={\
  direction=\"on\",\
 },\
 [0x2782]={\
  direction=\"on\",\
 },\
 [0x2783]={\
  direction=\"on\",\
 },\
 [0x2784]={\
  direction=\"on\",\
 },\
 [0x2785]={\
  direction=\"on\",\
 },\
 [0x2786]={\
  direction=\"on\",\
 },\
 [0x2787]={\
  direction=\"on\",\
 },\
 [0x2788]={\
  direction=\"on\",\
 },\
 [0x2789]={\
  direction=\"on\",\
 },\
 [0x278A]={\
  direction=\"on\",\
 },\
 [0x278B]={\
  direction=\"on\",\
 },\
 [0x278C]={\
  direction=\"on\",\
 },\
 [0x278D]={\
  direction=\"on\",\
 },\
 [0x278E]={\
  direction=\"on\",\
 },\
 [0x278F]={\
  direction=\"on\",\
 },\
 [0x2790]={\
  direction=\"on\",\
 },\
 [0x2791]={\
  direction=\"on\",\
 },\
 [0x2792]={\
  direction=\"on\",\
 },\
 [0x2793]={\
  direction=\"on\",\
 },\
 [0x2794]={\
  direction=\"on\",\
 },\
 [0x2795]={\
  direction=\"on\",\
 },\
 [0x2796]={\
  direction=\"on\",\
 },\
 [0x2797]={\
  direction=\"on\",\
 },\
 [0x2798]={\
  direction=\"on\",\
 },\
 [0x2799]={\
  direction=\"on\",\
 },\
 [0x279A]={\
  direction=\"on\",\
 },\
 [0x279B]={\
  direction=\"on\",\
 },\
 [0x279C]={\
  direction=\"on\",\
 },\
 [0x279D]={\
  direction=\"on\",\
 },\
 [0x279E]={\
  direction=\"on\",\
 },\
 [0x279F]={\
  direction=\"on\",\
 },\
 [0x27A0]={\
  direction=\"on\",\
 },\
 [0x27A1]={\
  direction=\"on\",\
 },\
 [0x27A2]={\
  direction=\"on\",\
 },\
 [0x27A3]={\
  direction=\"on\",\
 },\
 [0x27A4]={\
  direction=\"on\",\
 },\
 [0x27A5]={\
  direction=\"on\",\
 },\
 [0x27A6]={\
  direction=\"on\",\
 },\
 [0x27A7]={\
  direction=\"on\",\
 },\
 [0x27A8]={\
  direction=\"on\",\
 },\
 [0x27A9]={\
  direction=\"on\",\
 },\
 [0x27AA]={\
  direction=\"on\",\
 },\
 [0x27AB]={\
  direction=\"on\",\
 },\
 [0x27AC]={\
  direction=\"on\",\
 },\
 [0x27AD]={\
  direction=\"on\",\
 },\
 [0x27AE]={\
  direction=\"on\",\
 },\
 [0x27AF]={\
  direction=\"on\",\
 },\
 [0x27B0]={\
  direction=\"on\",\
 },\
 [0x27B1]={\
  direction=\"on\",\
 },\
 [0x27B2]={\
  direction=\"on\",\
 },\
 [0x27B3]={\
  direction=\"on\",\
 },\
 [0x27B4]={\
  direction=\"on\",\
 },\
 [0x27B5]={\
  direction=\"on\",\
 },\
 [0x27B6]={\
  direction=\"on\",\
 },\
 [0x27B7]={\
  direction=\"on\",\
 },\
 [0x27B8]={\
  direction=\"on\",\
 },\
 [0x27B9]={\
  direction=\"on\",\
 },\
 [0x27BA]={\
  direction=\"on\",\
 },\
 [0x27BB]={\
  direction=\"on\",\
 },\
 [0x27BC]={\
  direction=\"on\",\
 },\
 [0x27BD]={\
  direction=\"on\",\
 },\
 [0x27BE]={\
  direction=\"on\",\
 },\
 [0x27BF]={\
  direction=\"on\",\
 },\
 [0x27C0]={\
  direction=\"on\",\
 },\
 [0x27C1]={\
  direction=\"on\",\
 },\
 [0x27C2]={\
  direction=\"on\",\
 },\
 [0x27C3]={\
  direction=\"on\",\
  mirror=0x27C4,\
 },\
 [0x27C4]={\
  direction=\"on\",\
  mirror=0x27C3,\
 },\
 [0x27C5]={\
  direction=\"on\",\
  mirror=0x27C6,\
 },\
 [0x27C6]={\
  direction=\"on\",\
  mirror=0x27C5,\
 },\
 [0x27C7]={\
  direction=\"on\",\
 },\
 [0x27C8]={\
  direction=\"on\",\
  mirror=0x27C9,\
 },\
 [0x27C9]={\
  direction=\"on\",\
  mirror=0x27C8,\
 },\
 [0x27CA]={\
  direction=\"on\",\
 },\
 [0x27CB]={\
  direction=\"on\",\
  mirror=0x27CD,\
 },\
 [0x27CC]={\
  direction=\"on\",\
 },\
 [0x27CD]={\
  direction=\"on\",\
  mirror=0x27CB,\
 },\
 [0x27CE]={\
  direction=\"on\",\
 },\
 [0x27CF]={\
  direction=\"on\",\
 },\
 [0x27D0]={\
  direction=\"on\",\
 },\
 [0x27D1]={\
  direction=\"on\",\
 },\
 [0x27D2]={\
  direction=\"on\",\
 },\
 [0x27D3]={\
  direction=\"on\",\
 },\
 [0x27D4]={\
  direction=\"on\",\
 },\
 [0x27D5]={\
  direction=\"on\",\
  mirror=0x27D6,\
 },\
 [0x27D6]={\
  direction=\"on\",\
  mirror=0x27D5,\
 },\
 [0x27D7]={\
  direction=\"on\",\
 },\
 [0x27D8]={\
  direction=\"on\",\
 },\
 [0x27D9]={\
  direction=\"on\",\
 },\
 [0x27DA]={\
  direction=\"on\",\
 },\
 [0x27DB]={\
  direction=\"on\",\
 },\
 [0x27DC]={\
  direction=\"on\",\
 },\
 [0x27DD]={\
  direction=\"on\",\
  mirror=0x27DE,\
 },\
 [0x27DE]={\
  direction=\"on\",\
  mirror=0x27DD,\
 },\
 [0x27DF]={\
  direction=\"on\",\
 },\
 [0x27E0]={\
  direction=\"on\",\
 },\
 [0x27E1]={\
  direction=\"on\",\
 },\
 [0x27E2]={\
  direction=\"on\",\
  mirror=0x27E3,\
 },\
 [0x27E3]={\
  direction=\"on\",\
  mirror=0x27E2,\
 },\
 [0x27E4]={\
  direction=\"on\",\
  mirror=0x27E5,\
 },\
 [0x27E5]={\
  direction=\"on\",\
  mirror=0x27E4,\
 },\
 [0x27E6]={\
  direction=\"on\",\
  mirror=0x27E7,\
 },\
 [0x27E7]={\
  direction=\"on\",\
  mirror=0x27E6,\
 },\
 [0x27E8]={\
  direction=\"on\",\
  mirror=0x27E9,\
 },\
 [0x27E9]={\
  direction=\"on\",\
  mirror=0x27E8,\
 },\
 [0x27EA]={\
  direction=\"on\",\
  mirror=0x27EB,\
 },\
 [0x27EB]={\
  direction=\"on\",\
  mirror=0x27EA,\
 },\
 [0x27EC]={\
  direction=\"on\",\
  mirror=0x27ED,\
 },\
 [0x27ED]={\
  direction=\"on\",\
  mirror=0x27EC,\
 },\
 [0x27EE]={\
  direction=\"on\",\
  mirror=0x27EF,\
 },\
 [0x27EF]={\
  direction=\"on\",\
  mirror=0x27EE,\
 },\
 [0x27F0]={\
  direction=\"on\",\
 },\
 [0x27F1]={\
  direction=\"on\",\
 },\
 [0x27F2]={\
  direction=\"on\",\
 },\
 [0x27F3]={\
  direction=\"on\",\
 },\
 [0x27F4]={\
  direction=\"on\",\
 },\
 [0x27F5]={\
  direction=\"on\",\
 },\
 [0x27F6]={\
  direction=\"on\",\
 },\
 [0x27F7]={\
  direction=\"on\",\
 },\
 [0x27F8]={\
  direction=\"on\",\
 },\
 [0x27F9]={\
  direction=\"on\",\
 },\
 [0x27FA]={\
  direction=\"on\",\
 },\
 [0x27FB]={\
  direction=\"on\",\
 },\
 [0x27FC]={\
  direction=\"on\",\
 },\
 [0x27FD]={\
  direction=\"on\",\
 },\
 [0x27FE]={\
  direction=\"on\",\
 },\
 [0x27FF]={\
  direction=\"on\",\
 },\
 [0x2800]={\
  direction=\"l\",\
 },\
 [0x2801]={\
  direction=\"l\",\
 },\
 [0x2802]={\
  direction=\"l\",\
 },\
 [0x2803]={\
  direction=\"l\",\
 },\
 [0x2804]={\
  direction=\"l\",\
 },\
 [0x2805]={\
  direction=\"l\",\
 },\
 [0x2806]={\
  direction=\"l\",\
 },\
 [0x2807]={\
  direction=\"l\",\
 },\
 [0x2808]={\
  direction=\"l\",\
 },\
 [0x2809]={\
  direction=\"l\",\
 },\
 [0x280A]={\
  direction=\"l\",\
 },\
 [0x280B]={\
  direction=\"l\",\
 },\
 [0x280C]={\
  direction=\"l\",\
 },\
 [0x280D]={\
  direction=\"l\",\
 },\
 [0x280E]={\
  direction=\"l\",\
 },\
 [0x280F]={\
  direction=\"l\",\
 },\
 [0x2810]={\
  direction=\"l\",\
 },\
 [0x2811]={\
  direction=\"l\",\
 },\
 [0x2812]={\
  direction=\"l\",\
 },\
 [0x2813]={\
  direction=\"l\",\
 },\
 [0x2814]={\
  direction=\"l\",\
 },\
 [0x2815]={\
  direction=\"l\",\
 },\
 [0x2816]={\
  direction=\"l\",\
 },\
 [0x2817]={\
  direction=\"l\",\
 },\
 [0x2818]={\
  direction=\"l\",\
 },\
 [0x2819]={\
  direction=\"l\",\
 },\
 [0x281A]={\
  direction=\"l\",\
 },\
 [0x281B]={\
  direction=\"l\",\
 },\
 [0x281C]={\
  direction=\"l\",\
 },\
 [0x281D]={\
  direction=\"l\",\
 },\
 [0x281E]={\
  direction=\"l\",\
 },\
 [0x281F]={\
  direction=\"l\",\
 },\
 [0x2820]={\
  direction=\"l\",\
 },\
 [0x2821]={\
  direction=\"l\",\
 },\
 [0x2822]={\
  direction=\"l\",\
 },\
 [0x2823]={\
  direction=\"l\",\
 },\
 [0x2824]={\
  direction=\"l\",\
 },\
 [0x2825]={\
  direction=\"l\",\
 },\
 [0x2826]={\
  direction=\"l\",\
 },\
 [0x2827]={\
  direction=\"l\",\
 },\
 [0x2828]={\
  direction=\"l\",\
 },\
 [0x2829]={\
  direction=\"l\",\
 },\
 [0x282A]={\
  direction=\"l\",\
 },\
 [0x282B]={\
  direction=\"l\",\
 },\
 [0x282C]={\
  direction=\"l\",\
 },\
 [0x282D]={\
  direction=\"l\",\
 },\
 [0x282E]={\
  direction=\"l\",\
 },\
 [0x282F]={\
  direction=\"l\",\
 },\
 [0x2830]={\
  direction=\"l\",\
 },\
 [0x2831]={\
  direction=\"l\",\
 },\
 [0x2832]={\
  direction=\"l\",\
 },\
 [0x2833]={\
  direction=\"l\",\
 },\
 [0x2834]={\
  direction=\"l\",\
 },\
 [0x2835]={\
  direction=\"l\",\
 },\
 [0x2836]={\
  direction=\"l\",\
 },\
 [0x2837]={\
  direction=\"l\",\
 },\
 [0x2838]={\
  direction=\"l\",\
 },\
 [0x2839]={\
  direction=\"l\",\
 },\
 [0x283A]={\
  direction=\"l\",\
 },\
 [0x283B]={\
  direction=\"l\",\
 },\
 [0x283C]={\
  direction=\"l\",\
 },\
 [0x283D]={\
  direction=\"l\",\
 },\
 [0x283E]={\
  direction=\"l\",\
 },\
 [0x283F]={\
  direction=\"l\",\
 },\
 [0x2840]={\
  direction=\"l\",\
 },\
 [0x2841]={\
  direction=\"l\",\
 },\
 [0x2842]={\
  direction=\"l\",\
 },\
 [0x2843]={\
  direction=\"l\",\
 },\
 [0x2844]={\
  direction=\"l\",\
 },\
 [0x2845]={\
  direction=\"l\",\
 },\
 [0x2846]={\
  direction=\"l\",\
 },\
 [0x2847]={\
  direction=\"l\",\
 },\
 [0x2848]={\
  direction=\"l\",\
 },\
 [0x2849]={\
  direction=\"l\",\
 },\
 [0x284A]={\
  direction=\"l\",\
 },\
 [0x284B]={\
  direction=\"l\",\
 },\
 [0x284C]={\
  direction=\"l\",\
 },\
 [0x284D]={\
  direction=\"l\",\
 },\
 [0x284E]={\
  direction=\"l\",\
 },\
 [0x284F]={\
  direction=\"l\",\
 },\
 [0x2850]={\
  direction=\"l\",\
 },\
 [0x2851]={\
  direction=\"l\",\
 },\
 [0x2852]={\
  direction=\"l\",\
 },\
 [0x2853]={\
  direction=\"l\",\
 },\
 [0x2854]={\
  direction=\"l\",\
 },\
 [0x2855]={\
  direction=\"l\",\
 },\
 [0x2856]={\
  direction=\"l\",\
 },\
 [0x2857]={\
  direction=\"l\",\
 },\
 [0x2858]={\
  direction=\"l\",\
 },\
 [0x2859]={\
  direction=\"l\",\
 },\
 [0x285A]={\
  direction=\"l\",\
 },\
 [0x285B]={\
  direction=\"l\",\
 },\
 [0x285C]={\
  direction=\"l\",\
 },\
 [0x285D]={\
  direction=\"l\",\
 },\
 [0x285E]={\
  direction=\"l\",\
 },\
 [0x285F]={\
  direction=\"l\",\
 },\
 [0x2860]={\
  direction=\"l\",\
 },\
 [0x2861]={\
  direction=\"l\",\
 },\
 [0x2862]={\
  direction=\"l\",\
 },\
 [0x2863]={\
  direction=\"l\",\
 },\
 [0x2864]={\
  direction=\"l\",\
 },\
 [0x2865]={\
  direction=\"l\",\
 },\
 [0x2866]={\
  direction=\"l\",\
 },\
 [0x2867]={\
  direction=\"l\",\
 },\
 [0x2868]={\
  direction=\"l\",\
 },\
 [0x2869]={\
  direction=\"l\",\
 },\
 [0x286A]={\
  direction=\"l\",\
 },\
 [0x286B]={\
  direction=\"l\",\
 },\
 [0x286C]={\
  direction=\"l\",\
 },\
 [0x286D]={\
  direction=\"l\",\
 },\
 [0x286E]={\
  direction=\"l\",\
 },\
 [0x286F]={\
  direction=\"l\",\
 },\
 [0x2870]={\
  direction=\"l\",\
 },\
 [0x2871]={\
  direction=\"l\",\
 },\
 [0x2872]={\
  direction=\"l\",\
 },\
 [0x2873]={\
  direction=\"l\",\
 },\
 [0x2874]={\
  direction=\"l\",\
 },\
 [0x2875]={\
  direction=\"l\",\
 },\
 [0x2876]={\
  direction=\"l\",\
 },\
 [0x2877]={\
  direction=\"l\",\
 },\
 [0x2878]={\
  direction=\"l\",\
 },\
 [0x2879]={\
  direction=\"l\",\
 },\
 [0x287A]={\
  direction=\"l\",\
 },\
 [0x287B]={\
  direction=\"l\",\
 },\
 [0x287C]={\
  direction=\"l\",\
 },\
 [0x287D]={\
  direction=\"l\",\
 },\
 [0x287E]={\
  direction=\"l\",\
 },\
 [0x287F]={\
  direction=\"l\",\
 },\
 [0x2880]={\
  direction=\"l\",\
 },\
 [0x2881]={\
  direction=\"l\",\
 },\
 [0x2882]={\
  direction=\"l\",\
 },\
 [0x2883]={\
  direction=\"l\",\
 },\
 [0x2884]={\
  direction=\"l\",\
 },\
 [0x2885]={\
  direction=\"l\",\
 },\
 [0x2886]={\
  direction=\"l\",\
 },\
 [0x2887]={\
  direction=\"l\",\
 },\
 [0x2888]={\
  direction=\"l\",\
 },\
 [0x2889]={\
  direction=\"l\",\
 },\
 [0x288A]={\
  direction=\"l\",\
 },\
 [0x288B]={\
  direction=\"l\",\
 },\
 [0x288C]={\
  direction=\"l\",\
 },\
 [0x288D]={\
  direction=\"l\",\
 },\
 [0x288E]={\
  direction=\"l\",\
 },\
 [0x288F]={\
  direction=\"l\",\
 },\
 [0x2890]={\
  direction=\"l\",\
 },\
 [0x2891]={\
  direction=\"l\",\
 },\
 [0x2892]={\
  direction=\"l\",\
 },\
 [0x2893]={\
  direction=\"l\",\
 },\
 [0x2894]={\
  direction=\"l\",\
 },\
 [0x2895]={\
  direction=\"l\",\
 },\
 [0x2896]={\
  direction=\"l\",\
 },\
 [0x2897]={\
  direction=\"l\",\
 },\
 [0x2898]={\
  direction=\"l\",\
 },\
 [0x2899]={\
  direction=\"l\",\
 },\
 [0x289A]={\
  direction=\"l\",\
 },\
 [0x289B]={\
  direction=\"l\",\
 },\
 [0x289C]={\
  direction=\"l\",\
 },\
 [0x289D]={\
  direction=\"l\",\
 },\
 [0x289E]={\
  direction=\"l\",\
 },\
 [0x289F]={\
  direction=\"l\",\
 },\
 [0x28A0]={\
  direction=\"l\",\
 },\
 [0x28A1]={\
  direction=\"l\",\
 },\
 [0x28A2]={\
  direction=\"l\",\
 },\
 [0x28A3]={\
  direction=\"l\",\
 },\
 [0x28A4]={\
  direction=\"l\",\
 },\
 [0x28A5]={\
  direction=\"l\",\
 },\
 [0x28A6]={\
  direction=\"l\",\
 },\
 [0x28A7]={\
  direction=\"l\",\
 },\
 [0x28A8]={\
  direction=\"l\",\
 },\
 [0x28A9]={\
  direction=\"l\",\
 },\
 [0x28AA]={\
  direction=\"l\",\
 },\
 [0x28AB]={\
  direction=\"l\",\
 },\
 [0x28AC]={\
  direction=\"l\",\
 },\
 [0x28AD]={\
  direction=\"l\",\
 },\
 [0x28AE]={\
  direction=\"l\",\
 },\
 [0x28AF]={\
  direction=\"l\",\
 },\
 [0x28B0]={\
  direction=\"l\",\
 },\
 [0x28B1]={\
  direction=\"l\",\
 },\
 [0x28B2]={\
  direction=\"l\",\
 },\
 [0x28B3]={\
  direction=\"l\",\
 },\
 [0x28B4]={\
  direction=\"l\",\
 },\
 [0x28B5]={\
  direction=\"l\",\
 },\
 [0x28B6]={\
  direction=\"l\",\
 },\
 [0x28B7]={\
  direction=\"l\",\
 },\
 [0x28B8]={\
  direction=\"l\",\
 },\
 [0x28B9]={\
  direction=\"l\",\
 },\
 [0x28BA]={\
  direction=\"l\",\
 },\
 [0x28BB]={\
  direction=\"l\",\
 },\
 [0x28BC]={\
  direction=\"l\",\
 },\
 [0x28BD]={\
  direction=\"l\",\
 },\
 [0x28BE]={\
  direction=\"l\",\
 },\
 [0x28BF]={\
  direction=\"l\",\
 },\
 [0x28C0]={\
  direction=\"l\",\
 },\
 [0x28C1]={\
  direction=\"l\",\
 },\
 [0x28C2]={\
  direction=\"l\",\
 },\
 [0x28C3]={\
  direction=\"l\",\
 },\
 [0x28C4]={\
  direction=\"l\",\
 },\
 [0x28C5]={\
  direction=\"l\",\
 },\
 [0x28C6]={\
  direction=\"l\",\
 },\
 [0x28C7]={\
  direction=\"l\",\
 },\
 [0x28C8]={\
  direction=\"l\",\
 },\
 [0x28C9]={\
  direction=\"l\",\
 },\
 [0x28CA]={\
  direction=\"l\",\
 },\
 [0x28CB]={\
  direction=\"l\",\
 },\
 [0x28CC]={\
  direction=\"l\",\
 },\
 [0x28CD]={\
  direction=\"l\",\
 },\
 [0x28CE]={\
  direction=\"l\",\
 },\
 [0x28CF]={\
  direction=\"l\",\
 },\
 [0x28D0]={\
  direction=\"l\",\
 },\
 [0x28D1]={\
  direction=\"l\",\
 },\
 [0x28D2]={\
  direction=\"l\",\
 },\
 [0x28D3]={\
  direction=\"l\",\
 },\
 [0x28D4]={\
  direction=\"l\",\
 },\
 [0x28D5]={\
  direction=\"l\",\
 },\
 [0x28D6]={\
  direction=\"l\",\
 },\
 [0x28D7]={\
  direction=\"l\",\
 },\
 [0x28D8]={\
  direction=\"l\",\
 },\
 [0x28D9]={\
  direction=\"l\",\
 },\
 [0x28DA]={\
  direction=\"l\",\
 },\
 [0x28DB]={\
  direction=\"l\",\
 },\
 [0x28DC]={\
  direction=\"l\",\
 },\
 [0x28DD]={\
  direction=\"l\",\
 },\
 [0x28DE]={\
  direction=\"l\",\
 },\
 [0x28DF]={\
  direction=\"l\",\
 },\
 [0x28E0]={\
  direction=\"l\",\
 },\
 [0x28E1]={\
  direction=\"l\",\
 },\
 [0x28E2]={\
  direction=\"l\",\
 },\
 [0x28E3]={\
  direction=\"l\",\
 },\
 [0x28E4]={\
  direction=\"l\",\
 },\
 [0x28E5]={\
  direction=\"l\",\
 },\
 [0x28E6]={\
  direction=\"l\",\
 },\
 [0x28E7]={\
  direction=\"l\",\
 },\
 [0x28E8]={\
  direction=\"l\",\
 },\
 [0x28E9]={\
  direction=\"l\",\
 },\
 [0x28EA]={\
  direction=\"l\",\
 },\
 [0x28EB]={\
  direction=\"l\",\
 },\
 [0x28EC]={\
  direction=\"l\",\
 },\
 [0x28ED]={\
  direction=\"l\",\
 },\
 [0x28EE]={\
  direction=\"l\",\
 },\
 [0x28EF]={\
  direction=\"l\",\
 },\
 [0x28F0]={\
  direction=\"l\",\
 },\
 [0x28F1]={\
  direction=\"l\",\
 },\
 [0x28F2]={\
  direction=\"l\",\
 },\
 [0x28F3]={\
  direction=\"l\",\
 },\
 [0x28F4]={\
  direction=\"l\",\
 },\
 [0x28F5]={\
  direction=\"l\",\
 },\
 [0x28F6]={\
  direction=\"l\",\
 },\
 [0x28F7]={\
  direction=\"l\",\
 },\
 [0x28F8]={\
  direction=\"l\",\
 },\
 [0x28F9]={\
  direction=\"l\",\
 },\
 [0x28FA]={\
  direction=\"l\",\
 },\
 [0x28FB]={\
  direction=\"l\",\
 },\
 [0x28FC]={\
  direction=\"l\",\
 },\
 [0x28FD]={\
  direction=\"l\",\
 },\
 [0x28FE]={\
  direction=\"l\",\
 },\
 [0x28FF]={\
  direction=\"l\",\
 },\
 [0x2900]={\
  direction=\"on\",\
 },\
 [0x2901]={\
  direction=\"on\",\
 },\
 [0x2902]={\
  direction=\"on\",\
 },\
 [0x2903]={\
  direction=\"on\",\
 },\
 [0x2904]={\
  direction=\"on\",\
 },\
 [0x2905]={\
  direction=\"on\",\
 },\
 [0x2906]={\
  direction=\"on\",\
 },\
 [0x2907]={\
  direction=\"on\",\
 },\
 [0x2908]={\
  direction=\"on\",\
 },\
 [0x2909]={\
  direction=\"on\",\
 },\
 [0x290A]={\
  direction=\"on\",\
 },\
 [0x290B]={\
  direction=\"on\",\
 },\
 [0x290C]={\
  direction=\"on\",\
 },\
 [0x290D]={\
  direction=\"on\",\
 },\
 [0x290E]={\
  direction=\"on\",\
 },\
 [0x290F]={\
  direction=\"on\",\
 },\
 [0x2910]={\
  direction=\"on\",\
 },\
 [0x2911]={\
  direction=\"on\",\
 },\
 [0x2912]={\
  direction=\"on\",\
 },\
 [0x2913]={\
  direction=\"on\",\
 },\
 [0x2914]={\
  direction=\"on\",\
 },\
 [0x2915]={\
  direction=\"on\",\
 },\
 [0x2916]={\
  direction=\"on\",\
 },\
 [0x2917]={\
  direction=\"on\",\
 },\
 [0x2918]={\
  direction=\"on\",\
 },\
 [0x2919]={\
  direction=\"on\",\
 },\
 [0x291A]={\
  direction=\"on\",\
 },\
 [0x291B]={\
  direction=\"on\",\
 },\
 [0x291C]={\
  direction=\"on\",\
 },\
 [0x291D]={\
  direction=\"on\",\
 },\
 [0x291E]={\
  direction=\"on\",\
 },\
 [0x291F]={\
  direction=\"on\",\
 },\
 [0x2920]={\
  direction=\"on\",\
 },\
 [0x2921]={\
  direction=\"on\",\
 },\
 [0x2922]={\
  direction=\"on\",\
 },\
 [0x2923]={\
  direction=\"on\",\
 },\
 [0x2924]={\
  direction=\"on\",\
 },\
 [0x2925]={\
  direction=\"on\",\
 },\
 [0x2926]={\
  direction=\"on\",\
 },\
 [0x2927]={\
  direction=\"on\",\
 },\
 [0x2928]={\
  direction=\"on\",\
 },\
 [0x2929]={\
  direction=\"on\",\
 },\
 [0x292A]={\
  direction=\"on\",\
 },\
 [0x292B]={\
  direction=\"on\",\
 },\
 [0x292C]={\
  direction=\"on\",\
 },\
 [0x292D]={\
  direction=\"on\",\
 },\
 [0x292E]={\
  direction=\"on\",\
 },\
 [0x292F]={\
  direction=\"on\",\
 },\
 [0x2930]={\
  direction=\"on\",\
 },\
 [0x2931]={\
  direction=\"on\",\
 },\
 [0x2932]={\
  direction=\"on\",\
 },\
 [0x2933]={\
  direction=\"on\",\
 },\
 [0x2934]={\
  direction=\"on\",\
 },\
 [0x2935]={\
  direction=\"on\",\
 },\
 [0x2936]={\
  direction=\"on\",\
 },\
 [0x2937]={\
  direction=\"on\",\
 },\
 [0x2938]={\
  direction=\"on\",\
 },\
 [0x2939]={\
  direction=\"on\",\
 },\
 [0x293A]={\
  direction=\"on\",\
 },\
 [0x293B]={\
  direction=\"on\",\
 },\
 [0x293C]={\
  direction=\"on\",\
 },\
 [0x293D]={\
  direction=\"on\",\
 },\
 [0x293E]={\
  direction=\"on\",\
 },\
 [0x293F]={\
  direction=\"on\",\
 },\
 [0x2940]={\
  direction=\"on\",\
 },\
 [0x2941]={\
  direction=\"on\",\
 },\
 [0x2942]={\
  direction=\"on\",\
 },\
 [0x2943]={\
  direction=\"on\",\
 },\
 [0x2944]={\
  direction=\"on\",\
 },\
 [0x2945]={\
  direction=\"on\",\
 },\
 [0x2946]={\
  direction=\"on\",\
 },\
 [0x2947]={\
  direction=\"on\",\
 },\
 [0x2948]={\
  direction=\"on\",\
 },\
 [0x2949]={\
  direction=\"on\",\
 },\
 [0x294A]={\
  direction=\"on\",\
 },\
 [0x294B]={\
  direction=\"on\",\
 },\
 [0x294C]={\
  direction=\"on\",\
 },\
 [0x294D]={\
  direction=\"on\",\
 },\
 [0x294E]={\
  direction=\"on\",\
 },\
 [0x294F]={\
  direction=\"on\",\
 },\
 [0x2950]={\
  direction=\"on\",\
 },\
 [0x2951]={\
  direction=\"on\",\
 },\
 [0x2952]={\
  direction=\"on\",\
 },\
 [0x2953]={\
  direction=\"on\",\
 },\
 [0x2954]={\
  direction=\"on\",\
 },\
 [0x2955]={\
  direction=\"on\",\
 },\
 [0x2956]={\
  direction=\"on\",\
 },\
 [0x2957]={\
  direction=\"on\",\
 },\
 [0x2958]={\
  direction=\"on\",\
 },\
 [0x2959]={\
  direction=\"on\",\
 },\
 [0x295A]={\
  direction=\"on\",\
 },\
 [0x295B]={\
  direction=\"on\",\
 },\
 [0x295C]={\
  direction=\"on\",\
 },\
 [0x295D]={\
  direction=\"on\",\
 },\
 [0x295E]={\
  direction=\"on\",\
 },\
 [0x295F]={\
  direction=\"on\",\
 },\
 [0x2960]={\
  direction=\"on\",\
 },\
 [0x2961]={\
  direction=\"on\",\
 },\
 [0x2962]={\
  direction=\"on\",\
 },\
 [0x2963]={\
  direction=\"on\",\
 },\
 [0x2964]={\
  direction=\"on\",\
 },\
 [0x2965]={\
  direction=\"on\",\
 },\
 [0x2966]={\
  direction=\"on\",\
 },\
 [0x2967]={\
  direction=\"on\",\
 },\
 [0x2968]={\
  direction=\"on\",\
 },\
 [0x2969]={\
  direction=\"on\",\
 },\
 [0x296A]={\
  direction=\"on\",\
 },\
 [0x296B]={\
  direction=\"on\",\
 },\
 [0x296C]={\
  direction=\"on\",\
 },\
 [0x296D]={\
  direction=\"on\",\
 },\
 [0x296E]={\
  direction=\"on\",\
 },\
 [0x296F]={\
  direction=\"on\",\
 },\
 [0x2970]={\
  direction=\"on\",\
 },\
 [0x2971]={\
  direction=\"on\",\
 },\
 [0x2972]={\
  direction=\"on\",\
 },\
 [0x2973]={\
  direction=\"on\",\
 },\
 [0x2974]={\
  direction=\"on\",\
 },\
 [0x2975]={\
  direction=\"on\",\
 },\
 [0x2976]={\
  direction=\"on\",\
 },\
 [0x2977]={\
  direction=\"on\",\
 },\
 [0x2978]={\
  direction=\"on\",\
 },\
 [0x2979]={\
  direction=\"on\",\
 },\
 [0x297A]={\
  direction=\"on\",\
 },\
 [0x297B]={\
  direction=\"on\",\
 },\
 [0x297C]={\
  direction=\"on\",\
 },\
 [0x297D]={\
  direction=\"on\",\
 },\
 [0x297E]={\
  direction=\"on\",\
 },\
 [0x297F]={\
  direction=\"on\",\
 },\
 [0x2980]={\
  direction=\"on\",\
 },\
 [0x2981]={\
  direction=\"on\",\
 },\
 [0x2982]={\
  direction=\"on\",\
 },\
 [0x2983]={\
  direction=\"on\",\
  mirror=0x2984,\
 },\
 [0x2984]={\
  direction=\"on\",\
  mirror=0x2983,\
 },\
 [0x2985]={\
  direction=\"on\",\
  mirror=0x2986,\
 },\
 [0x2986]={\
  direction=\"on\",\
  mirror=0x2985,\
 },\
 [0x2987]={\
  direction=\"on\",\
  mirror=0x2988,\
 },\
 [0x2988]={\
  direction=\"on\",\
  mirror=0x2987,\
 },\
 [0x2989]={\
  direction=\"on\",\
  mirror=0x298A,\
 },\
 [0x298A]={\
  direction=\"on\",\
  mirror=0x2989,\
 },\
 [0x298B]={\
  direction=\"on\",\
  mirror=0x298C,\
 },\
 [0x298C]={\
  direction=\"on\",\
  mirror=0x298B,\
 },\
 [0x298D]={\
  direction=\"on\",\
  mirror=0x2990,\
 },\
 [0x298E]={\
  direction=\"on\",\
  mirror=0x298F,\
 },\
 [0x298F]={\
  direction=\"on\",\
  mirror=0x298E,\
 },\
 [0x2990]={\
  direction=\"on\",\
  mirror=0x298D,\
 },\
 [0x2991]={\
  direction=\"on\",\
  mirror=0x2992,\
 },\
 [0x2992]={\
  direction=\"on\",\
  mirror=0x2991,\
 },\
 [0x2993]={\
  direction=\"on\",\
  mirror=0x2994,\
 },\
 [0x2994]={\
  direction=\"on\",\
  mirror=0x2993,\
 },\
 [0x2995]={\
  direction=\"on\",\
  mirror=0x2996,\
 },\
 [0x2996]={\
  direction=\"on\",\
  mirror=0x2995,\
 },\
 [0x2997]={\
  direction=\"on\",\
  mirror=0x2998,\
 },\
 [0x2998]={\
  direction=\"on\",\
  mirror=0x2997,\
 },\
 [0x2999]={\
  direction=\"on\",\
 },\
 [0x299A]={\
  direction=\"on\",\
 },\
 [0x299B]={\
  direction=\"on\",\
 },\
 [0x299C]={\
  direction=\"on\",\
 },\
 [0x299D]={\
  direction=\"on\",\
 },\
 [0x299E]={\
  direction=\"on\",\
 },\
 [0x299F]={\
  direction=\"on\",\
 },\
 [0x29A0]={\
  direction=\"on\",\
 },\
 [0x29A1]={\
  direction=\"on\",\
 },\
 [0x29A2]={\
  direction=\"on\",\
 },\
 [0x29A3]={\
  direction=\"on\",\
 },\
 [0x29A4]={\
  direction=\"on\",\
 },\
 [0x29A5]={\
  direction=\"on\",\
 },\
 [0x29A6]={\
  direction=\"on\",\
 },\
 [0x29A7]={\
  direction=\"on\",\
 },\
 [0x29A8]={\
  direction=\"on\",\
 },\
 [0x29A9]={\
  direction=\"on\",\
 },\
 [0x29AA]={\
  direction=\"on\",\
 },\
 [0x29AB]={\
  direction=\"on\",\
 },\
 [0x29AC]={\
  direction=\"on\",\
 },\
 [0x29AD]={\
  direction=\"on\",\
 },\
 [0x29AE]={\
  direction=\"on\",\
 },\
 [0x29AF]={\
  direction=\"on\",\
 },\
 [0x29B0]={\
  direction=\"on\",\
 },\
 [0x29B1]={\
  direction=\"on\",\
 },\
 [0x29B2]={\
  direction=\"on\",\
 },\
 [0x29B3]={\
  direction=\"on\",\
 },\
 [0x29B4]={\
  direction=\"on\",\
 },\
 [0x29B5]={\
  direction=\"on\",\
 },\
 [0x29B6]={\
  direction=\"on\",\
 },\
 [0x29B7]={\
  direction=\"on\",\
 },\
 [0x29B8]={\
  direction=\"on\",\
  mirror=0x2298,\
 },\
 [0x29B9]={\
  direction=\"on\",\
 },\
 [0x29BA]={\
  direction=\"on\",\
 },\
 [0x29BB]={\
  direction=\"on\",\
 },\
 [0x29BC]={\
  direction=\"on\",\
 },\
 [0x29BD]={\
  direction=\"on\",\
 },\
 [0x29BE]={\
  direction=\"on\",\
 },\
 [0x29BF]={\
  direction=\"on\",\
 },\
 [0x29C0]={\
  direction=\"on\",\
  mirror=0x29C1,\
 },\
 [0x29C1]={\
  direction=\"on\",\
  mirror=0x29C0,\
 },\
 [0x29C2]={\
  direction=\"on\",\
 },\
 [0x29C3]={\
  direction=\"on\",\
 },\
 [0x29C4]={\
  direction=\"on\",\
  mirror=0x29C5,\
 },\
 [0x29C5]={\
  direction=\"on\",\
  mirror=0x29C4,\
 },\
 [0x29C6]={\
  direction=\"on\",\
 },\
 [0x29C7]={\
  direction=\"on\",\
 },\
 [0x29C8]={\
  direction=\"on\",\
 },\
 [0x29C9]={\
  direction=\"on\",\
 },\
 [0x29CA]={\
  direction=\"on\",\
 },\
 [0x29CB]={\
  direction=\"on\",\
 },\
 [0x29CC]={\
  direction=\"on\",\
 },\
 [0x29CD]={\
  direction=\"on\",\
 },\
 [0x29CE]={\
  direction=\"on\",\
 },\
 [0x29CF]={\
  direction=\"on\",\
  mirror=0x29D0,\
 },\
 [0x29D0]={\
  direction=\"on\",\
  mirror=0x29CF,\
 },\
 [0x29D1]={\
  direction=\"on\",\
  mirror=0x29D2,\
 },\
 [0x29D2]={\
  direction=\"on\",\
  mirror=0x29D1,\
 },\
 [0x29D3]={\
  direction=\"on\",\
 },\
 [0x29D4]={\
  direction=\"on\",\
  mirror=0x29D5,\
 },\
 [0x29D5]={\
  direction=\"on\",\
  mirror=0x29D4,\
 },\
 [0x29D6]={\
  direction=\"on\",\
 },\
 [0x29D7]={\
  direction=\"on\",\
 },\
 [0x29D8]={\
  direction=\"on\",\
  mirror=0x29D9,\
 },\
 [0x29D9]={\
  direction=\"on\",\
  mirror=0x29D8,\
 },\
 [0x29DA]={\
  direction=\"on\",\
  mirror=0x29DB,\
 },\
 [0x29DB]={\
  direction=\"on\",\
  mirror=0x29DA,\
 },\
 [0x29DC]={\
  direction=\"on\",\
 },\
 [0x29DD]={\
  direction=\"on\",\
 },\
 [0x29DE]={\
  direction=\"on\",\
 },\
 [0x29DF]={\
  direction=\"on\",\
 },\
 [0x29E0]={\
  direction=\"on\",\
 },\
 [0x29E1]={\
  direction=\"on\",\
 },\
 [0x29E2]={\
  direction=\"on\",\
 },\
 [0x29E3]={\
  direction=\"on\",\
 },\
 [0x29E4]={\
  direction=\"on\",\
 },\
 [0x29E5]={\
  direction=\"on\",\
 },\
 [0x29E6]={\
  direction=\"on\",\
 },\
 [0x29E7]={\
  direction=\"on\",\
 },\
 [0x29E8]={\
  direction=\"on\",\
 },\
 [0x29E9]={\
  direction=\"on\",\
 },\
 [0x29EA]={\
  direction=\"on\",\
 },\
 [0x29EB]={\
  direction=\"on\",\
 },\
 [0x29EC]={\
  direction=\"on\",\
 },\
 [0x29ED]={\
  direction=\"on\",\
 },\
 [0x29EE]={\
  direction=\"on\",\
 },\
 [0x29EF]={\
  direction=\"on\",\
 },\
 [0x29F0]={\
  direction=\"on\",\
 },\
 [0x29F1]={\
  direction=\"on\",\
 },\
 [0x29F2]={\
  direction=\"on\",\
 },\
 [0x29F3]={\
  direction=\"on\",\
 },\
 [0x29F4]={\
  direction=\"on\",\
 },\
 [0x29F5]={\
  direction=\"on\",\
  mirror=0x2215,\
 },\
 [0x29F6]={\
  direction=\"on\",\
 },\
 [0x29F7]={\
  direction=\"on\",\
 },\
 [0x29F8]={\
  direction=\"on\",\
  mirror=0x29F9,\
 },\
 [0x29F9]={\
  direction=\"on\",\
  mirror=0x29F8,\
 },\
 [0x29FA]={\
  direction=\"on\",\
 },\
 [0x29FB]={\
  direction=\"on\",\
 },\
 [0x29FC]={\
  direction=\"on\",\
  mirror=0x29FD,\
 },\
 [0x29FD]={\
  direction=\"on\",\
  mirror=0x29FC,\
 },\
 [0x29FE]={\
  direction=\"on\",\
 },\
 [0x29FF]={\
  direction=\"on\",\
 },\
 [0x2A00]={\
  direction=\"on\",\
 },\
 [0x2A01]={\
  direction=\"on\",\
 },\
 [0x2A02]={\
  direction=\"on\",\
 },\
 [0x2A03]={\
  direction=\"on\",\
 },\
 [0x2A04]={\
  direction=\"on\",\
 },\
 [0x2A05]={\
  direction=\"on\",\
 },\
 [0x2A06]={\
  direction=\"on\",\
 },\
 [0x2A07]={\
  direction=\"on\",\
 },\
 [0x2A08]={\
  direction=\"on\",\
 },\
 [0x2A09]={\
  direction=\"on\",\
 },\
 [0x2A0A]={\
  direction=\"on\",\
 },\
 [0x2A0B]={\
  direction=\"on\",\
 },\
 [0x2A0C]={\
  direction=\"on\",\
 },\
 [0x2A0D]={\
  direction=\"on\",\
 },\
 [0x2A0E]={\
  direction=\"on\",\
 },\
 [0x2A0F]={\
  direction=\"on\",\
 },\
 [0x2A10]={\
  direction=\"on\",\
 },\
 [0x2A11]={\
  direction=\"on\",\
 },\
 [0x2A12]={\
  direction=\"on\",\
 },\
 [0x2A13]={\
  direction=\"on\",\
 },\
 [0x2A14]={\
  direction=\"on\",\
 },\
 [0x2A15]={\
  direction=\"on\",\
 },\
 [0x2A16]={\
  direction=\"on\",\
 },\
 [0x2A17]={\
  direction=\"on\",\
 },\
 [0x2A18]={\
  direction=\"on\",\
 },\
 [0x2A19]={\
  direction=\"on\",\
 },\
 [0x2A1A]={\
  direction=\"on\",\
 },\
 [0x2A1B]={\
  direction=\"on\",\
 },\
 [0x2A1C]={\
  direction=\"on\",\
 },\
 [0x2A1D]={\
  direction=\"on\",\
 },\
 [0x2A1E]={\
  direction=\"on\",\
 },\
 [0x2A1F]={\
  direction=\"on\",\
 },\
 [0x2A20]={\
  direction=\"on\",\
 },\
 [0x2A21]={\
  direction=\"on\",\
 },\
 [0x2A22]={\
  direction=\"on\",\
 },\
 [0x2A23]={\
  direction=\"on\",\
 },\
 [0x2A24]={\
  direction=\"on\",\
 },\
 [0x2A25]={\
  direction=\"on\",\
 },\
 [0x2A26]={\
  direction=\"on\",\
 },\
 [0x2A27]={\
  direction=\"on\",\
 },\
 [0x2A28]={\
  direction=\"on\",\
 },\
 [0x2A29]={\
  direction=\"on\",\
 },\
 [0x2A2A]={\
  direction=\"on\",\
 },\
 [0x2A2B]={\
  direction=\"on\",\
  mirror=0x2A2C,\
 },\
 [0x2A2C]={\
  direction=\"on\",\
  mirror=0x2A2B,\
 },\
 [0x2A2D]={\
  direction=\"on\",\
  mirror=0x2A2E,\
 },\
 [0x2A2E]={\
  direction=\"on\",\
  mirror=0x2A2D,\
 },\
 [0x2A2F]={\
  direction=\"on\",\
 },\
 [0x2A30]={\
  direction=\"on\",\
 },\
 [0x2A31]={\
  direction=\"on\",\
 },\
 [0x2A32]={\
  direction=\"on\",\
 },\
 [0x2A33]={\
  direction=\"on\",\
 },\
 [0x2A34]={\
  direction=\"on\",\
  mirror=0x2A35,\
 },\
 [0x2A35]={\
  direction=\"on\",\
  mirror=0x2A34,\
 },\
 [0x2A36]={\
  direction=\"on\",\
 },\
 [0x2A37]={\
  direction=\"on\",\
 },\
 [0x2A38]={\
  direction=\"on\",\
 },\
 [0x2A39]={\
  direction=\"on\",\
 },\
 [0x2A3A]={\
  direction=\"on\",\
 },\
 [0x2A3B]={\
  direction=\"on\",\
 },\
 [0x2A3C]={\
  direction=\"on\",\
  mirror=0x2A3D,\
 },\
 [0x2A3D]={\
  direction=\"on\",\
  mirror=0x2A3C,\
 },\
 [0x2A3E]={\
  direction=\"on\",\
 },\
 [0x2A3F]={\
  direction=\"on\",\
 },\
 [0x2A40]={\
  direction=\"on\",\
 },\
 [0x2A41]={\
  direction=\"on\",\
 },\
 [0x2A42]={\
  direction=\"on\",\
 },\
 [0x2A43]={\
  direction=\"on\",\
 },\
 [0x2A44]={\
  direction=\"on\",\
 },\
 [0x2A45]={\
  direction=\"on\",\
 },\
 [0x2A46]={\
  direction=\"on\",\
 },\
 [0x2A47]={\
  direction=\"on\",\
 },\
 [0x2A48]={\
  direction=\"on\",\
 },\
 [0x2A49]={\
  direction=\"on\",\
 },\
 [0x2A4A]={\
  direction=\"on\",\
 },\
 [0x2A4B]={\
  direction=\"on\",\
 },\
 [0x2A4C]={\
  direction=\"on\",\
 },\
 [0x2A4D]={\
  direction=\"on\",\
 },\
 [0x2A4E]={\
  direction=\"on\",\
 },\
 [0x2A4F]={\
  direction=\"on\",\
 },\
 [0x2A50]={\
  direction=\"on\",\
 },\
 [0x2A51]={\
  direction=\"on\",\
 },\
 [0x2A52]={\
  direction=\"on\",\
 },\
 [0x2A53]={\
  direction=\"on\",\
 },\
 [0x2A54]={\
  direction=\"on\",\
 },\
 [0x2A55]={\
  direction=\"on\",\
 },\
 [0x2A56]={\
  direction=\"on\",\
 },\
 [0x2A57]={\
  direction=\"on\",\
 },\
 [0x2A58]={\
  direction=\"on\",\
 },\
 [0x2A59]={\
  direction=\"on\",\
 },\
 [0x2A5A]={\
  direction=\"on\",\
 },\
 [0x2A5B]={\
  direction=\"on\",\
 },\
 [0x2A5C]={\
  direction=\"on\",\
 },\
 [0x2A5D]={\
  direction=\"on\",\
 },\
 [0x2A5E]={\
  direction=\"on\",\
 },\
 [0x2A5F]={\
  direction=\"on\",\
 },\
 [0x2A60]={\
  direction=\"on\",\
 },\
 [0x2A61]={\
  direction=\"on\",\
 },\
 [0x2A62]={\
  direction=\"on\",\
 },\
 [0x2A63]={\
  direction=\"on\",\
 },\
 [0x2A64]={\
  direction=\"on\",\
  mirror=0x2A65,\
 },\
 [0x2A65]={\
  direction=\"on\",\
  mirror=0x2A64,\
 },\
 [0x2A66]={\
  direction=\"on\",\
 },\
 [0x2A67]={\
  direction=\"on\",\
 },\
 [0x2A68]={\
  direction=\"on\",\
 },\
 [0x2A69]={\
  direction=\"on\",\
 },\
 [0x2A6A]={\
  direction=\"on\",\
 },\
 [0x2A6B]={\
  direction=\"on\",\
 },\
 [0x2A6C]={\
  direction=\"on\",\
 },\
 [0x2A6D]={\
  direction=\"on\",\
 },\
 [0x2A6E]={\
  direction=\"on\",\
 },\
 [0x2A6F]={\
  direction=\"on\",\
 },\
 [0x2A70]={\
  direction=\"on\",\
 },\
 [0x2A71]={\
  direction=\"on\",\
 },\
 [0x2A72]={\
  direction=\"on\",\
 },\
 [0x2A73]={\
  direction=\"on\",\
 },\
 [0x2A74]={\
  direction=\"on\",\
 },\
 [0x2A75]={\
  direction=\"on\",\
 },\
 [0x2A76]={\
  direction=\"on\",\
 },\
 [0x2A77]={\
  direction=\"on\",\
 },\
 [0x2A78]={\
  direction=\"on\",\
 },\
 [0x2A79]={\
  direction=\"on\",\
  mirror=0x2A7A,\
 },\
 [0x2A7A]={\
  direction=\"on\",\
  mirror=0x2A79,\
 },\
 [0x2A7B]={\
  direction=\"on\",\
 },\
 [0x2A7C]={\
  direction=\"on\",\
 },\
 [0x2A7D]={\
  direction=\"on\",\
  mirror=0x2A7E,\
 },\
 [0x2A7E]={\
  direction=\"on\",\
  mirror=0x2A7D,\
 },\
 [0x2A7F]={\
  direction=\"on\",\
  mirror=0x2A80,\
 },\
 [0x2A80]={\
  direction=\"on\",\
  mirror=0x2A7F,\
 },\
 [0x2A81]={\
  direction=\"on\",\
  mirror=0x2A82,\
 },\
 [0x2A82]={\
  direction=\"on\",\
  mirror=0x2A81,\
 },\
 [0x2A83]={\
  direction=\"on\",\
  mirror=0x2A84,\
 },\
 [0x2A84]={\
  direction=\"on\",\
  mirror=0x2A83,\
 },\
 [0x2A85]={\
  direction=\"on\",\
 },\
 [0x2A86]={\
  direction=\"on\",\
 },\
 [0x2A87]={\
  direction=\"on\",\
 },\
 [0x2A88]={\
  direction=\"on\",\
 },\
 [0x2A89]={\
  direction=\"on\",\
 },\
 [0x2A8A]={\
  direction=\"on\",\
 },\
 [0x2A8B]={\
  direction=\"on\",\
  mirror=0x2A8C,\
 },\
 [0x2A8C]={\
  direction=\"on\",\
  mirror=0x2A8B,\
 },\
 [0x2A8D]={\
  direction=\"on\",\
 },\
 [0x2A8E]={\
  direction=\"on\",\
 },\
 [0x2A8F]={\
  direction=\"on\",\
 },\
 [0x2A90]={\
  direction=\"on\",\
 },\
 [0x2A91]={\
  direction=\"on\",\
  mirror=0x2A92,\
 },\
 [0x2A92]={\
  direction=\"on\",\
  mirror=0x2A91,\
 },\
 [0x2A93]={\
  direction=\"on\",\
  mirror=0x2A94,\
 },\
 [0x2A94]={\
  direction=\"on\",\
  mirror=0x2A93,\
 },\
 [0x2A95]={\
  direction=\"on\",\
  mirror=0x2A96,\
 },\
 [0x2A96]={\
  direction=\"on\",\
  mirror=0x2A95,\
 },\
 [0x2A97]={\
  direction=\"on\",\
  mirror=0x2A98,\
 },\
 [0x2A98]={\
  direction=\"on\",\
  mirror=0x2A97,\
 },\
 [0x2A99]={\
  direction=\"on\",\
  mirror=0x2A9A,\
 },\
 [0x2A9A]={\
  direction=\"on\",\
  mirror=0x2A99,\
 },\
 [0x2A9B]={\
  direction=\"on\",\
  mirror=0x2A9C,\
 },\
 [0x2A9C]={\
  direction=\"on\",\
  mirror=0x2A9B,\
 },\
 [0x2A9D]={\
  direction=\"on\",\
 },\
 [0x2A9E]={\
  direction=\"on\",\
 },\
 [0x2A9F]={\
  direction=\"on\",\
 },\
 [0x2AA0]={\
  direction=\"on\",\
 },\
 [0x2AA1]={\
  direction=\"on\",\
  mirror=0x2AA2,\
 },\
 [0x2AA2]={\
  direction=\"on\",\
  mirror=0x2AA1,\
 },\
 [0x2AA3]={\
  direction=\"on\",\
 },\
 [0x2AA4]={\
  direction=\"on\",\
 },\
 [0x2AA5]={\
  direction=\"on\",\
 },\
 [0x2AA6]={\
  direction=\"on\",\
  mirror=0x2AA7,\
 },\
 [0x2AA7]={\
  direction=\"on\",\
  mirror=0x2AA6,\
 },\
 [0x2AA8]={\
  direction=\"on\",\
  mirror=0x2AA9,\
 },\
 [0x2AA9]={\
  direction=\"on\",\
  mirror=0x2AA8,\
 },\
 [0x2AAA]={\
  direction=\"on\",\
  mirror=0x2AAB,\
 },\
 [0x2AAB]={\
  direction=\"on\",\
  mirror=0x2AAA,\
 },\
 [0x2AAC]={\
  direction=\"on\",\
  mirror=0x2AAD,\
 },\
 [0x2AAD]={\
  direction=\"on\",\
  mirror=0x2AAC,\
 },\
 [0x2AAE]={\
  direction=\"on\",\
 },\
 [0x2AAF]={\
  direction=\"on\",\
  mirror=0x2AB0,\
 },\
 [0x2AB0]={\
  direction=\"on\",\
  mirror=0x2AAF,\
 },\
 [0x2AB1]={\
  direction=\"on\",\
 },\
 [0x2AB2]={\
  direction=\"on\",\
 },\
 [0x2AB3]={\
  direction=\"on\",\
  mirror=0x2AB4,\
 },\
 [0x2AB4]={\
  direction=\"on\",\
  mirror=0x2AB3,\
 },\
 [0x2AB5]={\
  direction=\"on\",\
 },\
 [0x2AB6]={\
  direction=\"on\",\
 },\
 [0x2AB7]={\
  direction=\"on\",\
 },\
 [0x2AB8]={\
  direction=\"on\",\
 },\
 [0x2AB9]={\
  direction=\"on\",\
 },\
 [0x2ABA]={\
  direction=\"on\",\
 },\
 [0x2ABB]={\
  direction=\"on\",\
  mirror=0x2ABC,\
 },\
 [0x2ABC]={\
  direction=\"on\",\
  mirror=0x2ABB,\
 },\
 [0x2ABD]={\
  direction=\"on\",\
  mirror=0x2ABE,\
 },\
 [0x2ABE]={\
  direction=\"on\",\
  mirror=0x2ABD,\
 },\
 [0x2ABF]={\
  direction=\"on\",\
  mirror=0x2AC0,\
 },\
 [0x2AC0]={\
  direction=\"on\",\
  mirror=0x2ABF,\
 },\
 [0x2AC1]={\
  direction=\"on\",\
  mirror=0x2AC2,\
 },\
 [0x2AC2]={\
  direction=\"on\",\
  mirror=0x2AC1,\
 },\
 [0x2AC3]={\
  direction=\"on\",\
  mirror=0x2AC4,\
 },\
 [0x2AC4]={\
  direction=\"on\",\
  mirror=0x2AC3,\
 },\
 [0x2AC5]={\
  direction=\"on\",\
  mirror=0x2AC6,\
 },\
 [0x2AC6]={\
  direction=\"on\",\
  mirror=0x2AC5,\
 },\
 [0x2AC7]={\
  direction=\"on\",\
 },\
 [0x2AC8]={\
  direction=\"on\",\
 },\
 [0x2AC9]={\
  direction=\"on\",\
 },\
 [0x2ACA]={\
  direction=\"on\",\
 },\
 [0x2ACB]={\
  direction=\"on\",\
 },\
 [0x2ACC]={\
  direction=\"on\",\
 },\
 [0x2ACD]={\
  direction=\"on\",\
  mirror=0x2ACE,\
 },\
 [0x2ACE]={\
  direction=\"on\",\
  mirror=0x2ACD,\
 },\
 [0x2ACF]={\
  direction=\"on\",\
  mirror=0x2AD0,\
 },\
 [0x2AD0]={\
  direction=\"on\",\
  mirror=0x2ACF,\
 },\
 [0x2AD1]={\
  direction=\"on\",\
  mirror=0x2AD2,\
 },\
 [0x2AD2]={\
  direction=\"on\",\
  mirror=0x2AD1,\
 },\
 [0x2AD3]={\
  direction=\"on\",\
  mirror=0x2AD4,\
 },\
 [0x2AD4]={\
  direction=\"on\",\
  mirror=0x2AD3,\
 },\
 [0x2AD5]={\
  direction=\"on\",\
  mirror=0x2AD6,\
 },\
 [0x2AD6]={\
  direction=\"on\",\
  mirror=0x2AD5,\
 },\
 [0x2AD7]={\
  direction=\"on\",\
 },\
 [0x2AD8]={\
  direction=\"on\",\
 },\
 [0x2AD9]={\
  direction=\"on\",\
 },\
 [0x2ADA]={\
  direction=\"on\",\
 },\
 [0x2ADB]={\
  direction=\"on\",\
 },\
 [0x2ADC]={\
  direction=\"on\",\
 },\
 [0x2ADD]={\
  direction=\"on\",\
 },\
 [0x2ADE]={\
  direction=\"on\",\
  mirror=0x22A6,\
 },\
 [0x2ADF]={\
  direction=\"on\",\
 },\
 [0x2AE0]={\
  direction=\"on\",\
 },\
 [0x2AE1]={\
  direction=\"on\",\
 },\
 [0x2AE2]={\
  direction=\"on\",\
 },\
 [0x2AE3]={\
  direction=\"on\",\
  mirror=0x22A9,\
 },\
 [0x2AE4]={\
  direction=\"on\",\
  mirror=0x22A8,\
 },\
 [0x2AE5]={\
  direction=\"on\",\
  mirror=0x22AB,\
 },\
 [0x2AE6]={\
  direction=\"on\",\
 },\
 [0x2AE7]={\
  direction=\"on\",\
 },\
 [0x2AE8]={\
  direction=\"on\",\
 },\
 [0x2AE9]={\
  direction=\"on\",\
 },\
 [0x2AEA]={\
  direction=\"on\",\
 },\
 [0x2AEB]={\
  direction=\"on\",\
 },\
 [0x2AEC]={\
  direction=\"on\",\
  mirror=0x2AED,\
 },\
 [0x2AED]={\
  direction=\"on\",\
  mirror=0x2AEC,\
 },\
 [0x2AEE]={\
  direction=\"on\",\
 },\
 [0x2AEF]={\
  direction=\"on\",\
 },\
 [0x2AF0]={\
  direction=\"on\",\
 },\
 [0x2AF1]={\
  direction=\"on\",\
 },\
 [0x2AF2]={\
  direction=\"on\",\
 },\
 [0x2AF3]={\
  direction=\"on\",\
 },\
 [0x2AF4]={\
  direction=\"on\",\
 },\
 [0x2AF5]={\
  direction=\"on\",\
 },\
 [0x2AF6]={\
  direction=\"on\",\
 },\
 [0x2AF7]={\
  direction=\"on\",\
  mirror=0x2AF8,\
 },\
 [0x2AF8]={\
  direction=\"on\",\
  mirror=0x2AF7,\
 },\
 [0x2AF9]={\
  direction=\"on\",\
  mirror=0x2AFA,\
 },\
 [0x2AFA]={\
  direction=\"on\",\
  mirror=0x2AF9,\
 },\
 [0x2AFB]={\
  direction=\"on\",\
 },\
 [0x2AFC]={\
  direction=\"on\",\
 },\
 [0x2AFD]={\
  direction=\"on\",\
 },\
 [0x2AFE]={\
  direction=\"on\",\
 },\
 [0x2AFF]={\
  direction=\"on\",\
 },\
 [0x2B00]={\
  direction=\"on\",\
 },\
 [0x2B01]={\
  direction=\"on\",\
 },\
 [0x2B02]={\
  direction=\"on\",\
 },\
 [0x2B03]={\
  direction=\"on\",\
 },\
 [0x2B04]={\
  direction=\"on\",\
 },\
 [0x2B05]={\
  direction=\"on\",\
 },\
 [0x2B06]={\
  direction=\"on\",\
 },\
 [0x2B07]={\
  direction=\"on\",\
 },\
 [0x2B08]={\
  direction=\"on\",\
 },\
 [0x2B09]={\
  direction=\"on\",\
 },\
 [0x2B0A]={\
  direction=\"on\",\
 },\
 [0x2B0B]={\
  direction=\"on\",\
 },\
 [0x2B0C]={\
  direction=\"on\",\
 },\
 [0x2B0D]={\
  direction=\"on\",\
 },\
 [0x2B0E]={\
  direction=\"on\",\
 },\
 [0x2B0F]={\
  direction=\"on\",\
 },\
 [0x2B10]={\
  direction=\"on\",\
 },\
 [0x2B11]={\
  direction=\"on\",\
 },\
 [0x2B12]={\
  direction=\"on\",\
 },\
 [0x2B13]={\
  direction=\"on\",\
 },\
 [0x2B14]={\
  direction=\"on\",\
 },\
 [0x2B15]={\
  direction=\"on\",\
 },\
 [0x2B16]={\
  direction=\"on\",\
 },\
 [0x2B17]={\
  direction=\"on\",\
 },\
 [0x2B18]={\
  direction=\"on\",\
 },\
 [0x2B19]={\
  direction=\"on\",\
 },\
 [0x2B1A]={\
  direction=\"on\",\
 },\
 [0x2B1B]={\
  direction=\"on\",\
 },\
 [0x2B1C]={\
  direction=\"on\",\
 },\
 [0x2B1D]={\
  direction=\"on\",\
 },\
 [0x2B1E]={\
  direction=\"on\",\
 },\
 [0x2B1F]={\
  direction=\"on\",\
 },\
 [0x2B20]={\
  direction=\"on\",\
 },\
 [0x2B21]={\
  direction=\"on\",\
 },\
 [0x2B22]={\
  direction=\"on\",\
 },\
 [0x2B23]={\
  direction=\"on\",\
 },\
 [0x2B24]={\
  direction=\"on\",\
 },\
 [0x2B25]={\
  direction=\"on\",\
 },\
 [0x2B26]={\
  direction=\"on\",\
 },\
 [0x2B27]={\
  direction=\"on\",\
 },\
 [0x2B28]={\
  direction=\"on\",\
 },\
 [0x2B29]={\
  direction=\"on\",\
 },\
 [0x2B2A]={\
  direction=\"on\",\
 },\
 [0x2B2B]={\
  direction=\"on\",\
 },\
 [0x2B2C]={\
  direction=\"on\",\
 },\
 [0x2B2D]={\
  direction=\"on\",\
 },\
 [0x2B2E]={\
  direction=\"on\",\
 },\
 [0x2B2F]={\
  direction=\"on\",\
 },\
 [0x2B30]={\
  direction=\"on\",\
 },\
 [0x2B31]={\
  direction=\"on\",\
 },\
 [0x2B32]={\
  direction=\"on\",\
 },\
 [0x2B33]={\
  direction=\"on\",\
 },\
 [0x2B34]={\
  direction=\"on\",\
 },\
 [0x2B35]={\
  direction=\"on\",\
 },\
 [0x2B36]={\
  direction=\"on\",\
 },\
 [0x2B37]={\
  direction=\"on\",\
 },\
 [0x2B38]={\
  direction=\"on\",\
 },\
 [0x2B39]={\
  direction=\"on\",\
 },\
 [0x2B3A]={\
  direction=\"on\",\
 },\
 [0x2B3B]={\
  direction=\"on\",\
 },\
 [0x2B3C]={\
  direction=\"on\",\
 },\
 [0x2B3D]={\
  direction=\"on\",\
 },\
 [0x2B3E]={\
  direction=\"on\",\
 },\
 [0x2B3F]={\
  direction=\"on\",\
 },\
 [0x2B40]={\
  direction=\"on\",\
 },\
 [0x2B41]={\
  direction=\"on\",\
 },\
 [0x2B42]={\
  direction=\"on\",\
 },\
 [0x2B43]={\
  direction=\"on\",\
 },\
 [0x2B44]={\
  direction=\"on\",\
 },\
 [0x2B45]={\
  direction=\"on\",\
 },\
 [0x2B46]={\
  direction=\"on\",\
 },\
 [0x2B47]={\
  direction=\"on\",\
 },\
 [0x2B48]={\
  direction=\"on\",\
 },\
 [0x2B49]={\
  direction=\"on\",\
 },\
 [0x2B4A]={\
  direction=\"on\",\
 },\
 [0x2B4B]={\
  direction=\"on\",\
 },\
 [0x2B4C]={\
  direction=\"on\",\
 },\
 [0x2B50]={\
  direction=\"on\",\
 },\
 [0x2B51]={\
  direction=\"on\",\
 },\
 [0x2B52]={\
  direction=\"on\",\
 },\
 [0x2B53]={\
  direction=\"on\",\
 },\
 [0x2B54]={\
  direction=\"on\",\
 },\
 [0x2B55]={\
  direction=\"on\",\
 },\
 [0x2B56]={\
  direction=\"on\",\
 },\
 [0x2B57]={\
  direction=\"on\",\
 },\
 [0x2B58]={\
  direction=\"on\",\
 },\
 [0x2B59]={\
  direction=\"on\",\
 },\
 [0x2C00]={\
  direction=\"l\",\
 },\
 [0x2C01]={\
  direction=\"l\",\
 },\
 [0x2C02]={\
  direction=\"l\",\
 },\
 [0x2C03]={\
  direction=\"l\",\
 },\
 [0x2C04]={\
  direction=\"l\",\
 },\
 [0x2C05]={\
  direction=\"l\",\
 },\
 [0x2C06]={\
  direction=\"l\",\
 },\
 [0x2C07]={\
  direction=\"l\",\
 },\
 [0x2C08]={\
  direction=\"l\",\
 },\
 [0x2C09]={\
  direction=\"l\",\
 },\
 [0x2C0A]={\
  direction=\"l\",\
 },\
 [0x2C0B]={\
  direction=\"l\",\
 },\
 [0x2C0C]={\
  direction=\"l\",\
 },\
 [0x2C0D]={\
  direction=\"l\",\
 },\
 [0x2C0E]={\
  direction=\"l\",\
 },\
 [0x2C0F]={\
  direction=\"l\",\
 },\
 [0x2C10]={\
  direction=\"l\",\
 },\
 [0x2C11]={\
  direction=\"l\",\
 },\
 [0x2C12]={\
  direction=\"l\",\
 },\
 [0x2C13]={\
  direction=\"l\",\
 },\
 [0x2C14]={\
  direction=\"l\",\
 },\
 [0x2C15]={\
  direction=\"l\",\
 },\
 [0x2C16]={\
  direction=\"l\",\
 },\
 [0x2C17]={\
  direction=\"l\",\
 },\
 [0x2C18]={\
  direction=\"l\",\
 },\
 [0x2C19]={\
  direction=\"l\",\
 },\
 [0x2C1A]={\
  direction=\"l\",\
 },\
 [0x2C1B]={\
  direction=\"l\",\
 },\
 [0x2C1C]={\
  direction=\"l\",\
 },\
 [0x2C1D]={\
  direction=\"l\",\
 },\
 [0x2C1E]={\
  direction=\"l\",\
 },\
 [0x2C1F]={\
  direction=\"l\",\
 },\
 [0x2C20]={\
  direction=\"l\",\
 },\
 [0x2C21]={\
  direction=\"l\",\
 },\
 [0x2C22]={\
  direction=\"l\",\
 },\
 [0x2C23]={\
  direction=\"l\",\
 },\
 [0x2C24]={\
  direction=\"l\",\
 },\
 [0x2C25]={\
  direction=\"l\",\
 },\
 [0x2C26]={\
  direction=\"l\",\
 },\
 [0x2C27]={\
  direction=\"l\",\
 },\
 [0x2C28]={\
  direction=\"l\",\
 },\
 [0x2C29]={\
  direction=\"l\",\
 },\
 [0x2C2A]={\
  direction=\"l\",\
 },\
 [0x2C2B]={\
  direction=\"l\",\
 },\
 [0x2C2C]={\
  direction=\"l\",\
 },\
 [0x2C2D]={\
  direction=\"l\",\
 },\
 [0x2C2E]={\
  direction=\"l\",\
 },\
 [0x2C30]={\
  direction=\"l\",\
 },\
 [0x2C31]={\
  direction=\"l\",\
 },\
 [0x2C32]={\
  direction=\"l\",\
 },\
 [0x2C33]={\
  direction=\"l\",\
 },\
 [0x2C34]={\
  direction=\"l\",\
 },\
 [0x2C35]={\
  direction=\"l\",\
 },\
 [0x2C36]={\
  direction=\"l\",\
 },\
 [0x2C37]={\
  direction=\"l\",\
 },\
 [0x2C38]={\
  direction=\"l\",\
 },\
 [0x2C39]={\
  direction=\"l\",\
 },\
 [0x2C3A]={\
  direction=\"l\",\
 },\
 [0x2C3B]={\
  direction=\"l\",\
 },\
 [0x2C3C]={\
  direction=\"l\",\
 },\
 [0x2C3D]={\
  direction=\"l\",\
 },\
 [0x2C3E]={\
  direction=\"l\",\
 },\
 [0x2C3F]={\
  direction=\"l\",\
 },\
 [0x2C40]={\
  direction=\"l\",\
 },\
 [0x2C41]={\
  direction=\"l\",\
 },\
 [0x2C42]={\
  direction=\"l\",\
 },\
 [0x2C43]={\
  direction=\"l\",\
 },\
 [0x2C44]={\
  direction=\"l\",\
 },\
 [0x2C45]={\
  direction=\"l\",\
 },\
 [0x2C46]={\
  direction=\"l\",\
 },\
 [0x2C47]={\
  direction=\"l\",\
 },\
 [0x2C48]={\
  direction=\"l\",\
 },\
 [0x2C49]={\
  direction=\"l\",\
 },\
 [0x2C4A]={\
  direction=\"l\",\
 },\
 [0x2C4B]={\
  direction=\"l\",\
 },\
 [0x2C4C]={\
  direction=\"l\",\
 },\
 [0x2C4D]={\
  direction=\"l\",\
 },\
 [0x2C4E]={\
  direction=\"l\",\
 },\
 [0x2C4F]={\
  direction=\"l\",\
 },\
 [0x2C50]={\
  direction=\"l\",\
 },\
 [0x2C51]={\
  direction=\"l\",\
 },\
 [0x2C52]={\
  direction=\"l\",\
 },\
 [0x2C53]={\
  direction=\"l\",\
 },\
 [0x2C54]={\
  direction=\"l\",\
 },\
 [0x2C55]={\
  direction=\"l\",\
 },\
 [0x2C56]={\
  direction=\"l\",\
 },\
 [0x2C57]={\
  direction=\"l\",\
 },\
 [0x2C58]={\
  direction=\"l\",\
 },\
 [0x2C59]={\
  direction=\"l\",\
 },\
 [0x2C5A]={\
  direction=\"l\",\
 },\
 [0x2C5B]={\
  direction=\"l\",\
 },\
 [0x2C5C]={\
  direction=\"l\",\
 },\
 [0x2C5D]={\
  direction=\"l\",\
 },\
 [0x2C5E]={\
  direction=\"l\",\
 },\
 [0x2C60]={\
  direction=\"l\",\
 },\
 [0x2C61]={\
  direction=\"l\",\
 },\
 [0x2C62]={\
  direction=\"l\",\
 },\
 [0x2C63]={\
  direction=\"l\",\
 },\
 [0x2C64]={\
  direction=\"l\",\
 },\
 [0x2C65]={\
  direction=\"l\",\
 },\
 [0x2C66]={\
  direction=\"l\",\
 },\
 [0x2C67]={\
  direction=\"l\",\
 },\
 [0x2C68]={\
  direction=\"l\",\
 },\
 [0x2C69]={\
  direction=\"l\",\
 },\
 [0x2C6A]={\
  direction=\"l\",\
 },\
 [0x2C6B]={\
  direction=\"l\",\
 },\
 [0x2C6C]={\
  direction=\"l\",\
 },\
 [0x2C6D]={\
  direction=\"l\",\
 },\
 [0x2C6E]={\
  direction=\"l\",\
 },\
 [0x2C6F]={\
  direction=\"l\",\
 },\
 [0x2C70]={\
  direction=\"l\",\
 },\
 [0x2C71]={\
  direction=\"l\",\
 },\
 [0x2C72]={\
  direction=\"l\",\
 },\
 [0x2C73]={\
  direction=\"l\",\
 },\
 [0x2C74]={\
  direction=\"l\",\
 },\
 [0x2C75]={\
  direction=\"l\",\
 },\
 [0x2C76]={\
  direction=\"l\",\
 },\
 [0x2C77]={\
  direction=\"l\",\
 },\
 [0x2C78]={\
  direction=\"l\",\
 },\
 [0x2C79]={\
  direction=\"l\",\
 },\
 [0x2C7A]={\
  direction=\"l\",\
 },\
 [0x2C7B]={\
  direction=\"l\",\
 },\
 [0x2C7C]={\
  direction=\"l\",\
 },\
 [0x2C7D]={\
  direction=\"l\",\
 },\
 [0x2C7E]={\
  direction=\"l\",\
 },\
 [0x2C7F]={\
  direction=\"l\",\
 },\
 [0x2C80]={\
  direction=\"l\",\
 },\
 [0x2C81]={\
  direction=\"l\",\
 },\
 [0x2C82]={\
  direction=\"l\",\
 },\
 [0x2C83]={\
  direction=\"l\",\
 },\
 [0x2C84]={\
  direction=\"l\",\
 },\
 [0x2C85]={\
  direction=\"l\",\
 },\
 [0x2C86]={\
  direction=\"l\",\
 },\
 [0x2C87]={\
  direction=\"l\",\
 },\
 [0x2C88]={\
  direction=\"l\",\
 },\
 [0x2C89]={\
  direction=\"l\",\
 },\
 [0x2C8A]={\
  direction=\"l\",\
 },\
 [0x2C8B]={\
  direction=\"l\",\
 },\
 [0x2C8C]={\
  direction=\"l\",\
 },\
 [0x2C8D]={\
  direction=\"l\",\
 },\
 [0x2C8E]={\
  direction=\"l\",\
 },\
 [0x2C8F]={\
  direction=\"l\",\
 },\
 [0x2C90]={\
  direction=\"l\",\
 },\
 [0x2C91]={\
  direction=\"l\",\
 },\
 [0x2C92]={\
  direction=\"l\",\
 },\
 [0x2C93]={\
  direction=\"l\",\
 },\
 [0x2C94]={\
  direction=\"l\",\
 },\
 [0x2C95]={\
  direction=\"l\",\
 },\
 [0x2C96]={\
  direction=\"l\",\
 },\
 [0x2C97]={\
  direction=\"l\",\
 },\
 [0x2C98]={\
  direction=\"l\",\
 },\
 [0x2C99]={\
  direction=\"l\",\
 },\
 [0x2C9A]={\
  direction=\"l\",\
 },\
 [0x2C9B]={\
  direction=\"l\",\
 },\
 [0x2C9C]={\
  direction=\"l\",\
 },\
 [0x2C9D]={\
  direction=\"l\",\
 },\
 [0x2C9E]={\
  direction=\"l\",\
 },\
 [0x2C9F]={\
  direction=\"l\",\
 },\
 [0x2CA0]={\
  direction=\"l\",\
 },\
 [0x2CA1]={\
  direction=\"l\",\
 },\
 [0x2CA2]={\
  direction=\"l\",\
 },\
 [0x2CA3]={\
  direction=\"l\",\
 },\
 [0x2CA4]={\
  direction=\"l\",\
 },\
 [0x2CA5]={\
  direction=\"l\",\
 },\
 [0x2CA6]={\
  direction=\"l\",\
 },\
 [0x2CA7]={\
  direction=\"l\",\
 },\
 [0x2CA8]={\
  direction=\"l\",\
 },\
 [0x2CA9]={\
  direction=\"l\",\
 },\
 [0x2CAA]={\
  direction=\"l\",\
 },\
 [0x2CAB]={\
  direction=\"l\",\
 },\
 [0x2CAC]={\
  direction=\"l\",\
 },\
 [0x2CAD]={\
  direction=\"l\",\
 },\
 [0x2CAE]={\
  direction=\"l\",\
 },\
 [0x2CAF]={\
  direction=\"l\",\
 },\
 [0x2CB0]={\
  direction=\"l\",\
 },\
 [0x2CB1]={\
  direction=\"l\",\
 },\
 [0x2CB2]={\
  direction=\"l\",\
 },\
 [0x2CB3]={\
  direction=\"l\",\
 },\
 [0x2CB4]={\
  direction=\"l\",\
 },\
 [0x2CB5]={\
  direction=\"l\",\
 },\
 [0x2CB6]={\
  direction=\"l\",\
 },\
 [0x2CB7]={\
  direction=\"l\",\
 },\
 [0x2CB8]={\
  direction=\"l\",\
 },\
 [0x2CB9]={\
  direction=\"l\",\
 },\
 [0x2CBA]={\
  direction=\"l\",\
 },\
 [0x2CBB]={\
  direction=\"l\",\
 },\
 [0x2CBC]={\
  direction=\"l\",\
 },\
 [0x2CBD]={\
  direction=\"l\",\
 },\
 [0x2CBE]={\
  direction=\"l\",\
 },\
 [0x2CBF]={\
  direction=\"l\",\
 },\
 [0x2CC0]={\
  direction=\"l\",\
 },\
 [0x2CC1]={\
  direction=\"l\",\
 },\
 [0x2CC2]={\
  direction=\"l\",\
 },\
 [0x2CC3]={\
  direction=\"l\",\
 },\
 [0x2CC4]={\
  direction=\"l\",\
 },\
 [0x2CC5]={\
  direction=\"l\",\
 },\
 [0x2CC6]={\
  direction=\"l\",\
 },\
 [0x2CC7]={\
  direction=\"l\",\
 },\
 [0x2CC8]={\
  direction=\"l\",\
 },\
 [0x2CC9]={\
  direction=\"l\",\
 },\
 [0x2CCA]={\
  direction=\"l\",\
 },\
 [0x2CCB]={\
  direction=\"l\",\
 },\
 [0x2CCC]={\
  direction=\"l\",\
 },\
 [0x2CCD]={\
  direction=\"l\",\
 },\
 [0x2CCE]={\
  direction=\"l\",\
 },\
 [0x2CCF]={\
  direction=\"l\",\
 },\
 [0x2CD0]={\
  direction=\"l\",\
 },\
 [0x2CD1]={\
  direction=\"l\",\
 },\
 [0x2CD2]={\
  direction=\"l\",\
 },\
 [0x2CD3]={\
  direction=\"l\",\
 },\
 [0x2CD4]={\
  direction=\"l\",\
 },\
 [0x2CD5]={\
  direction=\"l\",\
 },\
 [0x2CD6]={\
  direction=\"l\",\
 },\
 [0x2CD7]={\
  direction=\"l\",\
 },\
 [0x2CD8]={\
  direction=\"l\",\
 },\
 [0x2CD9]={\
  direction=\"l\",\
 },\
 [0x2CDA]={\
  direction=\"l\",\
 },\
 [0x2CDB]={\
  direction=\"l\",\
 },\
 [0x2CDC]={\
  direction=\"l\",\
 },\
 [0x2CDD]={\
  direction=\"l\",\
 },\
 [0x2CDE]={\
  direction=\"l\",\
 },\
 [0x2CDF]={\
  direction=\"l\",\
 },\
 [0x2CE0]={\
  direction=\"l\",\
 },\
 [0x2CE1]={\
  direction=\"l\",\
 },\
 [0x2CE2]={\
  direction=\"l\",\
 },\
 [0x2CE3]={\
  direction=\"l\",\
 },\
 [0x2CE4]={\
  direction=\"l\",\
 },\
 [0x2CE5]={\
  direction=\"on\",\
 },\
 [0x2CE6]={\
  direction=\"on\",\
 },\
 [0x2CE7]={\
  direction=\"on\",\
 },\
 [0x2CE8]={\
  direction=\"on\",\
 },\
 [0x2CE9]={\
  direction=\"on\",\
 },\
 [0x2CEA]={\
  direction=\"on\",\
 },\
 [0x2CEB]={\
  direction=\"l\",\
 },\
 [0x2CEC]={\
  direction=\"l\",\
 },\
 [0x2CED]={\
  direction=\"l\",\
 },\
 [0x2CEE]={\
  direction=\"l\",\
 },\
 [0x2CEF]={\
  direction=\"nsm\",\
 },\
 [0x2CF0]={\
  direction=\"nsm\",\
 },\
 [0x2CF1]={\
  direction=\"nsm\",\
 },\
 [0x2CF2]={\
  direction=\"l\",\
 },\
 [0x2CF3]={\
  direction=\"l\",\
 },\
 [0x2CF9]={\
  direction=\"on\",\
 },\
 [0x2CFA]={\
  direction=\"on\",\
 },\
 [0x2CFB]={\
  direction=\"on\",\
 },\
 [0x2CFC]={\
  direction=\"on\",\
 },\
 [0x2CFD]={\
  direction=\"on\",\
 },\
 [0x2CFE]={\
  direction=\"on\",\
 },\
 [0x2CFF]={\
  direction=\"on\",\
 },\
 [0x2D00]={\
  direction=\"l\",\
 },\
 [0x2D01]={\
  direction=\"l\",\
 },\
 [0x2D02]={\
  direction=\"l\",\
 },\
 [0x2D03]={\
  direction=\"l\",\
 },\
 [0x2D04]={\
  direction=\"l\",\
 },\
 [0x2D05]={\
  direction=\"l\",\
 },\
 [0x2D06]={\
  direction=\"l\",\
 },\
 [0x2D07]={\
  direction=\"l\",\
 },\
 [0x2D08]={\
  direction=\"l\",\
 },\
 [0x2D09]={\
  direction=\"l\",\
 },\
 [0x2D0A]={\
  direction=\"l\",\
 },\
 [0x2D0B]={\
  direction=\"l\",\
 },\
 [0x2D0C]={\
  direction=\"l\",\
 },\
 [0x2D0D]={\
  direction=\"l\",\
 },\
 [0x2D0E]={\
  direction=\"l\",\
 },\
 [0x2D0F]={\
  direction=\"l\",\
 },\
 [0x2D10]={\
  direction=\"l\",\
 },\
 [0x2D11]={\
  direction=\"l\",\
 },\
 [0x2D12]={\
  direction=\"l\",\
 },\
 [0x2D13]={\
  direction=\"l\",\
 },\
 [0x2D14]={\
  direction=\"l\",\
 },\
 [0x2D15]={\
  direction=\"l\",\
 },\
 [0x2D16]={\
  direction=\"l\",\
 },\
 [0x2D17]={\
  direction=\"l\",\
 },\
 [0x2D18]={\
  direction=\"l\",\
 },\
 [0x2D19]={\
  direction=\"l\",\
 },\
 [0x2D1A]={\
  direction=\"l\",\
 },\
 [0x2D1B]={\
  direction=\"l\",\
 },\
 [0x2D1C]={\
  direction=\"l\",\
 },\
 [0x2D1D]={\
  direction=\"l\",\
 },\
 [0x2D1E]={\
  direction=\"l\",\
 },\
 [0x2D1F]={\
  direction=\"l\",\
 },\
 [0x2D20]={\
  direction=\"l\",\
 },\
 [0x2D21]={\
  direction=\"l\",\
 },\
 [0x2D22]={\
  direction=\"l\",\
 },\
 [0x2D23]={\
  direction=\"l\",\
 },\
 [0x2D24]={\
  direction=\"l\",\
 },\
 [0x2D25]={\
  direction=\"l\",\
 },\
 [0x2D27]={\
  direction=\"l\",\
 },\
 [0x2D2D]={\
  direction=\"l\",\
 },\
 [0x2D30]={\
  direction=\"l\",\
 },\
 [0x2D31]={\
  direction=\"l\",\
 },\
 [0x2D32]={\
  direction=\"l\",\
 },\
 [0x2D33]={\
  direction=\"l\",\
 },\
 [0x2D34]={\
  direction=\"l\",\
 },\
 [0x2D35]={\
  direction=\"l\",\
 },\
 [0x2D36]={\
  direction=\"l\",\
 },\
 [0x2D37]={\
  direction=\"l\",\
 },\
 [0x2D38]={\
  direction=\"l\",\
 },\
 [0x2D39]={\
  direction=\"l\",\
 },\
 [0x2D3A]={\
  direction=\"l\",\
 },\
 [0x2D3B]={\
  direction=\"l\",\
 },\
 [0x2D3C]={\
  direction=\"l\",\
 },\
 [0x2D3D]={\
  direction=\"l\",\
 },\
 [0x2D3E]={\
  direction=\"l\",\
 },\
 [0x2D3F]={\
  direction=\"l\",\
 },\
 [0x2D40]={\
  direction=\"l\",\
 },\
 [0x2D41]={\
  direction=\"l\",\
 },\
 [0x2D42]={\
  direction=\"l\",\
 },\
 [0x2D43]={\
  direction=\"l\",\
 },\
 [0x2D44]={\
  direction=\"l\",\
 },\
 [0x2D45]={\
  direction=\"l\",\
 },\
 [0x2D46]={\
  direction=\"l\",\
 },\
 [0x2D47]={\
  direction=\"l\",\
 },\
 [0x2D48]={\
  direction=\"l\",\
 },\
 [0x2D49]={\
  direction=\"l\",\
 },\
 [0x2D4A]={\
  direction=\"l\",\
 },\
 [0x2D4B]={\
  direction=\"l\",\
 },\
 [0x2D4C]={\
  direction=\"l\",\
 },\
 [0x2D4D]={\
  direction=\"l\",\
 },\
 [0x2D4E]={\
  direction=\"l\",\
 },\
 [0x2D4F]={\
  direction=\"l\",\
 },\
 [0x2D50]={\
  direction=\"l\",\
 },\
 [0x2D51]={\
  direction=\"l\",\
 },\
 [0x2D52]={\
  direction=\"l\",\
 },\
 [0x2D53]={\
  direction=\"l\",\
 },\
 [0x2D54]={\
  direction=\"l\",\
 },\
 [0x2D55]={\
  direction=\"l\",\
 },\
 [0x2D56]={\
  direction=\"l\",\
 },\
 [0x2D57]={\
  direction=\"l\",\
 },\
 [0x2D58]={\
  direction=\"l\",\
 },\
 [0x2D59]={\
  direction=\"l\",\
 },\
 [0x2D5A]={\
  direction=\"l\",\
 },\
 [0x2D5B]={\
  direction=\"l\",\
 },\
 [0x2D5C]={\
  direction=\"l\",\
 },\
 [0x2D5D]={\
  direction=\"l\",\
 },\
 [0x2D5E]={\
  direction=\"l\",\
 },\
 [0x2D5F]={\
  direction=\"l\",\
 },\
 [0x2D60]={\
  direction=\"l\",\
 },\
 [0x2D61]={\
  direction=\"l\",\
 },\
 [0x2D62]={\
  direction=\"l\",\
 },\
 [0x2D63]={\
  direction=\"l\",\
 },\
 [0x2D64]={\
  direction=\"l\",\
 },\
 [0x2D65]={\
  direction=\"l\",\
 },\
 [0x2D66]={\
  direction=\"l\",\
 },\
 [0x2D67]={\
  direction=\"l\",\
 },\
 [0x2D6F]={\
  direction=\"l\",\
 },\
 [0x2D70]={\
  direction=\"l\",\
 },\
 [0x2D7F]={\
  direction=\"nsm\",\
 },\
 [0x2D80]={\
  direction=\"l\",\
 },\
 [0x2D81]={\
  direction=\"l\",\
 },\
 [0x2D82]={\
  direction=\"l\",\
 },\
 [0x2D83]={\
  direction=\"l\",\
 },\
 [0x2D84]={\
  direction=\"l\",\
 },\
 [0x2D85]={\
  direction=\"l\",\
 },\
 [0x2D86]={\
  direction=\"l\",\
 },\
 [0x2D87]={\
  direction=\"l\",\
 },\
 [0x2D88]={\
  direction=\"l\",\
 },\
 [0x2D89]={\
  direction=\"l\",\
 },\
 [0x2D8A]={\
  direction=\"l\",\
 },\
 [0x2D8B]={\
  direction=\"l\",\
 },\
 [0x2D8C]={\
  direction=\"l\",\
 },\
 [0x2D8D]={\
  direction=\"l\",\
 },\
 [0x2D8E]={\
  direction=\"l\",\
 },\
 [0x2D8F]={\
  direction=\"l\",\
 },\
 [0x2D90]={\
  direction=\"l\",\
 },\
 [0x2D91]={\
  direction=\"l\",\
 },\
 [0x2D92]={\
  direction=\"l\",\
 },\
 [0x2D93]={\
  direction=\"l\",\
 },\
 [0x2D94]={\
  direction=\"l\",\
 },\
 [0x2D95]={\
  direction=\"l\",\
 },\
 [0x2D96]={\
  direction=\"l\",\
 },\
 [0x2DA0]={\
  direction=\"l\",\
 },\
 [0x2DA1]={\
  direction=\"l\",\
 },\
 [0x2DA2]={\
  direction=\"l\",\
 },\
 [0x2DA3]={\
  direction=\"l\",\
 },\
 [0x2DA4]={\
  direction=\"l\",\
 },\
 [0x2DA5]={\
  direction=\"l\",\
 },\
 [0x2DA6]={\
  direction=\"l\",\
 },\
 [0x2DA8]={\
  direction=\"l\",\
 },\
 [0x2DA9]={\
  direction=\"l\",\
 },\
 [0x2DAA]={\
  direction=\"l\",\
 },\
 [0x2DAB]={\
  direction=\"l\",\
 },\
 [0x2DAC]={\
  direction=\"l\",\
 },\
 [0x2DAD]={\
  direction=\"l\",\
 },\
 [0x2DAE]={\
  direction=\"l\",\
 },\
 [0x2DB0]={\
  direction=\"l\",\
 },\
 [0x2DB1]={\
  direction=\"l\",\
 },\
 [0x2DB2]={\
  direction=\"l\",\
 },\
 [0x2DB3]={\
  direction=\"l\",\
 },\
 [0x2DB4]={\
  direction=\"l\",\
 },\
 [0x2DB5]={\
  direction=\"l\",\
 },\
 [0x2DB6]={\
  direction=\"l\",\
 },\
 [0x2DB8]={\
  direction=\"l\",\
 },\
 [0x2DB9]={\
  direction=\"l\",\
 },\
 [0x2DBA]={\
  direction=\"l\",\
 },\
 [0x2DBB]={\
  direction=\"l\",\
 },\
 [0x2DBC]={\
  direction=\"l\",\
 },\
 [0x2DBD]={\
  direction=\"l\",\
 },\
 [0x2DBE]={\
  direction=\"l\",\
 },\
 [0x2DC0]={\
  direction=\"l\",\
 },\
 [0x2DC1]={\
  direction=\"l\",\
 },\
 [0x2DC2]={\
  direction=\"l\",\
 },\
 [0x2DC3]={\
  direction=\"l\",\
 },\
 [0x2DC4]={\
  direction=\"l\",\
 },\
 [0x2DC5]={\
  direction=\"l\",\
 },\
 [0x2DC6]={\
  direction=\"l\",\
 },\
 [0x2DC8]={\
  direction=\"l\",\
 },\
 [0x2DC9]={\
  direction=\"l\",\
 },\
 [0x2DCA]={\
  direction=\"l\",\
 },\
 [0x2DCB]={\
  direction=\"l\",\
 },\
 [0x2DCC]={\
  direction=\"l\",\
 },\
 [0x2DCD]={\
  direction=\"l\",\
 },\
 [0x2DCE]={\
  direction=\"l\",\
 },\
 [0x2DD0]={\
  direction=\"l\",\
 },\
 [0x2DD1]={\
  direction=\"l\",\
 },\
 [0x2DD2]={\
  direction=\"l\",\
 },\
 [0x2DD3]={\
  direction=\"l\",\
 },\
 [0x2DD4]={\
  direction=\"l\",\
 },\
 [0x2DD5]={\
  direction=\"l\",\
 },\
 [0x2DD6]={\
  direction=\"l\",\
 },\
 [0x2DD8]={\
  direction=\"l\",\
 },\
 [0x2DD9]={\
  direction=\"l\",\
 },\
 [0x2DDA]={\
  direction=\"l\",\
 },\
 [0x2DDB]={\
  direction=\"l\",\
 },\
 [0x2DDC]={\
  direction=\"l\",\
 },\
 [0x2DDD]={\
  direction=\"l\",\
 },\
 [0x2DDE]={\
  direction=\"l\",\
 },\
 [0x2DE0]={\
  direction=\"nsm\",\
 },\
 [0x2DE1]={\
  direction=\"nsm\",\
 },\
 [0x2DE2]={\
  direction=\"nsm\",\
 },\
 [0x2DE3]={\
  direction=\"nsm\",\
 },\
 [0x2DE4]={\
  direction=\"nsm\",\
 },\
 [0x2DE5]={\
  direction=\"nsm\",\
 },\
 [0x2DE6]={\
  direction=\"nsm\",\
 },\
 [0x2DE7]={\
  direction=\"nsm\",\
 },\
 [0x2DE8]={\
  direction=\"nsm\",\
 },\
 [0x2DE9]={\
  direction=\"nsm\",\
 },\
 [0x2DEA]={\
  direction=\"nsm\",\
 },\
 [0x2DEB]={\
  direction=\"nsm\",\
 },\
 [0x2DEC]={\
  direction=\"nsm\",\
 },\
 [0x2DED]={\
  direction=\"nsm\",\
 },\
 [0x2DEE]={\
  direction=\"nsm\",\
 },\
 [0x2DEF]={\
  direction=\"nsm\",\
 },\
 [0x2DF0]={\
  direction=\"nsm\",\
 },\
 [0x2DF1]={\
  direction=\"nsm\",\
 },\
 [0x2DF2]={\
  direction=\"nsm\",\
 },\
 [0x2DF3]={\
  direction=\"nsm\",\
 },\
 [0x2DF4]={\
  direction=\"nsm\",\
 },\
 [0x2DF5]={\
  direction=\"nsm\",\
 },\
 [0x2DF6]={\
  direction=\"nsm\",\
 },\
 [0x2DF7]={\
  direction=\"nsm\",\
 },\
 [0x2DF8]={\
  direction=\"nsm\",\
 },\
 [0x2DF9]={\
  direction=\"nsm\",\
 },\
 [0x2DFA]={\
  direction=\"nsm\",\
 },\
 [0x2DFB]={\
  direction=\"nsm\",\
 },\
 [0x2DFC]={\
  direction=\"nsm\",\
 },\
 [0x2DFD]={\
  direction=\"nsm\",\
 },\
 [0x2DFE]={\
  direction=\"nsm\",\
 },\
 [0x2DFF]={\
  direction=\"nsm\",\
 },\
 [0x2E00]={\
  direction=\"on\",\
 },\
 [0x2E01]={\
  direction=\"on\",\
 },\
 [0x2E02]={\
  direction=\"on\",\
  mirror=0x2E03,\
 },\
 [0x2E03]={\
  direction=\"on\",\
  mirror=0x2E02,\
 },\
 [0x2E04]={\
  direction=\"on\",\
  mirror=0x2E05,\
 },\
 [0x2E05]={\
  direction=\"on\",\
  mirror=0x2E04,\
 },\
 [0x2E06]={\
  direction=\"on\",\
 },\
 [0x2E07]={\
  direction=\"on\",\
 },\
 [0x2E08]={\
  direction=\"on\",\
 },\
 [0x2E09]={\
  direction=\"on\",\
  mirror=0x2E0A,\
 },\
 [0x2E0A]={\
  direction=\"on\",\
  mirror=0x2E09,\
 },\
 [0x2E0B]={\
  direction=\"on\",\
 },\
 [0x2E0C]={\
  direction=\"on\",\
  mirror=0x2E0D,\
 },\
 [0x2E0D]={\
  direction=\"on\",\
  mirror=0x2E0C,\
 },\
 [0x2E0E]={\
  direction=\"on\",\
 },\
 [0x2E0F]={\
  direction=\"on\",\
 },\
 [0x2E10]={\
  direction=\"on\",\
 },\
 [0x2E11]={\
  direction=\"on\",\
 },\
 [0x2E12]={\
  direction=\"on\",\
 },\
 [0x2E13]={\
  direction=\"on\",\
 },\
 [0x2E14]={\
  direction=\"on\",\
 },\
 [0x2E15]={\
  direction=\"on\",\
 },\
 [0x2E16]={\
  direction=\"on\",\
 },\
 [0x2E17]={\
  direction=\"on\",\
 },\
 [0x2E18]={\
  direction=\"on\",\
 },\
 [0x2E19]={\
  direction=\"on\",\
 },\
 [0x2E1A]={\
  direction=\"on\",\
 },\
 [0x2E1B]={\
  direction=\"on\",\
 },\
 [0x2E1C]={\
  direction=\"on\",\
  mirror=0x2E1D,\
 },\
 [0x2E1D]={\
  direction=\"on\",\
  mirror=0x2E1C,\
 },\
 [0x2E1E]={\
  direction=\"on\",\
 },\
 [0x2E1F]={\
  direction=\"on\",\
 },\
 [0x2E20]={\
  direction=\"on\",\
  mirror=0x2E21,\
 },\
 [0x2E21]={\
  direction=\"on\",\
  mirror=0x2E20,\
 },\
 [0x2E22]={\
  direction=\"on\",\
  mirror=0x2E23,\
 },\
 [0x2E23]={\
  direction=\"on\",\
  mirror=0x2E22,\
 },\
 [0x2E24]={\
  direction=\"on\",\
  mirror=0x2E25,\
 },\
 [0x2E25]={\
  direction=\"on\",\
  mirror=0x2E24,\
 },\
 [0x2E26]={\
  direction=\"on\",\
  mirror=0x2E27,\
 },\
 [0x2E27]={\
  direction=\"on\",\
  mirror=0x2E26,\
 },\
 [0x2E28]={\
  direction=\"on\",\
  mirror=0x2E29,\
 },\
 [0x2E29]={\
  direction=\"on\",\
  mirror=0x2E28,\
 },\
 [0x2E2A]={\
  direction=\"on\",\
 },\
 [0x2E2B]={\
  direction=\"on\",\
 },\
 [0x2E2C]={\
  direction=\"on\",\
 },\
 [0x2E2D]={\
  direction=\"on\",\
 },\
 [0x2E2E]={\
  direction=\"on\",\
 },\
 [0x2E2F]={\
  direction=\"on\",\
 },\
 [0x2E30]={\
  direction=\"on\",\
 },\
 [0x2E31]={\
  direction=\"on\",\
 },\
 [0x2E32]={\
  direction=\"on\",\
 },\
 [0x2E33]={\
  direction=\"on\",\
 },\
 [0x2E34]={\
  direction=\"on\",\
 },\
 [0x2E35]={\
  direction=\"on\",\
 },\
 [0x2E36]={\
  direction=\"on\",\
 },\
 [0x2E37]={\
  direction=\"on\",\
 },\
 [0x2E38]={\
  direction=\"on\",\
 },\
 [0x2E39]={\
  direction=\"on\",\
 },\
 [0x2E3A]={\
  direction=\"on\",\
 },\
 [0x2E3B]={\
  direction=\"on\",\
 },\
 [0x2E80]={\
  direction=\"on\",\
 },\
 [0x2E81]={\
  direction=\"on\",\
 },\
 [0x2E82]={\
  direction=\"on\",\
 },\
 [0x2E83]={\
  direction=\"on\",\
 },\
 [0x2E84]={\
  direction=\"on\",\
 },\
 [0x2E85]={\
  direction=\"on\",\
 },\
 [0x2E86]={\
  direction=\"on\",\
 },\
 [0x2E87]={\
  direction=\"on\",\
 },\
 [0x2E88]={\
  direction=\"on\",\
 },\
 [0x2E89]={\
  direction=\"on\",\
 },\
 [0x2E8A]={\
  direction=\"on\",\
 },\
 [0x2E8B]={\
  direction=\"on\",\
 },\
 [0x2E8C]={\
  direction=\"on\",\
 },\
 [0x2E8D]={\
  direction=\"on\",\
 },\
 [0x2E8E]={\
  direction=\"on\",\
 },\
 [0x2E8F]={\
  direction=\"on\",\
 },\
 [0x2E90]={\
  direction=\"on\",\
 },\
 [0x2E91]={\
  direction=\"on\",\
 },\
 [0x2E92]={\
  direction=\"on\",\
 },\
 [0x2E93]={\
  direction=\"on\",\
 },\
 [0x2E94]={\
  direction=\"on\",\
 },\
 [0x2E95]={\
  direction=\"on\",\
 },\
 [0x2E96]={\
  direction=\"on\",\
 },\
 [0x2E97]={\
  direction=\"on\",\
 },\
 [0x2E98]={\
  direction=\"on\",\
 },\
 [0x2E99]={\
  direction=\"on\",\
 },\
 [0x2E9B]={\
  direction=\"on\",\
 },\
 [0x2E9C]={\
  direction=\"on\",\
 },\
 [0x2E9D]={\
  direction=\"on\",\
 },\
 [0x2E9E]={\
  direction=\"on\",\
 },\
 [0x2E9F]={\
  direction=\"on\",\
 },\
 [0x2EA0]={\
  direction=\"on\",\
 },\
 [0x2EA1]={\
  direction=\"on\",\
 },\
 [0x2EA2]={\
  direction=\"on\",\
 },\
 [0x2EA3]={\
  direction=\"on\",\
 },\
 [0x2EA4]={\
  direction=\"on\",\
 },\
 [0x2EA5]={\
  direction=\"on\",\
 },\
 [0x2EA6]={\
  direction=\"on\",\
 },\
 [0x2EA7]={\
  direction=\"on\",\
 },\
 [0x2EA8]={\
  direction=\"on\",\
 },\
 [0x2EA9]={\
  direction=\"on\",\
 },\
 [0x2EAA]={\
  direction=\"on\",\
 },\
 [0x2EAB]={\
  direction=\"on\",\
 },\
 [0x2EAC]={\
  direction=\"on\",\
 },\
 [0x2EAD]={\
  direction=\"on\",\
 },\
 [0x2EAE]={\
  direction=\"on\",\
 },\
 [0x2EAF]={\
  direction=\"on\",\
 },\
 [0x2EB0]={\
  direction=\"on\",\
 },\
 [0x2EB1]={\
  direction=\"on\",\
 },\
 [0x2EB2]={\
  direction=\"on\",\
 },\
 [0x2EB3]={\
  direction=\"on\",\
 },\
 [0x2EB4]={\
  direction=\"on\",\
 },\
 [0x2EB5]={\
  direction=\"on\",\
 },\
 [0x2EB6]={\
  direction=\"on\",\
 },\
 [0x2EB7]={\
  direction=\"on\",\
 },\
 [0x2EB8]={\
  direction=\"on\",\
 },\
 [0x2EB9]={\
  direction=\"on\",\
 },\
 [0x2EBA]={\
  direction=\"on\",\
 },\
 [0x2EBB]={\
  direction=\"on\",\
 },\
 [0x2EBC]={\
  direction=\"on\",\
 },\
 [0x2EBD]={\
  direction=\"on\",\
 },\
 [0x2EBE]={\
  direction=\"on\",\
 },\
 [0x2EBF]={\
  direction=\"on\",\
 },\
 [0x2EC0]={\
  direction=\"on\",\
 },\
 [0x2EC1]={\
  direction=\"on\",\
 },\
 [0x2EC2]={\
  direction=\"on\",\
 },\
 [0x2EC3]={\
  direction=\"on\",\
 },\
 [0x2EC4]={\
  direction=\"on\",\
 },\
 [0x2EC5]={\
  direction=\"on\",\
 },\
 [0x2EC6]={\
  direction=\"on\",\
 },\
 [0x2EC7]={\
  direction=\"on\",\
 },\
 [0x2EC8]={\
  direction=\"on\",\
 },\
 [0x2EC9]={\
  direction=\"on\",\
 },\
 [0x2ECA]={\
  direction=\"on\",\
 },\
 [0x2ECB]={\
  direction=\"on\",\
 },\
 [0x2ECC]={\
  direction=\"on\",\
 },\
 [0x2ECD]={\
  direction=\"on\",\
 },\
 [0x2ECE]={\
  direction=\"on\",\
 },\
 [0x2ECF]={\
  direction=\"on\",\
 },\
 [0x2ED0]={\
  direction=\"on\",\
 },\
 [0x2ED1]={\
  direction=\"on\",\
 },\
 [0x2ED2]={\
  direction=\"on\",\
 },\
 [0x2ED3]={\
  direction=\"on\",\
 },\
 [0x2ED4]={\
  direction=\"on\",\
 },\
 [0x2ED5]={\
  direction=\"on\",\
 },\
 [0x2ED6]={\
  direction=\"on\",\
 },\
 [0x2ED7]={\
  direction=\"on\",\
 },\
 [0x2ED8]={\
  direction=\"on\",\
 },\
 [0x2ED9]={\
  direction=\"on\",\
 },\
 [0x2EDA]={\
  direction=\"on\",\
 },\
 [0x2EDB]={\
  direction=\"on\",\
 },\
 [0x2EDC]={\
  direction=\"on\",\
 },\
 [0x2EDD]={\
  direction=\"on\",\
 },\
 [0x2EDE]={\
  direction=\"on\",\
 },\
 [0x2EDF]={\
  direction=\"on\",\
 },\
 [0x2EE0]={\
  direction=\"on\",\
 },\
 [0x2EE1]={\
  direction=\"on\",\
 },\
 [0x2EE2]={\
  direction=\"on\",\
 },\
 [0x2EE3]={\
  direction=\"on\",\
 },\
 [0x2EE4]={\
  direction=\"on\",\
 },\
 [0x2EE5]={\
  direction=\"on\",\
 },\
 [0x2EE6]={\
  direction=\"on\",\
 },\
 [0x2EE7]={\
  direction=\"on\",\
 },\
 [0x2EE8]={\
  direction=\"on\",\
 },\
 [0x2EE9]={\
  direction=\"on\",\
 },\
 [0x2EEA]={\
  direction=\"on\",\
 },\
 [0x2EEB]={\
  direction=\"on\",\
 },\
 [0x2EEC]={\
  direction=\"on\",\
 },\
 [0x2EED]={\
  direction=\"on\",\
 },\
 [0x2EEE]={\
  direction=\"on\",\
 },\
 [0x2EEF]={\
  direction=\"on\",\
 },\
 [0x2EF0]={\
  direction=\"on\",\
 },\
 [0x2EF1]={\
  direction=\"on\",\
 },\
 [0x2EF2]={\
  direction=\"on\",\
 },\
 [0x2EF3]={\
  direction=\"on\",\
 },\
 [0x2F00]={\
  direction=\"on\",\
 },\
 [0x2F01]={\
  direction=\"on\",\
 },\
 [0x2F02]={\
  direction=\"on\",\
 },\
 [0x2F03]={\
  direction=\"on\",\
 },\
 [0x2F04]={\
  direction=\"on\",\
 },\
 [0x2F05]={\
  direction=\"on\",\
 },\
 [0x2F06]={\
  direction=\"on\",\
 },\
 [0x2F07]={\
  direction=\"on\",\
 },\
 [0x2F08]={\
  direction=\"on\",\
 },\
 [0x2F09]={\
  direction=\"on\",\
 },\
 [0x2F0A]={\
  direction=\"on\",\
 },\
 [0x2F0B]={\
  direction=\"on\",\
 },\
 [0x2F0C]={\
  direction=\"on\",\
 },\
 [0x2F0D]={\
  direction=\"on\",\
 },\
 [0x2F0E]={\
  direction=\"on\",\
 },\
 [0x2F0F]={\
  direction=\"on\",\
 },\
 [0x2F10]={\
  direction=\"on\",\
 },\
 [0x2F11]={\
  direction=\"on\",\
 },\
 [0x2F12]={\
  direction=\"on\",\
 },\
 [0x2F13]={\
  direction=\"on\",\
 },\
 [0x2F14]={\
  direction=\"on\",\
 },\
 [0x2F15]={\
  direction=\"on\",\
 },\
 [0x2F16]={\
  direction=\"on\",\
 },\
 [0x2F17]={\
  direction=\"on\",\
 },\
 [0x2F18]={\
  direction=\"on\",\
 },\
 [0x2F19]={\
  direction=\"on\",\
 },\
 [0x2F1A]={\
  direction=\"on\",\
 },\
 [0x2F1B]={\
  direction=\"on\",\
 },\
 [0x2F1C]={\
  direction=\"on\",\
 },\
 [0x2F1D]={\
  direction=\"on\",\
 },\
 [0x2F1E]={\
  direction=\"on\",\
 },\
 [0x2F1F]={\
  direction=\"on\",\
 },\
 [0x2F20]={\
  direction=\"on\",\
 },\
 [0x2F21]={\
  direction=\"on\",\
 },\
 [0x2F22]={\
  direction=\"on\",\
 },\
 [0x2F23]={\
  direction=\"on\",\
 },\
 [0x2F24]={\
  direction=\"on\",\
 },\
 [0x2F25]={\
  direction=\"on\",\
 },\
 [0x2F26]={\
  direction=\"on\",\
 },\
 [0x2F27]={\
  direction=\"on\",\
 },\
 [0x2F28]={\
  direction=\"on\",\
 },\
 [0x2F29]={\
  direction=\"on\",\
 },\
 [0x2F2A]={\
  direction=\"on\",\
 },\
 [0x2F2B]={\
  direction=\"on\",\
 },\
 [0x2F2C]={\
  direction=\"on\",\
 },\
 [0x2F2D]={\
  direction=\"on\",\
 },\
 [0x2F2E]={\
  direction=\"on\",\
 },\
 [0x2F2F]={\
  direction=\"on\",\
 },\
 [0x2F30]={\
  direction=\"on\",\
 },\
 [0x2F31]={\
  direction=\"on\",\
 },\
 [0x2F32]={\
  direction=\"on\",\
 },\
 [0x2F33]={\
  direction=\"on\",\
 },\
 [0x2F34]={\
  direction=\"on\",\
 },\
 [0x2F35]={\
  direction=\"on\",\
 },\
 [0x2F36]={\
  direction=\"on\",\
 },\
 [0x2F37]={\
  direction=\"on\",\
 },\
 [0x2F38]={\
  direction=\"on\",\
 },\
 [0x2F39]={\
  direction=\"on\",\
 },\
 [0x2F3A]={\
  direction=\"on\",\
 },\
 [0x2F3B]={\
  direction=\"on\",\
 },\
 [0x2F3C]={\
  direction=\"on\",\
 },\
 [0x2F3D]={\
  direction=\"on\",\
 },\
 [0x2F3E]={\
  direction=\"on\",\
 },\
 [0x2F3F]={\
  direction=\"on\",\
 },\
 [0x2F40]={\
  direction=\"on\",\
 },\
 [0x2F41]={\
  direction=\"on\",\
 },\
 [0x2F42]={\
  direction=\"on\",\
 },\
 [0x2F43]={\
  direction=\"on\",\
 },\
 [0x2F44]={\
  direction=\"on\",\
 },\
 [0x2F45]={\
  direction=\"on\",\
 },\
 [0x2F46]={\
  direction=\"on\",\
 },\
 [0x2F47]={\
  direction=\"on\",\
 },\
 [0x2F48]={\
  direction=\"on\",\
 },\
 [0x2F49]={\
  direction=\"on\",\
 },\
 [0x2F4A]={\
  direction=\"on\",\
 },\
 [0x2F4B]={\
  direction=\"on\",\
 },\
 [0x2F4C]={\
  direction=\"on\",\
 },\
 [0x2F4D]={\
  direction=\"on\",\
 },\
 [0x2F4E]={\
  direction=\"on\",\
 },\
 [0x2F4F]={\
  direction=\"on\",\
 },\
 [0x2F50]={\
  direction=\"on\",\
 },\
 [0x2F51]={\
  direction=\"on\",\
 },\
 [0x2F52]={\
  direction=\"on\",\
 },\
 [0x2F53]={\
  direction=\"on\",\
 },\
 [0x2F54]={\
  direction=\"on\",\
 },\
 [0x2F55]={\
  direction=\"on\",\
 },\
 [0x2F56]={\
  direction=\"on\",\
 },\
 [0x2F57]={\
  direction=\"on\",\
 },\
 [0x2F58]={\
  direction=\"on\",\
 },\
 [0x2F59]={\
  direction=\"on\",\
 },\
 [0x2F5A]={\
  direction=\"on\",\
 },\
 [0x2F5B]={\
  direction=\"on\",\
 },\
 [0x2F5C]={\
  direction=\"on\",\
 },\
 [0x2F5D]={\
  direction=\"on\",\
 },\
 [0x2F5E]={\
  direction=\"on\",\
 },\
 [0x2F5F]={\
  direction=\"on\",\
 },\
 [0x2F60]={\
  direction=\"on\",\
 },\
 [0x2F61]={\
  direction=\"on\",\
 },\
 [0x2F62]={\
  direction=\"on\",\
 },\
 [0x2F63]={\
  direction=\"on\",\
 },\
 [0x2F64]={\
  direction=\"on\",\
 },\
 [0x2F65]={\
  direction=\"on\",\
 },\
 [0x2F66]={\
  direction=\"on\",\
 },\
 [0x2F67]={\
  direction=\"on\",\
 },\
 [0x2F68]={\
  direction=\"on\",\
 },\
 [0x2F69]={\
  direction=\"on\",\
 },\
 [0x2F6A]={\
  direction=\"on\",\
 },\
 [0x2F6B]={\
  direction=\"on\",\
 },\
 [0x2F6C]={\
  direction=\"on\",\
 },\
 [0x2F6D]={\
  direction=\"on\",\
 },\
 [0x2F6E]={\
  direction=\"on\",\
 },\
 [0x2F6F]={\
  direction=\"on\",\
 },\
 [0x2F70]={\
  direction=\"on\",\
 },\
 [0x2F71]={\
  direction=\"on\",\
 },\
 [0x2F72]={\
  direction=\"on\",\
 },\
 [0x2F73]={\
  direction=\"on\",\
 },\
 [0x2F74]={\
  direction=\"on\",\
 },\
 [0x2F75]={\
  direction=\"on\",\
 },\
 [0x2F76]={\
  direction=\"on\",\
 },\
 [0x2F77]={\
  direction=\"on\",\
 },\
 [0x2F78]={\
  direction=\"on\",\
 },\
 [0x2F79]={\
  direction=\"on\",\
 },\
 [0x2F7A]={\
  direction=\"on\",\
 },\
 [0x2F7B]={\
  direction=\"on\",\
 },\
 [0x2F7C]={\
  direction=\"on\",\
 },\
 [0x2F7D]={\
  direction=\"on\",\
 },\
 [0x2F7E]={\
  direction=\"on\",\
 },\
 [0x2F7F]={\
  direction=\"on\",\
 },\
 [0x2F80]={\
  direction=\"on\",\
 },\
 [0x2F81]={\
  direction=\"on\",\
 },\
 [0x2F82]={\
  direction=\"on\",\
 },\
 [0x2F83]={\
  direction=\"on\",\
 },\
 [0x2F84]={\
  direction=\"on\",\
 },\
 [0x2F85]={\
  direction=\"on\",\
 },\
 [0x2F86]={\
  direction=\"on\",\
 },\
 [0x2F87]={\
  direction=\"on\",\
 },\
 [0x2F88]={\
  direction=\"on\",\
 },\
 [0x2F89]={\
  direction=\"on\",\
 },\
 [0x2F8A]={\
  direction=\"on\",\
 },\
 [0x2F8B]={\
  direction=\"on\",\
 },\
 [0x2F8C]={\
  direction=\"on\",\
 },\
 [0x2F8D]={\
  direction=\"on\",\
 },\
 [0x2F8E]={\
  direction=\"on\",\
 },\
 [0x2F8F]={\
  direction=\"on\",\
 },\
 [0x2F90]={\
  direction=\"on\",\
 },\
 [0x2F91]={\
  direction=\"on\",\
 },\
 [0x2F92]={\
  direction=\"on\",\
 },\
 [0x2F93]={\
  direction=\"on\",\
 },\
 [0x2F94]={\
  direction=\"on\",\
 },\
 [0x2F95]={\
  direction=\"on\",\
 },\
 [0x2F96]={\
  direction=\"on\",\
 },\
 [0x2F97]={\
  direction=\"on\",\
 },\
 [0x2F98]={\
  direction=\"on\",\
 },\
 [0x2F99]={\
  direction=\"on\",\
 },\
 [0x2F9A]={\
  direction=\"on\",\
 },\
 [0x2F9B]={\
  direction=\"on\",\
 },\
 [0x2F9C]={\
  direction=\"on\",\
 },\
 [0x2F9D]={\
  direction=\"on\",\
 },\
 [0x2F9E]={\
  direction=\"on\",\
 },\
 [0x2F9F]={\
  direction=\"on\",\
 },\
 [0x2FA0]={\
  direction=\"on\",\
 },\
 [0x2FA1]={\
  direction=\"on\",\
 },\
 [0x2FA2]={\
  direction=\"on\",\
 },\
 [0x2FA3]={\
  direction=\"on\",\
 },\
 [0x2FA4]={\
  direction=\"on\",\
 },\
 [0x2FA5]={\
  direction=\"on\",\
 },\
 [0x2FA6]={\
  direction=\"on\",\
 },\
 [0x2FA7]={\
  direction=\"on\",\
 },\
 [0x2FA8]={\
  direction=\"on\",\
 },\
 [0x2FA9]={\
  direction=\"on\",\
 },\
 [0x2FAA]={\
  direction=\"on\",\
 },\
 [0x2FAB]={\
  direction=\"on\",\
 },\
 [0x2FAC]={\
  direction=\"on\",\
 },\
 [0x2FAD]={\
  direction=\"on\",\
 },\
 [0x2FAE]={\
  direction=\"on\",\
 },\
 [0x2FAF]={\
  direction=\"on\",\
 },\
 [0x2FB0]={\
  direction=\"on\",\
 },\
 [0x2FB1]={\
  direction=\"on\",\
 },\
 [0x2FB2]={\
  direction=\"on\",\
 },\
 [0x2FB3]={\
  direction=\"on\",\
 },\
 [0x2FB4]={\
  direction=\"on\",\
 },\
 [0x2FB5]={\
  direction=\"on\",\
 },\
 [0x2FB6]={\
  direction=\"on\",\
 },\
 [0x2FB7]={\
  direction=\"on\",\
 },\
 [0x2FB8]={\
  direction=\"on\",\
 },\
 [0x2FB9]={\
  direction=\"on\",\
 },\
 [0x2FBA]={\
  direction=\"on\",\
 },\
 [0x2FBB]={\
  direction=\"on\",\
 },\
 [0x2FBC]={\
  direction=\"on\",\
 },\
 [0x2FBD]={\
  direction=\"on\",\
 },\
 [0x2FBE]={\
  direction=\"on\",\
 },\
 [0x2FBF]={\
  direction=\"on\",\
 },\
 [0x2FC0]={\
  direction=\"on\",\
 },\
 [0x2FC1]={\
  direction=\"on\",\
 },\
 [0x2FC2]={\
  direction=\"on\",\
 },\
 [0x2FC3]={\
  direction=\"on\",\
 },\
 [0x2FC4]={\
  direction=\"on\",\
 },\
 [0x2FC5]={\
  direction=\"on\",\
 },\
 [0x2FC6]={\
  direction=\"on\",\
 },\
 [0x2FC7]={\
  direction=\"on\",\
 },\
 [0x2FC8]={\
  direction=\"on\",\
 },\
 [0x2FC9]={\
  direction=\"on\",\
 },\
 [0x2FCA]={\
  direction=\"on\",\
 },\
 [0x2FCB]={\
  direction=\"on\",\
 },\
 [0x2FCC]={\
  direction=\"on\",\
 },\
 [0x2FCD]={\
  direction=\"on\",\
 },\
 [0x2FCE]={\
  direction=\"on\",\
 },\
 [0x2FCF]={\
  direction=\"on\",\
 },\
 [0x2FD0]={\
  direction=\"on\",\
 },\
 [0x2FD1]={\
  direction=\"on\",\
 },\
 [0x2FD2]={\
  direction=\"on\",\
 },\
 [0x2FD3]={\
  direction=\"on\",\
 },\
 [0x2FD4]={\
  direction=\"on\",\
 },\
 [0x2FD5]={\
  direction=\"on\",\
 },\
 [0x2FF0]={\
  direction=\"on\",\
 },\
 [0x2FF1]={\
  direction=\"on\",\
 },\
 [0x2FF2]={\
  direction=\"on\",\
 },\
 [0x2FF3]={\
  direction=\"on\",\
 },\
 [0x2FF4]={\
  direction=\"on\",\
 },\
 [0x2FF5]={\
  direction=\"on\",\
 },\
 [0x2FF6]={\
  direction=\"on\",\
 },\
 [0x2FF7]={\
  direction=\"on\",\
 },\
 [0x2FF8]={\
  direction=\"on\",\
 },\
 [0x2FF9]={\
  direction=\"on\",\
 },\
 [0x2FFA]={\
  direction=\"on\",\
 },\
 [0x2FFB]={\
  direction=\"on\",\
 },\
 [0x3000]={\
  direction=\"ws\",\
 },\
 [0x3001]={\
  direction=\"on\",\
 },\
 [0x3002]={\
  direction=\"on\",\
 },\
 [0x3003]={\
  direction=\"on\",\
 },\
 [0x3004]={\
  direction=\"on\",\
 },\
 [0x3005]={\
  direction=\"l\",\
 },\
 [0x3006]={\
  direction=\"l\",\
 },\
 [0x3007]={\
  direction=\"l\",\
 },\
 [0x3008]={\
  direction=\"on\",\
  mirror=0x3009,\
 },\
 [0x3009]={\
  direction=\"on\",\
  mirror=0x3008,\
 },\
 [0x300A]={\
  direction=\"on\",\
  mirror=0x300B,\
 },\
 [0x300B]={\
  direction=\"on\",\
  mirror=0x300A,\
 },\
 [0x300C]={\
  direction=\"on\",\
  mirror=0x300D,\
 },\
 [0x300D]={\
  direction=\"on\",\
  mirror=0x300C,\
 },\
 [0x300E]={\
  direction=\"on\",\
  mirror=0x300F,\
 },\
 [0x300F]={\
  direction=\"on\",\
  mirror=0x300E,\
 },\
 [0x3010]={\
  direction=\"on\",\
  mirror=0x3011,\
 },\
 [0x3011]={\
  direction=\"on\",\
  mirror=0x3010,\
 },\
 [0x3012]={\
  direction=\"on\",\
 },\
 [0x3013]={\
  direction=\"on\",\
 },\
 [0x3014]={\
  direction=\"on\",\
  mirror=0x3015,\
 },\
 [0x3015]={\
  direction=\"on\",\
  mirror=0x3014,\
 },\
 [0x3016]={\
  direction=\"on\",\
  mirror=0x3017,\
 },\
 [0x3017]={\
  direction=\"on\",\
  mirror=0x3016,\
 },\
 [0x3018]={\
  direction=\"on\",\
  mirror=0x3019,\
 },\
 [0x3019]={\
  direction=\"on\",\
  mirror=0x3018,\
 },\
 [0x301A]={\
  direction=\"on\",\
  mirror=0x301B,\
 },\
 [0x301B]={\
  direction=\"on\",\
  mirror=0x301A,\
 },\
 [0x301C]={\
  direction=\"on\",\
 },\
 [0x301D]={\
  direction=\"on\",\
 },\
 [0x301E]={\
  direction=\"on\",\
 },\
 [0x301F]={\
  direction=\"on\",\
 },\
 [0x3020]={\
  direction=\"on\",\
 },\
 [0x3021]={\
  direction=\"l\",\
 },\
 [0x3022]={\
  direction=\"l\",\
 },\
 [0x3023]={\
  direction=\"l\",\
 },\
 [0x3024]={\
  direction=\"l\",\
 },\
 [0x3025]={\
  direction=\"l\",\
 },\
 [0x3026]={\
  direction=\"l\",\
 },\
 [0x3027]={\
  direction=\"l\",\
 },\
 [0x3028]={\
  direction=\"l\",\
 },\
 [0x3029]={\
  direction=\"l\",\
 },\
 [0x302A]={\
  direction=\"nsm\",\
 },\
 [0x302B]={\
  direction=\"nsm\",\
 },\
 [0x302C]={\
  direction=\"nsm\",\
 },\
 [0x302D]={\
  direction=\"nsm\",\
 },\
 [0x302E]={\
  direction=\"l\",\
 },\
 [0x302F]={\
  direction=\"l\",\
 },\
 [0x3030]={\
  direction=\"on\",\
 },\
 [0x3031]={\
  direction=\"l\",\
 },\
 [0x3032]={\
  direction=\"l\",\
 },\
 [0x3033]={\
  direction=\"l\",\
 },\
 [0x3034]={\
  direction=\"l\",\
 },\
 [0x3035]={\
  direction=\"l\",\
 },\
 [0x3036]={\
  direction=\"on\",\
 },\
 [0x3037]={\
  direction=\"on\",\
 },\
 [0x3038]={\
  direction=\"l\",\
 },\
 [0x3039]={\
  direction=\"l\",\
 },\
 [0x303A]={\
  direction=\"l\",\
 },\
 [0x303B]={\
  direction=\"l\",\
 },\
 [0x303C]={\
  direction=\"l\",\
 },\
 [0x303D]={\
  direction=\"on\",\
 },\
 [0x303E]={\
  direction=\"on\",\
 },\
 [0x303F]={\
  direction=\"on\",\
 },\
 [0x3041]={\
  direction=\"l\",\
 },\
 [0x3042]={\
  direction=\"l\",\
 },\
 [0x3043]={\
  direction=\"l\",\
 },\
 [0x3044]={\
  direction=\"l\",\
 },\
 [0x3045]={\
  direction=\"l\",\
 },\
 [0x3046]={\
  direction=\"l\",\
 },\
 [0x3047]={\
  direction=\"l\",\
 },\
 [0x3048]={\
  direction=\"l\",\
 },\
 [0x3049]={\
  direction=\"l\",\
 },\
 [0x304A]={\
  direction=\"l\",\
 },\
 [0x304B]={\
  direction=\"l\",\
 },\
 [0x304C]={\
  direction=\"l\",\
 },\
 [0x304D]={\
  direction=\"l\",\
 },\
 [0x304E]={\
  direction=\"l\",\
 },\
 [0x304F]={\
  direction=\"l\",\
 },\
 [0x3050]={\
  direction=\"l\",\
 },\
 [0x3051]={\
  direction=\"l\",\
 },\
 [0x3052]={\
  direction=\"l\",\
 },\
 [0x3053]={\
  direction=\"l\",\
 },\
 [0x3054]={\
  direction=\"l\",\
 },\
 [0x3055]={\
  direction=\"l\",\
 },\
 [0x3056]={\
  direction=\"l\",\
 },\
 [0x3057]={\
  direction=\"l\",\
 },\
 [0x3058]={\
  direction=\"l\",\
 },\
 [0x3059]={\
  direction=\"l\",\
 },\
 [0x305A]={\
  direction=\"l\",\
 },\
 [0x305B]={\
  direction=\"l\",\
 },\
 [0x305C]={\
  direction=\"l\",\
 },\
 [0x305D]={\
  direction=\"l\",\
 },\
 [0x305E]={\
  direction=\"l\",\
 },\
 [0x305F]={\
  direction=\"l\",\
 },\
 [0x3060]={\
  direction=\"l\",\
 },\
 [0x3061]={\
  direction=\"l\",\
 },\
 [0x3062]={\
  direction=\"l\",\
 },\
 [0x3063]={\
  direction=\"l\",\
 },\
 [0x3064]={\
  direction=\"l\",\
 },\
 [0x3065]={\
  direction=\"l\",\
 },\
 [0x3066]={\
  direction=\"l\",\
 },\
 [0x3067]={\
  direction=\"l\",\
 },\
 [0x3068]={\
  direction=\"l\",\
 },\
 [0x3069]={\
  direction=\"l\",\
 },\
 [0x306A]={\
  direction=\"l\",\
 },\
 [0x306B]={\
  direction=\"l\",\
 },\
 [0x306C]={\
  direction=\"l\",\
 },\
 [0x306D]={\
  direction=\"l\",\
 },\
 [0x306E]={\
  direction=\"l\",\
 },\
 [0x306F]={\
  direction=\"l\",\
 },\
 [0x3070]={\
  direction=\"l\",\
 },\
 [0x3071]={\
  direction=\"l\",\
 },\
 [0x3072]={\
  direction=\"l\",\
 },\
 [0x3073]={\
  direction=\"l\",\
 },\
 [0x3074]={\
  direction=\"l\",\
 },\
 [0x3075]={\
  direction=\"l\",\
 },\
 [0x3076]={\
  direction=\"l\",\
 },\
 [0x3077]={\
  direction=\"l\",\
 },\
 [0x3078]={\
  direction=\"l\",\
 },\
 [0x3079]={\
  direction=\"l\",\
 },\
 [0x307A]={\
  direction=\"l\",\
 },\
 [0x307B]={\
  direction=\"l\",\
 },\
 [0x307C]={\
  direction=\"l\",\
 },\
 [0x307D]={\
  direction=\"l\",\
 },\
 [0x307E]={\
  direction=\"l\",\
 },\
 [0x307F]={\
  direction=\"l\",\
 },\
 [0x3080]={\
  direction=\"l\",\
 },\
 [0x3081]={\
  direction=\"l\",\
 },\
 [0x3082]={\
  direction=\"l\",\
 },\
 [0x3083]={\
  direction=\"l\",\
 },\
 [0x3084]={\
  direction=\"l\",\
 },\
 [0x3085]={\
  direction=\"l\",\
 },\
 [0x3086]={\
  direction=\"l\",\
 },\
 [0x3087]={\
  direction=\"l\",\
 },\
 [0x3088]={\
  direction=\"l\",\
 },\
 [0x3089]={\
  direction=\"l\",\
 },\
 [0x308A]={\
  direction=\"l\",\
 },\
 [0x308B]={\
  direction=\"l\",\
 },\
 [0x308C]={\
  direction=\"l\",\
 },\
 [0x308D]={\
  direction=\"l\",\
 },\
 [0x308E]={\
  direction=\"l\",\
 },\
 [0x308F]={\
  direction=\"l\",\
 },\
 [0x3090]={\
  direction=\"l\",\
 },\
 [0x3091]={\
  direction=\"l\",\
 },\
 [0x3092]={\
  direction=\"l\",\
 },\
 [0x3093]={\
  direction=\"l\",\
 },\
 [0x3094]={\
  direction=\"l\",\
 },\
 [0x3095]={\
  direction=\"l\",\
 },\
 [0x3096]={\
  direction=\"l\",\
 },\
 [0x3099]={\
  direction=\"nsm\",\
 },\
 [0x309A]={\
  direction=\"nsm\",\
 },\
 [0x309B]={\
  direction=\"on\",\
 },\
 [0x309C]={\
  direction=\"on\",\
 },\
 [0x309D]={\
  direction=\"l\",\
 },\
 [0x309E]={\
  direction=\"l\",\
 },\
 [0x309F]={\
  direction=\"l\",\
 },\
 [0x30A0]={\
  direction=\"on\",\
 },\
 [0x30A1]={\
  direction=\"l\",\
 },\
 [0x30A2]={\
  direction=\"l\",\
 },\
 [0x30A3]={\
  direction=\"l\",\
 },\
 [0x30A4]={\
  direction=\"l\",\
 },\
 [0x30A5]={\
  direction=\"l\",\
 },\
 [0x30A6]={\
  direction=\"l\",\
 },\
 [0x30A7]={\
  direction=\"l\",\
 },\
 [0x30A8]={\
  direction=\"l\",\
 },\
 [0x30A9]={\
  direction=\"l\",\
 },\
 [0x30AA]={\
  direction=\"l\",\
 },\
 [0x30AB]={\
  direction=\"l\",\
 },\
 [0x30AC]={\
  direction=\"l\",\
 },\
 [0x30AD]={\
  direction=\"l\",\
 },\
 [0x30AE]={\
  direction=\"l\",\
 },\
 [0x30AF]={\
  direction=\"l\",\
 },\
 [0x30B0]={\
  direction=\"l\",\
 },\
 [0x30B1]={\
  direction=\"l\",\
 },\
 [0x30B2]={\
  direction=\"l\",\
 },\
 [0x30B3]={\
  direction=\"l\",\
 },\
 [0x30B4]={\
  direction=\"l\",\
 },\
 [0x30B5]={\
  direction=\"l\",\
 },\
 [0x30B6]={\
  direction=\"l\",\
 },\
 [0x30B7]={\
  direction=\"l\",\
 },\
 [0x30B8]={\
  direction=\"l\",\
 },\
 [0x30B9]={\
  direction=\"l\",\
 },\
 [0x30BA]={\
  direction=\"l\",\
 },\
 [0x30BB]={\
  direction=\"l\",\
 },\
 [0x30BC]={\
  direction=\"l\",\
 },\
 [0x30BD]={\
  direction=\"l\",\
 },\
 [0x30BE]={\
  direction=\"l\",\
 },\
 [0x30BF]={\
  direction=\"l\",\
 },\
 [0x30C0]={\
  direction=\"l\",\
 },\
 [0x30C1]={\
  direction=\"l\",\
 },\
 [0x30C2]={\
  direction=\"l\",\
 },\
 [0x30C3]={\
  direction=\"l\",\
 },\
 [0x30C4]={\
  direction=\"l\",\
 },\
 [0x30C5]={\
  direction=\"l\",\
 },\
 [0x30C6]={\
  direction=\"l\",\
 },\
 [0x30C7]={\
  direction=\"l\",\
 },\
 [0x30C8]={\
  direction=\"l\",\
 },\
 [0x30C9]={\
  direction=\"l\",\
 },\
 [0x30CA]={\
  direction=\"l\",\
 },\
 [0x30CB]={\
  direction=\"l\",\
 },\
 [0x30CC]={\
  direction=\"l\",\
 },\
 [0x30CD]={\
  direction=\"l\",\
 },\
 [0x30CE]={\
  direction=\"l\",\
 },\
 [0x30CF]={\
  direction=\"l\",\
 },\
 [0x30D0]={\
  direction=\"l\",\
 },\
 [0x30D1]={\
  direction=\"l\",\
 },\
 [0x30D2]={\
  direction=\"l\",\
 },\
 [0x30D3]={\
  direction=\"l\",\
 },\
 [0x30D4]={\
  direction=\"l\",\
 },\
 [0x30D5]={\
  direction=\"l\",\
 },\
 [0x30D6]={\
  direction=\"l\",\
 },\
 [0x30D7]={\
  direction=\"l\",\
 },\
 [0x30D8]={\
  direction=\"l\",\
 },\
 [0x30D9]={\
  direction=\"l\",\
 },\
 [0x30DA]={\
  direction=\"l\",\
 },\
 [0x30DB]={\
  direction=\"l\",\
 },\
 [0x30DC]={\
  direction=\"l\",\
 },\
 [0x30DD]={\
  direction=\"l\",\
 },\
 [0x30DE]={\
  direction=\"l\",\
 },\
 [0x30DF]={\
  direction=\"l\",\
 },\
 [0x30E0]={\
  direction=\"l\",\
 },\
 [0x30E1]={\
  direction=\"l\",\
 },\
 [0x30E2]={\
  direction=\"l\",\
 },\
 [0x30E3]={\
  direction=\"l\",\
 },\
 [0x30E4]={\
  direction=\"l\",\
 },\
 [0x30E5]={\
  direction=\"l\",\
 },\
 [0x30E6]={\
  direction=\"l\",\
 },\
 [0x30E7]={\
  direction=\"l\",\
 },\
 [0x30E8]={\
  direction=\"l\",\
 },\
 [0x30E9]={\
  direction=\"l\",\
 },\
 [0x30EA]={\
  direction=\"l\",\
 },\
 [0x30EB]={\
  direction=\"l\",\
 },\
 [0x30EC]={\
  direction=\"l\",\
 },\
 [0x30ED]={\
  direction=\"l\",\
 },\
 [0x30EE]={\
  direction=\"l\",\
 },\
 [0x30EF]={\
  direction=\"l\",\
 },\
 [0x30F0]={\
  direction=\"l\",\
 },\
 [0x30F1]={\
  direction=\"l\",\
 },\
 [0x30F2]={\
  direction=\"l\",\
 },\
 [0x30F3]={\
  direction=\"l\",\
 },\
 [0x30F4]={\
  direction=\"l\",\
 },\
 [0x30F5]={\
  direction=\"l\",\
 },\
 [0x30F6]={\
  direction=\"l\",\
 },\
 [0x30F7]={\
  direction=\"l\",\
 },\
 [0x30F8]={\
  direction=\"l\",\
 },\
 [0x30F9]={\
  direction=\"l\",\
 },\
 [0x30FA]={\
  direction=\"l\",\
 },\
 [0x30FB]={\
  direction=\"on\",\
 },\
 [0x30FC]={\
  direction=\"l\",\
 },\
 [0x30FD]={\
  direction=\"l\",\
 },\
 [0x30FE]={\
  direction=\"l\",\
 },\
 [0x30FF]={\
  direction=\"l\",\
 },\
 [0x3105]={\
  direction=\"l\",\
 },\
 [0x3106]={\
  direction=\"l\",\
 },\
 [0x3107]={\
  direction=\"l\",\
 },\
 [0x3108]={\
  direction=\"l\",\
 },\
 [0x3109]={\
  direction=\"l\",\
 },\
 [0x310A]={\
  direction=\"l\",\
 },\
 [0x310B]={\
  direction=\"l\",\
 },\
 [0x310C]={\
  direction=\"l\",\
 },\
 [0x310D]={\
  direction=\"l\",\
 },\
 [0x310E]={\
  direction=\"l\",\
 },\
 [0x310F]={\
  direction=\"l\",\
 },\
 [0x3110]={\
  direction=\"l\",\
 },\
 [0x3111]={\
  direction=\"l\",\
 },\
 [0x3112]={\
  direction=\"l\",\
 },\
 [0x3113]={\
  direction=\"l\",\
 },\
 [0x3114]={\
  direction=\"l\",\
 },\
 [0x3115]={\
  direction=\"l\",\
 },\
 [0x3116]={\
  direction=\"l\",\
 },\
 [0x3117]={\
  direction=\"l\",\
 },\
 [0x3118]={\
  direction=\"l\",\
 },\
 [0x3119]={\
  direction=\"l\",\
 },\
 [0x311A]={\
  direction=\"l\",\
 },\
 [0x311B]={\
  direction=\"l\",\
 },\
 [0x311C]={\
  direction=\"l\",\
 },\
 [0x311D]={\
  direction=\"l\",\
 },\
 [0x311E]={\
  direction=\"l\",\
 },\
 [0x311F]={\
  direction=\"l\",\
 },\
 [0x3120]={\
  direction=\"l\",\
 },\
 [0x3121]={\
  direction=\"l\",\
 },\
 [0x3122]={\
  direction=\"l\",\
 },\
 [0x3123]={\
  direction=\"l\",\
 },\
 [0x3124]={\
  direction=\"l\",\
 },\
 [0x3125]={\
  direction=\"l\",\
 },\
 [0x3126]={\
  direction=\"l\",\
 },\
 [0x3127]={\
  direction=\"l\",\
 },\
 [0x3128]={\
  direction=\"l\",\
 },\
 [0x3129]={\
  direction=\"l\",\
 },\
 [0x312A]={\
  direction=\"l\",\
 },\
 [0x312B]={\
  direction=\"l\",\
 },\
 [0x312C]={\
  direction=\"l\",\
 },\
 [0x312D]={\
  direction=\"l\",\
 },\
 [0x3131]={\
  direction=\"l\",\
 },\
 [0x3132]={\
  direction=\"l\",\
 },\
 [0x3133]={\
  direction=\"l\",\
 },\
 [0x3134]={\
  direction=\"l\",\
 },\
 [0x3135]={\
  direction=\"l\",\
 },\
 [0x3136]={\
  direction=\"l\",\
 },\
 [0x3137]={\
  direction=\"l\",\
 },\
 [0x3138]={\
  direction=\"l\",\
 },\
 [0x3139]={\
  direction=\"l\",\
 },\
 [0x313A]={\
  direction=\"l\",\
 },\
 [0x313B]={\
  direction=\"l\",\
 },\
 [0x313C]={\
  direction=\"l\",\
 },\
 [0x313D]={\
  direction=\"l\",\
 },\
 [0x313E]={\
  direction=\"l\",\
 },\
 [0x313F]={\
  direction=\"l\",\
 },\
 [0x3140]={\
  direction=\"l\",\
 },\
 [0x3141]={\
  direction=\"l\",\
 },\
 [0x3142]={\
  direction=\"l\",\
 },\
 [0x3143]={\
  direction=\"l\",\
 },\
 [0x3144]={\
  direction=\"l\",\
 },\
 [0x3145]={\
  direction=\"l\",\
 },\
 [0x3146]={\
  direction=\"l\",\
 },\
 [0x3147]={\
  direction=\"l\",\
 },\
 [0x3148]={\
  direction=\"l\",\
 },\
 [0x3149]={\
  direction=\"l\",\
 },\
 [0x314A]={\
  direction=\"l\",\
 },\
 [0x314B]={\
  direction=\"l\",\
 },\
 [0x314C]={\
  direction=\"l\",\
 },\
 [0x314D]={\
  direction=\"l\",\
 },\
 [0x314E]={\
  direction=\"l\",\
 },\
 [0x314F]={\
  direction=\"l\",\
 },\
 [0x3150]={\
  direction=\"l\",\
 },\
 [0x3151]={\
  direction=\"l\",\
 },\
 [0x3152]={\
  direction=\"l\",\
 },\
 [0x3153]={\
  direction=\"l\",\
 },\
 [0x3154]={\
  direction=\"l\",\
 },\
 [0x3155]={\
  direction=\"l\",\
 },\
 [0x3156]={\
  direction=\"l\",\
 },\
 [0x3157]={\
  direction=\"l\",\
 },\
 [0x3158]={\
  direction=\"l\",\
 },\
 [0x3159]={\
  direction=\"l\",\
 },\
 [0x315A]={\
  direction=\"l\",\
 },\
 [0x315B]={\
  direction=\"l\",\
 },\
 [0x315C]={\
  direction=\"l\",\
 },\
 [0x315D]={\
  direction=\"l\",\
 },\
 [0x315E]={\
  direction=\"l\",\
 },\
 [0x315F]={\
  direction=\"l\",\
 },\
 [0x3160]={\
  direction=\"l\",\
 },\
 [0x3161]={\
  direction=\"l\",\
 },\
 [0x3162]={\
  direction=\"l\",\
 },\
 [0x3163]={\
  direction=\"l\",\
 },\
 [0x3164]={\
  direction=\"l\",\
 },\
 [0x3165]={\
  direction=\"l\",\
 },\
 [0x3166]={\
  direction=\"l\",\
 },\
 [0x3167]={\
  direction=\"l\",\
 },\
 [0x3168]={\
  direction=\"l\",\
 },\
 [0x3169]={\
  direction=\"l\",\
 },\
 [0x316A]={\
  direction=\"l\",\
 },\
 [0x316B]={\
  direction=\"l\",\
 },\
 [0x316C]={\
  direction=\"l\",\
 },\
 [0x316D]={\
  direction=\"l\",\
 },\
 [0x316E]={\
  direction=\"l\",\
 },\
 [0x316F]={\
  direction=\"l\",\
 },\
 [0x3170]={\
  direction=\"l\",\
 },\
 [0x3171]={\
  direction=\"l\",\
 },\
 [0x3172]={\
  direction=\"l\",\
 },\
 [0x3173]={\
  direction=\"l\",\
 },\
 [0x3174]={\
  direction=\"l\",\
 },\
 [0x3175]={\
  direction=\"l\",\
 },\
 [0x3176]={\
  direction=\"l\",\
 },\
 [0x3177]={\
  direction=\"l\",\
 },\
 [0x3178]={\
  direction=\"l\",\
 },\
 [0x3179]={\
  direction=\"l\",\
 },\
 [0x317A]={\
  direction=\"l\",\
 },\
 [0x317B]={\
  direction=\"l\",\
 },\
 [0x317C]={\
  direction=\"l\",\
 },\
 [0x317D]={\
  direction=\"l\",\
 },\
 [0x317E]={\
  direction=\"l\",\
 },\
 [0x317F]={\
  direction=\"l\",\
 },\
 [0x3180]={\
  direction=\"l\",\
 },\
 [0x3181]={\
  direction=\"l\",\
 },\
 [0x3182]={\
  direction=\"l\",\
 },\
 [0x3183]={\
  direction=\"l\",\
 },\
 [0x3184]={\
  direction=\"l\",\
 },\
 [0x3185]={\
  direction=\"l\",\
 },\
 [0x3186]={\
  direction=\"l\",\
 },\
 [0x3187]={\
  direction=\"l\",\
 },\
 [0x3188]={\
  direction=\"l\",\
 },\
 [0x3189]={\
  direction=\"l\",\
 },\
 [0x318A]={\
  direction=\"l\",\
 },\
 [0x318B]={\
  direction=\"l\",\
 },\
 [0x318C]={\
  direction=\"l\",\
 },\
 [0x318D]={\
  direction=\"l\",\
 },\
 [0x318E]={\
  direction=\"l\",\
 },\
 [0x3190]={\
  direction=\"l\",\
 },\
 [0x3191]={\
  direction=\"l\",\
 },\
 [0x3192]={\
  direction=\"l\",\
 },\
 [0x3193]={\
  direction=\"l\",\
 },\
 [0x3194]={\
  direction=\"l\",\
 },\
 [0x3195]={\
  direction=\"l\",\
 },\
 [0x3196]={\
  direction=\"l\",\
 },\
 [0x3197]={\
  direction=\"l\",\
 },\
 [0x3198]={\
  direction=\"l\",\
 },\
 [0x3199]={\
  direction=\"l\",\
 },\
 [0x319A]={\
  direction=\"l\",\
 },\
 [0x319B]={\
  direction=\"l\",\
 },\
 [0x319C]={\
  direction=\"l\",\
 },\
 [0x319D]={\
  direction=\"l\",\
 },\
 [0x319E]={\
  direction=\"l\",\
 },\
 [0x319F]={\
  direction=\"l\",\
 },\
 [0x31A0]={\
  direction=\"l\",\
 },\
 [0x31A1]={\
  direction=\"l\",\
 },\
 [0x31A2]={\
  direction=\"l\",\
 },\
 [0x31A3]={\
  direction=\"l\",\
 },\
 [0x31A4]={\
  direction=\"l\",\
 },\
 [0x31A5]={\
  direction=\"l\",\
 },\
 [0x31A6]={\
  direction=\"l\",\
 },\
 [0x31A7]={\
  direction=\"l\",\
 },\
 [0x31A8]={\
  direction=\"l\",\
 },\
 [0x31A9]={\
  direction=\"l\",\
 },\
 [0x31AA]={\
  direction=\"l\",\
 },\
 [0x31AB]={\
  direction=\"l\",\
 },\
 [0x31AC]={\
  direction=\"l\",\
 },\
 [0x31AD]={\
  direction=\"l\",\
 },\
 [0x31AE]={\
  direction=\"l\",\
 },\
 [0x31AF]={\
  direction=\"l\",\
 },\
 [0x31B0]={\
  direction=\"l\",\
 },\
 [0x31B1]={\
  direction=\"l\",\
 },\
 [0x31B2]={\
  direction=\"l\",\
 },\
 [0x31B3]={\
  direction=\"l\",\
 },\
 [0x31B4]={\
  direction=\"l\",\
 },\
 [0x31B5]={\
  direction=\"l\",\
 },\
 [0x31B6]={\
  direction=\"l\",\
 },\
 [0x31B7]={\
  direction=\"l\",\
 },\
 [0x31B8]={\
  direction=\"l\",\
 },\
 [0x31B9]={\
  direction=\"l\",\
 },\
 [0x31BA]={\
  direction=\"l\",\
 },\
 [0x31C0]={\
  direction=\"on\",\
 },\
 [0x31C1]={\
  direction=\"on\",\
 },\
 [0x31C2]={\
  direction=\"on\",\
 },\
 [0x31C3]={\
  direction=\"on\",\
 },\
 [0x31C4]={\
  direction=\"on\",\
 },\
 [0x31C5]={\
  direction=\"on\",\
 },\
 [0x31C6]={\
  direction=\"on\",\
 },\
 [0x31C7]={\
  direction=\"on\",\
 },\
 [0x31C8]={\
  direction=\"on\",\
 },\
 [0x31C9]={\
  direction=\"on\",\
 },\
 [0x31CA]={\
  direction=\"on\",\
 },\
 [0x31CB]={\
  direction=\"on\",\
 },\
 [0x31CC]={\
  direction=\"on\",\
 },\
 [0x31CD]={\
  direction=\"on\",\
 },\
 [0x31CE]={\
  direction=\"on\",\
 },\
 [0x31CF]={\
  direction=\"on\",\
 },\
 [0x31D0]={\
  direction=\"on\",\
 },\
 [0x31D1]={\
  direction=\"on\",\
 },\
 [0x31D2]={\
  direction=\"on\",\
 },\
 [0x31D3]={\
  direction=\"on\",\
 },\
 [0x31D4]={\
  direction=\"on\",\
 },\
 [0x31D5]={\
  direction=\"on\",\
 },\
 [0x31D6]={\
  direction=\"on\",\
 },\
 [0x31D7]={\
  direction=\"on\",\
 },\
 [0x31D8]={\
  direction=\"on\",\
 },\
 [0x31D9]={\
  direction=\"on\",\
 },\
 [0x31DA]={\
  direction=\"on\",\
 },\
 [0x31DB]={\
  direction=\"on\",\
 },\
 [0x31DC]={\
  direction=\"on\",\
 },\
 [0x31DD]={\
  direction=\"on\",\
 },\
 [0x31DE]={\
  direction=\"on\",\
 },\
 [0x31DF]={\
  direction=\"on\",\
 },\
 [0x31E0]={\
  direction=\"on\",\
 },\
 [0x31E1]={\
  direction=\"on\",\
 },\
 [0x31E2]={\
  direction=\"on\",\
 },\
 [0x31E3]={\
  direction=\"on\",\
 },\
 [0x31F0]={\
  direction=\"l\",\
 },\
 [0x31F1]={\
  direction=\"l\",\
 },\
 [0x31F2]={\
  direction=\"l\",\
 },\
 [0x31F3]={\
  direction=\"l\",\
 },\
 [0x31F4]={\
  direction=\"l\",\
 },\
 [0x31F5]={\
  direction=\"l\",\
 },\
 [0x31F6]={\
  direction=\"l\",\
 },\
 [0x31F7]={\
  direction=\"l\",\
 },\
 [0x31F8]={\
  direction=\"l\",\
 },\
 [0x31F9]={\
  direction=\"l\",\
 },\
 [0x31FA]={\
  direction=\"l\",\
 },\
 [0x31FB]={\
  direction=\"l\",\
 },\
 [0x31FC]={\
  direction=\"l\",\
 },\
 [0x31FD]={\
  direction=\"l\",\
 },\
 [0x31FE]={\
  direction=\"l\",\
 },\
 [0x31FF]={\
  direction=\"l\",\
 },\
 [0x3200]={\
  direction=\"l\",\
 },\
 [0x3201]={\
  direction=\"l\",\
 },\
 [0x3202]={\
  direction=\"l\",\
 },\
 [0x3203]={\
  direction=\"l\",\
 },\
 [0x3204]={\
  direction=\"l\",\
 },\
 [0x3205]={\
  direction=\"l\",\
 },\
 [0x3206]={\
  direction=\"l\",\
 },\
 [0x3207]={\
  direction=\"l\",\
 },\
 [0x3208]={\
  direction=\"l\",\
 },\
 [0x3209]={\
  direction=\"l\",\
 },\
 [0x320A]={\
  direction=\"l\",\
 },\
 [0x320B]={\
  direction=\"l\",\
 },\
 [0x320C]={\
  direction=\"l\",\
 },\
 [0x320D]={\
  direction=\"l\",\
 },\
 [0x320E]={\
  direction=\"l\",\
 },\
 [0x320F]={\
  direction=\"l\",\
 },\
 [0x3210]={\
  direction=\"l\",\
 },\
 [0x3211]={\
  direction=\"l\",\
 },\
 [0x3212]={\
  direction=\"l\",\
 },\
 [0x3213]={\
  direction=\"l\",\
 },\
 [0x3214]={\
  direction=\"l\",\
 },\
 [0x3215]={\
  direction=\"l\",\
 },\
 [0x3216]={\
  direction=\"l\",\
 },\
 [0x3217]={\
  direction=\"l\",\
 },\
 [0x3218]={\
  direction=\"l\",\
 },\
 [0x3219]={\
  direction=\"l\",\
 },\
 [0x321A]={\
  direction=\"l\",\
 },\
 [0x321B]={\
  direction=\"l\",\
 },\
 [0x321C]={\
  direction=\"l\",\
 },\
 [0x321D]={\
  direction=\"on\",\
 },\
 [0x321E]={\
  direction=\"on\",\
 },\
 [0x3220]={\
  direction=\"l\",\
 },\
 [0x3221]={\
  direction=\"l\",\
 },\
 [0x3222]={\
  direction=\"l\",\
 },\
 [0x3223]={\
  direction=\"l\",\
 },\
 [0x3224]={\
  direction=\"l\",\
 },\
 [0x3225]={\
  direction=\"l\",\
 },\
 [0x3226]={\
  direction=\"l\",\
 },\
 [0x3227]={\
  direction=\"l\",\
 },\
 [0x3228]={\
  direction=\"l\",\
 },\
 [0x3229]={\
  direction=\"l\",\
 },\
 [0x322A]={\
  direction=\"l\",\
 },\
 [0x322B]={\
  direction=\"l\",\
 },\
 [0x322C]={\
  direction=\"l\",\
 },\
 [0x322D]={\
  direction=\"l\",\
 },\
 [0x322E]={\
  direction=\"l\",\
 },\
 [0x322F]={\
  direction=\"l\",\
 },\
 [0x3230]={\
  direction=\"l\",\
 },\
 [0x3231]={\
  direction=\"l\",\
 },\
 [0x3232]={\
  direction=\"l\",\
 },\
 [0x3233]={\
  direction=\"l\",\
 },\
 [0x3234]={\
  direction=\"l\",\
 },\
 [0x3235]={\
  direction=\"l\",\
 },\
 [0x3236]={\
  direction=\"l\",\
 },\
 [0x3237]={\
  direction=\"l\",\
 },\
 [0x3238]={\
  direction=\"l\",\
 },\
 [0x3239]={\
  direction=\"l\",\
 },\
 [0x323A]={\
  direction=\"l\",\
 },\
 [0x323B]={\
  direction=\"l\",\
 },\
 [0x323C]={\
  direction=\"l\",\
 },\
 [0x323D]={\
  direction=\"l\",\
 },\
 [0x323E]={\
  direction=\"l\",\
 },\
 [0x323F]={\
  direction=\"l\",\
 },\
 [0x3240]={\
  direction=\"l\",\
 },\
 [0x3241]={\
  direction=\"l\",\
 },\
 [0x3242]={\
  direction=\"l\",\
 },\
 [0x3243]={\
  direction=\"l\",\
 },\
 [0x3244]={\
  direction=\"l\",\
 },\
 [0x3245]={\
  direction=\"l\",\
 },\
 [0x3246]={\
  direction=\"l\",\
 },\
 [0x3247]={\
  direction=\"l\",\
 },\
 [0x3248]={\
  direction=\"l\",\
 },\
 [0x3249]={\
  direction=\"l\",\
 },\
 [0x324A]={\
  direction=\"l\",\
 },\
 [0x324B]={\
  direction=\"l\",\
 },\
 [0x324C]={\
  direction=\"l\",\
 },\
 [0x324D]={\
  direction=\"l\",\
 },\
 [0x324E]={\
  direction=\"l\",\
 },\
 [0x324F]={\
  direction=\"l\",\
 },\
 [0x3250]={\
  direction=\"on\",\
 },\
 [0x3251]={\
  direction=\"on\",\
 },\
 [0x3252]={\
  direction=\"on\",\
 },\
 [0x3253]={\
  direction=\"on\",\
 },\
 [0x3254]={\
  direction=\"on\",\
 },\
 [0x3255]={\
  direction=\"on\",\
 },\
 [0x3256]={\
  direction=\"on\",\
 },\
 [0x3257]={\
  direction=\"on\",\
 },\
 [0x3258]={\
  direction=\"on\",\
 },\
 [0x3259]={\
  direction=\"on\",\
 },\
 [0x325A]={\
  direction=\"on\",\
 },\
 [0x325B]={\
  direction=\"on\",\
 },\
 [0x325C]={\
  direction=\"on\",\
 },\
 [0x325D]={\
  direction=\"on\",\
 },\
 [0x325E]={\
  direction=\"on\",\
 },\
 [0x325F]={\
  direction=\"on\",\
 },\
 [0x3260]={\
  direction=\"l\",\
 },\
 [0x3261]={\
  direction=\"l\",\
 },\
 [0x3262]={\
  direction=\"l\",\
 },\
 [0x3263]={\
  direction=\"l\",\
 },\
 [0x3264]={\
  direction=\"l\",\
 },\
 [0x3265]={\
  direction=\"l\",\
 },\
 [0x3266]={\
  direction=\"l\",\
 },\
 [0x3267]={\
  direction=\"l\",\
 },\
 [0x3268]={\
  direction=\"l\",\
 },\
 [0x3269]={\
  direction=\"l\",\
 },\
 [0x326A]={\
  direction=\"l\",\
 },\
 [0x326B]={\
  direction=\"l\",\
 },\
 [0x326C]={\
  direction=\"l\",\
 },\
 [0x326D]={\
  direction=\"l\",\
 },\
 [0x326E]={\
  direction=\"l\",\
 },\
 [0x326F]={\
  direction=\"l\",\
 },\
 [0x3270]={\
  direction=\"l\",\
 },\
 [0x3271]={\
  direction=\"l\",\
 },\
 [0x3272]={\
  direction=\"l\",\
 },\
 [0x3273]={\
  direction=\"l\",\
 },\
 [0x3274]={\
  direction=\"l\",\
 },\
 [0x3275]={\
  direction=\"l\",\
 },\
 [0x3276]={\
  direction=\"l\",\
 },\
 [0x3277]={\
  direction=\"l\",\
 },\
 [0x3278]={\
  direction=\"l\",\
 },\
 [0x3279]={\
  direction=\"l\",\
 },\
 [0x327A]={\
  direction=\"l\",\
 },\
 [0x327B]={\
  direction=\"l\",\
 },\
 [0x327C]={\
  direction=\"on\",\
 },\
 [0x327D]={\
  direction=\"on\",\
 },\
 [0x327E]={\
  direction=\"on\",\
 },\
 [0x327F]={\
  direction=\"l\",\
 },\
 [0x3280]={\
  direction=\"l\",\
 },\
 [0x3281]={\
  direction=\"l\",\
 },\
 [0x3282]={\
  direction=\"l\",\
 },\
 [0x3283]={\
  direction=\"l\",\
 },\
 [0x3284]={\
  direction=\"l\",\
 },\
 [0x3285]={\
  direction=\"l\",\
 },\
 [0x3286]={\
  direction=\"l\",\
 },\
 [0x3287]={\
  direction=\"l\",\
 },\
 [0x3288]={\
  direction=\"l\",\
 },\
 [0x3289]={\
  direction=\"l\",\
 },\
 [0x328A]={\
  direction=\"l\",\
 },\
 [0x328B]={\
  direction=\"l\",\
 },\
 [0x328C]={\
  direction=\"l\",\
 },\
 [0x328D]={\
  direction=\"l\",\
 },\
 [0x328E]={\
  direction=\"l\",\
 },\
 [0x328F]={\
  direction=\"l\",\
 },\
 [0x3290]={\
  direction=\"l\",\
 },\
 [0x3291]={\
  direction=\"l\",\
 },\
 [0x3292]={\
  direction=\"l\",\
 },\
 [0x3293]={\
  direction=\"l\",\
 },\
 [0x3294]={\
  direction=\"l\",\
 },\
 [0x3295]={\
  direction=\"l\",\
 },\
 [0x3296]={\
  direction=\"l\",\
 },\
 [0x3297]={\
  direction=\"l\",\
 },\
 [0x3298]={\
  direction=\"l\",\
 },\
 [0x3299]={\
  direction=\"l\",\
 },\
 [0x329A]={\
  direction=\"l\",\
 },\
 [0x329B]={\
  direction=\"l\",\
 },\
 [0x329C]={\
  direction=\"l\",\
 },\
 [0x329D]={\
  direction=\"l\",\
 },\
 [0x329E]={\
  direction=\"l\",\
 },\
 [0x329F]={\
  direction=\"l\",\
 },\
 [0x32A0]={\
  direction=\"l\",\
 },\
 [0x32A1]={\
  direction=\"l\",\
 },\
 [0x32A2]={\
  direction=\"l\",\
 },\
 [0x32A3]={\
  direction=\"l\",\
 },\
 [0x32A4]={\
  direction=\"l\",\
 },\
 [0x32A5]={\
  direction=\"l\",\
 },\
 [0x32A6]={\
  direction=\"l\",\
 },\
 [0x32A7]={\
  direction=\"l\",\
 },\
 [0x32A8]={\
  direction=\"l\",\
 },\
 [0x32A9]={\
  direction=\"l\",\
 },\
 [0x32AA]={\
  direction=\"l\",\
 },\
 [0x32AB]={\
  direction=\"l\",\
 },\
 [0x32AC]={\
  direction=\"l\",\
 },\
 [0x32AD]={\
  direction=\"l\",\
 },\
 [0x32AE]={\
  direction=\"l\",\
 },\
 [0x32AF]={\
  direction=\"l\",\
 },\
 [0x32B0]={\
  direction=\"l\",\
 },\
 [0x32B1]={\
  direction=\"on\",\
 },\
 [0x32B2]={\
  direction=\"on\",\
 },\
 [0x32B3]={\
  direction=\"on\",\
 },\
 [0x32B4]={\
  direction=\"on\",\
 },\
 [0x32B5]={\
  direction=\"on\",\
 },\
 [0x32B6]={\
  direction=\"on\",\
 },\
 [0x32B7]={\
  direction=\"on\",\
 },\
 [0x32B8]={\
  direction=\"on\",\
 },\
 [0x32B9]={\
  direction=\"on\",\
 },\
 [0x32BA]={\
  direction=\"on\",\
 },\
 [0x32BB]={\
  direction=\"on\",\
 },\
 [0x32BC]={\
  direction=\"on\",\
 },\
 [0x32BD]={\
  direction=\"on\",\
 },\
 [0x32BE]={\
  direction=\"on\",\
 },\
 [0x32BF]={\
  direction=\"on\",\
 },\
 [0x32C0]={\
  direction=\"l\",\
 },\
 [0x32C1]={\
  direction=\"l\",\
 },\
 [0x32C2]={\
  direction=\"l\",\
 },\
 [0x32C3]={\
  direction=\"l\",\
 },\
 [0x32C4]={\
  direction=\"l\",\
 },\
 [0x32C5]={\
  direction=\"l\",\
 },\
 [0x32C6]={\
  direction=\"l\",\
 },\
 [0x32C7]={\
  direction=\"l\",\
 },\
 [0x32C8]={\
  direction=\"l\",\
 },\
 [0x32C9]={\
  direction=\"l\",\
 },\
 [0x32CA]={\
  direction=\"l\",\
 },\
 [0x32CB]={\
  direction=\"l\",\
 },\
 [0x32CC]={\
  direction=\"on\",\
 },\
 [0x32CD]={\
  direction=\"on\",\
 },\
 [0x32CE]={\
  direction=\"on\",\
 },\
 [0x32CF]={\
  direction=\"on\",\
 },\
 [0x32D0]={\
  direction=\"l\",\
 },\
 [0x32D1]={\
  direction=\"l\",\
 },\
 [0x32D2]={\
  direction=\"l\",\
 },\
 [0x32D3]={\
  direction=\"l\",\
 },\
 [0x32D4]={\
  direction=\"l\",\
 },\
 [0x32D5]={\
  direction=\"l\",\
 },\
 [0x32D6]={\
  direction=\"l\",\
 },\
 [0x32D7]={\
  direction=\"l\",\
 },\
 [0x32D8]={\
  direction=\"l\",\
 },\
 [0x32D9]={\
  direction=\"l\",\
 },\
 [0x32DA]={\
  direction=\"l\",\
 },\
 [0x32DB]={\
  direction=\"l\",\
 },\
 [0x32DC]={\
  direction=\"l\",\
 },\
 [0x32DD]={\
  direction=\"l\",\
 },\
 [0x32DE]={\
  direction=\"l\",\
 },\
 [0x32DF]={\
  direction=\"l\",\
 },\
 [0x32E0]={\
  direction=\"l\",\
 },\
 [0x32E1]={\
  direction=\"l\",\
 },\
 [0x32E2]={\
  direction=\"l\",\
 },\
 [0x32E3]={\
  direction=\"l\",\
 },\
 [0x32E4]={\
  direction=\"l\",\
 },\
 [0x32E5]={\
  direction=\"l\",\
 },\
 [0x32E6]={\
  direction=\"l\",\
 },\
 [0x32E7]={\
  direction=\"l\",\
 },\
 [0x32E8]={\
  direction=\"l\",\
 },\
 [0x32E9]={\
  direction=\"l\",\
 },\
 [0x32EA]={\
  direction=\"l\",\
 },\
 [0x32EB]={\
  direction=\"l\",\
 },\
 [0x32EC]={\
  direction=\"l\",\
 },\
 [0x32ED]={\
  direction=\"l\",\
 },\
 [0x32EE]={\
  direction=\"l\",\
 },\
 [0x32EF]={\
  direction=\"l\",\
 },\
 [0x32F0]={\
  direction=\"l\",\
 },\
 [0x32F1]={\
  direction=\"l\",\
 },\
 [0x32F2]={\
  direction=\"l\",\
 },\
 [0x32F3]={\
  direction=\"l\",\
 },\
 [0x32F4]={\
  direction=\"l\",\
 },\
 [0x32F5]={\
  direction=\"l\",\
 },\
 [0x32F6]={\
  direction=\"l\",\
 },\
 [0x32F7]={\
  direction=\"l\",\
 },\
 [0x32F8]={\
  direction=\"l\",\
 },\
 [0x32F9]={\
  direction=\"l\",\
 },\
 [0x32FA]={\
  direction=\"l\",\
 },\
 [0x32FB]={\
  direction=\"l\",\
 },\
 [0x32FC]={\
  direction=\"l\",\
 },\
 [0x32FD]={\
  direction=\"l\",\
 },\
 [0x32FE]={\
  direction=\"l\",\
 },\
 [0x3300]={\
  direction=\"l\",\
 },\
 [0x3301]={\
  direction=\"l\",\
 },\
 [0x3302]={\
  direction=\"l\",\
 },\
 [0x3303]={\
  direction=\"l\",\
 },\
 [0x3304]={\
  direction=\"l\",\
 },\
 [0x3305]={\
  direction=\"l\",\
 },\
 [0x3306]={\
  direction=\"l\",\
 },\
 [0x3307]={\
  direction=\"l\",\
 },\
 [0x3308]={\
  direction=\"l\",\
 },\
 [0x3309]={\
  direction=\"l\",\
 },\
 [0x330A]={\
  direction=\"l\",\
 },\
 [0x330B]={\
  direction=\"l\",\
 },\
 [0x330C]={\
  direction=\"l\",\
 },\
 [0x330D]={\
  direction=\"l\",\
 },\
 [0x330E]={\
  direction=\"l\",\
 },\
 [0x330F]={\
  direction=\"l\",\
 },\
 [0x3310]={\
  direction=\"l\",\
 },\
 [0x3311]={\
  direction=\"l\",\
 },\
 [0x3312]={\
  direction=\"l\",\
 },\
 [0x3313]={\
  direction=\"l\",\
 },\
 [0x3314]={\
  direction=\"l\",\
 },\
 [0x3315]={\
  direction=\"l\",\
 },\
 [0x3316]={\
  direction=\"l\",\
 },\
 [0x3317]={\
  direction=\"l\",\
 },\
 [0x3318]={\
  direction=\"l\",\
 },\
 [0x3319]={\
  direction=\"l\",\
 },\
 [0x331A]={\
  direction=\"l\",\
 },\
 [0x331B]={\
  direction=\"l\",\
 },\
 [0x331C]={\
  direction=\"l\",\
 },\
 [0x331D]={\
  direction=\"l\",\
 },\
 [0x331E]={\
  direction=\"l\",\
 },\
 [0x331F]={\
  direction=\"l\",\
 },\
 [0x3320]={\
  direction=\"l\",\
 },\
 [0x3321]={\
  direction=\"l\",\
 },\
 [0x3322]={\
  direction=\"l\",\
 },\
 [0x3323]={\
  direction=\"l\",\
 },\
 [0x3324]={\
  direction=\"l\",\
 },\
 [0x3325]={\
  direction=\"l\",\
 },\
 [0x3326]={\
  direction=\"l\",\
 },\
 [0x3327]={\
  direction=\"l\",\
 },\
 [0x3328]={\
  direction=\"l\",\
 },\
 [0x3329]={\
  direction=\"l\",\
 },\
 [0x332A]={\
  direction=\"l\",\
 },\
 [0x332B]={\
  direction=\"l\",\
 },\
 [0x332C]={\
  direction=\"l\",\
 },\
 [0x332D]={\
  direction=\"l\",\
 },\
 [0x332E]={\
  direction=\"l\",\
 },\
 [0x332F]={\
  direction=\"l\",\
 },\
 [0x3330]={\
  direction=\"l\",\
 },\
 [0x3331]={\
  direction=\"l\",\
 },\
 [0x3332]={\
  direction=\"l\",\
 },\
 [0x3333]={\
  direction=\"l\",\
 },\
 [0x3334]={\
  direction=\"l\",\
 },\
 [0x3335]={\
  direction=\"l\",\
 },\
 [0x3336]={\
  direction=\"l\",\
 },\
 [0x3337]={\
  direction=\"l\",\
 },\
 [0x3338]={\
  direction=\"l\",\
 },\
 [0x3339]={\
  direction=\"l\",\
 },\
 [0x333A]={\
  direction=\"l\",\
 },\
 [0x333B]={\
  direction=\"l\",\
 },\
 [0x333C]={\
  direction=\"l\",\
 },\
 [0x333D]={\
  direction=\"l\",\
 },\
 [0x333E]={\
  direction=\"l\",\
 },\
 [0x333F]={\
  direction=\"l\",\
 },\
 [0x3340]={\
  direction=\"l\",\
 },\
 [0x3341]={\
  direction=\"l\",\
 },\
 [0x3342]={\
  direction=\"l\",\
 },\
 [0x3343]={\
  direction=\"l\",\
 },\
 [0x3344]={\
  direction=\"l\",\
 },\
 [0x3345]={\
  direction=\"l\",\
 },\
 [0x3346]={\
  direction=\"l\",\
 },\
 [0x3347]={\
  direction=\"l\",\
 },\
 [0x3348]={\
  direction=\"l\",\
 },\
 [0x3349]={\
  direction=\"l\",\
 },\
 [0x334A]={\
  direction=\"l\",\
 },\
 [0x334B]={\
  direction=\"l\",\
 },\
 [0x334C]={\
  direction=\"l\",\
 },\
 [0x334D]={\
  direction=\"l\",\
 },\
 [0x334E]={\
  direction=\"l\",\
 },\
 [0x334F]={\
  direction=\"l\",\
 },\
 [0x3350]={\
  direction=\"l\",\
 },\
 [0x3351]={\
  direction=\"l\",\
 },\
 [0x3352]={\
  direction=\"l\",\
 },\
 [0x3353]={\
  direction=\"l\",\
 },\
 [0x3354]={\
  direction=\"l\",\
 },\
 [0x3355]={\
  direction=\"l\",\
 },\
 [0x3356]={\
  direction=\"l\",\
 },\
 [0x3357]={\
  direction=\"l\",\
 },\
 [0x3358]={\
  direction=\"l\",\
 },\
 [0x3359]={\
  direction=\"l\",\
 },\
 [0x335A]={\
  direction=\"l\",\
 },\
 [0x335B]={\
  direction=\"l\",\
 },\
 [0x335C]={\
  direction=\"l\",\
 },\
 [0x335D]={\
  direction=\"l\",\
 },\
 [0x335E]={\
  direction=\"l\",\
 },\
 [0x335F]={\
  direction=\"l\",\
 },\
 [0x3360]={\
  direction=\"l\",\
 },\
 [0x3361]={\
  direction=\"l\",\
 },\
 [0x3362]={\
  direction=\"l\",\
 },\
 [0x3363]={\
  direction=\"l\",\
 },\
 [0x3364]={\
  direction=\"l\",\
 },\
 [0x3365]={\
  direction=\"l\",\
 },\
 [0x3366]={\
  direction=\"l\",\
 },\
 [0x3367]={\
  direction=\"l\",\
 },\
 [0x3368]={\
  direction=\"l\",\
 },\
 [0x3369]={\
  direction=\"l\",\
 },\
 [0x336A]={\
  direction=\"l\",\
 },\
 [0x336B]={\
  direction=\"l\",\
 },\
 [0x336C]={\
  direction=\"l\",\
 },\
 [0x336D]={\
  direction=\"l\",\
 },\
 [0x336E]={\
  direction=\"l\",\
 },\
 [0x336F]={\
  direction=\"l\",\
 },\
 [0x3370]={\
  direction=\"l\",\
 },\
 [0x3371]={\
  direction=\"l\",\
 },\
 [0x3372]={\
  direction=\"l\",\
 },\
 [0x3373]={\
  direction=\"l\",\
 },\
 [0x3374]={\
  direction=\"l\",\
 },\
 [0x3375]={\
  direction=\"l\",\
 },\
 [0x3376]={\
  direction=\"l\",\
 },\
 [0x3377]={\
  direction=\"on\",\
 },\
 [0x3378]={\
  direction=\"on\",\
 },\
 [0x3379]={\
  direction=\"on\",\
 },\
 [0x337A]={\
  direction=\"on\",\
 },\
 [0x337B]={\
  direction=\"l\",\
 },\
 [0x337C]={\
  direction=\"l\",\
 },\
 [0x337D]={\
  direction=\"l\",\
 },\
 [0x337E]={\
  direction=\"l\",\
 },\
 [0x337F]={\
  direction=\"l\",\
 },\
 [0x3380]={\
  direction=\"l\",\
 },\
 [0x3381]={\
  direction=\"l\",\
 },\
 [0x3382]={\
  direction=\"l\",\
 },\
 [0x3383]={\
  direction=\"l\",\
 },\
 [0x3384]={\
  direction=\"l\",\
 },\
 [0x3385]={\
  direction=\"l\",\
 },\
 [0x3386]={\
  direction=\"l\",\
 },\
 [0x3387]={\
  direction=\"l\",\
 },\
 [0x3388]={\
  direction=\"l\",\
 },\
 [0x3389]={\
  direction=\"l\",\
 },\
 [0x338A]={\
  direction=\"l\",\
 },\
 [0x338B]={\
  direction=\"l\",\
 },\
 [0x338C]={\
  direction=\"l\",\
 },\
 [0x338D]={\
  direction=\"l\",\
 },\
 [0x338E]={\
  direction=\"l\",\
 },\
 [0x338F]={\
  direction=\"l\",\
 },\
 [0x3390]={\
  direction=\"l\",\
 },\
 [0x3391]={\
  direction=\"l\",\
 },\
 [0x3392]={\
  direction=\"l\",\
 },\
 [0x3393]={\
  direction=\"l\",\
 },\
 [0x3394]={\
  direction=\"l\",\
 },\
 [0x3395]={\
  direction=\"l\",\
 },\
 [0x3396]={\
  direction=\"l\",\
 },\
 [0x3397]={\
  direction=\"l\",\
 },\
 [0x3398]={\
  direction=\"l\",\
 },\
 [0x3399]={\
  direction=\"l\",\
 },\
 [0x339A]={\
  direction=\"l\",\
 },\
 [0x339B]={\
  direction=\"l\",\
 },\
 [0x339C]={\
  direction=\"l\",\
 },\
 [0x339D]={\
  direction=\"l\",\
 },\
 [0x339E]={\
  direction=\"l\",\
 },\
 [0x339F]={\
  direction=\"l\",\
 },\
 [0x33A0]={\
  direction=\"l\",\
 },\
 [0x33A1]={\
  direction=\"l\",\
 },\
 [0x33A2]={\
  direction=\"l\",\
 },\
 [0x33A3]={\
  direction=\"l\",\
 },\
 [0x33A4]={\
  direction=\"l\",\
 },\
 [0x33A5]={\
  direction=\"l\",\
 },\
 [0x33A6]={\
  direction=\"l\",\
 },\
 [0x33A7]={\
  direction=\"l\",\
 },\
 [0x33A8]={\
  direction=\"l\",\
 },\
 [0x33A9]={\
  direction=\"l\",\
 },\
 [0x33AA]={\
  direction=\"l\",\
 },\
 [0x33AB]={\
  direction=\"l\",\
 },\
 [0x33AC]={\
  direction=\"l\",\
 },\
 [0x33AD]={\
  direction=\"l\",\
 },\
 [0x33AE]={\
  direction=\"l\",\
 },\
 [0x33AF]={\
  direction=\"l\",\
 },\
 [0x33B0]={\
  direction=\"l\",\
 },\
 [0x33B1]={\
  direction=\"l\",\
 },\
 [0x33B2]={\
  direction=\"l\",\
 },\
 [0x33B3]={\
  direction=\"l\",\
 },\
 [0x33B4]={\
  direction=\"l\",\
 },\
 [0x33B5]={\
  direction=\"l\",\
 },\
 [0x33B6]={\
  direction=\"l\",\
 },\
 [0x33B7]={\
  direction=\"l\",\
 },\
 [0x33B8]={\
  direction=\"l\",\
 },\
 [0x33B9]={\
  direction=\"l\",\
 },\
 [0x33BA]={\
  direction=\"l\",\
 },\
 [0x33BB]={\
  direction=\"l\",\
 },\
 [0x33BC]={\
  direction=\"l\",\
 },\
 [0x33BD]={\
  direction=\"l\",\
 },\
 [0x33BE]={\
  direction=\"l\",\
 },\
 [0x33BF]={\
  direction=\"l\",\
 },\
 [0x33C0]={\
  direction=\"l\",\
 },\
 [0x33C1]={\
  direction=\"l\",\
 },\
 [0x33C2]={\
  direction=\"l\",\
 },\
 [0x33C3]={\
  direction=\"l\",\
 },\
 [0x33C4]={\
  direction=\"l\",\
 },\
 [0x33C5]={\
  direction=\"l\",\
 },\
 [0x33C6]={\
  direction=\"l\",\
 },\
 [0x33C7]={\
  direction=\"l\",\
 },\
 [0x33C8]={\
  direction=\"l\",\
 },\
 [0x33C9]={\
  direction=\"l\",\
 },\
 [0x33CA]={\
  direction=\"l\",\
 },\
 [0x33CB]={\
  direction=\"l\",\
 },\
 [0x33CC]={\
  direction=\"l\",\
 },\
 [0x33CD]={\
  direction=\"l\",\
 },\
 [0x33CE]={\
  direction=\"l\",\
 },\
 [0x33CF]={\
  direction=\"l\",\
 },\
 [0x33D0]={\
  direction=\"l\",\
 },\
 [0x33D1]={\
  direction=\"l\",\
 },\
 [0x33D2]={\
  direction=\"l\",\
 },\
 [0x33D3]={\
  direction=\"l\",\
 },\
 [0x33D4]={\
  direction=\"l\",\
 },\
 [0x33D5]={\
  direction=\"l\",\
 },\
 [0x33D6]={\
  direction=\"l\",\
 },\
 [0x33D7]={\
  direction=\"l\",\
 },\
 [0x33D8]={\
  direction=\"l\",\
 },\
 [0x33D9]={\
  direction=\"l\",\
 },\
 [0x33DA]={\
  direction=\"l\",\
 },\
 [0x33DB]={\
  direction=\"l\",\
 },\
 [0x33DC]={\
  direction=\"l\",\
 },\
 [0x33DD]={\
  direction=\"l\",\
 },\
 [0x33DE]={\
  direction=\"on\",\
 },\
 [0x33DF]={\
  direction=\"on\",\
 },\
 [0x33E0]={\
  direction=\"l\",\
 },\
 [0x33E1]={\
  direction=\"l\",\
 },\
 [0x33E2]={\
  direction=\"l\",\
 },\
 [0x33E3]={\
  direction=\"l\",\
 },\
 [0x33E4]={\
  direction=\"l\",\
 },\
 [0x33E5]={\
  direction=\"l\",\
 },\
 [0x33E6]={\
  direction=\"l\",\
 },\
 [0x33E7]={\
  direction=\"l\",\
 },\
 [0x33E8]={\
  direction=\"l\",\
 },\
 [0x33E9]={\
  direction=\"l\",\
 },\
 [0x33EA]={\
  direction=\"l\",\
 },\
 [0x33EB]={\
  direction=\"l\",\
 },\
 [0x33EC]={\
  direction=\"l\",\
 },\
 [0x33ED]={\
  direction=\"l\",\
 },\
 [0x33EE]={\
  direction=\"l\",\
 },\
 [0x33EF]={\
  direction=\"l\",\
 },\
 [0x33F0]={\
  direction=\"l\",\
 },\
 [0x33F1]={\
  direction=\"l\",\
 },\
 [0x33F2]={\
  direction=\"l\",\
 },\
 [0x33F3]={\
  direction=\"l\",\
 },\
 [0x33F4]={\
  direction=\"l\",\
 },\
 [0x33F5]={\
  direction=\"l\",\
 },\
 [0x33F6]={\
  direction=\"l\",\
 },\
 [0x33F7]={\
  direction=\"l\",\
 },\
 [0x33F8]={\
  direction=\"l\",\
 },\
 [0x33F9]={\
  direction=\"l\",\
 },\
 [0x33FA]={\
  direction=\"l\",\
 },\
 [0x33FB]={\
  direction=\"l\",\
 },\
 [0x33FC]={\
  direction=\"l\",\
 },\
 [0x33FD]={\
  direction=\"l\",\
 },\
 [0x33FE]={\
  direction=\"l\",\
 },\
 [0x33FF]={\
  direction=\"on\",\
 },\
 [0x4DC0]={\
  direction=\"on\",\
 },\
 [0x4DC1]={\
  direction=\"on\",\
 },\
 [0x4DC2]={\
  direction=\"on\",\
 },\
 [0x4DC3]={\
  direction=\"on\",\
 },\
 [0x4DC4]={\
  direction=\"on\",\
 },\
 [0x4DC5]={\
  direction=\"on\",\
 },\
 [0x4DC6]={\
  direction=\"on\",\
 },\
 [0x4DC7]={\
  direction=\"on\",\
 },\
 [0x4DC8]={\
  direction=\"on\",\
 },\
 [0x4DC9]={\
  direction=\"on\",\
 },\
 [0x4DCA]={\
  direction=\"on\",\
 },\
 [0x4DCB]={\
  direction=\"on\",\
 },\
 [0x4DCC]={\
  direction=\"on\",\
 },\
 [0x4DCD]={\
  direction=\"on\",\
 },\
 [0x4DCE]={\
  direction=\"on\",\
 },\
 [0x4DCF]={\
  direction=\"on\",\
 },\
 [0x4DD0]={\
  direction=\"on\",\
 },\
 [0x4DD1]={\
  direction=\"on\",\
 },\
 [0x4DD2]={\
  direction=\"on\",\
 },\
 [0x4DD3]={\
  direction=\"on\",\
 },\
 [0x4DD4]={\
  direction=\"on\",\
 },\
 [0x4DD5]={\
  direction=\"on\",\
 },\
 [0x4DD6]={\
  direction=\"on\",\
 },\
 [0x4DD7]={\
  direction=\"on\",\
 },\
 [0x4DD8]={\
  direction=\"on\",\
 },\
 [0x4DD9]={\
  direction=\"on\",\
 },\
 [0x4DDA]={\
  direction=\"on\",\
 },\
 [0x4DDB]={\
  direction=\"on\",\
 },\
 [0x4DDC]={\
  direction=\"on\",\
 },\
 [0x4DDD]={\
  direction=\"on\",\
 },\
 [0x4DDE]={\
  direction=\"on\",\
 },\
 [0x4DDF]={\
  direction=\"on\",\
 },\
 [0x4DE0]={\
  direction=\"on\",\
 },\
 [0x4DE1]={\
  direction=\"on\",\
 },\
 [0x4DE2]={\
  direction=\"on\",\
 },\
 [0x4DE3]={\
  direction=\"on\",\
 },\
 [0x4DE4]={\
  direction=\"on\",\
 },\
 [0x4DE5]={\
  direction=\"on\",\
 },\
 [0x4DE6]={\
  direction=\"on\",\
 },\
 [0x4DE7]={\
  direction=\"on\",\
 },\
 [0x4DE8]={\
  direction=\"on\",\
 },\
 [0x4DE9]={\
  direction=\"on\",\
 },\
 [0x4DEA]={\
  direction=\"on\",\
 },\
 [0x4DEB]={\
  direction=\"on\",\
 },\
 [0x4DEC]={\
  direction=\"on\",\
 },\
 [0x4DED]={\
  direction=\"on\",\
 },\
 [0x4DEE]={\
  direction=\"on\",\
 },\
 [0x4DEF]={\
  direction=\"on\",\
 },\
 [0x4DF0]={\
  direction=\"on\",\
 },\
 [0x4DF1]={\
  direction=\"on\",\
 },\
 [0x4DF2]={\
  direction=\"on\",\
 },\
 [0x4DF3]={\
  direction=\"on\",\
 },\
 [0x4DF4]={\
  direction=\"on\",\
 },\
 [0x4DF5]={\
  direction=\"on\",\
 },\
 [0x4DF6]={\
  direction=\"on\",\
 },\
 [0x4DF7]={\
  direction=\"on\",\
 },\
 [0x4DF8]={\
  direction=\"on\",\
 },\
 [0x4DF9]={\
  direction=\"on\",\
 },\
 [0x4DFA]={\
  direction=\"on\",\
 },\
 [0x4DFB]={\
  direction=\"on\",\
 },\
 [0x4DFC]={\
  direction=\"on\",\
 },\
 [0x4DFD]={\
  direction=\"on\",\
 },\
 [0x4DFE]={\
  direction=\"on\",\
 },\
 [0x4DFF]={\
  direction=\"on\",\
 },\
 [0xA000]={\
  direction=\"l\",\
 },\
 [0xA001]={\
  direction=\"l\",\
 },\
 [0xA002]={\
  direction=\"l\",\
 },\
 [0xA003]={\
  direction=\"l\",\
 },\
 [0xA004]={\
  direction=\"l\",\
 },\
 [0xA005]={\
  direction=\"l\",\
 },\
 [0xA006]={\
  direction=\"l\",\
 },\
 [0xA007]={\
  direction=\"l\",\
 },\
 [0xA008]={\
  direction=\"l\",\
 },\
 [0xA009]={\
  direction=\"l\",\
 },\
 [0xA00A]={\
  direction=\"l\",\
 },\
 [0xA00B]={\
  direction=\"l\",\
 },\
 [0xA00C]={\
  direction=\"l\",\
 },\
 [0xA00D]={\
  direction=\"l\",\
 },\
 [0xA00E]={\
  direction=\"l\",\
 },\
 [0xA00F]={\
  direction=\"l\",\
 },\
 [0xA010]={\
  direction=\"l\",\
 },\
 [0xA011]={\
  direction=\"l\",\
 },\
 [0xA012]={\
  direction=\"l\",\
 },\
 [0xA013]={\
  direction=\"l\",\
 },\
 [0xA014]={\
  direction=\"l\",\
 },\
 [0xA015]={\
  direction=\"l\",\
 },\
 [0xA016]={\
  direction=\"l\",\
 },\
 [0xA017]={\
  direction=\"l\",\
 },\
 [0xA018]={\
  direction=\"l\",\
 },\
 [0xA019]={\
  direction=\"l\",\
 },\
 [0xA01A]={\
  direction=\"l\",\
 },\
 [0xA01B]={\
  direction=\"l\",\
 },\
 [0xA01C]={\
  direction=\"l\",\
 },\
 [0xA01D]={\
  direction=\"l\",\
 },\
 [0xA01E]={\
  direction=\"l\",\
 },\
 [0xA01F]={\
  direction=\"l\",\
 },\
 [0xA020]={\
  direction=\"l\",\
 },\
 [0xA021]={\
  direction=\"l\",\
 },\
 [0xA022]={\
  direction=\"l\",\
 },\
 [0xA023]={\
  direction=\"l\",\
 },\
 [0xA024]={\
  direction=\"l\",\
 },\
 [0xA025]={\
  direction=\"l\",\
 },\
 [0xA026]={\
  direction=\"l\",\
 },\
 [0xA027]={\
  direction=\"l\",\
 },\
 [0xA028]={\
  direction=\"l\",\
 },\
 [0xA029]={\
  direction=\"l\",\
 },\
 [0xA02A]={\
  direction=\"l\",\
 },\
 [0xA02B]={\
  direction=\"l\",\
 },\
 [0xA02C]={\
  direction=\"l\",\
 },\
 [0xA02D]={\
  direction=\"l\",\
 },\
 [0xA02E]={\
  direction=\"l\",\
 },\
 [0xA02F]={\
  direction=\"l\",\
 },\
 [0xA030]={\
  direction=\"l\",\
 },\
 [0xA031]={\
  direction=\"l\",\
 },\
 [0xA032]={\
  direction=\"l\",\
 },\
 [0xA033]={\
  direction=\"l\",\
 },\
 [0xA034]={\
  direction=\"l\",\
 },\
 [0xA035]={\
  direction=\"l\",\
 },\
 [0xA036]={\
  direction=\"l\",\
 },\
 [0xA037]={\
  direction=\"l\",\
 },\
 [0xA038]={\
  direction=\"l\",\
 },\
 [0xA039]={\
  direction=\"l\",\
 },\
 [0xA03A]={\
  direction=\"l\",\
 },\
 [0xA03B]={\
  direction=\"l\",\
 },\
 [0xA03C]={\
  direction=\"l\",\
 },\
 [0xA03D]={\
  direction=\"l\",\
 },\
 [0xA03E]={\
  direction=\"l\",\
 },\
 [0xA03F]={\
  direction=\"l\",\
 },\
 [0xA040]={\
  direction=\"l\",\
 },\
 [0xA041]={\
  direction=\"l\",\
 },\
 [0xA042]={\
  direction=\"l\",\
 },\
 [0xA043]={\
  direction=\"l\",\
 },\
 [0xA044]={\
  direction=\"l\",\
 },\
 [0xA045]={\
  direction=\"l\",\
 },\
 [0xA046]={\
  direction=\"l\",\
 },\
 [0xA047]={\
  direction=\"l\",\
 },\
 [0xA048]={\
  direction=\"l\",\
 },\
 [0xA049]={\
  direction=\"l\",\
 },\
 [0xA04A]={\
  direction=\"l\",\
 },\
 [0xA04B]={\
  direction=\"l\",\
 },\
 [0xA04C]={\
  direction=\"l\",\
 },\
 [0xA04D]={\
  direction=\"l\",\
 },\
 [0xA04E]={\
  direction=\"l\",\
 },\
 [0xA04F]={\
  direction=\"l\",\
 },\
 [0xA050]={\
  direction=\"l\",\
 },\
 [0xA051]={\
  direction=\"l\",\
 },\
 [0xA052]={\
  direction=\"l\",\
 },\
 [0xA053]={\
  direction=\"l\",\
 },\
 [0xA054]={\
  direction=\"l\",\
 },\
 [0xA055]={\
  direction=\"l\",\
 },\
 [0xA056]={\
  direction=\"l\",\
 },\
 [0xA057]={\
  direction=\"l\",\
 },\
 [0xA058]={\
  direction=\"l\",\
 },\
 [0xA059]={\
  direction=\"l\",\
 },\
 [0xA05A]={\
  direction=\"l\",\
 },\
 [0xA05B]={\
  direction=\"l\",\
 },\
 [0xA05C]={\
  direction=\"l\",\
 },\
 [0xA05D]={\
  direction=\"l\",\
 },\
 [0xA05E]={\
  direction=\"l\",\
 },\
 [0xA05F]={\
  direction=\"l\",\
 },\
 [0xA060]={\
  direction=\"l\",\
 },\
 [0xA061]={\
  direction=\"l\",\
 },\
 [0xA062]={\
  direction=\"l\",\
 },\
 [0xA063]={\
  direction=\"l\",\
 },\
 [0xA064]={\
  direction=\"l\",\
 },\
 [0xA065]={\
  direction=\"l\",\
 },\
 [0xA066]={\
  direction=\"l\",\
 },\
 [0xA067]={\
  direction=\"l\",\
 },\
 [0xA068]={\
  direction=\"l\",\
 },\
 [0xA069]={\
  direction=\"l\",\
 },\
 [0xA06A]={\
  direction=\"l\",\
 },\
 [0xA06B]={\
  direction=\"l\",\
 },\
 [0xA06C]={\
  direction=\"l\",\
 },\
 [0xA06D]={\
  direction=\"l\",\
 },\
 [0xA06E]={\
  direction=\"l\",\
 },\
 [0xA06F]={\
  direction=\"l\",\
 },\
 [0xA070]={\
  direction=\"l\",\
 },\
 [0xA071]={\
  direction=\"l\",\
 },\
 [0xA072]={\
  direction=\"l\",\
 },\
 [0xA073]={\
  direction=\"l\",\
 },\
 [0xA074]={\
  direction=\"l\",\
 },\
 [0xA075]={\
  direction=\"l\",\
 },\
 [0xA076]={\
  direction=\"l\",\
 },\
 [0xA077]={\
  direction=\"l\",\
 },\
 [0xA078]={\
  direction=\"l\",\
 },\
 [0xA079]={\
  direction=\"l\",\
 },\
 [0xA07A]={\
  direction=\"l\",\
 },\
 [0xA07B]={\
  direction=\"l\",\
 },\
 [0xA07C]={\
  direction=\"l\",\
 },\
 [0xA07D]={\
  direction=\"l\",\
 },\
 [0xA07E]={\
  direction=\"l\",\
 },\
 [0xA07F]={\
  direction=\"l\",\
 },\
 [0xA080]={\
  direction=\"l\",\
 },\
 [0xA081]={\
  direction=\"l\",\
 },\
 [0xA082]={\
  direction=\"l\",\
 },\
 [0xA083]={\
  direction=\"l\",\
 },\
 [0xA084]={\
  direction=\"l\",\
 },\
 [0xA085]={\
  direction=\"l\",\
 },\
 [0xA086]={\
  direction=\"l\",\
 },\
 [0xA087]={\
  direction=\"l\",\
 },\
 [0xA088]={\
  direction=\"l\",\
 },\
 [0xA089]={\
  direction=\"l\",\
 },\
 [0xA08A]={\
  direction=\"l\",\
 },\
 [0xA08B]={\
  direction=\"l\",\
 },\
 [0xA08C]={\
  direction=\"l\",\
 },\
 [0xA08D]={\
  direction=\"l\",\
 },\
 [0xA08E]={\
  direction=\"l\",\
 },\
 [0xA08F]={\
  direction=\"l\",\
 },\
 [0xA090]={\
  direction=\"l\",\
 },\
 [0xA091]={\
  direction=\"l\",\
 },\
 [0xA092]={\
  direction=\"l\",\
 },\
 [0xA093]={\
  direction=\"l\",\
 },\
 [0xA094]={\
  direction=\"l\",\
 },\
 [0xA095]={\
  direction=\"l\",\
 },\
 [0xA096]={\
  direction=\"l\",\
 },\
 [0xA097]={\
  direction=\"l\",\
 },\
 [0xA098]={\
  direction=\"l\",\
 },\
 [0xA099]={\
  direction=\"l\",\
 },\
 [0xA09A]={\
  direction=\"l\",\
 },\
 [0xA09B]={\
  direction=\"l\",\
 },\
 [0xA09C]={\
  direction=\"l\",\
 },\
 [0xA09D]={\
  direction=\"l\",\
 },\
 [0xA09E]={\
  direction=\"l\",\
 },\
 [0xA09F]={\
  direction=\"l\",\
 },\
 [0xA0A0]={\
  direction=\"l\",\
 },\
 [0xA0A1]={\
  direction=\"l\",\
 },\
 [0xA0A2]={\
  direction=\"l\",\
 },\
 [0xA0A3]={\
  direction=\"l\",\
 },\
 [0xA0A4]={\
  direction=\"l\",\
 },\
 [0xA0A5]={\
  direction=\"l\",\
 },\
 [0xA0A6]={\
  direction=\"l\",\
 },\
 [0xA0A7]={\
  direction=\"l\",\
 },\
 [0xA0A8]={\
  direction=\"l\",\
 },\
 [0xA0A9]={\
  direction=\"l\",\
 },\
 [0xA0AA]={\
  direction=\"l\",\
 },\
 [0xA0AB]={\
  direction=\"l\",\
 },\
 [0xA0AC]={\
  direction=\"l\",\
 },\
 [0xA0AD]={\
  direction=\"l\",\
 },\
 [0xA0AE]={\
  direction=\"l\",\
 },\
 [0xA0AF]={\
  direction=\"l\",\
 },\
 [0xA0B0]={\
  direction=\"l\",\
 },\
 [0xA0B1]={\
  direction=\"l\",\
 },\
 [0xA0B2]={\
  direction=\"l\",\
 },\
 [0xA0B3]={\
  direction=\"l\",\
 },\
 [0xA0B4]={\
  direction=\"l\",\
 },\
 [0xA0B5]={\
  direction=\"l\",\
 },\
 [0xA0B6]={\
  direction=\"l\",\
 },\
 [0xA0B7]={\
  direction=\"l\",\
 },\
 [0xA0B8]={\
  direction=\"l\",\
 },\
 [0xA0B9]={\
  direction=\"l\",\
 },\
 [0xA0BA]={\
  direction=\"l\",\
 },\
 [0xA0BB]={\
  direction=\"l\",\
 },\
 [0xA0BC]={\
  direction=\"l\",\
 },\
 [0xA0BD]={\
  direction=\"l\",\
 },\
 [0xA0BE]={\
  direction=\"l\",\
 },\
 [0xA0BF]={\
  direction=\"l\",\
 },\
 [0xA0C0]={\
  direction=\"l\",\
 },\
 [0xA0C1]={\
  direction=\"l\",\
 },\
 [0xA0C2]={\
  direction=\"l\",\
 },\
 [0xA0C3]={\
  direction=\"l\",\
 },\
 [0xA0C4]={\
  direction=\"l\",\
 },\
 [0xA0C5]={\
  direction=\"l\",\
 },\
 [0xA0C6]={\
  direction=\"l\",\
 },\
 [0xA0C7]={\
  direction=\"l\",\
 },\
 [0xA0C8]={\
  direction=\"l\",\
 },\
 [0xA0C9]={\
  direction=\"l\",\
 },\
 [0xA0CA]={\
  direction=\"l\",\
 },\
 [0xA0CB]={\
  direction=\"l\",\
 },\
 [0xA0CC]={\
  direction=\"l\",\
 },\
 [0xA0CD]={\
  direction=\"l\",\
 },\
 [0xA0CE]={\
  direction=\"l\",\
 },\
 [0xA0CF]={\
  direction=\"l\",\
 },\
 [0xA0D0]={\
  direction=\"l\",\
 },\
 [0xA0D1]={\
  direction=\"l\",\
 },\
 [0xA0D2]={\
  direction=\"l\",\
 },\
 [0xA0D3]={\
  direction=\"l\",\
 },\
 [0xA0D4]={\
  direction=\"l\",\
 },\
 [0xA0D5]={\
  direction=\"l\",\
 },\
 [0xA0D6]={\
  direction=\"l\",\
 },\
 [0xA0D7]={\
  direction=\"l\",\
 },\
 [0xA0D8]={\
  direction=\"l\",\
 },\
 [0xA0D9]={\
  direction=\"l\",\
 },\
 [0xA0DA]={\
  direction=\"l\",\
 },\
 [0xA0DB]={\
  direction=\"l\",\
 },\
 [0xA0DC]={\
  direction=\"l\",\
 },\
 [0xA0DD]={\
  direction=\"l\",\
 },\
 [0xA0DE]={\
  direction=\"l\",\
 },\
 [0xA0DF]={\
  direction=\"l\",\
 },\
 [0xA0E0]={\
  direction=\"l\",\
 },\
 [0xA0E1]={\
  direction=\"l\",\
 },\
 [0xA0E2]={\
  direction=\"l\",\
 },\
 [0xA0E3]={\
  direction=\"l\",\
 },\
 [0xA0E4]={\
  direction=\"l\",\
 },\
 [0xA0E5]={\
  direction=\"l\",\
 },\
 [0xA0E6]={\
  direction=\"l\",\
 },\
 [0xA0E7]={\
  direction=\"l\",\
 },\
 [0xA0E8]={\
  direction=\"l\",\
 },\
 [0xA0E9]={\
  direction=\"l\",\
 },\
 [0xA0EA]={\
  direction=\"l\",\
 },\
 [0xA0EB]={\
  direction=\"l\",\
 },\
 [0xA0EC]={\
  direction=\"l\",\
 },\
 [0xA0ED]={\
  direction=\"l\",\
 },\
 [0xA0EE]={\
  direction=\"l\",\
 },\
 [0xA0EF]={\
  direction=\"l\",\
 },\
 [0xA0F0]={\
  direction=\"l\",\
 },\
 [0xA0F1]={\
  direction=\"l\",\
 },\
 [0xA0F2]={\
  direction=\"l\",\
 },\
 [0xA0F3]={\
  direction=\"l\",\
 },\
 [0xA0F4]={\
  direction=\"l\",\
 },\
 [0xA0F5]={\
  direction=\"l\",\
 },\
 [0xA0F6]={\
  direction=\"l\",\
 },\
 [0xA0F7]={\
  direction=\"l\",\
 },\
 [0xA0F8]={\
  direction=\"l\",\
 },\
 [0xA0F9]={\
  direction=\"l\",\
 },\
 [0xA0FA]={\
  direction=\"l\",\
 },\
 [0xA0FB]={\
  direction=\"l\",\
 },\
 [0xA0FC]={\
  direction=\"l\",\
 },\
 [0xA0FD]={\
  direction=\"l\",\
 },\
 [0xA0FE]={\
  direction=\"l\",\
 },\
 [0xA0FF]={\
  direction=\"l\",\
 },\
 [0xA100]={\
  direction=\"l\",\
 },\
 [0xA101]={\
  direction=\"l\",\
 },\
 [0xA102]={\
  direction=\"l\",\
 },\
 [0xA103]={\
  direction=\"l\",\
 },\
 [0xA104]={\
  direction=\"l\",\
 },\
 [0xA105]={\
  direction=\"l\",\
 },\
 [0xA106]={\
  direction=\"l\",\
 },\
 [0xA107]={\
  direction=\"l\",\
 },\
 [0xA108]={\
  direction=\"l\",\
 },\
 [0xA109]={\
  direction=\"l\",\
 },\
 [0xA10A]={\
  direction=\"l\",\
 },\
 [0xA10B]={\
  direction=\"l\",\
 },\
 [0xA10C]={\
  direction=\"l\",\
 },\
 [0xA10D]={\
  direction=\"l\",\
 },\
 [0xA10E]={\
  direction=\"l\",\
 },\
 [0xA10F]={\
  direction=\"l\",\
 },\
 [0xA110]={\
  direction=\"l\",\
 },\
 [0xA111]={\
  direction=\"l\",\
 },\
 [0xA112]={\
  direction=\"l\",\
 },\
 [0xA113]={\
  direction=\"l\",\
 },\
 [0xA114]={\
  direction=\"l\",\
 },\
 [0xA115]={\
  direction=\"l\",\
 },\
 [0xA116]={\
  direction=\"l\",\
 },\
 [0xA117]={\
  direction=\"l\",\
 },\
 [0xA118]={\
  direction=\"l\",\
 },\
 [0xA119]={\
  direction=\"l\",\
 },\
 [0xA11A]={\
  direction=\"l\",\
 },\
 [0xA11B]={\
  direction=\"l\",\
 },\
 [0xA11C]={\
  direction=\"l\",\
 },\
 [0xA11D]={\
  direction=\"l\",\
 },\
 [0xA11E]={\
  direction=\"l\",\
 },\
 [0xA11F]={\
  direction=\"l\",\
 },\
 [0xA120]={\
  direction=\"l\",\
 },\
 [0xA121]={\
  direction=\"l\",\
 },\
 [0xA122]={\
  direction=\"l\",\
 },\
 [0xA123]={\
  direction=\"l\",\
 },\
 [0xA124]={\
  direction=\"l\",\
 },\
 [0xA125]={\
  direction=\"l\",\
 },\
 [0xA126]={\
  direction=\"l\",\
 },\
 [0xA127]={\
  direction=\"l\",\
 },\
 [0xA128]={\
  direction=\"l\",\
 },\
 [0xA129]={\
  direction=\"l\",\
 },\
 [0xA12A]={\
  direction=\"l\",\
 },\
 [0xA12B]={\
  direction=\"l\",\
 },\
 [0xA12C]={\
  direction=\"l\",\
 },\
 [0xA12D]={\
  direction=\"l\",\
 },\
 [0xA12E]={\
  direction=\"l\",\
 },\
 [0xA12F]={\
  direction=\"l\",\
 },\
 [0xA130]={\
  direction=\"l\",\
 },\
 [0xA131]={\
  direction=\"l\",\
 },\
 [0xA132]={\
  direction=\"l\",\
 },\
 [0xA133]={\
  direction=\"l\",\
 },\
 [0xA134]={\
  direction=\"l\",\
 },\
 [0xA135]={\
  direction=\"l\",\
 },\
 [0xA136]={\
  direction=\"l\",\
 },\
 [0xA137]={\
  direction=\"l\",\
 },\
 [0xA138]={\
  direction=\"l\",\
 },\
 [0xA139]={\
  direction=\"l\",\
 },\
 [0xA13A]={\
  direction=\"l\",\
 },\
 [0xA13B]={\
  direction=\"l\",\
 },\
 [0xA13C]={\
  direction=\"l\",\
 },\
 [0xA13D]={\
  direction=\"l\",\
 },\
 [0xA13E]={\
  direction=\"l\",\
 },\
 [0xA13F]={\
  direction=\"l\",\
 },\
 [0xA140]={\
  direction=\"l\",\
 },\
 [0xA141]={\
  direction=\"l\",\
 },\
 [0xA142]={\
  direction=\"l\",\
 },\
 [0xA143]={\
  direction=\"l\",\
 },\
 [0xA144]={\
  direction=\"l\",\
 },\
 [0xA145]={\
  direction=\"l\",\
 },\
 [0xA146]={\
  direction=\"l\",\
 },\
 [0xA147]={\
  direction=\"l\",\
 },\
 [0xA148]={\
  direction=\"l\",\
 },\
 [0xA149]={\
  direction=\"l\",\
 },\
 [0xA14A]={\
  direction=\"l\",\
 },\
 [0xA14B]={\
  direction=\"l\",\
 },\
 [0xA14C]={\
  direction=\"l\",\
 },\
 [0xA14D]={\
  direction=\"l\",\
 },\
 [0xA14E]={\
  direction=\"l\",\
 },\
 [0xA14F]={\
  direction=\"l\",\
 },\
 [0xA150]={\
  direction=\"l\",\
 },\
 [0xA151]={\
  direction=\"l\",\
 },\
 [0xA152]={\
  direction=\"l\",\
 },\
 [0xA153]={\
  direction=\"l\",\
 },\
 [0xA154]={\
  direction=\"l\",\
 },\
 [0xA155]={\
  direction=\"l\",\
 },\
 [0xA156]={\
  direction=\"l\",\
 },\
 [0xA157]={\
  direction=\"l\",\
 },\
 [0xA158]={\
  direction=\"l\",\
 },\
 [0xA159]={\
  direction=\"l\",\
 },\
 [0xA15A]={\
  direction=\"l\",\
 },\
 [0xA15B]={\
  direction=\"l\",\
 },\
 [0xA15C]={\
  direction=\"l\",\
 },\
 [0xA15D]={\
  direction=\"l\",\
 },\
 [0xA15E]={\
  direction=\"l\",\
 },\
 [0xA15F]={\
  direction=\"l\",\
 },\
 [0xA160]={\
  direction=\"l\",\
 },\
 [0xA161]={\
  direction=\"l\",\
 },\
 [0xA162]={\
  direction=\"l\",\
 },\
 [0xA163]={\
  direction=\"l\",\
 },\
 [0xA164]={\
  direction=\"l\",\
 },\
 [0xA165]={\
  direction=\"l\",\
 },\
 [0xA166]={\
  direction=\"l\",\
 },\
 [0xA167]={\
  direction=\"l\",\
 },\
 [0xA168]={\
  direction=\"l\",\
 },\
 [0xA169]={\
  direction=\"l\",\
 },\
 [0xA16A]={\
  direction=\"l\",\
 },\
 [0xA16B]={\
  direction=\"l\",\
 },\
 [0xA16C]={\
  direction=\"l\",\
 },\
 [0xA16D]={\
  direction=\"l\",\
 },\
 [0xA16E]={\
  direction=\"l\",\
 },\
 [0xA16F]={\
  direction=\"l\",\
 },\
 [0xA170]={\
  direction=\"l\",\
 },\
 [0xA171]={\
  direction=\"l\",\
 },\
 [0xA172]={\
  direction=\"l\",\
 },\
 [0xA173]={\
  direction=\"l\",\
 },\
 [0xA174]={\
  direction=\"l\",\
 },\
 [0xA175]={\
  direction=\"l\",\
 },\
 [0xA176]={\
  direction=\"l\",\
 },\
 [0xA177]={\
  direction=\"l\",\
 },\
 [0xA178]={\
  direction=\"l\",\
 },\
 [0xA179]={\
  direction=\"l\",\
 },\
 [0xA17A]={\
  direction=\"l\",\
 },\
 [0xA17B]={\
  direction=\"l\",\
 },\
 [0xA17C]={\
  direction=\"l\",\
 },\
 [0xA17D]={\
  direction=\"l\",\
 },\
 [0xA17E]={\
  direction=\"l\",\
 },\
 [0xA17F]={\
  direction=\"l\",\
 },\
 [0xA180]={\
  direction=\"l\",\
 },\
 [0xA181]={\
  direction=\"l\",\
 },\
 [0xA182]={\
  direction=\"l\",\
 },\
 [0xA183]={\
  direction=\"l\",\
 },\
 [0xA184]={\
  direction=\"l\",\
 },\
 [0xA185]={\
  direction=\"l\",\
 },\
 [0xA186]={\
  direction=\"l\",\
 },\
 [0xA187]={\
  direction=\"l\",\
 },\
 [0xA188]={\
  direction=\"l\",\
 },\
 [0xA189]={\
  direction=\"l\",\
 },\
 [0xA18A]={\
  direction=\"l\",\
 },\
 [0xA18B]={\
  direction=\"l\",\
 },\
 [0xA18C]={\
  direction=\"l\",\
 },\
 [0xA18D]={\
  direction=\"l\",\
 },\
 [0xA18E]={\
  direction=\"l\",\
 },\
 [0xA18F]={\
  direction=\"l\",\
 },\
 [0xA190]={\
  direction=\"l\",\
 },\
 [0xA191]={\
  direction=\"l\",\
 },\
 [0xA192]={\
  direction=\"l\",\
 },\
 [0xA193]={\
  direction=\"l\",\
 },\
 [0xA194]={\
  direction=\"l\",\
 },\
 [0xA195]={\
  direction=\"l\",\
 },\
 [0xA196]={\
  direction=\"l\",\
 },\
 [0xA197]={\
  direction=\"l\",\
 },\
 [0xA198]={\
  direction=\"l\",\
 },\
 [0xA199]={\
  direction=\"l\",\
 },\
 [0xA19A]={\
  direction=\"l\",\
 },\
 [0xA19B]={\
  direction=\"l\",\
 },\
 [0xA19C]={\
  direction=\"l\",\
 },\
 [0xA19D]={\
  direction=\"l\",\
 },\
 [0xA19E]={\
  direction=\"l\",\
 },\
 [0xA19F]={\
  direction=\"l\",\
 },\
 [0xA1A0]={\
  direction=\"l\",\
 },\
 [0xA1A1]={\
  direction=\"l\",\
 },\
 [0xA1A2]={\
  direction=\"l\",\
 },\
 [0xA1A3]={\
  direction=\"l\",\
 },\
 [0xA1A4]={\
  direction=\"l\",\
 },\
 [0xA1A5]={\
  direction=\"l\",\
 },\
 [0xA1A6]={\
  direction=\"l\",\
 },\
 [0xA1A7]={\
  direction=\"l\",\
 },\
 [0xA1A8]={\
  direction=\"l\",\
 },\
 [0xA1A9]={\
  direction=\"l\",\
 },\
 [0xA1AA]={\
  direction=\"l\",\
 },\
 [0xA1AB]={\
  direction=\"l\",\
 },\
 [0xA1AC]={\
  direction=\"l\",\
 },\
 [0xA1AD]={\
  direction=\"l\",\
 },\
 [0xA1AE]={\
  direction=\"l\",\
 },\
 [0xA1AF]={\
  direction=\"l\",\
 },\
 [0xA1B0]={\
  direction=\"l\",\
 },\
 [0xA1B1]={\
  direction=\"l\",\
 },\
 [0xA1B2]={\
  direction=\"l\",\
 },\
 [0xA1B3]={\
  direction=\"l\",\
 },\
 [0xA1B4]={\
  direction=\"l\",\
 },\
 [0xA1B5]={\
  direction=\"l\",\
 },\
 [0xA1B6]={\
  direction=\"l\",\
 },\
 [0xA1B7]={\
  direction=\"l\",\
 },\
 [0xA1B8]={\
  direction=\"l\",\
 },\
 [0xA1B9]={\
  direction=\"l\",\
 },\
 [0xA1BA]={\
  direction=\"l\",\
 },\
 [0xA1BB]={\
  direction=\"l\",\
 },\
 [0xA1BC]={\
  direction=\"l\",\
 },\
 [0xA1BD]={\
  direction=\"l\",\
 },\
 [0xA1BE]={\
  direction=\"l\",\
 },\
 [0xA1BF]={\
  direction=\"l\",\
 },\
 [0xA1C0]={\
  direction=\"l\",\
 },\
 [0xA1C1]={\
  direction=\"l\",\
 },\
 [0xA1C2]={\
  direction=\"l\",\
 },\
 [0xA1C3]={\
  direction=\"l\",\
 },\
 [0xA1C4]={\
  direction=\"l\",\
 },\
 [0xA1C5]={\
  direction=\"l\",\
 },\
 [0xA1C6]={\
  direction=\"l\",\
 },\
 [0xA1C7]={\
  direction=\"l\",\
 },\
 [0xA1C8]={\
  direction=\"l\",\
 },\
 [0xA1C9]={\
  direction=\"l\",\
 },\
 [0xA1CA]={\
  direction=\"l\",\
 },\
 [0xA1CB]={\
  direction=\"l\",\
 },\
 [0xA1CC]={\
  direction=\"l\",\
 },\
 [0xA1CD]={\
  direction=\"l\",\
 },\
 [0xA1CE]={\
  direction=\"l\",\
 },\
 [0xA1CF]={\
  direction=\"l\",\
 },\
 [0xA1D0]={\
  direction=\"l\",\
 },\
 [0xA1D1]={\
  direction=\"l\",\
 },\
 [0xA1D2]={\
  direction=\"l\",\
 },\
 [0xA1D3]={\
  direction=\"l\",\
 },\
 [0xA1D4]={\
  direction=\"l\",\
 },\
 [0xA1D5]={\
  direction=\"l\",\
 },\
 [0xA1D6]={\
  direction=\"l\",\
 },\
 [0xA1D7]={\
  direction=\"l\",\
 },\
 [0xA1D8]={\
  direction=\"l\",\
 },\
 [0xA1D9]={\
  direction=\"l\",\
 },\
 [0xA1DA]={\
  direction=\"l\",\
 },\
 [0xA1DB]={\
  direction=\"l\",\
 },\
 [0xA1DC]={\
  direction=\"l\",\
 },\
 [0xA1DD]={\
  direction=\"l\",\
 },\
 [0xA1DE]={\
  direction=\"l\",\
 },\
 [0xA1DF]={\
  direction=\"l\",\
 },\
 [0xA1E0]={\
  direction=\"l\",\
 },\
 [0xA1E1]={\
  direction=\"l\",\
 },\
 [0xA1E2]={\
  direction=\"l\",\
 },\
 [0xA1E3]={\
  direction=\"l\",\
 },\
 [0xA1E4]={\
  direction=\"l\",\
 },\
 [0xA1E5]={\
  direction=\"l\",\
 },\
 [0xA1E6]={\
  direction=\"l\",\
 },\
 [0xA1E7]={\
  direction=\"l\",\
 },\
 [0xA1E8]={\
  direction=\"l\",\
 },\
 [0xA1E9]={\
  direction=\"l\",\
 },\
 [0xA1EA]={\
  direction=\"l\",\
 },\
 [0xA1EB]={\
  direction=\"l\",\
 },\
 [0xA1EC]={\
  direction=\"l\",\
 },\
 [0xA1ED]={\
  direction=\"l\",\
 },\
 [0xA1EE]={\
  direction=\"l\",\
 },\
 [0xA1EF]={\
  direction=\"l\",\
 },\
 [0xA1F0]={\
  direction=\"l\",\
 },\
 [0xA1F1]={\
  direction=\"l\",\
 },\
 [0xA1F2]={\
  direction=\"l\",\
 },\
 [0xA1F3]={\
  direction=\"l\",\
 },\
 [0xA1F4]={\
  direction=\"l\",\
 },\
 [0xA1F5]={\
  direction=\"l\",\
 },\
 [0xA1F6]={\
  direction=\"l\",\
 },\
 [0xA1F7]={\
  direction=\"l\",\
 },\
 [0xA1F8]={\
  direction=\"l\",\
 },\
 [0xA1F9]={\
  direction=\"l\",\
 },\
 [0xA1FA]={\
  direction=\"l\",\
 },\
 [0xA1FB]={\
  direction=\"l\",\
 },\
 [0xA1FC]={\
  direction=\"l\",\
 },\
 [0xA1FD]={\
  direction=\"l\",\
 },\
 [0xA1FE]={\
  direction=\"l\",\
 },\
 [0xA1FF]={\
  direction=\"l\",\
 },\
 [0xA200]={\
  direction=\"l\",\
 },\
 [0xA201]={\
  direction=\"l\",\
 },\
 [0xA202]={\
  direction=\"l\",\
 },\
 [0xA203]={\
  direction=\"l\",\
 },\
 [0xA204]={\
  direction=\"l\",\
 },\
 [0xA205]={\
  direction=\"l\",\
 },\
 [0xA206]={\
  direction=\"l\",\
 },\
 [0xA207]={\
  direction=\"l\",\
 },\
 [0xA208]={\
  direction=\"l\",\
 },\
 [0xA209]={\
  direction=\"l\",\
 },\
 [0xA20A]={\
  direction=\"l\",\
 },\
 [0xA20B]={\
  direction=\"l\",\
 },\
 [0xA20C]={\
  direction=\"l\",\
 },\
 [0xA20D]={\
  direction=\"l\",\
 },\
 [0xA20E]={\
  direction=\"l\",\
 },\
 [0xA20F]={\
  direction=\"l\",\
 },\
 [0xA210]={\
  direction=\"l\",\
 },\
 [0xA211]={\
  direction=\"l\",\
 },\
 [0xA212]={\
  direction=\"l\",\
 },\
 [0xA213]={\
  direction=\"l\",\
 },\
 [0xA214]={\
  direction=\"l\",\
 },\
 [0xA215]={\
  direction=\"l\",\
 },\
 [0xA216]={\
  direction=\"l\",\
 },\
 [0xA217]={\
  direction=\"l\",\
 },\
 [0xA218]={\
  direction=\"l\",\
 },\
 [0xA219]={\
  direction=\"l\",\
 },\
 [0xA21A]={\
  direction=\"l\",\
 },\
 [0xA21B]={\
  direction=\"l\",\
 },\
 [0xA21C]={\
  direction=\"l\",\
 },\
 [0xA21D]={\
  direction=\"l\",\
 },\
 [0xA21E]={\
  direction=\"l\",\
 },\
 [0xA21F]={\
  direction=\"l\",\
 },\
 [0xA220]={\
  direction=\"l\",\
 },\
 [0xA221]={\
  direction=\"l\",\
 },\
 [0xA222]={\
  direction=\"l\",\
 },\
 [0xA223]={\
  direction=\"l\",\
 },\
 [0xA224]={\
  direction=\"l\",\
 },\
 [0xA225]={\
  direction=\"l\",\
 },\
 [0xA226]={\
  direction=\"l\",\
 },\
 [0xA227]={\
  direction=\"l\",\
 },\
 [0xA228]={\
  direction=\"l\",\
 },\
 [0xA229]={\
  direction=\"l\",\
 },\
 [0xA22A]={\
  direction=\"l\",\
 },\
 [0xA22B]={\
  direction=\"l\",\
 },\
 [0xA22C]={\
  direction=\"l\",\
 },\
 [0xA22D]={\
  direction=\"l\",\
 },\
 [0xA22E]={\
  direction=\"l\",\
 },\
 [0xA22F]={\
  direction=\"l\",\
 },\
 [0xA230]={\
  direction=\"l\",\
 },\
 [0xA231]={\
  direction=\"l\",\
 },\
 [0xA232]={\
  direction=\"l\",\
 },\
 [0xA233]={\
  direction=\"l\",\
 },\
 [0xA234]={\
  direction=\"l\",\
 },\
 [0xA235]={\
  direction=\"l\",\
 },\
 [0xA236]={\
  direction=\"l\",\
 },\
 [0xA237]={\
  direction=\"l\",\
 },\
 [0xA238]={\
  direction=\"l\",\
 },\
 [0xA239]={\
  direction=\"l\",\
 },\
 [0xA23A]={\
  direction=\"l\",\
 },\
 [0xA23B]={\
  direction=\"l\",\
 },\
 [0xA23C]={\
  direction=\"l\",\
 },\
 [0xA23D]={\
  direction=\"l\",\
 },\
 [0xA23E]={\
  direction=\"l\",\
 },\
 [0xA23F]={\
  direction=\"l\",\
 },\
 [0xA240]={\
  direction=\"l\",\
 },\
 [0xA241]={\
  direction=\"l\",\
 },\
 [0xA242]={\
  direction=\"l\",\
 },\
 [0xA243]={\
  direction=\"l\",\
 },\
 [0xA244]={\
  direction=\"l\",\
 },\
 [0xA245]={\
  direction=\"l\",\
 },\
 [0xA246]={\
  direction=\"l\",\
 },\
 [0xA247]={\
  direction=\"l\",\
 },\
 [0xA248]={\
  direction=\"l\",\
 },\
 [0xA249]={\
  direction=\"l\",\
 },\
 [0xA24A]={\
  direction=\"l\",\
 },\
 [0xA24B]={\
  direction=\"l\",\
 },\
 [0xA24C]={\
  direction=\"l\",\
 },\
 [0xA24D]={\
  direction=\"l\",\
 },\
 [0xA24E]={\
  direction=\"l\",\
 },\
 [0xA24F]={\
  direction=\"l\",\
 },\
 [0xA250]={\
  direction=\"l\",\
 },\
 [0xA251]={\
  direction=\"l\",\
 },\
 [0xA252]={\
  direction=\"l\",\
 },\
 [0xA253]={\
  direction=\"l\",\
 },\
 [0xA254]={\
  direction=\"l\",\
 },\
 [0xA255]={\
  direction=\"l\",\
 },\
 [0xA256]={\
  direction=\"l\",\
 },\
 [0xA257]={\
  direction=\"l\",\
 },\
 [0xA258]={\
  direction=\"l\",\
 },\
 [0xA259]={\
  direction=\"l\",\
 },\
 [0xA25A]={\
  direction=\"l\",\
 },\
 [0xA25B]={\
  direction=\"l\",\
 },\
 [0xA25C]={\
  direction=\"l\",\
 },\
 [0xA25D]={\
  direction=\"l\",\
 },\
 [0xA25E]={\
  direction=\"l\",\
 },\
 [0xA25F]={\
  direction=\"l\",\
 },\
 [0xA260]={\
  direction=\"l\",\
 },\
 [0xA261]={\
  direction=\"l\",\
 },\
 [0xA262]={\
  direction=\"l\",\
 },\
 [0xA263]={\
  direction=\"l\",\
 },\
 [0xA264]={\
  direction=\"l\",\
 },\
 [0xA265]={\
  direction=\"l\",\
 },\
 [0xA266]={\
  direction=\"l\",\
 },\
 [0xA267]={\
  direction=\"l\",\
 },\
 [0xA268]={\
  direction=\"l\",\
 },\
 [0xA269]={\
  direction=\"l\",\
 },\
 [0xA26A]={\
  direction=\"l\",\
 },\
 [0xA26B]={\
  direction=\"l\",\
 },\
 [0xA26C]={\
  direction=\"l\",\
 },\
 [0xA26D]={\
  direction=\"l\",\
 },\
 [0xA26E]={\
  direction=\"l\",\
 },\
 [0xA26F]={\
  direction=\"l\",\
 },\
 [0xA270]={\
  direction=\"l\",\
 },\
 [0xA271]={\
  direction=\"l\",\
 },\
 [0xA272]={\
  direction=\"l\",\
 },\
 [0xA273]={\
  direction=\"l\",\
 },\
 [0xA274]={\
  direction=\"l\",\
 },\
 [0xA275]={\
  direction=\"l\",\
 },\
 [0xA276]={\
  direction=\"l\",\
 },\
 [0xA277]={\
  direction=\"l\",\
 },\
 [0xA278]={\
  direction=\"l\",\
 },\
 [0xA279]={\
  direction=\"l\",\
 },\
 [0xA27A]={\
  direction=\"l\",\
 },\
 [0xA27B]={\
  direction=\"l\",\
 },\
 [0xA27C]={\
  direction=\"l\",\
 },\
 [0xA27D]={\
  direction=\"l\",\
 },\
 [0xA27E]={\
  direction=\"l\",\
 },\
 [0xA27F]={\
  direction=\"l\",\
 },\
 [0xA280]={\
  direction=\"l\",\
 },\
 [0xA281]={\
  direction=\"l\",\
 },\
 [0xA282]={\
  direction=\"l\",\
 },\
 [0xA283]={\
  direction=\"l\",\
 },\
 [0xA284]={\
  direction=\"l\",\
 },\
 [0xA285]={\
  direction=\"l\",\
 },\
 [0xA286]={\
  direction=\"l\",\
 },\
 [0xA287]={\
  direction=\"l\",\
 },\
 [0xA288]={\
  direction=\"l\",\
 },\
 [0xA289]={\
  direction=\"l\",\
 },\
 [0xA28A]={\
  direction=\"l\",\
 },\
 [0xA28B]={\
  direction=\"l\",\
 },\
 [0xA28C]={\
  direction=\"l\",\
 },\
 [0xA28D]={\
  direction=\"l\",\
 },\
 [0xA28E]={\
  direction=\"l\",\
 },\
 [0xA28F]={\
  direction=\"l\",\
 },\
 [0xA290]={\
  direction=\"l\",\
 },\
 [0xA291]={\
  direction=\"l\",\
 },\
 [0xA292]={\
  direction=\"l\",\
 },\
 [0xA293]={\
  direction=\"l\",\
 },\
 [0xA294]={\
  direction=\"l\",\
 },\
 [0xA295]={\
  direction=\"l\",\
 },\
 [0xA296]={\
  direction=\"l\",\
 },\
 [0xA297]={\
  direction=\"l\",\
 },\
 [0xA298]={\
  direction=\"l\",\
 },\
 [0xA299]={\
  direction=\"l\",\
 },\
 [0xA29A]={\
  direction=\"l\",\
 },\
 [0xA29B]={\
  direction=\"l\",\
 },\
 [0xA29C]={\
  direction=\"l\",\
 },\
 [0xA29D]={\
  direction=\"l\",\
 },\
 [0xA29E]={\
  direction=\"l\",\
 },\
 [0xA29F]={\
  direction=\"l\",\
 },\
 [0xA2A0]={\
  direction=\"l\",\
 },\
 [0xA2A1]={\
  direction=\"l\",\
 },\
 [0xA2A2]={\
  direction=\"l\",\
 },\
 [0xA2A3]={\
  direction=\"l\",\
 },\
 [0xA2A4]={\
  direction=\"l\",\
 },\
 [0xA2A5]={\
  direction=\"l\",\
 },\
 [0xA2A6]={\
  direction=\"l\",\
 },\
 [0xA2A7]={\
  direction=\"l\",\
 },\
 [0xA2A8]={\
  direction=\"l\",\
 },\
 [0xA2A9]={\
  direction=\"l\",\
 },\
 [0xA2AA]={\
  direction=\"l\",\
 },\
 [0xA2AB]={\
  direction=\"l\",\
 },\
 [0xA2AC]={\
  direction=\"l\",\
 },\
 [0xA2AD]={\
  direction=\"l\",\
 },\
 [0xA2AE]={\
  direction=\"l\",\
 },\
 [0xA2AF]={\
  direction=\"l\",\
 },\
 [0xA2B0]={\
  direction=\"l\",\
 },\
 [0xA2B1]={\
  direction=\"l\",\
 },\
 [0xA2B2]={\
  direction=\"l\",\
 },\
 [0xA2B3]={\
  direction=\"l\",\
 },\
 [0xA2B4]={\
  direction=\"l\",\
 },\
 [0xA2B5]={\
  direction=\"l\",\
 },\
 [0xA2B6]={\
  direction=\"l\",\
 },\
 [0xA2B7]={\
  direction=\"l\",\
 },\
 [0xA2B8]={\
  direction=\"l\",\
 },\
 [0xA2B9]={\
  direction=\"l\",\
 },\
 [0xA2BA]={\
  direction=\"l\",\
 },\
 [0xA2BB]={\
  direction=\"l\",\
 },\
 [0xA2BC]={\
  direction=\"l\",\
 },\
 [0xA2BD]={\
  direction=\"l\",\
 },\
 [0xA2BE]={\
  direction=\"l\",\
 },\
 [0xA2BF]={\
  direction=\"l\",\
 },\
 [0xA2C0]={\
  direction=\"l\",\
 },\
 [0xA2C1]={\
  direction=\"l\",\
 },\
 [0xA2C2]={\
  direction=\"l\",\
 },\
 [0xA2C3]={\
  direction=\"l\",\
 },\
 [0xA2C4]={\
  direction=\"l\",\
 },\
 [0xA2C5]={\
  direction=\"l\",\
 },\
 [0xA2C6]={\
  direction=\"l\",\
 },\
 [0xA2C7]={\
  direction=\"l\",\
 },\
 [0xA2C8]={\
  direction=\"l\",\
 },\
 [0xA2C9]={\
  direction=\"l\",\
 },\
 [0xA2CA]={\
  direction=\"l\",\
 },\
 [0xA2CB]={\
  direction=\"l\",\
 },\
 [0xA2CC]={\
  direction=\"l\",\
 },\
 [0xA2CD]={\
  direction=\"l\",\
 },\
 [0xA2CE]={\
  direction=\"l\",\
 },\
 [0xA2CF]={\
  direction=\"l\",\
 },\
 [0xA2D0]={\
  direction=\"l\",\
 },\
 [0xA2D1]={\
  direction=\"l\",\
 },\
 [0xA2D2]={\
  direction=\"l\",\
 },\
 [0xA2D3]={\
  direction=\"l\",\
 },\
 [0xA2D4]={\
  direction=\"l\",\
 },\
 [0xA2D5]={\
  direction=\"l\",\
 },\
 [0xA2D6]={\
  direction=\"l\",\
 },\
 [0xA2D7]={\
  direction=\"l\",\
 },\
 [0xA2D8]={\
  direction=\"l\",\
 },\
 [0xA2D9]={\
  direction=\"l\",\
 },\
 [0xA2DA]={\
  direction=\"l\",\
 },\
 [0xA2DB]={\
  direction=\"l\",\
 },\
 [0xA2DC]={\
  direction=\"l\",\
 },\
 [0xA2DD]={\
  direction=\"l\",\
 },\
 [0xA2DE]={\
  direction=\"l\",\
 },\
 [0xA2DF]={\
  direction=\"l\",\
 },\
 [0xA2E0]={\
  direction=\"l\",\
 },\
 [0xA2E1]={\
  direction=\"l\",\
 },\
 [0xA2E2]={\
  direction=\"l\",\
 },\
 [0xA2E3]={\
  direction=\"l\",\
 },\
 [0xA2E4]={\
  direction=\"l\",\
 },\
 [0xA2E5]={\
  direction=\"l\",\
 },\
 [0xA2E6]={\
  direction=\"l\",\
 },\
 [0xA2E7]={\
  direction=\"l\",\
 },\
 [0xA2E8]={\
  direction=\"l\",\
 },\
 [0xA2E9]={\
  direction=\"l\",\
 },\
 [0xA2EA]={\
  direction=\"l\",\
 },\
 [0xA2EB]={\
  direction=\"l\",\
 },\
 [0xA2EC]={\
  direction=\"l\",\
 },\
 [0xA2ED]={\
  direction=\"l\",\
 },\
 [0xA2EE]={\
  direction=\"l\",\
 },\
 [0xA2EF]={\
  direction=\"l\",\
 },\
 [0xA2F0]={\
  direction=\"l\",\
 },\
 [0xA2F1]={\
  direction=\"l\",\
 },\
 [0xA2F2]={\
  direction=\"l\",\
 },\
 [0xA2F3]={\
  direction=\"l\",\
 },\
 [0xA2F4]={\
  direction=\"l\",\
 },\
 [0xA2F5]={\
  direction=\"l\",\
 },\
 [0xA2F6]={\
  direction=\"l\",\
 },\
 [0xA2F7]={\
  direction=\"l\",\
 },\
 [0xA2F8]={\
  direction=\"l\",\
 },\
 [0xA2F9]={\
  direction=\"l\",\
 },\
 [0xA2FA]={\
  direction=\"l\",\
 },\
 [0xA2FB]={\
  direction=\"l\",\
 },\
 [0xA2FC]={\
  direction=\"l\",\
 },\
 [0xA2FD]={\
  direction=\"l\",\
 },\
 [0xA2FE]={\
  direction=\"l\",\
 },\
 [0xA2FF]={\
  direction=\"l\",\
 },\
 [0xA300]={\
  direction=\"l\",\
 },\
 [0xA301]={\
  direction=\"l\",\
 },\
 [0xA302]={\
  direction=\"l\",\
 },\
 [0xA303]={\
  direction=\"l\",\
 },\
 [0xA304]={\
  direction=\"l\",\
 },\
 [0xA305]={\
  direction=\"l\",\
 },\
 [0xA306]={\
  direction=\"l\",\
 },\
 [0xA307]={\
  direction=\"l\",\
 },\
 [0xA308]={\
  direction=\"l\",\
 },\
 [0xA309]={\
  direction=\"l\",\
 },\
 [0xA30A]={\
  direction=\"l\",\
 },\
 [0xA30B]={\
  direction=\"l\",\
 },\
 [0xA30C]={\
  direction=\"l\",\
 },\
 [0xA30D]={\
  direction=\"l\",\
 },\
 [0xA30E]={\
  direction=\"l\",\
 },\
 [0xA30F]={\
  direction=\"l\",\
 },\
 [0xA310]={\
  direction=\"l\",\
 },\
 [0xA311]={\
  direction=\"l\",\
 },\
 [0xA312]={\
  direction=\"l\",\
 },\
 [0xA313]={\
  direction=\"l\",\
 },\
 [0xA314]={\
  direction=\"l\",\
 },\
 [0xA315]={\
  direction=\"l\",\
 },\
 [0xA316]={\
  direction=\"l\",\
 },\
 [0xA317]={\
  direction=\"l\",\
 },\
 [0xA318]={\
  direction=\"l\",\
 },\
 [0xA319]={\
  direction=\"l\",\
 },\
 [0xA31A]={\
  direction=\"l\",\
 },\
 [0xA31B]={\
  direction=\"l\",\
 },\
 [0xA31C]={\
  direction=\"l\",\
 },\
 [0xA31D]={\
  direction=\"l\",\
 },\
 [0xA31E]={\
  direction=\"l\",\
 },\
 [0xA31F]={\
  direction=\"l\",\
 },\
 [0xA320]={\
  direction=\"l\",\
 },\
 [0xA321]={\
  direction=\"l\",\
 },\
 [0xA322]={\
  direction=\"l\",\
 },\
 [0xA323]={\
  direction=\"l\",\
 },\
 [0xA324]={\
  direction=\"l\",\
 },\
 [0xA325]={\
  direction=\"l\",\
 },\
 [0xA326]={\
  direction=\"l\",\
 },\
 [0xA327]={\
  direction=\"l\",\
 },\
 [0xA328]={\
  direction=\"l\",\
 },\
 [0xA329]={\
  direction=\"l\",\
 },\
 [0xA32A]={\
  direction=\"l\",\
 },\
 [0xA32B]={\
  direction=\"l\",\
 },\
 [0xA32C]={\
  direction=\"l\",\
 },\
 [0xA32D]={\
  direction=\"l\",\
 },\
 [0xA32E]={\
  direction=\"l\",\
 },\
 [0xA32F]={\
  direction=\"l\",\
 },\
 [0xA330]={\
  direction=\"l\",\
 },\
 [0xA331]={\
  direction=\"l\",\
 },\
 [0xA332]={\
  direction=\"l\",\
 },\
 [0xA333]={\
  direction=\"l\",\
 },\
 [0xA334]={\
  direction=\"l\",\
 },\
 [0xA335]={\
  direction=\"l\",\
 },\
 [0xA336]={\
  direction=\"l\",\
 },\
 [0xA337]={\
  direction=\"l\",\
 },\
 [0xA338]={\
  direction=\"l\",\
 },\
 [0xA339]={\
  direction=\"l\",\
 },\
 [0xA33A]={\
  direction=\"l\",\
 },\
 [0xA33B]={\
  direction=\"l\",\
 },\
 [0xA33C]={\
  direction=\"l\",\
 },\
 [0xA33D]={\
  direction=\"l\",\
 },\
 [0xA33E]={\
  direction=\"l\",\
 },\
 [0xA33F]={\
  direction=\"l\",\
 },\
 [0xA340]={\
  direction=\"l\",\
 },\
 [0xA341]={\
  direction=\"l\",\
 },\
 [0xA342]={\
  direction=\"l\",\
 },\
 [0xA343]={\
  direction=\"l\",\
 },\
 [0xA344]={\
  direction=\"l\",\
 },\
 [0xA345]={\
  direction=\"l\",\
 },\
 [0xA346]={\
  direction=\"l\",\
 },\
 [0xA347]={\
  direction=\"l\",\
 },\
 [0xA348]={\
  direction=\"l\",\
 },\
 [0xA349]={\
  direction=\"l\",\
 },\
 [0xA34A]={\
  direction=\"l\",\
 },\
 [0xA34B]={\
  direction=\"l\",\
 },\
 [0xA34C]={\
  direction=\"l\",\
 },\
 [0xA34D]={\
  direction=\"l\",\
 },\
 [0xA34E]={\
  direction=\"l\",\
 },\
 [0xA34F]={\
  direction=\"l\",\
 },\
 [0xA350]={\
  direction=\"l\",\
 },\
 [0xA351]={\
  direction=\"l\",\
 },\
 [0xA352]={\
  direction=\"l\",\
 },\
 [0xA353]={\
  direction=\"l\",\
 },\
 [0xA354]={\
  direction=\"l\",\
 },\
 [0xA355]={\
  direction=\"l\",\
 },\
 [0xA356]={\
  direction=\"l\",\
 },\
 [0xA357]={\
  direction=\"l\",\
 },\
 [0xA358]={\
  direction=\"l\",\
 },\
 [0xA359]={\
  direction=\"l\",\
 },\
 [0xA35A]={\
  direction=\"l\",\
 },\
 [0xA35B]={\
  direction=\"l\",\
 },\
 [0xA35C]={\
  direction=\"l\",\
 },\
 [0xA35D]={\
  direction=\"l\",\
 },\
 [0xA35E]={\
  direction=\"l\",\
 },\
 [0xA35F]={\
  direction=\"l\",\
 },\
 [0xA360]={\
  direction=\"l\",\
 },\
 [0xA361]={\
  direction=\"l\",\
 },\
 [0xA362]={\
  direction=\"l\",\
 },\
 [0xA363]={\
  direction=\"l\",\
 },\
 [0xA364]={\
  direction=\"l\",\
 },\
 [0xA365]={\
  direction=\"l\",\
 },\
 [0xA366]={\
  direction=\"l\",\
 },\
 [0xA367]={\
  direction=\"l\",\
 },\
 [0xA368]={\
  direction=\"l\",\
 },\
 [0xA369]={\
  direction=\"l\",\
 },\
 [0xA36A]={\
  direction=\"l\",\
 },\
 [0xA36B]={\
  direction=\"l\",\
 },\
 [0xA36C]={\
  direction=\"l\",\
 },\
 [0xA36D]={\
  direction=\"l\",\
 },\
 [0xA36E]={\
  direction=\"l\",\
 },\
 [0xA36F]={\
  direction=\"l\",\
 },\
 [0xA370]={\
  direction=\"l\",\
 },\
 [0xA371]={\
  direction=\"l\",\
 },\
 [0xA372]={\
  direction=\"l\",\
 },\
 [0xA373]={\
  direction=\"l\",\
 },\
 [0xA374]={\
  direction=\"l\",\
 },\
 [0xA375]={\
  direction=\"l\",\
 },\
 [0xA376]={\
  direction=\"l\",\
 },\
 [0xA377]={\
  direction=\"l\",\
 },\
 [0xA378]={\
  direction=\"l\",\
 },\
 [0xA379]={\
  direction=\"l\",\
 },\
 [0xA37A]={\
  direction=\"l\",\
 },\
 [0xA37B]={\
  direction=\"l\",\
 },\
 [0xA37C]={\
  direction=\"l\",\
 },\
 [0xA37D]={\
  direction=\"l\",\
 },\
 [0xA37E]={\
  direction=\"l\",\
 },\
 [0xA37F]={\
  direction=\"l\",\
 },\
 [0xA380]={\
  direction=\"l\",\
 },\
 [0xA381]={\
  direction=\"l\",\
 },\
 [0xA382]={\
  direction=\"l\",\
 },\
 [0xA383]={\
  direction=\"l\",\
 },\
 [0xA384]={\
  direction=\"l\",\
 },\
 [0xA385]={\
  direction=\"l\",\
 },\
 [0xA386]={\
  direction=\"l\",\
 },\
 [0xA387]={\
  direction=\"l\",\
 },\
 [0xA388]={\
  direction=\"l\",\
 },\
 [0xA389]={\
  direction=\"l\",\
 },\
 [0xA38A]={\
  direction=\"l\",\
 },\
 [0xA38B]={\
  direction=\"l\",\
 },\
 [0xA38C]={\
  direction=\"l\",\
 },\
 [0xA38D]={\
  direction=\"l\",\
 },\
 [0xA38E]={\
  direction=\"l\",\
 },\
 [0xA38F]={\
  direction=\"l\",\
 },\
 [0xA390]={\
  direction=\"l\",\
 },\
 [0xA391]={\
  direction=\"l\",\
 },\
 [0xA392]={\
  direction=\"l\",\
 },\
 [0xA393]={\
  direction=\"l\",\
 },\
 [0xA394]={\
  direction=\"l\",\
 },\
 [0xA395]={\
  direction=\"l\",\
 },\
 [0xA396]={\
  direction=\"l\",\
 },\
 [0xA397]={\
  direction=\"l\",\
 },\
 [0xA398]={\
  direction=\"l\",\
 },\
 [0xA399]={\
  direction=\"l\",\
 },\
 [0xA39A]={\
  direction=\"l\",\
 },\
 [0xA39B]={\
  direction=\"l\",\
 },\
 [0xA39C]={\
  direction=\"l\",\
 },\
 [0xA39D]={\
  direction=\"l\",\
 },\
 [0xA39E]={\
  direction=\"l\",\
 },\
 [0xA39F]={\
  direction=\"l\",\
 },\
 [0xA3A0]={\
  direction=\"l\",\
 },\
 [0xA3A1]={\
  direction=\"l\",\
 },\
 [0xA3A2]={\
  direction=\"l\",\
 },\
 [0xA3A3]={\
  direction=\"l\",\
 },\
 [0xA3A4]={\
  direction=\"l\",\
 },\
 [0xA3A5]={\
  direction=\"l\",\
 },\
 [0xA3A6]={\
  direction=\"l\",\
 },\
 [0xA3A7]={\
  direction=\"l\",\
 },\
 [0xA3A8]={\
  direction=\"l\",\
 },\
 [0xA3A9]={\
  direction=\"l\",\
 },\
 [0xA3AA]={\
  direction=\"l\",\
 },\
 [0xA3AB]={\
  direction=\"l\",\
 },\
 [0xA3AC]={\
  direction=\"l\",\
 },\
 [0xA3AD]={\
  direction=\"l\",\
 },\
 [0xA3AE]={\
  direction=\"l\",\
 },\
 [0xA3AF]={\
  direction=\"l\",\
 },\
 [0xA3B0]={\
  direction=\"l\",\
 },\
 [0xA3B1]={\
  direction=\"l\",\
 },\
 [0xA3B2]={\
  direction=\"l\",\
 },\
 [0xA3B3]={\
  direction=\"l\",\
 },\
 [0xA3B4]={\
  direction=\"l\",\
 },\
 [0xA3B5]={\
  direction=\"l\",\
 },\
 [0xA3B6]={\
  direction=\"l\",\
 },\
 [0xA3B7]={\
  direction=\"l\",\
 },\
 [0xA3B8]={\
  direction=\"l\",\
 },\
 [0xA3B9]={\
  direction=\"l\",\
 },\
 [0xA3BA]={\
  direction=\"l\",\
 },\
 [0xA3BB]={\
  direction=\"l\",\
 },\
 [0xA3BC]={\
  direction=\"l\",\
 },\
 [0xA3BD]={\
  direction=\"l\",\
 },\
 [0xA3BE]={\
  direction=\"l\",\
 },\
 [0xA3BF]={\
  direction=\"l\",\
 },\
 [0xA3C0]={\
  direction=\"l\",\
 },\
 [0xA3C1]={\
  direction=\"l\",\
 },\
 [0xA3C2]={\
  direction=\"l\",\
 },\
 [0xA3C3]={\
  direction=\"l\",\
 },\
 [0xA3C4]={\
  direction=\"l\",\
 },\
 [0xA3C5]={\
  direction=\"l\",\
 },\
 [0xA3C6]={\
  direction=\"l\",\
 },\
 [0xA3C7]={\
  direction=\"l\",\
 },\
 [0xA3C8]={\
  direction=\"l\",\
 },\
 [0xA3C9]={\
  direction=\"l\",\
 },\
 [0xA3CA]={\
  direction=\"l\",\
 },\
 [0xA3CB]={\
  direction=\"l\",\
 },\
 [0xA3CC]={\
  direction=\"l\",\
 },\
 [0xA3CD]={\
  direction=\"l\",\
 },\
 [0xA3CE]={\
  direction=\"l\",\
 },\
 [0xA3CF]={\
  direction=\"l\",\
 },\
 [0xA3D0]={\
  direction=\"l\",\
 },\
 [0xA3D1]={\
  direction=\"l\",\
 },\
 [0xA3D2]={\
  direction=\"l\",\
 },\
 [0xA3D3]={\
  direction=\"l\",\
 },\
 [0xA3D4]={\
  direction=\"l\",\
 },\
 [0xA3D5]={\
  direction=\"l\",\
 },\
 [0xA3D6]={\
  direction=\"l\",\
 },\
 [0xA3D7]={\
  direction=\"l\",\
 },\
 [0xA3D8]={\
  direction=\"l\",\
 },\
 [0xA3D9]={\
  direction=\"l\",\
 },\
 [0xA3DA]={\
  direction=\"l\",\
 },\
 [0xA3DB]={\
  direction=\"l\",\
 },\
 [0xA3DC]={\
  direction=\"l\",\
 },\
 [0xA3DD]={\
  direction=\"l\",\
 },\
 [0xA3DE]={\
  direction=\"l\",\
 },\
 [0xA3DF]={\
  direction=\"l\",\
 },\
 [0xA3E0]={\
  direction=\"l\",\
 },\
 [0xA3E1]={\
  direction=\"l\",\
 },\
 [0xA3E2]={\
  direction=\"l\",\
 },\
 [0xA3E3]={\
  direction=\"l\",\
 },\
 [0xA3E4]={\
  direction=\"l\",\
 },\
 [0xA3E5]={\
  direction=\"l\",\
 },\
 [0xA3E6]={\
  direction=\"l\",\
 },\
 [0xA3E7]={\
  direction=\"l\",\
 },\
 [0xA3E8]={\
  direction=\"l\",\
 },\
 [0xA3E9]={\
  direction=\"l\",\
 },\
 [0xA3EA]={\
  direction=\"l\",\
 },\
 [0xA3EB]={\
  direction=\"l\",\
 },\
 [0xA3EC]={\
  direction=\"l\",\
 },\
 [0xA3ED]={\
  direction=\"l\",\
 },\
 [0xA3EE]={\
  direction=\"l\",\
 },\
 [0xA3EF]={\
  direction=\"l\",\
 },\
 [0xA3F0]={\
  direction=\"l\",\
 },\
 [0xA3F1]={\
  direction=\"l\",\
 },\
 [0xA3F2]={\
  direction=\"l\",\
 },\
 [0xA3F3]={\
  direction=\"l\",\
 },\
 [0xA3F4]={\
  direction=\"l\",\
 },\
 [0xA3F5]={\
  direction=\"l\",\
 },\
 [0xA3F6]={\
  direction=\"l\",\
 },\
 [0xA3F7]={\
  direction=\"l\",\
 },\
 [0xA3F8]={\
  direction=\"l\",\
 },\
 [0xA3F9]={\
  direction=\"l\",\
 },\
 [0xA3FA]={\
  direction=\"l\",\
 },\
 [0xA3FB]={\
  direction=\"l\",\
 },\
 [0xA3FC]={\
  direction=\"l\",\
 },\
 [0xA3FD]={\
  direction=\"l\",\
 },\
 [0xA3FE]={\
  direction=\"l\",\
 },\
 [0xA3FF]={\
  direction=\"l\",\
 },\
 [0xA400]={\
  direction=\"l\",\
 },\
 [0xA401]={\
  direction=\"l\",\
 },\
 [0xA402]={\
  direction=\"l\",\
 },\
 [0xA403]={\
  direction=\"l\",\
 },\
 [0xA404]={\
  direction=\"l\",\
 },\
 [0xA405]={\
  direction=\"l\",\
 },\
 [0xA406]={\
  direction=\"l\",\
 },\
 [0xA407]={\
  direction=\"l\",\
 },\
 [0xA408]={\
  direction=\"l\",\
 },\
 [0xA409]={\
  direction=\"l\",\
 },\
 [0xA40A]={\
  direction=\"l\",\
 },\
 [0xA40B]={\
  direction=\"l\",\
 },\
 [0xA40C]={\
  direction=\"l\",\
 },\
 [0xA40D]={\
  direction=\"l\",\
 },\
 [0xA40E]={\
  direction=\"l\",\
 },\
 [0xA40F]={\
  direction=\"l\",\
 },\
 [0xA410]={\
  direction=\"l\",\
 },\
 [0xA411]={\
  direction=\"l\",\
 },\
 [0xA412]={\
  direction=\"l\",\
 },\
 [0xA413]={\
  direction=\"l\",\
 },\
 [0xA414]={\
  direction=\"l\",\
 },\
 [0xA415]={\
  direction=\"l\",\
 },\
 [0xA416]={\
  direction=\"l\",\
 },\
 [0xA417]={\
  direction=\"l\",\
 },\
 [0xA418]={\
  direction=\"l\",\
 },\
 [0xA419]={\
  direction=\"l\",\
 },\
 [0xA41A]={\
  direction=\"l\",\
 },\
 [0xA41B]={\
  direction=\"l\",\
 },\
 [0xA41C]={\
  direction=\"l\",\
 },\
 [0xA41D]={\
  direction=\"l\",\
 },\
 [0xA41E]={\
  direction=\"l\",\
 },\
 [0xA41F]={\
  direction=\"l\",\
 },\
 [0xA420]={\
  direction=\"l\",\
 },\
 [0xA421]={\
  direction=\"l\",\
 },\
 [0xA422]={\
  direction=\"l\",\
 },\
 [0xA423]={\
  direction=\"l\",\
 },\
 [0xA424]={\
  direction=\"l\",\
 },\
 [0xA425]={\
  direction=\"l\",\
 },\
 [0xA426]={\
  direction=\"l\",\
 },\
 [0xA427]={\
  direction=\"l\",\
 },\
 [0xA428]={\
  direction=\"l\",\
 },\
 [0xA429]={\
  direction=\"l\",\
 },\
 [0xA42A]={\
  direction=\"l\",\
 },\
 [0xA42B]={\
  direction=\"l\",\
 },\
 [0xA42C]={\
  direction=\"l\",\
 },\
 [0xA42D]={\
  direction=\"l\",\
 },\
 [0xA42E]={\
  direction=\"l\",\
 },\
 [0xA42F]={\
  direction=\"l\",\
 },\
 [0xA430]={\
  direction=\"l\",\
 },\
 [0xA431]={\
  direction=\"l\",\
 },\
 [0xA432]={\
  direction=\"l\",\
 },\
 [0xA433]={\
  direction=\"l\",\
 },\
 [0xA434]={\
  direction=\"l\",\
 },\
 [0xA435]={\
  direction=\"l\",\
 },\
 [0xA436]={\
  direction=\"l\",\
 },\
 [0xA437]={\
  direction=\"l\",\
 },\
 [0xA438]={\
  direction=\"l\",\
 },\
 [0xA439]={\
  direction=\"l\",\
 },\
 [0xA43A]={\
  direction=\"l\",\
 },\
 [0xA43B]={\
  direction=\"l\",\
 },\
 [0xA43C]={\
  direction=\"l\",\
 },\
 [0xA43D]={\
  direction=\"l\",\
 },\
 [0xA43E]={\
  direction=\"l\",\
 },\
 [0xA43F]={\
  direction=\"l\",\
 },\
 [0xA440]={\
  direction=\"l\",\
 },\
 [0xA441]={\
  direction=\"l\",\
 },\
 [0xA442]={\
  direction=\"l\",\
 },\
 [0xA443]={\
  direction=\"l\",\
 },\
 [0xA444]={\
  direction=\"l\",\
 },\
 [0xA445]={\
  direction=\"l\",\
 },\
 [0xA446]={\
  direction=\"l\",\
 },\
 [0xA447]={\
  direction=\"l\",\
 },\
 [0xA448]={\
  direction=\"l\",\
 },\
 [0xA449]={\
  direction=\"l\",\
 },\
 [0xA44A]={\
  direction=\"l\",\
 },\
 [0xA44B]={\
  direction=\"l\",\
 },\
 [0xA44C]={\
  direction=\"l\",\
 },\
 [0xA44D]={\
  direction=\"l\",\
 },\
 [0xA44E]={\
  direction=\"l\",\
 },\
 [0xA44F]={\
  direction=\"l\",\
 },\
 [0xA450]={\
  direction=\"l\",\
 },\
 [0xA451]={\
  direction=\"l\",\
 },\
 [0xA452]={\
  direction=\"l\",\
 },\
 [0xA453]={\
  direction=\"l\",\
 },\
 [0xA454]={\
  direction=\"l\",\
 },\
 [0xA455]={\
  direction=\"l\",\
 },\
 [0xA456]={\
  direction=\"l\",\
 },\
 [0xA457]={\
  direction=\"l\",\
 },\
 [0xA458]={\
  direction=\"l\",\
 },\
 [0xA459]={\
  direction=\"l\",\
 },\
 [0xA45A]={\
  direction=\"l\",\
 },\
 [0xA45B]={\
  direction=\"l\",\
 },\
 [0xA45C]={\
  direction=\"l\",\
 },\
 [0xA45D]={\
  direction=\"l\",\
 },\
 [0xA45E]={\
  direction=\"l\",\
 },\
 [0xA45F]={\
  direction=\"l\",\
 },\
 [0xA460]={\
  direction=\"l\",\
 },\
 [0xA461]={\
  direction=\"l\",\
 },\
 [0xA462]={\
  direction=\"l\",\
 },\
 [0xA463]={\
  direction=\"l\",\
 },\
 [0xA464]={\
  direction=\"l\",\
 },\
 [0xA465]={\
  direction=\"l\",\
 },\
 [0xA466]={\
  direction=\"l\",\
 },\
 [0xA467]={\
  direction=\"l\",\
 },\
 [0xA468]={\
  direction=\"l\",\
 },\
 [0xA469]={\
  direction=\"l\",\
 },\
 [0xA46A]={\
  direction=\"l\",\
 },\
 [0xA46B]={\
  direction=\"l\",\
 },\
 [0xA46C]={\
  direction=\"l\",\
 },\
 [0xA46D]={\
  direction=\"l\",\
 },\
 [0xA46E]={\
  direction=\"l\",\
 },\
 [0xA46F]={\
  direction=\"l\",\
 },\
 [0xA470]={\
  direction=\"l\",\
 },\
 [0xA471]={\
  direction=\"l\",\
 },\
 [0xA472]={\
  direction=\"l\",\
 },\
 [0xA473]={\
  direction=\"l\",\
 },\
 [0xA474]={\
  direction=\"l\",\
 },\
 [0xA475]={\
  direction=\"l\",\
 },\
 [0xA476]={\
  direction=\"l\",\
 },\
 [0xA477]={\
  direction=\"l\",\
 },\
 [0xA478]={\
  direction=\"l\",\
 },\
 [0xA479]={\
  direction=\"l\",\
 },\
 [0xA47A]={\
  direction=\"l\",\
 },\
 [0xA47B]={\
  direction=\"l\",\
 },\
 [0xA47C]={\
  direction=\"l\",\
 },\
 [0xA47D]={\
  direction=\"l\",\
 },\
 [0xA47E]={\
  direction=\"l\",\
 },\
 [0xA47F]={\
  direction=\"l\",\
 },\
 [0xA480]={\
  direction=\"l\",\
 },\
 [0xA481]={\
  direction=\"l\",\
 },\
 [0xA482]={\
  direction=\"l\",\
 },\
 [0xA483]={\
  direction=\"l\",\
 },\
 [0xA484]={\
  direction=\"l\",\
 },\
 [0xA485]={\
  direction=\"l\",\
 },\
 [0xA486]={\
  direction=\"l\",\
 },\
 [0xA487]={\
  direction=\"l\",\
 },\
 [0xA488]={\
  direction=\"l\",\
 },\
 [0xA489]={\
  direction=\"l\",\
 },\
 [0xA48A]={\
  direction=\"l\",\
 },\
 [0xA48B]={\
  direction=\"l\",\
 },\
 [0xA48C]={\
  direction=\"l\",\
 },\
 [0xA490]={\
  direction=\"on\",\
 },\
 [0xA491]={\
  direction=\"on\",\
 },\
 [0xA492]={\
  direction=\"on\",\
 },\
 [0xA493]={\
  direction=\"on\",\
 },\
 [0xA494]={\
  direction=\"on\",\
 },\
 [0xA495]={\
  direction=\"on\",\
 },\
 [0xA496]={\
  direction=\"on\",\
 },\
 [0xA497]={\
  direction=\"on\",\
 },\
 [0xA498]={\
  direction=\"on\",\
 },\
 [0xA499]={\
  direction=\"on\",\
 },\
 [0xA49A]={\
  direction=\"on\",\
 },\
 [0xA49B]={\
  direction=\"on\",\
 },\
 [0xA49C]={\
  direction=\"on\",\
 },\
 [0xA49D]={\
  direction=\"on\",\
 },\
 [0xA49E]={\
  direction=\"on\",\
 },\
 [0xA49F]={\
  direction=\"on\",\
 },\
 [0xA4A0]={\
  direction=\"on\",\
 },\
 [0xA4A1]={\
  direction=\"on\",\
 },\
 [0xA4A2]={\
  direction=\"on\",\
 },\
 [0xA4A3]={\
  direction=\"on\",\
 },\
 [0xA4A4]={\
  direction=\"on\",\
 },\
 [0xA4A5]={\
  direction=\"on\",\
 },\
 [0xA4A6]={\
  direction=\"on\",\
 },\
 [0xA4A7]={\
  direction=\"on\",\
 },\
 [0xA4A8]={\
  direction=\"on\",\
 },\
 [0xA4A9]={\
  direction=\"on\",\
 },\
 [0xA4AA]={\
  direction=\"on\",\
 },\
 [0xA4AB]={\
  direction=\"on\",\
 },\
 [0xA4AC]={\
  direction=\"on\",\
 },\
 [0xA4AD]={\
  direction=\"on\",\
 },\
 [0xA4AE]={\
  direction=\"on\",\
 },\
 [0xA4AF]={\
  direction=\"on\",\
 },\
 [0xA4B0]={\
  direction=\"on\",\
 },\
 [0xA4B1]={\
  direction=\"on\",\
 },\
 [0xA4B2]={\
  direction=\"on\",\
 },\
 [0xA4B3]={\
  direction=\"on\",\
 },\
 [0xA4B4]={\
  direction=\"on\",\
 },\
 [0xA4B5]={\
  direction=\"on\",\
 },\
 [0xA4B6]={\
  direction=\"on\",\
 },\
 [0xA4B7]={\
  direction=\"on\",\
 },\
 [0xA4B8]={\
  direction=\"on\",\
 },\
 [0xA4B9]={\
  direction=\"on\",\
 },\
 [0xA4BA]={\
  direction=\"on\",\
 },\
 [0xA4BB]={\
  direction=\"on\",\
 },\
 [0xA4BC]={\
  direction=\"on\",\
 },\
 [0xA4BD]={\
  direction=\"on\",\
 },\
 [0xA4BE]={\
  direction=\"on\",\
 },\
 [0xA4BF]={\
  direction=\"on\",\
 },\
 [0xA4C0]={\
  direction=\"on\",\
 },\
 [0xA4C1]={\
  direction=\"on\",\
 },\
 [0xA4C2]={\
  direction=\"on\",\
 },\
 [0xA4C3]={\
  direction=\"on\",\
 },\
 [0xA4C4]={\
  direction=\"on\",\
 },\
 [0xA4C5]={\
  direction=\"on\",\
 },\
 [0xA4C6]={\
  direction=\"on\",\
 },\
 [0xA4D0]={\
  direction=\"l\",\
 },\
 [0xA4D1]={\
  direction=\"l\",\
 },\
 [0xA4D2]={\
  direction=\"l\",\
 },\
 [0xA4D3]={\
  direction=\"l\",\
 },\
 [0xA4D4]={\
  direction=\"l\",\
 },\
 [0xA4D5]={\
  direction=\"l\",\
 },\
 [0xA4D6]={\
  direction=\"l\",\
 },\
 [0xA4D7]={\
  direction=\"l\",\
 },\
 [0xA4D8]={\
  direction=\"l\",\
 },\
 [0xA4D9]={\
  direction=\"l\",\
 },\
 [0xA4DA]={\
  direction=\"l\",\
 },\
 [0xA4DB]={\
  direction=\"l\",\
 },\
 [0xA4DC]={\
  direction=\"l\",\
 },\
 [0xA4DD]={\
  direction=\"l\",\
 },\
 [0xA4DE]={\
  direction=\"l\",\
 },\
 [0xA4DF]={\
  direction=\"l\",\
 },\
 [0xA4E0]={\
  direction=\"l\",\
 },\
 [0xA4E1]={\
  direction=\"l\",\
 },\
 [0xA4E2]={\
  direction=\"l\",\
 },\
 [0xA4E3]={\
  direction=\"l\",\
 },\
 [0xA4E4]={\
  direction=\"l\",\
 },\
 [0xA4E5]={\
  direction=\"l\",\
 },\
 [0xA4E6]={\
  direction=\"l\",\
 },\
 [0xA4E7]={\
  direction=\"l\",\
 },\
 [0xA4E8]={\
  direction=\"l\",\
 },\
 [0xA4E9]={\
  direction=\"l\",\
 },\
 [0xA4EA]={\
  direction=\"l\",\
 },\
 [0xA4EB]={\
  direction=\"l\",\
 },\
 [0xA4EC]={\
  direction=\"l\",\
 },\
 [0xA4ED]={\
  direction=\"l\",\
 },\
 [0xA4EE]={\
  direction=\"l\",\
 },\
 [0xA4EF]={\
  direction=\"l\",\
 },\
 [0xA4F0]={\
  direction=\"l\",\
 },\
 [0xA4F1]={\
  direction=\"l\",\
 },\
 [0xA4F2]={\
  direction=\"l\",\
 },\
 [0xA4F3]={\
  direction=\"l\",\
 },\
 [0xA4F4]={\
  direction=\"l\",\
 },\
 [0xA4F5]={\
  direction=\"l\",\
 },\
 [0xA4F6]={\
  direction=\"l\",\
 },\
 [0xA4F7]={\
  direction=\"l\",\
 },\
 [0xA4F8]={\
  direction=\"l\",\
 },\
 [0xA4F9]={\
  direction=\"l\",\
 },\
 [0xA4FA]={\
  direction=\"l\",\
 },\
 [0xA4FB]={\
  direction=\"l\",\
 },\
 [0xA4FC]={\
  direction=\"l\",\
 },\
 [0xA4FD]={\
  direction=\"l\",\
 },\
 [0xA4FE]={\
  direction=\"l\",\
 },\
 [0xA4FF]={\
  direction=\"l\",\
 },\
 [0xA500]={\
  direction=\"l\",\
 },\
 [0xA501]={\
  direction=\"l\",\
 },\
 [0xA502]={\
  direction=\"l\",\
 },\
 [0xA503]={\
  direction=\"l\",\
 },\
 [0xA504]={\
  direction=\"l\",\
 },\
 [0xA505]={\
  direction=\"l\",\
 },\
 [0xA506]={\
  direction=\"l\",\
 },\
 [0xA507]={\
  direction=\"l\",\
 },\
 [0xA508]={\
  direction=\"l\",\
 },\
 [0xA509]={\
  direction=\"l\",\
 },\
 [0xA50A]={\
  direction=\"l\",\
 },\
 [0xA50B]={\
  direction=\"l\",\
 },\
 [0xA50C]={\
  direction=\"l\",\
 },\
 [0xA50D]={\
  direction=\"l\",\
 },\
 [0xA50E]={\
  direction=\"l\",\
 },\
 [0xA50F]={\
  direction=\"l\",\
 },\
 [0xA510]={\
  direction=\"l\",\
 },\
 [0xA511]={\
  direction=\"l\",\
 },\
 [0xA512]={\
  direction=\"l\",\
 },\
 [0xA513]={\
  direction=\"l\",\
 },\
 [0xA514]={\
  direction=\"l\",\
 },\
 [0xA515]={\
  direction=\"l\",\
 },\
 [0xA516]={\
  direction=\"l\",\
 },\
 [0xA517]={\
  direction=\"l\",\
 },\
 [0xA518]={\
  direction=\"l\",\
 },\
 [0xA519]={\
  direction=\"l\",\
 },\
 [0xA51A]={\
  direction=\"l\",\
 },\
 [0xA51B]={\
  direction=\"l\",\
 },\
 [0xA51C]={\
  direction=\"l\",\
 },\
 [0xA51D]={\
  direction=\"l\",\
 },\
 [0xA51E]={\
  direction=\"l\",\
 },\
 [0xA51F]={\
  direction=\"l\",\
 },\
 [0xA520]={\
  direction=\"l\",\
 },\
 [0xA521]={\
  direction=\"l\",\
 },\
 [0xA522]={\
  direction=\"l\",\
 },\
 [0xA523]={\
  direction=\"l\",\
 },\
 [0xA524]={\
  direction=\"l\",\
 },\
 [0xA525]={\
  direction=\"l\",\
 },\
 [0xA526]={\
  direction=\"l\",\
 },\
 [0xA527]={\
  direction=\"l\",\
 },\
 [0xA528]={\
  direction=\"l\",\
 },\
 [0xA529]={\
  direction=\"l\",\
 },\
 [0xA52A]={\
  direction=\"l\",\
 },\
 [0xA52B]={\
  direction=\"l\",\
 },\
 [0xA52C]={\
  direction=\"l\",\
 },\
 [0xA52D]={\
  direction=\"l\",\
 },\
 [0xA52E]={\
  direction=\"l\",\
 },\
 [0xA52F]={\
  direction=\"l\",\
 },\
 [0xA530]={\
  direction=\"l\",\
 },\
 [0xA531]={\
  direction=\"l\",\
 },\
 [0xA532]={\
  direction=\"l\",\
 },\
 [0xA533]={\
  direction=\"l\",\
 },\
 [0xA534]={\
  direction=\"l\",\
 },\
 [0xA535]={\
  direction=\"l\",\
 },\
 [0xA536]={\
  direction=\"l\",\
 },\
 [0xA537]={\
  direction=\"l\",\
 },\
 [0xA538]={\
  direction=\"l\",\
 },\
 [0xA539]={\
  direction=\"l\",\
 },\
 [0xA53A]={\
  direction=\"l\",\
 },\
 [0xA53B]={\
  direction=\"l\",\
 },\
 [0xA53C]={\
  direction=\"l\",\
 },\
 [0xA53D]={\
  direction=\"l\",\
 },\
 [0xA53E]={\
  direction=\"l\",\
 },\
 [0xA53F]={\
  direction=\"l\",\
 },\
 [0xA540]={\
  direction=\"l\",\
 },\
 [0xA541]={\
  direction=\"l\",\
 },\
 [0xA542]={\
  direction=\"l\",\
 },\
 [0xA543]={\
  direction=\"l\",\
 },\
 [0xA544]={\
  direction=\"l\",\
 },\
 [0xA545]={\
  direction=\"l\",\
 },\
 [0xA546]={\
  direction=\"l\",\
 },\
 [0xA547]={\
  direction=\"l\",\
 },\
 [0xA548]={\
  direction=\"l\",\
 },\
 [0xA549]={\
  direction=\"l\",\
 },\
 [0xA54A]={\
  direction=\"l\",\
 },\
 [0xA54B]={\
  direction=\"l\",\
 },\
 [0xA54C]={\
  direction=\"l\",\
 },\
 [0xA54D]={\
  direction=\"l\",\
 },\
 [0xA54E]={\
  direction=\"l\",\
 },\
 [0xA54F]={\
  direction=\"l\",\
 },\
 [0xA550]={\
  direction=\"l\",\
 },\
 [0xA551]={\
  direction=\"l\",\
 },\
 [0xA552]={\
  direction=\"l\",\
 },\
 [0xA553]={\
  direction=\"l\",\
 },\
 [0xA554]={\
  direction=\"l\",\
 },\
 [0xA555]={\
  direction=\"l\",\
 },\
 [0xA556]={\
  direction=\"l\",\
 },\
 [0xA557]={\
  direction=\"l\",\
 },\
 [0xA558]={\
  direction=\"l\",\
 },\
 [0xA559]={\
  direction=\"l\",\
 },\
 [0xA55A]={\
  direction=\"l\",\
 },\
 [0xA55B]={\
  direction=\"l\",\
 },\
 [0xA55C]={\
  direction=\"l\",\
 },\
 [0xA55D]={\
  direction=\"l\",\
 },\
 [0xA55E]={\
  direction=\"l\",\
 },\
 [0xA55F]={\
  direction=\"l\",\
 },\
 [0xA560]={\
  direction=\"l\",\
 },\
 [0xA561]={\
  direction=\"l\",\
 },\
 [0xA562]={\
  direction=\"l\",\
 },\
 [0xA563]={\
  direction=\"l\",\
 },\
 [0xA564]={\
  direction=\"l\",\
 },\
 [0xA565]={\
  direction=\"l\",\
 },\
 [0xA566]={\
  direction=\"l\",\
 },\
 [0xA567]={\
  direction=\"l\",\
 },\
 [0xA568]={\
  direction=\"l\",\
 },\
 [0xA569]={\
  direction=\"l\",\
 },\
 [0xA56A]={\
  direction=\"l\",\
 },\
 [0xA56B]={\
  direction=\"l\",\
 },\
 [0xA56C]={\
  direction=\"l\",\
 },\
 [0xA56D]={\
  direction=\"l\",\
 },\
 [0xA56E]={\
  direction=\"l\",\
 },\
 [0xA56F]={\
  direction=\"l\",\
 },\
 [0xA570]={\
  direction=\"l\",\
 },\
 [0xA571]={\
  direction=\"l\",\
 },\
 [0xA572]={\
  direction=\"l\",\
 },\
 [0xA573]={\
  direction=\"l\",\
 },\
 [0xA574]={\
  direction=\"l\",\
 },\
 [0xA575]={\
  direction=\"l\",\
 },\
 [0xA576]={\
  direction=\"l\",\
 },\
 [0xA577]={\
  direction=\"l\",\
 },\
 [0xA578]={\
  direction=\"l\",\
 },\
 [0xA579]={\
  direction=\"l\",\
 },\
 [0xA57A]={\
  direction=\"l\",\
 },\
 [0xA57B]={\
  direction=\"l\",\
 },\
 [0xA57C]={\
  direction=\"l\",\
 },\
 [0xA57D]={\
  direction=\"l\",\
 },\
 [0xA57E]={\
  direction=\"l\",\
 },\
 [0xA57F]={\
  direction=\"l\",\
 },\
 [0xA580]={\
  direction=\"l\",\
 },\
 [0xA581]={\
  direction=\"l\",\
 },\
 [0xA582]={\
  direction=\"l\",\
 },\
 [0xA583]={\
  direction=\"l\",\
 },\
 [0xA584]={\
  direction=\"l\",\
 },\
 [0xA585]={\
  direction=\"l\",\
 },\
 [0xA586]={\
  direction=\"l\",\
 },\
 [0xA587]={\
  direction=\"l\",\
 },\
 [0xA588]={\
  direction=\"l\",\
 },\
 [0xA589]={\
  direction=\"l\",\
 },\
 [0xA58A]={\
  direction=\"l\",\
 },\
 [0xA58B]={\
  direction=\"l\",\
 },\
 [0xA58C]={\
  direction=\"l\",\
 },\
 [0xA58D]={\
  direction=\"l\",\
 },\
 [0xA58E]={\
  direction=\"l\",\
 },\
 [0xA58F]={\
  direction=\"l\",\
 },\
 [0xA590]={\
  direction=\"l\",\
 },\
 [0xA591]={\
  direction=\"l\",\
 },\
 [0xA592]={\
  direction=\"l\",\
 },\
 [0xA593]={\
  direction=\"l\",\
 },\
 [0xA594]={\
  direction=\"l\",\
 },\
 [0xA595]={\
  direction=\"l\",\
 },\
 [0xA596]={\
  direction=\"l\",\
 },\
 [0xA597]={\
  direction=\"l\",\
 },\
 [0xA598]={\
  direction=\"l\",\
 },\
 [0xA599]={\
  direction=\"l\",\
 },\
 [0xA59A]={\
  direction=\"l\",\
 },\
 [0xA59B]={\
  direction=\"l\",\
 },\
 [0xA59C]={\
  direction=\"l\",\
 },\
 [0xA59D]={\
  direction=\"l\",\
 },\
 [0xA59E]={\
  direction=\"l\",\
 },\
 [0xA59F]={\
  direction=\"l\",\
 },\
 [0xA5A0]={\
  direction=\"l\",\
 },\
 [0xA5A1]={\
  direction=\"l\",\
 },\
 [0xA5A2]={\
  direction=\"l\",\
 },\
 [0xA5A3]={\
  direction=\"l\",\
 },\
 [0xA5A4]={\
  direction=\"l\",\
 },\
 [0xA5A5]={\
  direction=\"l\",\
 },\
 [0xA5A6]={\
  direction=\"l\",\
 },\
 [0xA5A7]={\
  direction=\"l\",\
 },\
 [0xA5A8]={\
  direction=\"l\",\
 },\
 [0xA5A9]={\
  direction=\"l\",\
 },\
 [0xA5AA]={\
  direction=\"l\",\
 },\
 [0xA5AB]={\
  direction=\"l\",\
 },\
 [0xA5AC]={\
  direction=\"l\",\
 },\
 [0xA5AD]={\
  direction=\"l\",\
 },\
 [0xA5AE]={\
  direction=\"l\",\
 },\
 [0xA5AF]={\
  direction=\"l\",\
 },\
 [0xA5B0]={\
  direction=\"l\",\
 },\
 [0xA5B1]={\
  direction=\"l\",\
 },\
 [0xA5B2]={\
  direction=\"l\",\
 },\
 [0xA5B3]={\
  direction=\"l\",\
 },\
 [0xA5B4]={\
  direction=\"l\",\
 },\
 [0xA5B5]={\
  direction=\"l\",\
 },\
 [0xA5B6]={\
  direction=\"l\",\
 },\
 [0xA5B7]={\
  direction=\"l\",\
 },\
 [0xA5B8]={\
  direction=\"l\",\
 },\
 [0xA5B9]={\
  direction=\"l\",\
 },\
 [0xA5BA]={\
  direction=\"l\",\
 },\
 [0xA5BB]={\
  direction=\"l\",\
 },\
 [0xA5BC]={\
  direction=\"l\",\
 },\
 [0xA5BD]={\
  direction=\"l\",\
 },\
 [0xA5BE]={\
  direction=\"l\",\
 },\
 [0xA5BF]={\
  direction=\"l\",\
 },\
 [0xA5C0]={\
  direction=\"l\",\
 },\
 [0xA5C1]={\
  direction=\"l\",\
 },\
 [0xA5C2]={\
  direction=\"l\",\
 },\
 [0xA5C3]={\
  direction=\"l\",\
 },\
 [0xA5C4]={\
  direction=\"l\",\
 },\
 [0xA5C5]={\
  direction=\"l\",\
 },\
 [0xA5C6]={\
  direction=\"l\",\
 },\
 [0xA5C7]={\
  direction=\"l\",\
 },\
 [0xA5C8]={\
  direction=\"l\",\
 },\
 [0xA5C9]={\
  direction=\"l\",\
 },\
 [0xA5CA]={\
  direction=\"l\",\
 },\
 [0xA5CB]={\
  direction=\"l\",\
 },\
 [0xA5CC]={\
  direction=\"l\",\
 },\
 [0xA5CD]={\
  direction=\"l\",\
 },\
 [0xA5CE]={\
  direction=\"l\",\
 },\
 [0xA5CF]={\
  direction=\"l\",\
 },\
 [0xA5D0]={\
  direction=\"l\",\
 },\
 [0xA5D1]={\
  direction=\"l\",\
 },\
 [0xA5D2]={\
  direction=\"l\",\
 },\
 [0xA5D3]={\
  direction=\"l\",\
 },\
 [0xA5D4]={\
  direction=\"l\",\
 },\
 [0xA5D5]={\
  direction=\"l\",\
 },\
 [0xA5D6]={\
  direction=\"l\",\
 },\
 [0xA5D7]={\
  direction=\"l\",\
 },\
 [0xA5D8]={\
  direction=\"l\",\
 },\
 [0xA5D9]={\
  direction=\"l\",\
 },\
 [0xA5DA]={\
  direction=\"l\",\
 },\
 [0xA5DB]={\
  direction=\"l\",\
 },\
 [0xA5DC]={\
  direction=\"l\",\
 },\
 [0xA5DD]={\
  direction=\"l\",\
 },\
 [0xA5DE]={\
  direction=\"l\",\
 },\
 [0xA5DF]={\
  direction=\"l\",\
 },\
 [0xA5E0]={\
  direction=\"l\",\
 },\
 [0xA5E1]={\
  direction=\"l\",\
 },\
 [0xA5E2]={\
  direction=\"l\",\
 },\
 [0xA5E3]={\
  direction=\"l\",\
 },\
 [0xA5E4]={\
  direction=\"l\",\
 },\
 [0xA5E5]={\
  direction=\"l\",\
 },\
 [0xA5E6]={\
  direction=\"l\",\
 },\
 [0xA5E7]={\
  direction=\"l\",\
 },\
 [0xA5E8]={\
  direction=\"l\",\
 },\
 [0xA5E9]={\
  direction=\"l\",\
 },\
 [0xA5EA]={\
  direction=\"l\",\
 },\
 [0xA5EB]={\
  direction=\"l\",\
 },\
 [0xA5EC]={\
  direction=\"l\",\
 },\
 [0xA5ED]={\
  direction=\"l\",\
 },\
 [0xA5EE]={\
  direction=\"l\",\
 },\
 [0xA5EF]={\
  direction=\"l\",\
 },\
 [0xA5F0]={\
  direction=\"l\",\
 },\
 [0xA5F1]={\
  direction=\"l\",\
 },\
 [0xA5F2]={\
  direction=\"l\",\
 },\
 [0xA5F3]={\
  direction=\"l\",\
 },\
 [0xA5F4]={\
  direction=\"l\",\
 },\
 [0xA5F5]={\
  direction=\"l\",\
 },\
 [0xA5F6]={\
  direction=\"l\",\
 },\
 [0xA5F7]={\
  direction=\"l\",\
 },\
 [0xA5F8]={\
  direction=\"l\",\
 },\
 [0xA5F9]={\
  direction=\"l\",\
 },\
 [0xA5FA]={\
  direction=\"l\",\
 },\
 [0xA5FB]={\
  direction=\"l\",\
 },\
 [0xA5FC]={\
  direction=\"l\",\
 },\
 [0xA5FD]={\
  direction=\"l\",\
 },\
 [0xA5FE]={\
  direction=\"l\",\
 },\
 [0xA5FF]={\
  direction=\"l\",\
 },\
 [0xA600]={\
  direction=\"l\",\
 },\
 [0xA601]={\
  direction=\"l\",\
 },\
 [0xA602]={\
  direction=\"l\",\
 },\
 [0xA603]={\
  direction=\"l\",\
 },\
 [0xA604]={\
  direction=\"l\",\
 },\
 [0xA605]={\
  direction=\"l\",\
 },\
 [0xA606]={\
  direction=\"l\",\
 },\
 [0xA607]={\
  direction=\"l\",\
 },\
 [0xA608]={\
  direction=\"l\",\
 },\
 [0xA609]={\
  direction=\"l\",\
 },\
 [0xA60A]={\
  direction=\"l\",\
 },\
 [0xA60B]={\
  direction=\"l\",\
 },\
 [0xA60C]={\
  direction=\"l\",\
 },\
 [0xA60D]={\
  direction=\"on\",\
 },\
 [0xA60E]={\
  direction=\"on\",\
 },\
 [0xA60F]={\
  direction=\"on\",\
 },\
 [0xA610]={\
  direction=\"l\",\
 },\
 [0xA611]={\
  direction=\"l\",\
 },\
 [0xA612]={\
  direction=\"l\",\
 },\
 [0xA613]={\
  direction=\"l\",\
 },\
 [0xA614]={\
  direction=\"l\",\
 },\
 [0xA615]={\
  direction=\"l\",\
 },\
 [0xA616]={\
  direction=\"l\",\
 },\
 [0xA617]={\
  direction=\"l\",\
 },\
 [0xA618]={\
  direction=\"l\",\
 },\
 [0xA619]={\
  direction=\"l\",\
 },\
 [0xA61A]={\
  direction=\"l\",\
 },\
 [0xA61B]={\
  direction=\"l\",\
 },\
 [0xA61C]={\
  direction=\"l\",\
 },\
 [0xA61D]={\
  direction=\"l\",\
 },\
 [0xA61E]={\
  direction=\"l\",\
 },\
 [0xA61F]={\
  direction=\"l\",\
 },\
 [0xA620]={\
  direction=\"l\",\
 },\
 [0xA621]={\
  direction=\"l\",\
 },\
 [0xA622]={\
  direction=\"l\",\
 },\
 [0xA623]={\
  direction=\"l\",\
 },\
 [0xA624]={\
  direction=\"l\",\
 },\
 [0xA625]={\
  direction=\"l\",\
 },\
 [0xA626]={\
  direction=\"l\",\
 },\
 [0xA627]={\
  direction=\"l\",\
 },\
 [0xA628]={\
  direction=\"l\",\
 },\
 [0xA629]={\
  direction=\"l\",\
 },\
 [0xA62A]={\
  direction=\"l\",\
 },\
 [0xA62B]={\
  direction=\"l\",\
 },\
 [0xA640]={\
  direction=\"l\",\
 },\
 [0xA641]={\
  direction=\"l\",\
 },\
 [0xA642]={\
  direction=\"l\",\
 },\
 [0xA643]={\
  direction=\"l\",\
 },\
 [0xA644]={\
  direction=\"l\",\
 },\
 [0xA645]={\
  direction=\"l\",\
 },\
 [0xA646]={\
  direction=\"l\",\
 },\
 [0xA647]={\
  direction=\"l\",\
 },\
 [0xA648]={\
  direction=\"l\",\
 },\
 [0xA649]={\
  direction=\"l\",\
 },\
 [0xA64A]={\
  direction=\"l\",\
 },\
 [0xA64B]={\
  direction=\"l\",\
 },\
 [0xA64C]={\
  direction=\"l\",\
 },\
 [0xA64D]={\
  direction=\"l\",\
 },\
 [0xA64E]={\
  direction=\"l\",\
 },\
 [0xA64F]={\
  direction=\"l\",\
 },\
 [0xA650]={\
  direction=\"l\",\
 },\
 [0xA651]={\
  direction=\"l\",\
 },\
 [0xA652]={\
  direction=\"l\",\
 },\
 [0xA653]={\
  direction=\"l\",\
 },\
 [0xA654]={\
  direction=\"l\",\
 },\
 [0xA655]={\
  direction=\"l\",\
 },\
 [0xA656]={\
  direction=\"l\",\
 },\
 [0xA657]={\
  direction=\"l\",\
 },\
 [0xA658]={\
  direction=\"l\",\
 },\
 [0xA659]={\
  direction=\"l\",\
 },\
 [0xA65A]={\
  direction=\"l\",\
 },\
 [0xA65B]={\
  direction=\"l\",\
 },\
 [0xA65C]={\
  direction=\"l\",\
 },\
 [0xA65D]={\
  direction=\"l\",\
 },\
 [0xA65E]={\
  direction=\"l\",\
 },\
 [0xA65F]={\
  direction=\"l\",\
 },\
 [0xA660]={\
  direction=\"l\",\
 },\
 [0xA661]={\
  direction=\"l\",\
 },\
 [0xA662]={\
  direction=\"l\",\
 },\
 [0xA663]={\
  direction=\"l\",\
 },\
 [0xA664]={\
  direction=\"l\",\
 },\
 [0xA665]={\
  direction=\"l\",\
 },\
 [0xA666]={\
  direction=\"l\",\
 },\
 [0xA667]={\
  direction=\"l\",\
 },\
 [0xA668]={\
  direction=\"l\",\
 },\
 [0xA669]={\
  direction=\"l\",\
 },\
 [0xA66A]={\
  direction=\"l\",\
 },\
 [0xA66B]={\
  direction=\"l\",\
 },\
 [0xA66C]={\
  direction=\"l\",\
 },\
 [0xA66D]={\
  direction=\"l\",\
 },\
 [0xA66E]={\
  direction=\"l\",\
 },\
 [0xA66F]={\
  direction=\"nsm\",\
 },\
 [0xA670]={\
  direction=\"nsm\",\
 },\
 [0xA671]={\
  direction=\"nsm\",\
 },\
 [0xA672]={\
  direction=\"nsm\",\
 },\
 [0xA673]={\
  direction=\"on\",\
 },\
 [0xA674]={\
  direction=\"nsm\",\
 },\
 [0xA675]={\
  direction=\"nsm\",\
 },\
 [0xA676]={\
  direction=\"nsm\",\
 },\
 [0xA677]={\
  direction=\"nsm\",\
 },\
 [0xA678]={\
  direction=\"nsm\",\
 },\
 [0xA679]={\
  direction=\"nsm\",\
 },\
 [0xA67A]={\
  direction=\"nsm\",\
 },\
 [0xA67B]={\
  direction=\"nsm\",\
 },\
 [0xA67C]={\
  direction=\"nsm\",\
 },\
 [0xA67D]={\
  direction=\"nsm\",\
 },\
 [0xA67E]={\
  direction=\"on\",\
 },\
 [0xA67F]={\
  direction=\"on\",\
 },\
 [0xA680]={\
  direction=\"l\",\
 },\
 [0xA681]={\
  direction=\"l\",\
 },\
 [0xA682]={\
  direction=\"l\",\
 },\
 [0xA683]={\
  direction=\"l\",\
 },\
 [0xA684]={\
  direction=\"l\",\
 },\
 [0xA685]={\
  direction=\"l\",\
 },\
 [0xA686]={\
  direction=\"l\",\
 },\
 [0xA687]={\
  direction=\"l\",\
 },\
 [0xA688]={\
  direction=\"l\",\
 },\
 [0xA689]={\
  direction=\"l\",\
 },\
 [0xA68A]={\
  direction=\"l\",\
 },\
 [0xA68B]={\
  direction=\"l\",\
 },\
 [0xA68C]={\
  direction=\"l\",\
 },\
 [0xA68D]={\
  direction=\"l\",\
 },\
 [0xA68E]={\
  direction=\"l\",\
 },\
 [0xA68F]={\
  direction=\"l\",\
 },\
 [0xA690]={\
  direction=\"l\",\
 },\
 [0xA691]={\
  direction=\"l\",\
 },\
 [0xA692]={\
  direction=\"l\",\
 },\
 [0xA693]={\
  direction=\"l\",\
 },\
 [0xA694]={\
  direction=\"l\",\
 },\
 [0xA695]={\
  direction=\"l\",\
 },\
 [0xA696]={\
  direction=\"l\",\
 },\
 [0xA697]={\
  direction=\"l\",\
 },\
 [0xA69F]={\
  direction=\"nsm\",\
 },\
 [0xA6A0]={\
  direction=\"l\",\
 },\
 [0xA6A1]={\
  direction=\"l\",\
 },\
 [0xA6A2]={\
  direction=\"l\",\
 },\
 [0xA6A3]={\
  direction=\"l\",\
 },\
 [0xA6A4]={\
  direction=\"l\",\
 },\
 [0xA6A5]={\
  direction=\"l\",\
 },\
 [0xA6A6]={\
  direction=\"l\",\
 },\
 [0xA6A7]={\
  direction=\"l\",\
 },\
 [0xA6A8]={\
  direction=\"l\",\
 },\
 [0xA6A9]={\
  direction=\"l\",\
 },\
 [0xA6AA]={\
  direction=\"l\",\
 },\
 [0xA6AB]={\
  direction=\"l\",\
 },\
 [0xA6AC]={\
  direction=\"l\",\
 },\
 [0xA6AD]={\
  direction=\"l\",\
 },\
 [0xA6AE]={\
  direction=\"l\",\
 },\
 [0xA6AF]={\
  direction=\"l\",\
 },\
 [0xA6B0]={\
  direction=\"l\",\
 },\
 [0xA6B1]={\
  direction=\"l\",\
 },\
 [0xA6B2]={\
  direction=\"l\",\
 },\
 [0xA6B3]={\
  direction=\"l\",\
 },\
 [0xA6B4]={\
  direction=\"l\",\
 },\
 [0xA6B5]={\
  direction=\"l\",\
 },\
 [0xA6B6]={\
  direction=\"l\",\
 },\
 [0xA6B7]={\
  direction=\"l\",\
 },\
 [0xA6B8]={\
  direction=\"l\",\
 },\
 [0xA6B9]={\
  direction=\"l\",\
 },\
 [0xA6BA]={\
  direction=\"l\",\
 },\
 [0xA6BB]={\
  direction=\"l\",\
 },\
 [0xA6BC]={\
  direction=\"l\",\
 },\
 [0xA6BD]={\
  direction=\"l\",\
 },\
 [0xA6BE]={\
  direction=\"l\",\
 },\
 [0xA6BF]={\
  direction=\"l\",\
 },\
 [0xA6C0]={\
  direction=\"l\",\
 },\
 [0xA6C1]={\
  direction=\"l\",\
 },\
 [0xA6C2]={\
  direction=\"l\",\
 },\
 [0xA6C3]={\
  direction=\"l\",\
 },\
 [0xA6C4]={\
  direction=\"l\",\
 },\
 [0xA6C5]={\
  direction=\"l\",\
 },\
 [0xA6C6]={\
  direction=\"l\",\
 },\
 [0xA6C7]={\
  direction=\"l\",\
 },\
 [0xA6C8]={\
  direction=\"l\",\
 },\
 [0xA6C9]={\
  direction=\"l\",\
 },\
 [0xA6CA]={\
  direction=\"l\",\
 },\
 [0xA6CB]={\
  direction=\"l\",\
 },\
 [0xA6CC]={\
  direction=\"l\",\
 },\
 [0xA6CD]={\
  direction=\"l\",\
 },\
 [0xA6CE]={\
  direction=\"l\",\
 },\
 [0xA6CF]={\
  direction=\"l\",\
 },\
 [0xA6D0]={\
  direction=\"l\",\
 },\
 [0xA6D1]={\
  direction=\"l\",\
 },\
 [0xA6D2]={\
  direction=\"l\",\
 },\
 [0xA6D3]={\
  direction=\"l\",\
 },\
 [0xA6D4]={\
  direction=\"l\",\
 },\
 [0xA6D5]={\
  direction=\"l\",\
 },\
 [0xA6D6]={\
  direction=\"l\",\
 },\
 [0xA6D7]={\
  direction=\"l\",\
 },\
 [0xA6D8]={\
  direction=\"l\",\
 },\
 [0xA6D9]={\
  direction=\"l\",\
 },\
 [0xA6DA]={\
  direction=\"l\",\
 },\
 [0xA6DB]={\
  direction=\"l\",\
 },\
 [0xA6DC]={\
  direction=\"l\",\
 },\
 [0xA6DD]={\
  direction=\"l\",\
 },\
 [0xA6DE]={\
  direction=\"l\",\
 },\
 [0xA6DF]={\
  direction=\"l\",\
 },\
 [0xA6E0]={\
  direction=\"l\",\
 },\
 [0xA6E1]={\
  direction=\"l\",\
 },\
 [0xA6E2]={\
  direction=\"l\",\
 },\
 [0xA6E3]={\
  direction=\"l\",\
 },\
 [0xA6E4]={\
  direction=\"l\",\
 },\
 [0xA6E5]={\
  direction=\"l\",\
 },\
 [0xA6E6]={\
  direction=\"l\",\
 },\
 [0xA6E7]={\
  direction=\"l\",\
 },\
 [0xA6E8]={\
  direction=\"l\",\
 },\
 [0xA6E9]={\
  direction=\"l\",\
 },\
 [0xA6EA]={\
  direction=\"l\",\
 },\
 [0xA6EB]={\
  direction=\"l\",\
 },\
 [0xA6EC]={\
  direction=\"l\",\
 },\
 [0xA6ED]={\
  direction=\"l\",\
 },\
 [0xA6EE]={\
  direction=\"l\",\
 },\
 [0xA6EF]={\
  direction=\"l\",\
 },\
 [0xA6F0]={\
  direction=\"nsm\",\
 },\
 [0xA6F1]={\
  direction=\"nsm\",\
 },\
 [0xA6F2]={\
  direction=\"l\",\
 },\
 [0xA6F3]={\
  direction=\"l\",\
 },\
 [0xA6F4]={\
  direction=\"l\",\
 },\
 [0xA6F5]={\
  direction=\"l\",\
 },\
 [0xA6F6]={\
  direction=\"l\",\
 },\
 [0xA6F7]={\
  direction=\"l\",\
 },\
 [0xA700]={\
  direction=\"on\",\
 },\
 [0xA701]={\
  direction=\"on\",\
 },\
 [0xA702]={\
  direction=\"on\",\
 },\
 [0xA703]={\
  direction=\"on\",\
 },\
 [0xA704]={\
  direction=\"on\",\
 },\
 [0xA705]={\
  direction=\"on\",\
 },\
 [0xA706]={\
  direction=\"on\",\
 },\
 [0xA707]={\
  direction=\"on\",\
 },\
 [0xA708]={\
  direction=\"on\",\
 },\
 [0xA709]={\
  direction=\"on\",\
 },\
 [0xA70A]={\
  direction=\"on\",\
 },\
 [0xA70B]={\
  direction=\"on\",\
 },\
 [0xA70C]={\
  direction=\"on\",\
 },\
 [0xA70D]={\
  direction=\"on\",\
 },\
 [0xA70E]={\
  direction=\"on\",\
 },\
 [0xA70F]={\
  direction=\"on\",\
 },\
 [0xA710]={\
  direction=\"on\",\
 },\
 [0xA711]={\
  direction=\"on\",\
 },\
 [0xA712]={\
  direction=\"on\",\
 },\
 [0xA713]={\
  direction=\"on\",\
 },\
 [0xA714]={\
  direction=\"on\",\
 },\
 [0xA715]={\
  direction=\"on\",\
 },\
 [0xA716]={\
  direction=\"on\",\
 },\
 [0xA717]={\
  direction=\"on\",\
 },\
 [0xA718]={\
  direction=\"on\",\
 },\
 [0xA719]={\
  direction=\"on\",\
 },\
 [0xA71A]={\
  direction=\"on\",\
 },\
 [0xA71B]={\
  direction=\"on\",\
 },\
 [0xA71C]={\
  direction=\"on\",\
 },\
 [0xA71D]={\
  direction=\"on\",\
 },\
 [0xA71E]={\
  direction=\"on\",\
 },\
 [0xA71F]={\
  direction=\"on\",\
 },\
 [0xA720]={\
  direction=\"on\",\
 },\
 [0xA721]={\
  direction=\"on\",\
 },\
 [0xA722]={\
  direction=\"l\",\
 },\
 [0xA723]={\
  direction=\"l\",\
 },\
 [0xA724]={\
  direction=\"l\",\
 },\
 [0xA725]={\
  direction=\"l\",\
 },\
 [0xA726]={\
  direction=\"l\",\
 },\
 [0xA727]={\
  direction=\"l\",\
 },\
 [0xA728]={\
  direction=\"l\",\
 },\
 [0xA729]={\
  direction=\"l\",\
 },\
 [0xA72A]={\
  direction=\"l\",\
 },\
 [0xA72B]={\
  direction=\"l\",\
 },\
 [0xA72C]={\
  direction=\"l\",\
 },\
 [0xA72D]={\
  direction=\"l\",\
 },\
 [0xA72E]={\
  direction=\"l\",\
 },\
 [0xA72F]={\
  direction=\"l\",\
 },\
 [0xA730]={\
  direction=\"l\",\
 },\
 [0xA731]={\
  direction=\"l\",\
 },\
 [0xA732]={\
  direction=\"l\",\
 },\
 [0xA733]={\
  direction=\"l\",\
 },\
 [0xA734]={\
  direction=\"l\",\
 },\
 [0xA735]={\
  direction=\"l\",\
 },\
 [0xA736]={\
  direction=\"l\",\
 },\
 [0xA737]={\
  direction=\"l\",\
 },\
 [0xA738]={\
  direction=\"l\",\
 },\
 [0xA739]={\
  direction=\"l\",\
 },\
 [0xA73A]={\
  direction=\"l\",\
 },\
 [0xA73B]={\
  direction=\"l\",\
 },\
 [0xA73C]={\
  direction=\"l\",\
 },\
 [0xA73D]={\
  direction=\"l\",\
 },\
 [0xA73E]={\
  direction=\"l\",\
 },\
 [0xA73F]={\
  direction=\"l\",\
 },\
 [0xA740]={\
  direction=\"l\",\
 },\
 [0xA741]={\
  direction=\"l\",\
 },\
 [0xA742]={\
  direction=\"l\",\
 },\
 [0xA743]={\
  direction=\"l\",\
 },\
 [0xA744]={\
  direction=\"l\",\
 },\
 [0xA745]={\
  direction=\"l\",\
 },\
 [0xA746]={\
  direction=\"l\",\
 },\
 [0xA747]={\
  direction=\"l\",\
 },\
 [0xA748]={\
  direction=\"l\",\
 },\
 [0xA749]={\
  direction=\"l\",\
 },\
 [0xA74A]={\
  direction=\"l\",\
 },\
 [0xA74B]={\
  direction=\"l\",\
 },\
 [0xA74C]={\
  direction=\"l\",\
 },\
 [0xA74D]={\
  direction=\"l\",\
 },\
 [0xA74E]={\
  direction=\"l\",\
 },\
 [0xA74F]={\
  direction=\"l\",\
 },\
 [0xA750]={\
  direction=\"l\",\
 },\
 [0xA751]={\
  direction=\"l\",\
 },\
 [0xA752]={\
  direction=\"l\",\
 },\
 [0xA753]={\
  direction=\"l\",\
 },\
 [0xA754]={\
  direction=\"l\",\
 },\
 [0xA755]={\
  direction=\"l\",\
 },\
 [0xA756]={\
  direction=\"l\",\
 },\
 [0xA757]={\
  direction=\"l\",\
 },\
 [0xA758]={\
  direction=\"l\",\
 },\
 [0xA759]={\
  direction=\"l\",\
 },\
 [0xA75A]={\
  direction=\"l\",\
 },\
 [0xA75B]={\
  direction=\"l\",\
 },\
 [0xA75C]={\
  direction=\"l\",\
 },\
 [0xA75D]={\
  direction=\"l\",\
 },\
 [0xA75E]={\
  direction=\"l\",\
 },\
 [0xA75F]={\
  direction=\"l\",\
 },\
 [0xA760]={\
  direction=\"l\",\
 },\
 [0xA761]={\
  direction=\"l\",\
 },\
 [0xA762]={\
  direction=\"l\",\
 },\
 [0xA763]={\
  direction=\"l\",\
 },\
 [0xA764]={\
  direction=\"l\",\
 },\
 [0xA765]={\
  direction=\"l\",\
 },\
 [0xA766]={\
  direction=\"l\",\
 },\
 [0xA767]={\
  direction=\"l\",\
 },\
 [0xA768]={\
  direction=\"l\",\
 },\
 [0xA769]={\
  direction=\"l\",\
 },\
 [0xA76A]={\
  direction=\"l\",\
 },\
 [0xA76B]={\
  direction=\"l\",\
 },\
 [0xA76C]={\
  direction=\"l\",\
 },\
 [0xA76D]={\
  direction=\"l\",\
 },\
 [0xA76E]={\
  direction=\"l\",\
 },\
 [0xA76F]={\
  direction=\"l\",\
 },\
 [0xA770]={\
  direction=\"l\",\
 },\
 [0xA771]={\
  direction=\"l\",\
 },\
 [0xA772]={\
  direction=\"l\",\
 },\
 [0xA773]={\
  direction=\"l\",\
 },\
 [0xA774]={\
  direction=\"l\",\
 },\
 [0xA775]={\
  direction=\"l\",\
 },\
 [0xA776]={\
  direction=\"l\",\
 },\
 [0xA777]={\
  direction=\"l\",\
 },\
 [0xA778]={\
  direction=\"l\",\
 },\
 [0xA779]={\
  direction=\"l\",\
 },\
 [0xA77A]={\
  direction=\"l\",\
 },\
 [0xA77B]={\
  direction=\"l\",\
 },\
 [0xA77C]={\
  direction=\"l\",\
 },\
 [0xA77D]={\
  direction=\"l\",\
 },\
 [0xA77E]={\
  direction=\"l\",\
 },\
 [0xA77F]={\
  direction=\"l\",\
 },\
 [0xA780]={\
  direction=\"l\",\
 },\
 [0xA781]={\
  direction=\"l\",\
 },\
 [0xA782]={\
  direction=\"l\",\
 },\
 [0xA783]={\
  direction=\"l\",\
 },\
 [0xA784]={\
  direction=\"l\",\
 },\
 [0xA785]={\
  direction=\"l\",\
 },\
 [0xA786]={\
  direction=\"l\",\
 },\
 [0xA787]={\
  direction=\"l\",\
 },\
 [0xA788]={\
  direction=\"on\",\
 },\
 [0xA789]={\
  direction=\"l\",\
 },\
 [0xA78A]={\
  direction=\"l\",\
 },\
 [0xA78B]={\
  direction=\"l\",\
 },\
 [0xA78C]={\
  direction=\"l\",\
 },\
 [0xA78D]={\
  direction=\"l\",\
 },\
 [0xA78E]={\
  direction=\"l\",\
 },\
 [0xA790]={\
  direction=\"l\",\
 },\
 [0xA791]={\
  direction=\"l\",\
 },\
 [0xA792]={\
  direction=\"l\",\
 },\
 [0xA793]={\
  direction=\"l\",\
 },\
 [0xA7A0]={\
  direction=\"l\",\
 },\
 [0xA7A1]={\
  direction=\"l\",\
 },\
 [0xA7A2]={\
  direction=\"l\",\
 },\
 [0xA7A3]={\
  direction=\"l\",\
 },\
 [0xA7A4]={\
  direction=\"l\",\
 },\
 [0xA7A5]={\
  direction=\"l\",\
 },\
 [0xA7A6]={\
  direction=\"l\",\
 },\
 [0xA7A7]={\
  direction=\"l\",\
 },\
 [0xA7A8]={\
  direction=\"l\",\
 },\
 [0xA7A9]={\
  direction=\"l\",\
 },\
 [0xA7AA]={\
  direction=\"l\",\
 },\
 [0xA7F8]={\
  direction=\"l\",\
 },\
 [0xA7F9]={\
  direction=\"l\",\
 },\
 [0xA7FA]={\
  direction=\"l\",\
 },\
 [0xA7FB]={\
  direction=\"l\",\
 },\
 [0xA7FC]={\
  direction=\"l\",\
 },\
 [0xA7FD]={\
  direction=\"l\",\
 },\
 [0xA7FE]={\
  direction=\"l\",\
 },\
 [0xA7FF]={\
  direction=\"l\",\
 },\
 [0xA800]={\
  direction=\"l\",\
 },\
 [0xA801]={\
  direction=\"l\",\
 },\
 [0xA802]={\
  direction=\"nsm\",\
 },\
 [0xA803]={\
  direction=\"l\",\
 },\
 [0xA804]={\
  direction=\"l\",\
 },\
 [0xA805]={\
  direction=\"l\",\
 },\
 [0xA806]={\
  direction=\"nsm\",\
 },\
 [0xA807]={\
  direction=\"l\",\
 },\
 [0xA808]={\
  direction=\"l\",\
 },\
 [0xA809]={\
  direction=\"l\",\
 },\
 [0xA80A]={\
  direction=\"l\",\
 },\
 [0xA80B]={\
  direction=\"nsm\",\
 },\
 [0xA80C]={\
  direction=\"l\",\
 },\
 [0xA80D]={\
  direction=\"l\",\
 },\
 [0xA80E]={\
  direction=\"l\",\
 },\
 [0xA80F]={\
  direction=\"l\",\
 },\
 [0xA810]={\
  direction=\"l\",\
 },\
 [0xA811]={\
  direction=\"l\",\
 },\
 [0xA812]={\
  direction=\"l\",\
 },\
 [0xA813]={\
  direction=\"l\",\
 },\
 [0xA814]={\
  direction=\"l\",\
 },\
 [0xA815]={\
  direction=\"l\",\
 },\
 [0xA816]={\
  direction=\"l\",\
 },\
 [0xA817]={\
  direction=\"l\",\
 },\
 [0xA818]={\
  direction=\"l\",\
 },\
 [0xA819]={\
  direction=\"l\",\
 },\
 [0xA81A]={\
  direction=\"l\",\
 },\
 [0xA81B]={\
  direction=\"l\",\
 },\
 [0xA81C]={\
  direction=\"l\",\
 },\
 [0xA81D]={\
  direction=\"l\",\
 },\
 [0xA81E]={\
  direction=\"l\",\
 },\
 [0xA81F]={\
  direction=\"l\",\
 },\
 [0xA820]={\
  direction=\"l\",\
 },\
 [0xA821]={\
  direction=\"l\",\
 },\
 [0xA822]={\
  direction=\"l\",\
 },\
 [0xA823]={\
  direction=\"l\",\
 },\
 [0xA824]={\
  direction=\"l\",\
 },\
 [0xA825]={\
  direction=\"nsm\",\
 },\
 [0xA826]={\
  direction=\"nsm\",\
 },\
 [0xA827]={\
  direction=\"l\",\
 },\
 [0xA828]={\
  direction=\"on\",\
 },\
 [0xA829]={\
  direction=\"on\",\
 },\
 [0xA82A]={\
  direction=\"on\",\
 },\
 [0xA82B]={\
  direction=\"on\",\
 },\
 [0xA830]={\
  direction=\"l\",\
 },\
 [0xA831]={\
  direction=\"l\",\
 },\
 [0xA832]={\
  direction=\"l\",\
 },\
 [0xA833]={\
  direction=\"l\",\
 },\
 [0xA834]={\
  direction=\"l\",\
 },\
 [0xA835]={\
  direction=\"l\",\
 },\
 [0xA836]={\
  direction=\"l\",\
 },\
 [0xA837]={\
  direction=\"l\",\
 },\
 [0xA838]={\
  direction=\"et\",\
 },\
 [0xA839]={\
  direction=\"et\",\
 },\
 [0xA840]={\
  direction=\"l\",\
 },\
 [0xA841]={\
  direction=\"l\",\
 },\
 [0xA842]={\
  direction=\"l\",\
 },\
 [0xA843]={\
  direction=\"l\",\
 },\
 [0xA844]={\
  direction=\"l\",\
 },\
 [0xA845]={\
  direction=\"l\",\
 },\
 [0xA846]={\
  direction=\"l\",\
 },\
 [0xA847]={\
  direction=\"l\",\
 },\
 [0xA848]={\
  direction=\"l\",\
 },\
 [0xA849]={\
  direction=\"l\",\
 },\
 [0xA84A]={\
  direction=\"l\",\
 },\
 [0xA84B]={\
  direction=\"l\",\
 },\
 [0xA84C]={\
  direction=\"l\",\
 },\
 [0xA84D]={\
  direction=\"l\",\
 },\
 [0xA84E]={\
  direction=\"l\",\
 },\
 [0xA84F]={\
  direction=\"l\",\
 },\
 [0xA850]={\
  direction=\"l\",\
 },\
 [0xA851]={\
  direction=\"l\",\
 },\
 [0xA852]={\
  direction=\"l\",\
 },\
 [0xA853]={\
  direction=\"l\",\
 },\
 [0xA854]={\
  direction=\"l\",\
 },\
 [0xA855]={\
  direction=\"l\",\
 },\
 [0xA856]={\
  direction=\"l\",\
 },\
 [0xA857]={\
  direction=\"l\",\
 },\
 [0xA858]={\
  direction=\"l\",\
 },\
 [0xA859]={\
  direction=\"l\",\
 },\
 [0xA85A]={\
  direction=\"l\",\
 },\
 [0xA85B]={\
  direction=\"l\",\
 },\
 [0xA85C]={\
  direction=\"l\",\
 },\
 [0xA85D]={\
  direction=\"l\",\
 },\
 [0xA85E]={\
  direction=\"l\",\
 },\
 [0xA85F]={\
  direction=\"l\",\
 },\
 [0xA860]={\
  direction=\"l\",\
 },\
 [0xA861]={\
  direction=\"l\",\
 },\
 [0xA862]={\
  direction=\"l\",\
 },\
 [0xA863]={\
  direction=\"l\",\
 },\
 [0xA864]={\
  direction=\"l\",\
 },\
 [0xA865]={\
  direction=\"l\",\
 },\
 [0xA866]={\
  direction=\"l\",\
 },\
 [0xA867]={\
  direction=\"l\",\
 },\
 [0xA868]={\
  direction=\"l\",\
 },\
 [0xA869]={\
  direction=\"l\",\
 },\
 [0xA86A]={\
  direction=\"l\",\
 },\
 [0xA86B]={\
  direction=\"l\",\
 },\
 [0xA86C]={\
  direction=\"l\",\
 },\
 [0xA86D]={\
  direction=\"l\",\
 },\
 [0xA86E]={\
  direction=\"l\",\
 },\
 [0xA86F]={\
  direction=\"l\",\
 },\
 [0xA870]={\
  direction=\"l\",\
 },\
 [0xA871]={\
  direction=\"l\",\
 },\
 [0xA872]={\
  direction=\"l\",\
 },\
 [0xA873]={\
  direction=\"l\",\
 },\
 [0xA874]={\
  direction=\"on\",\
 },\
 [0xA875]={\
  direction=\"on\",\
 },\
 [0xA876]={\
  direction=\"on\",\
 },\
 [0xA877]={\
  direction=\"on\",\
 },\
 [0xA880]={\
  direction=\"l\",\
 },\
 [0xA881]={\
  direction=\"l\",\
 },\
 [0xA882]={\
  direction=\"l\",\
 },\
 [0xA883]={\
  direction=\"l\",\
 },\
 [0xA884]={\
  direction=\"l\",\
 },\
 [0xA885]={\
  direction=\"l\",\
 },\
 [0xA886]={\
  direction=\"l\",\
 },\
 [0xA887]={\
  direction=\"l\",\
 },\
 [0xA888]={\
  direction=\"l\",\
 },\
 [0xA889]={\
  direction=\"l\",\
 },\
 [0xA88A]={\
  direction=\"l\",\
 },\
 [0xA88B]={\
  direction=\"l\",\
 },\
 [0xA88C]={\
  direction=\"l\",\
 },\
 [0xA88D]={\
  direction=\"l\",\
 },\
 [0xA88E]={\
  direction=\"l\",\
 },\
 [0xA88F]={\
  direction=\"l\",\
 },\
 [0xA890]={\
  direction=\"l\",\
 },\
 [0xA891]={\
  direction=\"l\",\
 },\
 [0xA892]={\
  direction=\"l\",\
 },\
 [0xA893]={\
  direction=\"l\",\
 },\
 [0xA894]={\
  direction=\"l\",\
 },\
 [0xA895]={\
  direction=\"l\",\
 },\
 [0xA896]={\
  direction=\"l\",\
 },\
 [0xA897]={\
  direction=\"l\",\
 },\
 [0xA898]={\
  direction=\"l\",\
 },\
 [0xA899]={\
  direction=\"l\",\
 },\
 [0xA89A]={\
  direction=\"l\",\
 },\
 [0xA89B]={\
  direction=\"l\",\
 },\
 [0xA89C]={\
  direction=\"l\",\
 },\
 [0xA89D]={\
  direction=\"l\",\
 },\
 [0xA89E]={\
  direction=\"l\",\
 },\
 [0xA89F]={\
  direction=\"l\",\
 },\
 [0xA8A0]={\
  direction=\"l\",\
 },\
 [0xA8A1]={\
  direction=\"l\",\
 },\
 [0xA8A2]={\
  direction=\"l\",\
 },\
 [0xA8A3]={\
  direction=\"l\",\
 },\
 [0xA8A4]={\
  direction=\"l\",\
 },\
 [0xA8A5]={\
  direction=\"l\",\
 },\
 [0xA8A6]={\
  direction=\"l\",\
 },\
 [0xA8A7]={\
  direction=\"l\",\
 },\
 [0xA8A8]={\
  direction=\"l\",\
 },\
 [0xA8A9]={\
  direction=\"l\",\
 },\
 [0xA8AA]={\
  direction=\"l\",\
 },\
 [0xA8AB]={\
  direction=\"l\",\
 },\
 [0xA8AC]={\
  direction=\"l\",\
 },\
 [0xA8AD]={\
  direction=\"l\",\
 },\
 [0xA8AE]={\
  direction=\"l\",\
 },\
 [0xA8AF]={\
  direction=\"l\",\
 },\
 [0xA8B0]={\
  direction=\"l\",\
 },\
 [0xA8B1]={\
  direction=\"l\",\
 },\
 [0xA8B2]={\
  direction=\"l\",\
 },\
 [0xA8B3]={\
  direction=\"l\",\
 },\
 [0xA8B4]={\
  direction=\"l\",\
 },\
 [0xA8B5]={\
  direction=\"l\",\
 },\
 [0xA8B6]={\
  direction=\"l\",\
 },\
 [0xA8B7]={\
  direction=\"l\",\
 },\
 [0xA8B8]={\
  direction=\"l\",\
 },\
 [0xA8B9]={\
  direction=\"l\",\
 },\
 [0xA8BA]={\
  direction=\"l\",\
 },\
 [0xA8BB]={\
  direction=\"l\",\
 },\
 [0xA8BC]={\
  direction=\"l\",\
 },\
 [0xA8BD]={\
  direction=\"l\",\
 },\
 [0xA8BE]={\
  direction=\"l\",\
 },\
 [0xA8BF]={\
  direction=\"l\",\
 },\
 [0xA8C0]={\
  direction=\"l\",\
 },\
 [0xA8C1]={\
  direction=\"l\",\
 },\
 [0xA8C2]={\
  direction=\"l\",\
 },\
 [0xA8C3]={\
  direction=\"l\",\
 },\
 [0xA8C4]={\
  direction=\"nsm\",\
 },\
 [0xA8CE]={\
  direction=\"l\",\
 },\
 [0xA8CF]={\
  direction=\"l\",\
 },\
 [0xA8D0]={\
  direction=\"l\",\
 },\
 [0xA8D1]={\
  direction=\"l\",\
 },\
 [0xA8D2]={\
  direction=\"l\",\
 },\
 [0xA8D3]={\
  direction=\"l\",\
 },\
 [0xA8D4]={\
  direction=\"l\",\
 },\
 [0xA8D5]={\
  direction=\"l\",\
 },\
 [0xA8D6]={\
  direction=\"l\",\
 },\
 [0xA8D7]={\
  direction=\"l\",\
 },\
 [0xA8D8]={\
  direction=\"l\",\
 },\
 [0xA8D9]={\
  direction=\"l\",\
 },\
 [0xA8E0]={\
  direction=\"nsm\",\
 },\
 [0xA8E1]={\
  direction=\"nsm\",\
 },\
 [0xA8E2]={\
  direction=\"nsm\",\
 },\
 [0xA8E3]={\
  direction=\"nsm\",\
 },\
 [0xA8E4]={\
  direction=\"nsm\",\
 },\
 [0xA8E5]={\
  direction=\"nsm\",\
 },\
 [0xA8E6]={\
  direction=\"nsm\",\
 },\
 [0xA8E7]={\
  direction=\"nsm\",\
 },\
 [0xA8E8]={\
  direction=\"nsm\",\
 },\
 [0xA8E9]={\
  direction=\"nsm\",\
 },\
 [0xA8EA]={\
  direction=\"nsm\",\
 },\
 [0xA8EB]={\
  direction=\"nsm\",\
 },\
 [0xA8EC]={\
  direction=\"nsm\",\
 },\
 [0xA8ED]={\
  direction=\"nsm\",\
 },\
 [0xA8EE]={\
  direction=\"nsm\",\
 },\
 [0xA8EF]={\
  direction=\"nsm\",\
 },\
 [0xA8F0]={\
  direction=\"nsm\",\
 },\
 [0xA8F1]={\
  direction=\"nsm\",\
 },\
 [0xA8F2]={\
  direction=\"l\",\
 },\
 [0xA8F3]={\
  direction=\"l\",\
 },\
 [0xA8F4]={\
  direction=\"l\",\
 },\
 [0xA8F5]={\
  direction=\"l\",\
 },\
 [0xA8F6]={\
  direction=\"l\",\
 },\
 [0xA8F7]={\
  direction=\"l\",\
 },\
 [0xA8F8]={\
  direction=\"l\",\
 },\
 [0xA8F9]={\
  direction=\"l\",\
 },\
 [0xA8FA]={\
  direction=\"l\",\
 },\
 [0xA8FB]={\
  direction=\"l\",\
 },\
 [0xA900]={\
  direction=\"l\",\
 },\
 [0xA901]={\
  direction=\"l\",\
 },\
 [0xA902]={\
  direction=\"l\",\
 },\
 [0xA903]={\
  direction=\"l\",\
 },\
 [0xA904]={\
  direction=\"l\",\
 },\
 [0xA905]={\
  direction=\"l\",\
 },\
 [0xA906]={\
  direction=\"l\",\
 },\
 [0xA907]={\
  direction=\"l\",\
 },\
 [0xA908]={\
  direction=\"l\",\
 },\
 [0xA909]={\
  direction=\"l\",\
 },\
 [0xA90A]={\
  direction=\"l\",\
 },\
 [0xA90B]={\
  direction=\"l\",\
 },\
 [0xA90C]={\
  direction=\"l\",\
 },\
 [0xA90D]={\
  direction=\"l\",\
 },\
 [0xA90E]={\
  direction=\"l\",\
 },\
 [0xA90F]={\
  direction=\"l\",\
 },\
 [0xA910]={\
  direction=\"l\",\
 },\
 [0xA911]={\
  direction=\"l\",\
 },\
 [0xA912]={\
  direction=\"l\",\
 },\
 [0xA913]={\
  direction=\"l\",\
 },\
 [0xA914]={\
  direction=\"l\",\
 },\
 [0xA915]={\
  direction=\"l\",\
 },\
 [0xA916]={\
  direction=\"l\",\
 },\
 [0xA917]={\
  direction=\"l\",\
 },\
 [0xA918]={\
  direction=\"l\",\
 },\
 [0xA919]={\
  direction=\"l\",\
 },\
 [0xA91A]={\
  direction=\"l\",\
 },\
 [0xA91B]={\
  direction=\"l\",\
 },\
 [0xA91C]={\
  direction=\"l\",\
 },\
 [0xA91D]={\
  direction=\"l\",\
 },\
 [0xA91E]={\
  direction=\"l\",\
 },\
 [0xA91F]={\
  direction=\"l\",\
 },\
 [0xA920]={\
  direction=\"l\",\
 },\
 [0xA921]={\
  direction=\"l\",\
 },\
 [0xA922]={\
  direction=\"l\",\
 },\
 [0xA923]={\
  direction=\"l\",\
 },\
 [0xA924]={\
  direction=\"l\",\
 },\
 [0xA925]={\
  direction=\"l\",\
 },\
 [0xA926]={\
  direction=\"nsm\",\
 },\
 [0xA927]={\
  direction=\"nsm\",\
 },\
 [0xA928]={\
  direction=\"nsm\",\
 },\
 [0xA929]={\
  direction=\"nsm\",\
 },\
 [0xA92A]={\
  direction=\"nsm\",\
 },\
 [0xA92B]={\
  direction=\"nsm\",\
 },\
 [0xA92C]={\
  direction=\"nsm\",\
 },\
 [0xA92D]={\
  direction=\"nsm\",\
 },\
 [0xA92E]={\
  direction=\"l\",\
 },\
 [0xA92F]={\
  direction=\"l\",\
 },\
 [0xA930]={\
  direction=\"l\",\
 },\
 [0xA931]={\
  direction=\"l\",\
 },\
 [0xA932]={\
  direction=\"l\",\
 },\
 [0xA933]={\
  direction=\"l\",\
 },\
 [0xA934]={\
  direction=\"l\",\
 },\
 [0xA935]={\
  direction=\"l\",\
 },\
 [0xA936]={\
  direction=\"l\",\
 },\
 [0xA937]={\
  direction=\"l\",\
 },\
 [0xA938]={\
  direction=\"l\",\
 },\
 [0xA939]={\
  direction=\"l\",\
 },\
 [0xA93A]={\
  direction=\"l\",\
 },\
 [0xA93B]={\
  direction=\"l\",\
 },\
 [0xA93C]={\
  direction=\"l\",\
 },\
 [0xA93D]={\
  direction=\"l\",\
 },\
 [0xA93E]={\
  direction=\"l\",\
 },\
 [0xA93F]={\
  direction=\"l\",\
 },\
 [0xA940]={\
  direction=\"l\",\
 },\
 [0xA941]={\
  direction=\"l\",\
 },\
 [0xA942]={\
  direction=\"l\",\
 },\
 [0xA943]={\
  direction=\"l\",\
 },\
 [0xA944]={\
  direction=\"l\",\
 },\
 [0xA945]={\
  direction=\"l\",\
 },\
 [0xA946]={\
  direction=\"l\",\
 },\
 [0xA947]={\
  direction=\"nsm\",\
 },\
 [0xA948]={\
  direction=\"nsm\",\
 },\
 [0xA949]={\
  direction=\"nsm\",\
 },\
 [0xA94A]={\
  direction=\"nsm\",\
 },\
 [0xA94B]={\
  direction=\"nsm\",\
 },\
 [0xA94C]={\
  direction=\"nsm\",\
 },\
 [0xA94D]={\
  direction=\"nsm\",\
 },\
 [0xA94E]={\
  direction=\"nsm\",\
 },\
 [0xA94F]={\
  direction=\"nsm\",\
 },\
 [0xA950]={\
  direction=\"nsm\",\
 },\
 [0xA951]={\
  direction=\"nsm\",\
 },\
 [0xA952]={\
  direction=\"l\",\
 },\
 [0xA953]={\
  direction=\"l\",\
 },\
 [0xA95F]={\
  direction=\"l\",\
 },\
 [0xA960]={\
  direction=\"l\",\
 },\
 [0xA961]={\
  direction=\"l\",\
 },\
 [0xA962]={\
  direction=\"l\",\
 },\
 [0xA963]={\
  direction=\"l\",\
 },\
 [0xA964]={\
  direction=\"l\",\
 },\
 [0xA965]={\
  direction=\"l\",\
 },\
 [0xA966]={\
  direction=\"l\",\
 },\
 [0xA967]={\
  direction=\"l\",\
 },\
 [0xA968]={\
  direction=\"l\",\
 },\
 [0xA969]={\
  direction=\"l\",\
 },\
 [0xA96A]={\
  direction=\"l\",\
 },\
 [0xA96B]={\
  direction=\"l\",\
 },\
 [0xA96C]={\
  direction=\"l\",\
 },\
 [0xA96D]={\
  direction=\"l\",\
 },\
 [0xA96E]={\
  direction=\"l\",\
 },\
 [0xA96F]={\
  direction=\"l\",\
 },\
 [0xA970]={\
  direction=\"l\",\
 },\
 [0xA971]={\
  direction=\"l\",\
 },\
 [0xA972]={\
  direction=\"l\",\
 },\
 [0xA973]={\
  direction=\"l\",\
 },\
 [0xA974]={\
  direction=\"l\",\
 },\
 [0xA975]={\
  direction=\"l\",\
 },\
 [0xA976]={\
  direction=\"l\",\
 },\
 [0xA977]={\
  direction=\"l\",\
 },\
 [0xA978]={\
  direction=\"l\",\
 },\
 [0xA979]={\
  direction=\"l\",\
 },\
 [0xA97A]={\
  direction=\"l\",\
 },\
 [0xA97B]={\
  direction=\"l\",\
 },\
 [0xA97C]={\
  direction=\"l\",\
 },\
 [0xA980]={\
  direction=\"nsm\",\
 },\
 [0xA981]={\
  direction=\"nsm\",\
 },\
 [0xA982]={\
  direction=\"nsm\",\
 },\
 [0xA983]={\
  direction=\"l\",\
 },\
 [0xA984]={\
  direction=\"l\",\
 },\
 [0xA985]={\
  direction=\"l\",\
 },\
 [0xA986]={\
  direction=\"l\",\
 },\
 [0xA987]={\
  direction=\"l\",\
 },\
 [0xA988]={\
  direction=\"l\",\
 },\
 [0xA989]={\
  direction=\"l\",\
 },\
 [0xA98A]={\
  direction=\"l\",\
 },\
 [0xA98B]={\
  direction=\"l\",\
 },\
 [0xA98C]={\
  direction=\"l\",\
 },\
 [0xA98D]={\
  direction=\"l\",\
 },\
 [0xA98E]={\
  direction=\"l\",\
 },\
 [0xA98F]={\
  direction=\"l\",\
 },\
 [0xA990]={\
  direction=\"l\",\
 },\
 [0xA991]={\
  direction=\"l\",\
 },\
 [0xA992]={\
  direction=\"l\",\
 },\
 [0xA993]={\
  direction=\"l\",\
 },\
 [0xA994]={\
  direction=\"l\",\
 },\
 [0xA995]={\
  direction=\"l\",\
 },\
 [0xA996]={\
  direction=\"l\",\
 },\
 [0xA997]={\
  direction=\"l\",\
 },\
 [0xA998]={\
  direction=\"l\",\
 },\
 [0xA999]={\
  direction=\"l\",\
 },\
 [0xA99A]={\
  direction=\"l\",\
 },\
 [0xA99B]={\
  direction=\"l\",\
 },\
 [0xA99C]={\
  direction=\"l\",\
 },\
 [0xA99D]={\
  direction=\"l\",\
 },\
 [0xA99E]={\
  direction=\"l\",\
 },\
 [0xA99F]={\
  direction=\"l\",\
 },\
 [0xA9A0]={\
  direction=\"l\",\
 },\
 [0xA9A1]={\
  direction=\"l\",\
 },\
 [0xA9A2]={\
  direction=\"l\",\
 },\
 [0xA9A3]={\
  direction=\"l\",\
 },\
 [0xA9A4]={\
  direction=\"l\",\
 },\
 [0xA9A5]={\
  direction=\"l\",\
 },\
 [0xA9A6]={\
  direction=\"l\",\
 },\
 [0xA9A7]={\
  direction=\"l\",\
 },\
 [0xA9A8]={\
  direction=\"l\",\
 },\
 [0xA9A9]={\
  direction=\"l\",\
 },\
 [0xA9AA]={\
  direction=\"l\",\
 },\
 [0xA9AB]={\
  direction=\"l\",\
 },\
 [0xA9AC]={\
  direction=\"l\",\
 },\
 [0xA9AD]={\
  direction=\"l\",\
 },\
 [0xA9AE]={\
  direction=\"l\",\
 },\
 [0xA9AF]={\
  direction=\"l\",\
 },\
 [0xA9B0]={\
  direction=\"l\",\
 },\
 [0xA9B1]={\
  direction=\"l\",\
 },\
 [0xA9B2]={\
  direction=\"l\",\
 },\
 [0xA9B3]={\
  direction=\"nsm\",\
 },\
 [0xA9B4]={\
  direction=\"l\",\
 },\
 [0xA9B5]={\
  direction=\"l\",\
 },\
 [0xA9B6]={\
  direction=\"nsm\",\
 },\
 [0xA9B7]={\
  direction=\"nsm\",\
 },\
 [0xA9B8]={\
  direction=\"nsm\",\
 },\
 [0xA9B9]={\
  direction=\"nsm\",\
 },\
 [0xA9BA]={\
  direction=\"l\",\
 },\
 [0xA9BB]={\
  direction=\"l\",\
 },\
 [0xA9BC]={\
  direction=\"nsm\",\
 },\
 [0xA9BD]={\
  direction=\"l\",\
 },\
 [0xA9BE]={\
  direction=\"l\",\
 },\
 [0xA9BF]={\
  direction=\"l\",\
 },\
 [0xA9C0]={\
  direction=\"l\",\
 },\
 [0xA9C1]={\
  direction=\"l\",\
 },\
 [0xA9C2]={\
  direction=\"l\",\
 },\
 [0xA9C3]={\
  direction=\"l\",\
 },\
 [0xA9C4]={\
  direction=\"l\",\
 },\
 [0xA9C5]={\
  direction=\"l\",\
 },\
 [0xA9C6]={\
  direction=\"l\",\
 },\
 [0xA9C7]={\
  direction=\"l\",\
 },\
 [0xA9C8]={\
  direction=\"l\",\
 },\
 [0xA9C9]={\
  direction=\"l\",\
 },\
 [0xA9CA]={\
  direction=\"l\",\
 },\
 [0xA9CB]={\
  direction=\"l\",\
 },\
 [0xA9CC]={\
  direction=\"l\",\
 },\
 [0xA9CD]={\
  direction=\"l\",\
 },\
 [0xA9CF]={\
  direction=\"l\",\
 },\
 [0xA9D0]={\
  direction=\"l\",\
 },\
 [0xA9D1]={\
  direction=\"l\",\
 },\
 [0xA9D2]={\
  direction=\"l\",\
 },\
 [0xA9D3]={\
  direction=\"l\",\
 },\
 [0xA9D4]={\
  direction=\"l\",\
 },\
 [0xA9D5]={\
  direction=\"l\",\
 },\
 [0xA9D6]={\
  direction=\"l\",\
 },\
 [0xA9D7]={\
  direction=\"l\",\
 },\
 [0xA9D8]={\
  direction=\"l\",\
 },\
 [0xA9D9]={\
  direction=\"l\",\
 },\
 [0xA9DE]={\
  direction=\"l\",\
 },\
 [0xA9DF]={\
  direction=\"l\",\
 },\
 [0xAA00]={\
  direction=\"l\",\
 },\
 [0xAA01]={\
  direction=\"l\",\
 },\
 [0xAA02]={\
  direction=\"l\",\
 },\
 [0xAA03]={\
  direction=\"l\",\
 },\
 [0xAA04]={\
  direction=\"l\",\
 },\
 [0xAA05]={\
  direction=\"l\",\
 },\
 [0xAA06]={\
  direction=\"l\",\
 },\
 [0xAA07]={\
  direction=\"l\",\
 },\
 [0xAA08]={\
  direction=\"l\",\
 },\
 [0xAA09]={\
  direction=\"l\",\
 },\
 [0xAA0A]={\
  direction=\"l\",\
 },\
 [0xAA0B]={\
  direction=\"l\",\
 },\
 [0xAA0C]={\
  direction=\"l\",\
 },\
 [0xAA0D]={\
  direction=\"l\",\
 },\
 [0xAA0E]={\
  direction=\"l\",\
 },\
 [0xAA0F]={\
  direction=\"l\",\
 },\
 [0xAA10]={\
  direction=\"l\",\
 },\
 [0xAA11]={\
  direction=\"l\",\
 },\
 [0xAA12]={\
  direction=\"l\",\
 },\
 [0xAA13]={\
  direction=\"l\",\
 },\
 [0xAA14]={\
  direction=\"l\",\
 },\
 [0xAA15]={\
  direction=\"l\",\
 },\
 [0xAA16]={\
  direction=\"l\",\
 },\
 [0xAA17]={\
  direction=\"l\",\
 },\
 [0xAA18]={\
  direction=\"l\",\
 },\
 [0xAA19]={\
  direction=\"l\",\
 },\
 [0xAA1A]={\
  direction=\"l\",\
 },\
 [0xAA1B]={\
  direction=\"l\",\
 },\
 [0xAA1C]={\
  direction=\"l\",\
 },\
 [0xAA1D]={\
  direction=\"l\",\
 },\
 [0xAA1E]={\
  direction=\"l\",\
 },\
 [0xAA1F]={\
  direction=\"l\",\
 },\
 [0xAA20]={\
  direction=\"l\",\
 },\
 [0xAA21]={\
  direction=\"l\",\
 },\
 [0xAA22]={\
  direction=\"l\",\
 },\
 [0xAA23]={\
  direction=\"l\",\
 },\
 [0xAA24]={\
  direction=\"l\",\
 },\
 [0xAA25]={\
  direction=\"l\",\
 },\
 [0xAA26]={\
  direction=\"l\",\
 },\
 [0xAA27]={\
  direction=\"l\",\
 },\
 [0xAA28]={\
  direction=\"l\",\
 },\
 [0xAA29]={\
  direction=\"nsm\",\
 },\
 [0xAA2A]={\
  direction=\"nsm\",\
 },\
 [0xAA2B]={\
  direction=\"nsm\",\
 },\
 [0xAA2C]={\
  direction=\"nsm\",\
 },\
 [0xAA2D]={\
  direction=\"nsm\",\
 },\
 [0xAA2E]={\
  direction=\"nsm\",\
 },\
 [0xAA2F]={\
  direction=\"l\",\
 },\
 [0xAA30]={\
  direction=\"l\",\
 },\
 [0xAA31]={\
  direction=\"nsm\",\
 },\
 [0xAA32]={\
  direction=\"nsm\",\
 },\
 [0xAA33]={\
  direction=\"l\",\
 },\
 [0xAA34]={\
  direction=\"l\",\
 },\
 [0xAA35]={\
  direction=\"nsm\",\
 },\
 [0xAA36]={\
  direction=\"nsm\",\
 },\
 [0xAA40]={\
  direction=\"l\",\
 },\
 [0xAA41]={\
  direction=\"l\",\
 },\
 [0xAA42]={\
  direction=\"l\",\
 },\
 [0xAA43]={\
  direction=\"nsm\",\
 },\
 [0xAA44]={\
  direction=\"l\",\
 },\
 [0xAA45]={\
  direction=\"l\",\
 },\
 [0xAA46]={\
  direction=\"l\",\
 },\
 [0xAA47]={\
  direction=\"l\",\
 },\
 [0xAA48]={\
  direction=\"l\",\
 },\
 [0xAA49]={\
  direction=\"l\",\
 },\
 [0xAA4A]={\
  direction=\"l\",\
 },\
 [0xAA4B]={\
  direction=\"l\",\
 },\
 [0xAA4C]={\
  direction=\"nsm\",\
 },\
 [0xAA4D]={\
  direction=\"l\",\
 },\
 [0xAA50]={\
  direction=\"l\",\
 },\
 [0xAA51]={\
  direction=\"l\",\
 },\
 [0xAA52]={\
  direction=\"l\",\
 },\
 [0xAA53]={\
  direction=\"l\",\
 },\
 [0xAA54]={\
  direction=\"l\",\
 },\
 [0xAA55]={\
  direction=\"l\",\
 },\
 [0xAA56]={\
  direction=\"l\",\
 },\
 [0xAA57]={\
  direction=\"l\",\
 },\
 [0xAA58]={\
  direction=\"l\",\
 },\
 [0xAA59]={\
  direction=\"l\",\
 },\
 [0xAA5C]={\
  direction=\"l\",\
 },\
 [0xAA5D]={\
  direction=\"l\",\
 },\
 [0xAA5E]={\
  direction=\"l\",\
 },\
 [0xAA5F]={\
  direction=\"l\",\
 },\
 [0xAA60]={\
  direction=\"l\",\
 },\
 [0xAA61]={\
  direction=\"l\",\
 },\
 [0xAA62]={\
  direction=\"l\",\
 },\
 [0xAA63]={\
  direction=\"l\",\
 },\
 [0xAA64]={\
  direction=\"l\",\
 },\
 [0xAA65]={\
  direction=\"l\",\
 },\
 [0xAA66]={\
  direction=\"l\",\
 },\
 [0xAA67]={\
  direction=\"l\",\
 },\
 [0xAA68]={\
  direction=\"l\",\
 },\
 [0xAA69]={\
  direction=\"l\",\
 },\
 [0xAA6A]={\
  direction=\"l\",\
 },\
 [0xAA6B]={\
  direction=\"l\",\
 },\
 [0xAA6C]={\
  direction=\"l\",\
 },\
 [0xAA6D]={\
  direction=\"l\",\
 },\
 [0xAA6E]={\
  direction=\"l\",\
 },\
 [0xAA6F]={\
  direction=\"l\",\
 },\
 [0xAA70]={\
  direction=\"l\",\
 },\
 [0xAA71]={\
  direction=\"l\",\
 },\
 [0xAA72]={\
  direction=\"l\",\
 },\
 [0xAA73]={\
  direction=\"l\",\
 },\
 [0xAA74]={\
  direction=\"l\",\
 },\
 [0xAA75]={\
  direction=\"l\",\
 },\
 [0xAA76]={\
  direction=\"l\",\
 },\
 [0xAA77]={\
  direction=\"l\",\
 },\
 [0xAA78]={\
  direction=\"l\",\
 },\
 [0xAA79]={\
  direction=\"l\",\
 },\
 [0xAA7A]={\
  direction=\"l\",\
 },\
 [0xAA7B]={\
  direction=\"l\",\
 },\
 [0xAA80]={\
  direction=\"l\",\
 },\
 [0xAA81]={\
  direction=\"l\",\
 },\
 [0xAA82]={\
  direction=\"l\",\
 },\
 [0xAA83]={\
  direction=\"l\",\
 },\
 [0xAA84]={\
  direction=\"l\",\
 },\
 [0xAA85]={\
  direction=\"l\",\
 },\
 [0xAA86]={\
  direction=\"l\",\
 },\
 [0xAA87]={\
  direction=\"l\",\
 },\
 [0xAA88]={\
  direction=\"l\",\
 },\
 [0xAA89]={\
  direction=\"l\",\
 },\
 [0xAA8A]={\
  direction=\"l\",\
 },\
 [0xAA8B]={\
  direction=\"l\",\
 },\
 [0xAA8C]={\
  direction=\"l\",\
 },\
 [0xAA8D]={\
  direction=\"l\",\
 },\
 [0xAA8E]={\
  direction=\"l\",\
 },\
 [0xAA8F]={\
  direction=\"l\",\
 },\
 [0xAA90]={\
  direction=\"l\",\
 },\
 [0xAA91]={\
  direction=\"l\",\
 },\
 [0xAA92]={\
  direction=\"l\",\
 },\
 [0xAA93]={\
  direction=\"l\",\
 },\
 [0xAA94]={\
  direction=\"l\",\
 },\
 [0xAA95]={\
  direction=\"l\",\
 },\
 [0xAA96]={\
  direction=\"l\",\
 },\
 [0xAA97]={\
  direction=\"l\",\
 },\
 [0xAA98]={\
  direction=\"l\",\
 },\
 [0xAA99]={\
  direction=\"l\",\
 },\
 [0xAA9A]={\
  direction=\"l\",\
 },\
 [0xAA9B]={\
  direction=\"l\",\
 },\
 [0xAA9C]={\
  direction=\"l\",\
 },\
 [0xAA9D]={\
  direction=\"l\",\
 },\
 [0xAA9E]={\
  direction=\"l\",\
 },\
 [0xAA9F]={\
  direction=\"l\",\
 },\
 [0xAAA0]={\
  direction=\"l\",\
 },\
 [0xAAA1]={\
  direction=\"l\",\
 },\
 [0xAAA2]={\
  direction=\"l\",\
 },\
 [0xAAA3]={\
  direction=\"l\",\
 },\
 [0xAAA4]={\
  direction=\"l\",\
 },\
 [0xAAA5]={\
  direction=\"l\",\
 },\
 [0xAAA6]={\
  direction=\"l\",\
 },\
 [0xAAA7]={\
  direction=\"l\",\
 },\
 [0xAAA8]={\
  direction=\"l\",\
 },\
 [0xAAA9]={\
  direction=\"l\",\
 },\
 [0xAAAA]={\
  direction=\"l\",\
 },\
 [0xAAAB]={\
  direction=\"l\",\
 },\
 [0xAAAC]={\
  direction=\"l\",\
 },\
 [0xAAAD]={\
  direction=\"l\",\
 },\
 [0xAAAE]={\
  direction=\"l\",\
 },\
 [0xAAAF]={\
  direction=\"l\",\
 },\
 [0xAAB0]={\
  direction=\"nsm\",\
 },\
 [0xAAB1]={\
  direction=\"l\",\
 },\
 [0xAAB2]={\
  direction=\"nsm\",\
 },\
 [0xAAB3]={\
  direction=\"nsm\",\
 },\
 [0xAAB4]={\
  direction=\"nsm\",\
 },\
 [0xAAB5]={\
  direction=\"l\",\
 },\
 [0xAAB6]={\
  direction=\"l\",\
 },\
 [0xAAB7]={\
  direction=\"nsm\",\
 },\
 [0xAAB8]={\
  direction=\"nsm\",\
 },\
 [0xAAB9]={\
  direction=\"l\",\
 },\
 [0xAABA]={\
  direction=\"l\",\
 },\
 [0xAABB]={\
  direction=\"l\",\
 },\
 [0xAABC]={\
  direction=\"l\",\
 },\
 [0xAABD]={\
  direction=\"l\",\
 },\
 [0xAABE]={\
  direction=\"nsm\",\
 },\
 [0xAABF]={\
  direction=\"nsm\",\
 },\
 [0xAAC0]={\
  direction=\"l\",\
 },\
 [0xAAC1]={\
  direction=\"nsm\",\
 },\
 [0xAAC2]={\
  direction=\"l\",\
 },\
 [0xAADB]={\
  direction=\"l\",\
 },\
 [0xAADC]={\
  direction=\"l\",\
 },\
 [0xAADD]={\
  direction=\"l\",\
 },\
 [0xAADE]={\
  direction=\"l\",\
 },\
 [0xAADF]={\
  direction=\"l\",\
 },\
 [0xAAE0]={\
  direction=\"l\",\
 },\
 [0xAAE1]={\
  direction=\"l\",\
 },\
 [0xAAE2]={\
  direction=\"l\",\
 },\
 [0xAAE3]={\
  direction=\"l\",\
 },\
 [0xAAE4]={\
  direction=\"l\",\
 },\
 [0xAAE5]={\
  direction=\"l\",\
 },\
 [0xAAE6]={\
  direction=\"l\",\
 },\
 [0xAAE7]={\
  direction=\"l\",\
 },\
 [0xAAE8]={\
  direction=\"l\",\
 },\
 [0xAAE9]={\
  direction=\"l\",\
 },\
 [0xAAEA]={\
  direction=\"l\",\
 },\
 [0xAAEB]={\
  direction=\"l\",\
 },\
 [0xAAEC]={\
  direction=\"nsm\",\
 },\
 [0xAAED]={\
  direction=\"nsm\",\
 },\
 [0xAAEE]={\
  direction=\"l\",\
 },\
 [0xAAEF]={\
  direction=\"l\",\
 },\
 [0xAAF0]={\
  direction=\"l\",\
 },\
 [0xAAF1]={\
  direction=\"l\",\
 },\
 [0xAAF2]={\
  direction=\"l\",\
 },\
 [0xAAF3]={\
  direction=\"l\",\
 },\
 [0xAAF4]={\
  direction=\"l\",\
 },\
 [0xAAF5]={\
  direction=\"l\",\
 },\
 [0xAAF6]={\
  direction=\"nsm\",\
 },\
 [0xAB01]={\
  direction=\"l\",\
 },\
 [0xAB02]={\
  direction=\"l\",\
 },\
 [0xAB03]={\
  direction=\"l\",\
 },\
 [0xAB04]={\
  direction=\"l\",\
 },\
 [0xAB05]={\
  direction=\"l\",\
 },\
 [0xAB06]={\
  direction=\"l\",\
 },\
 [0xAB09]={\
  direction=\"l\",\
 },\
 [0xAB0A]={\
  direction=\"l\",\
 },\
 [0xAB0B]={\
  direction=\"l\",\
 },\
 [0xAB0C]={\
  direction=\"l\",\
 },\
 [0xAB0D]={\
  direction=\"l\",\
 },\
 [0xAB0E]={\
  direction=\"l\",\
 },\
 [0xAB11]={\
  direction=\"l\",\
 },\
 [0xAB12]={\
  direction=\"l\",\
 },\
 [0xAB13]={\
  direction=\"l\",\
 },\
 [0xAB14]={\
  direction=\"l\",\
 },\
 [0xAB15]={\
  direction=\"l\",\
 },\
 [0xAB16]={\
  direction=\"l\",\
 },\
 [0xAB20]={\
  direction=\"l\",\
 },\
 [0xAB21]={\
  direction=\"l\",\
 },\
 [0xAB22]={\
  direction=\"l\",\
 },\
 [0xAB23]={\
  direction=\"l\",\
 },\
 [0xAB24]={\
  direction=\"l\",\
 },\
 [0xAB25]={\
  direction=\"l\",\
 },\
 [0xAB26]={\
  direction=\"l\",\
 },\
 [0xAB28]={\
  direction=\"l\",\
 },\
 [0xAB29]={\
  direction=\"l\",\
 },\
 [0xAB2A]={\
  direction=\"l\",\
 },\
 [0xAB2B]={\
  direction=\"l\",\
 },\
 [0xAB2C]={\
  direction=\"l\",\
 },\
 [0xAB2D]={\
  direction=\"l\",\
 },\
 [0xAB2E]={\
  direction=\"l\",\
 },\
 [0xABC0]={\
  direction=\"l\",\
 },\
 [0xABC1]={\
  direction=\"l\",\
 },\
 [0xABC2]={\
  direction=\"l\",\
 },\
 [0xABC3]={\
  direction=\"l\",\
 },\
 [0xABC4]={\
  direction=\"l\",\
 },\
 [0xABC5]={\
  direction=\"l\",\
 },\
 [0xABC6]={\
  direction=\"l\",\
 },\
 [0xABC7]={\
  direction=\"l\",\
 },\
 [0xABC8]={\
  direction=\"l\",\
 },\
 [0xABC9]={\
  direction=\"l\",\
 },\
 [0xABCA]={\
  direction=\"l\",\
 },\
 [0xABCB]={\
  direction=\"l\",\
 },\
 [0xABCC]={\
  direction=\"l\",\
 },\
 [0xABCD]={\
  direction=\"l\",\
 },\
 [0xABCE]={\
  direction=\"l\",\
 },\
 [0xABCF]={\
  direction=\"l\",\
 },\
 [0xABD0]={\
  direction=\"l\",\
 },\
 [0xABD1]={\
  direction=\"l\",\
 },\
 [0xABD2]={\
  direction=\"l\",\
 },\
 [0xABD3]={\
  direction=\"l\",\
 },\
 [0xABD4]={\
  direction=\"l\",\
 },\
 [0xABD5]={\
  direction=\"l\",\
 },\
 [0xABD6]={\
  direction=\"l\",\
 },\
 [0xABD7]={\
  direction=\"l\",\
 },\
 [0xABD8]={\
  direction=\"l\",\
 },\
 [0xABD9]={\
  direction=\"l\",\
 },\
 [0xABDA]={\
  direction=\"l\",\
 },\
 [0xABDB]={\
  direction=\"l\",\
 },\
 [0xABDC]={\
  direction=\"l\",\
 },\
 [0xABDD]={\
  direction=\"l\",\
 },\
 [0xABDE]={\
  direction=\"l\",\
 },\
 [0xABDF]={\
  direction=\"l\",\
 },\
 [0xABE0]={\
  direction=\"l\",\
 },\
 [0xABE1]={\
  direction=\"l\",\
 },\
 [0xABE2]={\
  direction=\"l\",\
 },\
 [0xABE3]={\
  direction=\"l\",\
 },\
 [0xABE4]={\
  direction=\"l\",\
 },\
 [0xABE5]={\
  direction=\"nsm\",\
 },\
 [0xABE6]={\
  direction=\"l\",\
 },\
 [0xABE7]={\
  direction=\"l\",\
 },\
 [0xABE8]={\
  direction=\"nsm\",\
 },\
 [0xABE9]={\
  direction=\"l\",\
 },\
 [0xABEA]={\
  direction=\"l\",\
 },\
 [0xABEB]={\
  direction=\"l\",\
 },\
 [0xABEC]={\
  direction=\"l\",\
 },\
 [0xABED]={\
  direction=\"nsm\",\
 },\
 [0xABF0]={\
  direction=\"l\",\
 },\
 [0xABF1]={\
  direction=\"l\",\
 },\
 [0xABF2]={\
  direction=\"l\",\
 },\
 [0xABF3]={\
  direction=\"l\",\
 },\
 [0xABF4]={\
  direction=\"l\",\
 },\
 [0xABF5]={\
  direction=\"l\",\
 },\
 [0xABF6]={\
  direction=\"l\",\
 },\
 [0xABF7]={\
  direction=\"l\",\
 },\
 [0xABF8]={\
  direction=\"l\",\
 },\
 [0xABF9]={\
  direction=\"l\",\
 },\
 [0xD7B0]={\
  direction=\"l\",\
 },\
 [0xD7B1]={\
  direction=\"l\",\
 },\
 [0xD7B2]={\
  direction=\"l\",\
 },\
 [0xD7B3]={\
  direction=\"l\",\
 },\
 [0xD7B4]={\
  direction=\"l\",\
 },\
 [0xD7B5]={\
  direction=\"l\",\
 },\
 [0xD7B6]={\
  direction=\"l\",\
 },\
 [0xD7B7]={\
  direction=\"l\",\
 },\
 [0xD7B8]={\
  direction=\"l\",\
 },\
 [0xD7B9]={\
  direction=\"l\",\
 },\
 [0xD7BA]={\
  direction=\"l\",\
 },\
 [0xD7BB]={\
  direction=\"l\",\
 },\
 [0xD7BC]={\
  direction=\"l\",\
 },\
 [0xD7BD]={\
  direction=\"l\",\
 },\
 [0xD7BE]={\
  direction=\"l\",\
 },\
 [0xD7BF]={\
  direction=\"l\",\
 },\
 [0xD7C0]={\
  direction=\"l\",\
 },\
 [0xD7C1]={\
  direction=\"l\",\
 },\
 [0xD7C2]={\
  direction=\"l\",\
 },\
 [0xD7C3]={\
  direction=\"l\",\
 },\
 [0xD7C4]={\
  direction=\"l\",\
 },\
 [0xD7C5]={\
  direction=\"l\",\
 },\
 [0xD7C6]={\
  direction=\"l\",\
 },\
 [0xD7CB]={\
  direction=\"l\",\
 },\
 [0xD7CC]={\
  direction=\"l\",\
 },\
 [0xD7CD]={\
  direction=\"l\",\
 },\
 [0xD7CE]={\
  direction=\"l\",\
 },\
 [0xD7CF]={\
  direction=\"l\",\
 },\
 [0xD7D0]={\
  direction=\"l\",\
 },\
 [0xD7D1]={\
  direction=\"l\",\
 },\
 [0xD7D2]={\
  direction=\"l\",\
 },\
 [0xD7D3]={\
  direction=\"l\",\
 },\
 [0xD7D4]={\
  direction=\"l\",\
 },\
 [0xD7D5]={\
  direction=\"l\",\
 },\
 [0xD7D6]={\
  direction=\"l\",\
 },\
 [0xD7D7]={\
  direction=\"l\",\
 },\
 [0xD7D8]={\
  direction=\"l\",\
 },\
 [0xD7D9]={\
  direction=\"l\",\
 },\
 [0xD7DA]={\
  direction=\"l\",\
 },\
 [0xD7DB]={\
  direction=\"l\",\
 },\
 [0xD7DC]={\
  direction=\"l\",\
 },\
 [0xD7DD]={\
  direction=\"l\",\
 },\
 [0xD7DE]={\
  direction=\"l\",\
 },\
 [0xD7DF]={\
  direction=\"l\",\
 },\
 [0xD7E0]={\
  direction=\"l\",\
 },\
 [0xD7E1]={\
  direction=\"l\",\
 },\
 [0xD7E2]={\
  direction=\"l\",\
 },\
 [0xD7E3]={\
  direction=\"l\",\
 },\
 [0xD7E4]={\
  direction=\"l\",\
 },\
 [0xD7E5]={\
  direction=\"l\",\
 },\
 [0xD7E6]={\
  direction=\"l\",\
 },\
 [0xD7E7]={\
  direction=\"l\",\
 },\
 [0xD7E8]={\
  direction=\"l\",\
 },\
 [0xD7E9]={\
  direction=\"l\",\
 },\
 [0xD7EA]={\
  direction=\"l\",\
 },\
 [0xD7EB]={\
  direction=\"l\",\
 },\
 [0xD7EC]={\
  direction=\"l\",\
 },\
 [0xD7ED]={\
  direction=\"l\",\
 },\
 [0xD7EE]={\
  direction=\"l\",\
 },\
 [0xD7EF]={\
  direction=\"l\",\
 },\
 [0xD7F0]={\
  direction=\"l\",\
 },\
 [0xD7F1]={\
  direction=\"l\",\
 },\
 [0xD7F2]={\
  direction=\"l\",\
 },\
 [0xD7F3]={\
  direction=\"l\",\
 },\
 [0xD7F4]={\
  direction=\"l\",\
 },\
 [0xD7F5]={\
  direction=\"l\",\
 },\
 [0xD7F6]={\
  direction=\"l\",\
 },\
 [0xD7F7]={\
  direction=\"l\",\
 },\
 [0xD7F8]={\
  direction=\"l\",\
 },\
 [0xD7F9]={\
  direction=\"l\",\
 },\
 [0xD7FA]={\
  direction=\"l\",\
 },\
 [0xD7FB]={\
  direction=\"l\",\
 },\
 [0xD800]={\
  direction=\"l\",\
 },\
 [0xDB7F]={\
  direction=\"l\",\
 },\
 [0xDB80]={\
  direction=\"l\",\
 },\
 [0xDBFF]={\
  direction=\"l\",\
 },\
 [0xDC00]={\
  direction=\"l\",\
 },\
 [0xDFFF]={\
  direction=\"l\",\
 },\
 [0xE000]={\
  direction=\"l\",\
 },\
 [0xF8FF]={\
  direction=\"l\",\
 },\
 [0xF900]={\
  direction=\"l\",\
 },\
 [0xF901]={\
  direction=\"l\",\
 },\
 [0xF902]={\
  direction=\"l\",\
 },\
 [0xF903]={\
  direction=\"l\",\
 },\
 [0xF904]={\
  direction=\"l\",\
 },\
 [0xF905]={\
  direction=\"l\",\
 },\
 [0xF906]={\
  direction=\"l\",\
 },\
 [0xF907]={\
  direction=\"l\",\
 },\
 [0xF908]={\
  direction=\"l\",\
 },\
 [0xF909]={\
  direction=\"l\",\
 },\
 [0xF90A]={\
  direction=\"l\",\
 },\
 [0xF90B]={\
  direction=\"l\",\
 },\
 [0xF90C]={\
  direction=\"l\",\
 },\
 [0xF90D]={\
  direction=\"l\",\
 },\
 [0xF90E]={\
  direction=\"l\",\
 },\
 [0xF90F]={\
  direction=\"l\",\
 },\
 [0xF910]={\
  direction=\"l\",\
 },\
 [0xF911]={\
  direction=\"l\",\
 },\
 [0xF912]={\
  direction=\"l\",\
 },\
 [0xF913]={\
  direction=\"l\",\
 },\
 [0xF914]={\
  direction=\"l\",\
 },\
 [0xF915]={\
  direction=\"l\",\
 },\
 [0xF916]={\
  direction=\"l\",\
 },\
 [0xF917]={\
  direction=\"l\",\
 },\
 [0xF918]={\
  direction=\"l\",\
 },\
 [0xF919]={\
  direction=\"l\",\
 },\
 [0xF91A]={\
  direction=\"l\",\
 },\
 [0xF91B]={\
  direction=\"l\",\
 },\
 [0xF91C]={\
  direction=\"l\",\
 },\
 [0xF91D]={\
  direction=\"l\",\
 },\
 [0xF91E]={\
  direction=\"l\",\
 },\
 [0xF91F]={\
  direction=\"l\",\
 },\
 [0xF920]={\
  direction=\"l\",\
 },\
 [0xF921]={\
  direction=\"l\",\
 },\
 [0xF922]={\
  direction=\"l\",\
 },\
 [0xF923]={\
  direction=\"l\",\
 },\
 [0xF924]={\
  direction=\"l\",\
 },\
 [0xF925]={\
  direction=\"l\",\
 },\
 [0xF926]={\
  direction=\"l\",\
 },\
 [0xF927]={\
  direction=\"l\",\
 },\
 [0xF928]={\
  direction=\"l\",\
 },\
 [0xF929]={\
  direction=\"l\",\
 },\
 [0xF92A]={\
  direction=\"l\",\
 },\
 [0xF92B]={\
  direction=\"l\",\
 },\
 [0xF92C]={\
  direction=\"l\",\
 },\
 [0xF92D]={\
  direction=\"l\",\
 },\
 [0xF92E]={\
  direction=\"l\",\
 },\
 [0xF92F]={\
  direction=\"l\",\
 },\
 [0xF930]={\
  direction=\"l\",\
 },\
 [0xF931]={\
  direction=\"l\",\
 },\
 [0xF932]={\
  direction=\"l\",\
 },\
 [0xF933]={\
  direction=\"l\",\
 },\
 [0xF934]={\
  direction=\"l\",\
 },\
 [0xF935]={\
  direction=\"l\",\
 },\
 [0xF936]={\
  direction=\"l\",\
 },\
 [0xF937]={\
  direction=\"l\",\
 },\
 [0xF938]={\
  direction=\"l\",\
 },\
 [0xF939]={\
  direction=\"l\",\
 },\
 [0xF93A]={\
  direction=\"l\",\
 },\
 [0xF93B]={\
  direction=\"l\",\
 },\
 [0xF93C]={\
  direction=\"l\",\
 },\
 [0xF93D]={\
  direction=\"l\",\
 },\
 [0xF93E]={\
  direction=\"l\",\
 },\
 [0xF93F]={\
  direction=\"l\",\
 },\
 [0xF940]={\
  direction=\"l\",\
 },\
 [0xF941]={\
  direction=\"l\",\
 },\
 [0xF942]={\
  direction=\"l\",\
 },\
 [0xF943]={\
  direction=\"l\",\
 },\
 [0xF944]={\
  direction=\"l\",\
 },\
 [0xF945]={\
  direction=\"l\",\
 },\
 [0xF946]={\
  direction=\"l\",\
 },\
 [0xF947]={\
  direction=\"l\",\
 },\
 [0xF948]={\
  direction=\"l\",\
 },\
 [0xF949]={\
  direction=\"l\",\
 },\
 [0xF94A]={\
  direction=\"l\",\
 },\
 [0xF94B]={\
  direction=\"l\",\
 },\
 [0xF94C]={\
  direction=\"l\",\
 },\
 [0xF94D]={\
  direction=\"l\",\
 },\
 [0xF94E]={\
  direction=\"l\",\
 },\
 [0xF94F]={\
  direction=\"l\",\
 },\
 [0xF950]={\
  direction=\"l\",\
 },\
 [0xF951]={\
  direction=\"l\",\
 },\
 [0xF952]={\
  direction=\"l\",\
 },\
 [0xF953]={\
  direction=\"l\",\
 },\
 [0xF954]={\
  direction=\"l\",\
 },\
 [0xF955]={\
  direction=\"l\",\
 },\
 [0xF956]={\
  direction=\"l\",\
 },\
 [0xF957]={\
  direction=\"l\",\
 },\
 [0xF958]={\
  direction=\"l\",\
 },\
 [0xF959]={\
  direction=\"l\",\
 },\
 [0xF95A]={\
  direction=\"l\",\
 },\
 [0xF95B]={\
  direction=\"l\",\
 },\
 [0xF95C]={\
  direction=\"l\",\
 },\
 [0xF95D]={\
  direction=\"l\",\
 },\
 [0xF95E]={\
  direction=\"l\",\
 },\
 [0xF95F]={\
  direction=\"l\",\
 },\
 [0xF960]={\
  direction=\"l\",\
 },\
 [0xF961]={\
  direction=\"l\",\
 },\
 [0xF962]={\
  direction=\"l\",\
 },\
 [0xF963]={\
  direction=\"l\",\
 },\
 [0xF964]={\
  direction=\"l\",\
 },\
 [0xF965]={\
  direction=\"l\",\
 },\
 [0xF966]={\
  direction=\"l\",\
 },\
 [0xF967]={\
  direction=\"l\",\
 },\
 [0xF968]={\
  direction=\"l\",\
 },\
 [0xF969]={\
  direction=\"l\",\
 },\
 [0xF96A]={\
  direction=\"l\",\
 },\
 [0xF96B]={\
  direction=\"l\",\
 },\
 [0xF96C]={\
  direction=\"l\",\
 },\
 [0xF96D]={\
  direction=\"l\",\
 },\
 [0xF96E]={\
  direction=\"l\",\
 },\
 [0xF96F]={\
  direction=\"l\",\
 },\
 [0xF970]={\
  direction=\"l\",\
 },\
 [0xF971]={\
  direction=\"l\",\
 },\
 [0xF972]={\
  direction=\"l\",\
 },\
 [0xF973]={\
  direction=\"l\",\
 },\
 [0xF974]={\
  direction=\"l\",\
 },\
 [0xF975]={\
  direction=\"l\",\
 },\
 [0xF976]={\
  direction=\"l\",\
 },\
 [0xF977]={\
  direction=\"l\",\
 },\
 [0xF978]={\
  direction=\"l\",\
 },\
 [0xF979]={\
  direction=\"l\",\
 },\
 [0xF97A]={\
  direction=\"l\",\
 },\
 [0xF97B]={\
  direction=\"l\",\
 },\
 [0xF97C]={\
  direction=\"l\",\
 },\
 [0xF97D]={\
  direction=\"l\",\
 },\
 [0xF97E]={\
  direction=\"l\",\
 },\
 [0xF97F]={\
  direction=\"l\",\
 },\
 [0xF980]={\
  direction=\"l\",\
 },\
 [0xF981]={\
  direction=\"l\",\
 },\
 [0xF982]={\
  direction=\"l\",\
 },\
 [0xF983]={\
  direction=\"l\",\
 },\
 [0xF984]={\
  direction=\"l\",\
 },\
 [0xF985]={\
  direction=\"l\",\
 },\
 [0xF986]={\
  direction=\"l\",\
 },\
 [0xF987]={\
  direction=\"l\",\
 },\
 [0xF988]={\
  direction=\"l\",\
 },\
 [0xF989]={\
  direction=\"l\",\
 },\
 [0xF98A]={\
  direction=\"l\",\
 },\
 [0xF98B]={\
  direction=\"l\",\
 },\
 [0xF98C]={\
  direction=\"l\",\
 },\
 [0xF98D]={\
  direction=\"l\",\
 },\
 [0xF98E]={\
  direction=\"l\",\
 },\
 [0xF98F]={\
  direction=\"l\",\
 },\
 [0xF990]={\
  direction=\"l\",\
 },\
 [0xF991]={\
  direction=\"l\",\
 },\
 [0xF992]={\
  direction=\"l\",\
 },\
 [0xF993]={\
  direction=\"l\",\
 },\
 [0xF994]={\
  direction=\"l\",\
 },\
 [0xF995]={\
  direction=\"l\",\
 },\
 [0xF996]={\
  direction=\"l\",\
 },\
 [0xF997]={\
  direction=\"l\",\
 },\
 [0xF998]={\
  direction=\"l\",\
 },\
 [0xF999]={\
  direction=\"l\",\
 },\
 [0xF99A]={\
  direction=\"l\",\
 },\
 [0xF99B]={\
  direction=\"l\",\
 },\
 [0xF99C]={\
  direction=\"l\",\
 },\
 [0xF99D]={\
  direction=\"l\",\
 },\
 [0xF99E]={\
  direction=\"l\",\
 },\
 [0xF99F]={\
  direction=\"l\",\
 },\
 [0xF9A0]={\
  direction=\"l\",\
 },\
 [0xF9A1]={\
  direction=\"l\",\
 },\
 [0xF9A2]={\
  direction=\"l\",\
 },\
 [0xF9A3]={\
  direction=\"l\",\
 },\
 [0xF9A4]={\
  direction=\"l\",\
 },\
 [0xF9A5]={\
  direction=\"l\",\
 },\
 [0xF9A6]={\
  direction=\"l\",\
 },\
 [0xF9A7]={\
  direction=\"l\",\
 },\
 [0xF9A8]={\
  direction=\"l\",\
 },\
 [0xF9A9]={\
  direction=\"l\",\
 },\
 [0xF9AA]={\
  direction=\"l\",\
 },\
 [0xF9AB]={\
  direction=\"l\",\
 },\
 [0xF9AC]={\
  direction=\"l\",\
 },\
 [0xF9AD]={\
  direction=\"l\",\
 },\
 [0xF9AE]={\
  direction=\"l\",\
 },\
 [0xF9AF]={\
  direction=\"l\",\
 },\
 [0xF9B0]={\
  direction=\"l\",\
 },\
 [0xF9B1]={\
  direction=\"l\",\
 },\
 [0xF9B2]={\
  direction=\"l\",\
 },\
 [0xF9B3]={\
  direction=\"l\",\
 },\
 [0xF9B4]={\
  direction=\"l\",\
 },\
 [0xF9B5]={\
  direction=\"l\",\
 },\
 [0xF9B6]={\
  direction=\"l\",\
 },\
 [0xF9B7]={\
  direction=\"l\",\
 },\
 [0xF9B8]={\
  direction=\"l\",\
 },\
 [0xF9B9]={\
  direction=\"l\",\
 },\
 [0xF9BA]={\
  direction=\"l\",\
 },\
 [0xF9BB]={\
  direction=\"l\",\
 },\
 [0xF9BC]={\
  direction=\"l\",\
 },\
 [0xF9BD]={\
  direction=\"l\",\
 },\
 [0xF9BE]={\
  direction=\"l\",\
 },\
 [0xF9BF]={\
  direction=\"l\",\
 },\
 [0xF9C0]={\
  direction=\"l\",\
 },\
 [0xF9C1]={\
  direction=\"l\",\
 },\
 [0xF9C2]={\
  direction=\"l\",\
 },\
 [0xF9C3]={\
  direction=\"l\",\
 },\
 [0xF9C4]={\
  direction=\"l\",\
 },\
 [0xF9C5]={\
  direction=\"l\",\
 },\
 [0xF9C6]={\
  direction=\"l\",\
 },\
 [0xF9C7]={\
  direction=\"l\",\
 },\
 [0xF9C8]={\
  direction=\"l\",\
 },\
 [0xF9C9]={\
  direction=\"l\",\
 },\
 [0xF9CA]={\
  direction=\"l\",\
 },\
 [0xF9CB]={\
  direction=\"l\",\
 },\
 [0xF9CC]={\
  direction=\"l\",\
 },\
 [0xF9CD]={\
  direction=\"l\",\
 },\
 [0xF9CE]={\
  direction=\"l\",\
 },\
 [0xF9CF]={\
  direction=\"l\",\
 },\
 [0xF9D0]={\
  direction=\"l\",\
 },\
 [0xF9D1]={\
  direction=\"l\",\
 },\
 [0xF9D2]={\
  direction=\"l\",\
 },\
 [0xF9D3]={\
  direction=\"l\",\
 },\
 [0xF9D4]={\
  direction=\"l\",\
 },\
 [0xF9D5]={\
  direction=\"l\",\
 },\
 [0xF9D6]={\
  direction=\"l\",\
 },\
 [0xF9D7]={\
  direction=\"l\",\
 },\
 [0xF9D8]={\
  direction=\"l\",\
 },\
 [0xF9D9]={\
  direction=\"l\",\
 },\
 [0xF9DA]={\
  direction=\"l\",\
 },\
 [0xF9DB]={\
  direction=\"l\",\
 },\
 [0xF9DC]={\
  direction=\"l\",\
 },\
 [0xF9DD]={\
  direction=\"l\",\
 },\
 [0xF9DE]={\
  direction=\"l\",\
 },\
 [0xF9DF]={\
  direction=\"l\",\
 },\
 [0xF9E0]={\
  direction=\"l\",\
 },\
 [0xF9E1]={\
  direction=\"l\",\
 },\
 [0xF9E2]={\
  direction=\"l\",\
 },\
 [0xF9E3]={\
  direction=\"l\",\
 },\
 [0xF9E4]={\
  direction=\"l\",\
 },\
 [0xF9E5]={\
  direction=\"l\",\
 },\
 [0xF9E6]={\
  direction=\"l\",\
 },\
 [0xF9E7]={\
  direction=\"l\",\
 },\
 [0xF9E8]={\
  direction=\"l\",\
 },\
 [0xF9E9]={\
  direction=\"l\",\
 },\
 [0xF9EA]={\
  direction=\"l\",\
 },\
 [0xF9EB]={\
  direction=\"l\",\
 },\
 [0xF9EC]={\
  direction=\"l\",\
 },\
 [0xF9ED]={\
  direction=\"l\",\
 },\
 [0xF9EE]={\
  direction=\"l\",\
 },\
 [0xF9EF]={\
  direction=\"l\",\
 },\
 [0xF9F0]={\
  direction=\"l\",\
 },\
 [0xF9F1]={\
  direction=\"l\",\
 },\
 [0xF9F2]={\
  direction=\"l\",\
 },\
 [0xF9F3]={\
  direction=\"l\",\
 },\
 [0xF9F4]={\
  direction=\"l\",\
 },\
 [0xF9F5]={\
  direction=\"l\",\
 },\
 [0xF9F6]={\
  direction=\"l\",\
 },\
 [0xF9F7]={\
  direction=\"l\",\
 },\
 [0xF9F8]={\
  direction=\"l\",\
 },\
 [0xF9F9]={\
  direction=\"l\",\
 },\
 [0xF9FA]={\
  direction=\"l\",\
 },\
 [0xF9FB]={\
  direction=\"l\",\
 },\
 [0xF9FC]={\
  direction=\"l\",\
 },\
 [0xF9FD]={\
  direction=\"l\",\
 },\
 [0xF9FE]={\
  direction=\"l\",\
 },\
 [0xF9FF]={\
  direction=\"l\",\
 },\
 [0xFA00]={\
  direction=\"l\",\
 },\
 [0xFA01]={\
  direction=\"l\",\
 },\
 [0xFA02]={\
  direction=\"l\",\
 },\
 [0xFA03]={\
  direction=\"l\",\
 },\
 [0xFA04]={\
  direction=\"l\",\
 },\
 [0xFA05]={\
  direction=\"l\",\
 },\
 [0xFA06]={\
  direction=\"l\",\
 },\
 [0xFA07]={\
  direction=\"l\",\
 },\
 [0xFA08]={\
  direction=\"l\",\
 },\
 [0xFA09]={\
  direction=\"l\",\
 },\
 [0xFA0A]={\
  direction=\"l\",\
 },\
 [0xFA0B]={\
  direction=\"l\",\
 },\
 [0xFA0C]={\
  direction=\"l\",\
 },\
 [0xFA0D]={\
  direction=\"l\",\
 },\
 [0xFA0E]={\
  direction=\"l\",\
 },\
 [0xFA0F]={\
  direction=\"l\",\
 },\
 [0xFA10]={\
  direction=\"l\",\
 },\
 [0xFA11]={\
  direction=\"l\",\
 },\
 [0xFA12]={\
  direction=\"l\",\
 },\
 [0xFA13]={\
  direction=\"l\",\
 },\
 [0xFA14]={\
  direction=\"l\",\
 },\
 [0xFA15]={\
  direction=\"l\",\
 },\
 [0xFA16]={\
  direction=\"l\",\
 },\
 [0xFA17]={\
  direction=\"l\",\
 },\
 [0xFA18]={\
  direction=\"l\",\
 },\
 [0xFA19]={\
  direction=\"l\",\
 },\
 [0xFA1A]={\
  direction=\"l\",\
 },\
 [0xFA1B]={\
  direction=\"l\",\
 },\
 [0xFA1C]={\
  direction=\"l\",\
 },\
 [0xFA1D]={\
  direction=\"l\",\
 },\
 [0xFA1E]={\
  direction=\"l\",\
 },\
 [0xFA1F]={\
  direction=\"l\",\
 },\
 [0xFA20]={\
  direction=\"l\",\
 },\
 [0xFA21]={\
  direction=\"l\",\
 },\
 [0xFA22]={\
  direction=\"l\",\
 },\
 [0xFA23]={\
  direction=\"l\",\
 },\
 [0xFA24]={\
  direction=\"l\",\
 },\
 [0xFA25]={\
  direction=\"l\",\
 },\
 [0xFA26]={\
  direction=\"l\",\
 },\
 [0xFA27]={\
  direction=\"l\",\
 },\
 [0xFA28]={\
  direction=\"l\",\
 },\
 [0xFA29]={\
  direction=\"l\",\
 },\
 [0xFA2A]={\
  direction=\"l\",\
 },\
 [0xFA2B]={\
  direction=\"l\",\
 },\
 [0xFA2C]={\
  direction=\"l\",\
 },\
 [0xFA2D]={\
  direction=\"l\",\
 },\
 [0xFA2E]={\
  direction=\"l\",\
 },\
 [0xFA2F]={\
  direction=\"l\",\
 },\
 [0xFA30]={\
  direction=\"l\",\
 },\
 [0xFA31]={\
  direction=\"l\",\
 },\
 [0xFA32]={\
  direction=\"l\",\
 },\
 [0xFA33]={\
  direction=\"l\",\
 },\
 [0xFA34]={\
  direction=\"l\",\
 },\
 [0xFA35]={\
  direction=\"l\",\
 },\
 [0xFA36]={\
  direction=\"l\",\
 },\
 [0xFA37]={\
  direction=\"l\",\
 },\
 [0xFA38]={\
  direction=\"l\",\
 },\
 [0xFA39]={\
  direction=\"l\",\
 },\
 [0xFA3A]={\
  direction=\"l\",\
 },\
 [0xFA3B]={\
  direction=\"l\",\
 },\
 [0xFA3C]={\
  direction=\"l\",\
 },\
 [0xFA3D]={\
  direction=\"l\",\
 },\
 [0xFA3E]={\
  direction=\"l\",\
 },\
 [0xFA3F]={\
  direction=\"l\",\
 },\
 [0xFA40]={\
  direction=\"l\",\
 },\
 [0xFA41]={\
  direction=\"l\",\
 },\
 [0xFA42]={\
  direction=\"l\",\
 },\
 [0xFA43]={\
  direction=\"l\",\
 },\
 [0xFA44]={\
  direction=\"l\",\
 },\
 [0xFA45]={\
  direction=\"l\",\
 },\
 [0xFA46]={\
  direction=\"l\",\
 },\
 [0xFA47]={\
  direction=\"l\",\
 },\
 [0xFA48]={\
  direction=\"l\",\
 },\
 [0xFA49]={\
  direction=\"l\",\
 },\
 [0xFA4A]={\
  direction=\"l\",\
 },\
 [0xFA4B]={\
  direction=\"l\",\
 },\
 [0xFA4C]={\
  direction=\"l\",\
 },\
 [0xFA4D]={\
  direction=\"l\",\
 },\
 [0xFA4E]={\
  direction=\"l\",\
 },\
 [0xFA4F]={\
  direction=\"l\",\
 },\
 [0xFA50]={\
  direction=\"l\",\
 },\
 [0xFA51]={\
  direction=\"l\",\
 },\
 [0xFA52]={\
  direction=\"l\",\
 },\
 [0xFA53]={\
  direction=\"l\",\
 },\
 [0xFA54]={\
  direction=\"l\",\
 },\
 [0xFA55]={\
  direction=\"l\",\
 },\
 [0xFA56]={\
  direction=\"l\",\
 },\
 [0xFA57]={\
  direction=\"l\",\
 },\
 [0xFA58]={\
  direction=\"l\",\
 },\
 [0xFA59]={\
  direction=\"l\",\
 },\
 [0xFA5A]={\
  direction=\"l\",\
 },\
 [0xFA5B]={\
  direction=\"l\",\
 },\
 [0xFA5C]={\
  direction=\"l\",\
 },\
 [0xFA5D]={\
  direction=\"l\",\
 },\
 [0xFA5E]={\
  direction=\"l\",\
 },\
 [0xFA5F]={\
  direction=\"l\",\
 },\
 [0xFA60]={\
  direction=\"l\",\
 },\
 [0xFA61]={\
  direction=\"l\",\
 },\
 [0xFA62]={\
  direction=\"l\",\
 },\
 [0xFA63]={\
  direction=\"l\",\
 },\
 [0xFA64]={\
  direction=\"l\",\
 },\
 [0xFA65]={\
  direction=\"l\",\
 },\
 [0xFA66]={\
  direction=\"l\",\
 },\
 [0xFA67]={\
  direction=\"l\",\
 },\
 [0xFA68]={\
  direction=\"l\",\
 },\
 [0xFA69]={\
  direction=\"l\",\
 },\
 [0xFA6A]={\
  direction=\"l\",\
 },\
 [0xFA6B]={\
  direction=\"l\",\
 },\
 [0xFA6C]={\
  direction=\"l\",\
 },\
 [0xFA6D]={\
  direction=\"l\",\
 },\
 [0xFA70]={\
  direction=\"l\",\
 },\
 [0xFA71]={\
  direction=\"l\",\
 },\
 [0xFA72]={\
  direction=\"l\",\
 },\
 [0xFA73]={\
  direction=\"l\",\
 },\
 [0xFA74]={\
  direction=\"l\",\
 },\
 [0xFA75]={\
  direction=\"l\",\
 },\
 [0xFA76]={\
  direction=\"l\",\
 },\
 [0xFA77]={\
  direction=\"l\",\
 },\
 [0xFA78]={\
  direction=\"l\",\
 },\
 [0xFA79]={\
  direction=\"l\",\
 },\
 [0xFA7A]={\
  direction=\"l\",\
 },\
 [0xFA7B]={\
  direction=\"l\",\
 },\
 [0xFA7C]={\
  direction=\"l\",\
 },\
 [0xFA7D]={\
  direction=\"l\",\
 },\
 [0xFA7E]={\
  direction=\"l\",\
 },\
 [0xFA7F]={\
  direction=\"l\",\
 },\
 [0xFA80]={\
  direction=\"l\",\
 },\
 [0xFA81]={\
  direction=\"l\",\
 },\
 [0xFA82]={\
  direction=\"l\",\
 },\
 [0xFA83]={\
  direction=\"l\",\
 },\
 [0xFA84]={\
  direction=\"l\",\
 },\
 [0xFA85]={\
  direction=\"l\",\
 },\
 [0xFA86]={\
  direction=\"l\",\
 },\
 [0xFA87]={\
  direction=\"l\",\
 },\
 [0xFA88]={\
  direction=\"l\",\
 },\
 [0xFA89]={\
  direction=\"l\",\
 },\
 [0xFA8A]={\
  direction=\"l\",\
 },\
 [0xFA8B]={\
  direction=\"l\",\
 },\
 [0xFA8C]={\
  direction=\"l\",\
 },\
 [0xFA8D]={\
  direction=\"l\",\
 },\
 [0xFA8E]={\
  direction=\"l\",\
 },\
 [0xFA8F]={\
  direction=\"l\",\
 },\
 [0xFA90]={\
  direction=\"l\",\
 },\
 [0xFA91]={\
  direction=\"l\",\
 },\
 [0xFA92]={\
  direction=\"l\",\
 },\
 [0xFA93]={\
  direction=\"l\",\
 },\
 [0xFA94]={\
  direction=\"l\",\
 },\
 [0xFA95]={\
  direction=\"l\",\
 },\
 [0xFA96]={\
  direction=\"l\",\
 },\
 [0xFA97]={\
  direction=\"l\",\
 },\
 [0xFA98]={\
  direction=\"l\",\
 },\
 [0xFA99]={\
  direction=\"l\",\
 },\
 [0xFA9A]={\
  direction=\"l\",\
 },\
 [0xFA9B]={\
  direction=\"l\",\
 },\
 [0xFA9C]={\
  direction=\"l\",\
 },\
 [0xFA9D]={\
  direction=\"l\",\
 },\
 [0xFA9E]={\
  direction=\"l\",\
 },\
 [0xFA9F]={\
  direction=\"l\",\
 },\
 [0xFAA0]={\
  direction=\"l\",\
 },\
 [0xFAA1]={\
  direction=\"l\",\
 },\
 [0xFAA2]={\
  direction=\"l\",\
 },\
 [0xFAA3]={\
  direction=\"l\",\
 },\
 [0xFAA4]={\
  direction=\"l\",\
 },\
 [0xFAA5]={\
  direction=\"l\",\
 },\
 [0xFAA6]={\
  direction=\"l\",\
 },\
 [0xFAA7]={\
  direction=\"l\",\
 },\
 [0xFAA8]={\
  direction=\"l\",\
 },\
 [0xFAA9]={\
  direction=\"l\",\
 },\
 [0xFAAA]={\
  direction=\"l\",\
 },\
 [0xFAAB]={\
  direction=\"l\",\
 },\
 [0xFAAC]={\
  direction=\"l\",\
 },\
 [0xFAAD]={\
  direction=\"l\",\
 },\
 [0xFAAE]={\
  direction=\"l\",\
 },\
 [0xFAAF]={\
  direction=\"l\",\
 },\
 [0xFAB0]={\
  direction=\"l\",\
 },\
 [0xFAB1]={\
  direction=\"l\",\
 },\
 [0xFAB2]={\
  direction=\"l\",\
 },\
 [0xFAB3]={\
  direction=\"l\",\
 },\
 [0xFAB4]={\
  direction=\"l\",\
 },\
 [0xFAB5]={\
  direction=\"l\",\
 },\
 [0xFAB6]={\
  direction=\"l\",\
 },\
 [0xFAB7]={\
  direction=\"l\",\
 },\
 [0xFAB8]={\
  direction=\"l\",\
 },\
 [0xFAB9]={\
  direction=\"l\",\
 },\
 [0xFABA]={\
  direction=\"l\",\
 },\
 [0xFABB]={\
  direction=\"l\",\
 },\
 [0xFABC]={\
  direction=\"l\",\
 },\
 [0xFABD]={\
  direction=\"l\",\
 },\
 [0xFABE]={\
  direction=\"l\",\
 },\
 [0xFABF]={\
  direction=\"l\",\
 },\
 [0xFAC0]={\
  direction=\"l\",\
 },\
 [0xFAC1]={\
  direction=\"l\",\
 },\
 [0xFAC2]={\
  direction=\"l\",\
 },\
 [0xFAC3]={\
  direction=\"l\",\
 },\
 [0xFAC4]={\
  direction=\"l\",\
 },\
 [0xFAC5]={\
  direction=\"l\",\
 },\
 [0xFAC6]={\
  direction=\"l\",\
 },\
 [0xFAC7]={\
  direction=\"l\",\
 },\
 [0xFAC8]={\
  direction=\"l\",\
 },\
 [0xFAC9]={\
  direction=\"l\",\
 },\
 [0xFACA]={\
  direction=\"l\",\
 },\
 [0xFACB]={\
  direction=\"l\",\
 },\
 [0xFACC]={\
  direction=\"l\",\
 },\
 [0xFACD]={\
  direction=\"l\",\
 },\
 [0xFACE]={\
  direction=\"l\",\
 },\
 [0xFACF]={\
  direction=\"l\",\
 },\
 [0xFAD0]={\
  direction=\"l\",\
 },\
 [0xFAD1]={\
  direction=\"l\",\
 },\
 [0xFAD2]={\
  direction=\"l\",\
 },\
 [0xFAD3]={\
  direction=\"l\",\
 },\
 [0xFAD4]={\
  direction=\"l\",\
 },\
 [0xFAD5]={\
  direction=\"l\",\
 },\
 [0xFAD6]={\
  direction=\"l\",\
 },\
 [0xFAD7]={\
  direction=\"l\",\
 },\
 [0xFAD8]={\
  direction=\"l\",\
 },\
 [0xFAD9]={\
  direction=\"l\",\
 },\
 [0xFB00]={\
  direction=\"l\",\
 },\
 [0xFB01]={\
  direction=\"l\",\
 },\
 [0xFB02]={\
  direction=\"l\",\
 },\
 [0xFB03]={\
  direction=\"l\",\
 },\
 [0xFB04]={\
  direction=\"l\",\
 },\
 [0xFB05]={\
  direction=\"l\",\
 },\
 [0xFB06]={\
  direction=\"l\",\
 },\
 [0xFB13]={\
  direction=\"l\",\
 },\
 [0xFB14]={\
  direction=\"l\",\
 },\
 [0xFB15]={\
  direction=\"l\",\
 },\
 [0xFB16]={\
  direction=\"l\",\
 },\
 [0xFB17]={\
  direction=\"l\",\
 },\
 [0xFB1D]={\
  direction=\"r\",\
 },\
 [0xFB1E]={\
  direction=\"nsm\",\
 },\
 [0xFB1F]={\
  direction=\"r\",\
 },\
 [0xFB20]={\
  direction=\"r\",\
 },\
 [0xFB21]={\
  direction=\"r\",\
 },\
 [0xFB22]={\
  direction=\"r\",\
 },\
 [0xFB23]={\
  direction=\"r\",\
 },\
 [0xFB24]={\
  direction=\"r\",\
 },\
 [0xFB25]={\
  direction=\"r\",\
 },\
 [0xFB26]={\
  direction=\"r\",\
 },\
 [0xFB27]={\
  direction=\"r\",\
 },\
 [0xFB28]={\
  direction=\"r\",\
 },\
 [0xFB29]={\
  direction=\"es\",\
 },\
 [0xFB2A]={\
  direction=\"r\",\
 },\
 [0xFB2B]={\
  direction=\"r\",\
 },\
 [0xFB2C]={\
  direction=\"r\",\
 },\
 [0xFB2D]={\
  direction=\"r\",\
 },\
 [0xFB2E]={\
  direction=\"r\",\
 },\
 [0xFB2F]={\
  direction=\"r\",\
 },\
 [0xFB30]={\
  direction=\"r\",\
 },\
 [0xFB31]={\
  direction=\"r\",\
 },\
 [0xFB32]={\
  direction=\"r\",\
 },\
 [0xFB33]={\
  direction=\"r\",\
 },\
 [0xFB34]={\
  direction=\"r\",\
 },\
 [0xFB35]={\
  direction=\"r\",\
 },\
 [0xFB36]={\
  direction=\"r\",\
 },\
 [0xFB38]={\
  direction=\"r\",\
 },\
 [0xFB39]={\
  direction=\"r\",\
 },\
 [0xFB3A]={\
  direction=\"r\",\
 },\
 [0xFB3B]={\
  direction=\"r\",\
 },\
 [0xFB3C]={\
  direction=\"r\",\
 },\
 [0xFB3E]={\
  direction=\"r\",\
 },\
 [0xFB40]={\
  direction=\"r\",\
 },\
 [0xFB41]={\
  direction=\"r\",\
 },\
 [0xFB43]={\
  direction=\"r\",\
 },\
 [0xFB44]={\
  direction=\"r\",\
 },\
 [0xFB46]={\
  direction=\"r\",\
 },\
 [0xFB47]={\
  direction=\"r\",\
 },\
 [0xFB48]={\
  direction=\"r\",\
 },\
 [0xFB49]={\
  direction=\"r\",\
 },\
 [0xFB4A]={\
  direction=\"r\",\
 },\
 [0xFB4B]={\
  direction=\"r\",\
 },\
 [0xFB4C]={\
  direction=\"r\",\
 },\
 [0xFB4D]={\
  direction=\"r\",\
 },\
 [0xFB4E]={\
  direction=\"r\",\
 },\
 [0xFB4F]={\
  direction=\"r\",\
 },\
 [0xFB50]={\
  direction=\"al\",\
 },\
 [0xFB51]={\
  direction=\"al\",\
 },\
 [0xFB52]={\
  direction=\"al\",\
 },\
 [0xFB53]={\
  direction=\"al\",\
 },\
 [0xFB54]={\
  direction=\"al\",\
 },\
 [0xFB55]={\
  direction=\"al\",\
 },\
 [0xFB56]={\
  direction=\"al\",\
 },\
 [0xFB57]={\
  direction=\"al\",\
 },\
 [0xFB58]={\
  direction=\"al\",\
 },\
 [0xFB59]={\
  direction=\"al\",\
 },\
 [0xFB5A]={\
  direction=\"al\",\
 },\
 [0xFB5B]={\
  direction=\"al\",\
 },\
 [0xFB5C]={\
  direction=\"al\",\
 },\
 [0xFB5D]={\
  direction=\"al\",\
 },\
 [0xFB5E]={\
  direction=\"al\",\
 },\
 [0xFB5F]={\
  direction=\"al\",\
 },\
 [0xFB60]={\
  direction=\"al\",\
 },\
 [0xFB61]={\
  direction=\"al\",\
 },\
 [0xFB62]={\
  direction=\"al\",\
 },\
 [0xFB63]={\
  direction=\"al\",\
 },\
 [0xFB64]={\
  direction=\"al\",\
 },\
 [0xFB65]={\
  direction=\"al\",\
 },\
 [0xFB66]={\
  direction=\"al\",\
 },\
 [0xFB67]={\
  direction=\"al\",\
 },\
 [0xFB68]={\
  direction=\"al\",\
 },\
 [0xFB69]={\
  direction=\"al\",\
 },\
 [0xFB6A]={\
  direction=\"al\",\
 },\
 [0xFB6B]={\
  direction=\"al\",\
 },\
 [0xFB6C]={\
  direction=\"al\",\
 },\
 [0xFB6D]={\
  direction=\"al\",\
 },\
 [0xFB6E]={\
  direction=\"al\",\
 },\
 [0xFB6F]={\
  direction=\"al\",\
 },\
 [0xFB70]={\
  direction=\"al\",\
 },\
 [0xFB71]={\
  direction=\"al\",\
 },\
 [0xFB72]={\
  direction=\"al\",\
 },\
 [0xFB73]={\
  direction=\"al\",\
 },\
 [0xFB74]={\
  direction=\"al\",\
 },\
 [0xFB75]={\
  direction=\"al\",\
 },\
 [0xFB76]={\
  direction=\"al\",\
 },\
 [0xFB77]={\
  direction=\"al\",\
 },\
 [0xFB78]={\
  direction=\"al\",\
 },\
 [0xFB79]={\
  direction=\"al\",\
 },\
 [0xFB7A]={\
  direction=\"al\",\
 },\
 [0xFB7B]={\
  direction=\"al\",\
 },\
 [0xFB7C]={\
  direction=\"al\",\
 },\
 [0xFB7D]={\
  direction=\"al\",\
 },\
 [0xFB7E]={\
  direction=\"al\",\
 },\
 [0xFB7F]={\
  direction=\"al\",\
 },\
 [0xFB80]={\
  direction=\"al\",\
 },\
 [0xFB81]={\
  direction=\"al\",\
 },\
 [0xFB82]={\
  direction=\"al\",\
 },\
 [0xFB83]={\
  direction=\"al\",\
 },\
 [0xFB84]={\
  direction=\"al\",\
 },\
 [0xFB85]={\
  direction=\"al\",\
 },\
 [0xFB86]={\
  direction=\"al\",\
 },\
 [0xFB87]={\
  direction=\"al\",\
 },\
 [0xFB88]={\
  direction=\"al\",\
 },\
 [0xFB89]={\
  direction=\"al\",\
 },\
 [0xFB8A]={\
  direction=\"al\",\
 },\
 [0xFB8B]={\
  direction=\"al\",\
 },\
 [0xFB8C]={\
  direction=\"al\",\
 },\
 [0xFB8D]={\
  direction=\"al\",\
 },\
 [0xFB8E]={\
  direction=\"al\",\
 },\
 [0xFB8F]={\
  direction=\"al\",\
 },\
 [0xFB90]={\
  direction=\"al\",\
 },\
 [0xFB91]={\
  direction=\"al\",\
 },\
 [0xFB92]={\
  direction=\"al\",\
 },\
 [0xFB93]={\
  direction=\"al\",\
 },\
 [0xFB94]={\
  direction=\"al\",\
 },\
 [0xFB95]={\
  direction=\"al\",\
 },\
 [0xFB96]={\
  direction=\"al\",\
 },\
 [0xFB97]={\
  direction=\"al\",\
 },\
 [0xFB98]={\
  direction=\"al\",\
 },\
 [0xFB99]={\
  direction=\"al\",\
 },\
 [0xFB9A]={\
  direction=\"al\",\
 },\
 [0xFB9B]={\
  direction=\"al\",\
 },\
 [0xFB9C]={\
  direction=\"al\",\
 },\
 [0xFB9D]={\
  direction=\"al\",\
 },\
 [0xFB9E]={\
  direction=\"al\",\
 },\
 [0xFB9F]={\
  direction=\"al\",\
 },\
 [0xFBA0]={\
  direction=\"al\",\
 },\
 [0xFBA1]={\
  direction=\"al\",\
 },\
 [0xFBA2]={\
  direction=\"al\",\
 },\
 [0xFBA3]={\
  direction=\"al\",\
 },\
 [0xFBA4]={\
  direction=\"al\",\
 },\
 [0xFBA5]={\
  direction=\"al\",\
 },\
 [0xFBA6]={\
  direction=\"al\",\
 },\
 [0xFBA7]={\
  direction=\"al\",\
 },\
 [0xFBA8]={\
  direction=\"al\",\
 },\
 [0xFBA9]={\
  direction=\"al\",\
 },\
 [0xFBAA]={\
  direction=\"al\",\
 },\
 [0xFBAB]={\
  direction=\"al\",\
 },\
 [0xFBAC]={\
  direction=\"al\",\
 },\
 [0xFBAD]={\
  direction=\"al\",\
 },\
 [0xFBAE]={\
  direction=\"al\",\
 },\
 [0xFBAF]={\
  direction=\"al\",\
 },\
 [0xFBB0]={\
  direction=\"al\",\
 },\
 [0xFBB1]={\
  direction=\"al\",\
 },\
 [0xFBB2]={\
  direction=\"al\",\
 },\
 [0xFBB3]={\
  direction=\"al\",\
 },\
 [0xFBB4]={\
  direction=\"al\",\
 },\
 [0xFBB5]={\
  direction=\"al\",\
 },\
 [0xFBB6]={\
  direction=\"al\",\
 },\
 [0xFBB7]={\
  direction=\"al\",\
 },\
 [0xFBB8]={\
  direction=\"al\",\
 },\
 [0xFBB9]={\
  direction=\"al\",\
 },\
 [0xFBBA]={\
  direction=\"al\",\
 },\
 [0xFBBB]={\
  direction=\"al\",\
 },\
 [0xFBBC]={\
  direction=\"al\",\
 },\
 [0xFBBD]={\
  direction=\"al\",\
 },\
 [0xFBBE]={\
  direction=\"al\",\
 },\
 [0xFBBF]={\
  direction=\"al\",\
 },\
 [0xFBC0]={\
  direction=\"al\",\
 },\
 [0xFBC1]={\
  direction=\"al\",\
 },\
 [0xFBD3]={\
  direction=\"al\",\
 },\
 [0xFBD4]={\
  direction=\"al\",\
 },\
 [0xFBD5]={\
  direction=\"al\",\
 },\
 [0xFBD6]={\
  direction=\"al\",\
 },\
 [0xFBD7]={\
  direction=\"al\",\
 },\
 [0xFBD8]={\
  direction=\"al\",\
 },\
 [0xFBD9]={\
  direction=\"al\",\
 },\
 [0xFBDA]={\
  direction=\"al\",\
 },\
 [0xFBDB]={\
  direction=\"al\",\
 },\
 [0xFBDC]={\
  direction=\"al\",\
 },\
 [0xFBDD]={\
  direction=\"al\",\
 },\
 [0xFBDE]={\
  direction=\"al\",\
 },\
 [0xFBDF]={\
  direction=\"al\",\
 },\
 [0xFBE0]={\
  direction=\"al\",\
 },\
 [0xFBE1]={\
  direction=\"al\",\
 },\
 [0xFBE2]={\
  direction=\"al\",\
 },\
 [0xFBE3]={\
  direction=\"al\",\
 },\
 [0xFBE4]={\
  direction=\"al\",\
 },\
 [0xFBE5]={\
  direction=\"al\",\
 },\
 [0xFBE6]={\
  direction=\"al\",\
 },\
 [0xFBE7]={\
  direction=\"al\",\
 },\
 [0xFBE8]={\
  direction=\"al\",\
 },\
 [0xFBE9]={\
  direction=\"al\",\
 },\
 [0xFBEA]={\
  direction=\"al\",\
 },\
 [0xFBEB]={\
  direction=\"al\",\
 },\
 [0xFBEC]={\
  direction=\"al\",\
 },\
 [0xFBED]={\
  direction=\"al\",\
 },\
 [0xFBEE]={\
  direction=\"al\",\
 },\
 [0xFBEF]={\
  direction=\"al\",\
 },\
 [0xFBF0]={\
  direction=\"al\",\
 },\
 [0xFBF1]={\
  direction=\"al\",\
 },\
 [0xFBF2]={\
  direction=\"al\",\
 },\
 [0xFBF3]={\
  direction=\"al\",\
 },\
 [0xFBF4]={\
  direction=\"al\",\
 },\
 [0xFBF5]={\
  direction=\"al\",\
 },\
 [0xFBF6]={\
  direction=\"al\",\
 },\
 [0xFBF7]={\
  direction=\"al\",\
 },\
 [0xFBF8]={\
  direction=\"al\",\
 },\
 [0xFBF9]={\
  direction=\"al\",\
 },\
 [0xFBFA]={\
  direction=\"al\",\
 },\
 [0xFBFB]={\
  direction=\"al\",\
 },\
 [0xFBFC]={\
  direction=\"al\",\
 },\
 [0xFBFD]={\
  direction=\"al\",\
 },\
 [0xFBFE]={\
  direction=\"al\",\
 },\
 [0xFBFF]={\
  direction=\"al\",\
 },\
 [0xFC00]={\
  direction=\"al\",\
 },\
 [0xFC01]={\
  direction=\"al\",\
 },\
 [0xFC02]={\
  direction=\"al\",\
 },\
 [0xFC03]={\
  direction=\"al\",\
 },\
 [0xFC04]={\
  direction=\"al\",\
 },\
 [0xFC05]={\
  direction=\"al\",\
 },\
 [0xFC06]={\
  direction=\"al\",\
 },\
 [0xFC07]={\
  direction=\"al\",\
 },\
 [0xFC08]={\
  direction=\"al\",\
 },\
 [0xFC09]={\
  direction=\"al\",\
 },\
 [0xFC0A]={\
  direction=\"al\",\
 },\
 [0xFC0B]={\
  direction=\"al\",\
 },\
 [0xFC0C]={\
  direction=\"al\",\
 },\
 [0xFC0D]={\
  direction=\"al\",\
 },\
 [0xFC0E]={\
  direction=\"al\",\
 },\
 [0xFC0F]={\
  direction=\"al\",\
 },\
 [0xFC10]={\
  direction=\"al\",\
 },\
 [0xFC11]={\
  direction=\"al\",\
 },\
 [0xFC12]={\
  direction=\"al\",\
 },\
 [0xFC13]={\
  direction=\"al\",\
 },\
 [0xFC14]={\
  direction=\"al\",\
 },\
 [0xFC15]={\
  direction=\"al\",\
 },\
 [0xFC16]={\
  direction=\"al\",\
 },\
 [0xFC17]={\
  direction=\"al\",\
 },\
 [0xFC18]={\
  direction=\"al\",\
 },\
 [0xFC19]={\
  direction=\"al\",\
 },\
 [0xFC1A]={\
  direction=\"al\",\
 },\
 [0xFC1B]={\
  direction=\"al\",\
 },\
 [0xFC1C]={\
  direction=\"al\",\
 },\
 [0xFC1D]={\
  direction=\"al\",\
 },\
 [0xFC1E]={\
  direction=\"al\",\
 },\
 [0xFC1F]={\
  direction=\"al\",\
 },\
 [0xFC20]={\
  direction=\"al\",\
 },\
 [0xFC21]={\
  direction=\"al\",\
 },\
 [0xFC22]={\
  direction=\"al\",\
 },\
 [0xFC23]={\
  direction=\"al\",\
 },\
 [0xFC24]={\
  direction=\"al\",\
 },\
 [0xFC25]={\
  direction=\"al\",\
 },\
 [0xFC26]={\
  direction=\"al\",\
 },\
 [0xFC27]={\
  direction=\"al\",\
 },\
 [0xFC28]={\
  direction=\"al\",\
 },\
 [0xFC29]={\
  direction=\"al\",\
 },\
 [0xFC2A]={\
  direction=\"al\",\
 },\
 [0xFC2B]={\
  direction=\"al\",\
 },\
 [0xFC2C]={\
  direction=\"al\",\
 },\
 [0xFC2D]={\
  direction=\"al\",\
 },\
 [0xFC2E]={\
  direction=\"al\",\
 },\
 [0xFC2F]={\
  direction=\"al\",\
 },\
 [0xFC30]={\
  direction=\"al\",\
 },\
 [0xFC31]={\
  direction=\"al\",\
 },\
 [0xFC32]={\
  direction=\"al\",\
 },\
 [0xFC33]={\
  direction=\"al\",\
 },\
 [0xFC34]={\
  direction=\"al\",\
 },\
 [0xFC35]={\
  direction=\"al\",\
 },\
 [0xFC36]={\
  direction=\"al\",\
 },\
 [0xFC37]={\
  direction=\"al\",\
 },\
 [0xFC38]={\
  direction=\"al\",\
 },\
 [0xFC39]={\
  direction=\"al\",\
 },\
 [0xFC3A]={\
  direction=\"al\",\
 },\
 [0xFC3B]={\
  direction=\"al\",\
 },\
 [0xFC3C]={\
  direction=\"al\",\
 },\
 [0xFC3D]={\
  direction=\"al\",\
 },\
 [0xFC3E]={\
  direction=\"al\",\
 },\
 [0xFC3F]={\
  direction=\"al\",\
 },\
 [0xFC40]={\
  direction=\"al\",\
 },\
 [0xFC41]={\
  direction=\"al\",\
 },\
 [0xFC42]={\
  direction=\"al\",\
 },\
 [0xFC43]={\
  direction=\"al\",\
 },\
 [0xFC44]={\
  direction=\"al\",\
 },\
 [0xFC45]={\
  direction=\"al\",\
 },\
 [0xFC46]={\
  direction=\"al\",\
 },\
 [0xFC47]={\
  direction=\"al\",\
 },\
 [0xFC48]={\
  direction=\"al\",\
 },\
 [0xFC49]={\
  direction=\"al\",\
 },\
 [0xFC4A]={\
  direction=\"al\",\
 },\
 [0xFC4B]={\
  direction=\"al\",\
 },\
 [0xFC4C]={\
  direction=\"al\",\
 },\
 [0xFC4D]={\
  direction=\"al\",\
 },\
 [0xFC4E]={\
  direction=\"al\",\
 },\
 [0xFC4F]={\
  direction=\"al\",\
 },\
 [0xFC50]={\
  direction=\"al\",\
 },\
 [0xFC51]={\
  direction=\"al\",\
 },\
 [0xFC52]={\
  direction=\"al\",\
 },\
 [0xFC53]={\
  direction=\"al\",\
 },\
 [0xFC54]={\
  direction=\"al\",\
 },\
 [0xFC55]={\
  direction=\"al\",\
 },\
 [0xFC56]={\
  direction=\"al\",\
 },\
 [0xFC57]={\
  direction=\"al\",\
 },\
 [0xFC58]={\
  direction=\"al\",\
 },\
 [0xFC59]={\
  direction=\"al\",\
 },\
 [0xFC5A]={\
  direction=\"al\",\
 },\
 [0xFC5B]={\
  direction=\"al\",\
 },\
 [0xFC5C]={\
  direction=\"al\",\
 },\
 [0xFC5D]={\
  direction=\"al\",\
 },\
 [0xFC5E]={\
  direction=\"al\",\
 },\
 [0xFC5F]={\
  direction=\"al\",\
 },\
 [0xFC60]={\
  direction=\"al\",\
 },\
 [0xFC61]={\
  direction=\"al\",\
 },\
 [0xFC62]={\
  direction=\"al\",\
 },\
 [0xFC63]={\
  direction=\"al\",\
 },\
 [0xFC64]={\
  direction=\"al\",\
 },\
 [0xFC65]={\
  direction=\"al\",\
 },\
 [0xFC66]={\
  direction=\"al\",\
 },\
 [0xFC67]={\
  direction=\"al\",\
 },\
 [0xFC68]={\
  direction=\"al\",\
 },\
 [0xFC69]={\
  direction=\"al\",\
 },\
 [0xFC6A]={\
  direction=\"al\",\
 },\
 [0xFC6B]={\
  direction=\"al\",\
 },\
 [0xFC6C]={\
  direction=\"al\",\
 },\
 [0xFC6D]={\
  direction=\"al\",\
 },\
 [0xFC6E]={\
  direction=\"al\",\
 },\
 [0xFC6F]={\
  direction=\"al\",\
 },\
 [0xFC70]={\
  direction=\"al\",\
 },\
 [0xFC71]={\
  direction=\"al\",\
 },\
 [0xFC72]={\
  direction=\"al\",\
 },\
 [0xFC73]={\
  direction=\"al\",\
 },\
 [0xFC74]={\
  direction=\"al\",\
 },\
 [0xFC75]={\
  direction=\"al\",\
 },\
 [0xFC76]={\
  direction=\"al\",\
 },\
 [0xFC77]={\
  direction=\"al\",\
 },\
 [0xFC78]={\
  direction=\"al\",\
 },\
 [0xFC79]={\
  direction=\"al\",\
 },\
 [0xFC7A]={\
  direction=\"al\",\
 },\
 [0xFC7B]={\
  direction=\"al\",\
 },\
 [0xFC7C]={\
  direction=\"al\",\
 },\
 [0xFC7D]={\
  direction=\"al\",\
 },\
 [0xFC7E]={\
  direction=\"al\",\
 },\
 [0xFC7F]={\
  direction=\"al\",\
 },\
 [0xFC80]={\
  direction=\"al\",\
 },\
 [0xFC81]={\
  direction=\"al\",\
 },\
 [0xFC82]={\
  direction=\"al\",\
 },\
 [0xFC83]={\
  direction=\"al\",\
 },\
 [0xFC84]={\
  direction=\"al\",\
 },\
 [0xFC85]={\
  direction=\"al\",\
 },\
 [0xFC86]={\
  direction=\"al\",\
 },\
 [0xFC87]={\
  direction=\"al\",\
 },\
 [0xFC88]={\
  direction=\"al\",\
 },\
 [0xFC89]={\
  direction=\"al\",\
 },\
 [0xFC8A]={\
  direction=\"al\",\
 },\
 [0xFC8B]={\
  direction=\"al\",\
 },\
 [0xFC8C]={\
  direction=\"al\",\
 },\
 [0xFC8D]={\
  direction=\"al\",\
 },\
 [0xFC8E]={\
  direction=\"al\",\
 },\
 [0xFC8F]={\
  direction=\"al\",\
 },\
 [0xFC90]={\
  direction=\"al\",\
 },\
 [0xFC91]={\
  direction=\"al\",\
 },\
 [0xFC92]={\
  direction=\"al\",\
 },\
 [0xFC93]={\
  direction=\"al\",\
 },\
 [0xFC94]={\
  direction=\"al\",\
 },\
 [0xFC95]={\
  direction=\"al\",\
 },\
 [0xFC96]={\
  direction=\"al\",\
 },\
 [0xFC97]={\
  direction=\"al\",\
 },\
 [0xFC98]={\
  direction=\"al\",\
 },\
 [0xFC99]={\
  direction=\"al\",\
 },\
 [0xFC9A]={\
  direction=\"al\",\
 },\
 [0xFC9B]={\
  direction=\"al\",\
 },\
 [0xFC9C]={\
  direction=\"al\",\
 },\
 [0xFC9D]={\
  direction=\"al\",\
 },\
 [0xFC9E]={\
  direction=\"al\",\
 },\
 [0xFC9F]={\
  direction=\"al\",\
 },\
 [0xFCA0]={\
  direction=\"al\",\
 },\
 [0xFCA1]={\
  direction=\"al\",\
 },\
 [0xFCA2]={\
  direction=\"al\",\
 },\
 [0xFCA3]={\
  direction=\"al\",\
 },\
 [0xFCA4]={\
  direction=\"al\",\
 },\
 [0xFCA5]={\
  direction=\"al\",\
 },\
 [0xFCA6]={\
  direction=\"al\",\
 },\
 [0xFCA7]={\
  direction=\"al\",\
 },\
 [0xFCA8]={\
  direction=\"al\",\
 },\
 [0xFCA9]={\
  direction=\"al\",\
 },\
 [0xFCAA]={\
  direction=\"al\",\
 },\
 [0xFCAB]={\
  direction=\"al\",\
 },\
 [0xFCAC]={\
  direction=\"al\",\
 },\
 [0xFCAD]={\
  direction=\"al\",\
 },\
 [0xFCAE]={\
  direction=\"al\",\
 },\
 [0xFCAF]={\
  direction=\"al\",\
 },\
 [0xFCB0]={\
  direction=\"al\",\
 },\
 [0xFCB1]={\
  direction=\"al\",\
 },\
 [0xFCB2]={\
  direction=\"al\",\
 },\
 [0xFCB3]={\
  direction=\"al\",\
 },\
 [0xFCB4]={\
  direction=\"al\",\
 },\
 [0xFCB5]={\
  direction=\"al\",\
 },\
 [0xFCB6]={\
  direction=\"al\",\
 },\
 [0xFCB7]={\
  direction=\"al\",\
 },\
 [0xFCB8]={\
  direction=\"al\",\
 },\
 [0xFCB9]={\
  direction=\"al\",\
 },\
 [0xFCBA]={\
  direction=\"al\",\
 },\
 [0xFCBB]={\
  direction=\"al\",\
 },\
 [0xFCBC]={\
  direction=\"al\",\
 },\
 [0xFCBD]={\
  direction=\"al\",\
 },\
 [0xFCBE]={\
  direction=\"al\",\
 },\
 [0xFCBF]={\
  direction=\"al\",\
 },\
 [0xFCC0]={\
  direction=\"al\",\
 },\
 [0xFCC1]={\
  direction=\"al\",\
 },\
 [0xFCC2]={\
  direction=\"al\",\
 },\
 [0xFCC3]={\
  direction=\"al\",\
 },\
 [0xFCC4]={\
  direction=\"al\",\
 },\
 [0xFCC5]={\
  direction=\"al\",\
 },\
 [0xFCC6]={\
  direction=\"al\",\
 },\
 [0xFCC7]={\
  direction=\"al\",\
 },\
 [0xFCC8]={\
  direction=\"al\",\
 },\
 [0xFCC9]={\
  direction=\"al\",\
 },\
 [0xFCCA]={\
  direction=\"al\",\
 },\
 [0xFCCB]={\
  direction=\"al\",\
 },\
 [0xFCCC]={\
  direction=\"al\",\
 },\
 [0xFCCD]={\
  direction=\"al\",\
 },\
 [0xFCCE]={\
  direction=\"al\",\
 },\
 [0xFCCF]={\
  direction=\"al\",\
 },\
 [0xFCD0]={\
  direction=\"al\",\
 },\
 [0xFCD1]={\
  direction=\"al\",\
 },\
 [0xFCD2]={\
  direction=\"al\",\
 },\
 [0xFCD3]={\
  direction=\"al\",\
 },\
 [0xFCD4]={\
  direction=\"al\",\
 },\
 [0xFCD5]={\
  direction=\"al\",\
 },\
 [0xFCD6]={\
  direction=\"al\",\
 },\
 [0xFCD7]={\
  direction=\"al\",\
 },\
 [0xFCD8]={\
  direction=\"al\",\
 },\
 [0xFCD9]={\
  direction=\"al\",\
 },\
 [0xFCDA]={\
  direction=\"al\",\
 },\
 [0xFCDB]={\
  direction=\"al\",\
 },\
 [0xFCDC]={\
  direction=\"al\",\
 },\
 [0xFCDD]={\
  direction=\"al\",\
 },\
 [0xFCDE]={\
  direction=\"al\",\
 },\
 [0xFCDF]={\
  direction=\"al\",\
 },\
 [0xFCE0]={\
  direction=\"al\",\
 },\
 [0xFCE1]={\
  direction=\"al\",\
 },\
 [0xFCE2]={\
  direction=\"al\",\
 },\
 [0xFCE3]={\
  direction=\"al\",\
 },\
 [0xFCE4]={\
  direction=\"al\",\
 },\
 [0xFCE5]={\
  direction=\"al\",\
 },\
 [0xFCE6]={\
  direction=\"al\",\
 },\
 [0xFCE7]={\
  direction=\"al\",\
 },\
 [0xFCE8]={\
  direction=\"al\",\
 },\
 [0xFCE9]={\
  direction=\"al\",\
 },\
 [0xFCEA]={\
  direction=\"al\",\
 },\
 [0xFCEB]={\
  direction=\"al\",\
 },\
 [0xFCEC]={\
  direction=\"al\",\
 },\
 [0xFCED]={\
  direction=\"al\",\
 },\
 [0xFCEE]={\
  direction=\"al\",\
 },\
 [0xFCEF]={\
  direction=\"al\",\
 },\
 [0xFCF0]={\
  direction=\"al\",\
 },\
 [0xFCF1]={\
  direction=\"al\",\
 },\
 [0xFCF2]={\
  direction=\"al\",\
 },\
 [0xFCF3]={\
  direction=\"al\",\
 },\
 [0xFCF4]={\
  direction=\"al\",\
 },\
 [0xFCF5]={\
  direction=\"al\",\
 },\
 [0xFCF6]={\
  direction=\"al\",\
 },\
 [0xFCF7]={\
  direction=\"al\",\
 },\
 [0xFCF8]={\
  direction=\"al\",\
 },\
 [0xFCF9]={\
  direction=\"al\",\
 },\
 [0xFCFA]={\
  direction=\"al\",\
 },\
 [0xFCFB]={\
  direction=\"al\",\
 },\
 [0xFCFC]={\
  direction=\"al\",\
 },\
 [0xFCFD]={\
  direction=\"al\",\
 },\
 [0xFCFE]={\
  direction=\"al\",\
 },\
 [0xFCFF]={\
  direction=\"al\",\
 },\
 [0xFD00]={\
  direction=\"al\",\
 },\
 [0xFD01]={\
  direction=\"al\",\
 },\
 [0xFD02]={\
  direction=\"al\",\
 },\
 [0xFD03]={\
  direction=\"al\",\
 },\
 [0xFD04]={\
  direction=\"al\",\
 },\
 [0xFD05]={\
  direction=\"al\",\
 },\
 [0xFD06]={\
  direction=\"al\",\
 },\
 [0xFD07]={\
  direction=\"al\",\
 },\
 [0xFD08]={\
  direction=\"al\",\
 },\
 [0xFD09]={\
  direction=\"al\",\
 },\
 [0xFD0A]={\
  direction=\"al\",\
 },\
 [0xFD0B]={\
  direction=\"al\",\
 },\
 [0xFD0C]={\
  direction=\"al\",\
 },\
 [0xFD0D]={\
  direction=\"al\",\
 },\
 [0xFD0E]={\
  direction=\"al\",\
 },\
 [0xFD0F]={\
  direction=\"al\",\
 },\
 [0xFD10]={\
  direction=\"al\",\
 },\
 [0xFD11]={\
  direction=\"al\",\
 },\
 [0xFD12]={\
  direction=\"al\",\
 },\
 [0xFD13]={\
  direction=\"al\",\
 },\
 [0xFD14]={\
  direction=\"al\",\
 },\
 [0xFD15]={\
  direction=\"al\",\
 },\
 [0xFD16]={\
  direction=\"al\",\
 },\
 [0xFD17]={\
  direction=\"al\",\
 },\
 [0xFD18]={\
  direction=\"al\",\
 },\
 [0xFD19]={\
  direction=\"al\",\
 },\
 [0xFD1A]={\
  direction=\"al\",\
 },\
 [0xFD1B]={\
  direction=\"al\",\
 },\
 [0xFD1C]={\
  direction=\"al\",\
 },\
 [0xFD1D]={\
  direction=\"al\",\
 },\
 [0xFD1E]={\
  direction=\"al\",\
 },\
 [0xFD1F]={\
  direction=\"al\",\
 },\
 [0xFD20]={\
  direction=\"al\",\
 },\
 [0xFD21]={\
  direction=\"al\",\
 },\
 [0xFD22]={\
  direction=\"al\",\
 },\
 [0xFD23]={\
  direction=\"al\",\
 },\
 [0xFD24]={\
  direction=\"al\",\
 },\
 [0xFD25]={\
  direction=\"al\",\
 },\
 [0xFD26]={\
  direction=\"al\",\
 },\
 [0xFD27]={\
  direction=\"al\",\
 },\
 [0xFD28]={\
  direction=\"al\",\
 },\
 [0xFD29]={\
  direction=\"al\",\
 },\
 [0xFD2A]={\
  direction=\"al\",\
 },\
 [0xFD2B]={\
  direction=\"al\",\
 },\
 [0xFD2C]={\
  direction=\"al\",\
 },\
 [0xFD2D]={\
  direction=\"al\",\
 },\
 [0xFD2E]={\
  direction=\"al\",\
 },\
 [0xFD2F]={\
  direction=\"al\",\
 },\
 [0xFD30]={\
  direction=\"al\",\
 },\
 [0xFD31]={\
  direction=\"al\",\
 },\
 [0xFD32]={\
  direction=\"al\",\
 },\
 [0xFD33]={\
  direction=\"al\",\
 },\
 [0xFD34]={\
  direction=\"al\",\
 },\
 [0xFD35]={\
  direction=\"al\",\
 },\
 [0xFD36]={\
  direction=\"al\",\
 },\
 [0xFD37]={\
  direction=\"al\",\
 },\
 [0xFD38]={\
  direction=\"al\",\
 },\
 [0xFD39]={\
  direction=\"al\",\
 },\
 [0xFD3A]={\
  direction=\"al\",\
 },\
 [0xFD3B]={\
  direction=\"al\",\
 },\
 [0xFD3C]={\
  direction=\"al\",\
 },\
 [0xFD3D]={\
  direction=\"al\",\
 },\
 [0xFD3E]={\
  direction=\"on\",\
 },\
 [0xFD3F]={\
  direction=\"on\",\
 },\
 [0xFD50]={\
  direction=\"al\",\
 },\
 [0xFD51]={\
  direction=\"al\",\
 },\
 [0xFD52]={\
  direction=\"al\",\
 },\
 [0xFD53]={\
  direction=\"al\",\
 },\
 [0xFD54]={\
  direction=\"al\",\
 },\
 [0xFD55]={\
  direction=\"al\",\
 },\
 [0xFD56]={\
  direction=\"al\",\
 },\
 [0xFD57]={\
  direction=\"al\",\
 },\
 [0xFD58]={\
  direction=\"al\",\
 },\
 [0xFD59]={\
  direction=\"al\",\
 },\
 [0xFD5A]={\
  direction=\"al\",\
 },\
 [0xFD5B]={\
  direction=\"al\",\
 },\
 [0xFD5C]={\
  direction=\"al\",\
 },\
 [0xFD5D]={\
  direction=\"al\",\
 },\
 [0xFD5E]={\
  direction=\"al\",\
 },\
 [0xFD5F]={\
  direction=\"al\",\
 },\
 [0xFD60]={\
  direction=\"al\",\
 },\
 [0xFD61]={\
  direction=\"al\",\
 },\
 [0xFD62]={\
  direction=\"al\",\
 },\
 [0xFD63]={\
  direction=\"al\",\
 },\
 [0xFD64]={\
  direction=\"al\",\
 },\
 [0xFD65]={\
  direction=\"al\",\
 },\
 [0xFD66]={\
  direction=\"al\",\
 },\
 [0xFD67]={\
  direction=\"al\",\
 },\
 [0xFD68]={\
  direction=\"al\",\
 },\
 [0xFD69]={\
  direction=\"al\",\
 },\
 [0xFD6A]={\
  direction=\"al\",\
 },\
 [0xFD6B]={\
  direction=\"al\",\
 },\
 [0xFD6C]={\
  direction=\"al\",\
 },\
 [0xFD6D]={\
  direction=\"al\",\
 },\
 [0xFD6E]={\
  direction=\"al\",\
 },\
 [0xFD6F]={\
  direction=\"al\",\
 },\
 [0xFD70]={\
  direction=\"al\",\
 },\
 [0xFD71]={\
  direction=\"al\",\
 },\
 [0xFD72]={\
  direction=\"al\",\
 },\
 [0xFD73]={\
  direction=\"al\",\
 },\
 [0xFD74]={\
  direction=\"al\",\
 },\
 [0xFD75]={\
  direction=\"al\",\
 },\
 [0xFD76]={\
  direction=\"al\",\
 },\
 [0xFD77]={\
  direction=\"al\",\
 },\
 [0xFD78]={\
  direction=\"al\",\
 },\
 [0xFD79]={\
  direction=\"al\",\
 },\
 [0xFD7A]={\
  direction=\"al\",\
 },\
 [0xFD7B]={\
  direction=\"al\",\
 },\
 [0xFD7C]={\
  direction=\"al\",\
 },\
 [0xFD7D]={\
  direction=\"al\",\
 },\
 [0xFD7E]={\
  direction=\"al\",\
 },\
 [0xFD7F]={\
  direction=\"al\",\
 },\
 [0xFD80]={\
  direction=\"al\",\
 },\
 [0xFD81]={\
  direction=\"al\",\
 },\
 [0xFD82]={\
  direction=\"al\",\
 },\
 [0xFD83]={\
  direction=\"al\",\
 },\
 [0xFD84]={\
  direction=\"al\",\
 },\
 [0xFD85]={\
  direction=\"al\",\
 },\
 [0xFD86]={\
  direction=\"al\",\
 },\
 [0xFD87]={\
  direction=\"al\",\
 },\
 [0xFD88]={\
  direction=\"al\",\
 },\
 [0xFD89]={\
  direction=\"al\",\
 },\
 [0xFD8A]={\
  direction=\"al\",\
 },\
 [0xFD8B]={\
  direction=\"al\",\
 },\
 [0xFD8C]={\
  direction=\"al\",\
 },\
 [0xFD8D]={\
  direction=\"al\",\
 },\
 [0xFD8E]={\
  direction=\"al\",\
 },\
 [0xFD8F]={\
  direction=\"al\",\
 },\
 [0xFD92]={\
  direction=\"al\",\
 },\
 [0xFD93]={\
  direction=\"al\",\
 },\
 [0xFD94]={\
  direction=\"al\",\
 },\
 [0xFD95]={\
  direction=\"al\",\
 },\
 [0xFD96]={\
  direction=\"al\",\
 },\
 [0xFD97]={\
  direction=\"al\",\
 },\
 [0xFD98]={\
  direction=\"al\",\
 },\
 [0xFD99]={\
  direction=\"al\",\
 },\
 [0xFD9A]={\
  direction=\"al\",\
 },\
 [0xFD9B]={\
  direction=\"al\",\
 },\
 [0xFD9C]={\
  direction=\"al\",\
 },\
 [0xFD9D]={\
  direction=\"al\",\
 },\
 [0xFD9E]={\
  direction=\"al\",\
 },\
 [0xFD9F]={\
  direction=\"al\",\
 },\
 [0xFDA0]={\
  direction=\"al\",\
 },\
 [0xFDA1]={\
  direction=\"al\",\
 },\
 [0xFDA2]={\
  direction=\"al\",\
 },\
 [0xFDA3]={\
  direction=\"al\",\
 },\
 [0xFDA4]={\
  direction=\"al\",\
 },\
 [0xFDA5]={\
  direction=\"al\",\
 },\
 [0xFDA6]={\
  direction=\"al\",\
 },\
 [0xFDA7]={\
  direction=\"al\",\
 },\
 [0xFDA8]={\
  direction=\"al\",\
 },\
 [0xFDA9]={\
  direction=\"al\",\
 },\
 [0xFDAA]={\
  direction=\"al\",\
 },\
 [0xFDAB]={\
  direction=\"al\",\
 },\
 [0xFDAC]={\
  direction=\"al\",\
 },\
 [0xFDAD]={\
  direction=\"al\",\
 },\
 [0xFDAE]={\
  direction=\"al\",\
 },\
 [0xFDAF]={\
  direction=\"al\",\
 },\
 [0xFDB0]={\
  direction=\"al\",\
 },\
 [0xFDB1]={\
  direction=\"al\",\
 },\
 [0xFDB2]={\
  direction=\"al\",\
 },\
 [0xFDB3]={\
  direction=\"al\",\
 },\
 [0xFDB4]={\
  direction=\"al\",\
 },\
 [0xFDB5]={\
  direction=\"al\",\
 },\
 [0xFDB6]={\
  direction=\"al\",\
 },\
 [0xFDB7]={\
  direction=\"al\",\
 },\
 [0xFDB8]={\
  direction=\"al\",\
 },\
 [0xFDB9]={\
  direction=\"al\",\
 },\
 [0xFDBA]={\
  direction=\"al\",\
 },\
 [0xFDBB]={\
  direction=\"al\",\
 },\
 [0xFDBC]={\
  direction=\"al\",\
 },\
 [0xFDBD]={\
  direction=\"al\",\
 },\
 [0xFDBE]={\
  direction=\"al\",\
 },\
 [0xFDBF]={\
  direction=\"al\",\
 },\
 [0xFDC0]={\
  direction=\"al\",\
 },\
 [0xFDC1]={\
  direction=\"al\",\
 },\
 [0xFDC2]={\
  direction=\"al\",\
 },\
 [0xFDC3]={\
  direction=\"al\",\
 },\
 [0xFDC4]={\
  direction=\"al\",\
 },\
 [0xFDC5]={\
  direction=\"al\",\
 },\
 [0xFDC6]={\
  direction=\"al\",\
 },\
 [0xFDC7]={\
  direction=\"al\",\
 },\
 [0xFDF0]={\
  direction=\"al\",\
 },\
 [0xFDF1]={\
  direction=\"al\",\
 },\
 [0xFDF2]={\
  direction=\"al\",\
 },\
 [0xFDF3]={\
  direction=\"al\",\
 },\
 [0xFDF4]={\
  direction=\"al\",\
 },\
 [0xFDF5]={\
  direction=\"al\",\
 },\
 [0xFDF6]={\
  direction=\"al\",\
 },\
 [0xFDF7]={\
  direction=\"al\",\
 },\
 [0xFDF8]={\
  direction=\"al\",\
 },\
 [0xFDF9]={\
  direction=\"al\",\
 },\
 [0xFDFA]={\
  direction=\"al\",\
 },\
 [0xFDFB]={\
  direction=\"al\",\
 },\
 [0xFDFC]={\
  direction=\"al\",\
 },\
 [0xFDFD]={\
  direction=\"on\",\
 },\
 [0xFE00]={\
  direction=\"nsm\",\
 },\
 [0xFE01]={\
  direction=\"nsm\",\
 },\
 [0xFE02]={\
  direction=\"nsm\",\
 },\
 [0xFE03]={\
  direction=\"nsm\",\
 },\
 [0xFE04]={\
  direction=\"nsm\",\
 },\
 [0xFE05]={\
  direction=\"nsm\",\
 },\
 [0xFE06]={\
  direction=\"nsm\",\
 },\
 [0xFE07]={\
  direction=\"nsm\",\
 },\
 [0xFE08]={\
  direction=\"nsm\",\
 },\
 [0xFE09]={\
  direction=\"nsm\",\
 },\
 [0xFE0A]={\
  direction=\"nsm\",\
 },\
 [0xFE0B]={\
  direction=\"nsm\",\
 },\
 [0xFE0C]={\
  direction=\"nsm\",\
 },\
 [0xFE0D]={\
  direction=\"nsm\",\
 },\
 [0xFE0E]={\
  direction=\"nsm\",\
 },\
 [0xFE0F]={\
  direction=\"nsm\",\
 },\
 [0xFE10]={\
  direction=\"on\",\
 },\
 [0xFE11]={\
  direction=\"on\",\
 },\
 [0xFE12]={\
  direction=\"on\",\
 },\
 [0xFE13]={\
  direction=\"on\",\
 },\
 [0xFE14]={\
  direction=\"on\",\
 },\
 [0xFE15]={\
  direction=\"on\",\
 },\
 [0xFE16]={\
  direction=\"on\",\
 },\
 [0xFE17]={\
  direction=\"on\",\
 },\
 [0xFE18]={\
  direction=\"on\",\
 },\
 [0xFE19]={\
  direction=\"on\",\
 },\
 [0xFE20]={\
  direction=\"nsm\",\
 },\
 [0xFE21]={\
  direction=\"nsm\",\
 },\
 [0xFE22]={\
  direction=\"nsm\",\
 },\
 [0xFE23]={\
  direction=\"nsm\",\
 },\
 [0xFE24]={\
  direction=\"nsm\",\
 },\
 [0xFE25]={\
  direction=\"nsm\",\
 },\
 [0xFE26]={\
  direction=\"nsm\",\
 },\
 [0xFE30]={\
  direction=\"on\",\
 },\
 [0xFE31]={\
  direction=\"on\",\
 },\
 [0xFE32]={\
  direction=\"on\",\
 },\
 [0xFE33]={\
  direction=\"on\",\
 },\
 [0xFE34]={\
  direction=\"on\",\
 },\
 [0xFE35]={\
  direction=\"on\",\
 },\
 [0xFE36]={\
  direction=\"on\",\
 },\
 [0xFE37]={\
  direction=\"on\",\
 },\
 [0xFE38]={\
  direction=\"on\",\
 },\
 [0xFE39]={\
  direction=\"on\",\
 },\
 [0xFE3A]={\
  direction=\"on\",\
 },\
 [0xFE3B]={\
  direction=\"on\",\
 },\
 [0xFE3C]={\
  direction=\"on\",\
 },\
 [0xFE3D]={\
  direction=\"on\",\
 },\
 [0xFE3E]={\
  direction=\"on\",\
 },\
 [0xFE3F]={\
  direction=\"on\",\
 },\
 [0xFE40]={\
  direction=\"on\",\
 },\
 [0xFE41]={\
  direction=\"on\",\
 },\
 [0xFE42]={\
  direction=\"on\",\
 },\
 [0xFE43]={\
  direction=\"on\",\
 },\
 [0xFE44]={\
  direction=\"on\",\
 },\
 [0xFE45]={\
  direction=\"on\",\
 },\
 [0xFE46]={\
  direction=\"on\",\
 },\
 [0xFE47]={\
  direction=\"on\",\
 },\
 [0xFE48]={\
  direction=\"on\",\
 },\
 [0xFE49]={\
  direction=\"on\",\
 },\
 [0xFE4A]={\
  direction=\"on\",\
 },\
 [0xFE4B]={\
  direction=\"on\",\
 },\
 [0xFE4C]={\
  direction=\"on\",\
 },\
 [0xFE4D]={\
  direction=\"on\",\
 },\
 [0xFE4E]={\
  direction=\"on\",\
 },\
 [0xFE4F]={\
  direction=\"on\",\
 },\
 [0xFE50]={\
  direction=\"cs\",\
 },\
 [0xFE51]={\
  direction=\"on\",\
 },\
 [0xFE52]={\
  direction=\"cs\",\
 },\
 [0xFE54]={\
  direction=\"on\",\
 },\
 [0xFE55]={\
  direction=\"cs\",\
 },\
 [0xFE56]={\
  direction=\"on\",\
 },\
 [0xFE57]={\
  direction=\"on\",\
 },\
 [0xFE58]={\
  direction=\"on\",\
 },\
 [0xFE59]={\
  direction=\"on\",\
  mirror=0xFE5A,\
 },\
 [0xFE5A]={\
  direction=\"on\",\
  mirror=0xFE59,\
 },\
 [0xFE5B]={\
  direction=\"on\",\
  mirror=0xFE5C,\
 },\
 [0xFE5C]={\
  direction=\"on\",\
  mirror=0xFE5B,\
 },\
 [0xFE5D]={\
  direction=\"on\",\
  mirror=0xFE5E,\
 },\
 [0xFE5E]={\
  direction=\"on\",\
  mirror=0xFE5D,\
 },\
 [0xFE5F]={\
  direction=\"et\",\
 },\
 [0xFE60]={\
  direction=\"on\",\
 },\
 [0xFE61]={\
  direction=\"on\",\
 },\
 [0xFE62]={\
  direction=\"es\",\
 },\
 [0xFE63]={\
  direction=\"es\",\
 },\
 [0xFE64]={\
  direction=\"on\",\
  mirror=0xFE65,\
 },\
 [0xFE65]={\
  direction=\"on\",\
  mirror=0xFE64,\
 },\
 [0xFE66]={\
  direction=\"on\",\
 },\
 [0xFE68]={\
  direction=\"on\",\
 },\
 [0xFE69]={\
  direction=\"et\",\
 },\
 [0xFE6A]={\
  direction=\"et\",\
 },\
 [0xFE6B]={\
  direction=\"on\",\
 },\
 [0xFE70]={\
  direction=\"al\",\
 },\
 [0xFE71]={\
  direction=\"al\",\
 },\
 [0xFE72]={\
  direction=\"al\",\
 },\
 [0xFE73]={\
  direction=\"al\",\
 },\
 [0xFE74]={\
  direction=\"al\",\
 },\
 [0xFE76]={\
  direction=\"al\",\
 },\
 [0xFE77]={\
  direction=\"al\",\
 },\
 [0xFE78]={\
  direction=\"al\",\
 },\
 [0xFE79]={\
  direction=\"al\",\
 },\
 [0xFE7A]={\
  direction=\"al\",\
 },\
 [0xFE7B]={\
  direction=\"al\",\
 },\
 [0xFE7C]={\
  direction=\"al\",\
 },\
 [0xFE7D]={\
  direction=\"al\",\
 },\
 [0xFE7E]={\
  direction=\"al\",\
 },\
 [0xFE7F]={\
  direction=\"al\",\
 },\
 [0xFE80]={\
  direction=\"al\",\
 },\
 [0xFE81]={\
  direction=\"al\",\
 },\
 [0xFE82]={\
  direction=\"al\",\
 },\
 [0xFE83]={\
  direction=\"al\",\
 },\
 [0xFE84]={\
  direction=\"al\",\
 },\
 [0xFE85]={\
  direction=\"al\",\
 },\
 [0xFE86]={\
  direction=\"al\",\
 },\
 [0xFE87]={\
  direction=\"al\",\
 },\
 [0xFE88]={\
  direction=\"al\",\
 },\
 [0xFE89]={\
  direction=\"al\",\
 },\
 [0xFE8A]={\
  direction=\"al\",\
 },\
 [0xFE8B]={\
  direction=\"al\",\
 },\
 [0xFE8C]={\
  direction=\"al\",\
 },\
 [0xFE8D]={\
  direction=\"al\",\
 },\
 [0xFE8E]={\
  direction=\"al\",\
 },\
 [0xFE8F]={\
  direction=\"al\",\
 },\
 [0xFE90]={\
  direction=\"al\",\
 },\
 [0xFE91]={\
  direction=\"al\",\
 },\
 [0xFE92]={\
  direction=\"al\",\
 },\
 [0xFE93]={\
  direction=\"al\",\
 },\
 [0xFE94]={\
  direction=\"al\",\
 },\
 [0xFE95]={\
  direction=\"al\",\
 },\
 [0xFE96]={\
  direction=\"al\",\
 },\
 [0xFE97]={\
  direction=\"al\",\
 },\
 [0xFE98]={\
  direction=\"al\",\
 },\
 [0xFE99]={\
  direction=\"al\",\
 },\
 [0xFE9A]={\
  direction=\"al\",\
 },\
 [0xFE9B]={\
  direction=\"al\",\
 },\
 [0xFE9C]={\
  direction=\"al\",\
 },\
 [0xFE9D]={\
  direction=\"al\",\
 },\
 [0xFE9E]={\
  direction=\"al\",\
 },\
 [0xFE9F]={\
  direction=\"al\",\
 },\
 [0xFEA0]={\
  direction=\"al\",\
 },\
 [0xFEA1]={\
  direction=\"al\",\
 },\
 [0xFEA2]={\
  direction=\"al\",\
 },\
 [0xFEA3]={\
  direction=\"al\",\
 },\
 [0xFEA4]={\
  direction=\"al\",\
 },\
 [0xFEA5]={\
  direction=\"al\",\
 },\
 [0xFEA6]={\
  direction=\"al\",\
 },\
 [0xFEA7]={\
  direction=\"al\",\
 },\
 [0xFEA8]={\
  direction=\"al\",\
 },\
 [0xFEA9]={\
  direction=\"al\",\
 },\
 [0xFEAA]={\
  direction=\"al\",\
 },\
 [0xFEAB]={\
  direction=\"al\",\
 },\
 [0xFEAC]={\
  direction=\"al\",\
 },\
 [0xFEAD]={\
  direction=\"al\",\
 },\
 [0xFEAE]={\
  direction=\"al\",\
 },\
 [0xFEAF]={\
  direction=\"al\",\
 },\
 [0xFEB0]={\
  direction=\"al\",\
 },\
 [0xFEB1]={\
  direction=\"al\",\
 },\
 [0xFEB2]={\
  direction=\"al\",\
 },\
 [0xFEB3]={\
  direction=\"al\",\
 },\
 [0xFEB4]={\
  direction=\"al\",\
 },\
 [0xFEB5]={\
  direction=\"al\",\
 },\
 [0xFEB6]={\
  direction=\"al\",\
 },\
 [0xFEB7]={\
  direction=\"al\",\
 },\
 [0xFEB8]={\
  direction=\"al\",\
 },\
 [0xFEB9]={\
  direction=\"al\",\
 },\
 [0xFEBA]={\
  direction=\"al\",\
 },\
 [0xFEBB]={\
  direction=\"al\",\
 },\
 [0xFEBC]={\
  direction=\"al\",\
 },\
 [0xFEBD]={\
  direction=\"al\",\
 },\
 [0xFEBE]={\
  direction=\"al\",\
 },\
 [0xFEBF]={\
  direction=\"al\",\
 },\
 [0xFEC0]={\
  direction=\"al\",\
 },\
 [0xFEC1]={\
  direction=\"al\",\
 },\
 [0xFEC2]={\
  direction=\"al\",\
 },\
 [0xFEC3]={\
  direction=\"al\",\
 },\
 [0xFEC4]={\
  direction=\"al\",\
 },\
 [0xFEC5]={\
  direction=\"al\",\
 },\
 [0xFEC6]={\
  direction=\"al\",\
 },\
 [0xFEC7]={\
  direction=\"al\",\
 },\
 [0xFEC8]={\
  direction=\"al\",\
 },\
 [0xFEC9]={\
  direction=\"al\",\
 },\
 [0xFECA]={\
  direction=\"al\",\
 },\
 [0xFECB]={\
  direction=\"al\",\
 },\
 [0xFECC]={\
  direction=\"al\",\
 },\
 [0xFECD]={\
  direction=\"al\",\
 },\
 [0xFECE]={\
  direction=\"al\",\
 },\
 [0xFECF]={\
  direction=\"al\",\
 },\
 [0xFED0]={\
  direction=\"al\",\
 },\
 [0xFED1]={\
  direction=\"al\",\
 },\
 [0xFED2]={\
  direction=\"al\",\
 },\
 [0xFED3]={\
  direction=\"al\",\
 },\
 [0xFED4]={\
  direction=\"al\",\
 },\
 [0xFED5]={\
  direction=\"al\",\
 },\
 [0xFED6]={\
  direction=\"al\",\
 },\
 [0xFED7]={\
  direction=\"al\",\
 },\
 [0xFED8]={\
  direction=\"al\",\
 },\
 [0xFED9]={\
  direction=\"al\",\
 },\
 [0xFEDA]={\
  direction=\"al\",\
 },\
 [0xFEDB]={\
  direction=\"al\",\
 },\
 [0xFEDC]={\
  direction=\"al\",\
 },\
 [0xFEDD]={\
  direction=\"al\",\
 },\
 [0xFEDE]={\
  direction=\"al\",\
 },\
 [0xFEDF]={\
  direction=\"al\",\
 },\
 [0xFEE0]={\
  direction=\"al\",\
 },\
 [0xFEE1]={\
  direction=\"al\",\
 },\
 [0xFEE2]={\
  direction=\"al\",\
 },\
 [0xFEE3]={\
  direction=\"al\",\
 },\
 [0xFEE4]={\
  direction=\"al\",\
 },\
 [0xFEE5]={\
  direction=\"al\",\
 },\
 [0xFEE6]={\
  direction=\"al\",\
 },\
 [0xFEE7]={\
  direction=\"al\",\
 },\
 [0xFEE8]={\
  direction=\"al\",\
 },\
 [0xFEE9]={\
  direction=\"al\",\
 },\
 [0xFEEA]={\
  direction=\"al\",\
 },\
 [0xFEEB]={\
  direction=\"al\",\
 },\
 [0xFEEC]={\
  direction=\"al\",\
 },\
 [0xFEED]={\
  direction=\"al\",\
 },\
 [0xFEEE]={\
  direction=\"al\",\
 },\
 [0xFEEF]={\
  direction=\"al\",\
 },\
 [0xFEF0]={\
  direction=\"al\",\
 },\
 [0xFEF1]={\
  direction=\"al\",\
 },\
 [0xFEF2]={\
  direction=\"al\",\
 },\
 [0xFEF3]={\
  direction=\"al\",\
 },\
 [0xFEF4]={\
  direction=\"al\",\
 },\
 [0xFEF5]={\
  direction=\"al\",\
 },\
 [0xFEF6]={\
  direction=\"al\",\
 },\
 [0xFEF7]={\
  direction=\"al\",\
 },\
 [0xFEF8]={\
  direction=\"al\",\
 },\
 [0xFEF9]={\
  direction=\"al\",\
 },\
 [0xFEFA]={\
  direction=\"al\",\
 },\
 [0xFEFB]={\
  direction=\"al\",\
 },\
 [0xFEFC]={\
  direction=\"al\",\
 },\
 [0xFEFF]={\
  direction=\"bn\",\
 },\
 [0xFF01]={\
  direction=\"on\",\
 },\
 [0xFF02]={\
  direction=\"on\",\
 },\
 [0xFF03]={\
  direction=\"et\",\
 },\
 [0xFF04]={\
  direction=\"et\",\
 },\
 [0xFF05]={\
  direction=\"et\",\
 },\
 [0xFF06]={\
  direction=\"on\",\
 },\
 [0xFF07]={\
  direction=\"on\",\
 },\
 [0xFF08]={\
  direction=\"on\",\
  mirror=0xFF09,\
 },\
 [0xFF09]={\
  direction=\"on\",\
  mirror=0xFF08,\
 },\
 [0xFF0A]={\
  direction=\"on\",\
 },\
 [0xFF0B]={\
  direction=\"es\",\
 },\
 [0xFF0C]={\
  direction=\"cs\",\
 },\
 [0xFF0D]={\
  direction=\"es\",\
 },\
 [0xFF0E]={\
  direction=\"cs\",\
 },\
 [0xFF0F]={\
  direction=\"cs\",\
 },\
 [0xFF10]={\
  direction=\"en\",\
 },\
 [0xFF11]={\
  direction=\"en\",\
 },\
 [0xFF12]={\
  direction=\"en\",\
 },\
 [0xFF13]={\
  direction=\"en\",\
 },\
 [0xFF14]={\
  direction=\"en\",\
 },\
 [0xFF15]={\
  direction=\"en\",\
 },\
 [0xFF16]={\
  direction=\"en\",\
 },\
 [0xFF17]={\
  direction=\"en\",\
 },\
 [0xFF18]={\
  direction=\"en\",\
 },\
 [0xFF19]={\
  direction=\"en\",\
 },\
 [0xFF1A]={\
  direction=\"cs\",\
 },\
 [0xFF1B]={\
  direction=\"on\",\
 },\
 [0xFF1C]={\
  direction=\"on\",\
  mirror=0xFF1E,\
 },\
 [0xFF1D]={\
  direction=\"on\",\
 },\
 [0xFF1E]={\
  direction=\"on\",\
  mirror=0xFF1C,\
 },\
 [0xFF1F]={\
  direction=\"on\",\
 },\
 [0xFF20]={\
  direction=\"on\",\
 },\
 [0xFF21]={\
  direction=\"l\",\
 },\
 [0xFF22]={\
  direction=\"l\",\
 },\
 [0xFF23]={\
  direction=\"l\",\
 },\
 [0xFF24]={\
  direction=\"l\",\
 },\
 [0xFF25]={\
  direction=\"l\",\
 },\
 [0xFF26]={\
  direction=\"l\",\
 },\
 [0xFF27]={\
  direction=\"l\",\
 },\
 [0xFF28]={\
  direction=\"l\",\
 },\
 [0xFF29]={\
  direction=\"l\",\
 },\
 [0xFF2A]={\
  direction=\"l\",\
 },\
 [0xFF2B]={\
  direction=\"l\",\
 },\
 [0xFF2C]={\
  direction=\"l\",\
 },\
 [0xFF2D]={\
  direction=\"l\",\
 },\
 [0xFF2E]={\
  direction=\"l\",\
 },\
 [0xFF2F]={\
  direction=\"l\",\
 },\
 [0xFF30]={\
  direction=\"l\",\
 },\
 [0xFF31]={\
  direction=\"l\",\
 },\
 [0xFF32]={\
  direction=\"l\",\
 },\
 [0xFF33]={\
  direction=\"l\",\
 },\
 [0xFF34]={\
  direction=\"l\",\
 },\
 [0xFF35]={\
  direction=\"l\",\
 },\
 [0xFF36]={\
  direction=\"l\",\
 },\
 [0xFF37]={\
  direction=\"l\",\
 },\
 [0xFF38]={\
  direction=\"l\",\
 },\
 [0xFF39]={\
  direction=\"l\",\
 },\
 [0xFF3A]={\
  direction=\"l\",\
 },\
 [0xFF3B]={\
  direction=\"on\",\
  mirror=0xFF3D,\
 },\
 [0xFF3C]={\
  direction=\"on\",\
 },\
 [0xFF3D]={\
  direction=\"on\",\
  mirror=0xFF3B,\
 },\
 [0xFF3E]={\
  direction=\"on\",\
 },\
 [0xFF3F]={\
  direction=\"on\",\
 },\
 [0xFF40]={\
  direction=\"on\",\
 },\
 [0xFF41]={\
  direction=\"l\",\
 },\
 [0xFF42]={\
  direction=\"l\",\
 },\
 [0xFF43]={\
  direction=\"l\",\
 },\
 [0xFF44]={\
  direction=\"l\",\
 },\
 [0xFF45]={\
  direction=\"l\",\
 },\
 [0xFF46]={\
  direction=\"l\",\
 },\
 [0xFF47]={\
  direction=\"l\",\
 },\
 [0xFF48]={\
  direction=\"l\",\
 },\
 [0xFF49]={\
  direction=\"l\",\
 },\
 [0xFF4A]={\
  direction=\"l\",\
 },\
 [0xFF4B]={\
  direction=\"l\",\
 },\
 [0xFF4C]={\
  direction=\"l\",\
 },\
 [0xFF4D]={\
  direction=\"l\",\
 },\
 [0xFF4E]={\
  direction=\"l\",\
 },\
 [0xFF4F]={\
  direction=\"l\",\
 },\
 [0xFF50]={\
  direction=\"l\",\
 },\
 [0xFF51]={\
  direction=\"l\",\
 },\
 [0xFF52]={\
  direction=\"l\",\
 },\
 [0xFF53]={\
  direction=\"l\",\
 },\
 [0xFF54]={\
  direction=\"l\",\
 },\
 [0xFF55]={\
  direction=\"l\",\
 },\
 [0xFF56]={\
  direction=\"l\",\
 },\
 [0xFF57]={\
  direction=\"l\",\
 },\
 [0xFF58]={\
  direction=\"l\",\
 },\
 [0xFF59]={\
  direction=\"l\",\
 },\
 [0xFF5A]={\
  direction=\"l\",\
 },\
 [0xFF5B]={\
  direction=\"on\",\
  mirror=0xFF5D,\
 },\
 [0xFF5C]={\
  direction=\"on\",\
 },\
 [0xFF5D]={\
  direction=\"on\",\
  mirror=0xFF5B,\
 },\
 [0xFF5E]={\
  direction=\"on\",\
 },\
 [0xFF5F]={\
  direction=\"on\",\
  mirror=0xFF60,\
 },\
 [0xFF60]={\
  direction=\"on\",\
  mirror=0xFF5F,\
 },\
 [0xFF61]={\
  direction=\"on\",\
 },\
 [0xFF62]={\
  direction=\"on\",\
  mirror=0xFF63,\
 },\
 [0xFF63]={\
  direction=\"on\",\
  mirror=0xFF62,\
 },\
 [0xFF64]={\
  direction=\"on\",\
 },\
 [0xFF65]={\
  direction=\"on\",\
 },\
 [0xFF66]={\
  direction=\"l\",\
 },\
 [0xFF67]={\
  direction=\"l\",\
 },\
 [0xFF68]={\
  direction=\"l\",\
 },\
 [0xFF69]={\
  direction=\"l\",\
 },\
 [0xFF6A]={\
  direction=\"l\",\
 },\
 [0xFF6B]={\
  direction=\"l\",\
 },\
 [0xFF6C]={\
  direction=\"l\",\
 },\
 [0xFF6D]={\
  direction=\"l\",\
 },\
 [0xFF6E]={\
  direction=\"l\",\
 },\
 [0xFF6F]={\
  direction=\"l\",\
 },\
 [0xFF70]={\
  direction=\"l\",\
 },\
 [0xFF71]={\
  direction=\"l\",\
 },\
 [0xFF72]={\
  direction=\"l\",\
 },\
 [0xFF73]={\
  direction=\"l\",\
 },\
 [0xFF74]={\
  direction=\"l\",\
 },\
 [0xFF75]={\
  direction=\"l\",\
 },\
 [0xFF76]={\
  direction=\"l\",\
 },\
 [0xFF77]={\
  direction=\"l\",\
 },\
 [0xFF78]={\
  direction=\"l\",\
 },\
 [0xFF79]={\
  direction=\"l\",\
 },\
 [0xFF7A]={\
  direction=\"l\",\
 },\
 [0xFF7B]={\
  direction=\"l\",\
 },\
 [0xFF7C]={\
  direction=\"l\",\
 },\
 [0xFF7D]={\
  direction=\"l\",\
 },\
 [0xFF7E]={\
  direction=\"l\",\
 },\
 [0xFF7F]={\
  direction=\"l\",\
 },\
 [0xFF80]={\
  direction=\"l\",\
 },\
 [0xFF81]={\
  direction=\"l\",\
 },\
 [0xFF82]={\
  direction=\"l\",\
 },\
 [0xFF83]={\
  direction=\"l\",\
 },\
 [0xFF84]={\
  direction=\"l\",\
 },\
 [0xFF85]={\
  direction=\"l\",\
 },\
 [0xFF86]={\
  direction=\"l\",\
 },\
 [0xFF87]={\
  direction=\"l\",\
 },\
 [0xFF88]={\
  direction=\"l\",\
 },\
 [0xFF89]={\
  direction=\"l\",\
 },\
 [0xFF8A]={\
  direction=\"l\",\
 },\
 [0xFF8B]={\
  direction=\"l\",\
 },\
 [0xFF8C]={\
  direction=\"l\",\
 },\
 [0xFF8D]={\
  direction=\"l\",\
 },\
 [0xFF8E]={\
  direction=\"l\",\
 },\
 [0xFF8F]={\
  direction=\"l\",\
 },\
 [0xFF90]={\
  direction=\"l\",\
 },\
 [0xFF91]={\
  direction=\"l\",\
 },\
 [0xFF92]={\
  direction=\"l\",\
 },\
 [0xFF93]={\
  direction=\"l\",\
 },\
 [0xFF94]={\
  direction=\"l\",\
 },\
 [0xFF95]={\
  direction=\"l\",\
 },\
 [0xFF96]={\
  direction=\"l\",\
 },\
 [0xFF97]={\
  direction=\"l\",\
 },\
 [0xFF98]={\
  direction=\"l\",\
 },\
 [0xFF99]={\
  direction=\"l\",\
 },\
 [0xFF9A]={\
  direction=\"l\",\
 },\
 [0xFF9B]={\
  direction=\"l\",\
 },\
 [0xFF9C]={\
  direction=\"l\",\
 },\
 [0xFF9D]={\
  direction=\"l\",\
 },\
 [0xFF9E]={\
  direction=\"l\",\
 },\
 [0xFF9F]={\
  direction=\"l\",\
 },\
 [0xFFA0]={\
  direction=\"l\",\
 },\
 [0xFFA1]={\
  direction=\"l\",\
 },\
 [0xFFA2]={\
  direction=\"l\",\
 },\
 [0xFFA3]={\
  direction=\"l\",\
 },\
 [0xFFA4]={\
  direction=\"l\",\
 },\
 [0xFFA5]={\
  direction=\"l\",\
 },\
 [0xFFA6]={\
  direction=\"l\",\
 },\
 [0xFFA7]={\
  direction=\"l\",\
 },\
 [0xFFA8]={\
  direction=\"l\",\
 },\
 [0xFFA9]={\
  direction=\"l\",\
 },\
 [0xFFAA]={\
  direction=\"l\",\
 },\
 [0xFFAB]={\
  direction=\"l\",\
 },\
 [0xFFAC]={\
  direction=\"l\",\
 },\
 [0xFFAD]={\
  direction=\"l\",\
 },\
 [0xFFAE]={\
  direction=\"l\",\
 },\
 [0xFFAF]={\
  direction=\"l\",\
 },\
 [0xFFB0]={\
  direction=\"l\",\
 },\
 [0xFFB1]={\
  direction=\"l\",\
 },\
 [0xFFB2]={\
  direction=\"l\",\
 },\
 [0xFFB3]={\
  direction=\"l\",\
 },\
 [0xFFB4]={\
  direction=\"l\",\
 },\
 [0xFFB5]={\
  direction=\"l\",\
 },\
 [0xFFB6]={\
  direction=\"l\",\
 },\
 [0xFFB7]={\
  direction=\"l\",\
 },\
 [0xFFB8]={\
  direction=\"l\",\
 },\
 [0xFFB9]={\
  direction=\"l\",\
 },\
 [0xFFBA]={\
  direction=\"l\",\
 },\
 [0xFFBB]={\
  direction=\"l\",\
 },\
 [0xFFBC]={\
  direction=\"l\",\
 },\
 [0xFFBD]={\
  direction=\"l\",\
 },\
 [0xFFBE]={\
  direction=\"l\",\
 },\
 [0xFFC2]={\
  direction=\"l\",\
 },\
 [0xFFC3]={\
  direction=\"l\",\
 },\
 [0xFFC4]={\
  direction=\"l\",\
 },\
 [0xFFC5]={\
  direction=\"l\",\
 },\
 [0xFFC6]={\
  direction=\"l\",\
 },\
 [0xFFC7]={\
  direction=\"l\",\
 },\
 [0xFFCA]={\
  direction=\"l\",\
 },\
 [0xFFCB]={\
  direction=\"l\",\
 },\
 [0xFFCC]={\
  direction=\"l\",\
 },\
 [0xFFCD]={\
  direction=\"l\",\
 },\
 [0xFFCE]={\
  direction=\"l\",\
 },\
 [0xFFCF]={\
  direction=\"l\",\
 },\
 [0xFFD2]={\
  direction=\"l\",\
 },\
 [0xFFD3]={\
  direction=\"l\",\
 },\
 [0xFFD4]={\
  direction=\"l\",\
 },\
 [0xFFD5]={\
  direction=\"l\",\
 },\
 [0xFFD6]={\
  direction=\"l\",\
 },\
 [0xFFD7]={\
  direction=\"l\",\
 },\
 [0xFFDA]={\
  direction=\"l\",\
 },\
 [0xFFDB]={\
  direction=\"l\",\
 },\
 [0xFFDC]={\
  direction=\"l\",\
 },\
 [0xFFE0]={\
  direction=\"et\",\
 },\
 [0xFFE1]={\
  direction=\"et\",\
 },\
 [0xFFE2]={\
  direction=\"on\",\
 },\
 [0xFFE3]={\
  direction=\"on\",\
 },\
 [0xFFE4]={\
  direction=\"on\",\
 },\
 [0xFFE5]={\
  direction=\"et\",\
 },\
 [0xFFE6]={\
  direction=\"et\",\
 },\
 [0xFFE8]={\
  direction=\"on\",\
 },\
 [0xFFE9]={\
  direction=\"on\",\
 },\
 [0xFFEA]={\
  direction=\"on\",\
 },\
 [0xFFEB]={\
  direction=\"on\",\
 },\
 [0xFFEC]={\
  direction=\"on\",\
 },\
 [0xFFED]={\
  direction=\"on\",\
 },\
 [0xFFEE]={\
  direction=\"on\",\
 },\
 [0xFFF9]={\
  direction=\"on\",\
 },\
 [0xFFFA]={\
  direction=\"on\",\
 },\
 [0xFFFB]={\
  direction=\"on\",\
 },\
 [0xFFFC]={\
  direction=\"on\",\
 },\
 [0xFFFD]={\
  direction=\"on\",\
 },\
 [0x10000]={\
  direction=\"l\",\
 },\
 [0x10001]={\
  direction=\"l\",\
 },\
 [0x10002]={\
  direction=\"l\",\
 },\
 [0x10003]={\
  direction=\"l\",\
 },\
 [0x10004]={\
  direction=\"l\",\
 },\
 [0x10005]={\
  direction=\"l\",\
 },\
 [0x10006]={\
  direction=\"l\",\
 },\
 [0x10007]={\
  direction=\"l\",\
 },\
 [0x10008]={\
  direction=\"l\",\
 },\
 [0x10009]={\
  direction=\"l\",\
 },\
 [0x1000A]={\
  direction=\"l\",\
 },\
 [0x1000B]={\
  direction=\"l\",\
 },\
 [0x1000D]={\
  direction=\"l\",\
 },\
 [0x1000E]={\
  direction=\"l\",\
 },\
 [0x1000F]={\
  direction=\"l\",\
 },\
 [0x10010]={\
  direction=\"l\",\
 },\
 [0x10011]={\
  direction=\"l\",\
 },\
 [0x10012]={\
  direction=\"l\",\
 },\
 [0x10013]={\
  direction=\"l\",\
 },\
 [0x10014]={\
  direction=\"l\",\
 },\
 [0x10015]={\
  direction=\"l\",\
 },\
 [0x10016]={\
  direction=\"l\",\
 },\
 [0x10017]={\
  direction=\"l\",\
 },\
 [0x10018]={\
  direction=\"l\",\
 },\
 [0x10019]={\
  direction=\"l\",\
 },\
 [0x1001A]={\
  direction=\"l\",\
 },\
 [0x1001B]={\
  direction=\"l\",\
 },\
 [0x1001C]={\
  direction=\"l\",\
 },\
 [0x1001D]={\
  direction=\"l\",\
 },\
 [0x1001E]={\
  direction=\"l\",\
 },\
 [0x1001F]={\
  direction=\"l\",\
 },\
 [0x10020]={\
  direction=\"l\",\
 },\
 [0x10021]={\
  direction=\"l\",\
 },\
 [0x10022]={\
  direction=\"l\",\
 },\
 [0x10023]={\
  direction=\"l\",\
 },\
 [0x10024]={\
  direction=\"l\",\
 },\
 [0x10025]={\
  direction=\"l\",\
 },\
 [0x10026]={\
  direction=\"l\",\
 },\
 [0x10028]={\
  direction=\"l\",\
 },\
 [0x10029]={\
  direction=\"l\",\
 },\
 [0x1002A]={\
  direction=\"l\",\
 },\
 [0x1002B]={\
  direction=\"l\",\
 },\
 [0x1002C]={\
  direction=\"l\",\
 },\
 [0x1002D]={\
  direction=\"l\",\
 },\
 [0x1002E]={\
  direction=\"l\",\
 },\
 [0x1002F]={\
  direction=\"l\",\
 },\
 [0x10030]={\
  direction=\"l\",\
 },\
 [0x10031]={\
  direction=\"l\",\
 },\
 [0x10032]={\
  direction=\"l\",\
 },\
 [0x10033]={\
  direction=\"l\",\
 },\
 [0x10034]={\
  direction=\"l\",\
 },\
 [0x10035]={\
  direction=\"l\",\
 },\
 [0x10036]={\
  direction=\"l\",\
 },\
 [0x10037]={\
  direction=\"l\",\
 },\
 [0x10038]={\
  direction=\"l\",\
 },\
 [0x10039]={\
  direction=\"l\",\
 },\
 [0x1003A]={\
  direction=\"l\",\
 },\
 [0x1003C]={\
  direction=\"l\",\
 },\
 [0x1003D]={\
  direction=\"l\",\
 },\
 [0x1003F]={\
  direction=\"l\",\
 },\
 [0x10040]={\
  direction=\"l\",\
 },\
 [0x10041]={\
  direction=\"l\",\
 },\
 [0x10042]={\
  direction=\"l\",\
 },\
 [0x10043]={\
  direction=\"l\",\
 },\
 [0x10044]={\
  direction=\"l\",\
 },\
 [0x10045]={\
  direction=\"l\",\
 },\
 [0x10046]={\
  direction=\"l\",\
 },\
 [0x10047]={\
  direction=\"l\",\
 },\
 [0x10048]={\
  direction=\"l\",\
 },\
 [0x10049]={\
  direction=\"l\",\
 },\
 [0x1004A]={\
  direction=\"l\",\
 },\
 [0x1004B]={\
  direction=\"l\",\
 },\
 [0x1004C]={\
  direction=\"l\",\
 },\
 [0x1004D]={\
  direction=\"l\",\
 },\
 [0x10050]={\
  direction=\"l\",\
 },\
 [0x10051]={\
  direction=\"l\",\
 },\
 [0x10052]={\
  direction=\"l\",\
 },\
 [0x10053]={\
  direction=\"l\",\
 },\
 [0x10054]={\
  direction=\"l\",\
 },\
 [0x10055]={\
  direction=\"l\",\
 },\
 [0x10056]={\
  direction=\"l\",\
 },\
 [0x10057]={\
  direction=\"l\",\
 },\
 [0x10058]={\
  direction=\"l\",\
 },\
 [0x10059]={\
  direction=\"l\",\
 },\
 [0x1005A]={\
  direction=\"l\",\
 },\
 [0x1005B]={\
  direction=\"l\",\
 },\
 [0x1005C]={\
  direction=\"l\",\
 },\
 [0x1005D]={\
  direction=\"l\",\
 },\
 [0x10080]={\
  direction=\"l\",\
 },\
 [0x10081]={\
  direction=\"l\",\
 },\
 [0x10082]={\
  direction=\"l\",\
 },\
 [0x10083]={\
  direction=\"l\",\
 },\
 [0x10084]={\
  direction=\"l\",\
 },\
 [0x10085]={\
  direction=\"l\",\
 },\
 [0x10086]={\
  direction=\"l\",\
 },\
 [0x10087]={\
  direction=\"l\",\
 },\
 [0x10088]={\
  direction=\"l\",\
 },\
 [0x10089]={\
  direction=\"l\",\
 },\
 [0x1008A]={\
  direction=\"l\",\
 },\
 [0x1008B]={\
  direction=\"l\",\
 },\
 [0x1008C]={\
  direction=\"l\",\
 },\
 [0x1008D]={\
  direction=\"l\",\
 },\
 [0x1008E]={\
  direction=\"l\",\
 },\
 [0x1008F]={\
  direction=\"l\",\
 },\
 [0x10090]={\
  direction=\"l\",\
 },\
 [0x10091]={\
  direction=\"l\",\
 },\
 [0x10092]={\
  direction=\"l\",\
 },\
 [0x10093]={\
  direction=\"l\",\
 },\
 [0x10094]={\
  direction=\"l\",\
 },\
 [0x10095]={\
  direction=\"l\",\
 },\
 [0x10096]={\
  direction=\"l\",\
 },\
 [0x10097]={\
  direction=\"l\",\
 },\
 [0x10098]={\
  direction=\"l\",\
 },\
 [0x10099]={\
  direction=\"l\",\
 },\
 [0x1009A]={\
  direction=\"l\",\
 },\
 [0x1009B]={\
  direction=\"l\",\
 },\
 [0x1009C]={\
  direction=\"l\",\
 },\
 [0x1009D]={\
  direction=\"l\",\
 },\
 [0x1009E]={\
  direction=\"l\",\
 },\
 [0x1009F]={\
  direction=\"l\",\
 },\
 [0x100A0]={\
  direction=\"l\",\
 },\
 [0x100A1]={\
  direction=\"l\",\
 },\
 [0x100A2]={\
  direction=\"l\",\
 },\
 [0x100A3]={\
  direction=\"l\",\
 },\
 [0x100A4]={\
  direction=\"l\",\
 },\
 [0x100A5]={\
  direction=\"l\",\
 },\
 [0x100A6]={\
  direction=\"l\",\
 },\
 [0x100A7]={\
  direction=\"l\",\
 },\
 [0x100A8]={\
  direction=\"l\",\
 },\
 [0x100A9]={\
  direction=\"l\",\
 },\
 [0x100AA]={\
  direction=\"l\",\
 },\
 [0x100AB]={\
  direction=\"l\",\
 },\
 [0x100AC]={\
  direction=\"l\",\
 },\
 [0x100AD]={\
  direction=\"l\",\
 },\
 [0x100AE]={\
  direction=\"l\",\
 },\
 [0x100AF]={\
  direction=\"l\",\
 },\
 [0x100B0]={\
  direction=\"l\",\
 },\
 [0x100B1]={\
  direction=\"l\",\
 },\
 [0x100B2]={\
  direction=\"l\",\
 },\
 [0x100B3]={\
  direction=\"l\",\
 },\
 [0x100B4]={\
  direction=\"l\",\
 },\
 [0x100B5]={\
  direction=\"l\",\
 },\
 [0x100B6]={\
  direction=\"l\",\
 },\
 [0x100B7]={\
  direction=\"l\",\
 },\
 [0x100B8]={\
  direction=\"l\",\
 },\
 [0x100B9]={\
  direction=\"l\",\
 },\
 [0x100BA]={\
  direction=\"l\",\
 },\
 [0x100BB]={\
  direction=\"l\",\
 },\
 [0x100BC]={\
  direction=\"l\",\
 },\
 [0x100BD]={\
  direction=\"l\",\
 },\
 [0x100BE]={\
  direction=\"l\",\
 },\
 [0x100BF]={\
  direction=\"l\",\
 },\
 [0x100C0]={\
  direction=\"l\",\
 },\
 [0x100C1]={\
  direction=\"l\",\
 },\
 [0x100C2]={\
  direction=\"l\",\
 },\
 [0x100C3]={\
  direction=\"l\",\
 },\
 [0x100C4]={\
  direction=\"l\",\
 },\
 [0x100C5]={\
  direction=\"l\",\
 },\
 [0x100C6]={\
  direction=\"l\",\
 },\
 [0x100C7]={\
  direction=\"l\",\
 },\
 [0x100C8]={\
  direction=\"l\",\
 },\
 [0x100C9]={\
  direction=\"l\",\
 },\
 [0x100CA]={\
  direction=\"l\",\
 },\
 [0x100CB]={\
  direction=\"l\",\
 },\
 [0x100CC]={\
  direction=\"l\",\
 },\
 [0x100CD]={\
  direction=\"l\",\
 },\
 [0x100CE]={\
  direction=\"l\",\
 },\
 [0x100CF]={\
  direction=\"l\",\
 },\
 [0x100D0]={\
  direction=\"l\",\
 },\
 [0x100D1]={\
  direction=\"l\",\
 },\
 [0x100D2]={\
  direction=\"l\",\
 },\
 [0x100D3]={\
  direction=\"l\",\
 },\
 [0x100D4]={\
  direction=\"l\",\
 },\
 [0x100D5]={\
  direction=\"l\",\
 },\
 [0x100D6]={\
  direction=\"l\",\
 },\
 [0x100D7]={\
  direction=\"l\",\
 },\
 [0x100D8]={\
  direction=\"l\",\
 },\
 [0x100D9]={\
  direction=\"l\",\
 },\
 [0x100DA]={\
  direction=\"l\",\
 },\
 [0x100DB]={\
  direction=\"l\",\
 },\
 [0x100DC]={\
  direction=\"l\",\
 },\
 [0x100DD]={\
  direction=\"l\",\
 },\
 [0x100DE]={\
  direction=\"l\",\
 },\
 [0x100DF]={\
  direction=\"l\",\
 },\
 [0x100E0]={\
  direction=\"l\",\
 },\
 [0x100E1]={\
  direction=\"l\",\
 },\
 [0x100E2]={\
  direction=\"l\",\
 },\
 [0x100E3]={\
  direction=\"l\",\
 },\
 [0x100E4]={\
  direction=\"l\",\
 },\
 [0x100E5]={\
  direction=\"l\",\
 },\
 [0x100E6]={\
  direction=\"l\",\
 },\
 [0x100E7]={\
  direction=\"l\",\
 },\
 [0x100E8]={\
  direction=\"l\",\
 },\
 [0x100E9]={\
  direction=\"l\",\
 },\
 [0x100EA]={\
  direction=\"l\",\
 },\
 [0x100EB]={\
  direction=\"l\",\
 },\
 [0x100EC]={\
  direction=\"l\",\
 },\
 [0x100ED]={\
  direction=\"l\",\
 },\
 [0x100EE]={\
  direction=\"l\",\
 },\
 [0x100EF]={\
  direction=\"l\",\
 },\
 [0x100F0]={\
  direction=\"l\",\
 },\
 [0x100F1]={\
  direction=\"l\",\
 },\
 [0x100F2]={\
  direction=\"l\",\
 },\
 [0x100F3]={\
  direction=\"l\",\
 },\
 [0x100F4]={\
  direction=\"l\",\
 },\
 [0x100F5]={\
  direction=\"l\",\
 },\
 [0x100F6]={\
  direction=\"l\",\
 },\
 [0x100F7]={\
  direction=\"l\",\
 },\
 [0x100F8]={\
  direction=\"l\",\
 },\
 [0x100F9]={\
  direction=\"l\",\
 },\
 [0x100FA]={\
  direction=\"l\",\
 },\
 [0x10100]={\
  direction=\"l\",\
 },\
 [0x10101]={\
  direction=\"on\",\
 },\
 [0x10102]={\
  direction=\"l\",\
 },\
 [0x10107]={\
  direction=\"l\",\
 },\
 [0x10108]={\
  direction=\"l\",\
 },\
 [0x10109]={\
  direction=\"l\",\
 },\
 [0x1010A]={\
  direction=\"l\",\
 },\
 [0x1010B]={\
  direction=\"l\",\
 },\
 [0x1010C]={\
  direction=\"l\",\
 },\
 [0x1010D]={\
  direction=\"l\",\
 },\
 [0x1010E]={\
  direction=\"l\",\
 },\
 [0x1010F]={\
  direction=\"l\",\
 },\
 [0x10110]={\
  direction=\"l\",\
 },\
 [0x10111]={\
  direction=\"l\",\
 },\
 [0x10112]={\
  direction=\"l\",\
 },\
 [0x10113]={\
  direction=\"l\",\
 },\
 [0x10114]={\
  direction=\"l\",\
 },\
 [0x10115]={\
  direction=\"l\",\
 },\
 [0x10116]={\
  direction=\"l\",\
 },\
 [0x10117]={\
  direction=\"l\",\
 },\
 [0x10118]={\
  direction=\"l\",\
 },\
 [0x10119]={\
  direction=\"l\",\
 },\
 [0x1011A]={\
  direction=\"l\",\
 },\
 [0x1011B]={\
  direction=\"l\",\
 },\
 [0x1011C]={\
  direction=\"l\",\
 },\
 [0x1011D]={\
  direction=\"l\",\
 },\
 [0x1011E]={\
  direction=\"l\",\
 },\
 [0x1011F]={\
  direction=\"l\",\
 },\
 [0x10120]={\
  direction=\"l\",\
 },\
 [0x10121]={\
  direction=\"l\",\
 },\
 [0x10122]={\
  direction=\"l\",\
 },\
 [0x10123]={\
  direction=\"l\",\
 },\
 [0x10124]={\
  direction=\"l\",\
 },\
 [0x10125]={\
  direction=\"l\",\
 },\
 [0x10126]={\
  direction=\"l\",\
 },\
 [0x10127]={\
  direction=\"l\",\
 },\
 [0x10128]={\
  direction=\"l\",\
 },\
 [0x10129]={\
  direction=\"l\",\
 },\
 [0x1012A]={\
  direction=\"l\",\
 },\
 [0x1012B]={\
  direction=\"l\",\
 },\
 [0x1012C]={\
  direction=\"l\",\
 },\
 [0x1012D]={\
  direction=\"l\",\
 },\
 [0x1012E]={\
  direction=\"l\",\
 },\
 [0x1012F]={\
  direction=\"l\",\
 },\
 [0x10130]={\
  direction=\"l\",\
 },\
 [0x10131]={\
  direction=\"l\",\
 },\
 [0x10132]={\
  direction=\"l\",\
 },\
 [0x10133]={\
  direction=\"l\",\
 },\
 [0x10137]={\
  direction=\"l\",\
 },\
 [0x10138]={\
  direction=\"l\",\
 },\
 [0x10139]={\
  direction=\"l\",\
 },\
 [0x1013A]={\
  direction=\"l\",\
 },\
 [0x1013B]={\
  direction=\"l\",\
 },\
 [0x1013C]={\
  direction=\"l\",\
 },\
 [0x1013D]={\
  direction=\"l\",\
 },\
 [0x1013E]={\
  direction=\"l\",\
 },\
 [0x1013F]={\
  direction=\"l\",\
 },\
 [0x10140]={\
  direction=\"on\",\
 },\
 [0x10141]={\
  direction=\"on\",\
 },\
 [0x10142]={\
  direction=\"on\",\
 },\
 [0x10143]={\
  direction=\"on\",\
 },\
 [0x10144]={\
  direction=\"on\",\
 },\
 [0x10145]={\
  direction=\"on\",\
 },\
 [0x10146]={\
  direction=\"on\",\
 },\
 [0x10147]={\
  direction=\"on\",\
 },\
 [0x10148]={\
  direction=\"on\",\
 },\
 [0x10149]={\
  direction=\"on\",\
 },\
 [0x1014A]={\
  direction=\"on\",\
 },\
 [0x1014B]={\
  direction=\"on\",\
 },\
 [0x1014C]={\
  direction=\"on\",\
 },\
 [0x1014D]={\
  direction=\"on\",\
 },\
 [0x1014E]={\
  direction=\"on\",\
 },\
 [0x1014F]={\
  direction=\"on\",\
 },\
 [0x10150]={\
  direction=\"on\",\
 },\
 [0x10151]={\
  direction=\"on\",\
 },\
 [0x10152]={\
  direction=\"on\",\
 },\
 [0x10153]={\
  direction=\"on\",\
 },\
 [0x10154]={\
  direction=\"on\",\
 },\
 [0x10155]={\
  direction=\"on\",\
 },\
 [0x10156]={\
  direction=\"on\",\
 },\
 [0x10157]={\
  direction=\"on\",\
 },\
 [0x10158]={\
  direction=\"on\",\
 },\
 [0x10159]={\
  direction=\"on\",\
 },\
 [0x1015A]={\
  direction=\"on\",\
 },\
 [0x1015B]={\
  direction=\"on\",\
 },\
 [0x1015C]={\
  direction=\"on\",\
 },\
 [0x1015D]={\
  direction=\"on\",\
 },\
 [0x1015E]={\
  direction=\"on\",\
 },\
 [0x1015F]={\
  direction=\"on\",\
 },\
 [0x10160]={\
  direction=\"on\",\
 },\
 [0x10161]={\
  direction=\"on\",\
 },\
 [0x10162]={\
  direction=\"on\",\
 },\
 [0x10163]={\
  direction=\"on\",\
 },\
 [0x10164]={\
  direction=\"on\",\
 },\
 [0x10165]={\
  direction=\"on\",\
 },\
 [0x10166]={\
  direction=\"on\",\
 },\
 [0x10167]={\
  direction=\"on\",\
 },\
 [0x10168]={\
  direction=\"on\",\
 },\
 [0x10169]={\
  direction=\"on\",\
 },\
 [0x1016A]={\
  direction=\"on\",\
 },\
 [0x1016B]={\
  direction=\"on\",\
 },\
 [0x1016C]={\
  direction=\"on\",\
 },\
 [0x1016D]={\
  direction=\"on\",\
 },\
 [0x1016E]={\
  direction=\"on\",\
 },\
 [0x1016F]={\
  direction=\"on\",\
 },\
 [0x10170]={\
  direction=\"on\",\
 },\
 [0x10171]={\
  direction=\"on\",\
 },\
 [0x10172]={\
  direction=\"on\",\
 },\
 [0x10173]={\
  direction=\"on\",\
 },\
 [0x10174]={\
  direction=\"on\",\
 },\
 [0x10175]={\
  direction=\"on\",\
 },\
 [0x10176]={\
  direction=\"on\",\
 },\
 [0x10177]={\
  direction=\"on\",\
 },\
 [0x10178]={\
  direction=\"on\",\
 },\
 [0x10179]={\
  direction=\"on\",\
 },\
 [0x1017A]={\
  direction=\"on\",\
 },\
 [0x1017B]={\
  direction=\"on\",\
 },\
 [0x1017C]={\
  direction=\"on\",\
 },\
 [0x1017D]={\
  direction=\"on\",\
 },\
 [0x1017E]={\
  direction=\"on\",\
 },\
 [0x1017F]={\
  direction=\"on\",\
 },\
 [0x10180]={\
  direction=\"on\",\
 },\
 [0x10181]={\
  direction=\"on\",\
 },\
 [0x10182]={\
  direction=\"on\",\
 },\
 [0x10183]={\
  direction=\"on\",\
 },\
 [0x10184]={\
  direction=\"on\",\
 },\
 [0x10185]={\
  direction=\"on\",\
 },\
 [0x10186]={\
  direction=\"on\",\
 },\
 [0x10187]={\
  direction=\"on\",\
 },\
 [0x10188]={\
  direction=\"on\",\
 },\
 [0x10189]={\
  direction=\"on\",\
 },\
 [0x1018A]={\
  direction=\"on\",\
 },\
 [0x10190]={\
  direction=\"on\",\
 },\
 [0x10191]={\
  direction=\"on\",\
 },\
 [0x10192]={\
  direction=\"on\",\
 },\
 [0x10193]={\
  direction=\"on\",\
 },\
 [0x10194]={\
  direction=\"on\",\
 },\
 [0x10195]={\
  direction=\"on\",\
 },\
 [0x10196]={\
  direction=\"on\",\
 },\
 [0x10197]={\
  direction=\"on\",\
 },\
 [0x10198]={\
  direction=\"on\",\
 },\
 [0x10199]={\
  direction=\"on\",\
 },\
 [0x1019A]={\
  direction=\"on\",\
 },\
 [0x1019B]={\
  direction=\"on\",\
 },\
 [0x101D0]={\
  direction=\"l\",\
 },\
 [0x101D1]={\
  direction=\"l\",\
 },\
 [0x101D2]={\
  direction=\"l\",\
 },\
 [0x101D3]={\
  direction=\"l\",\
 },\
 [0x101D4]={\
  direction=\"l\",\
 },\
 [0x101D5]={\
  direction=\"l\",\
 },\
 [0x101D6]={\
  direction=\"l\",\
 },\
 [0x101D7]={\
  direction=\"l\",\
 },\
 [0x101D8]={\
  direction=\"l\",\
 },\
 [0x101D9]={\
  direction=\"l\",\
 },\
 [0x101DA]={\
  direction=\"l\",\
 },\
 [0x101DB]={\
  direction=\"l\",\
 },\
 [0x101DC]={\
  direction=\"l\",\
 },\
 [0x101DD]={\
  direction=\"l\",\
 },\
 [0x101DE]={\
  direction=\"l\",\
 },\
 [0x101DF]={\
  direction=\"l\",\
 },\
 [0x101E0]={\
  direction=\"l\",\
 },\
 [0x101E1]={\
  direction=\"l\",\
 },\
 [0x101E2]={\
  direction=\"l\",\
 },\
 [0x101E3]={\
  direction=\"l\",\
 },\
 [0x101E4]={\
  direction=\"l\",\
 },\
 [0x101E5]={\
  direction=\"l\",\
 },\
 [0x101E6]={\
  direction=\"l\",\
 },\
 [0x101E7]={\
  direction=\"l\",\
 },\
 [0x101E8]={\
  direction=\"l\",\
 },\
 [0x101E9]={\
  direction=\"l\",\
 },\
 [0x101EA]={\
  direction=\"l\",\
 },\
 [0x101EB]={\
  direction=\"l\",\
 },\
 [0x101EC]={\
  direction=\"l\",\
 },\
 [0x101ED]={\
  direction=\"l\",\
 },\
 [0x101EE]={\
  direction=\"l\",\
 },\
 [0x101EF]={\
  direction=\"l\",\
 },\
 [0x101F0]={\
  direction=\"l\",\
 },\
 [0x101F1]={\
  direction=\"l\",\
 },\
 [0x101F2]={\
  direction=\"l\",\
 },\
 [0x101F3]={\
  direction=\"l\",\
 },\
 [0x101F4]={\
  direction=\"l\",\
 },\
 [0x101F5]={\
  direction=\"l\",\
 },\
 [0x101F6]={\
  direction=\"l\",\
 },\
 [0x101F7]={\
  direction=\"l\",\
 },\
 [0x101F8]={\
  direction=\"l\",\
 },\
 [0x101F9]={\
  direction=\"l\",\
 },\
 [0x101FA]={\
  direction=\"l\",\
 },\
 [0x101FB]={\
  direction=\"l\",\
 },\
 [0x101FC]={\
  direction=\"l\",\
 },\
 [0x101FD]={\
  direction=\"nsm\",\
 },\
 [0x10280]={\
  direction=\"l\",\
 },\
 [0x10281]={\
  direction=\"l\",\
 },\
 [0x10282]={\
  direction=\"l\",\
 },\
 [0x10283]={\
  direction=\"l\",\
 },\
 [0x10284]={\
  direction=\"l\",\
 },\
 [0x10285]={\
  direction=\"l\",\
 },\
 [0x10286]={\
  direction=\"l\",\
 },\
 [0x10287]={\
  direction=\"l\",\
 },\
 [0x10288]={\
  direction=\"l\",\
 },\
 [0x10289]={\
  direction=\"l\",\
 },\
 [0x1028A]={\
  direction=\"l\",\
 },\
 [0x1028B]={\
  direction=\"l\",\
 },\
 [0x1028C]={\
  direction=\"l\",\
 },\
 [0x1028D]={\
  direction=\"l\",\
 },\
 [0x1028E]={\
  direction=\"l\",\
 },\
 [0x1028F]={\
  direction=\"l\",\
 },\
 [0x10290]={\
  direction=\"l\",\
 },\
 [0x10291]={\
  direction=\"l\",\
 },\
 [0x10292]={\
  direction=\"l\",\
 },\
 [0x10293]={\
  direction=\"l\",\
 },\
 [0x10294]={\
  direction=\"l\",\
 },\
 [0x10295]={\
  direction=\"l\",\
 },\
 [0x10296]={\
  direction=\"l\",\
 },\
 [0x10297]={\
  direction=\"l\",\
 },\
 [0x10298]={\
  direction=\"l\",\
 },\
 [0x10299]={\
  direction=\"l\",\
 },\
 [0x1029A]={\
  direction=\"l\",\
 },\
 [0x1029B]={\
  direction=\"l\",\
 },\
 [0x1029C]={\
  direction=\"l\",\
 },\
 [0x102A0]={\
  direction=\"l\",\
 },\
 [0x102A1]={\
  direction=\"l\",\
 },\
 [0x102A2]={\
  direction=\"l\",\
 },\
 [0x102A3]={\
  direction=\"l\",\
 },\
 [0x102A4]={\
  direction=\"l\",\
 },\
 [0x102A5]={\
  direction=\"l\",\
 },\
 [0x102A6]={\
  direction=\"l\",\
 },\
 [0x102A7]={\
  direction=\"l\",\
 },\
 [0x102A8]={\
  direction=\"l\",\
 },\
 [0x102A9]={\
  direction=\"l\",\
 },\
 [0x102AA]={\
  direction=\"l\",\
 },\
 [0x102AB]={\
  direction=\"l\",\
 },\
 [0x102AC]={\
  direction=\"l\",\
 },\
 [0x102AD]={\
  direction=\"l\",\
 },\
 [0x102AE]={\
  direction=\"l\",\
 },\
 [0x102AF]={\
  direction=\"l\",\
 },\
 [0x102B0]={\
  direction=\"l\",\
 },\
 [0x102B1]={\
  direction=\"l\",\
 },\
 [0x102B2]={\
  direction=\"l\",\
 },\
 [0x102B3]={\
  direction=\"l\",\
 },\
 [0x102B4]={\
  direction=\"l\",\
 },\
 [0x102B5]={\
  direction=\"l\",\
 },\
 [0x102B6]={\
  direction=\"l\",\
 },\
 [0x102B7]={\
  direction=\"l\",\
 },\
 [0x102B8]={\
  direction=\"l\",\
 },\
 [0x102B9]={\
  direction=\"l\",\
 },\
 [0x102BA]={\
  direction=\"l\",\
 },\
 [0x102BB]={\
  direction=\"l\",\
 },\
 [0x102BC]={\
  direction=\"l\",\
 },\
 [0x102BD]={\
  direction=\"l\",\
 },\
 [0x102BE]={\
  direction=\"l\",\
 },\
 [0x102BF]={\
  direction=\"l\",\
 },\
 [0x102C0]={\
  direction=\"l\",\
 },\
 [0x102C1]={\
  direction=\"l\",\
 },\
 [0x102C2]={\
  direction=\"l\",\
 },\
 [0x102C3]={\
  direction=\"l\",\
 },\
 [0x102C4]={\
  direction=\"l\",\
 },\
 [0x102C5]={\
  direction=\"l\",\
 },\
 [0x102C6]={\
  direction=\"l\",\
 },\
 [0x102C7]={\
  direction=\"l\",\
 },\
 [0x102C8]={\
  direction=\"l\",\
 },\
 [0x102C9]={\
  direction=\"l\",\
 },\
 [0x102CA]={\
  direction=\"l\",\
 },\
 [0x102CB]={\
  direction=\"l\",\
 },\
 [0x102CC]={\
  direction=\"l\",\
 },\
 [0x102CD]={\
  direction=\"l\",\
 },\
 [0x102CE]={\
  direction=\"l\",\
 },\
 [0x102CF]={\
  direction=\"l\",\
 },\
 [0x102D0]={\
  direction=\"l\",\
 },\
 [0x10300]={\
  direction=\"l\",\
 },\
 [0x10301]={\
  direction=\"l\",\
 },\
 [0x10302]={\
  direction=\"l\",\
 },\
 [0x10303]={\
  direction=\"l\",\
 },\
 [0x10304]={\
  direction=\"l\",\
 },\
 [0x10305]={\
  direction=\"l\",\
 },\
 [0x10306]={\
  direction=\"l\",\
 },\
 [0x10307]={\
  direction=\"l\",\
 },\
 [0x10308]={\
  direction=\"l\",\
 },\
 [0x10309]={\
  direction=\"l\",\
 },\
 [0x1030A]={\
  direction=\"l\",\
 },\
 [0x1030B]={\
  direction=\"l\",\
 },\
 [0x1030C]={\
  direction=\"l\",\
 },\
 [0x1030D]={\
  direction=\"l\",\
 },\
 [0x1030E]={\
  direction=\"l\",\
 },\
 [0x1030F]={\
  direction=\"l\",\
 },\
 [0x10310]={\
  direction=\"l\",\
 },\
 [0x10311]={\
  direction=\"l\",\
 },\
 [0x10312]={\
  direction=\"l\",\
 },\
 [0x10313]={\
  direction=\"l\",\
 },\
 [0x10314]={\
  direction=\"l\",\
 },\
 [0x10315]={\
  direction=\"l\",\
 },\
 [0x10316]={\
  direction=\"l\",\
 },\
 [0x10317]={\
  direction=\"l\",\
 },\
 [0x10318]={\
  direction=\"l\",\
 },\
 [0x10319]={\
  direction=\"l\",\
 },\
 [0x1031A]={\
  direction=\"l\",\
 },\
 [0x1031B]={\
  direction=\"l\",\
 },\
 [0x1031C]={\
  direction=\"l\",\
 },\
 [0x1031D]={\
  direction=\"l\",\
 },\
 [0x1031E]={\
  direction=\"l\",\
 },\
 [0x10320]={\
  direction=\"l\",\
 },\
 [0x10321]={\
  direction=\"l\",\
 },\
 [0x10322]={\
  direction=\"l\",\
 },\
 [0x10323]={\
  direction=\"l\",\
 },\
 [0x10330]={\
  direction=\"l\",\
 },\
 [0x10331]={\
  direction=\"l\",\
 },\
 [0x10332]={\
  direction=\"l\",\
 },\
 [0x10333]={\
  direction=\"l\",\
 },\
 [0x10334]={\
  direction=\"l\",\
 },\
 [0x10335]={\
  direction=\"l\",\
 },\
 [0x10336]={\
  direction=\"l\",\
 },\
 [0x10337]={\
  direction=\"l\",\
 },\
 [0x10338]={\
  direction=\"l\",\
 },\
 [0x10339]={\
  direction=\"l\",\
 },\
 [0x1033A]={\
  direction=\"l\",\
 },\
 [0x1033B]={\
  direction=\"l\",\
 },\
 [0x1033C]={\
  direction=\"l\",\
 },\
 [0x1033D]={\
  direction=\"l\",\
 },\
 [0x1033E]={\
  direction=\"l\",\
 },\
 [0x1033F]={\
  direction=\"l\",\
 },\
 [0x10340]={\
  direction=\"l\",\
 },\
 [0x10341]={\
  direction=\"l\",\
 },\
 [0x10342]={\
  direction=\"l\",\
 },\
 [0x10343]={\
  direction=\"l\",\
 },\
 [0x10344]={\
  direction=\"l\",\
 },\
 [0x10345]={\
  direction=\"l\",\
 },\
 [0x10346]={\
  direction=\"l\",\
 },\
 [0x10347]={\
  direction=\"l\",\
 },\
 [0x10348]={\
  direction=\"l\",\
 },\
 [0x10349]={\
  direction=\"l\",\
 },\
 [0x1034A]={\
  direction=\"l\",\
 },\
 [0x10380]={\
  direction=\"l\",\
 },\
 [0x10381]={\
  direction=\"l\",\
 },\
 [0x10382]={\
  direction=\"l\",\
 },\
 [0x10383]={\
  direction=\"l\",\
 },\
 [0x10384]={\
  direction=\"l\",\
 },\
 [0x10385]={\
  direction=\"l\",\
 },\
 [0x10386]={\
  direction=\"l\",\
 },\
 [0x10387]={\
  direction=\"l\",\
 },\
 [0x10388]={\
  direction=\"l\",\
 },\
 [0x10389]={\
  direction=\"l\",\
 },\
 [0x1038A]={\
  direction=\"l\",\
 },\
 [0x1038B]={\
  direction=\"l\",\
 },\
 [0x1038C]={\
  direction=\"l\",\
 },\
 [0x1038D]={\
  direction=\"l\",\
 },\
 [0x1038E]={\
  direction=\"l\",\
 },\
 [0x1038F]={\
  direction=\"l\",\
 },\
 [0x10390]={\
  direction=\"l\",\
 },\
 [0x10391]={\
  direction=\"l\",\
 },\
 [0x10392]={\
  direction=\"l\",\
 },\
 [0x10393]={\
  direction=\"l\",\
 },\
 [0x10394]={\
  direction=\"l\",\
 },\
 [0x10395]={\
  direction=\"l\",\
 },\
 [0x10396]={\
  direction=\"l\",\
 },\
 [0x10397]={\
  direction=\"l\",\
 },\
 [0x10398]={\
  direction=\"l\",\
 },\
 [0x10399]={\
  direction=\"l\",\
 },\
 [0x1039A]={\
  direction=\"l\",\
 },\
 [0x1039B]={\
  direction=\"l\",\
 },\
 [0x1039C]={\
  direction=\"l\",\
 },\
 [0x1039D]={\
  direction=\"l\",\
 },\
 [0x1039F]={\
  direction=\"l\",\
 },\
 [0x103A0]={\
  direction=\"l\",\
 },\
 [0x103A1]={\
  direction=\"l\",\
 },\
 [0x103A2]={\
  direction=\"l\",\
 },\
 [0x103A3]={\
  direction=\"l\",\
 },\
 [0x103A4]={\
  direction=\"l\",\
 },\
 [0x103A5]={\
  direction=\"l\",\
 },\
 [0x103A6]={\
  direction=\"l\",\
 },\
 [0x103A7]={\
  direction=\"l\",\
 },\
 [0x103A8]={\
  direction=\"l\",\
 },\
 [0x103A9]={\
  direction=\"l\",\
 },\
 [0x103AA]={\
  direction=\"l\",\
 },\
 [0x103AB]={\
  direction=\"l\",\
 },\
 [0x103AC]={\
  direction=\"l\",\
 },\
 [0x103AD]={\
  direction=\"l\",\
 },\
 [0x103AE]={\
  direction=\"l\",\
 },\
 [0x103AF]={\
  direction=\"l\",\
 },\
 [0x103B0]={\
  direction=\"l\",\
 },\
 [0x103B1]={\
  direction=\"l\",\
 },\
 [0x103B2]={\
  direction=\"l\",\
 },\
 [0x103B3]={\
  direction=\"l\",\
 },\
 [0x103B4]={\
  direction=\"l\",\
 },\
 [0x103B5]={\
  direction=\"l\",\
 },\
 [0x103B6]={\
  direction=\"l\",\
 },\
 [0x103B7]={\
  direction=\"l\",\
 },\
 [0x103B8]={\
  direction=\"l\",\
 },\
 [0x103B9]={\
  direction=\"l\",\
 },\
 [0x103BA]={\
  direction=\"l\",\
 },\
 [0x103BB]={\
  direction=\"l\",\
 },\
 [0x103BC]={\
  direction=\"l\",\
 },\
 [0x103BD]={\
  direction=\"l\",\
 },\
 [0x103BE]={\
  direction=\"l\",\
 },\
 [0x103BF]={\
  direction=\"l\",\
 },\
 [0x103C0]={\
  direction=\"l\",\
 },\
 [0x103C1]={\
  direction=\"l\",\
 },\
 [0x103C2]={\
  direction=\"l\",\
 },\
 [0x103C3]={\
  direction=\"l\",\
 },\
 [0x103C8]={\
  direction=\"l\",\
 },\
 [0x103C9]={\
  direction=\"l\",\
 },\
 [0x103CA]={\
  direction=\"l\",\
 },\
 [0x103CB]={\
  direction=\"l\",\
 },\
 [0x103CC]={\
  direction=\"l\",\
 },\
 [0x103CD]={\
  direction=\"l\",\
 },\
 [0x103CE]={\
  direction=\"l\",\
 },\
 [0x103CF]={\
  direction=\"l\",\
 },\
 [0x103D0]={\
  direction=\"l\",\
 },\
 [0x103D1]={\
  direction=\"l\",\
 },\
 [0x103D2]={\
  direction=\"l\",\
 },\
 [0x103D3]={\
  direction=\"l\",\
 },\
 [0x103D4]={\
  direction=\"l\",\
 },\
 [0x103D5]={\
  direction=\"l\",\
 },\
 [0x10400]={\
  direction=\"l\",\
 },\
 [0x10401]={\
  direction=\"l\",\
 },\
 [0x10402]={\
  direction=\"l\",\
 },\
 [0x10403]={\
  direction=\"l\",\
 },\
 [0x10404]={\
  direction=\"l\",\
 },\
 [0x10405]={\
  direction=\"l\",\
 },\
 [0x10406]={\
  direction=\"l\",\
 },\
 [0x10407]={\
  direction=\"l\",\
 },\
 [0x10408]={\
  direction=\"l\",\
 },\
 [0x10409]={\
  direction=\"l\",\
 },\
 [0x1040A]={\
  direction=\"l\",\
 },\
 [0x1040B]={\
  direction=\"l\",\
 },\
 [0x1040C]={\
  direction=\"l\",\
 },\
 [0x1040D]={\
  direction=\"l\",\
 },\
 [0x1040E]={\
  direction=\"l\",\
 },\
 [0x1040F]={\
  direction=\"l\",\
 },\
 [0x10410]={\
  direction=\"l\",\
 },\
 [0x10411]={\
  direction=\"l\",\
 },\
 [0x10412]={\
  direction=\"l\",\
 },\
 [0x10413]={\
  direction=\"l\",\
 },\
 [0x10414]={\
  direction=\"l\",\
 },\
 [0x10415]={\
  direction=\"l\",\
 },\
 [0x10416]={\
  direction=\"l\",\
 },\
 [0x10417]={\
  direction=\"l\",\
 },\
 [0x10418]={\
  direction=\"l\",\
 },\
 [0x10419]={\
  direction=\"l\",\
 },\
 [0x1041A]={\
  direction=\"l\",\
 },\
 [0x1041B]={\
  direction=\"l\",\
 },\
 [0x1041C]={\
  direction=\"l\",\
 },\
 [0x1041D]={\
  direction=\"l\",\
 },\
 [0x1041E]={\
  direction=\"l\",\
 },\
 [0x1041F]={\
  direction=\"l\",\
 },\
 [0x10420]={\
  direction=\"l\",\
 },\
 [0x10421]={\
  direction=\"l\",\
 },\
 [0x10422]={\
  direction=\"l\",\
 },\
 [0x10423]={\
  direction=\"l\",\
 },\
 [0x10424]={\
  direction=\"l\",\
 },\
 [0x10425]={\
  direction=\"l\",\
 },\
 [0x10426]={\
  direction=\"l\",\
 },\
 [0x10427]={\
  direction=\"l\",\
 },\
 [0x10428]={\
  direction=\"l\",\
 },\
 [0x10429]={\
  direction=\"l\",\
 },\
 [0x1042A]={\
  direction=\"l\",\
 },\
 [0x1042B]={\
  direction=\"l\",\
 },\
 [0x1042C]={\
  direction=\"l\",\
 },\
 [0x1042D]={\
  direction=\"l\",\
 },\
 [0x1042E]={\
  direction=\"l\",\
 },\
 [0x1042F]={\
  direction=\"l\",\
 },\
 [0x10430]={\
  direction=\"l\",\
 },\
 [0x10431]={\
  direction=\"l\",\
 },\
 [0x10432]={\
  direction=\"l\",\
 },\
 [0x10433]={\
  direction=\"l\",\
 },\
 [0x10434]={\
  direction=\"l\",\
 },\
 [0x10435]={\
  direction=\"l\",\
 },\
 [0x10436]={\
  direction=\"l\",\
 },\
 [0x10437]={\
  direction=\"l\",\
 },\
 [0x10438]={\
  direction=\"l\",\
 },\
 [0x10439]={\
  direction=\"l\",\
 },\
 [0x1043A]={\
  direction=\"l\",\
 },\
 [0x1043B]={\
  direction=\"l\",\
 },\
 [0x1043C]={\
  direction=\"l\",\
 },\
 [0x1043D]={\
  direction=\"l\",\
 },\
 [0x1043E]={\
  direction=\"l\",\
 },\
 [0x1043F]={\
  direction=\"l\",\
 },\
 [0x10440]={\
  direction=\"l\",\
 },\
 [0x10441]={\
  direction=\"l\",\
 },\
 [0x10442]={\
  direction=\"l\",\
 },\
 [0x10443]={\
  direction=\"l\",\
 },\
 [0x10444]={\
  direction=\"l\",\
 },\
 [0x10445]={\
  direction=\"l\",\
 },\
 [0x10446]={\
  direction=\"l\",\
 },\
 [0x10447]={\
  direction=\"l\",\
 },\
 [0x10448]={\
  direction=\"l\",\
 },\
 [0x10449]={\
  direction=\"l\",\
 },\
 [0x1044A]={\
  direction=\"l\",\
 },\
 [0x1044B]={\
  direction=\"l\",\
 },\
 [0x1044C]={\
  direction=\"l\",\
 },\
 [0x1044D]={\
  direction=\"l\",\
 },\
 [0x1044E]={\
  direction=\"l\",\
 },\
 [0x1044F]={\
  direction=\"l\",\
 },\
 [0x10450]={\
  direction=\"l\",\
 },\
 [0x10451]={\
  direction=\"l\",\
 },\
 [0x10452]={\
  direction=\"l\",\
 },\
 [0x10453]={\
  direction=\"l\",\
 },\
 [0x10454]={\
  direction=\"l\",\
 },\
 [0x10455]={\
  direction=\"l\",\
 },\
 [0x10456]={\
  direction=\"l\",\
 },\
 [0x10457]={\
  direction=\"l\",\
 },\
 [0x10458]={\
  direction=\"l\",\
 },\
 [0x10459]={\
  direction=\"l\",\
 },\
 [0x1045A]={\
  direction=\"l\",\
 },\
 [0x1045B]={\
  direction=\"l\",\
 },\
 [0x1045C]={\
  direction=\"l\",\
 },\
 [0x1045D]={\
  direction=\"l\",\
 },\
 [0x1045E]={\
  direction=\"l\",\
 },\
 [0x1045F]={\
  direction=\"l\",\
 },\
 [0x10460]={\
  direction=\"l\",\
 },\
 [0x10461]={\
  direction=\"l\",\
 },\
 [0x10462]={\
  direction=\"l\",\
 },\
 [0x10463]={\
  direction=\"l\",\
 },\
 [0x10464]={\
  direction=\"l\",\
 },\
 [0x10465]={\
  direction=\"l\",\
 },\
 [0x10466]={\
  direction=\"l\",\
 },\
 [0x10467]={\
  direction=\"l\",\
 },\
 [0x10468]={\
  direction=\"l\",\
 },\
 [0x10469]={\
  direction=\"l\",\
 },\
 [0x1046A]={\
  direction=\"l\",\
 },\
 [0x1046B]={\
  direction=\"l\",\
 },\
 [0x1046C]={\
  direction=\"l\",\
 },\
 [0x1046D]={\
  direction=\"l\",\
 },\
 [0x1046E]={\
  direction=\"l\",\
 },\
 [0x1046F]={\
  direction=\"l\",\
 },\
 [0x10470]={\
  direction=\"l\",\
 },\
 [0x10471]={\
  direction=\"l\",\
 },\
 [0x10472]={\
  direction=\"l\",\
 },\
 [0x10473]={\
  direction=\"l\",\
 },\
 [0x10474]={\
  direction=\"l\",\
 },\
 [0x10475]={\
  direction=\"l\",\
 },\
 [0x10476]={\
  direction=\"l\",\
 },\
 [0x10477]={\
  direction=\"l\",\
 },\
 [0x10478]={\
  direction=\"l\",\
 },\
 [0x10479]={\
  direction=\"l\",\
 },\
 [0x1047A]={\
  direction=\"l\",\
 },\
 [0x1047B]={\
  direction=\"l\",\
 },\
 [0x1047C]={\
  direction=\"l\",\
 },\
 [0x1047D]={\
  direction=\"l\",\
 },\
 [0x1047E]={\
  direction=\"l\",\
 },\
 [0x1047F]={\
  direction=\"l\",\
 },\
 [0x10480]={\
  direction=\"l\",\
 },\
 [0x10481]={\
  direction=\"l\",\
 },\
 [0x10482]={\
  direction=\"l\",\
 },\
 [0x10483]={\
  direction=\"l\",\
 },\
 [0x10484]={\
  direction=\"l\",\
 },\
 [0x10485]={\
  direction=\"l\",\
 },\
 [0x10486]={\
  direction=\"l\",\
 },\
 [0x10487]={\
  direction=\"l\",\
 },\
 [0x10488]={\
  direction=\"l\",\
 },\
 [0x10489]={\
  direction=\"l\",\
 },\
 [0x1048A]={\
  direction=\"l\",\
 },\
 [0x1048B]={\
  direction=\"l\",\
 },\
 [0x1048C]={\
  direction=\"l\",\
 },\
 [0x1048D]={\
  direction=\"l\",\
 },\
 [0x1048E]={\
  direction=\"l\",\
 },\
 [0x1048F]={\
  direction=\"l\",\
 },\
 [0x10490]={\
  direction=\"l\",\
 },\
 [0x10491]={\
  direction=\"l\",\
 },\
 [0x10492]={\
  direction=\"l\",\
 },\
 [0x10493]={\
  direction=\"l\",\
 },\
 [0x10494]={\
  direction=\"l\",\
 },\
 [0x10495]={\
  direction=\"l\",\
 },\
 [0x10496]={\
  direction=\"l\",\
 },\
 [0x10497]={\
  direction=\"l\",\
 },\
 [0x10498]={\
  direction=\"l\",\
 },\
 [0x10499]={\
  direction=\"l\",\
 },\
 [0x1049A]={\
  direction=\"l\",\
 },\
 [0x1049B]={\
  direction=\"l\",\
 },\
 [0x1049C]={\
  direction=\"l\",\
 },\
 [0x1049D]={\
  direction=\"l\",\
 },\
 [0x104A0]={\
  direction=\"l\",\
 },\
 [0x104A1]={\
  direction=\"l\",\
 },\
 [0x104A2]={\
  direction=\"l\",\
 },\
 [0x104A3]={\
  direction=\"l\",\
 },\
 [0x104A4]={\
  direction=\"l\",\
 },\
 [0x104A5]={\
  direction=\"l\",\
 },\
 [0x104A6]={\
  direction=\"l\",\
 },\
 [0x104A7]={\
  direction=\"l\",\
 },\
 [0x104A8]={\
  direction=\"l\",\
 },\
 [0x104A9]={\
  direction=\"l\",\
 },\
 [0x10800]={\
  direction=\"r\",\
 },\
 [0x10801]={\
  direction=\"r\",\
 },\
 [0x10802]={\
  direction=\"r\",\
 },\
 [0x10803]={\
  direction=\"r\",\
 },\
 [0x10804]={\
  direction=\"r\",\
 },\
 [0x10805]={\
  direction=\"r\",\
 },\
 [0x10808]={\
  direction=\"r\",\
 },\
 [0x1080A]={\
  direction=\"r\",\
 },\
 [0x1080B]={\
  direction=\"r\",\
 },\
 [0x1080C]={\
  direction=\"r\",\
 },\
 [0x1080D]={\
  direction=\"r\",\
 },\
 [0x1080E]={\
  direction=\"r\",\
 },\
 [0x1080F]={\
  direction=\"r\",\
 },\
 [0x10810]={\
  direction=\"r\",\
 },\
 [0x10811]={\
  direction=\"r\",\
 },\
 [0x10812]={\
  direction=\"r\",\
 },\
 [0x10813]={\
  direction=\"r\",\
 },\
 [0x10814]={\
  direction=\"r\",\
 },\
 [0x10815]={\
  direction=\"r\",\
 },\
 [0x10816]={\
  direction=\"r\",\
 },\
 [0x10817]={\
  direction=\"r\",\
 },\
 [0x10818]={\
  direction=\"r\",\
 },\
 [0x10819]={\
  direction=\"r\",\
 },\
 [0x1081A]={\
  direction=\"r\",\
 },\
 [0x1081B]={\
  direction=\"r\",\
 },\
 [0x1081C]={\
  direction=\"r\",\
 },\
 [0x1081D]={\
  direction=\"r\",\
 },\
 [0x1081E]={\
  direction=\"r\",\
 },\
 [0x1081F]={\
  direction=\"r\",\
 },\
 [0x10820]={\
  direction=\"r\",\
 },\
 [0x10821]={\
  direction=\"r\",\
 },\
 [0x10822]={\
  direction=\"r\",\
 },\
 [0x10823]={\
  direction=\"r\",\
 },\
 [0x10824]={\
  direction=\"r\",\
 },\
 [0x10825]={\
  direction=\"r\",\
 },\
 [0x10826]={\
  direction=\"r\",\
 },\
 [0x10827]={\
  direction=\"r\",\
 },\
 [0x10828]={\
  direction=\"r\",\
 },\
 [0x10829]={\
  direction=\"r\",\
 },\
 [0x1082A]={\
  direction=\"r\",\
 },\
 [0x1082B]={\
  direction=\"r\",\
 },\
 [0x1082C]={\
  direction=\"r\",\
 },\
 [0x1082D]={\
  direction=\"r\",\
 },\
 [0x1082E]={\
  direction=\"r\",\
 },\
 [0x1082F]={\
  direction=\"r\",\
 },\
 [0x10830]={\
  direction=\"r\",\
 },\
 [0x10831]={\
  direction=\"r\",\
 },\
 [0x10832]={\
  direction=\"r\",\
 },\
 [0x10833]={\
  direction=\"r\",\
 },\
 [0x10834]={\
  direction=\"r\",\
 },\
 [0x10835]={\
  direction=\"r\",\
 },\
 [0x10837]={\
  direction=\"r\",\
 },\
 [0x10838]={\
  direction=\"r\",\
 },\
 [0x1083C]={\
  direction=\"r\",\
 },\
 [0x1083F]={\
  direction=\"r\",\
 },\
 [0x10840]={\
  direction=\"r\",\
 },\
 [0x10841]={\
  direction=\"r\",\
 },\
 [0x10842]={\
  direction=\"r\",\
 },\
 [0x10843]={\
  direction=\"r\",\
 },\
 [0x10844]={\
  direction=\"r\",\
 },\
 [0x10845]={\
  direction=\"r\",\
 },\
 [0x10846]={\
  direction=\"r\",\
 },\
 [0x10847]={\
  direction=\"r\",\
 },\
 [0x10848]={\
  direction=\"r\",\
 },\
 [0x10849]={\
  direction=\"r\",\
 },\
 [0x1084A]={\
  direction=\"r\",\
 },\
 [0x1084B]={\
  direction=\"r\",\
 },\
 [0x1084C]={\
  direction=\"r\",\
 },\
 [0x1084D]={\
  direction=\"r\",\
 },\
 [0x1084E]={\
  direction=\"r\",\
 },\
 [0x1084F]={\
  direction=\"r\",\
 },\
 [0x10850]={\
  direction=\"r\",\
 },\
 [0x10851]={\
  direction=\"r\",\
 },\
 [0x10852]={\
  direction=\"r\",\
 },\
 [0x10853]={\
  direction=\"r\",\
 },\
 [0x10854]={\
  direction=\"r\",\
 },\
 [0x10855]={\
  direction=\"r\",\
 },\
 [0x10857]={\
  direction=\"r\",\
 },\
 [0x10858]={\
  direction=\"r\",\
 },\
 [0x10859]={\
  direction=\"r\",\
 },\
 [0x1085A]={\
  direction=\"r\",\
 },\
 [0x1085B]={\
  direction=\"r\",\
 },\
 [0x1085C]={\
  direction=\"r\",\
 },\
 [0x1085D]={\
  direction=\"r\",\
 },\
 [0x1085E]={\
  direction=\"r\",\
 },\
 [0x1085F]={\
  direction=\"r\",\
 },\
 [0x10900]={\
  direction=\"r\",\
 },\
 [0x10901]={\
  direction=\"r\",\
 },\
 [0x10902]={\
  direction=\"r\",\
 },\
 [0x10903]={\
  direction=\"r\",\
 },\
 [0x10904]={\
  direction=\"r\",\
 },\
 [0x10905]={\
  direction=\"r\",\
 },\
 [0x10906]={\
  direction=\"r\",\
 },\
 [0x10907]={\
  direction=\"r\",\
 },\
 [0x10908]={\
  direction=\"r\",\
 },\
 [0x10909]={\
  direction=\"r\",\
 },\
 [0x1090A]={\
  direction=\"r\",\
 },\
 [0x1090B]={\
  direction=\"r\",\
 },\
 [0x1090C]={\
  direction=\"r\",\
 },\
 [0x1090D]={\
  direction=\"r\",\
 },\
 [0x1090E]={\
  direction=\"r\",\
 },\
 [0x1090F]={\
  direction=\"r\",\
 },\
 [0x10910]={\
  direction=\"r\",\
 },\
 [0x10911]={\
  direction=\"r\",\
 },\
 [0x10912]={\
  direction=\"r\",\
 },\
 [0x10913]={\
  direction=\"r\",\
 },\
 [0x10914]={\
  direction=\"r\",\
 },\
 [0x10915]={\
  direction=\"r\",\
 },\
 [0x10916]={\
  direction=\"r\",\
 },\
 [0x10917]={\
  direction=\"r\",\
 },\
 [0x10918]={\
  direction=\"r\",\
 },\
 [0x10919]={\
  direction=\"r\",\
 },\
 [0x1091A]={\
  direction=\"r\",\
 },\
 [0x1091B]={\
  direction=\"r\",\
 },\
 [0x1091F]={\
  direction=\"on\",\
 },\
 [0x10920]={\
  direction=\"r\",\
 },\
 [0x10921]={\
  direction=\"r\",\
 },\
 [0x10922]={\
  direction=\"r\",\
 },\
 [0x10923]={\
  direction=\"r\",\
 },\
 [0x10924]={\
  direction=\"r\",\
 },\
 [0x10925]={\
  direction=\"r\",\
 },\
 [0x10926]={\
  direction=\"r\",\
 },\
 [0x10927]={\
  direction=\"r\",\
 },\
 [0x10928]={\
  direction=\"r\",\
 },\
 [0x10929]={\
  direction=\"r\",\
 },\
 [0x1092A]={\
  direction=\"r\",\
 },\
 [0x1092B]={\
  direction=\"r\",\
 },\
 [0x1092C]={\
  direction=\"r\",\
 },\
 [0x1092D]={\
  direction=\"r\",\
 },\
 [0x1092E]={\
  direction=\"r\",\
 },\
 [0x1092F]={\
  direction=\"r\",\
 },\
 [0x10930]={\
  direction=\"r\",\
 },\
 [0x10931]={\
  direction=\"r\",\
 },\
 [0x10932]={\
  direction=\"r\",\
 },\
 [0x10933]={\
  direction=\"r\",\
 },\
 [0x10934]={\
  direction=\"r\",\
 },\
 [0x10935]={\
  direction=\"r\",\
 },\
 [0x10936]={\
  direction=\"r\",\
 },\
 [0x10937]={\
  direction=\"r\",\
 },\
 [0x10938]={\
  direction=\"r\",\
 },\
 [0x10939]={\
  direction=\"r\",\
 },\
 [0x1093F]={\
  direction=\"r\",\
 },\
 [0x10980]={\
  direction=\"r\",\
 },\
 [0x10981]={\
  direction=\"r\",\
 },\
 [0x10982]={\
  direction=\"r\",\
 },\
 [0x10983]={\
  direction=\"r\",\
 },\
 [0x10984]={\
  direction=\"r\",\
 },\
 [0x10985]={\
  direction=\"r\",\
 },\
 [0x10986]={\
  direction=\"r\",\
 },\
 [0x10987]={\
  direction=\"r\",\
 },\
 [0x10988]={\
  direction=\"r\",\
 },\
 [0x10989]={\
  direction=\"r\",\
 },\
 [0x1098A]={\
  direction=\"r\",\
 },\
 [0x1098B]={\
  direction=\"r\",\
 },\
 [0x1098C]={\
  direction=\"r\",\
 },\
 [0x1098D]={\
  direction=\"r\",\
 },\
 [0x1098E]={\
  direction=\"r\",\
 },\
 [0x1098F]={\
  direction=\"r\",\
 },\
 [0x10990]={\
  direction=\"r\",\
 },\
 [0x10991]={\
  direction=\"r\",\
 },\
 [0x10992]={\
  direction=\"r\",\
 },\
 [0x10993]={\
  direction=\"r\",\
 },\
 [0x10994]={\
  direction=\"r\",\
 },\
 [0x10995]={\
  direction=\"r\",\
 },\
 [0x10996]={\
  direction=\"r\",\
 },\
 [0x10997]={\
  direction=\"r\",\
 },\
 [0x10998]={\
  direction=\"r\",\
 },\
 [0x10999]={\
  direction=\"r\",\
 },\
 [0x1099A]={\
  direction=\"r\",\
 },\
 [0x1099B]={\
  direction=\"r\",\
 },\
 [0x1099C]={\
  direction=\"r\",\
 },\
 [0x1099D]={\
  direction=\"r\",\
 },\
 [0x1099E]={\
  direction=\"r\",\
 },\
 [0x1099F]={\
  direction=\"r\",\
 },\
 [0x109A0]={\
  direction=\"r\",\
 },\
 [0x109A1]={\
  direction=\"r\",\
 },\
 [0x109A2]={\
  direction=\"r\",\
 },\
 [0x109A3]={\
  direction=\"r\",\
 },\
 [0x109A4]={\
  direction=\"r\",\
 },\
 [0x109A5]={\
  direction=\"r\",\
 },\
 [0x109A6]={\
  direction=\"r\",\
 },\
 [0x109A7]={\
  direction=\"r\",\
 },\
 [0x109A8]={\
  direction=\"r\",\
 },\
 [0x109A9]={\
  direction=\"r\",\
 },\
 [0x109AA]={\
  direction=\"r\",\
 },\
 [0x109AB]={\
  direction=\"r\",\
 },\
 [0x109AC]={\
  direction=\"r\",\
 },\
 [0x109AD]={\
  direction=\"r\",\
 },\
 [0x109AE]={\
  direction=\"r\",\
 },\
 [0x109AF]={\
  direction=\"r\",\
 },\
 [0x109B0]={\
  direction=\"r\",\
 },\
 [0x109B1]={\
  direction=\"r\",\
 },\
 [0x109B2]={\
  direction=\"r\",\
 },\
 [0x109B3]={\
  direction=\"r\",\
 },\
 [0x109B4]={\
  direction=\"r\",\
 },\
 [0x109B5]={\
  direction=\"r\",\
 },\
 [0x109B6]={\
  direction=\"r\",\
 },\
 [0x109B7]={\
  direction=\"r\",\
 },\
 [0x109BE]={\
  direction=\"r\",\
 },\
 [0x109BF]={\
  direction=\"r\",\
 },\
 [0x10A00]={\
  direction=\"r\",\
 },\
 [0x10A01]={\
  direction=\"nsm\",\
 },\
 [0x10A02]={\
  direction=\"nsm\",\
 },\
 [0x10A03]={\
  direction=\"nsm\",\
 },\
 [0x10A05]={\
  direction=\"nsm\",\
 },\
 [0x10A06]={\
  direction=\"nsm\",\
 },\
 [0x10A0C]={\
  direction=\"nsm\",\
 },\
 [0x10A0D]={\
  direction=\"nsm\",\
 },\
 [0x10A0E]={\
  direction=\"nsm\",\
 },\
 [0x10A0F]={\
  direction=\"nsm\",\
 },\
 [0x10A10]={\
  direction=\"r\",\
 },\
 [0x10A11]={\
  direction=\"r\",\
 },\
 [0x10A12]={\
  direction=\"r\",\
 },\
 [0x10A13]={\
  direction=\"r\",\
 },\
 [0x10A15]={\
  direction=\"r\",\
 },\
 [0x10A16]={\
  direction=\"r\",\
 },\
 [0x10A17]={\
  direction=\"r\",\
 },\
 [0x10A19]={\
  direction=\"r\",\
 },\
 [0x10A1A]={\
  direction=\"r\",\
 },\
 [0x10A1B]={\
  direction=\"r\",\
 },\
 [0x10A1C]={\
  direction=\"r\",\
 },\
 [0x10A1D]={\
  direction=\"r\",\
 },\
 [0x10A1E]={\
  direction=\"r\",\
 },\
 [0x10A1F]={\
  direction=\"r\",\
 },\
 [0x10A20]={\
  direction=\"r\",\
 },\
 [0x10A21]={\
  direction=\"r\",\
 },\
 [0x10A22]={\
  direction=\"r\",\
 },\
 [0x10A23]={\
  direction=\"r\",\
 },\
 [0x10A24]={\
  direction=\"r\",\
 },\
 [0x10A25]={\
  direction=\"r\",\
 },\
 [0x10A26]={\
  direction=\"r\",\
 },\
 [0x10A27]={\
  direction=\"r\",\
 },\
 [0x10A28]={\
  direction=\"r\",\
 },\
 [0x10A29]={\
  direction=\"r\",\
 },\
 [0x10A2A]={\
  direction=\"r\",\
 },\
 [0x10A2B]={\
  direction=\"r\",\
 },\
 [0x10A2C]={\
  direction=\"r\",\
 },\
 [0x10A2D]={\
  direction=\"r\",\
 },\
 [0x10A2E]={\
  direction=\"r\",\
 },\
 [0x10A2F]={\
  direction=\"r\",\
 },\
 [0x10A30]={\
  direction=\"r\",\
 },\
 [0x10A31]={\
  direction=\"r\",\
 },\
 [0x10A32]={\
  direction=\"r\",\
 },\
 [0x10A33]={\
  direction=\"r\",\
 },\
 [0x10A38]={\
  direction=\"nsm\",\
 },\
 [0x10A39]={\
  direction=\"nsm\",\
 },\
 [0x10A3A]={\
  direction=\"nsm\",\
 },\
 [0x10A3F]={\
  direction=\"nsm\",\
 },\
 [0x10A40]={\
  direction=\"r\",\
 },\
 [0x10A41]={\
  direction=\"r\",\
 },\
 [0x10A42]={\
  direction=\"r\",\
 },\
 [0x10A43]={\
  direction=\"r\",\
 },\
 [0x10A44]={\
  direction=\"r\",\
 },\
 [0x10A45]={\
  direction=\"r\",\
 },\
 [0x10A46]={\
  direction=\"r\",\
 },\
 [0x10A47]={\
  direction=\"r\",\
 },\
 [0x10A50]={\
  direction=\"r\",\
 },\
 [0x10A51]={\
  direction=\"r\",\
 },\
 [0x10A52]={\
  direction=\"r\",\
 },\
 [0x10A53]={\
  direction=\"r\",\
 },\
 [0x10A54]={\
  direction=\"r\",\
 },\
 [0x10A55]={\
  direction=\"r\",\
 },\
 [0x10A56]={\
  direction=\"r\",\
 },\
 [0x10A57]={\
  direction=\"r\",\
 },\
 [0x10A58]={\
  direction=\"r\",\
 },\
 [0x10A60]={\
  direction=\"r\",\
 },\
 [0x10A61]={\
  direction=\"r\",\
 },\
 [0x10A62]={\
  direction=\"r\",\
 },\
 [0x10A63]={\
  direction=\"r\",\
 },\
 [0x10A64]={\
  direction=\"r\",\
 },\
 [0x10A65]={\
  direction=\"r\",\
 },\
 [0x10A66]={\
  direction=\"r\",\
 },\
 [0x10A67]={\
  direction=\"r\",\
 },\
 [0x10A68]={\
  direction=\"r\",\
 },\
 [0x10A69]={\
  direction=\"r\",\
 },\
 [0x10A6A]={\
  direction=\"r\",\
 },\
 [0x10A6B]={\
  direction=\"r\",\
 },\
 [0x10A6C]={\
  direction=\"r\",\
 },\
 [0x10A6D]={\
  direction=\"r\",\
 },\
 [0x10A6E]={\
  direction=\"r\",\
 },\
 [0x10A6F]={\
  direction=\"r\",\
 },\
 [0x10A70]={\
  direction=\"r\",\
 },\
 [0x10A71]={\
  direction=\"r\",\
 },\
 [0x10A72]={\
  direction=\"r\",\
 },\
 [0x10A73]={\
  direction=\"r\",\
 },\
 [0x10A74]={\
  direction=\"r\",\
 },\
 [0x10A75]={\
  direction=\"r\",\
 },\
 [0x10A76]={\
  direction=\"r\",\
 },\
 [0x10A77]={\
  direction=\"r\",\
 },\
 [0x10A78]={\
  direction=\"r\",\
 },\
 [0x10A79]={\
  direction=\"r\",\
 },\
 [0x10A7A]={\
  direction=\"r\",\
 },\
 [0x10A7B]={\
  direction=\"r\",\
 },\
 [0x10A7C]={\
  direction=\"r\",\
 },\
 [0x10A7D]={\
  direction=\"r\",\
 },\
 [0x10A7E]={\
  direction=\"r\",\
 },\
 [0x10A7F]={\
  direction=\"r\",\
 },\
 [0x10B00]={\
  direction=\"r\",\
 },\
 [0x10B01]={\
  direction=\"r\",\
 },\
 [0x10B02]={\
  direction=\"r\",\
 },\
 [0x10B03]={\
  direction=\"r\",\
 },\
 [0x10B04]={\
  direction=\"r\",\
 },\
 [0x10B05]={\
  direction=\"r\",\
 },\
 [0x10B06]={\
  direction=\"r\",\
 },\
 [0x10B07]={\
  direction=\"r\",\
 },\
 [0x10B08]={\
  direction=\"r\",\
 },\
 [0x10B09]={\
  direction=\"r\",\
 },\
 [0x10B0A]={\
  direction=\"r\",\
 },\
 [0x10B0B]={\
  direction=\"r\",\
 },\
 [0x10B0C]={\
  direction=\"r\",\
 },\
 [0x10B0D]={\
  direction=\"r\",\
 },\
 [0x10B0E]={\
  direction=\"r\",\
 },\
 [0x10B0F]={\
  direction=\"r\",\
 },\
 [0x10B10]={\
  direction=\"r\",\
 },\
 [0x10B11]={\
  direction=\"r\",\
 },\
 [0x10B12]={\
  direction=\"r\",\
 },\
 [0x10B13]={\
  direction=\"r\",\
 },\
 [0x10B14]={\
  direction=\"r\",\
 },\
 [0x10B15]={\
  direction=\"r\",\
 },\
 [0x10B16]={\
  direction=\"r\",\
 },\
 [0x10B17]={\
  direction=\"r\",\
 },\
 [0x10B18]={\
  direction=\"r\",\
 },\
 [0x10B19]={\
  direction=\"r\",\
 },\
 [0x10B1A]={\
  direction=\"r\",\
 },\
 [0x10B1B]={\
  direction=\"r\",\
 },\
 [0x10B1C]={\
  direction=\"r\",\
 },\
 [0x10B1D]={\
  direction=\"r\",\
 },\
 [0x10B1E]={\
  direction=\"r\",\
 },\
 [0x10B1F]={\
  direction=\"r\",\
 },\
 [0x10B20]={\
  direction=\"r\",\
 },\
 [0x10B21]={\
  direction=\"r\",\
 },\
 [0x10B22]={\
  direction=\"r\",\
 },\
 [0x10B23]={\
  direction=\"r\",\
 },\
 [0x10B24]={\
  direction=\"r\",\
 },\
 [0x10B25]={\
  direction=\"r\",\
 },\
 [0x10B26]={\
  direction=\"r\",\
 },\
 [0x10B27]={\
  direction=\"r\",\
 },\
 [0x10B28]={\
  direction=\"r\",\
 },\
 [0x10B29]={\
  direction=\"r\",\
 },\
 [0x10B2A]={\
  direction=\"r\",\
 },\
 [0x10B2B]={\
  direction=\"r\",\
 },\
 [0x10B2C]={\
  direction=\"r\",\
 },\
 [0x10B2D]={\
  direction=\"r\",\
 },\
 [0x10B2E]={\
  direction=\"r\",\
 },\
 [0x10B2F]={\
  direction=\"r\",\
 },\
 [0x10B30]={\
  direction=\"r\",\
 },\
 [0x10B31]={\
  direction=\"r\",\
 },\
 [0x10B32]={\
  direction=\"r\",\
 },\
 [0x10B33]={\
  direction=\"r\",\
 },\
 [0x10B34]={\
  direction=\"r\",\
 },\
 [0x10B35]={\
  direction=\"r\",\
 },\
 [0x10B39]={\
  direction=\"on\",\
 },\
 [0x10B3A]={\
  direction=\"on\",\
 },\
 [0x10B3B]={\
  direction=\"on\",\
 },\
 [0x10B3C]={\
  direction=\"on\",\
 },\
 [0x10B3D]={\
  direction=\"on\",\
 },\
 [0x10B3E]={\
  direction=\"on\",\
 },\
 [0x10B3F]={\
  direction=\"on\",\
 },\
 [0x10B40]={\
  direction=\"r\",\
 },\
 [0x10B41]={\
  direction=\"r\",\
 },\
 [0x10B42]={\
  direction=\"r\",\
 },\
 [0x10B43]={\
  direction=\"r\",\
 },\
 [0x10B44]={\
  direction=\"r\",\
 },\
 [0x10B45]={\
  direction=\"r\",\
 },\
 [0x10B46]={\
  direction=\"r\",\
 },\
 [0x10B47]={\
  direction=\"r\",\
 },\
 [0x10B48]={\
  direction=\"r\",\
 },\
 [0x10B49]={\
  direction=\"r\",\
 },\
 [0x10B4A]={\
  direction=\"r\",\
 },\
 [0x10B4B]={\
  direction=\"r\",\
 },\
 [0x10B4C]={\
  direction=\"r\",\
 },\
 [0x10B4D]={\
  direction=\"r\",\
 },\
 [0x10B4E]={\
  direction=\"r\",\
 },\
 [0x10B4F]={\
  direction=\"r\",\
 },\
 [0x10B50]={\
  direction=\"r\",\
 },\
 [0x10B51]={\
  direction=\"r\",\
 },\
 [0x10B52]={\
  direction=\"r\",\
 },\
 [0x10B53]={\
  direction=\"r\",\
 },\
 [0x10B54]={\
  direction=\"r\",\
 },\
 [0x10B55]={\
  direction=\"r\",\
 },\
 [0x10B58]={\
  direction=\"r\",\
 },\
 [0x10B59]={\
  direction=\"r\",\
 },\
 [0x10B5A]={\
  direction=\"r\",\
 },\
 [0x10B5B]={\
  direction=\"r\",\
 },\
 [0x10B5C]={\
  direction=\"r\",\
 },\
 [0x10B5D]={\
  direction=\"r\",\
 },\
 [0x10B5E]={\
  direction=\"r\",\
 },\
 [0x10B5F]={\
  direction=\"r\",\
 },\
 [0x10B60]={\
  direction=\"r\",\
 },\
 [0x10B61]={\
  direction=\"r\",\
 },\
 [0x10B62]={\
  direction=\"r\",\
 },\
 [0x10B63]={\
  direction=\"r\",\
 },\
 [0x10B64]={\
  direction=\"r\",\
 },\
 [0x10B65]={\
  direction=\"r\",\
 },\
 [0x10B66]={\
  direction=\"r\",\
 },\
 [0x10B67]={\
  direction=\"r\",\
 },\
 [0x10B68]={\
  direction=\"r\",\
 },\
 [0x10B69]={\
  direction=\"r\",\
 },\
 [0x10B6A]={\
  direction=\"r\",\
 },\
 [0x10B6B]={\
  direction=\"r\",\
 },\
 [0x10B6C]={\
  direction=\"r\",\
 },\
 [0x10B6D]={\
  direction=\"r\",\
 },\
 [0x10B6E]={\
  direction=\"r\",\
 },\
 [0x10B6F]={\
  direction=\"r\",\
 },\
 [0x10B70]={\
  direction=\"r\",\
 },\
 [0x10B71]={\
  direction=\"r\",\
 },\
 [0x10B72]={\
  direction=\"r\",\
 },\
 [0x10B78]={\
  direction=\"r\",\
 },\
 [0x10B79]={\
  direction=\"r\",\
 },\
 [0x10B7A]={\
  direction=\"r\",\
 },\
 [0x10B7B]={\
  direction=\"r\",\
 },\
 [0x10B7C]={\
  direction=\"r\",\
 },\
 [0x10B7D]={\
  direction=\"r\",\
 },\
 [0x10B7E]={\
  direction=\"r\",\
 },\
 [0x10B7F]={\
  direction=\"r\",\
 },\
 [0x10C00]={\
  direction=\"r\",\
 },\
 [0x10C01]={\
  direction=\"r\",\
 },\
 [0x10C02]={\
  direction=\"r\",\
 },\
 [0x10C03]={\
  direction=\"r\",\
 },\
 [0x10C04]={\
  direction=\"r\",\
 },\
 [0x10C05]={\
  direction=\"r\",\
 },\
 [0x10C06]={\
  direction=\"r\",\
 },\
 [0x10C07]={\
  direction=\"r\",\
 },\
 [0x10C08]={\
  direction=\"r\",\
 },\
 [0x10C09]={\
  direction=\"r\",\
 },\
 [0x10C0A]={\
  direction=\"r\",\
 },\
 [0x10C0B]={\
  direction=\"r\",\
 },\
 [0x10C0C]={\
  direction=\"r\",\
 },\
 [0x10C0D]={\
  direction=\"r\",\
 },\
 [0x10C0E]={\
  direction=\"r\",\
 },\
 [0x10C0F]={\
  direction=\"r\",\
 },\
 [0x10C10]={\
  direction=\"r\",\
 },\
 [0x10C11]={\
  direction=\"r\",\
 },\
 [0x10C12]={\
  direction=\"r\",\
 },\
 [0x10C13]={\
  direction=\"r\",\
 },\
 [0x10C14]={\
  direction=\"r\",\
 },\
 [0x10C15]={\
  direction=\"r\",\
 },\
 [0x10C16]={\
  direction=\"r\",\
 },\
 [0x10C17]={\
  direction=\"r\",\
 },\
 [0x10C18]={\
  direction=\"r\",\
 },\
 [0x10C19]={\
  direction=\"r\",\
 },\
 [0x10C1A]={\
  direction=\"r\",\
 },\
 [0x10C1B]={\
  direction=\"r\",\
 },\
 [0x10C1C]={\
  direction=\"r\",\
 },\
 [0x10C1D]={\
  direction=\"r\",\
 },\
 [0x10C1E]={\
  direction=\"r\",\
 },\
 [0x10C1F]={\
  direction=\"r\",\
 },\
 [0x10C20]={\
  direction=\"r\",\
 },\
 [0x10C21]={\
  direction=\"r\",\
 },\
 [0x10C22]={\
  direction=\"r\",\
 },\
 [0x10C23]={\
  direction=\"r\",\
 },\
 [0x10C24]={\
  direction=\"r\",\
 },\
 [0x10C25]={\
  direction=\"r\",\
 },\
 [0x10C26]={\
  direction=\"r\",\
 },\
 [0x10C27]={\
  direction=\"r\",\
 },\
 [0x10C28]={\
  direction=\"r\",\
 },\
 [0x10C29]={\
  direction=\"r\",\
 },\
 [0x10C2A]={\
  direction=\"r\",\
 },\
 [0x10C2B]={\
  direction=\"r\",\
 },\
 [0x10C2C]={\
  direction=\"r\",\
 },\
 [0x10C2D]={\
  direction=\"r\",\
 },\
 [0x10C2E]={\
  direction=\"r\",\
 },\
 [0x10C2F]={\
  direction=\"r\",\
 },\
 [0x10C30]={\
  direction=\"r\",\
 },\
 [0x10C31]={\
  direction=\"r\",\
 },\
 [0x10C32]={\
  direction=\"r\",\
 },\
 [0x10C33]={\
  direction=\"r\",\
 },\
 [0x10C34]={\
  direction=\"r\",\
 },\
 [0x10C35]={\
  direction=\"r\",\
 },\
 [0x10C36]={\
  direction=\"r\",\
 },\
 [0x10C37]={\
  direction=\"r\",\
 },\
 [0x10C38]={\
  direction=\"r\",\
 },\
 [0x10C39]={\
  direction=\"r\",\
 },\
 [0x10C3A]={\
  direction=\"r\",\
 },\
 [0x10C3B]={\
  direction=\"r\",\
 },\
 [0x10C3C]={\
  direction=\"r\",\
 },\
 [0x10C3D]={\
  direction=\"r\",\
 },\
 [0x10C3E]={\
  direction=\"r\",\
 },\
 [0x10C3F]={\
  direction=\"r\",\
 },\
 [0x10C40]={\
  direction=\"r\",\
 },\
 [0x10C41]={\
  direction=\"r\",\
 },\
 [0x10C42]={\
  direction=\"r\",\
 },\
 [0x10C43]={\
  direction=\"r\",\
 },\
 [0x10C44]={\
  direction=\"r\",\
 },\
 [0x10C45]={\
  direction=\"r\",\
 },\
 [0x10C46]={\
  direction=\"r\",\
 },\
 [0x10C47]={\
  direction=\"r\",\
 },\
 [0x10C48]={\
  direction=\"r\",\
 },\
 [0x10E60]={\
  direction=\"an\",\
 },\
 [0x10E61]={\
  direction=\"an\",\
 },\
 [0x10E62]={\
  direction=\"an\",\
 },\
 [0x10E63]={\
  direction=\"an\",\
 },\
 [0x10E64]={\
  direction=\"an\",\
 },\
 [0x10E65]={\
  direction=\"an\",\
 },\
 [0x10E66]={\
  direction=\"an\",\
 },\
 [0x10E67]={\
  direction=\"an\",\
 },\
 [0x10E68]={\
  direction=\"an\",\
 },\
 [0x10E69]={\
  direction=\"an\",\
 },\
 [0x10E6A]={\
  direction=\"an\",\
 },\
 [0x10E6B]={\
  direction=\"an\",\
 },\
 [0x10E6C]={\
  direction=\"an\",\
 },\
 [0x10E6D]={\
  direction=\"an\",\
 },\
 [0x10E6E]={\
  direction=\"an\",\
 },\
 [0x10E6F]={\
  direction=\"an\",\
 },\
 [0x10E70]={\
  direction=\"an\",\
 },\
 [0x10E71]={\
  direction=\"an\",\
 },\
 [0x10E72]={\
  direction=\"an\",\
 },\
 [0x10E73]={\
  direction=\"an\",\
 },\
 [0x10E74]={\
  direction=\"an\",\
 },\
 [0x10E75]={\
  direction=\"an\",\
 },\
 [0x10E76]={\
  direction=\"an\",\
 },\
 [0x10E77]={\
  direction=\"an\",\
 },\
 [0x10E78]={\
  direction=\"an\",\
 },\
 [0x10E79]={\
  direction=\"an\",\
 },\
 [0x10E7A]={\
  direction=\"an\",\
 },\
 [0x10E7B]={\
  direction=\"an\",\
 },\
 [0x10E7C]={\
  direction=\"an\",\
 },\
 [0x10E7D]={\
  direction=\"an\",\
 },\
 [0x10E7E]={\
  direction=\"an\",\
 },\
 [0x11000]={\
  direction=\"l\",\
 },\
 [0x11001]={\
  direction=\"nsm\",\
 },\
 [0x11002]={\
  direction=\"l\",\
 },\
 [0x11003]={\
  direction=\"l\",\
 },\
 [0x11004]={\
  direction=\"l\",\
 },\
 [0x11005]={\
  direction=\"l\",\
 },\
 [0x11006]={\
  direction=\"l\",\
 },\
 [0x11007]={\
  direction=\"l\",\
 },\
 [0x11008]={\
  direction=\"l\",\
 },\
 [0x11009]={\
  direction=\"l\",\
 },\
 [0x1100A]={\
  direction=\"l\",\
 },\
 [0x1100B]={\
  direction=\"l\",\
 },\
 [0x1100C]={\
  direction=\"l\",\
 },\
 [0x1100D]={\
  direction=\"l\",\
 },\
 [0x1100E]={\
  direction=\"l\",\
 },\
 [0x1100F]={\
  direction=\"l\",\
 },\
 [0x11010]={\
  direction=\"l\",\
 },\
 [0x11011]={\
  direction=\"l\",\
 },\
 [0x11012]={\
  direction=\"l\",\
 },\
 [0x11013]={\
  direction=\"l\",\
 },\
 [0x11014]={\
  direction=\"l\",\
 },\
 [0x11015]={\
  direction=\"l\",\
 },\
 [0x11016]={\
  direction=\"l\",\
 },\
 [0x11017]={\
  direction=\"l\",\
 },\
 [0x11018]={\
  direction=\"l\",\
 },\
 [0x11019]={\
  direction=\"l\",\
 },\
 [0x1101A]={\
  direction=\"l\",\
 },\
 [0x1101B]={\
  direction=\"l\",\
 },\
 [0x1101C]={\
  direction=\"l\",\
 },\
 [0x1101D]={\
  direction=\"l\",\
 },\
 [0x1101E]={\
  direction=\"l\",\
 },\
 [0x1101F]={\
  direction=\"l\",\
 },\
 [0x11020]={\
  direction=\"l\",\
 },\
 [0x11021]={\
  direction=\"l\",\
 },\
 [0x11022]={\
  direction=\"l\",\
 },\
 [0x11023]={\
  direction=\"l\",\
 },\
 [0x11024]={\
  direction=\"l\",\
 },\
 [0x11025]={\
  direction=\"l\",\
 },\
 [0x11026]={\
  direction=\"l\",\
 },\
 [0x11027]={\
  direction=\"l\",\
 },\
 [0x11028]={\
  direction=\"l\",\
 },\
 [0x11029]={\
  direction=\"l\",\
 },\
 [0x1102A]={\
  direction=\"l\",\
 },\
 [0x1102B]={\
  direction=\"l\",\
 },\
 [0x1102C]={\
  direction=\"l\",\
 },\
 [0x1102D]={\
  direction=\"l\",\
 },\
 [0x1102E]={\
  direction=\"l\",\
 },\
 [0x1102F]={\
  direction=\"l\",\
 },\
 [0x11030]={\
  direction=\"l\",\
 },\
 [0x11031]={\
  direction=\"l\",\
 },\
 [0x11032]={\
  direction=\"l\",\
 },\
 [0x11033]={\
  direction=\"l\",\
 },\
 [0x11034]={\
  direction=\"l\",\
 },\
 [0x11035]={\
  direction=\"l\",\
 },\
 [0x11036]={\
  direction=\"l\",\
 },\
 [0x11037]={\
  direction=\"l\",\
 },\
 [0x11038]={\
  direction=\"nsm\",\
 },\
 [0x11039]={\
  direction=\"nsm\",\
 },\
 [0x1103A]={\
  direction=\"nsm\",\
 },\
 [0x1103B]={\
  direction=\"nsm\",\
 },\
 [0x1103C]={\
  direction=\"nsm\",\
 },\
 [0x1103D]={\
  direction=\"nsm\",\
 },\
 [0x1103E]={\
  direction=\"nsm\",\
 },\
 [0x1103F]={\
  direction=\"nsm\",\
 },\
 [0x11040]={\
  direction=\"nsm\",\
 },\
 [0x11041]={\
  direction=\"nsm\",\
 },\
 [0x11042]={\
  direction=\"nsm\",\
 },\
 [0x11043]={\
  direction=\"nsm\",\
 },\
 [0x11044]={\
  direction=\"nsm\",\
 },\
 [0x11045]={\
  direction=\"nsm\",\
 },\
 [0x11046]={\
  direction=\"nsm\",\
 },\
 [0x11047]={\
  direction=\"l\",\
 },\
 [0x11048]={\
  direction=\"l\",\
 },\
 [0x11049]={\
  direction=\"l\",\
 },\
 [0x1104A]={\
  direction=\"l\",\
 },\
 [0x1104B]={\
  direction=\"l\",\
 },\
 [0x1104C]={\
  direction=\"l\",\
 },\
 [0x1104D]={\
  direction=\"l\",\
 },\
 [0x11052]={\
  direction=\"on\",\
 },\
 [0x11053]={\
  direction=\"on\",\
 },\
 [0x11054]={\
  direction=\"on\",\
 },\
 [0x11055]={\
  direction=\"on\",\
 },\
 [0x11056]={\
  direction=\"on\",\
 },\
 [0x11057]={\
  direction=\"on\",\
 },\
 [0x11058]={\
  direction=\"on\",\
 },\
 [0x11059]={\
  direction=\"on\",\
 },\
 [0x1105A]={\
  direction=\"on\",\
 },\
 [0x1105B]={\
  direction=\"on\",\
 },\
 [0x1105C]={\
  direction=\"on\",\
 },\
 [0x1105D]={\
  direction=\"on\",\
 },\
 [0x1105E]={\
  direction=\"on\",\
 },\
 [0x1105F]={\
  direction=\"on\",\
 },\
 [0x11060]={\
  direction=\"on\",\
 },\
 [0x11061]={\
  direction=\"on\",\
 },\
 [0x11062]={\
  direction=\"on\",\
 },\
 [0x11063]={\
  direction=\"on\",\
 },\
 [0x11064]={\
  direction=\"on\",\
 },\
 [0x11065]={\
  direction=\"on\",\
 },\
 [0x11066]={\
  direction=\"l\",\
 },\
 [0x11067]={\
  direction=\"l\",\
 },\
 [0x11068]={\
  direction=\"l\",\
 },\
 [0x11069]={\
  direction=\"l\",\
 },\
 [0x1106A]={\
  direction=\"l\",\
 },\
 [0x1106B]={\
  direction=\"l\",\
 },\
 [0x1106C]={\
  direction=\"l\",\
 },\
 [0x1106D]={\
  direction=\"l\",\
 },\
 [0x1106E]={\
  direction=\"l\",\
 },\
 [0x1106F]={\
  direction=\"l\",\
 },\
 [0x11080]={\
  direction=\"nsm\",\
 },\
 [0x11081]={\
  direction=\"nsm\",\
 },\
 [0x11082]={\
  direction=\"l\",\
 },\
 [0x11083]={\
  direction=\"l\",\
 },\
 [0x11084]={\
  direction=\"l\",\
 },\
 [0x11085]={\
  direction=\"l\",\
 },\
 [0x11086]={\
  direction=\"l\",\
 },\
 [0x11087]={\
  direction=\"l\",\
 },\
 [0x11088]={\
  direction=\"l\",\
 },\
 [0x11089]={\
  direction=\"l\",\
 },\
 [0x1108A]={\
  direction=\"l\",\
 },\
 [0x1108B]={\
  direction=\"l\",\
 },\
 [0x1108C]={\
  direction=\"l\",\
 },\
 [0x1108D]={\
  direction=\"l\",\
 },\
 [0x1108E]={\
  direction=\"l\",\
 },\
 [0x1108F]={\
  direction=\"l\",\
 },\
 [0x11090]={\
  direction=\"l\",\
 },\
 [0x11091]={\
  direction=\"l\",\
 },\
 [0x11092]={\
  direction=\"l\",\
 },\
 [0x11093]={\
  direction=\"l\",\
 },\
 [0x11094]={\
  direction=\"l\",\
 },\
 [0x11095]={\
  direction=\"l\",\
 },\
 [0x11096]={\
  direction=\"l\",\
 },\
 [0x11097]={\
  direction=\"l\",\
 },\
 [0x11098]={\
  direction=\"l\",\
 },\
 [0x11099]={\
  direction=\"l\",\
 },\
 [0x1109A]={\
  direction=\"l\",\
 },\
 [0x1109B]={\
  direction=\"l\",\
 },\
 [0x1109C]={\
  direction=\"l\",\
 },\
 [0x1109D]={\
  direction=\"l\",\
 },\
 [0x1109E]={\
  direction=\"l\",\
 },\
 [0x1109F]={\
  direction=\"l\",\
 },\
 [0x110A0]={\
  direction=\"l\",\
 },\
 [0x110A1]={\
  direction=\"l\",\
 },\
 [0x110A2]={\
  direction=\"l\",\
 },\
 [0x110A3]={\
  direction=\"l\",\
 },\
 [0x110A4]={\
  direction=\"l\",\
 },\
 [0x110A5]={\
  direction=\"l\",\
 },\
 [0x110A6]={\
  direction=\"l\",\
 },\
 [0x110A7]={\
  direction=\"l\",\
 },\
 [0x110A8]={\
  direction=\"l\",\
 },\
 [0x110A9]={\
  direction=\"l\",\
 },\
 [0x110AA]={\
  direction=\"l\",\
 },\
 [0x110AB]={\
  direction=\"l\",\
 },\
 [0x110AC]={\
  direction=\"l\",\
 },\
 [0x110AD]={\
  direction=\"l\",\
 },\
 [0x110AE]={\
  direction=\"l\",\
 },\
 [0x110AF]={\
  direction=\"l\",\
 },\
 [0x110B0]={\
  direction=\"l\",\
 },\
 [0x110B1]={\
  direction=\"l\",\
 },\
 [0x110B2]={\
  direction=\"l\",\
 },\
 [0x110B3]={\
  direction=\"nsm\",\
 },\
 [0x110B4]={\
  direction=\"nsm\",\
 },\
 [0x110B5]={\
  direction=\"nsm\",\
 },\
 [0x110B6]={\
  direction=\"nsm\",\
 },\
 [0x110B7]={\
  direction=\"l\",\
 },\
 [0x110B8]={\
  direction=\"l\",\
 },\
 [0x110B9]={\
  direction=\"nsm\",\
 },\
 [0x110BA]={\
  direction=\"nsm\",\
 },\
 [0x110BB]={\
  direction=\"l\",\
 },\
 [0x110BC]={\
  direction=\"l\",\
 },\
 [0x110BD]={\
  direction=\"l\",\
 },\
 [0x110BE]={\
  direction=\"l\",\
 },\
 [0x110BF]={\
  direction=\"l\",\
 },\
 [0x110C0]={\
  direction=\"l\",\
 },\
 [0x110C1]={\
  direction=\"l\",\
 },\
 [0x110D0]={\
  direction=\"l\",\
 },\
 [0x110D1]={\
  direction=\"l\",\
 },\
 [0x110D2]={\
  direction=\"l\",\
 },\
 [0x110D3]={\
  direction=\"l\",\
 },\
 [0x110D4]={\
  direction=\"l\",\
 },\
 [0x110D5]={\
  direction=\"l\",\
 },\
 [0x110D6]={\
  direction=\"l\",\
 },\
 [0x110D7]={\
  direction=\"l\",\
 },\
 [0x110D8]={\
  direction=\"l\",\
 },\
 [0x110D9]={\
  direction=\"l\",\
 },\
 [0x110DA]={\
  direction=\"l\",\
 },\
 [0x110DB]={\
  direction=\"l\",\
 },\
 [0x110DC]={\
  direction=\"l\",\
 },\
 [0x110DD]={\
  direction=\"l\",\
 },\
 [0x110DE]={\
  direction=\"l\",\
 },\
 [0x110DF]={\
  direction=\"l\",\
 },\
 [0x110E0]={\
  direction=\"l\",\
 },\
 [0x110E1]={\
  direction=\"l\",\
 },\
 [0x110E2]={\
  direction=\"l\",\
 },\
 [0x110E3]={\
  direction=\"l\",\
 },\
 [0x110E4]={\
  direction=\"l\",\
 },\
 [0x110E5]={\
  direction=\"l\",\
 },\
 [0x110E6]={\
  direction=\"l\",\
 },\
 [0x110E7]={\
  direction=\"l\",\
 },\
 [0x110E8]={\
  direction=\"l\",\
 },\
 [0x110F0]={\
  direction=\"l\",\
 },\
 [0x110F1]={\
  direction=\"l\",\
 },\
 [0x110F2]={\
  direction=\"l\",\
 },\
 [0x110F3]={\
  direction=\"l\",\
 },\
 [0x110F4]={\
  direction=\"l\",\
 },\
 [0x110F5]={\
  direction=\"l\",\
 },\
 [0x110F6]={\
  direction=\"l\",\
 },\
 [0x110F7]={\
  direction=\"l\",\
 },\
 [0x110F8]={\
  direction=\"l\",\
 },\
 [0x110F9]={\
  direction=\"l\",\
 },\
 [0x11100]={\
  direction=\"nsm\",\
 },\
 [0x11101]={\
  direction=\"nsm\",\
 },\
 [0x11102]={\
  direction=\"nsm\",\
 },\
 [0x11103]={\
  direction=\"l\",\
 },\
 [0x11104]={\
  direction=\"l\",\
 },\
 [0x11105]={\
  direction=\"l\",\
 },\
 [0x11106]={\
  direction=\"l\",\
 },\
 [0x11107]={\
  direction=\"l\",\
 },\
 [0x11108]={\
  direction=\"l\",\
 },\
 [0x11109]={\
  direction=\"l\",\
 },\
 [0x1110A]={\
  direction=\"l\",\
 },\
 [0x1110B]={\
  direction=\"l\",\
 },\
 [0x1110C]={\
  direction=\"l\",\
 },\
 [0x1110D]={\
  direction=\"l\",\
 },\
 [0x1110E]={\
  direction=\"l\",\
 },\
 [0x1110F]={\
  direction=\"l\",\
 },\
 [0x11110]={\
  direction=\"l\",\
 },\
 [0x11111]={\
  direction=\"l\",\
 },\
 [0x11112]={\
  direction=\"l\",\
 },\
 [0x11113]={\
  direction=\"l\",\
 },\
 [0x11114]={\
  direction=\"l\",\
 },\
 [0x11115]={\
  direction=\"l\",\
 },\
 [0x11116]={\
  direction=\"l\",\
 },\
 [0x11117]={\
  direction=\"l\",\
 },\
 [0x11118]={\
  direction=\"l\",\
 },\
 [0x11119]={\
  direction=\"l\",\
 },\
 [0x1111A]={\
  direction=\"l\",\
 },\
 [0x1111B]={\
  direction=\"l\",\
 },\
 [0x1111C]={\
  direction=\"l\",\
 },\
 [0x1111D]={\
  direction=\"l\",\
 },\
 [0x1111E]={\
  direction=\"l\",\
 },\
 [0x1111F]={\
  direction=\"l\",\
 },\
 [0x11120]={\
  direction=\"l\",\
 },\
 [0x11121]={\
  direction=\"l\",\
 },\
 [0x11122]={\
  direction=\"l\",\
 },\
 [0x11123]={\
  direction=\"l\",\
 },\
 [0x11124]={\
  direction=\"l\",\
 },\
 [0x11125]={\
  direction=\"l\",\
 },\
 [0x11126]={\
  direction=\"l\",\
 },\
 [0x11127]={\
  direction=\"nsm\",\
 },\
 [0x11128]={\
  direction=\"nsm\",\
 },\
 [0x11129]={\
  direction=\"nsm\",\
 },\
 [0x1112A]={\
  direction=\"nsm\",\
 },\
 [0x1112B]={\
  direction=\"nsm\",\
 },\
 [0x1112C]={\
  direction=\"l\",\
 },\
 [0x1112D]={\
  direction=\"nsm\",\
 },\
 [0x1112E]={\
  direction=\"nsm\",\
 },\
 [0x1112F]={\
  direction=\"nsm\",\
 },\
 [0x11130]={\
  direction=\"nsm\",\
 },\
 [0x11131]={\
  direction=\"nsm\",\
 },\
 [0x11132]={\
  direction=\"nsm\",\
 },\
 [0x11133]={\
  direction=\"nsm\",\
 },\
 [0x11134]={\
  direction=\"nsm\",\
 },\
 [0x11136]={\
  direction=\"l\",\
 },\
 [0x11137]={\
  direction=\"l\",\
 },\
 [0x11138]={\
  direction=\"l\",\
 },\
 [0x11139]={\
  direction=\"l\",\
 },\
 [0x1113A]={\
  direction=\"l\",\
 },\
 [0x1113B]={\
  direction=\"l\",\
 },\
 [0x1113C]={\
  direction=\"l\",\
 },\
 [0x1113D]={\
  direction=\"l\",\
 },\
 [0x1113E]={\
  direction=\"l\",\
 },\
 [0x1113F]={\
  direction=\"l\",\
 },\
 [0x11140]={\
  direction=\"l\",\
 },\
 [0x11141]={\
  direction=\"l\",\
 },\
 [0x11142]={\
  direction=\"l\",\
 },\
 [0x11143]={\
  direction=\"l\",\
 },\
 [0x11180]={\
  direction=\"nsm\",\
 },\
 [0x11181]={\
  direction=\"nsm\",\
 },\
 [0x11182]={\
  direction=\"l\",\
 },\
 [0x11183]={\
  direction=\"l\",\
 },\
 [0x11184]={\
  direction=\"l\",\
 },\
 [0x11185]={\
  direction=\"l\",\
 },\
 [0x11186]={\
  direction=\"l\",\
 },\
 [0x11187]={\
  direction=\"l\",\
 },\
 [0x11188]={\
  direction=\"l\",\
 },\
 [0x11189]={\
  direction=\"l\",\
 },\
 [0x1118A]={\
  direction=\"l\",\
 },\
 [0x1118B]={\
  direction=\"l\",\
 },\
 [0x1118C]={\
  direction=\"l\",\
 },\
 [0x1118D]={\
  direction=\"l\",\
 },\
 [0x1118E]={\
  direction=\"l\",\
 },\
 [0x1118F]={\
  direction=\"l\",\
 },\
 [0x11190]={\
  direction=\"l\",\
 },\
 [0x11191]={\
  direction=\"l\",\
 },\
 [0x11192]={\
  direction=\"l\",\
 },\
 [0x11193]={\
  direction=\"l\",\
 },\
 [0x11194]={\
  direction=\"l\",\
 },\
 [0x11195]={\
  direction=\"l\",\
 },\
 [0x11196]={\
  direction=\"l\",\
 },\
 [0x11197]={\
  direction=\"l\",\
 },\
 [0x11198]={\
  direction=\"l\",\
 },\
 [0x11199]={\
  direction=\"l\",\
 },\
 [0x1119A]={\
  direction=\"l\",\
 },\
 [0x1119B]={\
  direction=\"l\",\
 },\
 [0x1119C]={\
  direction=\"l\",\
 },\
 [0x1119D]={\
  direction=\"l\",\
 },\
 [0x1119E]={\
  direction=\"l\",\
 },\
 [0x1119F]={\
  direction=\"l\",\
 },\
 [0x111A0]={\
  direction=\"l\",\
 },\
 [0x111A1]={\
  direction=\"l\",\
 },\
 [0x111A2]={\
  direction=\"l\",\
 },\
 [0x111A3]={\
  direction=\"l\",\
 },\
 [0x111A4]={\
  direction=\"l\",\
 },\
 [0x111A5]={\
  direction=\"l\",\
 },\
 [0x111A6]={\
  direction=\"l\",\
 },\
 [0x111A7]={\
  direction=\"l\",\
 },\
 [0x111A8]={\
  direction=\"l\",\
 },\
 [0x111A9]={\
  direction=\"l\",\
 },\
 [0x111AA]={\
  direction=\"l\",\
 },\
 [0x111AB]={\
  direction=\"l\",\
 },\
 [0x111AC]={\
  direction=\"l\",\
 },\
 [0x111AD]={\
  direction=\"l\",\
 },\
 [0x111AE]={\
  direction=\"l\",\
 },\
 [0x111AF]={\
  direction=\"l\",\
 },\
 [0x111B0]={\
  direction=\"l\",\
 },\
 [0x111B1]={\
  direction=\"l\",\
 },\
 [0x111B2]={\
  direction=\"l\",\
 },\
 [0x111B3]={\
  direction=\"l\",\
 },\
 [0x111B4]={\
  direction=\"l\",\
 },\
 [0x111B5]={\
  direction=\"l\",\
 },\
 [0x111B6]={\
  direction=\"nsm\",\
 },\
 [0x111B7]={\
  direction=\"nsm\",\
 },\
 [0x111B8]={\
  direction=\"nsm\",\
 },\
 [0x111B9]={\
  direction=\"nsm\",\
 },\
 [0x111BA]={\
  direction=\"nsm\",\
 },\
 [0x111BB]={\
  direction=\"nsm\",\
 },\
 [0x111BC]={\
  direction=\"nsm\",\
 },\
 [0x111BD]={\
  direction=\"nsm\",\
 },\
 [0x111BE]={\
  direction=\"nsm\",\
 },\
 [0x111BF]={\
  direction=\"l\",\
 },\
 [0x111C0]={\
  direction=\"l\",\
 },\
 [0x111C1]={\
  direction=\"l\",\
 },\
 [0x111C2]={\
  direction=\"l\",\
 },\
 [0x111C3]={\
  direction=\"l\",\
 },\
 [0x111C4]={\
  direction=\"l\",\
 },\
 [0x111C5]={\
  direction=\"l\",\
 },\
 [0x111C6]={\
  direction=\"l\",\
 },\
 [0x111C7]={\
  direction=\"l\",\
 },\
 [0x111C8]={\
  direction=\"l\",\
 },\
 [0x111D0]={\
  direction=\"l\",\
 },\
 [0x111D1]={\
  direction=\"l\",\
 },\
 [0x111D2]={\
  direction=\"l\",\
 },\
 [0x111D3]={\
  direction=\"l\",\
 },\
 [0x111D4]={\
  direction=\"l\",\
 },\
 [0x111D5]={\
  direction=\"l\",\
 },\
 [0x111D6]={\
  direction=\"l\",\
 },\
 [0x111D7]={\
  direction=\"l\",\
 },\
 [0x111D8]={\
  direction=\"l\",\
 },\
 [0x111D9]={\
  direction=\"l\",\
 },\
 [0x11680]={\
  direction=\"l\",\
 },\
 [0x11681]={\
  direction=\"l\",\
 },\
 [0x11682]={\
  direction=\"l\",\
 },\
 [0x11683]={\
  direction=\"l\",\
 },\
 [0x11684]={\
  direction=\"l\",\
 },\
 [0x11685]={\
  direction=\"l\",\
 },\
 [0x11686]={\
  direction=\"l\",\
 },\
 [0x11687]={\
  direction=\"l\",\
 },\
 [0x11688]={\
  direction=\"l\",\
 },\
 [0x11689]={\
  direction=\"l\",\
 },\
 [0x1168A]={\
  direction=\"l\",\
 },\
 [0x1168B]={\
  direction=\"l\",\
 },\
 [0x1168C]={\
  direction=\"l\",\
 },\
 [0x1168D]={\
  direction=\"l\",\
 },\
 [0x1168E]={\
  direction=\"l\",\
 },\
 [0x1168F]={\
  direction=\"l\",\
 },\
 [0x11690]={\
  direction=\"l\",\
 },\
 [0x11691]={\
  direction=\"l\",\
 },\
 [0x11692]={\
  direction=\"l\",\
 },\
 [0x11693]={\
  direction=\"l\",\
 },\
 [0x11694]={\
  direction=\"l\",\
 },\
 [0x11695]={\
  direction=\"l\",\
 },\
 [0x11696]={\
  direction=\"l\",\
 },\
 [0x11697]={\
  direction=\"l\",\
 },\
 [0x11698]={\
  direction=\"l\",\
 },\
 [0x11699]={\
  direction=\"l\",\
 },\
 [0x1169A]={\
  direction=\"l\",\
 },\
 [0x1169B]={\
  direction=\"l\",\
 },\
 [0x1169C]={\
  direction=\"l\",\
 },\
 [0x1169D]={\
  direction=\"l\",\
 },\
 [0x1169E]={\
  direction=\"l\",\
 },\
 [0x1169F]={\
  direction=\"l\",\
 },\
 [0x116A0]={\
  direction=\"l\",\
 },\
 [0x116A1]={\
  direction=\"l\",\
 },\
 [0x116A2]={\
  direction=\"l\",\
 },\
 [0x116A3]={\
  direction=\"l\",\
 },\
 [0x116A4]={\
  direction=\"l\",\
 },\
 [0x116A5]={\
  direction=\"l\",\
 },\
 [0x116A6]={\
  direction=\"l\",\
 },\
 [0x116A7]={\
  direction=\"l\",\
 },\
 [0x116A8]={\
  direction=\"l\",\
 },\
 [0x116A9]={\
  direction=\"l\",\
 },\
 [0x116AA]={\
  direction=\"l\",\
 },\
 [0x116AB]={\
  direction=\"nsm\",\
 },\
 [0x116AC]={\
  direction=\"l\",\
 },\
 [0x116AD]={\
  direction=\"nsm\",\
 },\
 [0x116AE]={\
  direction=\"l\",\
 },\
 [0x116AF]={\
  direction=\"l\",\
 },\
 [0x116B0]={\
  direction=\"nsm\",\
 },\
 [0x116B1]={\
  direction=\"nsm\",\
 },\
 [0x116B2]={\
  direction=\"nsm\",\
 },\
 [0x116B3]={\
  direction=\"nsm\",\
 },\
 [0x116B4]={\
  direction=\"nsm\",\
 },\
 [0x116B5]={\
  direction=\"nsm\",\
 },\
 [0x116B6]={\
  direction=\"l\",\
 },\
 [0x116B7]={\
  direction=\"nsm\",\
 },\
 [0x116C0]={\
  direction=\"l\",\
 },\
 [0x116C1]={\
  direction=\"l\",\
 },\
 [0x116C2]={\
  direction=\"l\",\
 },\
 [0x116C3]={\
  direction=\"l\",\
 },\
 [0x116C4]={\
  direction=\"l\",\
 },\
 [0x116C5]={\
  direction=\"l\",\
 },\
 [0x116C6]={\
  direction=\"l\",\
 },\
 [0x116C7]={\
  direction=\"l\",\
 },\
 [0x116C8]={\
  direction=\"l\",\
 },\
 [0x116C9]={\
  direction=\"l\",\
 },\
 [0x12000]={\
  direction=\"l\",\
 },\
 [0x12001]={\
  direction=\"l\",\
 },\
 [0x12002]={\
  direction=\"l\",\
 },\
 [0x12003]={\
  direction=\"l\",\
 },\
 [0x12004]={\
  direction=\"l\",\
 },\
 [0x12005]={\
  direction=\"l\",\
 },\
 [0x12006]={\
  direction=\"l\",\
 },\
 [0x12007]={\
  direction=\"l\",\
 },\
 [0x12008]={\
  direction=\"l\",\
 },\
 [0x12009]={\
  direction=\"l\",\
 },\
 [0x1200A]={\
  direction=\"l\",\
 },\
 [0x1200B]={\
  direction=\"l\",\
 },\
 [0x1200C]={\
  direction=\"l\",\
 },\
 [0x1200D]={\
  direction=\"l\",\
 },\
 [0x1200E]={\
  direction=\"l\",\
 },\
 [0x1200F]={\
  direction=\"l\",\
 },\
 [0x12010]={\
  direction=\"l\",\
 },\
 [0x12011]={\
  direction=\"l\",\
 },\
 [0x12012]={\
  direction=\"l\",\
 },\
 [0x12013]={\
  direction=\"l\",\
 },\
 [0x12014]={\
  direction=\"l\",\
 },\
 [0x12015]={\
  direction=\"l\",\
 },\
 [0x12016]={\
  direction=\"l\",\
 },\
 [0x12017]={\
  direction=\"l\",\
 },\
 [0x12018]={\
  direction=\"l\",\
 },\
 [0x12019]={\
  direction=\"l\",\
 },\
 [0x1201A]={\
  direction=\"l\",\
 },\
 [0x1201B]={\
  direction=\"l\",\
 },\
 [0x1201C]={\
  direction=\"l\",\
 },\
 [0x1201D]={\
  direction=\"l\",\
 },\
 [0x1201E]={\
  direction=\"l\",\
 },\
 [0x1201F]={\
  direction=\"l\",\
 },\
 [0x12020]={\
  direction=\"l\",\
 },\
 [0x12021]={\
  direction=\"l\",\
 },\
 [0x12022]={\
  direction=\"l\",\
 },\
 [0x12023]={\
  direction=\"l\",\
 },\
 [0x12024]={\
  direction=\"l\",\
 },\
 [0x12025]={\
  direction=\"l\",\
 },\
 [0x12026]={\
  direction=\"l\",\
 },\
 [0x12027]={\
  direction=\"l\",\
 },\
 [0x12028]={\
  direction=\"l\",\
 },\
 [0x12029]={\
  direction=\"l\",\
 },\
 [0x1202A]={\
  direction=\"l\",\
 },\
 [0x1202B]={\
  direction=\"l\",\
 },\
 [0x1202C]={\
  direction=\"l\",\
 },\
 [0x1202D]={\
  direction=\"l\",\
 },\
 [0x1202E]={\
  direction=\"l\",\
 },\
 [0x1202F]={\
  direction=\"l\",\
 },\
 [0x12030]={\
  direction=\"l\",\
 },\
 [0x12031]={\
  direction=\"l\",\
 },\
 [0x12032]={\
  direction=\"l\",\
 },\
 [0x12033]={\
  direction=\"l\",\
 },\
 [0x12034]={\
  direction=\"l\",\
 },\
 [0x12035]={\
  direction=\"l\",\
 },\
 [0x12036]={\
  direction=\"l\",\
 },\
 [0x12037]={\
  direction=\"l\",\
 },\
 [0x12038]={\
  direction=\"l\",\
 },\
 [0x12039]={\
  direction=\"l\",\
 },\
 [0x1203A]={\
  direction=\"l\",\
 },\
 [0x1203B]={\
  direction=\"l\",\
 },\
 [0x1203C]={\
  direction=\"l\",\
 },\
 [0x1203D]={\
  direction=\"l\",\
 },\
 [0x1203E]={\
  direction=\"l\",\
 },\
 [0x1203F]={\
  direction=\"l\",\
 },\
 [0x12040]={\
  direction=\"l\",\
 },\
 [0x12041]={\
  direction=\"l\",\
 },\
 [0x12042]={\
  direction=\"l\",\
 },\
 [0x12043]={\
  direction=\"l\",\
 },\
 [0x12044]={\
  direction=\"l\",\
 },\
 [0x12045]={\
  direction=\"l\",\
 },\
 [0x12046]={\
  direction=\"l\",\
 },\
 [0x12047]={\
  direction=\"l\",\
 },\
 [0x12048]={\
  direction=\"l\",\
 },\
 [0x12049]={\
  direction=\"l\",\
 },\
 [0x1204A]={\
  direction=\"l\",\
 },\
 [0x1204B]={\
  direction=\"l\",\
 },\
 [0x1204C]={\
  direction=\"l\",\
 },\
 [0x1204D]={\
  direction=\"l\",\
 },\
 [0x1204E]={\
  direction=\"l\",\
 },\
 [0x1204F]={\
  direction=\"l\",\
 },\
 [0x12050]={\
  direction=\"l\",\
 },\
 [0x12051]={\
  direction=\"l\",\
 },\
 [0x12052]={\
  direction=\"l\",\
 },\
 [0x12053]={\
  direction=\"l\",\
 },\
 [0x12054]={\
  direction=\"l\",\
 },\
 [0x12055]={\
  direction=\"l\",\
 },\
 [0x12056]={\
  direction=\"l\",\
 },\
 [0x12057]={\
  direction=\"l\",\
 },\
 [0x12058]={\
  direction=\"l\",\
 },\
 [0x12059]={\
  direction=\"l\",\
 },\
 [0x1205A]={\
  direction=\"l\",\
 },\
 [0x1205B]={\
  direction=\"l\",\
 },\
 [0x1205C]={\
  direction=\"l\",\
 },\
 [0x1205D]={\
  direction=\"l\",\
 },\
 [0x1205E]={\
  direction=\"l\",\
 },\
 [0x1205F]={\
  direction=\"l\",\
 },\
 [0x12060]={\
  direction=\"l\",\
 },\
 [0x12061]={\
  direction=\"l\",\
 },\
 [0x12062]={\
  direction=\"l\",\
 },\
 [0x12063]={\
  direction=\"l\",\
 },\
 [0x12064]={\
  direction=\"l\",\
 },\
 [0x12065]={\
  direction=\"l\",\
 },\
 [0x12066]={\
  direction=\"l\",\
 },\
 [0x12067]={\
  direction=\"l\",\
 },\
 [0x12068]={\
  direction=\"l\",\
 },\
 [0x12069]={\
  direction=\"l\",\
 },\
 [0x1206A]={\
  direction=\"l\",\
 },\
 [0x1206B]={\
  direction=\"l\",\
 },\
 [0x1206C]={\
  direction=\"l\",\
 },\
 [0x1206D]={\
  direction=\"l\",\
 },\
 [0x1206E]={\
  direction=\"l\",\
 },\
 [0x1206F]={\
  direction=\"l\",\
 },\
 [0x12070]={\
  direction=\"l\",\
 },\
 [0x12071]={\
  direction=\"l\",\
 },\
 [0x12072]={\
  direction=\"l\",\
 },\
 [0x12073]={\
  direction=\"l\",\
 },\
 [0x12074]={\
  direction=\"l\",\
 },\
 [0x12075]={\
  direction=\"l\",\
 },\
 [0x12076]={\
  direction=\"l\",\
 },\
 [0x12077]={\
  direction=\"l\",\
 },\
 [0x12078]={\
  direction=\"l\",\
 },\
 [0x12079]={\
  direction=\"l\",\
 },\
 [0x1207A]={\
  direction=\"l\",\
 },\
 [0x1207B]={\
  direction=\"l\",\
 },\
 [0x1207C]={\
  direction=\"l\",\
 },\
 [0x1207D]={\
  direction=\"l\",\
 },\
 [0x1207E]={\
  direction=\"l\",\
 },\
 [0x1207F]={\
  direction=\"l\",\
 },\
 [0x12080]={\
  direction=\"l\",\
 },\
 [0x12081]={\
  direction=\"l\",\
 },\
 [0x12082]={\
  direction=\"l\",\
 },\
 [0x12083]={\
  direction=\"l\",\
 },\
 [0x12084]={\
  direction=\"l\",\
 },\
 [0x12085]={\
  direction=\"l\",\
 },\
 [0x12086]={\
  direction=\"l\",\
 },\
 [0x12087]={\
  direction=\"l\",\
 },\
 [0x12088]={\
  direction=\"l\",\
 },\
 [0x12089]={\
  direction=\"l\",\
 },\
 [0x1208A]={\
  direction=\"l\",\
 },\
 [0x1208B]={\
  direction=\"l\",\
 },\
 [0x1208C]={\
  direction=\"l\",\
 },\
 [0x1208D]={\
  direction=\"l\",\
 },\
 [0x1208E]={\
  direction=\"l\",\
 },\
 [0x1208F]={\
  direction=\"l\",\
 },\
 [0x12090]={\
  direction=\"l\",\
 },\
 [0x12091]={\
  direction=\"l\",\
 },\
 [0x12092]={\
  direction=\"l\",\
 },\
 [0x12093]={\
  direction=\"l\",\
 },\
 [0x12094]={\
  direction=\"l\",\
 },\
 [0x12095]={\
  direction=\"l\",\
 },\
 [0x12096]={\
  direction=\"l\",\
 },\
 [0x12097]={\
  direction=\"l\",\
 },\
 [0x12098]={\
  direction=\"l\",\
 },\
 [0x12099]={\
  direction=\"l\",\
 },\
 [0x1209A]={\
  direction=\"l\",\
 },\
 [0x1209B]={\
  direction=\"l\",\
 },\
 [0x1209C]={\
  direction=\"l\",\
 },\
 [0x1209D]={\
  direction=\"l\",\
 },\
 [0x1209E]={\
  direction=\"l\",\
 },\
 [0x1209F]={\
  direction=\"l\",\
 },\
 [0x120A0]={\
  direction=\"l\",\
 },\
 [0x120A1]={\
  direction=\"l\",\
 },\
 [0x120A2]={\
  direction=\"l\",\
 },\
 [0x120A3]={\
  direction=\"l\",\
 },\
 [0x120A4]={\
  direction=\"l\",\
 },\
 [0x120A5]={\
  direction=\"l\",\
 },\
 [0x120A6]={\
  direction=\"l\",\
 },\
 [0x120A7]={\
  direction=\"l\",\
 },\
 [0x120A8]={\
  direction=\"l\",\
 },\
 [0x120A9]={\
  direction=\"l\",\
 },\
 [0x120AA]={\
  direction=\"l\",\
 },\
 [0x120AB]={\
  direction=\"l\",\
 },\
 [0x120AC]={\
  direction=\"l\",\
 },\
 [0x120AD]={\
  direction=\"l\",\
 },\
 [0x120AE]={\
  direction=\"l\",\
 },\
 [0x120AF]={\
  direction=\"l\",\
 },\
 [0x120B0]={\
  direction=\"l\",\
 },\
 [0x120B1]={\
  direction=\"l\",\
 },\
 [0x120B2]={\
  direction=\"l\",\
 },\
 [0x120B3]={\
  direction=\"l\",\
 },\
 [0x120B4]={\
  direction=\"l\",\
 },\
 [0x120B5]={\
  direction=\"l\",\
 },\
 [0x120B6]={\
  direction=\"l\",\
 },\
 [0x120B7]={\
  direction=\"l\",\
 },\
 [0x120B8]={\
  direction=\"l\",\
 },\
 [0x120B9]={\
  direction=\"l\",\
 },\
 [0x120BA]={\
  direction=\"l\",\
 },\
 [0x120BB]={\
  direction=\"l\",\
 },\
 [0x120BC]={\
  direction=\"l\",\
 },\
 [0x120BD]={\
  direction=\"l\",\
 },\
 [0x120BE]={\
  direction=\"l\",\
 },\
 [0x120BF]={\
  direction=\"l\",\
 },\
 [0x120C0]={\
  direction=\"l\",\
 },\
 [0x120C1]={\
  direction=\"l\",\
 },\
 [0x120C2]={\
  direction=\"l\",\
 },\
 [0x120C3]={\
  direction=\"l\",\
 },\
 [0x120C4]={\
  direction=\"l\",\
 },\
 [0x120C5]={\
  direction=\"l\",\
 },\
 [0x120C6]={\
  direction=\"l\",\
 },\
 [0x120C7]={\
  direction=\"l\",\
 },\
 [0x120C8]={\
  direction=\"l\",\
 },\
 [0x120C9]={\
  direction=\"l\",\
 },\
 [0x120CA]={\
  direction=\"l\",\
 },\
 [0x120CB]={\
  direction=\"l\",\
 },\
 [0x120CC]={\
  direction=\"l\",\
 },\
 [0x120CD]={\
  direction=\"l\",\
 },\
 [0x120CE]={\
  direction=\"l\",\
 },\
 [0x120CF]={\
  direction=\"l\",\
 },\
 [0x120D0]={\
  direction=\"l\",\
 },\
 [0x120D1]={\
  direction=\"l\",\
 },\
 [0x120D2]={\
  direction=\"l\",\
 },\
 [0x120D3]={\
  direction=\"l\",\
 },\
 [0x120D4]={\
  direction=\"l\",\
 },\
 [0x120D5]={\
  direction=\"l\",\
 },\
 [0x120D6]={\
  direction=\"l\",\
 },\
 [0x120D7]={\
  direction=\"l\",\
 },\
 [0x120D8]={\
  direction=\"l\",\
 },\
 [0x120D9]={\
  direction=\"l\",\
 },\
 [0x120DA]={\
  direction=\"l\",\
 },\
 [0x120DB]={\
  direction=\"l\",\
 },\
 [0x120DC]={\
  direction=\"l\",\
 },\
 [0x120DD]={\
  direction=\"l\",\
 },\
 [0x120DE]={\
  direction=\"l\",\
 },\
 [0x120DF]={\
  direction=\"l\",\
 },\
 [0x120E0]={\
  direction=\"l\",\
 },\
 [0x120E1]={\
  direction=\"l\",\
 },\
 [0x120E2]={\
  direction=\"l\",\
 },\
 [0x120E3]={\
  direction=\"l\",\
 },\
 [0x120E4]={\
  direction=\"l\",\
 },\
 [0x120E5]={\
  direction=\"l\",\
 },\
 [0x120E6]={\
  direction=\"l\",\
 },\
 [0x120E7]={\
  direction=\"l\",\
 },\
 [0x120E8]={\
  direction=\"l\",\
 },\
 [0x120E9]={\
  direction=\"l\",\
 },\
 [0x120EA]={\
  direction=\"l\",\
 },\
 [0x120EB]={\
  direction=\"l\",\
 },\
 [0x120EC]={\
  direction=\"l\",\
 },\
 [0x120ED]={\
  direction=\"l\",\
 },\
 [0x120EE]={\
  direction=\"l\",\
 },\
 [0x120EF]={\
  direction=\"l\",\
 },\
 [0x120F0]={\
  direction=\"l\",\
 },\
 [0x120F1]={\
  direction=\"l\",\
 },\
 [0x120F2]={\
  direction=\"l\",\
 },\
 [0x120F3]={\
  direction=\"l\",\
 },\
 [0x120F4]={\
  direction=\"l\",\
 },\
 [0x120F5]={\
  direction=\"l\",\
 },\
 [0x120F6]={\
  direction=\"l\",\
 },\
 [0x120F7]={\
  direction=\"l\",\
 },\
 [0x120F8]={\
  direction=\"l\",\
 },\
 [0x120F9]={\
  direction=\"l\",\
 },\
 [0x120FA]={\
  direction=\"l\",\
 },\
 [0x120FB]={\
  direction=\"l\",\
 },\
 [0x120FC]={\
  direction=\"l\",\
 },\
 [0x120FD]={\
  direction=\"l\",\
 },\
 [0x120FE]={\
  direction=\"l\",\
 },\
 [0x120FF]={\
  direction=\"l\",\
 },\
 [0x12100]={\
  direction=\"l\",\
 },\
 [0x12101]={\
  direction=\"l\",\
 },\
 [0x12102]={\
  direction=\"l\",\
 },\
 [0x12103]={\
  direction=\"l\",\
 },\
 [0x12104]={\
  direction=\"l\",\
 },\
 [0x12105]={\
  direction=\"l\",\
 },\
 [0x12106]={\
  direction=\"l\",\
 },\
 [0x12107]={\
  direction=\"l\",\
 },\
 [0x12108]={\
  direction=\"l\",\
 },\
 [0x12109]={\
  direction=\"l\",\
 },\
 [0x1210A]={\
  direction=\"l\",\
 },\
 [0x1210B]={\
  direction=\"l\",\
 },\
 [0x1210C]={\
  direction=\"l\",\
 },\
 [0x1210D]={\
  direction=\"l\",\
 },\
 [0x1210E]={\
  direction=\"l\",\
 },\
 [0x1210F]={\
  direction=\"l\",\
 },\
 [0x12110]={\
  direction=\"l\",\
 },\
 [0x12111]={\
  direction=\"l\",\
 },\
 [0x12112]={\
  direction=\"l\",\
 },\
 [0x12113]={\
  direction=\"l\",\
 },\
 [0x12114]={\
  direction=\"l\",\
 },\
 [0x12115]={\
  direction=\"l\",\
 },\
 [0x12116]={\
  direction=\"l\",\
 },\
 [0x12117]={\
  direction=\"l\",\
 },\
 [0x12118]={\
  direction=\"l\",\
 },\
 [0x12119]={\
  direction=\"l\",\
 },\
 [0x1211A]={\
  direction=\"l\",\
 },\
 [0x1211B]={\
  direction=\"l\",\
 },\
 [0x1211C]={\
  direction=\"l\",\
 },\
 [0x1211D]={\
  direction=\"l\",\
 },\
 [0x1211E]={\
  direction=\"l\",\
 },\
 [0x1211F]={\
  direction=\"l\",\
 },\
 [0x12120]={\
  direction=\"l\",\
 },\
 [0x12121]={\
  direction=\"l\",\
 },\
 [0x12122]={\
  direction=\"l\",\
 },\
 [0x12123]={\
  direction=\"l\",\
 },\
 [0x12124]={\
  direction=\"l\",\
 },\
 [0x12125]={\
  direction=\"l\",\
 },\
 [0x12126]={\
  direction=\"l\",\
 },\
 [0x12127]={\
  direction=\"l\",\
 },\
 [0x12128]={\
  direction=\"l\",\
 },\
 [0x12129]={\
  direction=\"l\",\
 },\
 [0x1212A]={\
  direction=\"l\",\
 },\
 [0x1212B]={\
  direction=\"l\",\
 },\
 [0x1212C]={\
  direction=\"l\",\
 },\
 [0x1212D]={\
  direction=\"l\",\
 },\
 [0x1212E]={\
  direction=\"l\",\
 },\
 [0x1212F]={\
  direction=\"l\",\
 },\
 [0x12130]={\
  direction=\"l\",\
 },\
 [0x12131]={\
  direction=\"l\",\
 },\
 [0x12132]={\
  direction=\"l\",\
 },\
 [0x12133]={\
  direction=\"l\",\
 },\
 [0x12134]={\
  direction=\"l\",\
 },\
 [0x12135]={\
  direction=\"l\",\
 },\
 [0x12136]={\
  direction=\"l\",\
 },\
 [0x12137]={\
  direction=\"l\",\
 },\
 [0x12138]={\
  direction=\"l\",\
 },\
 [0x12139]={\
  direction=\"l\",\
 },\
 [0x1213A]={\
  direction=\"l\",\
 },\
 [0x1213B]={\
  direction=\"l\",\
 },\
 [0x1213C]={\
  direction=\"l\",\
 },\
 [0x1213D]={\
  direction=\"l\",\
 },\
 [0x1213E]={\
  direction=\"l\",\
 },\
 [0x1213F]={\
  direction=\"l\",\
 },\
 [0x12140]={\
  direction=\"l\",\
 },\
 [0x12141]={\
  direction=\"l\",\
 },\
 [0x12142]={\
  direction=\"l\",\
 },\
 [0x12143]={\
  direction=\"l\",\
 },\
 [0x12144]={\
  direction=\"l\",\
 },\
 [0x12145]={\
  direction=\"l\",\
 },\
 [0x12146]={\
  direction=\"l\",\
 },\
 [0x12147]={\
  direction=\"l\",\
 },\
 [0x12148]={\
  direction=\"l\",\
 },\
 [0x12149]={\
  direction=\"l\",\
 },\
 [0x1214A]={\
  direction=\"l\",\
 },\
 [0x1214B]={\
  direction=\"l\",\
 },\
 [0x1214C]={\
  direction=\"l\",\
 },\
 [0x1214D]={\
  direction=\"l\",\
 },\
 [0x1214E]={\
  direction=\"l\",\
 },\
 [0x1214F]={\
  direction=\"l\",\
 },\
 [0x12150]={\
  direction=\"l\",\
 },\
 [0x12151]={\
  direction=\"l\",\
 },\
 [0x12152]={\
  direction=\"l\",\
 },\
 [0x12153]={\
  direction=\"l\",\
 },\
 [0x12154]={\
  direction=\"l\",\
 },\
 [0x12155]={\
  direction=\"l\",\
 },\
 [0x12156]={\
  direction=\"l\",\
 },\
 [0x12157]={\
  direction=\"l\",\
 },\
 [0x12158]={\
  direction=\"l\",\
 },\
 [0x12159]={\
  direction=\"l\",\
 },\
 [0x1215A]={\
  direction=\"l\",\
 },\
 [0x1215B]={\
  direction=\"l\",\
 },\
 [0x1215C]={\
  direction=\"l\",\
 },\
 [0x1215D]={\
  direction=\"l\",\
 },\
 [0x1215E]={\
  direction=\"l\",\
 },\
 [0x1215F]={\
  direction=\"l\",\
 },\
 [0x12160]={\
  direction=\"l\",\
 },\
 [0x12161]={\
  direction=\"l\",\
 },\
 [0x12162]={\
  direction=\"l\",\
 },\
 [0x12163]={\
  direction=\"l\",\
 },\
 [0x12164]={\
  direction=\"l\",\
 },\
 [0x12165]={\
  direction=\"l\",\
 },\
 [0x12166]={\
  direction=\"l\",\
 },\
 [0x12167]={\
  direction=\"l\",\
 },\
 [0x12168]={\
  direction=\"l\",\
 },\
 [0x12169]={\
  direction=\"l\",\
 },\
 [0x1216A]={\
  direction=\"l\",\
 },\
 [0x1216B]={\
  direction=\"l\",\
 },\
 [0x1216C]={\
  direction=\"l\",\
 },\
 [0x1216D]={\
  direction=\"l\",\
 },\
 [0x1216E]={\
  direction=\"l\",\
 },\
 [0x1216F]={\
  direction=\"l\",\
 },\
 [0x12170]={\
  direction=\"l\",\
 },\
 [0x12171]={\
  direction=\"l\",\
 },\
 [0x12172]={\
  direction=\"l\",\
 },\
 [0x12173]={\
  direction=\"l\",\
 },\
 [0x12174]={\
  direction=\"l\",\
 },\
 [0x12175]={\
  direction=\"l\",\
 },\
 [0x12176]={\
  direction=\"l\",\
 },\
 [0x12177]={\
  direction=\"l\",\
 },\
 [0x12178]={\
  direction=\"l\",\
 },\
 [0x12179]={\
  direction=\"l\",\
 },\
 [0x1217A]={\
  direction=\"l\",\
 },\
 [0x1217B]={\
  direction=\"l\",\
 },\
 [0x1217C]={\
  direction=\"l\",\
 },\
 [0x1217D]={\
  direction=\"l\",\
 },\
 [0x1217E]={\
  direction=\"l\",\
 },\
 [0x1217F]={\
  direction=\"l\",\
 },\
 [0x12180]={\
  direction=\"l\",\
 },\
 [0x12181]={\
  direction=\"l\",\
 },\
 [0x12182]={\
  direction=\"l\",\
 },\
 [0x12183]={\
  direction=\"l\",\
 },\
 [0x12184]={\
  direction=\"l\",\
 },\
 [0x12185]={\
  direction=\"l\",\
 },\
 [0x12186]={\
  direction=\"l\",\
 },\
 [0x12187]={\
  direction=\"l\",\
 },\
 [0x12188]={\
  direction=\"l\",\
 },\
 [0x12189]={\
  direction=\"l\",\
 },\
 [0x1218A]={\
  direction=\"l\",\
 },\
 [0x1218B]={\
  direction=\"l\",\
 },\
 [0x1218C]={\
  direction=\"l\",\
 },\
 [0x1218D]={\
  direction=\"l\",\
 },\
 [0x1218E]={\
  direction=\"l\",\
 },\
 [0x1218F]={\
  direction=\"l\",\
 },\
 [0x12190]={\
  direction=\"l\",\
 },\
 [0x12191]={\
  direction=\"l\",\
 },\
 [0x12192]={\
  direction=\"l\",\
 },\
 [0x12193]={\
  direction=\"l\",\
 },\
 [0x12194]={\
  direction=\"l\",\
 },\
 [0x12195]={\
  direction=\"l\",\
 },\
 [0x12196]={\
  direction=\"l\",\
 },\
 [0x12197]={\
  direction=\"l\",\
 },\
 [0x12198]={\
  direction=\"l\",\
 },\
 [0x12199]={\
  direction=\"l\",\
 },\
 [0x1219A]={\
  direction=\"l\",\
 },\
 [0x1219B]={\
  direction=\"l\",\
 },\
 [0x1219C]={\
  direction=\"l\",\
 },\
 [0x1219D]={\
  direction=\"l\",\
 },\
 [0x1219E]={\
  direction=\"l\",\
 },\
 [0x1219F]={\
  direction=\"l\",\
 },\
 [0x121A0]={\
  direction=\"l\",\
 },\
 [0x121A1]={\
  direction=\"l\",\
 },\
 [0x121A2]={\
  direction=\"l\",\
 },\
 [0x121A3]={\
  direction=\"l\",\
 },\
 [0x121A4]={\
  direction=\"l\",\
 },\
 [0x121A5]={\
  direction=\"l\",\
 },\
 [0x121A6]={\
  direction=\"l\",\
 },\
 [0x121A7]={\
  direction=\"l\",\
 },\
 [0x121A8]={\
  direction=\"l\",\
 },\
 [0x121A9]={\
  direction=\"l\",\
 },\
 [0x121AA]={\
  direction=\"l\",\
 },\
 [0x121AB]={\
  direction=\"l\",\
 },\
 [0x121AC]={\
  direction=\"l\",\
 },\
 [0x121AD]={\
  direction=\"l\",\
 },\
 [0x121AE]={\
  direction=\"l\",\
 },\
 [0x121AF]={\
  direction=\"l\",\
 },\
 [0x121B0]={\
  direction=\"l\",\
 },\
 [0x121B1]={\
  direction=\"l\",\
 },\
 [0x121B2]={\
  direction=\"l\",\
 },\
 [0x121B3]={\
  direction=\"l\",\
 },\
 [0x121B4]={\
  direction=\"l\",\
 },\
 [0x121B5]={\
  direction=\"l\",\
 },\
 [0x121B6]={\
  direction=\"l\",\
 },\
 [0x121B7]={\
  direction=\"l\",\
 },\
 [0x121B8]={\
  direction=\"l\",\
 },\
 [0x121B9]={\
  direction=\"l\",\
 },\
 [0x121BA]={\
  direction=\"l\",\
 },\
 [0x121BB]={\
  direction=\"l\",\
 },\
 [0x121BC]={\
  direction=\"l\",\
 },\
 [0x121BD]={\
  direction=\"l\",\
 },\
 [0x121BE]={\
  direction=\"l\",\
 },\
 [0x121BF]={\
  direction=\"l\",\
 },\
 [0x121C0]={\
  direction=\"l\",\
 },\
 [0x121C1]={\
  direction=\"l\",\
 },\
 [0x121C2]={\
  direction=\"l\",\
 },\
 [0x121C3]={\
  direction=\"l\",\
 },\
 [0x121C4]={\
  direction=\"l\",\
 },\
 [0x121C5]={\
  direction=\"l\",\
 },\
 [0x121C6]={\
  direction=\"l\",\
 },\
 [0x121C7]={\
  direction=\"l\",\
 },\
 [0x121C8]={\
  direction=\"l\",\
 },\
 [0x121C9]={\
  direction=\"l\",\
 },\
 [0x121CA]={\
  direction=\"l\",\
 },\
 [0x121CB]={\
  direction=\"l\",\
 },\
 [0x121CC]={\
  direction=\"l\",\
 },\
 [0x121CD]={\
  direction=\"l\",\
 },\
 [0x121CE]={\
  direction=\"l\",\
 },\
 [0x121CF]={\
  direction=\"l\",\
 },\
 [0x121D0]={\
  direction=\"l\",\
 },\
 [0x121D1]={\
  direction=\"l\",\
 },\
 [0x121D2]={\
  direction=\"l\",\
 },\
 [0x121D3]={\
  direction=\"l\",\
 },\
 [0x121D4]={\
  direction=\"l\",\
 },\
 [0x121D5]={\
  direction=\"l\",\
 },\
 [0x121D6]={\
  direction=\"l\",\
 },\
 [0x121D7]={\
  direction=\"l\",\
 },\
 [0x121D8]={\
  direction=\"l\",\
 },\
 [0x121D9]={\
  direction=\"l\",\
 },\
 [0x121DA]={\
  direction=\"l\",\
 },\
 [0x121DB]={\
  direction=\"l\",\
 },\
 [0x121DC]={\
  direction=\"l\",\
 },\
 [0x121DD]={\
  direction=\"l\",\
 },\
 [0x121DE]={\
  direction=\"l\",\
 },\
 [0x121DF]={\
  direction=\"l\",\
 },\
 [0x121E0]={\
  direction=\"l\",\
 },\
 [0x121E1]={\
  direction=\"l\",\
 },\
 [0x121E2]={\
  direction=\"l\",\
 },\
 [0x121E3]={\
  direction=\"l\",\
 },\
 [0x121E4]={\
  direction=\"l\",\
 },\
 [0x121E5]={\
  direction=\"l\",\
 },\
 [0x121E6]={\
  direction=\"l\",\
 },\
 [0x121E7]={\
  direction=\"l\",\
 },\
 [0x121E8]={\
  direction=\"l\",\
 },\
 [0x121E9]={\
  direction=\"l\",\
 },\
 [0x121EA]={\
  direction=\"l\",\
 },\
 [0x121EB]={\
  direction=\"l\",\
 },\
 [0x121EC]={\
  direction=\"l\",\
 },\
 [0x121ED]={\
  direction=\"l\",\
 },\
 [0x121EE]={\
  direction=\"l\",\
 },\
 [0x121EF]={\
  direction=\"l\",\
 },\
 [0x121F0]={\
  direction=\"l\",\
 },\
 [0x121F1]={\
  direction=\"l\",\
 },\
 [0x121F2]={\
  direction=\"l\",\
 },\
 [0x121F3]={\
  direction=\"l\",\
 },\
 [0x121F4]={\
  direction=\"l\",\
 },\
 [0x121F5]={\
  direction=\"l\",\
 },\
 [0x121F6]={\
  direction=\"l\",\
 },\
 [0x121F7]={\
  direction=\"l\",\
 },\
 [0x121F8]={\
  direction=\"l\",\
 },\
 [0x121F9]={\
  direction=\"l\",\
 },\
 [0x121FA]={\
  direction=\"l\",\
 },\
 [0x121FB]={\
  direction=\"l\",\
 },\
 [0x121FC]={\
  direction=\"l\",\
 },\
 [0x121FD]={\
  direction=\"l\",\
 },\
 [0x121FE]={\
  direction=\"l\",\
 },\
 [0x121FF]={\
  direction=\"l\",\
 },\
 [0x12200]={\
  direction=\"l\",\
 },\
 [0x12201]={\
  direction=\"l\",\
 },\
 [0x12202]={\
  direction=\"l\",\
 },\
 [0x12203]={\
  direction=\"l\",\
 },\
 [0x12204]={\
  direction=\"l\",\
 },\
 [0x12205]={\
  direction=\"l\",\
 },\
 [0x12206]={\
  direction=\"l\",\
 },\
 [0x12207]={\
  direction=\"l\",\
 },\
 [0x12208]={\
  direction=\"l\",\
 },\
 [0x12209]={\
  direction=\"l\",\
 },\
 [0x1220A]={\
  direction=\"l\",\
 },\
 [0x1220B]={\
  direction=\"l\",\
 },\
 [0x1220C]={\
  direction=\"l\",\
 },\
 [0x1220D]={\
  direction=\"l\",\
 },\
 [0x1220E]={\
  direction=\"l\",\
 },\
 [0x1220F]={\
  direction=\"l\",\
 },\
 [0x12210]={\
  direction=\"l\",\
 },\
 [0x12211]={\
  direction=\"l\",\
 },\
 [0x12212]={\
  direction=\"l\",\
 },\
 [0x12213]={\
  direction=\"l\",\
 },\
 [0x12214]={\
  direction=\"l\",\
 },\
 [0x12215]={\
  direction=\"l\",\
 },\
 [0x12216]={\
  direction=\"l\",\
 },\
 [0x12217]={\
  direction=\"l\",\
 },\
 [0x12218]={\
  direction=\"l\",\
 },\
 [0x12219]={\
  direction=\"l\",\
 },\
 [0x1221A]={\
  direction=\"l\",\
 },\
 [0x1221B]={\
  direction=\"l\",\
 },\
 [0x1221C]={\
  direction=\"l\",\
 },\
 [0x1221D]={\
  direction=\"l\",\
 },\
 [0x1221E]={\
  direction=\"l\",\
 },\
 [0x1221F]={\
  direction=\"l\",\
 },\
 [0x12220]={\
  direction=\"l\",\
 },\
 [0x12221]={\
  direction=\"l\",\
 },\
 [0x12222]={\
  direction=\"l\",\
 },\
 [0x12223]={\
  direction=\"l\",\
 },\
 [0x12224]={\
  direction=\"l\",\
 },\
 [0x12225]={\
  direction=\"l\",\
 },\
 [0x12226]={\
  direction=\"l\",\
 },\
 [0x12227]={\
  direction=\"l\",\
 },\
 [0x12228]={\
  direction=\"l\",\
 },\
 [0x12229]={\
  direction=\"l\",\
 },\
 [0x1222A]={\
  direction=\"l\",\
 },\
 [0x1222B]={\
  direction=\"l\",\
 },\
 [0x1222C]={\
  direction=\"l\",\
 },\
 [0x1222D]={\
  direction=\"l\",\
 },\
 [0x1222E]={\
  direction=\"l\",\
 },\
 [0x1222F]={\
  direction=\"l\",\
 },\
 [0x12230]={\
  direction=\"l\",\
 },\
 [0x12231]={\
  direction=\"l\",\
 },\
 [0x12232]={\
  direction=\"l\",\
 },\
 [0x12233]={\
  direction=\"l\",\
 },\
 [0x12234]={\
  direction=\"l\",\
 },\
 [0x12235]={\
  direction=\"l\",\
 },\
 [0x12236]={\
  direction=\"l\",\
 },\
 [0x12237]={\
  direction=\"l\",\
 },\
 [0x12238]={\
  direction=\"l\",\
 },\
 [0x12239]={\
  direction=\"l\",\
 },\
 [0x1223A]={\
  direction=\"l\",\
 },\
 [0x1223B]={\
  direction=\"l\",\
 },\
 [0x1223C]={\
  direction=\"l\",\
 },\
 [0x1223D]={\
  direction=\"l\",\
 },\
 [0x1223E]={\
  direction=\"l\",\
 },\
 [0x1223F]={\
  direction=\"l\",\
 },\
 [0x12240]={\
  direction=\"l\",\
 },\
 [0x12241]={\
  direction=\"l\",\
 },\
 [0x12242]={\
  direction=\"l\",\
 },\
 [0x12243]={\
  direction=\"l\",\
 },\
 [0x12244]={\
  direction=\"l\",\
 },\
 [0x12245]={\
  direction=\"l\",\
 },\
 [0x12246]={\
  direction=\"l\",\
 },\
 [0x12247]={\
  direction=\"l\",\
 },\
 [0x12248]={\
  direction=\"l\",\
 },\
 [0x12249]={\
  direction=\"l\",\
 },\
 [0x1224A]={\
  direction=\"l\",\
 },\
 [0x1224B]={\
  direction=\"l\",\
 },\
 [0x1224C]={\
  direction=\"l\",\
 },\
 [0x1224D]={\
  direction=\"l\",\
 },\
 [0x1224E]={\
  direction=\"l\",\
 },\
 [0x1224F]={\
  direction=\"l\",\
 },\
 [0x12250]={\
  direction=\"l\",\
 },\
 [0x12251]={\
  direction=\"l\",\
 },\
 [0x12252]={\
  direction=\"l\",\
 },\
 [0x12253]={\
  direction=\"l\",\
 },\
 [0x12254]={\
  direction=\"l\",\
 },\
 [0x12255]={\
  direction=\"l\",\
 },\
 [0x12256]={\
  direction=\"l\",\
 },\
 [0x12257]={\
  direction=\"l\",\
 },\
 [0x12258]={\
  direction=\"l\",\
 },\
 [0x12259]={\
  direction=\"l\",\
 },\
 [0x1225A]={\
  direction=\"l\",\
 },\
 [0x1225B]={\
  direction=\"l\",\
 },\
 [0x1225C]={\
  direction=\"l\",\
 },\
 [0x1225D]={\
  direction=\"l\",\
 },\
 [0x1225E]={\
  direction=\"l\",\
 },\
 [0x1225F]={\
  direction=\"l\",\
 },\
 [0x12260]={\
  direction=\"l\",\
 },\
 [0x12261]={\
  direction=\"l\",\
 },\
 [0x12262]={\
  direction=\"l\",\
 },\
 [0x12263]={\
  direction=\"l\",\
 },\
 [0x12264]={\
  direction=\"l\",\
 },\
 [0x12265]={\
  direction=\"l\",\
 },\
 [0x12266]={\
  direction=\"l\",\
 },\
 [0x12267]={\
  direction=\"l\",\
 },\
 [0x12268]={\
  direction=\"l\",\
 },\
 [0x12269]={\
  direction=\"l\",\
 },\
 [0x1226A]={\
  direction=\"l\",\
 },\
 [0x1226B]={\
  direction=\"l\",\
 },\
 [0x1226C]={\
  direction=\"l\",\
 },\
 [0x1226D]={\
  direction=\"l\",\
 },\
 [0x1226E]={\
  direction=\"l\",\
 },\
 [0x1226F]={\
  direction=\"l\",\
 },\
 [0x12270]={\
  direction=\"l\",\
 },\
 [0x12271]={\
  direction=\"l\",\
 },\
 [0x12272]={\
  direction=\"l\",\
 },\
 [0x12273]={\
  direction=\"l\",\
 },\
 [0x12274]={\
  direction=\"l\",\
 },\
 [0x12275]={\
  direction=\"l\",\
 },\
 [0x12276]={\
  direction=\"l\",\
 },\
 [0x12277]={\
  direction=\"l\",\
 },\
 [0x12278]={\
  direction=\"l\",\
 },\
 [0x12279]={\
  direction=\"l\",\
 },\
 [0x1227A]={\
  direction=\"l\",\
 },\
 [0x1227B]={\
  direction=\"l\",\
 },\
 [0x1227C]={\
  direction=\"l\",\
 },\
 [0x1227D]={\
  direction=\"l\",\
 },\
 [0x1227E]={\
  direction=\"l\",\
 },\
 [0x1227F]={\
  direction=\"l\",\
 },\
 [0x12280]={\
  direction=\"l\",\
 },\
 [0x12281]={\
  direction=\"l\",\
 },\
 [0x12282]={\
  direction=\"l\",\
 },\
 [0x12283]={\
  direction=\"l\",\
 },\
 [0x12284]={\
  direction=\"l\",\
 },\
 [0x12285]={\
  direction=\"l\",\
 },\
 [0x12286]={\
  direction=\"l\",\
 },\
 [0x12287]={\
  direction=\"l\",\
 },\
 [0x12288]={\
  direction=\"l\",\
 },\
 [0x12289]={\
  direction=\"l\",\
 },\
 [0x1228A]={\
  direction=\"l\",\
 },\
 [0x1228B]={\
  direction=\"l\",\
 },\
 [0x1228C]={\
  direction=\"l\",\
 },\
 [0x1228D]={\
  direction=\"l\",\
 },\
 [0x1228E]={\
  direction=\"l\",\
 },\
 [0x1228F]={\
  direction=\"l\",\
 },\
 [0x12290]={\
  direction=\"l\",\
 },\
 [0x12291]={\
  direction=\"l\",\
 },\
 [0x12292]={\
  direction=\"l\",\
 },\
 [0x12293]={\
  direction=\"l\",\
 },\
 [0x12294]={\
  direction=\"l\",\
 },\
 [0x12295]={\
  direction=\"l\",\
 },\
 [0x12296]={\
  direction=\"l\",\
 },\
 [0x12297]={\
  direction=\"l\",\
 },\
 [0x12298]={\
  direction=\"l\",\
 },\
 [0x12299]={\
  direction=\"l\",\
 },\
 [0x1229A]={\
  direction=\"l\",\
 },\
 [0x1229B]={\
  direction=\"l\",\
 },\
 [0x1229C]={\
  direction=\"l\",\
 },\
 [0x1229D]={\
  direction=\"l\",\
 },\
 [0x1229E]={\
  direction=\"l\",\
 },\
 [0x1229F]={\
  direction=\"l\",\
 },\
 [0x122A0]={\
  direction=\"l\",\
 },\
 [0x122A1]={\
  direction=\"l\",\
 },\
 [0x122A2]={\
  direction=\"l\",\
 },\
 [0x122A3]={\
  direction=\"l\",\
 },\
 [0x122A4]={\
  direction=\"l\",\
 },\
 [0x122A5]={\
  direction=\"l\",\
 },\
 [0x122A6]={\
  direction=\"l\",\
 },\
 [0x122A7]={\
  direction=\"l\",\
 },\
 [0x122A8]={\
  direction=\"l\",\
 },\
 [0x122A9]={\
  direction=\"l\",\
 },\
 [0x122AA]={\
  direction=\"l\",\
 },\
 [0x122AB]={\
  direction=\"l\",\
 },\
 [0x122AC]={\
  direction=\"l\",\
 },\
 [0x122AD]={\
  direction=\"l\",\
 },\
 [0x122AE]={\
  direction=\"l\",\
 },\
 [0x122AF]={\
  direction=\"l\",\
 },\
 [0x122B0]={\
  direction=\"l\",\
 },\
 [0x122B1]={\
  direction=\"l\",\
 },\
 [0x122B2]={\
  direction=\"l\",\
 },\
 [0x122B3]={\
  direction=\"l\",\
 },\
 [0x122B4]={\
  direction=\"l\",\
 },\
 [0x122B5]={\
  direction=\"l\",\
 },\
 [0x122B6]={\
  direction=\"l\",\
 },\
 [0x122B7]={\
  direction=\"l\",\
 },\
 [0x122B8]={\
  direction=\"l\",\
 },\
 [0x122B9]={\
  direction=\"l\",\
 },\
 [0x122BA]={\
  direction=\"l\",\
 },\
 [0x122BB]={\
  direction=\"l\",\
 },\
 [0x122BC]={\
  direction=\"l\",\
 },\
 [0x122BD]={\
  direction=\"l\",\
 },\
 [0x122BE]={\
  direction=\"l\",\
 },\
 [0x122BF]={\
  direction=\"l\",\
 },\
 [0x122C0]={\
  direction=\"l\",\
 },\
 [0x122C1]={\
  direction=\"l\",\
 },\
 [0x122C2]={\
  direction=\"l\",\
 },\
 [0x122C3]={\
  direction=\"l\",\
 },\
 [0x122C4]={\
  direction=\"l\",\
 },\
 [0x122C5]={\
  direction=\"l\",\
 },\
 [0x122C6]={\
  direction=\"l\",\
 },\
 [0x122C7]={\
  direction=\"l\",\
 },\
 [0x122C8]={\
  direction=\"l\",\
 },\
 [0x122C9]={\
  direction=\"l\",\
 },\
 [0x122CA]={\
  direction=\"l\",\
 },\
 [0x122CB]={\
  direction=\"l\",\
 },\
 [0x122CC]={\
  direction=\"l\",\
 },\
 [0x122CD]={\
  direction=\"l\",\
 },\
 [0x122CE]={\
  direction=\"l\",\
 },\
 [0x122CF]={\
  direction=\"l\",\
 },\
 [0x122D0]={\
  direction=\"l\",\
 },\
 [0x122D1]={\
  direction=\"l\",\
 },\
 [0x122D2]={\
  direction=\"l\",\
 },\
 [0x122D3]={\
  direction=\"l\",\
 },\
 [0x122D4]={\
  direction=\"l\",\
 },\
 [0x122D5]={\
  direction=\"l\",\
 },\
 [0x122D6]={\
  direction=\"l\",\
 },\
 [0x122D7]={\
  direction=\"l\",\
 },\
 [0x122D8]={\
  direction=\"l\",\
 },\
 [0x122D9]={\
  direction=\"l\",\
 },\
 [0x122DA]={\
  direction=\"l\",\
 },\
 [0x122DB]={\
  direction=\"l\",\
 },\
 [0x122DC]={\
  direction=\"l\",\
 },\
 [0x122DD]={\
  direction=\"l\",\
 },\
 [0x122DE]={\
  direction=\"l\",\
 },\
 [0x122DF]={\
  direction=\"l\",\
 },\
 [0x122E0]={\
  direction=\"l\",\
 },\
 [0x122E1]={\
  direction=\"l\",\
 },\
 [0x122E2]={\
  direction=\"l\",\
 },\
 [0x122E3]={\
  direction=\"l\",\
 },\
 [0x122E4]={\
  direction=\"l\",\
 },\
 [0x122E5]={\
  direction=\"l\",\
 },\
 [0x122E6]={\
  direction=\"l\",\
 },\
 [0x122E7]={\
  direction=\"l\",\
 },\
 [0x122E8]={\
  direction=\"l\",\
 },\
 [0x122E9]={\
  direction=\"l\",\
 },\
 [0x122EA]={\
  direction=\"l\",\
 },\
 [0x122EB]={\
  direction=\"l\",\
 },\
 [0x122EC]={\
  direction=\"l\",\
 },\
 [0x122ED]={\
  direction=\"l\",\
 },\
 [0x122EE]={\
  direction=\"l\",\
 },\
 [0x122EF]={\
  direction=\"l\",\
 },\
 [0x122F0]={\
  direction=\"l\",\
 },\
 [0x122F1]={\
  direction=\"l\",\
 },\
 [0x122F2]={\
  direction=\"l\",\
 },\
 [0x122F3]={\
  direction=\"l\",\
 },\
 [0x122F4]={\
  direction=\"l\",\
 },\
 [0x122F5]={\
  direction=\"l\",\
 },\
 [0x122F6]={\
  direction=\"l\",\
 },\
 [0x122F7]={\
  direction=\"l\",\
 },\
 [0x122F8]={\
  direction=\"l\",\
 },\
 [0x122F9]={\
  direction=\"l\",\
 },\
 [0x122FA]={\
  direction=\"l\",\
 },\
 [0x122FB]={\
  direction=\"l\",\
 },\
 [0x122FC]={\
  direction=\"l\",\
 },\
 [0x122FD]={\
  direction=\"l\",\
 },\
 [0x122FE]={\
  direction=\"l\",\
 },\
 [0x122FF]={\
  direction=\"l\",\
 },\
 [0x12300]={\
  direction=\"l\",\
 },\
 [0x12301]={\
  direction=\"l\",\
 },\
 [0x12302]={\
  direction=\"l\",\
 },\
 [0x12303]={\
  direction=\"l\",\
 },\
 [0x12304]={\
  direction=\"l\",\
 },\
 [0x12305]={\
  direction=\"l\",\
 },\
 [0x12306]={\
  direction=\"l\",\
 },\
 [0x12307]={\
  direction=\"l\",\
 },\
 [0x12308]={\
  direction=\"l\",\
 },\
 [0x12309]={\
  direction=\"l\",\
 },\
 [0x1230A]={\
  direction=\"l\",\
 },\
 [0x1230B]={\
  direction=\"l\",\
 },\
 [0x1230C]={\
  direction=\"l\",\
 },\
 [0x1230D]={\
  direction=\"l\",\
 },\
 [0x1230E]={\
  direction=\"l\",\
 },\
 [0x1230F]={\
  direction=\"l\",\
 },\
 [0x12310]={\
  direction=\"l\",\
 },\
 [0x12311]={\
  direction=\"l\",\
 },\
 [0x12312]={\
  direction=\"l\",\
 },\
 [0x12313]={\
  direction=\"l\",\
 },\
 [0x12314]={\
  direction=\"l\",\
 },\
 [0x12315]={\
  direction=\"l\",\
 },\
 [0x12316]={\
  direction=\"l\",\
 },\
 [0x12317]={\
  direction=\"l\",\
 },\
 [0x12318]={\
  direction=\"l\",\
 },\
 [0x12319]={\
  direction=\"l\",\
 },\
 [0x1231A]={\
  direction=\"l\",\
 },\
 [0x1231B]={\
  direction=\"l\",\
 },\
 [0x1231C]={\
  direction=\"l\",\
 },\
 [0x1231D]={\
  direction=\"l\",\
 },\
 [0x1231E]={\
  direction=\"l\",\
 },\
 [0x1231F]={\
  direction=\"l\",\
 },\
 [0x12320]={\
  direction=\"l\",\
 },\
 [0x12321]={\
  direction=\"l\",\
 },\
 [0x12322]={\
  direction=\"l\",\
 },\
 [0x12323]={\
  direction=\"l\",\
 },\
 [0x12324]={\
  direction=\"l\",\
 },\
 [0x12325]={\
  direction=\"l\",\
 },\
 [0x12326]={\
  direction=\"l\",\
 },\
 [0x12327]={\
  direction=\"l\",\
 },\
 [0x12328]={\
  direction=\"l\",\
 },\
 [0x12329]={\
  direction=\"l\",\
 },\
 [0x1232A]={\
  direction=\"l\",\
 },\
 [0x1232B]={\
  direction=\"l\",\
 },\
 [0x1232C]={\
  direction=\"l\",\
 },\
 [0x1232D]={\
  direction=\"l\",\
 },\
 [0x1232E]={\
  direction=\"l\",\
 },\
 [0x1232F]={\
  direction=\"l\",\
 },\
 [0x12330]={\
  direction=\"l\",\
 },\
 [0x12331]={\
  direction=\"l\",\
 },\
 [0x12332]={\
  direction=\"l\",\
 },\
 [0x12333]={\
  direction=\"l\",\
 },\
 [0x12334]={\
  direction=\"l\",\
 },\
 [0x12335]={\
  direction=\"l\",\
 },\
 [0x12336]={\
  direction=\"l\",\
 },\
 [0x12337]={\
  direction=\"l\",\
 },\
 [0x12338]={\
  direction=\"l\",\
 },\
 [0x12339]={\
  direction=\"l\",\
 },\
 [0x1233A]={\
  direction=\"l\",\
 },\
 [0x1233B]={\
  direction=\"l\",\
 },\
 [0x1233C]={\
  direction=\"l\",\
 },\
 [0x1233D]={\
  direction=\"l\",\
 },\
 [0x1233E]={\
  direction=\"l\",\
 },\
 [0x1233F]={\
  direction=\"l\",\
 },\
 [0x12340]={\
  direction=\"l\",\
 },\
 [0x12341]={\
  direction=\"l\",\
 },\
 [0x12342]={\
  direction=\"l\",\
 },\
 [0x12343]={\
  direction=\"l\",\
 },\
 [0x12344]={\
  direction=\"l\",\
 },\
 [0x12345]={\
  direction=\"l\",\
 },\
 [0x12346]={\
  direction=\"l\",\
 },\
 [0x12347]={\
  direction=\"l\",\
 },\
 [0x12348]={\
  direction=\"l\",\
 },\
 [0x12349]={\
  direction=\"l\",\
 },\
 [0x1234A]={\
  direction=\"l\",\
 },\
 [0x1234B]={\
  direction=\"l\",\
 },\
 [0x1234C]={\
  direction=\"l\",\
 },\
 [0x1234D]={\
  direction=\"l\",\
 },\
 [0x1234E]={\
  direction=\"l\",\
 },\
 [0x1234F]={\
  direction=\"l\",\
 },\
 [0x12350]={\
  direction=\"l\",\
 },\
 [0x12351]={\
  direction=\"l\",\
 },\
 [0x12352]={\
  direction=\"l\",\
 },\
 [0x12353]={\
  direction=\"l\",\
 },\
 [0x12354]={\
  direction=\"l\",\
 },\
 [0x12355]={\
  direction=\"l\",\
 },\
 [0x12356]={\
  direction=\"l\",\
 },\
 [0x12357]={\
  direction=\"l\",\
 },\
 [0x12358]={\
  direction=\"l\",\
 },\
 [0x12359]={\
  direction=\"l\",\
 },\
 [0x1235A]={\
  direction=\"l\",\
 },\
 [0x1235B]={\
  direction=\"l\",\
 },\
 [0x1235C]={\
  direction=\"l\",\
 },\
 [0x1235D]={\
  direction=\"l\",\
 },\
 [0x1235E]={\
  direction=\"l\",\
 },\
 [0x1235F]={\
  direction=\"l\",\
 },\
 [0x12360]={\
  direction=\"l\",\
 },\
 [0x12361]={\
  direction=\"l\",\
 },\
 [0x12362]={\
  direction=\"l\",\
 },\
 [0x12363]={\
  direction=\"l\",\
 },\
 [0x12364]={\
  direction=\"l\",\
 },\
 [0x12365]={\
  direction=\"l\",\
 },\
 [0x12366]={\
  direction=\"l\",\
 },\
 [0x12367]={\
  direction=\"l\",\
 },\
 [0x12368]={\
  direction=\"l\",\
 },\
 [0x12369]={\
  direction=\"l\",\
 },\
 [0x1236A]={\
  direction=\"l\",\
 },\
 [0x1236B]={\
  direction=\"l\",\
 },\
 [0x1236C]={\
  direction=\"l\",\
 },\
 [0x1236D]={\
  direction=\"l\",\
 },\
 [0x1236E]={\
  direction=\"l\",\
 },\
 [0x12400]={\
  direction=\"l\",\
 },\
 [0x12401]={\
  direction=\"l\",\
 },\
 [0x12402]={\
  direction=\"l\",\
 },\
 [0x12403]={\
  direction=\"l\",\
 },\
 [0x12404]={\
  direction=\"l\",\
 },\
 [0x12405]={\
  direction=\"l\",\
 },\
 [0x12406]={\
  direction=\"l\",\
 },\
 [0x12407]={\
  direction=\"l\",\
 },\
 [0x12408]={\
  direction=\"l\",\
 },\
 [0x12409]={\
  direction=\"l\",\
 },\
 [0x1240A]={\
  direction=\"l\",\
 },\
 [0x1240B]={\
  direction=\"l\",\
 },\
 [0x1240C]={\
  direction=\"l\",\
 },\
 [0x1240D]={\
  direction=\"l\",\
 },\
 [0x1240E]={\
  direction=\"l\",\
 },\
 [0x1240F]={\
  direction=\"l\",\
 },\
 [0x12410]={\
  direction=\"l\",\
 },\
 [0x12411]={\
  direction=\"l\",\
 },\
 [0x12412]={\
  direction=\"l\",\
 },\
 [0x12413]={\
  direction=\"l\",\
 },\
 [0x12414]={\
  direction=\"l\",\
 },\
 [0x12415]={\
  direction=\"l\",\
 },\
 [0x12416]={\
  direction=\"l\",\
 },\
 [0x12417]={\
  direction=\"l\",\
 },\
 [0x12418]={\
  direction=\"l\",\
 },\
 [0x12419]={\
  direction=\"l\",\
 },\
 [0x1241A]={\
  direction=\"l\",\
 },\
 [0x1241B]={\
  direction=\"l\",\
 },\
 [0x1241C]={\
  direction=\"l\",\
 },\
 [0x1241D]={\
  direction=\"l\",\
 },\
 [0x1241E]={\
  direction=\"l\",\
 },\
 [0x1241F]={\
  direction=\"l\",\
 },\
 [0x12420]={\
  direction=\"l\",\
 },\
 [0x12421]={\
  direction=\"l\",\
 },\
 [0x12422]={\
  direction=\"l\",\
 },\
 [0x12423]={\
  direction=\"l\",\
 },\
 [0x12424]={\
  direction=\"l\",\
 },\
 [0x12425]={\
  direction=\"l\",\
 },\
 [0x12426]={\
  direction=\"l\",\
 },\
 [0x12427]={\
  direction=\"l\",\
 },\
 [0x12428]={\
  direction=\"l\",\
 },\
 [0x12429]={\
  direction=\"l\",\
 },\
 [0x1242A]={\
  direction=\"l\",\
 },\
 [0x1242B]={\
  direction=\"l\",\
 },\
 [0x1242C]={\
  direction=\"l\",\
 },\
 [0x1242D]={\
  direction=\"l\",\
 },\
 [0x1242E]={\
  direction=\"l\",\
 },\
 [0x1242F]={\
  direction=\"l\",\
 },\
 [0x12430]={\
  direction=\"l\",\
 },\
 [0x12431]={\
  direction=\"l\",\
 },\
 [0x12432]={\
  direction=\"l\",\
 },\
 [0x12433]={\
  direction=\"l\",\
 },\
 [0x12434]={\
  direction=\"l\",\
 },\
 [0x12435]={\
  direction=\"l\",\
 },\
 [0x12436]={\
  direction=\"l\",\
 },\
 [0x12437]={\
  direction=\"l\",\
 },\
 [0x12438]={\
  direction=\"l\",\
 },\
 [0x12439]={\
  direction=\"l\",\
 },\
 [0x1243A]={\
  direction=\"l\",\
 },\
 [0x1243B]={\
  direction=\"l\",\
 },\
 [0x1243C]={\
  direction=\"l\",\
 },\
 [0x1243D]={\
  direction=\"l\",\
 },\
 [0x1243E]={\
  direction=\"l\",\
 },\
 [0x1243F]={\
  direction=\"l\",\
 },\
 [0x12440]={\
  direction=\"l\",\
 },\
 [0x12441]={\
  direction=\"l\",\
 },\
 [0x12442]={\
  direction=\"l\",\
 },\
 [0x12443]={\
  direction=\"l\",\
 },\
 [0x12444]={\
  direction=\"l\",\
 },\
 [0x12445]={\
  direction=\"l\",\
 },\
 [0x12446]={\
  direction=\"l\",\
 },\
 [0x12447]={\
  direction=\"l\",\
 },\
 [0x12448]={\
  direction=\"l\",\
 },\
 [0x12449]={\
  direction=\"l\",\
 },\
 [0x1244A]={\
  direction=\"l\",\
 },\
 [0x1244B]={\
  direction=\"l\",\
 },\
 [0x1244C]={\
  direction=\"l\",\
 },\
 [0x1244D]={\
  direction=\"l\",\
 },\
 [0x1244E]={\
  direction=\"l\",\
 },\
 [0x1244F]={\
  direction=\"l\",\
 },\
 [0x12450]={\
  direction=\"l\",\
 },\
 [0x12451]={\
  direction=\"l\",\
 },\
 [0x12452]={\
  direction=\"l\",\
 },\
 [0x12453]={\
  direction=\"l\",\
 },\
 [0x12454]={\
  direction=\"l\",\
 },\
 [0x12455]={\
  direction=\"l\",\
 },\
 [0x12456]={\
  direction=\"l\",\
 },\
 [0x12457]={\
  direction=\"l\",\
 },\
 [0x12458]={\
  direction=\"l\",\
 },\
 [0x12459]={\
  direction=\"l\",\
 },\
 [0x1245A]={\
  direction=\"l\",\
 },\
 [0x1245B]={\
  direction=\"l\",\
 },\
 [0x1245C]={\
  direction=\"l\",\
 },\
 [0x1245D]={\
  direction=\"l\",\
 },\
 [0x1245E]={\
  direction=\"l\",\
 },\
 [0x1245F]={\
  direction=\"l\",\
 },\
 [0x12460]={\
  direction=\"l\",\
 },\
 [0x12461]={\
  direction=\"l\",\
 },\
 [0x12462]={\
  direction=\"l\",\
 },\
 [0x12470]={\
  direction=\"l\",\
 },\
 [0x12471]={\
  direction=\"l\",\
 },\
 [0x12472]={\
  direction=\"l\",\
 },\
 [0x12473]={\
  direction=\"l\",\
 },\
 [0x13000]={\
  direction=\"l\",\
 },\
 [0x13001]={\
  direction=\"l\",\
 },\
 [0x13002]={\
  direction=\"l\",\
 },\
 [0x13003]={\
  direction=\"l\",\
 },\
 [0x13004]={\
  direction=\"l\",\
 },\
 [0x13005]={\
  direction=\"l\",\
 },\
 [0x13006]={\
  direction=\"l\",\
 },\
 [0x13007]={\
  direction=\"l\",\
 },\
 [0x13008]={\
  direction=\"l\",\
 },\
 [0x13009]={\
  direction=\"l\",\
 },\
 [0x1300A]={\
  direction=\"l\",\
 },\
 [0x1300B]={\
  direction=\"l\",\
 },\
 [0x1300C]={\
  direction=\"l\",\
 },\
 [0x1300D]={\
  direction=\"l\",\
 },\
 [0x1300E]={\
  direction=\"l\",\
 },\
 [0x1300F]={\
  direction=\"l\",\
 },\
 [0x13010]={\
  direction=\"l\",\
 },\
 [0x13011]={\
  direction=\"l\",\
 },\
 [0x13012]={\
  direction=\"l\",\
 },\
 [0x13013]={\
  direction=\"l\",\
 },\
 [0x13014]={\
  direction=\"l\",\
 },\
 [0x13015]={\
  direction=\"l\",\
 },\
 [0x13016]={\
  direction=\"l\",\
 },\
 [0x13017]={\
  direction=\"l\",\
 },\
 [0x13018]={\
  direction=\"l\",\
 },\
 [0x13019]={\
  direction=\"l\",\
 },\
 [0x1301A]={\
  direction=\"l\",\
 },\
 [0x1301B]={\
  direction=\"l\",\
 },\
 [0x1301C]={\
  direction=\"l\",\
 },\
 [0x1301D]={\
  direction=\"l\",\
 },\
 [0x1301E]={\
  direction=\"l\",\
 },\
 [0x1301F]={\
  direction=\"l\",\
 },\
 [0x13020]={\
  direction=\"l\",\
 },\
 [0x13021]={\
  direction=\"l\",\
 },\
 [0x13022]={\
  direction=\"l\",\
 },\
 [0x13023]={\
  direction=\"l\",\
 },\
 [0x13024]={\
  direction=\"l\",\
 },\
 [0x13025]={\
  direction=\"l\",\
 },\
 [0x13026]={\
  direction=\"l\",\
 },\
 [0x13027]={\
  direction=\"l\",\
 },\
 [0x13028]={\
  direction=\"l\",\
 },\
 [0x13029]={\
  direction=\"l\",\
 },\
 [0x1302A]={\
  direction=\"l\",\
 },\
 [0x1302B]={\
  direction=\"l\",\
 },\
 [0x1302C]={\
  direction=\"l\",\
 },\
 [0x1302D]={\
  direction=\"l\",\
 },\
 [0x1302E]={\
  direction=\"l\",\
 },\
 [0x1302F]={\
  direction=\"l\",\
 },\
 [0x13030]={\
  direction=\"l\",\
 },\
 [0x13031]={\
  direction=\"l\",\
 },\
 [0x13032]={\
  direction=\"l\",\
 },\
 [0x13033]={\
  direction=\"l\",\
 },\
 [0x13034]={\
  direction=\"l\",\
 },\
 [0x13035]={\
  direction=\"l\",\
 },\
 [0x13036]={\
  direction=\"l\",\
 },\
 [0x13037]={\
  direction=\"l\",\
 },\
 [0x13038]={\
  direction=\"l\",\
 },\
 [0x13039]={\
  direction=\"l\",\
 },\
 [0x1303A]={\
  direction=\"l\",\
 },\
 [0x1303B]={\
  direction=\"l\",\
 },\
 [0x1303C]={\
  direction=\"l\",\
 },\
 [0x1303D]={\
  direction=\"l\",\
 },\
 [0x1303E]={\
  direction=\"l\",\
 },\
 [0x1303F]={\
  direction=\"l\",\
 },\
 [0x13040]={\
  direction=\"l\",\
 },\
 [0x13041]={\
  direction=\"l\",\
 },\
 [0x13042]={\
  direction=\"l\",\
 },\
 [0x13043]={\
  direction=\"l\",\
 },\
 [0x13044]={\
  direction=\"l\",\
 },\
 [0x13045]={\
  direction=\"l\",\
 },\
 [0x13046]={\
  direction=\"l\",\
 },\
 [0x13047]={\
  direction=\"l\",\
 },\
 [0x13048]={\
  direction=\"l\",\
 },\
 [0x13049]={\
  direction=\"l\",\
 },\
 [0x1304A]={\
  direction=\"l\",\
 },\
 [0x1304B]={\
  direction=\"l\",\
 },\
 [0x1304C]={\
  direction=\"l\",\
 },\
 [0x1304D]={\
  direction=\"l\",\
 },\
 [0x1304E]={\
  direction=\"l\",\
 },\
 [0x1304F]={\
  direction=\"l\",\
 },\
 [0x13050]={\
  direction=\"l\",\
 },\
 [0x13051]={\
  direction=\"l\",\
 },\
 [0x13052]={\
  direction=\"l\",\
 },\
 [0x13053]={\
  direction=\"l\",\
 },\
 [0x13054]={\
  direction=\"l\",\
 },\
 [0x13055]={\
  direction=\"l\",\
 },\
 [0x13056]={\
  direction=\"l\",\
 },\
 [0x13057]={\
  direction=\"l\",\
 },\
 [0x13058]={\
  direction=\"l\",\
 },\
 [0x13059]={\
  direction=\"l\",\
 },\
 [0x1305A]={\
  direction=\"l\",\
 },\
 [0x1305B]={\
  direction=\"l\",\
 },\
 [0x1305C]={\
  direction=\"l\",\
 },\
 [0x1305D]={\
  direction=\"l\",\
 },\
 [0x1305E]={\
  direction=\"l\",\
 },\
 [0x1305F]={\
  direction=\"l\",\
 },\
 [0x13060]={\
  direction=\"l\",\
 },\
 [0x13061]={\
  direction=\"l\",\
 },\
 [0x13062]={\
  direction=\"l\",\
 },\
 [0x13063]={\
  direction=\"l\",\
 },\
 [0x13064]={\
  direction=\"l\",\
 },\
 [0x13065]={\
  direction=\"l\",\
 },\
 [0x13066]={\
  direction=\"l\",\
 },\
 [0x13067]={\
  direction=\"l\",\
 },\
 [0x13068]={\
  direction=\"l\",\
 },\
 [0x13069]={\
  direction=\"l\",\
 },\
 [0x1306A]={\
  direction=\"l\",\
 },\
 [0x1306B]={\
  direction=\"l\",\
 },\
 [0x1306C]={\
  direction=\"l\",\
 },\
 [0x1306D]={\
  direction=\"l\",\
 },\
 [0x1306E]={\
  direction=\"l\",\
 },\
 [0x1306F]={\
  direction=\"l\",\
 },\
 [0x13070]={\
  direction=\"l\",\
 },\
 [0x13071]={\
  direction=\"l\",\
 },\
 [0x13072]={\
  direction=\"l\",\
 },\
 [0x13073]={\
  direction=\"l\",\
 },\
 [0x13074]={\
  direction=\"l\",\
 },\
 [0x13075]={\
  direction=\"l\",\
 },\
 [0x13076]={\
  direction=\"l\",\
 },\
 [0x13077]={\
  direction=\"l\",\
 },\
 [0x13078]={\
  direction=\"l\",\
 },\
 [0x13079]={\
  direction=\"l\",\
 },\
 [0x1307A]={\
  direction=\"l\",\
 },\
 [0x1307B]={\
  direction=\"l\",\
 },\
 [0x1307C]={\
  direction=\"l\",\
 },\
 [0x1307D]={\
  direction=\"l\",\
 },\
 [0x1307E]={\
  direction=\"l\",\
 },\
 [0x1307F]={\
  direction=\"l\",\
 },\
 [0x13080]={\
  direction=\"l\",\
 },\
 [0x13081]={\
  direction=\"l\",\
 },\
 [0x13082]={\
  direction=\"l\",\
 },\
 [0x13083]={\
  direction=\"l\",\
 },\
 [0x13084]={\
  direction=\"l\",\
 },\
 [0x13085]={\
  direction=\"l\",\
 },\
 [0x13086]={\
  direction=\"l\",\
 },\
 [0x13087]={\
  direction=\"l\",\
 },\
 [0x13088]={\
  direction=\"l\",\
 },\
 [0x13089]={\
  direction=\"l\",\
 },\
 [0x1308A]={\
  direction=\"l\",\
 },\
 [0x1308B]={\
  direction=\"l\",\
 },\
 [0x1308C]={\
  direction=\"l\",\
 },\
 [0x1308D]={\
  direction=\"l\",\
 },\
 [0x1308E]={\
  direction=\"l\",\
 },\
 [0x1308F]={\
  direction=\"l\",\
 },\
 [0x13090]={\
  direction=\"l\",\
 },\
 [0x13091]={\
  direction=\"l\",\
 },\
 [0x13092]={\
  direction=\"l\",\
 },\
 [0x13093]={\
  direction=\"l\",\
 },\
 [0x13094]={\
  direction=\"l\",\
 },\
 [0x13095]={\
  direction=\"l\",\
 },\
 [0x13096]={\
  direction=\"l\",\
 },\
 [0x13097]={\
  direction=\"l\",\
 },\
 [0x13098]={\
  direction=\"l\",\
 },\
 [0x13099]={\
  direction=\"l\",\
 },\
 [0x1309A]={\
  direction=\"l\",\
 },\
 [0x1309B]={\
  direction=\"l\",\
 },\
 [0x1309C]={\
  direction=\"l\",\
 },\
 [0x1309D]={\
  direction=\"l\",\
 },\
 [0x1309E]={\
  direction=\"l\",\
 },\
 [0x1309F]={\
  direction=\"l\",\
 },\
 [0x130A0]={\
  direction=\"l\",\
 },\
 [0x130A1]={\
  direction=\"l\",\
 },\
 [0x130A2]={\
  direction=\"l\",\
 },\
 [0x130A3]={\
  direction=\"l\",\
 },\
 [0x130A4]={\
  direction=\"l\",\
 },\
 [0x130A5]={\
  direction=\"l\",\
 },\
 [0x130A6]={\
  direction=\"l\",\
 },\
 [0x130A7]={\
  direction=\"l\",\
 },\
 [0x130A8]={\
  direction=\"l\",\
 },\
 [0x130A9]={\
  direction=\"l\",\
 },\
 [0x130AA]={\
  direction=\"l\",\
 },\
 [0x130AB]={\
  direction=\"l\",\
 },\
 [0x130AC]={\
  direction=\"l\",\
 },\
 [0x130AD]={\
  direction=\"l\",\
 },\
 [0x130AE]={\
  direction=\"l\",\
 },\
 [0x130AF]={\
  direction=\"l\",\
 },\
 [0x130B0]={\
  direction=\"l\",\
 },\
 [0x130B1]={\
  direction=\"l\",\
 },\
 [0x130B2]={\
  direction=\"l\",\
 },\
 [0x130B3]={\
  direction=\"l\",\
 },\
 [0x130B4]={\
  direction=\"l\",\
 },\
 [0x130B5]={\
  direction=\"l\",\
 },\
 [0x130B6]={\
  direction=\"l\",\
 },\
 [0x130B7]={\
  direction=\"l\",\
 },\
 [0x130B8]={\
  direction=\"l\",\
 },\
 [0x130B9]={\
  direction=\"l\",\
 },\
 [0x130BA]={\
  direction=\"l\",\
 },\
 [0x130BB]={\
  direction=\"l\",\
 },\
 [0x130BC]={\
  direction=\"l\",\
 },\
 [0x130BD]={\
  direction=\"l\",\
 },\
 [0x130BE]={\
  direction=\"l\",\
 },\
 [0x130BF]={\
  direction=\"l\",\
 },\
 [0x130C0]={\
  direction=\"l\",\
 },\
 [0x130C1]={\
  direction=\"l\",\
 },\
 [0x130C2]={\
  direction=\"l\",\
 },\
 [0x130C3]={\
  direction=\"l\",\
 },\
 [0x130C4]={\
  direction=\"l\",\
 },\
 [0x130C5]={\
  direction=\"l\",\
 },\
 [0x130C6]={\
  direction=\"l\",\
 },\
 [0x130C7]={\
  direction=\"l\",\
 },\
 [0x130C8]={\
  direction=\"l\",\
 },\
 [0x130C9]={\
  direction=\"l\",\
 },\
 [0x130CA]={\
  direction=\"l\",\
 },\
 [0x130CB]={\
  direction=\"l\",\
 },\
 [0x130CC]={\
  direction=\"l\",\
 },\
 [0x130CD]={\
  direction=\"l\",\
 },\
 [0x130CE]={\
  direction=\"l\",\
 },\
 [0x130CF]={\
  direction=\"l\",\
 },\
 [0x130D0]={\
  direction=\"l\",\
 },\
 [0x130D1]={\
  direction=\"l\",\
 },\
 [0x130D2]={\
  direction=\"l\",\
 },\
 [0x130D3]={\
  direction=\"l\",\
 },\
 [0x130D4]={\
  direction=\"l\",\
 },\
 [0x130D5]={\
  direction=\"l\",\
 },\
 [0x130D6]={\
  direction=\"l\",\
 },\
 [0x130D7]={\
  direction=\"l\",\
 },\
 [0x130D8]={\
  direction=\"l\",\
 },\
 [0x130D9]={\
  direction=\"l\",\
 },\
 [0x130DA]={\
  direction=\"l\",\
 },\
 [0x130DB]={\
  direction=\"l\",\
 },\
 [0x130DC]={\
  direction=\"l\",\
 },\
 [0x130DD]={\
  direction=\"l\",\
 },\
 [0x130DE]={\
  direction=\"l\",\
 },\
 [0x130DF]={\
  direction=\"l\",\
 },\
 [0x130E0]={\
  direction=\"l\",\
 },\
 [0x130E1]={\
  direction=\"l\",\
 },\
 [0x130E2]={\
  direction=\"l\",\
 },\
 [0x130E3]={\
  direction=\"l\",\
 },\
 [0x130E4]={\
  direction=\"l\",\
 },\
 [0x130E5]={\
  direction=\"l\",\
 },\
 [0x130E6]={\
  direction=\"l\",\
 },\
 [0x130E7]={\
  direction=\"l\",\
 },\
 [0x130E8]={\
  direction=\"l\",\
 },\
 [0x130E9]={\
  direction=\"l\",\
 },\
 [0x130EA]={\
  direction=\"l\",\
 },\
 [0x130EB]={\
  direction=\"l\",\
 },\
 [0x130EC]={\
  direction=\"l\",\
 },\
 [0x130ED]={\
  direction=\"l\",\
 },\
 [0x130EE]={\
  direction=\"l\",\
 },\
 [0x130EF]={\
  direction=\"l\",\
 },\
 [0x130F0]={\
  direction=\"l\",\
 },\
 [0x130F1]={\
  direction=\"l\",\
 },\
 [0x130F2]={\
  direction=\"l\",\
 },\
 [0x130F3]={\
  direction=\"l\",\
 },\
 [0x130F4]={\
  direction=\"l\",\
 },\
 [0x130F5]={\
  direction=\"l\",\
 },\
 [0x130F6]={\
  direction=\"l\",\
 },\
 [0x130F7]={\
  direction=\"l\",\
 },\
 [0x130F8]={\
  direction=\"l\",\
 },\
 [0x130F9]={\
  direction=\"l\",\
 },\
 [0x130FA]={\
  direction=\"l\",\
 },\
 [0x130FB]={\
  direction=\"l\",\
 },\
 [0x130FC]={\
  direction=\"l\",\
 },\
 [0x130FD]={\
  direction=\"l\",\
 },\
 [0x130FE]={\
  direction=\"l\",\
 },\
 [0x130FF]={\
  direction=\"l\",\
 },\
 [0x13100]={\
  direction=\"l\",\
 },\
 [0x13101]={\
  direction=\"l\",\
 },\
 [0x13102]={\
  direction=\"l\",\
 },\
 [0x13103]={\
  direction=\"l\",\
 },\
 [0x13104]={\
  direction=\"l\",\
 },\
 [0x13105]={\
  direction=\"l\",\
 },\
 [0x13106]={\
  direction=\"l\",\
 },\
 [0x13107]={\
  direction=\"l\",\
 },\
 [0x13108]={\
  direction=\"l\",\
 },\
 [0x13109]={\
  direction=\"l\",\
 },\
 [0x1310A]={\
  direction=\"l\",\
 },\
 [0x1310B]={\
  direction=\"l\",\
 },\
 [0x1310C]={\
  direction=\"l\",\
 },\
 [0x1310D]={\
  direction=\"l\",\
 },\
 [0x1310E]={\
  direction=\"l\",\
 },\
 [0x1310F]={\
  direction=\"l\",\
 },\
 [0x13110]={\
  direction=\"l\",\
 },\
 [0x13111]={\
  direction=\"l\",\
 },\
 [0x13112]={\
  direction=\"l\",\
 },\
 [0x13113]={\
  direction=\"l\",\
 },\
 [0x13114]={\
  direction=\"l\",\
 },\
 [0x13115]={\
  direction=\"l\",\
 },\
 [0x13116]={\
  direction=\"l\",\
 },\
 [0x13117]={\
  direction=\"l\",\
 },\
 [0x13118]={\
  direction=\"l\",\
 },\
 [0x13119]={\
  direction=\"l\",\
 },\
 [0x1311A]={\
  direction=\"l\",\
 },\
 [0x1311B]={\
  direction=\"l\",\
 },\
 [0x1311C]={\
  direction=\"l\",\
 },\
 [0x1311D]={\
  direction=\"l\",\
 },\
 [0x1311E]={\
  direction=\"l\",\
 },\
 [0x1311F]={\
  direction=\"l\",\
 },\
 [0x13120]={\
  direction=\"l\",\
 },\
 [0x13121]={\
  direction=\"l\",\
 },\
 [0x13122]={\
  direction=\"l\",\
 },\
 [0x13123]={\
  direction=\"l\",\
 },\
 [0x13124]={\
  direction=\"l\",\
 },\
 [0x13125]={\
  direction=\"l\",\
 },\
 [0x13126]={\
  direction=\"l\",\
 },\
 [0x13127]={\
  direction=\"l\",\
 },\
 [0x13128]={\
  direction=\"l\",\
 },\
 [0x13129]={\
  direction=\"l\",\
 },\
 [0x1312A]={\
  direction=\"l\",\
 },\
 [0x1312B]={\
  direction=\"l\",\
 },\
 [0x1312C]={\
  direction=\"l\",\
 },\
 [0x1312D]={\
  direction=\"l\",\
 },\
 [0x1312E]={\
  direction=\"l\",\
 },\
 [0x1312F]={\
  direction=\"l\",\
 },\
 [0x13130]={\
  direction=\"l\",\
 },\
 [0x13131]={\
  direction=\"l\",\
 },\
 [0x13132]={\
  direction=\"l\",\
 },\
 [0x13133]={\
  direction=\"l\",\
 },\
 [0x13134]={\
  direction=\"l\",\
 },\
 [0x13135]={\
  direction=\"l\",\
 },\
 [0x13136]={\
  direction=\"l\",\
 },\
 [0x13137]={\
  direction=\"l\",\
 },\
 [0x13138]={\
  direction=\"l\",\
 },\
 [0x13139]={\
  direction=\"l\",\
 },\
 [0x1313A]={\
  direction=\"l\",\
 },\
 [0x1313B]={\
  direction=\"l\",\
 },\
 [0x1313C]={\
  direction=\"l\",\
 },\
 [0x1313D]={\
  direction=\"l\",\
 },\
 [0x1313E]={\
  direction=\"l\",\
 },\
 [0x1313F]={\
  direction=\"l\",\
 },\
 [0x13140]={\
  direction=\"l\",\
 },\
 [0x13141]={\
  direction=\"l\",\
 },\
 [0x13142]={\
  direction=\"l\",\
 },\
 [0x13143]={\
  direction=\"l\",\
 },\
 [0x13144]={\
  direction=\"l\",\
 },\
 [0x13145]={\
  direction=\"l\",\
 },\
 [0x13146]={\
  direction=\"l\",\
 },\
 [0x13147]={\
  direction=\"l\",\
 },\
 [0x13148]={\
  direction=\"l\",\
 },\
 [0x13149]={\
  direction=\"l\",\
 },\
 [0x1314A]={\
  direction=\"l\",\
 },\
 [0x1314B]={\
  direction=\"l\",\
 },\
 [0x1314C]={\
  direction=\"l\",\
 },\
 [0x1314D]={\
  direction=\"l\",\
 },\
 [0x1314E]={\
  direction=\"l\",\
 },\
 [0x1314F]={\
  direction=\"l\",\
 },\
 [0x13150]={\
  direction=\"l\",\
 },\
 [0x13151]={\
  direction=\"l\",\
 },\
 [0x13152]={\
  direction=\"l\",\
 },\
 [0x13153]={\
  direction=\"l\",\
 },\
 [0x13154]={\
  direction=\"l\",\
 },\
 [0x13155]={\
  direction=\"l\",\
 },\
 [0x13156]={\
  direction=\"l\",\
 },\
 [0x13157]={\
  direction=\"l\",\
 },\
 [0x13158]={\
  direction=\"l\",\
 },\
 [0x13159]={\
  direction=\"l\",\
 },\
 [0x1315A]={\
  direction=\"l\",\
 },\
 [0x1315B]={\
  direction=\"l\",\
 },\
 [0x1315C]={\
  direction=\"l\",\
 },\
 [0x1315D]={\
  direction=\"l\",\
 },\
 [0x1315E]={\
  direction=\"l\",\
 },\
 [0x1315F]={\
  direction=\"l\",\
 },\
 [0x13160]={\
  direction=\"l\",\
 },\
 [0x13161]={\
  direction=\"l\",\
 },\
 [0x13162]={\
  direction=\"l\",\
 },\
 [0x13163]={\
  direction=\"l\",\
 },\
 [0x13164]={\
  direction=\"l\",\
 },\
 [0x13165]={\
  direction=\"l\",\
 },\
 [0x13166]={\
  direction=\"l\",\
 },\
 [0x13167]={\
  direction=\"l\",\
 },\
 [0x13168]={\
  direction=\"l\",\
 },\
 [0x13169]={\
  direction=\"l\",\
 },\
 [0x1316A]={\
  direction=\"l\",\
 },\
 [0x1316B]={\
  direction=\"l\",\
 },\
 [0x1316C]={\
  direction=\"l\",\
 },\
 [0x1316D]={\
  direction=\"l\",\
 },\
 [0x1316E]={\
  direction=\"l\",\
 },\
 [0x1316F]={\
  direction=\"l\",\
 },\
 [0x13170]={\
  direction=\"l\",\
 },\
 [0x13171]={\
  direction=\"l\",\
 },\
 [0x13172]={\
  direction=\"l\",\
 },\
 [0x13173]={\
  direction=\"l\",\
 },\
 [0x13174]={\
  direction=\"l\",\
 },\
 [0x13175]={\
  direction=\"l\",\
 },\
 [0x13176]={\
  direction=\"l\",\
 },\
 [0x13177]={\
  direction=\"l\",\
 },\
 [0x13178]={\
  direction=\"l\",\
 },\
 [0x13179]={\
  direction=\"l\",\
 },\
 [0x1317A]={\
  direction=\"l\",\
 },\
 [0x1317B]={\
  direction=\"l\",\
 },\
 [0x1317C]={\
  direction=\"l\",\
 },\
 [0x1317D]={\
  direction=\"l\",\
 },\
 [0x1317E]={\
  direction=\"l\",\
 },\
 [0x1317F]={\
  direction=\"l\",\
 },\
 [0x13180]={\
  direction=\"l\",\
 },\
 [0x13181]={\
  direction=\"l\",\
 },\
 [0x13182]={\
  direction=\"l\",\
 },\
 [0x13183]={\
  direction=\"l\",\
 },\
 [0x13184]={\
  direction=\"l\",\
 },\
 [0x13185]={\
  direction=\"l\",\
 },\
 [0x13186]={\
  direction=\"l\",\
 },\
 [0x13187]={\
  direction=\"l\",\
 },\
 [0x13188]={\
  direction=\"l\",\
 },\
 [0x13189]={\
  direction=\"l\",\
 },\
 [0x1318A]={\
  direction=\"l\",\
 },\
 [0x1318B]={\
  direction=\"l\",\
 },\
 [0x1318C]={\
  direction=\"l\",\
 },\
 [0x1318D]={\
  direction=\"l\",\
 },\
 [0x1318E]={\
  direction=\"l\",\
 },\
 [0x1318F]={\
  direction=\"l\",\
 },\
 [0x13190]={\
  direction=\"l\",\
 },\
 [0x13191]={\
  direction=\"l\",\
 },\
 [0x13192]={\
  direction=\"l\",\
 },\
 [0x13193]={\
  direction=\"l\",\
 },\
 [0x13194]={\
  direction=\"l\",\
 },\
 [0x13195]={\
  direction=\"l\",\
 },\
 [0x13196]={\
  direction=\"l\",\
 },\
 [0x13197]={\
  direction=\"l\",\
 },\
 [0x13198]={\
  direction=\"l\",\
 },\
 [0x13199]={\
  direction=\"l\",\
 },\
 [0x1319A]={\
  direction=\"l\",\
 },\
 [0x1319B]={\
  direction=\"l\",\
 },\
 [0x1319C]={\
  direction=\"l\",\
 },\
 [0x1319D]={\
  direction=\"l\",\
 },\
 [0x1319E]={\
  direction=\"l\",\
 },\
 [0x1319F]={\
  direction=\"l\",\
 },\
 [0x131A0]={\
  direction=\"l\",\
 },\
 [0x131A1]={\
  direction=\"l\",\
 },\
 [0x131A2]={\
  direction=\"l\",\
 },\
 [0x131A3]={\
  direction=\"l\",\
 },\
 [0x131A4]={\
  direction=\"l\",\
 },\
 [0x131A5]={\
  direction=\"l\",\
 },\
 [0x131A6]={\
  direction=\"l\",\
 },\
 [0x131A7]={\
  direction=\"l\",\
 },\
 [0x131A8]={\
  direction=\"l\",\
 },\
 [0x131A9]={\
  direction=\"l\",\
 },\
 [0x131AA]={\
  direction=\"l\",\
 },\
 [0x131AB]={\
  direction=\"l\",\
 },\
 [0x131AC]={\
  direction=\"l\",\
 },\
 [0x131AD]={\
  direction=\"l\",\
 },\
 [0x131AE]={\
  direction=\"l\",\
 },\
 [0x131AF]={\
  direction=\"l\",\
 },\
 [0x131B0]={\
  direction=\"l\",\
 },\
 [0x131B1]={\
  direction=\"l\",\
 },\
 [0x131B2]={\
  direction=\"l\",\
 },\
 [0x131B3]={\
  direction=\"l\",\
 },\
 [0x131B4]={\
  direction=\"l\",\
 },\
 [0x131B5]={\
  direction=\"l\",\
 },\
 [0x131B6]={\
  direction=\"l\",\
 },\
 [0x131B7]={\
  direction=\"l\",\
 },\
 [0x131B8]={\
  direction=\"l\",\
 },\
 [0x131B9]={\
  direction=\"l\",\
 },\
 [0x131BA]={\
  direction=\"l\",\
 },\
 [0x131BB]={\
  direction=\"l\",\
 },\
 [0x131BC]={\
  direction=\"l\",\
 },\
 [0x131BD]={\
  direction=\"l\",\
 },\
 [0x131BE]={\
  direction=\"l\",\
 },\
 [0x131BF]={\
  direction=\"l\",\
 },\
 [0x131C0]={\
  direction=\"l\",\
 },\
 [0x131C1]={\
  direction=\"l\",\
 },\
 [0x131C2]={\
  direction=\"l\",\
 },\
 [0x131C3]={\
  direction=\"l\",\
 },\
 [0x131C4]={\
  direction=\"l\",\
 },\
 [0x131C5]={\
  direction=\"l\",\
 },\
 [0x131C6]={\
  direction=\"l\",\
 },\
 [0x131C7]={\
  direction=\"l\",\
 },\
 [0x131C8]={\
  direction=\"l\",\
 },\
 [0x131C9]={\
  direction=\"l\",\
 },\
 [0x131CA]={\
  direction=\"l\",\
 },\
 [0x131CB]={\
  direction=\"l\",\
 },\
 [0x131CC]={\
  direction=\"l\",\
 },\
 [0x131CD]={\
  direction=\"l\",\
 },\
 [0x131CE]={\
  direction=\"l\",\
 },\
 [0x131CF]={\
  direction=\"l\",\
 },\
 [0x131D0]={\
  direction=\"l\",\
 },\
 [0x131D1]={\
  direction=\"l\",\
 },\
 [0x131D2]={\
  direction=\"l\",\
 },\
 [0x131D3]={\
  direction=\"l\",\
 },\
 [0x131D4]={\
  direction=\"l\",\
 },\
 [0x131D5]={\
  direction=\"l\",\
 },\
 [0x131D6]={\
  direction=\"l\",\
 },\
 [0x131D7]={\
  direction=\"l\",\
 },\
 [0x131D8]={\
  direction=\"l\",\
 },\
 [0x131D9]={\
  direction=\"l\",\
 },\
 [0x131DA]={\
  direction=\"l\",\
 },\
 [0x131DB]={\
  direction=\"l\",\
 },\
 [0x131DC]={\
  direction=\"l\",\
 },\
 [0x131DD]={\
  direction=\"l\",\
 },\
 [0x131DE]={\
  direction=\"l\",\
 },\
 [0x131DF]={\
  direction=\"l\",\
 },\
 [0x131E0]={\
  direction=\"l\",\
 },\
 [0x131E1]={\
  direction=\"l\",\
 },\
 [0x131E2]={\
  direction=\"l\",\
 },\
 [0x131E3]={\
  direction=\"l\",\
 },\
 [0x131E4]={\
  direction=\"l\",\
 },\
 [0x131E5]={\
  direction=\"l\",\
 },\
 [0x131E6]={\
  direction=\"l\",\
 },\
 [0x131E7]={\
  direction=\"l\",\
 },\
 [0x131E8]={\
  direction=\"l\",\
 },\
 [0x131E9]={\
  direction=\"l\",\
 },\
 [0x131EA]={\
  direction=\"l\",\
 },\
 [0x131EB]={\
  direction=\"l\",\
 },\
 [0x131EC]={\
  direction=\"l\",\
 },\
 [0x131ED]={\
  direction=\"l\",\
 },\
 [0x131EE]={\
  direction=\"l\",\
 },\
 [0x131EF]={\
  direction=\"l\",\
 },\
 [0x131F0]={\
  direction=\"l\",\
 },\
 [0x131F1]={\
  direction=\"l\",\
 },\
 [0x131F2]={\
  direction=\"l\",\
 },\
 [0x131F3]={\
  direction=\"l\",\
 },\
 [0x131F4]={\
  direction=\"l\",\
 },\
 [0x131F5]={\
  direction=\"l\",\
 },\
 [0x131F6]={\
  direction=\"l\",\
 },\
 [0x131F7]={\
  direction=\"l\",\
 },\
 [0x131F8]={\
  direction=\"l\",\
 },\
 [0x131F9]={\
  direction=\"l\",\
 },\
 [0x131FA]={\
  direction=\"l\",\
 },\
 [0x131FB]={\
  direction=\"l\",\
 },\
 [0x131FC]={\
  direction=\"l\",\
 },\
 [0x131FD]={\
  direction=\"l\",\
 },\
 [0x131FE]={\
  direction=\"l\",\
 },\
 [0x131FF]={\
  direction=\"l\",\
 },\
 [0x13200]={\
  direction=\"l\",\
 },\
 [0x13201]={\
  direction=\"l\",\
 },\
 [0x13202]={\
  direction=\"l\",\
 },\
 [0x13203]={\
  direction=\"l\",\
 },\
 [0x13204]={\
  direction=\"l\",\
 },\
 [0x13205]={\
  direction=\"l\",\
 },\
 [0x13206]={\
  direction=\"l\",\
 },\
 [0x13207]={\
  direction=\"l\",\
 },\
 [0x13208]={\
  direction=\"l\",\
 },\
 [0x13209]={\
  direction=\"l\",\
 },\
 [0x1320A]={\
  direction=\"l\",\
 },\
 [0x1320B]={\
  direction=\"l\",\
 },\
 [0x1320C]={\
  direction=\"l\",\
 },\
 [0x1320D]={\
  direction=\"l\",\
 },\
 [0x1320E]={\
  direction=\"l\",\
 },\
 [0x1320F]={\
  direction=\"l\",\
 },\
 [0x13210]={\
  direction=\"l\",\
 },\
 [0x13211]={\
  direction=\"l\",\
 },\
 [0x13212]={\
  direction=\"l\",\
 },\
 [0x13213]={\
  direction=\"l\",\
 },\
 [0x13214]={\
  direction=\"l\",\
 },\
 [0x13215]={\
  direction=\"l\",\
 },\
 [0x13216]={\
  direction=\"l\",\
 },\
 [0x13217]={\
  direction=\"l\",\
 },\
 [0x13218]={\
  direction=\"l\",\
 },\
 [0x13219]={\
  direction=\"l\",\
 },\
 [0x1321A]={\
  direction=\"l\",\
 },\
 [0x1321B]={\
  direction=\"l\",\
 },\
 [0x1321C]={\
  direction=\"l\",\
 },\
 [0x1321D]={\
  direction=\"l\",\
 },\
 [0x1321E]={\
  direction=\"l\",\
 },\
 [0x1321F]={\
  direction=\"l\",\
 },\
 [0x13220]={\
  direction=\"l\",\
 },\
 [0x13221]={\
  direction=\"l\",\
 },\
 [0x13222]={\
  direction=\"l\",\
 },\
 [0x13223]={\
  direction=\"l\",\
 },\
 [0x13224]={\
  direction=\"l\",\
 },\
 [0x13225]={\
  direction=\"l\",\
 },\
 [0x13226]={\
  direction=\"l\",\
 },\
 [0x13227]={\
  direction=\"l\",\
 },\
 [0x13228]={\
  direction=\"l\",\
 },\
 [0x13229]={\
  direction=\"l\",\
 },\
 [0x1322A]={\
  direction=\"l\",\
 },\
 [0x1322B]={\
  direction=\"l\",\
 },\
 [0x1322C]={\
  direction=\"l\",\
 },\
 [0x1322D]={\
  direction=\"l\",\
 },\
 [0x1322E]={\
  direction=\"l\",\
 },\
 [0x1322F]={\
  direction=\"l\",\
 },\
 [0x13230]={\
  direction=\"l\",\
 },\
 [0x13231]={\
  direction=\"l\",\
 },\
 [0x13232]={\
  direction=\"l\",\
 },\
 [0x13233]={\
  direction=\"l\",\
 },\
 [0x13234]={\
  direction=\"l\",\
 },\
 [0x13235]={\
  direction=\"l\",\
 },\
 [0x13236]={\
  direction=\"l\",\
 },\
 [0x13237]={\
  direction=\"l\",\
 },\
 [0x13238]={\
  direction=\"l\",\
 },\
 [0x13239]={\
  direction=\"l\",\
 },\
 [0x1323A]={\
  direction=\"l\",\
 },\
 [0x1323B]={\
  direction=\"l\",\
 },\
 [0x1323C]={\
  direction=\"l\",\
 },\
 [0x1323D]={\
  direction=\"l\",\
 },\
 [0x1323E]={\
  direction=\"l\",\
 },\
 [0x1323F]={\
  direction=\"l\",\
 },\
 [0x13240]={\
  direction=\"l\",\
 },\
 [0x13241]={\
  direction=\"l\",\
 },\
 [0x13242]={\
  direction=\"l\",\
 },\
 [0x13243]={\
  direction=\"l\",\
 },\
 [0x13244]={\
  direction=\"l\",\
 },\
 [0x13245]={\
  direction=\"l\",\
 },\
 [0x13246]={\
  direction=\"l\",\
 },\
 [0x13247]={\
  direction=\"l\",\
 },\
 [0x13248]={\
  direction=\"l\",\
 },\
 [0x13249]={\
  direction=\"l\",\
 },\
 [0x1324A]={\
  direction=\"l\",\
 },\
 [0x1324B]={\
  direction=\"l\",\
 },\
 [0x1324C]={\
  direction=\"l\",\
 },\
 [0x1324D]={\
  direction=\"l\",\
 },\
 [0x1324E]={\
  direction=\"l\",\
 },\
 [0x1324F]={\
  direction=\"l\",\
 },\
 [0x13250]={\
  direction=\"l\",\
 },\
 [0x13251]={\
  direction=\"l\",\
 },\
 [0x13252]={\
  direction=\"l\",\
 },\
 [0x13253]={\
  direction=\"l\",\
 },\
 [0x13254]={\
  direction=\"l\",\
 },\
 [0x13255]={\
  direction=\"l\",\
 },\
 [0x13256]={\
  direction=\"l\",\
 },\
 [0x13257]={\
  direction=\"l\",\
 },\
 [0x13258]={\
  direction=\"l\",\
 },\
 [0x13259]={\
  direction=\"l\",\
 },\
 [0x1325A]={\
  direction=\"l\",\
 },\
 [0x1325B]={\
  direction=\"l\",\
 },\
 [0x1325C]={\
  direction=\"l\",\
 },\
 [0x1325D]={\
  direction=\"l\",\
 },\
 [0x1325E]={\
  direction=\"l\",\
 },\
 [0x1325F]={\
  direction=\"l\",\
 },\
 [0x13260]={\
  direction=\"l\",\
 },\
 [0x13261]={\
  direction=\"l\",\
 },\
 [0x13262]={\
  direction=\"l\",\
 },\
 [0x13263]={\
  direction=\"l\",\
 },\
 [0x13264]={\
  direction=\"l\",\
 },\
 [0x13265]={\
  direction=\"l\",\
 },\
 [0x13266]={\
  direction=\"l\",\
 },\
 [0x13267]={\
  direction=\"l\",\
 },\
 [0x13268]={\
  direction=\"l\",\
 },\
 [0x13269]={\
  direction=\"l\",\
 },\
 [0x1326A]={\
  direction=\"l\",\
 },\
 [0x1326B]={\
  direction=\"l\",\
 },\
 [0x1326C]={\
  direction=\"l\",\
 },\
 [0x1326D]={\
  direction=\"l\",\
 },\
 [0x1326E]={\
  direction=\"l\",\
 },\
 [0x1326F]={\
  direction=\"l\",\
 },\
 [0x13270]={\
  direction=\"l\",\
 },\
 [0x13271]={\
  direction=\"l\",\
 },\
 [0x13272]={\
  direction=\"l\",\
 },\
 [0x13273]={\
  direction=\"l\",\
 },\
 [0x13274]={\
  direction=\"l\",\
 },\
 [0x13275]={\
  direction=\"l\",\
 },\
 [0x13276]={\
  direction=\"l\",\
 },\
 [0x13277]={\
  direction=\"l\",\
 },\
 [0x13278]={\
  direction=\"l\",\
 },\
 [0x13279]={\
  direction=\"l\",\
 },\
 [0x1327A]={\
  direction=\"l\",\
 },\
 [0x1327B]={\
  direction=\"l\",\
 },\
 [0x1327C]={\
  direction=\"l\",\
 },\
 [0x1327D]={\
  direction=\"l\",\
 },\
 [0x1327E]={\
  direction=\"l\",\
 },\
 [0x1327F]={\
  direction=\"l\",\
 },\
 [0x13280]={\
  direction=\"l\",\
 },\
 [0x13281]={\
  direction=\"l\",\
 },\
 [0x13282]={\
  direction=\"l\",\
 },\
 [0x13283]={\
  direction=\"l\",\
 },\
 [0x13284]={\
  direction=\"l\",\
 },\
 [0x13285]={\
  direction=\"l\",\
 },\
 [0x13286]={\
  direction=\"l\",\
 },\
 [0x13287]={\
  direction=\"l\",\
 },\
 [0x13288]={\
  direction=\"l\",\
 },\
 [0x13289]={\
  direction=\"l\",\
 },\
 [0x1328A]={\
  direction=\"l\",\
 },\
 [0x1328B]={\
  direction=\"l\",\
 },\
 [0x1328C]={\
  direction=\"l\",\
 },\
 [0x1328D]={\
  direction=\"l\",\
 },\
 [0x1328E]={\
  direction=\"l\",\
 },\
 [0x1328F]={\
  direction=\"l\",\
 },\
 [0x13290]={\
  direction=\"l\",\
 },\
 [0x13291]={\
  direction=\"l\",\
 },\
 [0x13292]={\
  direction=\"l\",\
 },\
 [0x13293]={\
  direction=\"l\",\
 },\
 [0x13294]={\
  direction=\"l\",\
 },\
 [0x13295]={\
  direction=\"l\",\
 },\
 [0x13296]={\
  direction=\"l\",\
 },\
 [0x13297]={\
  direction=\"l\",\
 },\
 [0x13298]={\
  direction=\"l\",\
 },\
 [0x13299]={\
  direction=\"l\",\
 },\
 [0x1329A]={\
  direction=\"l\",\
 },\
 [0x1329B]={\
  direction=\"l\",\
 },\
 [0x1329C]={\
  direction=\"l\",\
 },\
 [0x1329D]={\
  direction=\"l\",\
 },\
 [0x1329E]={\
  direction=\"l\",\
 },\
 [0x1329F]={\
  direction=\"l\",\
 },\
 [0x132A0]={\
  direction=\"l\",\
 },\
 [0x132A1]={\
  direction=\"l\",\
 },\
 [0x132A2]={\
  direction=\"l\",\
 },\
 [0x132A3]={\
  direction=\"l\",\
 },\
 [0x132A4]={\
  direction=\"l\",\
 },\
 [0x132A5]={\
  direction=\"l\",\
 },\
 [0x132A6]={\
  direction=\"l\",\
 },\
 [0x132A7]={\
  direction=\"l\",\
 },\
 [0x132A8]={\
  direction=\"l\",\
 },\
 [0x132A9]={\
  direction=\"l\",\
 },\
 [0x132AA]={\
  direction=\"l\",\
 },\
 [0x132AB]={\
  direction=\"l\",\
 },\
 [0x132AC]={\
  direction=\"l\",\
 },\
 [0x132AD]={\
  direction=\"l\",\
 },\
 [0x132AE]={\
  direction=\"l\",\
 },\
 [0x132AF]={\
  direction=\"l\",\
 },\
 [0x132B0]={\
  direction=\"l\",\
 },\
 [0x132B1]={\
  direction=\"l\",\
 },\
 [0x132B2]={\
  direction=\"l\",\
 },\
 [0x132B3]={\
  direction=\"l\",\
 },\
 [0x132B4]={\
  direction=\"l\",\
 },\
 [0x132B5]={\
  direction=\"l\",\
 },\
 [0x132B6]={\
  direction=\"l\",\
 },\
 [0x132B7]={\
  direction=\"l\",\
 },\
 [0x132B8]={\
  direction=\"l\",\
 },\
 [0x132B9]={\
  direction=\"l\",\
 },\
 [0x132BA]={\
  direction=\"l\",\
 },\
 [0x132BB]={\
  direction=\"l\",\
 },\
 [0x132BC]={\
  direction=\"l\",\
 },\
 [0x132BD]={\
  direction=\"l\",\
 },\
 [0x132BE]={\
  direction=\"l\",\
 },\
 [0x132BF]={\
  direction=\"l\",\
 },\
 [0x132C0]={\
  direction=\"l\",\
 },\
 [0x132C1]={\
  direction=\"l\",\
 },\
 [0x132C2]={\
  direction=\"l\",\
 },\
 [0x132C3]={\
  direction=\"l\",\
 },\
 [0x132C4]={\
  direction=\"l\",\
 },\
 [0x132C5]={\
  direction=\"l\",\
 },\
 [0x132C6]={\
  direction=\"l\",\
 },\
 [0x132C7]={\
  direction=\"l\",\
 },\
 [0x132C8]={\
  direction=\"l\",\
 },\
 [0x132C9]={\
  direction=\"l\",\
 },\
 [0x132CA]={\
  direction=\"l\",\
 },\
 [0x132CB]={\
  direction=\"l\",\
 },\
 [0x132CC]={\
  direction=\"l\",\
 },\
 [0x132CD]={\
  direction=\"l\",\
 },\
 [0x132CE]={\
  direction=\"l\",\
 },\
 [0x132CF]={\
  direction=\"l\",\
 },\
 [0x132D0]={\
  direction=\"l\",\
 },\
 [0x132D1]={\
  direction=\"l\",\
 },\
 [0x132D2]={\
  direction=\"l\",\
 },\
 [0x132D3]={\
  direction=\"l\",\
 },\
 [0x132D4]={\
  direction=\"l\",\
 },\
 [0x132D5]={\
  direction=\"l\",\
 },\
 [0x132D6]={\
  direction=\"l\",\
 },\
 [0x132D7]={\
  direction=\"l\",\
 },\
 [0x132D8]={\
  direction=\"l\",\
 },\
 [0x132D9]={\
  direction=\"l\",\
 },\
 [0x132DA]={\
  direction=\"l\",\
 },\
 [0x132DB]={\
  direction=\"l\",\
 },\
 [0x132DC]={\
  direction=\"l\",\
 },\
 [0x132DD]={\
  direction=\"l\",\
 },\
 [0x132DE]={\
  direction=\"l\",\
 },\
 [0x132DF]={\
  direction=\"l\",\
 },\
 [0x132E0]={\
  direction=\"l\",\
 },\
 [0x132E1]={\
  direction=\"l\",\
 },\
 [0x132E2]={\
  direction=\"l\",\
 },\
 [0x132E3]={\
  direction=\"l\",\
 },\
 [0x132E4]={\
  direction=\"l\",\
 },\
 [0x132E5]={\
  direction=\"l\",\
 },\
 [0x132E6]={\
  direction=\"l\",\
 },\
 [0x132E7]={\
  direction=\"l\",\
 },\
 [0x132E8]={\
  direction=\"l\",\
 },\
 [0x132E9]={\
  direction=\"l\",\
 },\
 [0x132EA]={\
  direction=\"l\",\
 },\
 [0x132EB]={\
  direction=\"l\",\
 },\
 [0x132EC]={\
  direction=\"l\",\
 },\
 [0x132ED]={\
  direction=\"l\",\
 },\
 [0x132EE]={\
  direction=\"l\",\
 },\
 [0x132EF]={\
  direction=\"l\",\
 },\
 [0x132F0]={\
  direction=\"l\",\
 },\
 [0x132F1]={\
  direction=\"l\",\
 },\
 [0x132F2]={\
  direction=\"l\",\
 },\
 [0x132F3]={\
  direction=\"l\",\
 },\
 [0x132F4]={\
  direction=\"l\",\
 },\
 [0x132F5]={\
  direction=\"l\",\
 },\
 [0x132F6]={\
  direction=\"l\",\
 },\
 [0x132F7]={\
  direction=\"l\",\
 },\
 [0x132F8]={\
  direction=\"l\",\
 },\
 [0x132F9]={\
  direction=\"l\",\
 },\
 [0x132FA]={\
  direction=\"l\",\
 },\
 [0x132FB]={\
  direction=\"l\",\
 },\
 [0x132FC]={\
  direction=\"l\",\
 },\
 [0x132FD]={\
  direction=\"l\",\
 },\
 [0x132FE]={\
  direction=\"l\",\
 },\
 [0x132FF]={\
  direction=\"l\",\
 },\
 [0x13300]={\
  direction=\"l\",\
 },\
 [0x13301]={\
  direction=\"l\",\
 },\
 [0x13302]={\
  direction=\"l\",\
 },\
 [0x13303]={\
  direction=\"l\",\
 },\
 [0x13304]={\
  direction=\"l\",\
 },\
 [0x13305]={\
  direction=\"l\",\
 },\
 [0x13306]={\
  direction=\"l\",\
 },\
 [0x13307]={\
  direction=\"l\",\
 },\
 [0x13308]={\
  direction=\"l\",\
 },\
 [0x13309]={\
  direction=\"l\",\
 },\
 [0x1330A]={\
  direction=\"l\",\
 },\
 [0x1330B]={\
  direction=\"l\",\
 },\
 [0x1330C]={\
  direction=\"l\",\
 },\
 [0x1330D]={\
  direction=\"l\",\
 },\
 [0x1330E]={\
  direction=\"l\",\
 },\
 [0x1330F]={\
  direction=\"l\",\
 },\
 [0x13310]={\
  direction=\"l\",\
 },\
 [0x13311]={\
  direction=\"l\",\
 },\
 [0x13312]={\
  direction=\"l\",\
 },\
 [0x13313]={\
  direction=\"l\",\
 },\
 [0x13314]={\
  direction=\"l\",\
 },\
 [0x13315]={\
  direction=\"l\",\
 },\
 [0x13316]={\
  direction=\"l\",\
 },\
 [0x13317]={\
  direction=\"l\",\
 },\
 [0x13318]={\
  direction=\"l\",\
 },\
 [0x13319]={\
  direction=\"l\",\
 },\
 [0x1331A]={\
  direction=\"l\",\
 },\
 [0x1331B]={\
  direction=\"l\",\
 },\
 [0x1331C]={\
  direction=\"l\",\
 },\
 [0x1331D]={\
  direction=\"l\",\
 },\
 [0x1331E]={\
  direction=\"l\",\
 },\
 [0x1331F]={\
  direction=\"l\",\
 },\
 [0x13320]={\
  direction=\"l\",\
 },\
 [0x13321]={\
  direction=\"l\",\
 },\
 [0x13322]={\
  direction=\"l\",\
 },\
 [0x13323]={\
  direction=\"l\",\
 },\
 [0x13324]={\
  direction=\"l\",\
 },\
 [0x13325]={\
  direction=\"l\",\
 },\
 [0x13326]={\
  direction=\"l\",\
 },\
 [0x13327]={\
  direction=\"l\",\
 },\
 [0x13328]={\
  direction=\"l\",\
 },\
 [0x13329]={\
  direction=\"l\",\
 },\
 [0x1332A]={\
  direction=\"l\",\
 },\
 [0x1332B]={\
  direction=\"l\",\
 },\
 [0x1332C]={\
  direction=\"l\",\
 },\
 [0x1332D]={\
  direction=\"l\",\
 },\
 [0x1332E]={\
  direction=\"l\",\
 },\
 [0x1332F]={\
  direction=\"l\",\
 },\
 [0x13330]={\
  direction=\"l\",\
 },\
 [0x13331]={\
  direction=\"l\",\
 },\
 [0x13332]={\
  direction=\"l\",\
 },\
 [0x13333]={\
  direction=\"l\",\
 },\
 [0x13334]={\
  direction=\"l\",\
 },\
 [0x13335]={\
  direction=\"l\",\
 },\
 [0x13336]={\
  direction=\"l\",\
 },\
 [0x13337]={\
  direction=\"l\",\
 },\
 [0x13338]={\
  direction=\"l\",\
 },\
 [0x13339]={\
  direction=\"l\",\
 },\
 [0x1333A]={\
  direction=\"l\",\
 },\
 [0x1333B]={\
  direction=\"l\",\
 },\
 [0x1333C]={\
  direction=\"l\",\
 },\
 [0x1333D]={\
  direction=\"l\",\
 },\
 [0x1333E]={\
  direction=\"l\",\
 },\
 [0x1333F]={\
  direction=\"l\",\
 },\
 [0x13340]={\
  direction=\"l\",\
 },\
 [0x13341]={\
  direction=\"l\",\
 },\
 [0x13342]={\
  direction=\"l\",\
 },\
 [0x13343]={\
  direction=\"l\",\
 },\
 [0x13344]={\
  direction=\"l\",\
 },\
 [0x13345]={\
  direction=\"l\",\
 },\
 [0x13346]={\
  direction=\"l\",\
 },\
 [0x13347]={\
  direction=\"l\",\
 },\
 [0x13348]={\
  direction=\"l\",\
 },\
 [0x13349]={\
  direction=\"l\",\
 },\
 [0x1334A]={\
  direction=\"l\",\
 },\
 [0x1334B]={\
  direction=\"l\",\
 },\
 [0x1334C]={\
  direction=\"l\",\
 },\
 [0x1334D]={\
  direction=\"l\",\
 },\
 [0x1334E]={\
  direction=\"l\",\
 },\
 [0x1334F]={\
  direction=\"l\",\
 },\
 [0x13350]={\
  direction=\"l\",\
 },\
 [0x13351]={\
  direction=\"l\",\
 },\
 [0x13352]={\
  direction=\"l\",\
 },\
 [0x13353]={\
  direction=\"l\",\
 },\
 [0x13354]={\
  direction=\"l\",\
 },\
 [0x13355]={\
  direction=\"l\",\
 },\
 [0x13356]={\
  direction=\"l\",\
 },\
 [0x13357]={\
  direction=\"l\",\
 },\
 [0x13358]={\
  direction=\"l\",\
 },\
 [0x13359]={\
  direction=\"l\",\
 },\
 [0x1335A]={\
  direction=\"l\",\
 },\
 [0x1335B]={\
  direction=\"l\",\
 },\
 [0x1335C]={\
  direction=\"l\",\
 },\
 [0x1335D]={\
  direction=\"l\",\
 },\
 [0x1335E]={\
  direction=\"l\",\
 },\
 [0x1335F]={\
  direction=\"l\",\
 },\
 [0x13360]={\
  direction=\"l\",\
 },\
 [0x13361]={\
  direction=\"l\",\
 },\
 [0x13362]={\
  direction=\"l\",\
 },\
 [0x13363]={\
  direction=\"l\",\
 },\
 [0x13364]={\
  direction=\"l\",\
 },\
 [0x13365]={\
  direction=\"l\",\
 },\
 [0x13366]={\
  direction=\"l\",\
 },\
 [0x13367]={\
  direction=\"l\",\
 },\
 [0x13368]={\
  direction=\"l\",\
 },\
 [0x13369]={\
  direction=\"l\",\
 },\
 [0x1336A]={\
  direction=\"l\",\
 },\
 [0x1336B]={\
  direction=\"l\",\
 },\
 [0x1336C]={\
  direction=\"l\",\
 },\
 [0x1336D]={\
  direction=\"l\",\
 },\
 [0x1336E]={\
  direction=\"l\",\
 },\
 [0x1336F]={\
  direction=\"l\",\
 },\
 [0x13370]={\
  direction=\"l\",\
 },\
 [0x13371]={\
  direction=\"l\",\
 },\
 [0x13372]={\
  direction=\"l\",\
 },\
 [0x13373]={\
  direction=\"l\",\
 },\
 [0x13374]={\
  direction=\"l\",\
 },\
 [0x13375]={\
  direction=\"l\",\
 },\
 [0x13376]={\
  direction=\"l\",\
 },\
 [0x13377]={\
  direction=\"l\",\
 },\
 [0x13378]={\
  direction=\"l\",\
 },\
 [0x13379]={\
  direction=\"l\",\
 },\
 [0x1337A]={\
  direction=\"l\",\
 },\
 [0x1337B]={\
  direction=\"l\",\
 },\
 [0x1337C]={\
  direction=\"l\",\
 },\
 [0x1337D]={\
  direction=\"l\",\
 },\
 [0x1337E]={\
  direction=\"l\",\
 },\
 [0x1337F]={\
  direction=\"l\",\
 },\
 [0x13380]={\
  direction=\"l\",\
 },\
 [0x13381]={\
  direction=\"l\",\
 },\
 [0x13382]={\
  direction=\"l\",\
 },\
 [0x13383]={\
  direction=\"l\",\
 },\
 [0x13384]={\
  direction=\"l\",\
 },\
 [0x13385]={\
  direction=\"l\",\
 },\
 [0x13386]={\
  direction=\"l\",\
 },\
 [0x13387]={\
  direction=\"l\",\
 },\
 [0x13388]={\
  direction=\"l\",\
 },\
 [0x13389]={\
  direction=\"l\",\
 },\
 [0x1338A]={\
  direction=\"l\",\
 },\
 [0x1338B]={\
  direction=\"l\",\
 },\
 [0x1338C]={\
  direction=\"l\",\
 },\
 [0x1338D]={\
  direction=\"l\",\
 },\
 [0x1338E]={\
  direction=\"l\",\
 },\
 [0x1338F]={\
  direction=\"l\",\
 },\
 [0x13390]={\
  direction=\"l\",\
 },\
 [0x13391]={\
  direction=\"l\",\
 },\
 [0x13392]={\
  direction=\"l\",\
 },\
 [0x13393]={\
  direction=\"l\",\
 },\
 [0x13394]={\
  direction=\"l\",\
 },\
 [0x13395]={\
  direction=\"l\",\
 },\
 [0x13396]={\
  direction=\"l\",\
 },\
 [0x13397]={\
  direction=\"l\",\
 },\
 [0x13398]={\
  direction=\"l\",\
 },\
 [0x13399]={\
  direction=\"l\",\
 },\
 [0x1339A]={\
  direction=\"l\",\
 },\
 [0x1339B]={\
  direction=\"l\",\
 },\
 [0x1339C]={\
  direction=\"l\",\
 },\
 [0x1339D]={\
  direction=\"l\",\
 },\
 [0x1339E]={\
  direction=\"l\",\
 },\
 [0x1339F]={\
  direction=\"l\",\
 },\
 [0x133A0]={\
  direction=\"l\",\
 },\
 [0x133A1]={\
  direction=\"l\",\
 },\
 [0x133A2]={\
  direction=\"l\",\
 },\
 [0x133A3]={\
  direction=\"l\",\
 },\
 [0x133A4]={\
  direction=\"l\",\
 },\
 [0x133A5]={\
  direction=\"l\",\
 },\
 [0x133A6]={\
  direction=\"l\",\
 },\
 [0x133A7]={\
  direction=\"l\",\
 },\
 [0x133A8]={\
  direction=\"l\",\
 },\
 [0x133A9]={\
  direction=\"l\",\
 },\
 [0x133AA]={\
  direction=\"l\",\
 },\
 [0x133AB]={\
  direction=\"l\",\
 },\
 [0x133AC]={\
  direction=\"l\",\
 },\
 [0x133AD]={\
  direction=\"l\",\
 },\
 [0x133AE]={\
  direction=\"l\",\
 },\
 [0x133AF]={\
  direction=\"l\",\
 },\
 [0x133B0]={\
  direction=\"l\",\
 },\
 [0x133B1]={\
  direction=\"l\",\
 },\
 [0x133B2]={\
  direction=\"l\",\
 },\
 [0x133B3]={\
  direction=\"l\",\
 },\
 [0x133B4]={\
  direction=\"l\",\
 },\
 [0x133B5]={\
  direction=\"l\",\
 },\
 [0x133B6]={\
  direction=\"l\",\
 },\
 [0x133B7]={\
  direction=\"l\",\
 },\
 [0x133B8]={\
  direction=\"l\",\
 },\
 [0x133B9]={\
  direction=\"l\",\
 },\
 [0x133BA]={\
  direction=\"l\",\
 },\
 [0x133BB]={\
  direction=\"l\",\
 },\
 [0x133BC]={\
  direction=\"l\",\
 },\
 [0x133BD]={\
  direction=\"l\",\
 },\
 [0x133BE]={\
  direction=\"l\",\
 },\
 [0x133BF]={\
  direction=\"l\",\
 },\
 [0x133C0]={\
  direction=\"l\",\
 },\
 [0x133C1]={\
  direction=\"l\",\
 },\
 [0x133C2]={\
  direction=\"l\",\
 },\
 [0x133C3]={\
  direction=\"l\",\
 },\
 [0x133C4]={\
  direction=\"l\",\
 },\
 [0x133C5]={\
  direction=\"l\",\
 },\
 [0x133C6]={\
  direction=\"l\",\
 },\
 [0x133C7]={\
  direction=\"l\",\
 },\
 [0x133C8]={\
  direction=\"l\",\
 },\
 [0x133C9]={\
  direction=\"l\",\
 },\
 [0x133CA]={\
  direction=\"l\",\
 },\
 [0x133CB]={\
  direction=\"l\",\
 },\
 [0x133CC]={\
  direction=\"l\",\
 },\
 [0x133CD]={\
  direction=\"l\",\
 },\
 [0x133CE]={\
  direction=\"l\",\
 },\
 [0x133CF]={\
  direction=\"l\",\
 },\
 [0x133D0]={\
  direction=\"l\",\
 },\
 [0x133D1]={\
  direction=\"l\",\
 },\
 [0x133D2]={\
  direction=\"l\",\
 },\
 [0x133D3]={\
  direction=\"l\",\
 },\
 [0x133D4]={\
  direction=\"l\",\
 },\
 [0x133D5]={\
  direction=\"l\",\
 },\
 [0x133D6]={\
  direction=\"l\",\
 },\
 [0x133D7]={\
  direction=\"l\",\
 },\
 [0x133D8]={\
  direction=\"l\",\
 },\
 [0x133D9]={\
  direction=\"l\",\
 },\
 [0x133DA]={\
  direction=\"l\",\
 },\
 [0x133DB]={\
  direction=\"l\",\
 },\
 [0x133DC]={\
  direction=\"l\",\
 },\
 [0x133DD]={\
  direction=\"l\",\
 },\
 [0x133DE]={\
  direction=\"l\",\
 },\
 [0x133DF]={\
  direction=\"l\",\
 },\
 [0x133E0]={\
  direction=\"l\",\
 },\
 [0x133E1]={\
  direction=\"l\",\
 },\
 [0x133E2]={\
  direction=\"l\",\
 },\
 [0x133E3]={\
  direction=\"l\",\
 },\
 [0x133E4]={\
  direction=\"l\",\
 },\
 [0x133E5]={\
  direction=\"l\",\
 },\
 [0x133E6]={\
  direction=\"l\",\
 },\
 [0x133E7]={\
  direction=\"l\",\
 },\
 [0x133E8]={\
  direction=\"l\",\
 },\
 [0x133E9]={\
  direction=\"l\",\
 },\
 [0x133EA]={\
  direction=\"l\",\
 },\
 [0x133EB]={\
  direction=\"l\",\
 },\
 [0x133EC]={\
  direction=\"l\",\
 },\
 [0x133ED]={\
  direction=\"l\",\
 },\
 [0x133EE]={\
  direction=\"l\",\
 },\
 [0x133EF]={\
  direction=\"l\",\
 },\
 [0x133F0]={\
  direction=\"l\",\
 },\
 [0x133F1]={\
  direction=\"l\",\
 },\
 [0x133F2]={\
  direction=\"l\",\
 },\
 [0x133F3]={\
  direction=\"l\",\
 },\
 [0x133F4]={\
  direction=\"l\",\
 },\
 [0x133F5]={\
  direction=\"l\",\
 },\
 [0x133F6]={\
  direction=\"l\",\
 },\
 [0x133F7]={\
  direction=\"l\",\
 },\
 [0x133F8]={\
  direction=\"l\",\
 },\
 [0x133F9]={\
  direction=\"l\",\
 },\
 [0x133FA]={\
  direction=\"l\",\
 },\
 [0x133FB]={\
  direction=\"l\",\
 },\
 [0x133FC]={\
  direction=\"l\",\
 },\
 [0x133FD]={\
  direction=\"l\",\
 },\
 [0x133FE]={\
  direction=\"l\",\
 },\
 [0x133FF]={\
  direction=\"l\",\
 },\
 [0x13400]={\
  direction=\"l\",\
 },\
 [0x13401]={\
  direction=\"l\",\
 },\
 [0x13402]={\
  direction=\"l\",\
 },\
 [0x13403]={\
  direction=\"l\",\
 },\
 [0x13404]={\
  direction=\"l\",\
 },\
 [0x13405]={\
  direction=\"l\",\
 },\
 [0x13406]={\
  direction=\"l\",\
 },\
 [0x13407]={\
  direction=\"l\",\
 },\
 [0x13408]={\
  direction=\"l\",\
 },\
 [0x13409]={\
  direction=\"l\",\
 },\
 [0x1340A]={\
  direction=\"l\",\
 },\
 [0x1340B]={\
  direction=\"l\",\
 },\
 [0x1340C]={\
  direction=\"l\",\
 },\
 [0x1340D]={\
  direction=\"l\",\
 },\
 [0x1340E]={\
  direction=\"l\",\
 },\
 [0x1340F]={\
  direction=\"l\",\
 },\
 [0x13410]={\
  direction=\"l\",\
 },\
 [0x13411]={\
  direction=\"l\",\
 },\
 [0x13412]={\
  direction=\"l\",\
 },\
 [0x13413]={\
  direction=\"l\",\
 },\
 [0x13414]={\
  direction=\"l\",\
 },\
 [0x13415]={\
  direction=\"l\",\
 },\
 [0x13416]={\
  direction=\"l\",\
 },\
 [0x13417]={\
  direction=\"l\",\
 },\
 [0x13418]={\
  direction=\"l\",\
 },\
 [0x13419]={\
  direction=\"l\",\
 },\
 [0x1341A]={\
  direction=\"l\",\
 },\
 [0x1341B]={\
  direction=\"l\",\
 },\
 [0x1341C]={\
  direction=\"l\",\
 },\
 [0x1341D]={\
  direction=\"l\",\
 },\
 [0x1341E]={\
  direction=\"l\",\
 },\
 [0x1341F]={\
  direction=\"l\",\
 },\
 [0x13420]={\
  direction=\"l\",\
 },\
 [0x13421]={\
  direction=\"l\",\
 },\
 [0x13422]={\
  direction=\"l\",\
 },\
 [0x13423]={\
  direction=\"l\",\
 },\
 [0x13424]={\
  direction=\"l\",\
 },\
 [0x13425]={\
  direction=\"l\",\
 },\
 [0x13426]={\
  direction=\"l\",\
 },\
 [0x13427]={\
  direction=\"l\",\
 },\
 [0x13428]={\
  direction=\"l\",\
 },\
 [0x13429]={\
  direction=\"l\",\
 },\
 [0x1342A]={\
  direction=\"l\",\
 },\
 [0x1342B]={\
  direction=\"l\",\
 },\
 [0x1342C]={\
  direction=\"l\",\
 },\
 [0x1342D]={\
  direction=\"l\",\
 },\
 [0x1342E]={\
  direction=\"l\",\
 },\
 [0x16800]={\
  direction=\"l\",\
 },\
 [0x16801]={\
  direction=\"l\",\
 },\
 [0x16802]={\
  direction=\"l\",\
 },\
 [0x16803]={\
  direction=\"l\",\
 },\
 [0x16804]={\
  direction=\"l\",\
 },\
 [0x16805]={\
  direction=\"l\",\
 },\
 [0x16806]={\
  direction=\"l\",\
 },\
 [0x16807]={\
  direction=\"l\",\
 },\
 [0x16808]={\
  direction=\"l\",\
 },\
 [0x16809]={\
  direction=\"l\",\
 },\
 [0x1680A]={\
  direction=\"l\",\
 },\
 [0x1680B]={\
  direction=\"l\",\
 },\
 [0x1680C]={\
  direction=\"l\",\
 },\
 [0x1680D]={\
  direction=\"l\",\
 },\
 [0x1680E]={\
  direction=\"l\",\
 },\
 [0x1680F]={\
  direction=\"l\",\
 },\
 [0x16810]={\
  direction=\"l\",\
 },\
 [0x16811]={\
  direction=\"l\",\
 },\
 [0x16812]={\
  direction=\"l\",\
 },\
 [0x16813]={\
  direction=\"l\",\
 },\
 [0x16814]={\
  direction=\"l\",\
 },\
 [0x16815]={\
  direction=\"l\",\
 },\
 [0x16816]={\
  direction=\"l\",\
 },\
 [0x16817]={\
  direction=\"l\",\
 },\
 [0x16818]={\
  direction=\"l\",\
 },\
 [0x16819]={\
  direction=\"l\",\
 },\
 [0x1681A]={\
  direction=\"l\",\
 },\
 [0x1681B]={\
  direction=\"l\",\
 },\
 [0x1681C]={\
  direction=\"l\",\
 },\
 [0x1681D]={\
  direction=\"l\",\
 },\
 [0x1681E]={\
  direction=\"l\",\
 },\
 [0x1681F]={\
  direction=\"l\",\
 },\
 [0x16820]={\
  direction=\"l\",\
 },\
 [0x16821]={\
  direction=\"l\",\
 },\
 [0x16822]={\
  direction=\"l\",\
 },\
 [0x16823]={\
  direction=\"l\",\
 },\
 [0x16824]={\
  direction=\"l\",\
 },\
 [0x16825]={\
  direction=\"l\",\
 },\
 [0x16826]={\
  direction=\"l\",\
 },\
 [0x16827]={\
  direction=\"l\",\
 },\
 [0x16828]={\
  direction=\"l\",\
 },\
 [0x16829]={\
  direction=\"l\",\
 },\
 [0x1682A]={\
  direction=\"l\",\
 },\
 [0x1682B]={\
  direction=\"l\",\
 },\
 [0x1682C]={\
  direction=\"l\",\
 },\
 [0x1682D]={\
  direction=\"l\",\
 },\
 [0x1682E]={\
  direction=\"l\",\
 },\
 [0x1682F]={\
  direction=\"l\",\
 },\
 [0x16830]={\
  direction=\"l\",\
 },\
 [0x16831]={\
  direction=\"l\",\
 },\
 [0x16832]={\
  direction=\"l\",\
 },\
 [0x16833]={\
  direction=\"l\",\
 },\
 [0x16834]={\
  direction=\"l\",\
 },\
 [0x16835]={\
  direction=\"l\",\
 },\
 [0x16836]={\
  direction=\"l\",\
 },\
 [0x16837]={\
  direction=\"l\",\
 },\
 [0x16838]={\
  direction=\"l\",\
 },\
 [0x16839]={\
  direction=\"l\",\
 },\
 [0x1683A]={\
  direction=\"l\",\
 },\
 [0x1683B]={\
  direction=\"l\",\
 },\
 [0x1683C]={\
  direction=\"l\",\
 },\
 [0x1683D]={\
  direction=\"l\",\
 },\
 [0x1683E]={\
  direction=\"l\",\
 },\
 [0x1683F]={\
  direction=\"l\",\
 },\
 [0x16840]={\
  direction=\"l\",\
 },\
 [0x16841]={\
  direction=\"l\",\
 },\
 [0x16842]={\
  direction=\"l\",\
 },\
 [0x16843]={\
  direction=\"l\",\
 },\
 [0x16844]={\
  direction=\"l\",\
 },\
 [0x16845]={\
  direction=\"l\",\
 },\
 [0x16846]={\
  direction=\"l\",\
 },\
 [0x16847]={\
  direction=\"l\",\
 },\
 [0x16848]={\
  direction=\"l\",\
 },\
 [0x16849]={\
  direction=\"l\",\
 },\
 [0x1684A]={\
  direction=\"l\",\
 },\
 [0x1684B]={\
  direction=\"l\",\
 },\
 [0x1684C]={\
  direction=\"l\",\
 },\
 [0x1684D]={\
  direction=\"l\",\
 },\
 [0x1684E]={\
  direction=\"l\",\
 },\
 [0x1684F]={\
  direction=\"l\",\
 },\
 [0x16850]={\
  direction=\"l\",\
 },\
 [0x16851]={\
  direction=\"l\",\
 },\
 [0x16852]={\
  direction=\"l\",\
 },\
 [0x16853]={\
  direction=\"l\",\
 },\
 [0x16854]={\
  direction=\"l\",\
 },\
 [0x16855]={\
  direction=\"l\",\
 },\
 [0x16856]={\
  direction=\"l\",\
 },\
 [0x16857]={\
  direction=\"l\",\
 },\
 [0x16858]={\
  direction=\"l\",\
 },\
 [0x16859]={\
  direction=\"l\",\
 },\
 [0x1685A]={\
  direction=\"l\",\
 },\
 [0x1685B]={\
  direction=\"l\",\
 },\
 [0x1685C]={\
  direction=\"l\",\
 },\
 [0x1685D]={\
  direction=\"l\",\
 },\
 [0x1685E]={\
  direction=\"l\",\
 },\
 [0x1685F]={\
  direction=\"l\",\
 },\
 [0x16860]={\
  direction=\"l\",\
 },\
 [0x16861]={\
  direction=\"l\",\
 },\
 [0x16862]={\
  direction=\"l\",\
 },\
 [0x16863]={\
  direction=\"l\",\
 },\
 [0x16864]={\
  direction=\"l\",\
 },\
 [0x16865]={\
  direction=\"l\",\
 },\
 [0x16866]={\
  direction=\"l\",\
 },\
 [0x16867]={\
  direction=\"l\",\
 },\
 [0x16868]={\
  direction=\"l\",\
 },\
 [0x16869]={\
  direction=\"l\",\
 },\
 [0x1686A]={\
  direction=\"l\",\
 },\
 [0x1686B]={\
  direction=\"l\",\
 },\
 [0x1686C]={\
  direction=\"l\",\
 },\
 [0x1686D]={\
  direction=\"l\",\
 },\
 [0x1686E]={\
  direction=\"l\",\
 },\
 [0x1686F]={\
  direction=\"l\",\
 },\
 [0x16870]={\
  direction=\"l\",\
 },\
 [0x16871]={\
  direction=\"l\",\
 },\
 [0x16872]={\
  direction=\"l\",\
 },\
 [0x16873]={\
  direction=\"l\",\
 },\
 [0x16874]={\
  direction=\"l\",\
 },\
 [0x16875]={\
  direction=\"l\",\
 },\
 [0x16876]={\
  direction=\"l\",\
 },\
 [0x16877]={\
  direction=\"l\",\
 },\
 [0x16878]={\
  direction=\"l\",\
 },\
 [0x16879]={\
  direction=\"l\",\
 },\
 [0x1687A]={\
  direction=\"l\",\
 },\
 [0x1687B]={\
  direction=\"l\",\
 },\
 [0x1687C]={\
  direction=\"l\",\
 },\
 [0x1687D]={\
  direction=\"l\",\
 },\
 [0x1687E]={\
  direction=\"l\",\
 },\
 [0x1687F]={\
  direction=\"l\",\
 },\
 [0x16880]={\
  direction=\"l\",\
 },\
 [0x16881]={\
  direction=\"l\",\
 },\
 [0x16882]={\
  direction=\"l\",\
 },\
 [0x16883]={\
  direction=\"l\",\
 },\
 [0x16884]={\
  direction=\"l\",\
 },\
 [0x16885]={\
  direction=\"l\",\
 },\
 [0x16886]={\
  direction=\"l\",\
 },\
 [0x16887]={\
  direction=\"l\",\
 },\
 [0x16888]={\
  direction=\"l\",\
 },\
 [0x16889]={\
  direction=\"l\",\
 },\
 [0x1688A]={\
  direction=\"l\",\
 },\
 [0x1688B]={\
  direction=\"l\",\
 },\
 [0x1688C]={\
  direction=\"l\",\
 },\
 [0x1688D]={\
  direction=\"l\",\
 },\
 [0x1688E]={\
  direction=\"l\",\
 },\
 [0x1688F]={\
  direction=\"l\",\
 },\
 [0x16890]={\
  direction=\"l\",\
 },\
 [0x16891]={\
  direction=\"l\",\
 },\
 [0x16892]={\
  direction=\"l\",\
 },\
 [0x16893]={\
  direction=\"l\",\
 },\
 [0x16894]={\
  direction=\"l\",\
 },\
 [0x16895]={\
  direction=\"l\",\
 },\
 [0x16896]={\
  direction=\"l\",\
 },\
 [0x16897]={\
  direction=\"l\",\
 },\
 [0x16898]={\
  direction=\"l\",\
 },\
 [0x16899]={\
  direction=\"l\",\
 },\
 [0x1689A]={\
  direction=\"l\",\
 },\
 [0x1689B]={\
  direction=\"l\",\
 },\
 [0x1689C]={\
  direction=\"l\",\
 },\
 [0x1689D]={\
  direction=\"l\",\
 },\
 [0x1689E]={\
  direction=\"l\",\
 },\
 [0x1689F]={\
  direction=\"l\",\
 },\
 [0x168A0]={\
  direction=\"l\",\
 },\
 [0x168A1]={\
  direction=\"l\",\
 },\
 [0x168A2]={\
  direction=\"l\",\
 },\
 [0x168A3]={\
  direction=\"l\",\
 },\
 [0x168A4]={\
  direction=\"l\",\
 },\
 [0x168A5]={\
  direction=\"l\",\
 },\
 [0x168A6]={\
  direction=\"l\",\
 },\
 [0x168A7]={\
  direction=\"l\",\
 },\
 [0x168A8]={\
  direction=\"l\",\
 },\
 [0x168A9]={\
  direction=\"l\",\
 },\
 [0x168AA]={\
  direction=\"l\",\
 },\
 [0x168AB]={\
  direction=\"l\",\
 },\
 [0x168AC]={\
  direction=\"l\",\
 },\
 [0x168AD]={\
  direction=\"l\",\
 },\
 [0x168AE]={\
  direction=\"l\",\
 },\
 [0x168AF]={\
  direction=\"l\",\
 },\
 [0x168B0]={\
  direction=\"l\",\
 },\
 [0x168B1]={\
  direction=\"l\",\
 },\
 [0x168B2]={\
  direction=\"l\",\
 },\
 [0x168B3]={\
  direction=\"l\",\
 },\
 [0x168B4]={\
  direction=\"l\",\
 },\
 [0x168B5]={\
  direction=\"l\",\
 },\
 [0x168B6]={\
  direction=\"l\",\
 },\
 [0x168B7]={\
  direction=\"l\",\
 },\
 [0x168B8]={\
  direction=\"l\",\
 },\
 [0x168B9]={\
  direction=\"l\",\
 },\
 [0x168BA]={\
  direction=\"l\",\
 },\
 [0x168BB]={\
  direction=\"l\",\
 },\
 [0x168BC]={\
  direction=\"l\",\
 },\
 [0x168BD]={\
  direction=\"l\",\
 },\
 [0x168BE]={\
  direction=\"l\",\
 },\
 [0x168BF]={\
  direction=\"l\",\
 },\
 [0x168C0]={\
  direction=\"l\",\
 },\
 [0x168C1]={\
  direction=\"l\",\
 },\
 [0x168C2]={\
  direction=\"l\",\
 },\
 [0x168C3]={\
  direction=\"l\",\
 },\
 [0x168C4]={\
  direction=\"l\",\
 },\
 [0x168C5]={\
  direction=\"l\",\
 },\
 [0x168C6]={\
  direction=\"l\",\
 },\
 [0x168C7]={\
  direction=\"l\",\
 },\
 [0x168C8]={\
  direction=\"l\",\
 },\
 [0x168C9]={\
  direction=\"l\",\
 },\
 [0x168CA]={\
  direction=\"l\",\
 },\
 [0x168CB]={\
  direction=\"l\",\
 },\
 [0x168CC]={\
  direction=\"l\",\
 },\
 [0x168CD]={\
  direction=\"l\",\
 },\
 [0x168CE]={\
  direction=\"l\",\
 },\
 [0x168CF]={\
  direction=\"l\",\
 },\
 [0x168D0]={\
  direction=\"l\",\
 },\
 [0x168D1]={\
  direction=\"l\",\
 },\
 [0x168D2]={\
  direction=\"l\",\
 },\
 [0x168D3]={\
  direction=\"l\",\
 },\
 [0x168D4]={\
  direction=\"l\",\
 },\
 [0x168D5]={\
  direction=\"l\",\
 },\
 [0x168D6]={\
  direction=\"l\",\
 },\
 [0x168D7]={\
  direction=\"l\",\
 },\
 [0x168D8]={\
  direction=\"l\",\
 },\
 [0x168D9]={\
  direction=\"l\",\
 },\
 [0x168DA]={\
  direction=\"l\",\
 },\
 [0x168DB]={\
  direction=\"l\",\
 },\
 [0x168DC]={\
  direction=\"l\",\
 },\
 [0x168DD]={\
  direction=\"l\",\
 },\
 [0x168DE]={\
  direction=\"l\",\
 },\
 [0x168DF]={\
  direction=\"l\",\
 },\
 [0x168E0]={\
  direction=\"l\",\
 },\
 [0x168E1]={\
  direction=\"l\",\
 },\
 [0x168E2]={\
  direction=\"l\",\
 },\
 [0x168E3]={\
  direction=\"l\",\
 },\
 [0x168E4]={\
  direction=\"l\",\
 },\
 [0x168E5]={\
  direction=\"l\",\
 },\
 [0x168E6]={\
  direction=\"l\",\
 },\
 [0x168E7]={\
  direction=\"l\",\
 },\
 [0x168E8]={\
  direction=\"l\",\
 },\
 [0x168E9]={\
  direction=\"l\",\
 },\
 [0x168EA]={\
  direction=\"l\",\
 },\
 [0x168EB]={\
  direction=\"l\",\
 },\
 [0x168EC]={\
  direction=\"l\",\
 },\
 [0x168ED]={\
  direction=\"l\",\
 },\
 [0x168EE]={\
  direction=\"l\",\
 },\
 [0x168EF]={\
  direction=\"l\",\
 },\
 [0x168F0]={\
  direction=\"l\",\
 },\
 [0x168F1]={\
  direction=\"l\",\
 },\
 [0x168F2]={\
  direction=\"l\",\
 },\
 [0x168F3]={\
  direction=\"l\",\
 },\
 [0x168F4]={\
  direction=\"l\",\
 },\
 [0x168F5]={\
  direction=\"l\",\
 },\
 [0x168F6]={\
  direction=\"l\",\
 },\
 [0x168F7]={\
  direction=\"l\",\
 },\
 [0x168F8]={\
  direction=\"l\",\
 },\
 [0x168F9]={\
  direction=\"l\",\
 },\
 [0x168FA]={\
  direction=\"l\",\
 },\
 [0x168FB]={\
  direction=\"l\",\
 },\
 [0x168FC]={\
  direction=\"l\",\
 },\
 [0x168FD]={\
  direction=\"l\",\
 },\
 [0x168FE]={\
  direction=\"l\",\
 },\
 [0x168FF]={\
  direction=\"l\",\
 },\
 [0x16900]={\
  direction=\"l\",\
 },\
 [0x16901]={\
  direction=\"l\",\
 },\
 [0x16902]={\
  direction=\"l\",\
 },\
 [0x16903]={\
  direction=\"l\",\
 },\
 [0x16904]={\
  direction=\"l\",\
 },\
 [0x16905]={\
  direction=\"l\",\
 },\
 [0x16906]={\
  direction=\"l\",\
 },\
 [0x16907]={\
  direction=\"l\",\
 },\
 [0x16908]={\
  direction=\"l\",\
 },\
 [0x16909]={\
  direction=\"l\",\
 },\
 [0x1690A]={\
  direction=\"l\",\
 },\
 [0x1690B]={\
  direction=\"l\",\
 },\
 [0x1690C]={\
  direction=\"l\",\
 },\
 [0x1690D]={\
  direction=\"l\",\
 },\
 [0x1690E]={\
  direction=\"l\",\
 },\
 [0x1690F]={\
  direction=\"l\",\
 },\
 [0x16910]={\
  direction=\"l\",\
 },\
 [0x16911]={\
  direction=\"l\",\
 },\
 [0x16912]={\
  direction=\"l\",\
 },\
 [0x16913]={\
  direction=\"l\",\
 },\
 [0x16914]={\
  direction=\"l\",\
 },\
 [0x16915]={\
  direction=\"l\",\
 },\
 [0x16916]={\
  direction=\"l\",\
 },\
 [0x16917]={\
  direction=\"l\",\
 },\
 [0x16918]={\
  direction=\"l\",\
 },\
 [0x16919]={\
  direction=\"l\",\
 },\
 [0x1691A]={\
  direction=\"l\",\
 },\
 [0x1691B]={\
  direction=\"l\",\
 },\
 [0x1691C]={\
  direction=\"l\",\
 },\
 [0x1691D]={\
  direction=\"l\",\
 },\
 [0x1691E]={\
  direction=\"l\",\
 },\
 [0x1691F]={\
  direction=\"l\",\
 },\
 [0x16920]={\
  direction=\"l\",\
 },\
 [0x16921]={\
  direction=\"l\",\
 },\
 [0x16922]={\
  direction=\"l\",\
 },\
 [0x16923]={\
  direction=\"l\",\
 },\
 [0x16924]={\
  direction=\"l\",\
 },\
 [0x16925]={\
  direction=\"l\",\
 },\
 [0x16926]={\
  direction=\"l\",\
 },\
 [0x16927]={\
  direction=\"l\",\
 },\
 [0x16928]={\
  direction=\"l\",\
 },\
 [0x16929]={\
  direction=\"l\",\
 },\
 [0x1692A]={\
  direction=\"l\",\
 },\
 [0x1692B]={\
  direction=\"l\",\
 },\
 [0x1692C]={\
  direction=\"l\",\
 },\
 [0x1692D]={\
  direction=\"l\",\
 },\
 [0x1692E]={\
  direction=\"l\",\
 },\
 [0x1692F]={\
  direction=\"l\",\
 },\
 [0x16930]={\
  direction=\"l\",\
 },\
 [0x16931]={\
  direction=\"l\",\
 },\
 [0x16932]={\
  direction=\"l\",\
 },\
 [0x16933]={\
  direction=\"l\",\
 },\
 [0x16934]={\
  direction=\"l\",\
 },\
 [0x16935]={\
  direction=\"l\",\
 },\
 [0x16936]={\
  direction=\"l\",\
 },\
 [0x16937]={\
  direction=\"l\",\
 },\
 [0x16938]={\
  direction=\"l\",\
 },\
 [0x16939]={\
  direction=\"l\",\
 },\
 [0x1693A]={\
  direction=\"l\",\
 },\
 [0x1693B]={\
  direction=\"l\",\
 },\
 [0x1693C]={\
  direction=\"l\",\
 },\
 [0x1693D]={\
  direction=\"l\",\
 },\
 [0x1693E]={\
  direction=\"l\",\
 },\
 [0x1693F]={\
  direction=\"l\",\
 },\
 [0x16940]={\
  direction=\"l\",\
 },\
 [0x16941]={\
  direction=\"l\",\
 },\
 [0x16942]={\
  direction=\"l\",\
 },\
 [0x16943]={\
  direction=\"l\",\
 },\
 [0x16944]={\
  direction=\"l\",\
 },\
 [0x16945]={\
  direction=\"l\",\
 },\
 [0x16946]={\
  direction=\"l\",\
 },\
 [0x16947]={\
  direction=\"l\",\
 },\
 [0x16948]={\
  direction=\"l\",\
 },\
 [0x16949]={\
  direction=\"l\",\
 },\
 [0x1694A]={\
  direction=\"l\",\
 },\
 [0x1694B]={\
  direction=\"l\",\
 },\
 [0x1694C]={\
  direction=\"l\",\
 },\
 [0x1694D]={\
  direction=\"l\",\
 },\
 [0x1694E]={\
  direction=\"l\",\
 },\
 [0x1694F]={\
  direction=\"l\",\
 },\
 [0x16950]={\
  direction=\"l\",\
 },\
 [0x16951]={\
  direction=\"l\",\
 },\
 [0x16952]={\
  direction=\"l\",\
 },\
 [0x16953]={\
  direction=\"l\",\
 },\
 [0x16954]={\
  direction=\"l\",\
 },\
 [0x16955]={\
  direction=\"l\",\
 },\
 [0x16956]={\
  direction=\"l\",\
 },\
 [0x16957]={\
  direction=\"l\",\
 },\
 [0x16958]={\
  direction=\"l\",\
 },\
 [0x16959]={\
  direction=\"l\",\
 },\
 [0x1695A]={\
  direction=\"l\",\
 },\
 [0x1695B]={\
  direction=\"l\",\
 },\
 [0x1695C]={\
  direction=\"l\",\
 },\
 [0x1695D]={\
  direction=\"l\",\
 },\
 [0x1695E]={\
  direction=\"l\",\
 },\
 [0x1695F]={\
  direction=\"l\",\
 },\
 [0x16960]={\
  direction=\"l\",\
 },\
 [0x16961]={\
  direction=\"l\",\
 },\
 [0x16962]={\
  direction=\"l\",\
 },\
 [0x16963]={\
  direction=\"l\",\
 },\
 [0x16964]={\
  direction=\"l\",\
 },\
 [0x16965]={\
  direction=\"l\",\
 },\
 [0x16966]={\
  direction=\"l\",\
 },\
 [0x16967]={\
  direction=\"l\",\
 },\
 [0x16968]={\
  direction=\"l\",\
 },\
 [0x16969]={\
  direction=\"l\",\
 },\
 [0x1696A]={\
  direction=\"l\",\
 },\
 [0x1696B]={\
  direction=\"l\",\
 },\
 [0x1696C]={\
  direction=\"l\",\
 },\
 [0x1696D]={\
  direction=\"l\",\
 },\
 [0x1696E]={\
  direction=\"l\",\
 },\
 [0x1696F]={\
  direction=\"l\",\
 },\
 [0x16970]={\
  direction=\"l\",\
 },\
 [0x16971]={\
  direction=\"l\",\
 },\
 [0x16972]={\
  direction=\"l\",\
 },\
 [0x16973]={\
  direction=\"l\",\
 },\
 [0x16974]={\
  direction=\"l\",\
 },\
 [0x16975]={\
  direction=\"l\",\
 },\
 [0x16976]={\
  direction=\"l\",\
 },\
 [0x16977]={\
  direction=\"l\",\
 },\
 [0x16978]={\
  direction=\"l\",\
 },\
 [0x16979]={\
  direction=\"l\",\
 },\
 [0x1697A]={\
  direction=\"l\",\
 },\
 [0x1697B]={\
  direction=\"l\",\
 },\
 [0x1697C]={\
  direction=\"l\",\
 },\
 [0x1697D]={\
  direction=\"l\",\
 },\
 [0x1697E]={\
  direction=\"l\",\
 },\
 [0x1697F]={\
  direction=\"l\",\
 },\
 [0x16980]={\
  direction=\"l\",\
 },\
 [0x16981]={\
  direction=\"l\",\
 },\
 [0x16982]={\
  direction=\"l\",\
 },\
 [0x16983]={\
  direction=\"l\",\
 },\
 [0x16984]={\
  direction=\"l\",\
 },\
 [0x16985]={\
  direction=\"l\",\
 },\
 [0x16986]={\
  direction=\"l\",\
 },\
 [0x16987]={\
  direction=\"l\",\
 },\
 [0x16988]={\
  direction=\"l\",\
 },\
 [0x16989]={\
  direction=\"l\",\
 },\
 [0x1698A]={\
  direction=\"l\",\
 },\
 [0x1698B]={\
  direction=\"l\",\
 },\
 [0x1698C]={\
  direction=\"l\",\
 },\
 [0x1698D]={\
  direction=\"l\",\
 },\
 [0x1698E]={\
  direction=\"l\",\
 },\
 [0x1698F]={\
  direction=\"l\",\
 },\
 [0x16990]={\
  direction=\"l\",\
 },\
 [0x16991]={\
  direction=\"l\",\
 },\
 [0x16992]={\
  direction=\"l\",\
 },\
 [0x16993]={\
  direction=\"l\",\
 },\
 [0x16994]={\
  direction=\"l\",\
 },\
 [0x16995]={\
  direction=\"l\",\
 },\
 [0x16996]={\
  direction=\"l\",\
 },\
 [0x16997]={\
  direction=\"l\",\
 },\
 [0x16998]={\
  direction=\"l\",\
 },\
 [0x16999]={\
  direction=\"l\",\
 },\
 [0x1699A]={\
  direction=\"l\",\
 },\
 [0x1699B]={\
  direction=\"l\",\
 },\
 [0x1699C]={\
  direction=\"l\",\
 },\
 [0x1699D]={\
  direction=\"l\",\
 },\
 [0x1699E]={\
  direction=\"l\",\
 },\
 [0x1699F]={\
  direction=\"l\",\
 },\
 [0x169A0]={\
  direction=\"l\",\
 },\
 [0x169A1]={\
  direction=\"l\",\
 },\
 [0x169A2]={\
  direction=\"l\",\
 },\
 [0x169A3]={\
  direction=\"l\",\
 },\
 [0x169A4]={\
  direction=\"l\",\
 },\
 [0x169A5]={\
  direction=\"l\",\
 },\
 [0x169A6]={\
  direction=\"l\",\
 },\
 [0x169A7]={\
  direction=\"l\",\
 },\
 [0x169A8]={\
  direction=\"l\",\
 },\
 [0x169A9]={\
  direction=\"l\",\
 },\
 [0x169AA]={\
  direction=\"l\",\
 },\
 [0x169AB]={\
  direction=\"l\",\
 },\
 [0x169AC]={\
  direction=\"l\",\
 },\
 [0x169AD]={\
  direction=\"l\",\
 },\
 [0x169AE]={\
  direction=\"l\",\
 },\
 [0x169AF]={\
  direction=\"l\",\
 },\
 [0x169B0]={\
  direction=\"l\",\
 },\
 [0x169B1]={\
  direction=\"l\",\
 },\
 [0x169B2]={\
  direction=\"l\",\
 },\
 [0x169B3]={\
  direction=\"l\",\
 },\
 [0x169B4]={\
  direction=\"l\",\
 },\
 [0x169B5]={\
  direction=\"l\",\
 },\
 [0x169B6]={\
  direction=\"l\",\
 },\
 [0x169B7]={\
  direction=\"l\",\
 },\
 [0x169B8]={\
  direction=\"l\",\
 },\
 [0x169B9]={\
  direction=\"l\",\
 },\
 [0x169BA]={\
  direction=\"l\",\
 },\
 [0x169BB]={\
  direction=\"l\",\
 },\
 [0x169BC]={\
  direction=\"l\",\
 },\
 [0x169BD]={\
  direction=\"l\",\
 },\
 [0x169BE]={\
  direction=\"l\",\
 },\
 [0x169BF]={\
  direction=\"l\",\
 },\
 [0x169C0]={\
  direction=\"l\",\
 },\
 [0x169C1]={\
  direction=\"l\",\
 },\
 [0x169C2]={\
  direction=\"l\",\
 },\
 [0x169C3]={\
  direction=\"l\",\
 },\
 [0x169C4]={\
  direction=\"l\",\
 },\
 [0x169C5]={\
  direction=\"l\",\
 },\
 [0x169C6]={\
  direction=\"l\",\
 },\
 [0x169C7]={\
  direction=\"l\",\
 },\
 [0x169C8]={\
  direction=\"l\",\
 },\
 [0x169C9]={\
  direction=\"l\",\
 },\
 [0x169CA]={\
  direction=\"l\",\
 },\
 [0x169CB]={\
  direction=\"l\",\
 },\
 [0x169CC]={\
  direction=\"l\",\
 },\
 [0x169CD]={\
  direction=\"l\",\
 },\
 [0x169CE]={\
  direction=\"l\",\
 },\
 [0x169CF]={\
  direction=\"l\",\
 },\
 [0x169D0]={\
  direction=\"l\",\
 },\
 [0x169D1]={\
  direction=\"l\",\
 },\
 [0x169D2]={\
  direction=\"l\",\
 },\
 [0x169D3]={\
  direction=\"l\",\
 },\
 [0x169D4]={\
  direction=\"l\",\
 },\
 [0x169D5]={\
  direction=\"l\",\
 },\
 [0x169D6]={\
  direction=\"l\",\
 },\
 [0x169D7]={\
  direction=\"l\",\
 },\
 [0x169D8]={\
  direction=\"l\",\
 },\
 [0x169D9]={\
  direction=\"l\",\
 },\
 [0x169DA]={\
  direction=\"l\",\
 },\
 [0x169DB]={\
  direction=\"l\",\
 },\
 [0x169DC]={\
  direction=\"l\",\
 },\
 [0x169DD]={\
  direction=\"l\",\
 },\
 [0x169DE]={\
  direction=\"l\",\
 },\
 [0x169DF]={\
  direction=\"l\",\
 },\
 [0x169E0]={\
  direction=\"l\",\
 },\
 [0x169E1]={\
  direction=\"l\",\
 },\
 [0x169E2]={\
  direction=\"l\",\
 },\
 [0x169E3]={\
  direction=\"l\",\
 },\
 [0x169E4]={\
  direction=\"l\",\
 },\
 [0x169E5]={\
  direction=\"l\",\
 },\
 [0x169E6]={\
  direction=\"l\",\
 },\
 [0x169E7]={\
  direction=\"l\",\
 },\
 [0x169E8]={\
  direction=\"l\",\
 },\
 [0x169E9]={\
  direction=\"l\",\
 },\
 [0x169EA]={\
  direction=\"l\",\
 },\
 [0x169EB]={\
  direction=\"l\",\
 },\
 [0x169EC]={\
  direction=\"l\",\
 },\
 [0x169ED]={\
  direction=\"l\",\
 },\
 [0x169EE]={\
  direction=\"l\",\
 },\
 [0x169EF]={\
  direction=\"l\",\
 },\
 [0x169F0]={\
  direction=\"l\",\
 },\
 [0x169F1]={\
  direction=\"l\",\
 },\
 [0x169F2]={\
  direction=\"l\",\
 },\
 [0x169F3]={\
  direction=\"l\",\
 },\
 [0x169F4]={\
  direction=\"l\",\
 },\
 [0x169F5]={\
  direction=\"l\",\
 },\
 [0x169F6]={\
  direction=\"l\",\
 },\
 [0x169F7]={\
  direction=\"l\",\
 },\
 [0x169F8]={\
  direction=\"l\",\
 },\
 [0x169F9]={\
  direction=\"l\",\
 },\
 [0x169FA]={\
  direction=\"l\",\
 },\
 [0x169FB]={\
  direction=\"l\",\
 },\
 [0x169FC]={\
  direction=\"l\",\
 },\
 [0x169FD]={\
  direction=\"l\",\
 },\
 [0x169FE]={\
  direction=\"l\",\
 },\
 [0x169FF]={\
  direction=\"l\",\
 },\
 [0x16A00]={\
  direction=\"l\",\
 },\
 [0x16A01]={\
  direction=\"l\",\
 },\
 [0x16A02]={\
  direction=\"l\",\
 },\
 [0x16A03]={\
  direction=\"l\",\
 },\
 [0x16A04]={\
  direction=\"l\",\
 },\
 [0x16A05]={\
  direction=\"l\",\
 },\
 [0x16A06]={\
  direction=\"l\",\
 },\
 [0x16A07]={\
  direction=\"l\",\
 },\
 [0x16A08]={\
  direction=\"l\",\
 },\
 [0x16A09]={\
  direction=\"l\",\
 },\
 [0x16A0A]={\
  direction=\"l\",\
 },\
 [0x16A0B]={\
  direction=\"l\",\
 },\
 [0x16A0C]={\
  direction=\"l\",\
 },\
 [0x16A0D]={\
  direction=\"l\",\
 },\
 [0x16A0E]={\
  direction=\"l\",\
 },\
 [0x16A0F]={\
  direction=\"l\",\
 },\
 [0x16A10]={\
  direction=\"l\",\
 },\
 [0x16A11]={\
  direction=\"l\",\
 },\
 [0x16A12]={\
  direction=\"l\",\
 },\
 [0x16A13]={\
  direction=\"l\",\
 },\
 [0x16A14]={\
  direction=\"l\",\
 },\
 [0x16A15]={\
  direction=\"l\",\
 },\
 [0x16A16]={\
  direction=\"l\",\
 },\
 [0x16A17]={\
  direction=\"l\",\
 },\
 [0x16A18]={\
  direction=\"l\",\
 },\
 [0x16A19]={\
  direction=\"l\",\
 },\
 [0x16A1A]={\
  direction=\"l\",\
 },\
 [0x16A1B]={\
  direction=\"l\",\
 },\
 [0x16A1C]={\
  direction=\"l\",\
 },\
 [0x16A1D]={\
  direction=\"l\",\
 },\
 [0x16A1E]={\
  direction=\"l\",\
 },\
 [0x16A1F]={\
  direction=\"l\",\
 },\
 [0x16A20]={\
  direction=\"l\",\
 },\
 [0x16A21]={\
  direction=\"l\",\
 },\
 [0x16A22]={\
  direction=\"l\",\
 },\
 [0x16A23]={\
  direction=\"l\",\
 },\
 [0x16A24]={\
  direction=\"l\",\
 },\
 [0x16A25]={\
  direction=\"l\",\
 },\
 [0x16A26]={\
  direction=\"l\",\
 },\
 [0x16A27]={\
  direction=\"l\",\
 },\
 [0x16A28]={\
  direction=\"l\",\
 },\
 [0x16A29]={\
  direction=\"l\",\
 },\
 [0x16A2A]={\
  direction=\"l\",\
 },\
 [0x16A2B]={\
  direction=\"l\",\
 },\
 [0x16A2C]={\
  direction=\"l\",\
 },\
 [0x16A2D]={\
  direction=\"l\",\
 },\
 [0x16A2E]={\
  direction=\"l\",\
 },\
 [0x16A2F]={\
  direction=\"l\",\
 },\
 [0x16A30]={\
  direction=\"l\",\
 },\
 [0x16A31]={\
  direction=\"l\",\
 },\
 [0x16A32]={\
  direction=\"l\",\
 },\
 [0x16A33]={\
  direction=\"l\",\
 },\
 [0x16A34]={\
  direction=\"l\",\
 },\
 [0x16A35]={\
  direction=\"l\",\
 },\
 [0x16A36]={\
  direction=\"l\",\
 },\
 [0x16A37]={\
  direction=\"l\",\
 },\
 [0x16A38]={\
  direction=\"l\",\
 },\
 [0x16F00]={\
  direction=\"l\",\
 },\
 [0x16F01]={\
  direction=\"l\",\
 },\
 [0x16F02]={\
  direction=\"l\",\
 },\
 [0x16F03]={\
  direction=\"l\",\
 },\
 [0x16F04]={\
  direction=\"l\",\
 },\
 [0x16F05]={\
  direction=\"l\",\
 },\
 [0x16F06]={\
  direction=\"l\",\
 },\
 [0x16F07]={\
  direction=\"l\",\
 },\
 [0x16F08]={\
  direction=\"l\",\
 },\
 [0x16F09]={\
  direction=\"l\",\
 },\
 [0x16F0A]={\
  direction=\"l\",\
 },\
 [0x16F0B]={\
  direction=\"l\",\
 },\
 [0x16F0C]={\
  direction=\"l\",\
 },\
 [0x16F0D]={\
  direction=\"l\",\
 },\
 [0x16F0E]={\
  direction=\"l\",\
 },\
 [0x16F0F]={\
  direction=\"l\",\
 },\
 [0x16F10]={\
  direction=\"l\",\
 },\
 [0x16F11]={\
  direction=\"l\",\
 },\
 [0x16F12]={\
  direction=\"l\",\
 },\
 [0x16F13]={\
  direction=\"l\",\
 },\
 [0x16F14]={\
  direction=\"l\",\
 },\
 [0x16F15]={\
  direction=\"l\",\
 },\
 [0x16F16]={\
  direction=\"l\",\
 },\
 [0x16F17]={\
  direction=\"l\",\
 },\
 [0x16F18]={\
  direction=\"l\",\
 },\
 [0x16F19]={\
  direction=\"l\",\
 },\
 [0x16F1A]={\
  direction=\"l\",\
 },\
 [0x16F1B]={\
  direction=\"l\",\
 },\
 [0x16F1C]={\
  direction=\"l\",\
 },\
 [0x16F1D]={\
  direction=\"l\",\
 },\
 [0x16F1E]={\
  direction=\"l\",\
 },\
 [0x16F1F]={\
  direction=\"l\",\
 },\
 [0x16F20]={\
  direction=\"l\",\
 },\
 [0x16F21]={\
  direction=\"l\",\
 },\
 [0x16F22]={\
  direction=\"l\",\
 },\
 [0x16F23]={\
  direction=\"l\",\
 },\
 [0x16F24]={\
  direction=\"l\",\
 },\
 [0x16F25]={\
  direction=\"l\",\
 },\
 [0x16F26]={\
  direction=\"l\",\
 },\
 [0x16F27]={\
  direction=\"l\",\
 },\
 [0x16F28]={\
  direction=\"l\",\
 },\
 [0x16F29]={\
  direction=\"l\",\
 },\
 [0x16F2A]={\
  direction=\"l\",\
 },\
 [0x16F2B]={\
  direction=\"l\",\
 },\
 [0x16F2C]={\
  direction=\"l\",\
 },\
 [0x16F2D]={\
  direction=\"l\",\
 },\
 [0x16F2E]={\
  direction=\"l\",\
 },\
 [0x16F2F]={\
  direction=\"l\",\
 },\
 [0x16F30]={\
  direction=\"l\",\
 },\
 [0x16F31]={\
  direction=\"l\",\
 },\
 [0x16F32]={\
  direction=\"l\",\
 },\
 [0x16F33]={\
  direction=\"l\",\
 },\
 [0x16F34]={\
  direction=\"l\",\
 },\
 [0x16F35]={\
  direction=\"l\",\
 },\
 [0x16F36]={\
  direction=\"l\",\
 },\
 [0x16F37]={\
  direction=\"l\",\
 },\
 [0x16F38]={\
  direction=\"l\",\
 },\
 [0x16F39]={\
  direction=\"l\",\
 },\
 [0x16F3A]={\
  direction=\"l\",\
 },\
 [0x16F3B]={\
  direction=\"l\",\
 },\
 [0x16F3C]={\
  direction=\"l\",\
 },\
 [0x16F3D]={\
  direction=\"l\",\
 },\
 [0x16F3E]={\
  direction=\"l\",\
 },\
 [0x16F3F]={\
  direction=\"l\",\
 },\
 [0x16F40]={\
  direction=\"l\",\
 },\
 [0x16F41]={\
  direction=\"l\",\
 },\
 [0x16F42]={\
  direction=\"l\",\
 },\
 [0x16F43]={\
  direction=\"l\",\
 },\
 [0x16F44]={\
  direction=\"l\",\
 },\
 [0x16F50]={\
  direction=\"l\",\
 },\
 [0x16F51]={\
  direction=\"l\",\
 },\
 [0x16F52]={\
  direction=\"l\",\
 },\
 [0x16F53]={\
  direction=\"l\",\
 },\
 [0x16F54]={\
  direction=\"l\",\
 },\
 [0x16F55]={\
  direction=\"l\",\
 },\
 [0x16F56]={\
  direction=\"l\",\
 },\
 [0x16F57]={\
  direction=\"l\",\
 },\
 [0x16F58]={\
  direction=\"l\",\
 },\
 [0x16F59]={\
  direction=\"l\",\
 },\
 [0x16F5A]={\
  direction=\"l\",\
 },\
 [0x16F5B]={\
  direction=\"l\",\
 },\
 [0x16F5C]={\
  direction=\"l\",\
 },\
 [0x16F5D]={\
  direction=\"l\",\
 },\
 [0x16F5E]={\
  direction=\"l\",\
 },\
 [0x16F5F]={\
  direction=\"l\",\
 },\
 [0x16F60]={\
  direction=\"l\",\
 },\
 [0x16F61]={\
  direction=\"l\",\
 },\
 [0x16F62]={\
  direction=\"l\",\
 },\
 [0x16F63]={\
  direction=\"l\",\
 },\
 [0x16F64]={\
  direction=\"l\",\
 },\
 [0x16F65]={\
  direction=\"l\",\
 },\
 [0x16F66]={\
  direction=\"l\",\
 },\
 [0x16F67]={\
  direction=\"l\",\
 },\
 [0x16F68]={\
  direction=\"l\",\
 },\
 [0x16F69]={\
  direction=\"l\",\
 },\
 [0x16F6A]={\
  direction=\"l\",\
 },\
 [0x16F6B]={\
  direction=\"l\",\
 },\
 [0x16F6C]={\
  direction=\"l\",\
 },\
 [0x16F6D]={\
  direction=\"l\",\
 },\
 [0x16F6E]={\
  direction=\"l\",\
 },\
 [0x16F6F]={\
  direction=\"l\",\
 },\
 [0x16F70]={\
  direction=\"l\",\
 },\
 [0x16F71]={\
  direction=\"l\",\
 },\
 [0x16F72]={\
  direction=\"l\",\
 },\
 [0x16F73]={\
  direction=\"l\",\
 },\
 [0x16F74]={\
  direction=\"l\",\
 },\
 [0x16F75]={\
  direction=\"l\",\
 },\
 [0x16F76]={\
  direction=\"l\",\
 },\
 [0x16F77]={\
  direction=\"l\",\
 },\
 [0x16F78]={\
  direction=\"l\",\
 },\
 [0x16F79]={\
  direction=\"l\",\
 },\
 [0x16F7A]={\
  direction=\"l\",\
 },\
 [0x16F7B]={\
  direction=\"l\",\
 },\
 [0x16F7C]={\
  direction=\"l\",\
 },\
 [0x16F7D]={\
  direction=\"l\",\
 },\
 [0x16F7E]={\
  direction=\"l\",\
 },\
 [0x16F8F]={\
  direction=\"nsm\",\
 },\
 [0x16F90]={\
  direction=\"nsm\",\
 },\
 [0x16F91]={\
  direction=\"nsm\",\
 },\
 [0x16F92]={\
  direction=\"nsm\",\
 },\
 [0x16F93]={\
  direction=\"l\",\
 },\
 [0x16F94]={\
  direction=\"l\",\
 },\
 [0x16F95]={\
  direction=\"l\",\
 },\
 [0x16F96]={\
  direction=\"l\",\
 },\
 [0x16F97]={\
  direction=\"l\",\
 },\
 [0x16F98]={\
  direction=\"l\",\
 },\
 [0x16F99]={\
  direction=\"l\",\
 },\
 [0x16F9A]={\
  direction=\"l\",\
 },\
 [0x16F9B]={\
  direction=\"l\",\
 },\
 [0x16F9C]={\
  direction=\"l\",\
 },\
 [0x16F9D]={\
  direction=\"l\",\
 },\
 [0x16F9E]={\
  direction=\"l\",\
 },\
 [0x16F9F]={\
  direction=\"l\",\
 },\
 [0x1B000]={\
  direction=\"l\",\
 },\
 [0x1B001]={\
  direction=\"l\",\
 },\
 [0x1D000]={\
  direction=\"l\",\
 },\
 [0x1D001]={\
  direction=\"l\",\
 },\
 [0x1D002]={\
  direction=\"l\",\
 },\
 [0x1D003]={\
  direction=\"l\",\
 },\
 [0x1D004]={\
  direction=\"l\",\
 },\
 [0x1D005]={\
  direction=\"l\",\
 },\
 [0x1D006]={\
  direction=\"l\",\
 },\
 [0x1D007]={\
  direction=\"l\",\
 },\
 [0x1D008]={\
  direction=\"l\",\
 },\
 [0x1D009]={\
  direction=\"l\",\
 },\
 [0x1D00A]={\
  direction=\"l\",\
 },\
 [0x1D00B]={\
  direction=\"l\",\
 },\
 [0x1D00C]={\
  direction=\"l\",\
 },\
 [0x1D00D]={\
  direction=\"l\",\
 },\
 [0x1D00E]={\
  direction=\"l\",\
 },\
 [0x1D00F]={\
  direction=\"l\",\
 },\
 [0x1D010]={\
  direction=\"l\",\
 },\
 [0x1D011]={\
  direction=\"l\",\
 },\
 [0x1D012]={\
  direction=\"l\",\
 },\
 [0x1D013]={\
  direction=\"l\",\
 },\
 [0x1D014]={\
  direction=\"l\",\
 },\
 [0x1D015]={\
  direction=\"l\",\
 },\
 [0x1D016]={\
  direction=\"l\",\
 },\
 [0x1D017]={\
  direction=\"l\",\
 },\
 [0x1D018]={\
  direction=\"l\",\
 },\
 [0x1D019]={\
  direction=\"l\",\
 },\
 [0x1D01A]={\
  direction=\"l\",\
 },\
 [0x1D01B]={\
  direction=\"l\",\
 },\
 [0x1D01C]={\
  direction=\"l\",\
 },\
 [0x1D01D]={\
  direction=\"l\",\
 },\
 [0x1D01E]={\
  direction=\"l\",\
 },\
 [0x1D01F]={\
  direction=\"l\",\
 },\
 [0x1D020]={\
  direction=\"l\",\
 },\
 [0x1D021]={\
  direction=\"l\",\
 },\
 [0x1D022]={\
  direction=\"l\",\
 },\
 [0x1D023]={\
  direction=\"l\",\
 },\
 [0x1D024]={\
  direction=\"l\",\
 },\
 [0x1D025]={\
  direction=\"l\",\
 },\
 [0x1D026]={\
  direction=\"l\",\
 },\
 [0x1D027]={\
  direction=\"l\",\
 },\
 [0x1D028]={\
  direction=\"l\",\
 },\
 [0x1D029]={\
  direction=\"l\",\
 },\
 [0x1D02A]={\
  direction=\"l\",\
 },\
 [0x1D02B]={\
  direction=\"l\",\
 },\
 [0x1D02C]={\
  direction=\"l\",\
 },\
 [0x1D02D]={\
  direction=\"l\",\
 },\
 [0x1D02E]={\
  direction=\"l\",\
 },\
 [0x1D02F]={\
  direction=\"l\",\
 },\
 [0x1D030]={\
  direction=\"l\",\
 },\
 [0x1D031]={\
  direction=\"l\",\
 },\
 [0x1D032]={\
  direction=\"l\",\
 },\
 [0x1D033]={\
  direction=\"l\",\
 },\
 [0x1D034]={\
  direction=\"l\",\
 },\
 [0x1D035]={\
  direction=\"l\",\
 },\
 [0x1D036]={\
  direction=\"l\",\
 },\
 [0x1D037]={\
  direction=\"l\",\
 },\
 [0x1D038]={\
  direction=\"l\",\
 },\
 [0x1D039]={\
  direction=\"l\",\
 },\
 [0x1D03A]={\
  direction=\"l\",\
 },\
 [0x1D03B]={\
  direction=\"l\",\
 },\
 [0x1D03C]={\
  direction=\"l\",\
 },\
 [0x1D03D]={\
  direction=\"l\",\
 },\
 [0x1D03E]={\
  direction=\"l\",\
 },\
 [0x1D03F]={\
  direction=\"l\",\
 },\
 [0x1D040]={\
  direction=\"l\",\
 },\
 [0x1D041]={\
  direction=\"l\",\
 },\
 [0x1D042]={\
  direction=\"l\",\
 },\
 [0x1D043]={\
  direction=\"l\",\
 },\
 [0x1D044]={\
  direction=\"l\",\
 },\
 [0x1D045]={\
  direction=\"l\",\
 },\
 [0x1D046]={\
  direction=\"l\",\
 },\
 [0x1D047]={\
  direction=\"l\",\
 },\
 [0x1D048]={\
  direction=\"l\",\
 },\
 [0x1D049]={\
  direction=\"l\",\
 },\
 [0x1D04A]={\
  direction=\"l\",\
 },\
 [0x1D04B]={\
  direction=\"l\",\
 },\
 [0x1D04C]={\
  direction=\"l\",\
 },\
 [0x1D04D]={\
  direction=\"l\",\
 },\
 [0x1D04E]={\
  direction=\"l\",\
 },\
 [0x1D04F]={\
  direction=\"l\",\
 },\
 [0x1D050]={\
  direction=\"l\",\
 },\
 [0x1D051]={\
  direction=\"l\",\
 },\
 [0x1D052]={\
  direction=\"l\",\
 },\
 [0x1D053]={\
  direction=\"l\",\
 },\
 [0x1D054]={\
  direction=\"l\",\
 },\
 [0x1D055]={\
  direction=\"l\",\
 },\
 [0x1D056]={\
  direction=\"l\",\
 },\
 [0x1D057]={\
  direction=\"l\",\
 },\
 [0x1D058]={\
  direction=\"l\",\
 },\
 [0x1D059]={\
  direction=\"l\",\
 },\
 [0x1D05A]={\
  direction=\"l\",\
 },\
 [0x1D05B]={\
  direction=\"l\",\
 },\
 [0x1D05C]={\
  direction=\"l\",\
 },\
 [0x1D05D]={\
  direction=\"l\",\
 },\
 [0x1D05E]={\
  direction=\"l\",\
 },\
 [0x1D05F]={\
  direction=\"l\",\
 },\
 [0x1D060]={\
  direction=\"l\",\
 },\
 [0x1D061]={\
  direction=\"l\",\
 },\
 [0x1D062]={\
  direction=\"l\",\
 },\
 [0x1D063]={\
  direction=\"l\",\
 },\
 [0x1D064]={\
  direction=\"l\",\
 },\
 [0x1D065]={\
  direction=\"l\",\
 },\
 [0x1D066]={\
  direction=\"l\",\
 },\
 [0x1D067]={\
  direction=\"l\",\
 },\
 [0x1D068]={\
  direction=\"l\",\
 },\
 [0x1D069]={\
  direction=\"l\",\
 },\
 [0x1D06A]={\
  direction=\"l\",\
 },\
 [0x1D06B]={\
  direction=\"l\",\
 },\
 [0x1D06C]={\
  direction=\"l\",\
 },\
 [0x1D06D]={\
  direction=\"l\",\
 },\
 [0x1D06E]={\
  direction=\"l\",\
 },\
 [0x1D06F]={\
  direction=\"l\",\
 },\
 [0x1D070]={\
  direction=\"l\",\
 },\
 [0x1D071]={\
  direction=\"l\",\
 },\
 [0x1D072]={\
  direction=\"l\",\
 },\
 [0x1D073]={\
  direction=\"l\",\
 },\
 [0x1D074]={\
  direction=\"l\",\
 },\
 [0x1D075]={\
  direction=\"l\",\
 },\
 [0x1D076]={\
  direction=\"l\",\
 },\
 [0x1D077]={\
  direction=\"l\",\
 },\
 [0x1D078]={\
  direction=\"l\",\
 },\
 [0x1D079]={\
  direction=\"l\",\
 },\
 [0x1D07A]={\
  direction=\"l\",\
 },\
 [0x1D07B]={\
  direction=\"l\",\
 },\
 [0x1D07C]={\
  direction=\"l\",\
 },\
 [0x1D07D]={\
  direction=\"l\",\
 },\
 [0x1D07E]={\
  direction=\"l\",\
 },\
 [0x1D07F]={\
  direction=\"l\",\
 },\
 [0x1D080]={\
  direction=\"l\",\
 },\
 [0x1D081]={\
  direction=\"l\",\
 },\
 [0x1D082]={\
  direction=\"l\",\
 },\
 [0x1D083]={\
  direction=\"l\",\
 },\
 [0x1D084]={\
  direction=\"l\",\
 },\
 [0x1D085]={\
  direction=\"l\",\
 },\
 [0x1D086]={\
  direction=\"l\",\
 },\
 [0x1D087]={\
  direction=\"l\",\
 },\
 [0x1D088]={\
  direction=\"l\",\
 },\
 [0x1D089]={\
  direction=\"l\",\
 },\
 [0x1D08A]={\
  direction=\"l\",\
 },\
 [0x1D08B]={\
  direction=\"l\",\
 },\
 [0x1D08C]={\
  direction=\"l\",\
 },\
 [0x1D08D]={\
  direction=\"l\",\
 },\
 [0x1D08E]={\
  direction=\"l\",\
 },\
 [0x1D08F]={\
  direction=\"l\",\
 },\
 [0x1D090]={\
  direction=\"l\",\
 },\
 [0x1D091]={\
  direction=\"l\",\
 },\
 [0x1D092]={\
  direction=\"l\",\
 },\
 [0x1D093]={\
  direction=\"l\",\
 },\
 [0x1D094]={\
  direction=\"l\",\
 },\
 [0x1D095]={\
  direction=\"l\",\
 },\
 [0x1D096]={\
  direction=\"l\",\
 },\
 [0x1D097]={\
  direction=\"l\",\
 },\
 [0x1D098]={\
  direction=\"l\",\
 },\
 [0x1D099]={\
  direction=\"l\",\
 },\
 [0x1D09A]={\
  direction=\"l\",\
 },\
 [0x1D09B]={\
  direction=\"l\",\
 },\
 [0x1D09C]={\
  direction=\"l\",\
 },\
 [0x1D09D]={\
  direction=\"l\",\
 },\
 [0x1D09E]={\
  direction=\"l\",\
 },\
 [0x1D09F]={\
  direction=\"l\",\
 },\
 [0x1D0A0]={\
  direction=\"l\",\
 },\
 [0x1D0A1]={\
  direction=\"l\",\
 },\
 [0x1D0A2]={\
  direction=\"l\",\
 },\
 [0x1D0A3]={\
  direction=\"l\",\
 },\
 [0x1D0A4]={\
  direction=\"l\",\
 },\
 [0x1D0A5]={\
  direction=\"l\",\
 },\
 [0x1D0A6]={\
  direction=\"l\",\
 },\
 [0x1D0A7]={\
  direction=\"l\",\
 },\
 [0x1D0A8]={\
  direction=\"l\",\
 },\
 [0x1D0A9]={\
  direction=\"l\",\
 },\
 [0x1D0AA]={\
  direction=\"l\",\
 },\
 [0x1D0AB]={\
  direction=\"l\",\
 },\
 [0x1D0AC]={\
  direction=\"l\",\
 },\
 [0x1D0AD]={\
  direction=\"l\",\
 },\
 [0x1D0AE]={\
  direction=\"l\",\
 },\
 [0x1D0AF]={\
  direction=\"l\",\
 },\
 [0x1D0B0]={\
  direction=\"l\",\
 },\
 [0x1D0B1]={\
  direction=\"l\",\
 },\
 [0x1D0B2]={\
  direction=\"l\",\
 },\
 [0x1D0B3]={\
  direction=\"l\",\
 },\
 [0x1D0B4]={\
  direction=\"l\",\
 },\
 [0x1D0B5]={\
  direction=\"l\",\
 },\
 [0x1D0B6]={\
  direction=\"l\",\
 },\
 [0x1D0B7]={\
  direction=\"l\",\
 },\
 [0x1D0B8]={\
  direction=\"l\",\
 },\
 [0x1D0B9]={\
  direction=\"l\",\
 },\
 [0x1D0BA]={\
  direction=\"l\",\
 },\
 [0x1D0BB]={\
  direction=\"l\",\
 },\
 [0x1D0BC]={\
  direction=\"l\",\
 },\
 [0x1D0BD]={\
  direction=\"l\",\
 },\
 [0x1D0BE]={\
  direction=\"l\",\
 },\
 [0x1D0BF]={\
  direction=\"l\",\
 },\
 [0x1D0C0]={\
  direction=\"l\",\
 },\
 [0x1D0C1]={\
  direction=\"l\",\
 },\
 [0x1D0C2]={\
  direction=\"l\",\
 },\
 [0x1D0C3]={\
  direction=\"l\",\
 },\
 [0x1D0C4]={\
  direction=\"l\",\
 },\
 [0x1D0C5]={\
  direction=\"l\",\
 },\
 [0x1D0C6]={\
  direction=\"l\",\
 },\
 [0x1D0C7]={\
  direction=\"l\",\
 },\
 [0x1D0C8]={\
  direction=\"l\",\
 },\
 [0x1D0C9]={\
  direction=\"l\",\
 },\
 [0x1D0CA]={\
  direction=\"l\",\
 },\
 [0x1D0CB]={\
  direction=\"l\",\
 },\
 [0x1D0CC]={\
  direction=\"l\",\
 },\
 [0x1D0CD]={\
  direction=\"l\",\
 },\
 [0x1D0CE]={\
  direction=\"l\",\
 },\
 [0x1D0CF]={\
  direction=\"l\",\
 },\
 [0x1D0D0]={\
  direction=\"l\",\
 },\
 [0x1D0D1]={\
  direction=\"l\",\
 },\
 [0x1D0D2]={\
  direction=\"l\",\
 },\
 [0x1D0D3]={\
  direction=\"l\",\
 },\
 [0x1D0D4]={\
  direction=\"l\",\
 },\
 [0x1D0D5]={\
  direction=\"l\",\
 },\
 [0x1D0D6]={\
  direction=\"l\",\
 },\
 [0x1D0D7]={\
  direction=\"l\",\
 },\
 [0x1D0D8]={\
  direction=\"l\",\
 },\
 [0x1D0D9]={\
  direction=\"l\",\
 },\
 [0x1D0DA]={\
  direction=\"l\",\
 },\
 [0x1D0DB]={\
  direction=\"l\",\
 },\
 [0x1D0DC]={\
  direction=\"l\",\
 },\
 [0x1D0DD]={\
  direction=\"l\",\
 },\
 [0x1D0DE]={\
  direction=\"l\",\
 },\
 [0x1D0DF]={\
  direction=\"l\",\
 },\
 [0x1D0E0]={\
  direction=\"l\",\
 },\
 [0x1D0E1]={\
  direction=\"l\",\
 },\
 [0x1D0E2]={\
  direction=\"l\",\
 },\
 [0x1D0E3]={\
  direction=\"l\",\
 },\
 [0x1D0E4]={\
  direction=\"l\",\
 },\
 [0x1D0E5]={\
  direction=\"l\",\
 },\
 [0x1D0E6]={\
  direction=\"l\",\
 },\
 [0x1D0E7]={\
  direction=\"l\",\
 },\
 [0x1D0E8]={\
  direction=\"l\",\
 },\
 [0x1D0E9]={\
  direction=\"l\",\
 },\
 [0x1D0EA]={\
  direction=\"l\",\
 },\
 [0x1D0EB]={\
  direction=\"l\",\
 },\
 [0x1D0EC]={\
  direction=\"l\",\
 },\
 [0x1D0ED]={\
  direction=\"l\",\
 },\
 [0x1D0EE]={\
  direction=\"l\",\
 },\
 [0x1D0EF]={\
  direction=\"l\",\
 },\
 [0x1D0F0]={\
  direction=\"l\",\
 },\
 [0x1D0F1]={\
  direction=\"l\",\
 },\
 [0x1D0F2]={\
  direction=\"l\",\
 },\
 [0x1D0F3]={\
  direction=\"l\",\
 },\
 [0x1D0F4]={\
  direction=\"l\",\
 },\
 [0x1D0F5]={\
  direction=\"l\",\
 },\
 [0x1D100]={\
  direction=\"l\",\
 },\
 [0x1D101]={\
  direction=\"l\",\
 },\
 [0x1D102]={\
  direction=\"l\",\
 },\
 [0x1D103]={\
  direction=\"l\",\
 },\
 [0x1D104]={\
  direction=\"l\",\
 },\
 [0x1D105]={\
  direction=\"l\",\
 },\
 [0x1D106]={\
  direction=\"l\",\
 },\
 [0x1D107]={\
  direction=\"l\",\
 },\
 [0x1D108]={\
  direction=\"l\",\
 },\
 [0x1D109]={\
  direction=\"l\",\
 },\
 [0x1D10A]={\
  direction=\"l\",\
 },\
 [0x1D10B]={\
  direction=\"l\",\
 },\
 [0x1D10C]={\
  direction=\"l\",\
 },\
 [0x1D10D]={\
  direction=\"l\",\
 },\
 [0x1D10E]={\
  direction=\"l\",\
 },\
 [0x1D10F]={\
  direction=\"l\",\
 },\
 [0x1D110]={\
  direction=\"l\",\
 },\
 [0x1D111]={\
  direction=\"l\",\
 },\
 [0x1D112]={\
  direction=\"l\",\
 },\
 [0x1D113]={\
  direction=\"l\",\
 },\
 [0x1D114]={\
  direction=\"l\",\
 },\
 [0x1D115]={\
  direction=\"l\",\
 },\
 [0x1D116]={\
  direction=\"l\",\
 },\
 [0x1D117]={\
  direction=\"l\",\
 },\
 [0x1D118]={\
  direction=\"l\",\
 },\
 [0x1D119]={\
  direction=\"l\",\
 },\
 [0x1D11A]={\
  direction=\"l\",\
 },\
 [0x1D11B]={\
  direction=\"l\",\
 },\
 [0x1D11C]={\
  direction=\"l\",\
 },\
 [0x1D11D]={\
  direction=\"l\",\
 },\
 [0x1D11E]={\
  direction=\"l\",\
 },\
 [0x1D11F]={\
  direction=\"l\",\
 },\
 [0x1D120]={\
  direction=\"l\",\
 },\
 [0x1D121]={\
  direction=\"l\",\
 },\
 [0x1D122]={\
  direction=\"l\",\
 },\
 [0x1D123]={\
  direction=\"l\",\
 },\
 [0x1D124]={\
  direction=\"l\",\
 },\
 [0x1D125]={\
  direction=\"l\",\
 },\
 [0x1D126]={\
  direction=\"l\",\
 },\
 [0x1D129]={\
  direction=\"l\",\
 },\
 [0x1D12A]={\
  direction=\"l\",\
 },\
 [0x1D12B]={\
  direction=\"l\",\
 },\
 [0x1D12C]={\
  direction=\"l\",\
 },\
 [0x1D12D]={\
  direction=\"l\",\
 },\
 [0x1D12E]={\
  direction=\"l\",\
 },\
 [0x1D12F]={\
  direction=\"l\",\
 },\
 [0x1D130]={\
  direction=\"l\",\
 },\
 [0x1D131]={\
  direction=\"l\",\
 },\
 [0x1D132]={\
  direction=\"l\",\
 },\
 [0x1D133]={\
  direction=\"l\",\
 },\
 [0x1D134]={\
  direction=\"l\",\
 },\
 [0x1D135]={\
  direction=\"l\",\
 },\
 [0x1D136]={\
  direction=\"l\",\
 },\
 [0x1D137]={\
  direction=\"l\",\
 },\
 [0x1D138]={\
  direction=\"l\",\
 },\
 [0x1D139]={\
  direction=\"l\",\
 },\
 [0x1D13A]={\
  direction=\"l\",\
 },\
 [0x1D13B]={\
  direction=\"l\",\
 },\
 [0x1D13C]={\
  direction=\"l\",\
 },\
 [0x1D13D]={\
  direction=\"l\",\
 },\
 [0x1D13E]={\
  direction=\"l\",\
 },\
 [0x1D13F]={\
  direction=\"l\",\
 },\
 [0x1D140]={\
  direction=\"l\",\
 },\
 [0x1D141]={\
  direction=\"l\",\
 },\
 [0x1D142]={\
  direction=\"l\",\
 },\
 [0x1D143]={\
  direction=\"l\",\
 },\
 [0x1D144]={\
  direction=\"l\",\
 },\
 [0x1D145]={\
  direction=\"l\",\
 },\
 [0x1D146]={\
  direction=\"l\",\
 },\
 [0x1D147]={\
  direction=\"l\",\
 },\
 [0x1D148]={\
  direction=\"l\",\
 },\
 [0x1D149]={\
  direction=\"l\",\
 },\
 [0x1D14A]={\
  direction=\"l\",\
 },\
 [0x1D14B]={\
  direction=\"l\",\
 },\
 [0x1D14C]={\
  direction=\"l\",\
 },\
 [0x1D14D]={\
  direction=\"l\",\
 },\
 [0x1D14E]={\
  direction=\"l\",\
 },\
 [0x1D14F]={\
  direction=\"l\",\
 },\
 [0x1D150]={\
  direction=\"l\",\
 },\
 [0x1D151]={\
  direction=\"l\",\
 },\
 [0x1D152]={\
  direction=\"l\",\
 },\
 [0x1D153]={\
  direction=\"l\",\
 },\
 [0x1D154]={\
  direction=\"l\",\
 },\
 [0x1D155]={\
  direction=\"l\",\
 },\
 [0x1D156]={\
  direction=\"l\",\
 },\
 [0x1D157]={\
  direction=\"l\",\
 },\
 [0x1D158]={\
  direction=\"l\",\
 },\
 [0x1D159]={\
  direction=\"l\",\
 },\
 [0x1D15A]={\
  direction=\"l\",\
 },\
 [0x1D15B]={\
  direction=\"l\",\
 },\
 [0x1D15C]={\
  direction=\"l\",\
 },\
 [0x1D15D]={\
  direction=\"l\",\
 },\
 [0x1D15E]={\
  direction=\"l\",\
 },\
 [0x1D15F]={\
  direction=\"l\",\
 },\
 [0x1D160]={\
  direction=\"l\",\
 },\
 [0x1D161]={\
  direction=\"l\",\
 },\
 [0x1D162]={\
  direction=\"l\",\
 },\
 [0x1D163]={\
  direction=\"l\",\
 },\
 [0x1D164]={\
  direction=\"l\",\
 },\
 [0x1D165]={\
  direction=\"l\",\
 },\
 [0x1D166]={\
  direction=\"l\",\
 },\
 [0x1D167]={\
  direction=\"nsm\",\
 },\
 [0x1D168]={\
  direction=\"nsm\",\
 },\
 [0x1D169]={\
  direction=\"nsm\",\
 },\
 [0x1D16A]={\
  direction=\"l\",\
 },\
 [0x1D16B]={\
  direction=\"l\",\
 },\
 [0x1D16C]={\
  direction=\"l\",\
 },\
 [0x1D16D]={\
  direction=\"l\",\
 },\
 [0x1D16E]={\
  direction=\"l\",\
 },\
 [0x1D16F]={\
  direction=\"l\",\
 },\
 [0x1D170]={\
  direction=\"l\",\
 },\
 [0x1D171]={\
  direction=\"l\",\
 },\
 [0x1D172]={\
  direction=\"l\",\
 },\
 [0x1D173]={\
  direction=\"bn\",\
 },\
 [0x1D174]={\
  direction=\"bn\",\
 },\
 [0x1D175]={\
  direction=\"bn\",\
 },\
 [0x1D176]={\
  direction=\"bn\",\
 },\
 [0x1D177]={\
  direction=\"bn\",\
 },\
 [0x1D178]={\
  direction=\"bn\",\
 },\
 [0x1D179]={\
  direction=\"bn\",\
 },\
 [0x1D17A]={\
  direction=\"bn\",\
 },\
 [0x1D17B]={\
  direction=\"nsm\",\
 },\
 [0x1D17C]={\
  direction=\"nsm\",\
 },\
 [0x1D17D]={\
  direction=\"nsm\",\
 },\
 [0x1D17E]={\
  direction=\"nsm\",\
 },\
 [0x1D17F]={\
  direction=\"nsm\",\
 },\
 [0x1D180]={\
  direction=\"nsm\",\
 },\
 [0x1D181]={\
  direction=\"nsm\",\
 },\
 [0x1D182]={\
  direction=\"nsm\",\
 },\
 [0x1D183]={\
  direction=\"l\",\
 },\
 [0x1D184]={\
  direction=\"l\",\
 },\
 [0x1D185]={\
  direction=\"nsm\",\
 },\
 [0x1D186]={\
  direction=\"nsm\",\
 },\
 [0x1D187]={\
  direction=\"nsm\",\
 },\
 [0x1D188]={\
  direction=\"nsm\",\
 },\
 [0x1D189]={\
  direction=\"nsm\",\
 },\
 [0x1D18A]={\
  direction=\"nsm\",\
 },\
 [0x1D18B]={\
  direction=\"nsm\",\
 },\
 [0x1D18C]={\
  direction=\"l\",\
 },\
 [0x1D18D]={\
  direction=\"l\",\
 },\
 [0x1D18E]={\
  direction=\"l\",\
 },\
 [0x1D18F]={\
  direction=\"l\",\
 },\
 [0x1D190]={\
  direction=\"l\",\
 },\
 [0x1D191]={\
  direction=\"l\",\
 },\
 [0x1D192]={\
  direction=\"l\",\
 },\
 [0x1D193]={\
  direction=\"l\",\
 },\
 [0x1D194]={\
  direction=\"l\",\
 },\
 [0x1D195]={\
  direction=\"l\",\
 },\
 [0x1D196]={\
  direction=\"l\",\
 },\
 [0x1D197]={\
  direction=\"l\",\
 },\
 [0x1D198]={\
  direction=\"l\",\
 },\
 [0x1D199]={\
  direction=\"l\",\
 },\
 [0x1D19A]={\
  direction=\"l\",\
 },\
 [0x1D19B]={\
  direction=\"l\",\
 },\
 [0x1D19C]={\
  direction=\"l\",\
 },\
 [0x1D19D]={\
  direction=\"l\",\
 },\
 [0x1D19E]={\
  direction=\"l\",\
 },\
 [0x1D19F]={\
  direction=\"l\",\
 },\
 [0x1D1A0]={\
  direction=\"l\",\
 },\
 [0x1D1A1]={\
  direction=\"l\",\
 },\
 [0x1D1A2]={\
  direction=\"l\",\
 },\
 [0x1D1A3]={\
  direction=\"l\",\
 },\
 [0x1D1A4]={\
  direction=\"l\",\
 },\
 [0x1D1A5]={\
  direction=\"l\",\
 },\
 [0x1D1A6]={\
  direction=\"l\",\
 },\
 [0x1D1A7]={\
  direction=\"l\",\
 },\
 [0x1D1A8]={\
  direction=\"l\",\
 },\
 [0x1D1A9]={\
  direction=\"l\",\
 },\
 [0x1D1AA]={\
  direction=\"nsm\",\
 },\
 [0x1D1AB]={\
  direction=\"nsm\",\
 },\
 [0x1D1AC]={\
  direction=\"nsm\",\
 },\
 [0x1D1AD]={\
  direction=\"nsm\",\
 },\
 [0x1D1AE]={\
  direction=\"l\",\
 },\
 [0x1D1AF]={\
  direction=\"l\",\
 },\
 [0x1D1B0]={\
  direction=\"l\",\
 },\
 [0x1D1B1]={\
  direction=\"l\",\
 },\
 [0x1D1B2]={\
  direction=\"l\",\
 },\
 [0x1D1B3]={\
  direction=\"l\",\
 },\
 [0x1D1B4]={\
  direction=\"l\",\
 },\
 [0x1D1B5]={\
  direction=\"l\",\
 },\
 [0x1D1B6]={\
  direction=\"l\",\
 },\
 [0x1D1B7]={\
  direction=\"l\",\
 },\
 [0x1D1B8]={\
  direction=\"l\",\
 },\
 [0x1D1B9]={\
  direction=\"l\",\
 },\
 [0x1D1BA]={\
  direction=\"l\",\
 },\
 [0x1D1BB]={\
  direction=\"l\",\
 },\
 [0x1D1BC]={\
  direction=\"l\",\
 },\
 [0x1D1BD]={\
  direction=\"l\",\
 },\
 [0x1D1BE]={\
  direction=\"l\",\
 },\
 [0x1D1BF]={\
  direction=\"l\",\
 },\
 [0x1D1C0]={\
  direction=\"l\",\
 },\
 [0x1D1C1]={\
  direction=\"l\",\
 },\
 [0x1D1C2]={\
  direction=\"l\",\
 },\
 [0x1D1C3]={\
  direction=\"l\",\
 },\
 [0x1D1C4]={\
  direction=\"l\",\
 },\
 [0x1D1C5]={\
  direction=\"l\",\
 },\
 [0x1D1C6]={\
  direction=\"l\",\
 },\
 [0x1D1C7]={\
  direction=\"l\",\
 },\
 [0x1D1C8]={\
  direction=\"l\",\
 },\
 [0x1D1C9]={\
  direction=\"l\",\
 },\
 [0x1D1CA]={\
  direction=\"l\",\
 },\
 [0x1D1CB]={\
  direction=\"l\",\
 },\
 [0x1D1CC]={\
  direction=\"l\",\
 },\
 [0x1D1CD]={\
  direction=\"l\",\
 },\
 [0x1D1CE]={\
  direction=\"l\",\
 },\
 [0x1D1CF]={\
  direction=\"l\",\
 },\
 [0x1D1D0]={\
  direction=\"l\",\
 },\
 [0x1D1D1]={\
  direction=\"l\",\
 },\
 [0x1D1D2]={\
  direction=\"l\",\
 },\
 [0x1D1D3]={\
  direction=\"l\",\
 },\
 [0x1D1D4]={\
  direction=\"l\",\
 },\
 [0x1D1D5]={\
  direction=\"l\",\
 },\
 [0x1D1D6]={\
  direction=\"l\",\
 },\
 [0x1D1D7]={\
  direction=\"l\",\
 },\
 [0x1D1D8]={\
  direction=\"l\",\
 },\
 [0x1D1D9]={\
  direction=\"l\",\
 },\
 [0x1D1DA]={\
  direction=\"l\",\
 },\
 [0x1D1DB]={\
  direction=\"l\",\
 },\
 [0x1D1DC]={\
  direction=\"l\",\
 },\
 [0x1D1DD]={\
  direction=\"l\",\
 },\
 [0x1D200]={\
  direction=\"on\",\
 },\
 [0x1D201]={\
  direction=\"on\",\
 },\
 [0x1D202]={\
  direction=\"on\",\
 },\
 [0x1D203]={\
  direction=\"on\",\
 },\
 [0x1D204]={\
  direction=\"on\",\
 },\
 [0x1D205]={\
  direction=\"on\",\
 },\
 [0x1D206]={\
  direction=\"on\",\
 },\
 [0x1D207]={\
  direction=\"on\",\
 },\
 [0x1D208]={\
  direction=\"on\",\
 },\
 [0x1D209]={\
  direction=\"on\",\
 },\
 [0x1D20A]={\
  direction=\"on\",\
 },\
 [0x1D20B]={\
  direction=\"on\",\
 },\
 [0x1D20C]={\
  direction=\"on\",\
 },\
 [0x1D20D]={\
  direction=\"on\",\
 },\
 [0x1D20E]={\
  direction=\"on\",\
 },\
 [0x1D20F]={\
  direction=\"on\",\
 },\
 [0x1D210]={\
  direction=\"on\",\
 },\
 [0x1D211]={\
  direction=\"on\",\
 },\
 [0x1D212]={\
  direction=\"on\",\
 },\
 [0x1D213]={\
  direction=\"on\",\
 },\
 [0x1D214]={\
  direction=\"on\",\
 },\
 [0x1D215]={\
  direction=\"on\",\
 },\
 [0x1D216]={\
  direction=\"on\",\
 },\
 [0x1D217]={\
  direction=\"on\",\
 },\
 [0x1D218]={\
  direction=\"on\",\
 },\
 [0x1D219]={\
  direction=\"on\",\
 },\
 [0x1D21A]={\
  direction=\"on\",\
 },\
 [0x1D21B]={\
  direction=\"on\",\
 },\
 [0x1D21C]={\
  direction=\"on\",\
 },\
 [0x1D21D]={\
  direction=\"on\",\
 },\
 [0x1D21E]={\
  direction=\"on\",\
 },\
 [0x1D21F]={\
  direction=\"on\",\
 },\
 [0x1D220]={\
  direction=\"on\",\
 },\
 [0x1D221]={\
  direction=\"on\",\
 },\
 [0x1D222]={\
  direction=\"on\",\
 },\
 [0x1D223]={\
  direction=\"on\",\
 },\
 [0x1D224]={\
  direction=\"on\",\
 },\
 [0x1D225]={\
  direction=\"on\",\
 },\
 [0x1D226]={\
  direction=\"on\",\
 },\
 [0x1D227]={\
  direction=\"on\",\
 },\
 [0x1D228]={\
  direction=\"on\",\
 },\
 [0x1D229]={\
  direction=\"on\",\
 },\
 [0x1D22A]={\
  direction=\"on\",\
 },\
 [0x1D22B]={\
  direction=\"on\",\
 },\
 [0x1D22C]={\
  direction=\"on\",\
 },\
 [0x1D22D]={\
  direction=\"on\",\
 },\
 [0x1D22E]={\
  direction=\"on\",\
 },\
 [0x1D22F]={\
  direction=\"on\",\
 },\
 [0x1D230]={\
  direction=\"on\",\
 },\
 [0x1D231]={\
  direction=\"on\",\
 },\
 [0x1D232]={\
  direction=\"on\",\
 },\
 [0x1D233]={\
  direction=\"on\",\
 },\
 [0x1D234]={\
  direction=\"on\",\
 },\
 [0x1D235]={\
  direction=\"on\",\
 },\
 [0x1D236]={\
  direction=\"on\",\
 },\
 [0x1D237]={\
  direction=\"on\",\
 },\
 [0x1D238]={\
  direction=\"on\",\
 },\
 [0x1D239]={\
  direction=\"on\",\
 },\
 [0x1D23A]={\
  direction=\"on\",\
 },\
 [0x1D23B]={\
  direction=\"on\",\
 },\
 [0x1D23C]={\
  direction=\"on\",\
 },\
 [0x1D23D]={\
  direction=\"on\",\
 },\
 [0x1D23E]={\
  direction=\"on\",\
 },\
 [0x1D23F]={\
  direction=\"on\",\
 },\
 [0x1D240]={\
  direction=\"on\",\
 },\
 [0x1D241]={\
  direction=\"on\",\
 },\
 [0x1D242]={\
  direction=\"nsm\",\
 },\
 [0x1D243]={\
  direction=\"nsm\",\
 },\
 [0x1D244]={\
  direction=\"nsm\",\
 },\
 [0x1D245]={\
  direction=\"on\",\
 },\
 [0x1D300]={\
  direction=\"on\",\
 },\
 [0x1D301]={\
  direction=\"on\",\
 },\
 [0x1D302]={\
  direction=\"on\",\
 },\
 [0x1D303]={\
  direction=\"on\",\
 },\
 [0x1D304]={\
  direction=\"on\",\
 },\
 [0x1D305]={\
  direction=\"on\",\
 },\
 [0x1D306]={\
  direction=\"on\",\
 },\
 [0x1D307]={\
  direction=\"on\",\
 },\
 [0x1D308]={\
  direction=\"on\",\
 },\
 [0x1D309]={\
  direction=\"on\",\
 },\
 [0x1D30A]={\
  direction=\"on\",\
 },\
 [0x1D30B]={\
  direction=\"on\",\
 },\
 [0x1D30C]={\
  direction=\"on\",\
 },\
 [0x1D30D]={\
  direction=\"on\",\
 },\
 [0x1D30E]={\
  direction=\"on\",\
 },\
 [0x1D30F]={\
  direction=\"on\",\
 },\
 [0x1D310]={\
  direction=\"on\",\
 },\
 [0x1D311]={\
  direction=\"on\",\
 },\
 [0x1D312]={\
  direction=\"on\",\
 },\
 [0x1D313]={\
  direction=\"on\",\
 },\
 [0x1D314]={\
  direction=\"on\",\
 },\
 [0x1D315]={\
  direction=\"on\",\
 },\
 [0x1D316]={\
  direction=\"on\",\
 },\
 [0x1D317]={\
  direction=\"on\",\
 },\
 [0x1D318]={\
  direction=\"on\",\
 },\
 [0x1D319]={\
  direction=\"on\",\
 },\
 [0x1D31A]={\
  direction=\"on\",\
 },\
 [0x1D31B]={\
  direction=\"on\",\
 },\
 [0x1D31C]={\
  direction=\"on\",\
 },\
 [0x1D31D]={\
  direction=\"on\",\
 },\
 [0x1D31E]={\
  direction=\"on\",\
 },\
 [0x1D31F]={\
  direction=\"on\",\
 },\
 [0x1D320]={\
  direction=\"on\",\
 },\
 [0x1D321]={\
  direction=\"on\",\
 },\
 [0x1D322]={\
  direction=\"on\",\
 },\
 [0x1D323]={\
  direction=\"on\",\
 },\
 [0x1D324]={\
  direction=\"on\",\
 },\
 [0x1D325]={\
  direction=\"on\",\
 },\
 [0x1D326]={\
  direction=\"on\",\
 },\
 [0x1D327]={\
  direction=\"on\",\
 },\
 [0x1D328]={\
  direction=\"on\",\
 },\
 [0x1D329]={\
  direction=\"on\",\
 },\
 [0x1D32A]={\
  direction=\"on\",\
 },\
 [0x1D32B]={\
  direction=\"on\",\
 },\
 [0x1D32C]={\
  direction=\"on\",\
 },\
 [0x1D32D]={\
  direction=\"on\",\
 },\
 [0x1D32E]={\
  direction=\"on\",\
 },\
 [0x1D32F]={\
  direction=\"on\",\
 },\
 [0x1D330]={\
  direction=\"on\",\
 },\
 [0x1D331]={\
  direction=\"on\",\
 },\
 [0x1D332]={\
  direction=\"on\",\
 },\
 [0x1D333]={\
  direction=\"on\",\
 },\
 [0x1D334]={\
  direction=\"on\",\
 },\
 [0x1D335]={\
  direction=\"on\",\
 },\
 [0x1D336]={\
  direction=\"on\",\
 },\
 [0x1D337]={\
  direction=\"on\",\
 },\
 [0x1D338]={\
  direction=\"on\",\
 },\
 [0x1D339]={\
  direction=\"on\",\
 },\
 [0x1D33A]={\
  direction=\"on\",\
 },\
 [0x1D33B]={\
  direction=\"on\",\
 },\
 [0x1D33C]={\
  direction=\"on\",\
 },\
 [0x1D33D]={\
  direction=\"on\",\
 },\
 [0x1D33E]={\
  direction=\"on\",\
 },\
 [0x1D33F]={\
  direction=\"on\",\
 },\
 [0x1D340]={\
  direction=\"on\",\
 },\
 [0x1D341]={\
  direction=\"on\",\
 },\
 [0x1D342]={\
  direction=\"on\",\
 },\
 [0x1D343]={\
  direction=\"on\",\
 },\
 [0x1D344]={\
  direction=\"on\",\
 },\
 [0x1D345]={\
  direction=\"on\",\
 },\
 [0x1D346]={\
  direction=\"on\",\
 },\
 [0x1D347]={\
  direction=\"on\",\
 },\
 [0x1D348]={\
  direction=\"on\",\
 },\
 [0x1D349]={\
  direction=\"on\",\
 },\
 [0x1D34A]={\
  direction=\"on\",\
 },\
 [0x1D34B]={\
  direction=\"on\",\
 },\
 [0x1D34C]={\
  direction=\"on\",\
 },\
 [0x1D34D]={\
  direction=\"on\",\
 },\
 [0x1D34E]={\
  direction=\"on\",\
 },\
 [0x1D34F]={\
  direction=\"on\",\
 },\
 [0x1D350]={\
  direction=\"on\",\
 },\
 [0x1D351]={\
  direction=\"on\",\
 },\
 [0x1D352]={\
  direction=\"on\",\
 },\
 [0x1D353]={\
  direction=\"on\",\
 },\
 [0x1D354]={\
  direction=\"on\",\
 },\
 [0x1D355]={\
  direction=\"on\",\
 },\
 [0x1D356]={\
  direction=\"on\",\
 },\
 [0x1D360]={\
  direction=\"l\",\
 },\
 [0x1D361]={\
  direction=\"l\",\
 },\
 [0x1D362]={\
  direction=\"l\",\
 },\
 [0x1D363]={\
  direction=\"l\",\
 },\
 [0x1D364]={\
  direction=\"l\",\
 },\
 [0x1D365]={\
  direction=\"l\",\
 },\
 [0x1D366]={\
  direction=\"l\",\
 },\
 [0x1D367]={\
  direction=\"l\",\
 },\
 [0x1D368]={\
  direction=\"l\",\
 },\
 [0x1D369]={\
  direction=\"l\",\
 },\
 [0x1D36A]={\
  direction=\"l\",\
 },\
 [0x1D36B]={\
  direction=\"l\",\
 },\
 [0x1D36C]={\
  direction=\"l\",\
 },\
 [0x1D36D]={\
  direction=\"l\",\
 },\
 [0x1D36E]={\
  direction=\"l\",\
 },\
 [0x1D36F]={\
  direction=\"l\",\
 },\
 [0x1D370]={\
  direction=\"l\",\
 },\
 [0x1D371]={\
  direction=\"l\",\
 },\
 [0x1D400]={\
  direction=\"l\",\
 },\
 [0x1D401]={\
  direction=\"l\",\
 },\
 [0x1D402]={\
  direction=\"l\",\
 },\
 [0x1D403]={\
  direction=\"l\",\
 },\
 [0x1D404]={\
  direction=\"l\",\
 },\
 [0x1D405]={\
  direction=\"l\",\
 },\
 [0x1D406]={\
  direction=\"l\",\
 },\
 [0x1D407]={\
  direction=\"l\",\
 },\
 [0x1D408]={\
  direction=\"l\",\
 },\
 [0x1D409]={\
  direction=\"l\",\
 },\
 [0x1D40A]={\
  direction=\"l\",\
 },\
 [0x1D40B]={\
  direction=\"l\",\
 },\
 [0x1D40C]={\
  direction=\"l\",\
 },\
 [0x1D40D]={\
  direction=\"l\",\
 },\
 [0x1D40E]={\
  direction=\"l\",\
 },\
 [0x1D40F]={\
  direction=\"l\",\
 },\
 [0x1D410]={\
  direction=\"l\",\
 },\
 [0x1D411]={\
  direction=\"l\",\
 },\
 [0x1D412]={\
  direction=\"l\",\
 },\
 [0x1D413]={\
  direction=\"l\",\
 },\
 [0x1D414]={\
  direction=\"l\",\
 },\
 [0x1D415]={\
  direction=\"l\",\
 },\
 [0x1D416]={\
  direction=\"l\",\
 },\
 [0x1D417]={\
  direction=\"l\",\
 },\
 [0x1D418]={\
  direction=\"l\",\
 },\
 [0x1D419]={\
  direction=\"l\",\
 },\
 [0x1D41A]={\
  direction=\"l\",\
 },\
 [0x1D41B]={\
  direction=\"l\",\
 },\
 [0x1D41C]={\
  direction=\"l\",\
 },\
 [0x1D41D]={\
  direction=\"l\",\
 },\
 [0x1D41E]={\
  direction=\"l\",\
 },\
 [0x1D41F]={\
  direction=\"l\",\
 },\
 [0x1D420]={\
  direction=\"l\",\
 },\
 [0x1D421]={\
  direction=\"l\",\
 },\
 [0x1D422]={\
  direction=\"l\",\
 },\
 [0x1D423]={\
  direction=\"l\",\
 },\
 [0x1D424]={\
  direction=\"l\",\
 },\
 [0x1D425]={\
  direction=\"l\",\
 },\
 [0x1D426]={\
  direction=\"l\",\
 },\
 [0x1D427]={\
  direction=\"l\",\
 },\
 [0x1D428]={\
  direction=\"l\",\
 },\
 [0x1D429]={\
  direction=\"l\",\
 },\
 [0x1D42A]={\
  direction=\"l\",\
 },\
 [0x1D42B]={\
  direction=\"l\",\
 },\
 [0x1D42C]={\
  direction=\"l\",\
 },\
 [0x1D42D]={\
  direction=\"l\",\
 },\
 [0x1D42E]={\
  direction=\"l\",\
 },\
 [0x1D42F]={\
  direction=\"l\",\
 },\
 [0x1D430]={\
  direction=\"l\",\
 },\
 [0x1D431]={\
  direction=\"l\",\
 },\
 [0x1D432]={\
  direction=\"l\",\
 },\
 [0x1D433]={\
  direction=\"l\",\
 },\
 [0x1D434]={\
  direction=\"l\",\
 },\
 [0x1D435]={\
  direction=\"l\",\
 },\
 [0x1D436]={\
  direction=\"l\",\
 },\
 [0x1D437]={\
  direction=\"l\",\
 },\
 [0x1D438]={\
  direction=\"l\",\
 },\
 [0x1D439]={\
  direction=\"l\",\
 },\
 [0x1D43A]={\
  direction=\"l\",\
 },\
 [0x1D43B]={\
  direction=\"l\",\
 },\
 [0x1D43C]={\
  direction=\"l\",\
 },\
 [0x1D43D]={\
  direction=\"l\",\
 },\
 [0x1D43E]={\
  direction=\"l\",\
 },\
 [0x1D43F]={\
  direction=\"l\",\
 },\
 [0x1D440]={\
  direction=\"l\",\
 },\
 [0x1D441]={\
  direction=\"l\",\
 },\
 [0x1D442]={\
  direction=\"l\",\
 },\
 [0x1D443]={\
  direction=\"l\",\
 },\
 [0x1D444]={\
  direction=\"l\",\
 },\
 [0x1D445]={\
  direction=\"l\",\
 },\
 [0x1D446]={\
  direction=\"l\",\
 },\
 [0x1D447]={\
  direction=\"l\",\
 },\
 [0x1D448]={\
  direction=\"l\",\
 },\
 [0x1D449]={\
  direction=\"l\",\
 },\
 [0x1D44A]={\
  direction=\"l\",\
 },\
 [0x1D44B]={\
  direction=\"l\",\
 },\
 [0x1D44C]={\
  direction=\"l\",\
 },\
 [0x1D44D]={\
  direction=\"l\",\
 },\
 [0x1D44E]={\
  direction=\"l\",\
 },\
 [0x1D44F]={\
  direction=\"l\",\
 },\
 [0x1D450]={\
  direction=\"l\",\
 },\
 [0x1D451]={\
  direction=\"l\",\
 },\
 [0x1D452]={\
  direction=\"l\",\
 },\
 [0x1D453]={\
  direction=\"l\",\
 },\
 [0x1D454]={\
  direction=\"l\",\
 },\
 [0x1D456]={\
  direction=\"l\",\
 },\
 [0x1D457]={\
  direction=\"l\",\
 },\
 [0x1D458]={\
  direction=\"l\",\
 },\
 [0x1D459]={\
  direction=\"l\",\
 },\
 [0x1D45A]={\
  direction=\"l\",\
 },\
 [0x1D45B]={\
  direction=\"l\",\
 },\
 [0x1D45C]={\
  direction=\"l\",\
 },\
 [0x1D45D]={\
  direction=\"l\",\
 },\
 [0x1D45E]={\
  direction=\"l\",\
 },\
 [0x1D45F]={\
  direction=\"l\",\
 },\
 [0x1D460]={\
  direction=\"l\",\
 },\
 [0x1D461]={\
  direction=\"l\",\
 },\
 [0x1D462]={\
  direction=\"l\",\
 },\
 [0x1D463]={\
  direction=\"l\",\
 },\
 [0x1D464]={\
  direction=\"l\",\
 },\
 [0x1D465]={\
  direction=\"l\",\
 },\
 [0x1D466]={\
  direction=\"l\",\
 },\
 [0x1D467]={\
  direction=\"l\",\
 },\
 [0x1D468]={\
  direction=\"l\",\
 },\
 [0x1D469]={\
  direction=\"l\",\
 },\
 [0x1D46A]={\
  direction=\"l\",\
 },\
 [0x1D46B]={\
  direction=\"l\",\
 },\
 [0x1D46C]={\
  direction=\"l\",\
 },\
 [0x1D46D]={\
  direction=\"l\",\
 },\
 [0x1D46E]={\
  direction=\"l\",\
 },\
 [0x1D46F]={\
  direction=\"l\",\
 },\
 [0x1D470]={\
  direction=\"l\",\
 },\
 [0x1D471]={\
  direction=\"l\",\
 },\
 [0x1D472]={\
  direction=\"l\",\
 },\
 [0x1D473]={\
  direction=\"l\",\
 },\
 [0x1D474]={\
  direction=\"l\",\
 },\
 [0x1D475]={\
  direction=\"l\",\
 },\
 [0x1D476]={\
  direction=\"l\",\
 },\
 [0x1D477]={\
  direction=\"l\",\
 },\
 [0x1D478]={\
  direction=\"l\",\
 },\
 [0x1D479]={\
  direction=\"l\",\
 },\
 [0x1D47A]={\
  direction=\"l\",\
 },\
 [0x1D47B]={\
  direction=\"l\",\
 },\
 [0x1D47C]={\
  direction=\"l\",\
 },\
 [0x1D47D]={\
  direction=\"l\",\
 },\
 [0x1D47E]={\
  direction=\"l\",\
 },\
 [0x1D47F]={\
  direction=\"l\",\
 },\
 [0x1D480]={\
  direction=\"l\",\
 },\
 [0x1D481]={\
  direction=\"l\",\
 },\
 [0x1D482]={\
  direction=\"l\",\
 },\
 [0x1D483]={\
  direction=\"l\",\
 },\
 [0x1D484]={\
  direction=\"l\",\
 },\
 [0x1D485]={\
  direction=\"l\",\
 },\
 [0x1D486]={\
  direction=\"l\",\
 },\
 [0x1D487]={\
  direction=\"l\",\
 },\
 [0x1D488]={\
  direction=\"l\",\
 },\
 [0x1D489]={\
  direction=\"l\",\
 },\
 [0x1D48A]={\
  direction=\"l\",\
 },\
 [0x1D48B]={\
  direction=\"l\",\
 },\
 [0x1D48C]={\
  direction=\"l\",\
 },\
 [0x1D48D]={\
  direction=\"l\",\
 },\
 [0x1D48E]={\
  direction=\"l\",\
 },\
 [0x1D48F]={\
  direction=\"l\",\
 },\
 [0x1D490]={\
  direction=\"l\",\
 },\
 [0x1D491]={\
  direction=\"l\",\
 },\
 [0x1D492]={\
  direction=\"l\",\
 },\
 [0x1D493]={\
  direction=\"l\",\
 },\
 [0x1D494]={\
  direction=\"l\",\
 },\
 [0x1D495]={\
  direction=\"l\",\
 },\
 [0x1D496]={\
  direction=\"l\",\
 },\
 [0x1D497]={\
  direction=\"l\",\
 },\
 [0x1D498]={\
  direction=\"l\",\
 },\
 [0x1D499]={\
  direction=\"l\",\
 },\
 [0x1D49A]={\
  direction=\"l\",\
 },\
 [0x1D49B]={\
  direction=\"l\",\
 },\
 [0x1D49C]={\
  direction=\"l\",\
 },\
 [0x1D49E]={\
  direction=\"l\",\
 },\
 [0x1D49F]={\
  direction=\"l\",\
 },\
 [0x1D4A2]={\
  direction=\"l\",\
 },\
 [0x1D4A5]={\
  direction=\"l\",\
 },\
 [0x1D4A6]={\
  direction=\"l\",\
 },\
 [0x1D4A9]={\
  direction=\"l\",\
 },\
 [0x1D4AA]={\
  direction=\"l\",\
 },\
 [0x1D4AB]={\
  direction=\"l\",\
 },\
 [0x1D4AC]={\
  direction=\"l\",\
 },\
 [0x1D4AE]={\
  direction=\"l\",\
 },\
 [0x1D4AF]={\
  direction=\"l\",\
 },\
 [0x1D4B0]={\
  direction=\"l\",\
 },\
 [0x1D4B1]={\
  direction=\"l\",\
 },\
 [0x1D4B2]={\
  direction=\"l\",\
 },\
 [0x1D4B3]={\
  direction=\"l\",\
 },\
 [0x1D4B4]={\
  direction=\"l\",\
 },\
 [0x1D4B5]={\
  direction=\"l\",\
 },\
 [0x1D4B6]={\
  direction=\"l\",\
 },\
 [0x1D4B7]={\
  direction=\"l\",\
 },\
 [0x1D4B8]={\
  direction=\"l\",\
 },\
 [0x1D4B9]={\
  direction=\"l\",\
 },\
 [0x1D4BB]={\
  direction=\"l\",\
 },\
 [0x1D4BD]={\
  direction=\"l\",\
 },\
 [0x1D4BE]={\
  direction=\"l\",\
 },\
 [0x1D4BF]={\
  direction=\"l\",\
 },\
 [0x1D4C0]={\
  direction=\"l\",\
 },\
 [0x1D4C1]={\
  direction=\"l\",\
 },\
 [0x1D4C2]={\
  direction=\"l\",\
 },\
 [0x1D4C3]={\
  direction=\"l\",\
 },\
 [0x1D4C5]={\
  direction=\"l\",\
 },\
 [0x1D4C6]={\
  direction=\"l\",\
 },\
 [0x1D4C7]={\
  direction=\"l\",\
 },\
 [0x1D4C8]={\
  direction=\"l\",\
 },\
 [0x1D4C9]={\
  direction=\"l\",\
 },\
 [0x1D4CA]={\
  direction=\"l\",\
 },\
 [0x1D4CB]={\
  direction=\"l\",\
 },\
 [0x1D4CC]={\
  direction=\"l\",\
 },\
 [0x1D4CD]={\
  direction=\"l\",\
 },\
 [0x1D4CE]={\
  direction=\"l\",\
 },\
 [0x1D4CF]={\
  direction=\"l\",\
 },\
 [0x1D4D0]={\
  direction=\"l\",\
 },\
 [0x1D4D1]={\
  direction=\"l\",\
 },\
 [0x1D4D2]={\
  direction=\"l\",\
 },\
 [0x1D4D3]={\
  direction=\"l\",\
 },\
 [0x1D4D4]={\
  direction=\"l\",\
 },\
 [0x1D4D5]={\
  direction=\"l\",\
 },\
 [0x1D4D6]={\
  direction=\"l\",\
 },\
 [0x1D4D7]={\
  direction=\"l\",\
 },\
 [0x1D4D8]={\
  direction=\"l\",\
 },\
 [0x1D4D9]={\
  direction=\"l\",\
 },\
 [0x1D4DA]={\
  direction=\"l\",\
 },\
 [0x1D4DB]={\
  direction=\"l\",\
 },\
 [0x1D4DC]={\
  direction=\"l\",\
 },\
 [0x1D4DD]={\
  direction=\"l\",\
 },\
 [0x1D4DE]={\
  direction=\"l\",\
 },\
 [0x1D4DF]={\
  direction=\"l\",\
 },\
 [0x1D4E0]={\
  direction=\"l\",\
 },\
 [0x1D4E1]={\
  direction=\"l\",\
 },\
 [0x1D4E2]={\
  direction=\"l\",\
 },\
 [0x1D4E3]={\
  direction=\"l\",\
 },\
 [0x1D4E4]={\
  direction=\"l\",\
 },\
 [0x1D4E5]={\
  direction=\"l\",\
 },\
 [0x1D4E6]={\
  direction=\"l\",\
 },\
 [0x1D4E7]={\
  direction=\"l\",\
 },\
 [0x1D4E8]={\
  direction=\"l\",\
 },\
 [0x1D4E9]={\
  direction=\"l\",\
 },\
 [0x1D4EA]={\
  direction=\"l\",\
 },\
 [0x1D4EB]={\
  direction=\"l\",\
 },\
 [0x1D4EC]={\
  direction=\"l\",\
 },\
 [0x1D4ED]={\
  direction=\"l\",\
 },\
 [0x1D4EE]={\
  direction=\"l\",\
 },\
 [0x1D4EF]={\
  direction=\"l\",\
 },\
 [0x1D4F0]={\
  direction=\"l\",\
 },\
 [0x1D4F1]={\
  direction=\"l\",\
 },\
 [0x1D4F2]={\
  direction=\"l\",\
 },\
 [0x1D4F3]={\
  direction=\"l\",\
 },\
 [0x1D4F4]={\
  direction=\"l\",\
 },\
 [0x1D4F5]={\
  direction=\"l\",\
 },\
 [0x1D4F6]={\
  direction=\"l\",\
 },\
 [0x1D4F7]={\
  direction=\"l\",\
 },\
 [0x1D4F8]={\
  direction=\"l\",\
 },\
 [0x1D4F9]={\
  direction=\"l\",\
 },\
 [0x1D4FA]={\
  direction=\"l\",\
 },\
 [0x1D4FB]={\
  direction=\"l\",\
 },\
 [0x1D4FC]={\
  direction=\"l\",\
 },\
 [0x1D4FD]={\
  direction=\"l\",\
 },\
 [0x1D4FE]={\
  direction=\"l\",\
 },\
 [0x1D4FF]={\
  direction=\"l\",\
 },\
 [0x1D500]={\
  direction=\"l\",\
 },\
 [0x1D501]={\
  direction=\"l\",\
 },\
 [0x1D502]={\
  direction=\"l\",\
 },\
 [0x1D503]={\
  direction=\"l\",\
 },\
 [0x1D504]={\
  direction=\"l\",\
 },\
 [0x1D505]={\
  direction=\"l\",\
 },\
 [0x1D507]={\
  direction=\"l\",\
 },\
 [0x1D508]={\
  direction=\"l\",\
 },\
 [0x1D509]={\
  direction=\"l\",\
 },\
 [0x1D50A]={\
  direction=\"l\",\
 },\
 [0x1D50D]={\
  direction=\"l\",\
 },\
 [0x1D50E]={\
  direction=\"l\",\
 },\
 [0x1D50F]={\
  direction=\"l\",\
 },\
 [0x1D510]={\
  direction=\"l\",\
 },\
 [0x1D511]={\
  direction=\"l\",\
 },\
 [0x1D512]={\
  direction=\"l\",\
 },\
 [0x1D513]={\
  direction=\"l\",\
 },\
 [0x1D514]={\
  direction=\"l\",\
 },\
 [0x1D516]={\
  direction=\"l\",\
 },\
 [0x1D517]={\
  direction=\"l\",\
 },\
 [0x1D518]={\
  direction=\"l\",\
 },\
 [0x1D519]={\
  direction=\"l\",\
 },\
 [0x1D51A]={\
  direction=\"l\",\
 },\
 [0x1D51B]={\
  direction=\"l\",\
 },\
 [0x1D51C]={\
  direction=\"l\",\
 },\
 [0x1D51E]={\
  direction=\"l\",\
 },\
 [0x1D51F]={\
  direction=\"l\",\
 },\
 [0x1D520]={\
  direction=\"l\",\
 },\
 [0x1D521]={\
  direction=\"l\",\
 },\
 [0x1D522]={\
  direction=\"l\",\
 },\
 [0x1D523]={\
  direction=\"l\",\
 },\
 [0x1D524]={\
  direction=\"l\",\
 },\
 [0x1D525]={\
  direction=\"l\",\
 },\
 [0x1D526]={\
  direction=\"l\",\
 },\
 [0x1D527]={\
  direction=\"l\",\
 },\
 [0x1D528]={\
  direction=\"l\",\
 },\
 [0x1D529]={\
  direction=\"l\",\
 },\
 [0x1D52A]={\
  direction=\"l\",\
 },\
 [0x1D52B]={\
  direction=\"l\",\
 },\
 [0x1D52C]={\
  direction=\"l\",\
 },\
 [0x1D52D]={\
  direction=\"l\",\
 },\
 [0x1D52E]={\
  direction=\"l\",\
 },\
 [0x1D52F]={\
  direction=\"l\",\
 },\
 [0x1D530]={\
  direction=\"l\",\
 },\
 [0x1D531]={\
  direction=\"l\",\
 },\
 [0x1D532]={\
  direction=\"l\",\
 },\
 [0x1D533]={\
  direction=\"l\",\
 },\
 [0x1D534]={\
  direction=\"l\",\
 },\
 [0x1D535]={\
  direction=\"l\",\
 },\
 [0x1D536]={\
  direction=\"l\",\
 },\
 [0x1D537]={\
  direction=\"l\",\
 },\
 [0x1D538]={\
  direction=\"l\",\
 },\
 [0x1D539]={\
  direction=\"l\",\
 },\
 [0x1D53B]={\
  direction=\"l\",\
 },\
 [0x1D53C]={\
  direction=\"l\",\
 },\
 [0x1D53D]={\
  direction=\"l\",\
 },\
 [0x1D53E]={\
  direction=\"l\",\
 },\
 [0x1D540]={\
  direction=\"l\",\
 },\
 [0x1D541]={\
  direction=\"l\",\
 },\
 [0x1D542]={\
  direction=\"l\",\
 },\
 [0x1D543]={\
  direction=\"l\",\
 },\
 [0x1D544]={\
  direction=\"l\",\
 },\
 [0x1D546]={\
  direction=\"l\",\
 },\
 [0x1D54A]={\
  direction=\"l\",\
 },\
 [0x1D54B]={\
  direction=\"l\",\
 },\
 [0x1D54C]={\
  direction=\"l\",\
 },\
 [0x1D54D]={\
  direction=\"l\",\
 },\
 [0x1D54E]={\
  direction=\"l\",\
 },\
 [0x1D54F]={\
  direction=\"l\",\
 },\
 [0x1D550]={\
  direction=\"l\",\
 },\
 [0x1D552]={\
  direction=\"l\",\
 },\
 [0x1D553]={\
  direction=\"l\",\
 },\
 [0x1D554]={\
  direction=\"l\",\
 },\
 [0x1D555]={\
  direction=\"l\",\
 },\
 [0x1D556]={\
  direction=\"l\",\
 },\
 [0x1D557]={\
  direction=\"l\",\
 },\
 [0x1D558]={\
  direction=\"l\",\
 },\
 [0x1D559]={\
  direction=\"l\",\
 },\
 [0x1D55A]={\
  direction=\"l\",\
 },\
 [0x1D55B]={\
  direction=\"l\",\
 },\
 [0x1D55C]={\
  direction=\"l\",\
 },\
 [0x1D55D]={\
  direction=\"l\",\
 },\
 [0x1D55E]={\
  direction=\"l\",\
 },\
 [0x1D55F]={\
  direction=\"l\",\
 },\
 [0x1D560]={\
  direction=\"l\",\
 },\
 [0x1D561]={\
  direction=\"l\",\
 },\
 [0x1D562]={\
  direction=\"l\",\
 },\
 [0x1D563]={\
  direction=\"l\",\
 },\
 [0x1D564]={\
  direction=\"l\",\
 },\
 [0x1D565]={\
  direction=\"l\",\
 },\
 [0x1D566]={\
  direction=\"l\",\
 },\
 [0x1D567]={\
  direction=\"l\",\
 },\
 [0x1D568]={\
  direction=\"l\",\
 },\
 [0x1D569]={\
  direction=\"l\",\
 },\
 [0x1D56A]={\
  direction=\"l\",\
 },\
 [0x1D56B]={\
  direction=\"l\",\
 },\
 [0x1D56C]={\
  direction=\"l\",\
 },\
 [0x1D56D]={\
  direction=\"l\",\
 },\
 [0x1D56E]={\
  direction=\"l\",\
 },\
 [0x1D56F]={\
  direction=\"l\",\
 },\
 [0x1D570]={\
  direction=\"l\",\
 },\
 [0x1D571]={\
  direction=\"l\",\
 },\
 [0x1D572]={\
  direction=\"l\",\
 },\
 [0x1D573]={\
  direction=\"l\",\
 },\
 [0x1D574]={\
  direction=\"l\",\
 },\
 [0x1D575]={\
  direction=\"l\",\
 },\
 [0x1D576]={\
  direction=\"l\",\
 },\
 [0x1D577]={\
  direction=\"l\",\
 },\
 [0x1D578]={\
  direction=\"l\",\
 },\
 [0x1D579]={\
  direction=\"l\",\
 },\
 [0x1D57A]={\
  direction=\"l\",\
 },\
 [0x1D57B]={\
  direction=\"l\",\
 },\
 [0x1D57C]={\
  direction=\"l\",\
 },\
 [0x1D57D]={\
  direction=\"l\",\
 },\
 [0x1D57E]={\
  direction=\"l\",\
 },\
 [0x1D57F]={\
  direction=\"l\",\
 },\
 [0x1D580]={\
  direction=\"l\",\
 },\
 [0x1D581]={\
  direction=\"l\",\
 },\
 [0x1D582]={\
  direction=\"l\",\
 },\
 [0x1D583]={\
  direction=\"l\",\
 },\
 [0x1D584]={\
  direction=\"l\",\
 },\
 [0x1D585]={\
  direction=\"l\",\
 },\
 [0x1D586]={\
  direction=\"l\",\
 },\
 [0x1D587]={\
  direction=\"l\",\
 },\
 [0x1D588]={\
  direction=\"l\",\
 },\
 [0x1D589]={\
  direction=\"l\",\
 },\
 [0x1D58A]={\
  direction=\"l\",\
 },\
 [0x1D58B]={\
  direction=\"l\",\
 },\
 [0x1D58C]={\
  direction=\"l\",\
 },\
 [0x1D58D]={\
  direction=\"l\",\
 },\
 [0x1D58E]={\
  direction=\"l\",\
 },\
 [0x1D58F]={\
  direction=\"l\",\
 },\
 [0x1D590]={\
  direction=\"l\",\
 },\
 [0x1D591]={\
  direction=\"l\",\
 },\
 [0x1D592]={\
  direction=\"l\",\
 },\
 [0x1D593]={\
  direction=\"l\",\
 },\
 [0x1D594]={\
  direction=\"l\",\
 },\
 [0x1D595]={\
  direction=\"l\",\
 },\
 [0x1D596]={\
  direction=\"l\",\
 },\
 [0x1D597]={\
  direction=\"l\",\
 },\
 [0x1D598]={\
  direction=\"l\",\
 },\
 [0x1D599]={\
  direction=\"l\",\
 },\
 [0x1D59A]={\
  direction=\"l\",\
 },\
 [0x1D59B]={\
  direction=\"l\",\
 },\
 [0x1D59C]={\
  direction=\"l\",\
 },\
 [0x1D59D]={\
  direction=\"l\",\
 },\
 [0x1D59E]={\
  direction=\"l\",\
 },\
 [0x1D59F]={\
  direction=\"l\",\
 },\
 [0x1D5A0]={\
  direction=\"l\",\
 },\
 [0x1D5A1]={\
  direction=\"l\",\
 },\
 [0x1D5A2]={\
  direction=\"l\",\
 },\
 [0x1D5A3]={\
  direction=\"l\",\
 },\
 [0x1D5A4]={\
  direction=\"l\",\
 },\
 [0x1D5A5]={\
  direction=\"l\",\
 },\
 [0x1D5A6]={\
  direction=\"l\",\
 },\
 [0x1D5A7]={\
  direction=\"l\",\
 },\
 [0x1D5A8]={\
  direction=\"l\",\
 },\
 [0x1D5A9]={\
  direction=\"l\",\
 },\
 [0x1D5AA]={\
  direction=\"l\",\
 },\
 [0x1D5AB]={\
  direction=\"l\",\
 },\
 [0x1D5AC]={\
  direction=\"l\",\
 },\
 [0x1D5AD]={\
  direction=\"l\",\
 },\
 [0x1D5AE]={\
  direction=\"l\",\
 },\
 [0x1D5AF]={\
  direction=\"l\",\
 },\
 [0x1D5B0]={\
  direction=\"l\",\
 },\
 [0x1D5B1]={\
  direction=\"l\",\
 },\
 [0x1D5B2]={\
  direction=\"l\",\
 },\
 [0x1D5B3]={\
  direction=\"l\",\
 },\
 [0x1D5B4]={\
  direction=\"l\",\
 },\
 [0x1D5B5]={\
  direction=\"l\",\
 },\
 [0x1D5B6]={\
  direction=\"l\",\
 },\
 [0x1D5B7]={\
  direction=\"l\",\
 },\
 [0x1D5B8]={\
  direction=\"l\",\
 },\
 [0x1D5B9]={\
  direction=\"l\",\
 },\
 [0x1D5BA]={\
  direction=\"l\",\
 },\
 [0x1D5BB]={\
  direction=\"l\",\
 },\
 [0x1D5BC]={\
  direction=\"l\",\
 },\
 [0x1D5BD]={\
  direction=\"l\",\
 },\
 [0x1D5BE]={\
  direction=\"l\",\
 },\
 [0x1D5BF]={\
  direction=\"l\",\
 },\
 [0x1D5C0]={\
  direction=\"l\",\
 },\
 [0x1D5C1]={\
  direction=\"l\",\
 },\
 [0x1D5C2]={\
  direction=\"l\",\
 },\
 [0x1D5C3]={\
  direction=\"l\",\
 },\
 [0x1D5C4]={\
  direction=\"l\",\
 },\
 [0x1D5C5]={\
  direction=\"l\",\
 },\
 [0x1D5C6]={\
  direction=\"l\",\
 },\
 [0x1D5C7]={\
  direction=\"l\",\
 },\
 [0x1D5C8]={\
  direction=\"l\",\
 },\
 [0x1D5C9]={\
  direction=\"l\",\
 },\
 [0x1D5CA]={\
  direction=\"l\",\
 },\
 [0x1D5CB]={\
  direction=\"l\",\
 },\
 [0x1D5CC]={\
  direction=\"l\",\
 },\
 [0x1D5CD]={\
  direction=\"l\",\
 },\
 [0x1D5CE]={\
  direction=\"l\",\
 },\
 [0x1D5CF]={\
  direction=\"l\",\
 },\
 [0x1D5D0]={\
  direction=\"l\",\
 },\
 [0x1D5D1]={\
  direction=\"l\",\
 },\
 [0x1D5D2]={\
  direction=\"l\",\
 },\
 [0x1D5D3]={\
  direction=\"l\",\
 },\
 [0x1D5D4]={\
  direction=\"l\",\
 },\
 [0x1D5D5]={\
  direction=\"l\",\
 },\
 [0x1D5D6]={\
  direction=\"l\",\
 },\
 [0x1D5D7]={\
  direction=\"l\",\
 },\
 [0x1D5D8]={\
  direction=\"l\",\
 },\
 [0x1D5D9]={\
  direction=\"l\",\
 },\
 [0x1D5DA]={\
  direction=\"l\",\
 },\
 [0x1D5DB]={\
  direction=\"l\",\
 },\
 [0x1D5DC]={\
  direction=\"l\",\
 },\
 [0x1D5DD]={\
  direction=\"l\",\
 },\
 [0x1D5DE]={\
  direction=\"l\",\
 },\
 [0x1D5DF]={\
  direction=\"l\",\
 },\
 [0x1D5E0]={\
  direction=\"l\",\
 },\
 [0x1D5E1]={\
  direction=\"l\",\
 },\
 [0x1D5E2]={\
  direction=\"l\",\
 },\
 [0x1D5E3]={\
  direction=\"l\",\
 },\
 [0x1D5E4]={\
  direction=\"l\",\
 },\
 [0x1D5E5]={\
  direction=\"l\",\
 },\
 [0x1D5E6]={\
  direction=\"l\",\
 },\
 [0x1D5E7]={\
  direction=\"l\",\
 },\
 [0x1D5E8]={\
  direction=\"l\",\
 },\
 [0x1D5E9]={\
  direction=\"l\",\
 },\
 [0x1D5EA]={\
  direction=\"l\",\
 },\
 [0x1D5EB]={\
  direction=\"l\",\
 },\
 [0x1D5EC]={\
  direction=\"l\",\
 },\
 [0x1D5ED]={\
  direction=\"l\",\
 },\
 [0x1D5EE]={\
  direction=\"l\",\
 },\
 [0x1D5EF]={\
  direction=\"l\",\
 },\
 [0x1D5F0]={\
  direction=\"l\",\
 },\
 [0x1D5F1]={\
  direction=\"l\",\
 },\
 [0x1D5F2]={\
  direction=\"l\",\
 },\
 [0x1D5F3]={\
  direction=\"l\",\
 },\
 [0x1D5F4]={\
  direction=\"l\",\
 },\
 [0x1D5F5]={\
  direction=\"l\",\
 },\
 [0x1D5F6]={\
  direction=\"l\",\
 },\
 [0x1D5F7]={\
  direction=\"l\",\
 },\
 [0x1D5F8]={\
  direction=\"l\",\
 },\
 [0x1D5F9]={\
  direction=\"l\",\
 },\
 [0x1D5FA]={\
  direction=\"l\",\
 },\
 [0x1D5FB]={\
  direction=\"l\",\
 },\
 [0x1D5FC]={\
  direction=\"l\",\
 },\
 [0x1D5FD]={\
  direction=\"l\",\
 },\
 [0x1D5FE]={\
  direction=\"l\",\
 },\
 [0x1D5FF]={\
  direction=\"l\",\
 },\
 [0x1D600]={\
  direction=\"l\",\
 },\
 [0x1D601]={\
  direction=\"l\",\
 },\
 [0x1D602]={\
  direction=\"l\",\
 },\
 [0x1D603]={\
  direction=\"l\",\
 },\
 [0x1D604]={\
  direction=\"l\",\
 },\
 [0x1D605]={\
  direction=\"l\",\
 },\
 [0x1D606]={\
  direction=\"l\",\
 },\
 [0x1D607]={\
  direction=\"l\",\
 },\
 [0x1D608]={\
  direction=\"l\",\
 },\
 [0x1D609]={\
  direction=\"l\",\
 },\
 [0x1D60A]={\
  direction=\"l\",\
 },\
 [0x1D60B]={\
  direction=\"l\",\
 },\
 [0x1D60C]={\
  direction=\"l\",\
 },\
 [0x1D60D]={\
  direction=\"l\",\
 },\
 [0x1D60E]={\
  direction=\"l\",\
 },\
 [0x1D60F]={\
  direction=\"l\",\
 },\
 [0x1D610]={\
  direction=\"l\",\
 },\
 [0x1D611]={\
  direction=\"l\",\
 },\
 [0x1D612]={\
  direction=\"l\",\
 },\
 [0x1D613]={\
  direction=\"l\",\
 },\
 [0x1D614]={\
  direction=\"l\",\
 },\
 [0x1D615]={\
  direction=\"l\",\
 },\
 [0x1D616]={\
  direction=\"l\",\
 },\
 [0x1D617]={\
  direction=\"l\",\
 },\
 [0x1D618]={\
  direction=\"l\",\
 },\
 [0x1D619]={\
  direction=\"l\",\
 },\
 [0x1D61A]={\
  direction=\"l\",\
 },\
 [0x1D61B]={\
  direction=\"l\",\
 },\
 [0x1D61C]={\
  direction=\"l\",\
 },\
 [0x1D61D]={\
  direction=\"l\",\
 },\
 [0x1D61E]={\
  direction=\"l\",\
 },\
 [0x1D61F]={\
  direction=\"l\",\
 },\
 [0x1D620]={\
  direction=\"l\",\
 },\
 [0x1D621]={\
  direction=\"l\",\
 },\
 [0x1D622]={\
  direction=\"l\",\
 },\
 [0x1D623]={\
  direction=\"l\",\
 },\
 [0x1D624]={\
  direction=\"l\",\
 },\
 [0x1D625]={\
  direction=\"l\",\
 },\
 [0x1D626]={\
  direction=\"l\",\
 },\
 [0x1D627]={\
  direction=\"l\",\
 },\
 [0x1D628]={\
  direction=\"l\",\
 },\
 [0x1D629]={\
  direction=\"l\",\
 },\
 [0x1D62A]={\
  direction=\"l\",\
 },\
 [0x1D62B]={\
  direction=\"l\",\
 },\
 [0x1D62C]={\
  direction=\"l\",\
 },\
 [0x1D62D]={\
  direction=\"l\",\
 },\
 [0x1D62E]={\
  direction=\"l\",\
 },\
 [0x1D62F]={\
  direction=\"l\",\
 },\
 [0x1D630]={\
  direction=\"l\",\
 },\
 [0x1D631]={\
  direction=\"l\",\
 },\
 [0x1D632]={\
  direction=\"l\",\
 },\
 [0x1D633]={\
  direction=\"l\",\
 },\
 [0x1D634]={\
  direction=\"l\",\
 },\
 [0x1D635]={\
  direction=\"l\",\
 },\
 [0x1D636]={\
  direction=\"l\",\
 },\
 [0x1D637]={\
  direction=\"l\",\
 },\
 [0x1D638]={\
  direction=\"l\",\
 },\
 [0x1D639]={\
  direction=\"l\",\
 },\
 [0x1D63A]={\
  direction=\"l\",\
 },\
 [0x1D63B]={\
  direction=\"l\",\
 },\
 [0x1D63C]={\
  direction=\"l\",\
 },\
 [0x1D63D]={\
  direction=\"l\",\
 },\
 [0x1D63E]={\
  direction=\"l\",\
 },\
 [0x1D63F]={\
  direction=\"l\",\
 },\
 [0x1D640]={\
  direction=\"l\",\
 },\
 [0x1D641]={\
  direction=\"l\",\
 },\
 [0x1D642]={\
  direction=\"l\",\
 },\
 [0x1D643]={\
  direction=\"l\",\
 },\
 [0x1D644]={\
  direction=\"l\",\
 },\
 [0x1D645]={\
  direction=\"l\",\
 },\
 [0x1D646]={\
  direction=\"l\",\
 },\
 [0x1D647]={\
  direction=\"l\",\
 },\
 [0x1D648]={\
  direction=\"l\",\
 },\
 [0x1D649]={\
  direction=\"l\",\
 },\
 [0x1D64A]={\
  direction=\"l\",\
 },\
 [0x1D64B]={\
  direction=\"l\",\
 },\
 [0x1D64C]={\
  direction=\"l\",\
 },\
 [0x1D64D]={\
  direction=\"l\",\
 },\
 [0x1D64E]={\
  direction=\"l\",\
 },\
 [0x1D64F]={\
  direction=\"l\",\
 },\
 [0x1D650]={\
  direction=\"l\",\
 },\
 [0x1D651]={\
  direction=\"l\",\
 },\
 [0x1D652]={\
  direction=\"l\",\
 },\
 [0x1D653]={\
  direction=\"l\",\
 },\
 [0x1D654]={\
  direction=\"l\",\
 },\
 [0x1D655]={\
  direction=\"l\",\
 },\
 [0x1D656]={\
  direction=\"l\",\
 },\
 [0x1D657]={\
  direction=\"l\",\
 },\
 [0x1D658]={\
  direction=\"l\",\
 },\
 [0x1D659]={\
  direction=\"l\",\
 },\
 [0x1D65A]={\
  direction=\"l\",\
 },\
 [0x1D65B]={\
  direction=\"l\",\
 },\
 [0x1D65C]={\
  direction=\"l\",\
 },\
 [0x1D65D]={\
  direction=\"l\",\
 },\
 [0x1D65E]={\
  direction=\"l\",\
 },\
 [0x1D65F]={\
  direction=\"l\",\
 },\
 [0x1D660]={\
  direction=\"l\",\
 },\
 [0x1D661]={\
  direction=\"l\",\
 },\
 [0x1D662]={\
  direction=\"l\",\
 },\
 [0x1D663]={\
  direction=\"l\",\
 },\
 [0x1D664]={\
  direction=\"l\",\
 },\
 [0x1D665]={\
  direction=\"l\",\
 },\
 [0x1D666]={\
  direction=\"l\",\
 },\
 [0x1D667]={\
  direction=\"l\",\
 },\
 [0x1D668]={\
  direction=\"l\",\
 },\
 [0x1D669]={\
  direction=\"l\",\
 },\
 [0x1D66A]={\
  direction=\"l\",\
 },\
 [0x1D66B]={\
  direction=\"l\",\
 },\
 [0x1D66C]={\
  direction=\"l\",\
 },\
 [0x1D66D]={\
  direction=\"l\",\
 },\
 [0x1D66E]={\
  direction=\"l\",\
 },\
 [0x1D66F]={\
  direction=\"l\",\
 },\
 [0x1D670]={\
  direction=\"l\",\
 },\
 [0x1D671]={\
  direction=\"l\",\
 },\
 [0x1D672]={\
  direction=\"l\",\
 },\
 [0x1D673]={\
  direction=\"l\",\
 },\
 [0x1D674]={\
  direction=\"l\",\
 },\
 [0x1D675]={\
  direction=\"l\",\
 },\
 [0x1D676]={\
  direction=\"l\",\
 },\
 [0x1D677]={\
  direction=\"l\",\
 },\
 [0x1D678]={\
  direction=\"l\",\
 },\
 [0x1D679]={\
  direction=\"l\",\
 },\
 [0x1D67A]={\
  direction=\"l\",\
 },\
 [0x1D67B]={\
  direction=\"l\",\
 },\
 [0x1D67C]={\
  direction=\"l\",\
 },\
 [0x1D67D]={\
  direction=\"l\",\
 },\
 [0x1D67E]={\
  direction=\"l\",\
 },\
 [0x1D67F]={\
  direction=\"l\",\
 },\
 [0x1D680]={\
  direction=\"l\",\
 },\
 [0x1D681]={\
  direction=\"l\",\
 },\
 [0x1D682]={\
  direction=\"l\",\
 },\
 [0x1D683]={\
  direction=\"l\",\
 },\
 [0x1D684]={\
  direction=\"l\",\
 },\
 [0x1D685]={\
  direction=\"l\",\
 },\
 [0x1D686]={\
  direction=\"l\",\
 },\
 [0x1D687]={\
  direction=\"l\",\
 },\
 [0x1D688]={\
  direction=\"l\",\
 },\
 [0x1D689]={\
  direction=\"l\",\
 },\
 [0x1D68A]={\
  direction=\"l\",\
 },\
 [0x1D68B]={\
  direction=\"l\",\
 },\
 [0x1D68C]={\
  direction=\"l\",\
 },\
 [0x1D68D]={\
  direction=\"l\",\
 },\
 [0x1D68E]={\
  direction=\"l\",\
 },\
 [0x1D68F]={\
  direction=\"l\",\
 },\
 [0x1D690]={\
  direction=\"l\",\
 },\
 [0x1D691]={\
  direction=\"l\",\
 },\
 [0x1D692]={\
  direction=\"l\",\
 },\
 [0x1D693]={\
  direction=\"l\",\
 },\
 [0x1D694]={\
  direction=\"l\",\
 },\
 [0x1D695]={\
  direction=\"l\",\
 },\
 [0x1D696]={\
  direction=\"l\",\
 },\
 [0x1D697]={\
  direction=\"l\",\
 },\
 [0x1D698]={\
  direction=\"l\",\
 },\
 [0x1D699]={\
  direction=\"l\",\
 },\
 [0x1D69A]={\
  direction=\"l\",\
 },\
 [0x1D69B]={\
  direction=\"l\",\
 },\
 [0x1D69C]={\
  direction=\"l\",\
 },\
 [0x1D69D]={\
  direction=\"l\",\
 },\
 [0x1D69E]={\
  direction=\"l\",\
 },\
 [0x1D69F]={\
  direction=\"l\",\
 },\
 [0x1D6A0]={\
  direction=\"l\",\
 },\
 [0x1D6A1]={\
  direction=\"l\",\
 },\
 [0x1D6A2]={\
  direction=\"l\",\
 },\
 [0x1D6A3]={\
  direction=\"l\",\
 },\
 [0x1D6A4]={\
  direction=\"l\",\
 },\
 [0x1D6A5]={\
  direction=\"l\",\
 },\
 [0x1D6A8]={\
  direction=\"l\",\
 },\
 [0x1D6A9]={\
  direction=\"l\",\
 },\
 [0x1D6AA]={\
  direction=\"l\",\
 },\
 [0x1D6AB]={\
  direction=\"l\",\
 },\
 [0x1D6AC]={\
  direction=\"l\",\
 },\
 [0x1D6AD]={\
  direction=\"l\",\
 },\
 [0x1D6AE]={\
  direction=\"l\",\
 },\
 [0x1D6AF]={\
  direction=\"l\",\
 },\
 [0x1D6B0]={\
  direction=\"l\",\
 },\
 [0x1D6B1]={\
  direction=\"l\",\
 },\
 [0x1D6B2]={\
  direction=\"l\",\
 },\
 [0x1D6B3]={\
  direction=\"l\",\
 },\
 [0x1D6B4]={\
  direction=\"l\",\
 },\
 [0x1D6B5]={\
  direction=\"l\",\
 },\
 [0x1D6B6]={\
  direction=\"l\",\
 },\
 [0x1D6B7]={\
  direction=\"l\",\
 },\
 [0x1D6B8]={\
  direction=\"l\",\
 },\
 [0x1D6B9]={\
  direction=\"l\",\
 },\
 [0x1D6BA]={\
  direction=\"l\",\
 },\
 [0x1D6BB]={\
  direction=\"l\",\
 },\
 [0x1D6BC]={\
  direction=\"l\",\
 },\
 [0x1D6BD]={\
  direction=\"l\",\
 },\
 [0x1D6BE]={\
  direction=\"l\",\
 },\
 [0x1D6BF]={\
  direction=\"l\",\
 },\
 [0x1D6C0]={\
  direction=\"l\",\
 },\
 [0x1D6C1]={\
  direction=\"l\",\
 },\
 [0x1D6C2]={\
  direction=\"l\",\
 },\
 [0x1D6C3]={\
  direction=\"l\",\
 },\
 [0x1D6C4]={\
  direction=\"l\",\
 },\
 [0x1D6C5]={\
  direction=\"l\",\
 },\
 [0x1D6C6]={\
  direction=\"l\",\
 },\
 [0x1D6C7]={\
  direction=\"l\",\
 },\
 [0x1D6C8]={\
  direction=\"l\",\
 },\
 [0x1D6C9]={\
  direction=\"l\",\
 },\
 [0x1D6CA]={\
  direction=\"l\",\
 },\
 [0x1D6CB]={\
  direction=\"l\",\
 },\
 [0x1D6CC]={\
  direction=\"l\",\
 },\
 [0x1D6CD]={\
  direction=\"l\",\
 },\
 [0x1D6CE]={\
  direction=\"l\",\
 },\
 [0x1D6CF]={\
  direction=\"l\",\
 },\
 [0x1D6D0]={\
  direction=\"l\",\
 },\
 [0x1D6D1]={\
  direction=\"l\",\
 },\
 [0x1D6D2]={\
  direction=\"l\",\
 },\
 [0x1D6D3]={\
  direction=\"l\",\
 },\
 [0x1D6D4]={\
  direction=\"l\",\
 },\
 [0x1D6D5]={\
  direction=\"l\",\
 },\
 [0x1D6D6]={\
  direction=\"l\",\
 },\
 [0x1D6D7]={\
  direction=\"l\",\
 },\
 [0x1D6D8]={\
  direction=\"l\",\
 },\
 [0x1D6D9]={\
  direction=\"l\",\
 },\
 [0x1D6DA]={\
  direction=\"l\",\
 },\
 [0x1D6DB]={\
  direction=\"on\",\
 },\
 [0x1D6DC]={\
  direction=\"l\",\
 },\
 [0x1D6DD]={\
  direction=\"l\",\
 },\
 [0x1D6DE]={\
  direction=\"l\",\
 },\
 [0x1D6DF]={\
  direction=\"l\",\
 },\
 [0x1D6E0]={\
  direction=\"l\",\
 },\
 [0x1D6E1]={\
  direction=\"l\",\
 },\
 [0x1D6E2]={\
  direction=\"l\",\
 },\
 [0x1D6E3]={\
  direction=\"l\",\
 },\
 [0x1D6E4]={\
  direction=\"l\",\
 },\
 [0x1D6E5]={\
  direction=\"l\",\
 },\
 [0x1D6E6]={\
  direction=\"l\",\
 },\
 [0x1D6E7]={\
  direction=\"l\",\
 },\
 [0x1D6E8]={\
  direction=\"l\",\
 },\
 [0x1D6E9]={\
  direction=\"l\",\
 },\
 [0x1D6EA]={\
  direction=\"l\",\
 },\
 [0x1D6EB]={\
  direction=\"l\",\
 },\
 [0x1D6EC]={\
  direction=\"l\",\
 },\
 [0x1D6ED]={\
  direction=\"l\",\
 },\
 [0x1D6EE]={\
  direction=\"l\",\
 },\
 [0x1D6EF]={\
  direction=\"l\",\
 },\
 [0x1D6F0]={\
  direction=\"l\",\
 },\
 [0x1D6F1]={\
  direction=\"l\",\
 },\
 [0x1D6F2]={\
  direction=\"l\",\
 },\
 [0x1D6F3]={\
  direction=\"l\",\
 },\
 [0x1D6F4]={\
  direction=\"l\",\
 },\
 [0x1D6F5]={\
  direction=\"l\",\
 },\
 [0x1D6F6]={\
  direction=\"l\",\
 },\
 [0x1D6F7]={\
  direction=\"l\",\
 },\
 [0x1D6F8]={\
  direction=\"l\",\
 },\
 [0x1D6F9]={\
  direction=\"l\",\
 },\
 [0x1D6FA]={\
  direction=\"l\",\
 },\
 [0x1D6FB]={\
  direction=\"l\",\
 },\
 [0x1D6FC]={\
  direction=\"l\",\
 },\
 [0x1D6FD]={\
  direction=\"l\",\
 },\
 [0x1D6FE]={\
  direction=\"l\",\
 },\
 [0x1D6FF]={\
  direction=\"l\",\
 },\
 [0x1D700]={\
  direction=\"l\",\
 },\
 [0x1D701]={\
  direction=\"l\",\
 },\
 [0x1D702]={\
  direction=\"l\",\
 },\
 [0x1D703]={\
  direction=\"l\",\
 },\
 [0x1D704]={\
  direction=\"l\",\
 },\
 [0x1D705]={\
  direction=\"l\",\
 },\
 [0x1D706]={\
  direction=\"l\",\
 },\
 [0x1D707]={\
  direction=\"l\",\
 },\
 [0x1D708]={\
  direction=\"l\",\
 },\
 [0x1D709]={\
  direction=\"l\",\
 },\
 [0x1D70A]={\
  direction=\"l\",\
 },\
 [0x1D70B]={\
  direction=\"l\",\
 },\
 [0x1D70C]={\
  direction=\"l\",\
 },\
 [0x1D70D]={\
  direction=\"l\",\
 },\
 [0x1D70E]={\
  direction=\"l\",\
 },\
 [0x1D70F]={\
  direction=\"l\",\
 },\
 [0x1D710]={\
  direction=\"l\",\
 },\
 [0x1D711]={\
  direction=\"l\",\
 },\
 [0x1D712]={\
  direction=\"l\",\
 },\
 [0x1D713]={\
  direction=\"l\",\
 },\
 [0x1D714]={\
  direction=\"l\",\
 },\
 [0x1D715]={\
  direction=\"on\",\
 },\
 [0x1D716]={\
  direction=\"l\",\
 },\
 [0x1D717]={\
  direction=\"l\",\
 },\
 [0x1D718]={\
  direction=\"l\",\
 },\
 [0x1D719]={\
  direction=\"l\",\
 },\
 [0x1D71A]={\
  direction=\"l\",\
 },\
 [0x1D71B]={\
  direction=\"l\",\
 },\
 [0x1D71C]={\
  direction=\"l\",\
 },\
 [0x1D71D]={\
  direction=\"l\",\
 },\
 [0x1D71E]={\
  direction=\"l\",\
 },\
 [0x1D71F]={\
  direction=\"l\",\
 },\
 [0x1D720]={\
  direction=\"l\",\
 },\
 [0x1D721]={\
  direction=\"l\",\
 },\
 [0x1D722]={\
  direction=\"l\",\
 },\
 [0x1D723]={\
  direction=\"l\",\
 },\
 [0x1D724]={\
  direction=\"l\",\
 },\
 [0x1D725]={\
  direction=\"l\",\
 },\
 [0x1D726]={\
  direction=\"l\",\
 },\
 [0x1D727]={\
  direction=\"l\",\
 },\
 [0x1D728]={\
  direction=\"l\",\
 },\
 [0x1D729]={\
  direction=\"l\",\
 },\
 [0x1D72A]={\
  direction=\"l\",\
 },\
 [0x1D72B]={\
  direction=\"l\",\
 },\
 [0x1D72C]={\
  direction=\"l\",\
 },\
 [0x1D72D]={\
  direction=\"l\",\
 },\
 [0x1D72E]={\
  direction=\"l\",\
 },\
 [0x1D72F]={\
  direction=\"l\",\
 },\
 [0x1D730]={\
  direction=\"l\",\
 },\
 [0x1D731]={\
  direction=\"l\",\
 },\
 [0x1D732]={\
  direction=\"l\",\
 },\
 [0x1D733]={\
  direction=\"l\",\
 },\
 [0x1D734]={\
  direction=\"l\",\
 },\
 [0x1D735]={\
  direction=\"l\",\
 },\
 [0x1D736]={\
  direction=\"l\",\
 },\
 [0x1D737]={\
  direction=\"l\",\
 },\
 [0x1D738]={\
  direction=\"l\",\
 },\
 [0x1D739]={\
  direction=\"l\",\
 },\
 [0x1D73A]={\
  direction=\"l\",\
 },\
 [0x1D73B]={\
  direction=\"l\",\
 },\
 [0x1D73C]={\
  direction=\"l\",\
 },\
 [0x1D73D]={\
  direction=\"l\",\
 },\
 [0x1D73E]={\
  direction=\"l\",\
 },\
 [0x1D73F]={\
  direction=\"l\",\
 },\
 [0x1D740]={\
  direction=\"l\",\
 },\
 [0x1D741]={\
  direction=\"l\",\
 },\
 [0x1D742]={\
  direction=\"l\",\
 },\
 [0x1D743]={\
  direction=\"l\",\
 },\
 [0x1D744]={\
  direction=\"l\",\
 },\
 [0x1D745]={\
  direction=\"l\",\
 },\
 [0x1D746]={\
  direction=\"l\",\
 },\
 [0x1D747]={\
  direction=\"l\",\
 },\
 [0x1D748]={\
  direction=\"l\",\
 },\
 [0x1D749]={\
  direction=\"l\",\
 },\
 [0x1D74A]={\
  direction=\"l\",\
 },\
 [0x1D74B]={\
  direction=\"l\",\
 },\
 [0x1D74C]={\
  direction=\"l\",\
 },\
 [0x1D74D]={\
  direction=\"l\",\
 },\
 [0x1D74E]={\
  direction=\"l\",\
 },\
 [0x1D74F]={\
  direction=\"on\",\
 },\
 [0x1D750]={\
  direction=\"l\",\
 },\
 [0x1D751]={\
  direction=\"l\",\
 },\
 [0x1D752]={\
  direction=\"l\",\
 },\
 [0x1D753]={\
  direction=\"l\",\
 },\
 [0x1D754]={\
  direction=\"l\",\
 },\
 [0x1D755]={\
  direction=\"l\",\
 },\
 [0x1D756]={\
  direction=\"l\",\
 },\
 [0x1D757]={\
  direction=\"l\",\
 },\
 [0x1D758]={\
  direction=\"l\",\
 },\
 [0x1D759]={\
  direction=\"l\",\
 },\
 [0x1D75A]={\
  direction=\"l\",\
 },\
 [0x1D75B]={\
  direction=\"l\",\
 },\
 [0x1D75C]={\
  direction=\"l\",\
 },\
 [0x1D75D]={\
  direction=\"l\",\
 },\
 [0x1D75E]={\
  direction=\"l\",\
 },\
 [0x1D75F]={\
  direction=\"l\",\
 },\
 [0x1D760]={\
  direction=\"l\",\
 },\
 [0x1D761]={\
  direction=\"l\",\
 },\
 [0x1D762]={\
  direction=\"l\",\
 },\
 [0x1D763]={\
  direction=\"l\",\
 },\
 [0x1D764]={\
  direction=\"l\",\
 },\
 [0x1D765]={\
  direction=\"l\",\
 },\
 [0x1D766]={\
  direction=\"l\",\
 },\
 [0x1D767]={\
  direction=\"l\",\
 },\
 [0x1D768]={\
  direction=\"l\",\
 },\
 [0x1D769]={\
  direction=\"l\",\
 },\
 [0x1D76A]={\
  direction=\"l\",\
 },\
 [0x1D76B]={\
  direction=\"l\",\
 },\
 [0x1D76C]={\
  direction=\"l\",\
 },\
 [0x1D76D]={\
  direction=\"l\",\
 },\
 [0x1D76E]={\
  direction=\"l\",\
 },\
 [0x1D76F]={\
  direction=\"l\",\
 },\
 [0x1D770]={\
  direction=\"l\",\
 },\
 [0x1D771]={\
  direction=\"l\",\
 },\
 [0x1D772]={\
  direction=\"l\",\
 },\
 [0x1D773]={\
  direction=\"l\",\
 },\
 [0x1D774]={\
  direction=\"l\",\
 },\
 [0x1D775]={\
  direction=\"l\",\
 },\
 [0x1D776]={\
  direction=\"l\",\
 },\
 [0x1D777]={\
  direction=\"l\",\
 },\
 [0x1D778]={\
  direction=\"l\",\
 },\
 [0x1D779]={\
  direction=\"l\",\
 },\
 [0x1D77A]={\
  direction=\"l\",\
 },\
 [0x1D77B]={\
  direction=\"l\",\
 },\
 [0x1D77C]={\
  direction=\"l\",\
 },\
 [0x1D77D]={\
  direction=\"l\",\
 },\
 [0x1D77E]={\
  direction=\"l\",\
 },\
 [0x1D77F]={\
  direction=\"l\",\
 },\
 [0x1D780]={\
  direction=\"l\",\
 },\
 [0x1D781]={\
  direction=\"l\",\
 },\
 [0x1D782]={\
  direction=\"l\",\
 },\
 [0x1D783]={\
  direction=\"l\",\
 },\
 [0x1D784]={\
  direction=\"l\",\
 },\
 [0x1D785]={\
  direction=\"l\",\
 },\
 [0x1D786]={\
  direction=\"l\",\
 },\
 [0x1D787]={\
  direction=\"l\",\
 },\
 [0x1D788]={\
  direction=\"l\",\
 },\
 [0x1D789]={\
  direction=\"on\",\
 },\
 [0x1D78A]={\
  direction=\"l\",\
 },\
 [0x1D78B]={\
  direction=\"l\",\
 },\
 [0x1D78C]={\
  direction=\"l\",\
 },\
 [0x1D78D]={\
  direction=\"l\",\
 },\
 [0x1D78E]={\
  direction=\"l\",\
 },\
 [0x1D78F]={\
  direction=\"l\",\
 },\
 [0x1D790]={\
  direction=\"l\",\
 },\
 [0x1D791]={\
  direction=\"l\",\
 },\
 [0x1D792]={\
  direction=\"l\",\
 },\
 [0x1D793]={\
  direction=\"l\",\
 },\
 [0x1D794]={\
  direction=\"l\",\
 },\
 [0x1D795]={\
  direction=\"l\",\
 },\
 [0x1D796]={\
  direction=\"l\",\
 },\
 [0x1D797]={\
  direction=\"l\",\
 },\
 [0x1D798]={\
  direction=\"l\",\
 },\
 [0x1D799]={\
  direction=\"l\",\
 },\
 [0x1D79A]={\
  direction=\"l\",\
 },\
 [0x1D79B]={\
  direction=\"l\",\
 },\
 [0x1D79C]={\
  direction=\"l\",\
 },\
 [0x1D79D]={\
  direction=\"l\",\
 },\
 [0x1D79E]={\
  direction=\"l\",\
 },\
 [0x1D79F]={\
  direction=\"l\",\
 },\
 [0x1D7A0]={\
  direction=\"l\",\
 },\
 [0x1D7A1]={\
  direction=\"l\",\
 },\
 [0x1D7A2]={\
  direction=\"l\",\
 },\
 [0x1D7A3]={\
  direction=\"l\",\
 },\
 [0x1D7A4]={\
  direction=\"l\",\
 },\
 [0x1D7A5]={\
  direction=\"l\",\
 },\
 [0x1D7A6]={\
  direction=\"l\",\
 },\
 [0x1D7A7]={\
  direction=\"l\",\
 },\
 [0x1D7A8]={\
  direction=\"l\",\
 },\
 [0x1D7A9]={\
  direction=\"l\",\
 },\
 [0x1D7AA]={\
  direction=\"l\",\
 },\
 [0x1D7AB]={\
  direction=\"l\",\
 },\
 [0x1D7AC]={\
  direction=\"l\",\
 },\
 [0x1D7AD]={\
  direction=\"l\",\
 },\
 [0x1D7AE]={\
  direction=\"l\",\
 },\
 [0x1D7AF]={\
  direction=\"l\",\
 },\
 [0x1D7B0]={\
  direction=\"l\",\
 },\
 [0x1D7B1]={\
  direction=\"l\",\
 },\
 [0x1D7B2]={\
  direction=\"l\",\
 },\
 [0x1D7B3]={\
  direction=\"l\",\
 },\
 [0x1D7B4]={\
  direction=\"l\",\
 },\
 [0x1D7B5]={\
  direction=\"l\",\
 },\
 [0x1D7B6]={\
  direction=\"l\",\
 },\
 [0x1D7B7]={\
  direction=\"l\",\
 },\
 [0x1D7B8]={\
  direction=\"l\",\
 },\
 [0x1D7B9]={\
  direction=\"l\",\
 },\
 [0x1D7BA]={\
  direction=\"l\",\
 },\
 [0x1D7BB]={\
  direction=\"l\",\
 },\
 [0x1D7BC]={\
  direction=\"l\",\
 },\
 [0x1D7BD]={\
  direction=\"l\",\
 },\
 [0x1D7BE]={\
  direction=\"l\",\
 },\
 [0x1D7BF]={\
  direction=\"l\",\
 },\
 [0x1D7C0]={\
  direction=\"l\",\
 },\
 [0x1D7C1]={\
  direction=\"l\",\
 },\
 [0x1D7C2]={\
  direction=\"l\",\
 },\
 [0x1D7C3]={\
  direction=\"on\",\
 },\
 [0x1D7C4]={\
  direction=\"l\",\
 },\
 [0x1D7C5]={\
  direction=\"l\",\
 },\
 [0x1D7C6]={\
  direction=\"l\",\
 },\
 [0x1D7C7]={\
  direction=\"l\",\
 },\
 [0x1D7C8]={\
  direction=\"l\",\
 },\
 [0x1D7C9]={\
  direction=\"l\",\
 },\
 [0x1D7CA]={\
  direction=\"l\",\
 },\
 [0x1D7CB]={\
  direction=\"l\",\
 },\
 [0x1D7CE]={\
  direction=\"en\",\
 },\
 [0x1D7CF]={\
  direction=\"en\",\
 },\
 [0x1D7D0]={\
  direction=\"en\",\
 },\
 [0x1D7D1]={\
  direction=\"en\",\
 },\
 [0x1D7D2]={\
  direction=\"en\",\
 },\
 [0x1D7D3]={\
  direction=\"en\",\
 },\
 [0x1D7D4]={\
  direction=\"en\",\
 },\
 [0x1D7D5]={\
  direction=\"en\",\
 },\
 [0x1D7D6]={\
  direction=\"en\",\
 },\
 [0x1D7D7]={\
  direction=\"en\",\
 },\
 [0x1D7D8]={\
  direction=\"en\",\
 },\
 [0x1D7D9]={\
  direction=\"en\",\
 },\
 [0x1D7DA]={\
  direction=\"en\",\
 },\
 [0x1D7DB]={\
  direction=\"en\",\
 },\
 [0x1D7DC]={\
  direction=\"en\",\
 },\
 [0x1D7DD]={\
  direction=\"en\",\
 },\
 [0x1D7DE]={\
  direction=\"en\",\
 },\
 [0x1D7DF]={\
  direction=\"en\",\
 },\
 [0x1D7E0]={\
  direction=\"en\",\
 },\
 [0x1D7E1]={\
  direction=\"en\",\
 },\
 [0x1D7E2]={\
  direction=\"en\",\
 },\
 [0x1D7E3]={\
  direction=\"en\",\
 },\
 [0x1D7E4]={\
  direction=\"en\",\
 },\
 [0x1D7E5]={\
  direction=\"en\",\
 },\
 [0x1D7E6]={\
  direction=\"en\",\
 },\
 [0x1D7E7]={\
  direction=\"en\",\
 },\
 [0x1D7E8]={\
  direction=\"en\",\
 },\
 [0x1D7E9]={\
  direction=\"en\",\
 },\
 [0x1D7EA]={\
  direction=\"en\",\
 },\
 [0x1D7EB]={\
  direction=\"en\",\
 },\
 [0x1D7EC]={\
  direction=\"en\",\
 },\
 [0x1D7ED]={\
  direction=\"en\",\
 },\
 [0x1D7EE]={\
  direction=\"en\",\
 },\
 [0x1D7EF]={\
  direction=\"en\",\
 },\
 [0x1D7F0]={\
  direction=\"en\",\
 },\
 [0x1D7F1]={\
  direction=\"en\",\
 },\
 [0x1D7F2]={\
  direction=\"en\",\
 },\
 [0x1D7F3]={\
  direction=\"en\",\
 },\
 [0x1D7F4]={\
  direction=\"en\",\
 },\
 [0x1D7F5]={\
  direction=\"en\",\
 },\
 [0x1D7F6]={\
  direction=\"en\",\
 },\
 [0x1D7F7]={\
  direction=\"en\",\
 },\
 [0x1D7F8]={\
  direction=\"en\",\
 },\
 [0x1D7F9]={\
  direction=\"en\",\
 },\
 [0x1D7FA]={\
  direction=\"en\",\
 },\
 [0x1D7FB]={\
  direction=\"en\",\
 },\
 [0x1D7FC]={\
  direction=\"en\",\
 },\
 [0x1D7FD]={\
  direction=\"en\",\
 },\
 [0x1D7FE]={\
  direction=\"en\",\
 },\
 [0x1D7FF]={\
  direction=\"en\",\
 },\
 [0x1EE00]={\
  direction=\"al\",\
 },\
 [0x1EE01]={\
  direction=\"al\",\
 },\
 [0x1EE02]={\
  direction=\"al\",\
 },\
 [0x1EE03]={\
  direction=\"al\",\
 },\
 [0x1EE05]={\
  direction=\"al\",\
 },\
 [0x1EE06]={\
  direction=\"al\",\
 },\
 [0x1EE07]={\
  direction=\"al\",\
 },\
 [0x1EE08]={\
  direction=\"al\",\
 },\
 [0x1EE09]={\
  direction=\"al\",\
 },\
 [0x1EE0A]={\
  direction=\"al\",\
 },\
 [0x1EE0B]={\
  direction=\"al\",\
 },\
 [0x1EE0C]={\
  direction=\"al\",\
 },\
 [0x1EE0D]={\
  direction=\"al\",\
 },\
 [0x1EE0E]={\
  direction=\"al\",\
 },\
 [0x1EE0F]={\
  direction=\"al\",\
 },\
 [0x1EE10]={\
  direction=\"al\",\
 },\
 [0x1EE11]={\
  direction=\"al\",\
 },\
 [0x1EE12]={\
  direction=\"al\",\
 },\
 [0x1EE13]={\
  direction=\"al\",\
 },\
 [0x1EE14]={\
  direction=\"al\",\
 },\
 [0x1EE15]={\
  direction=\"al\",\
 },\
 [0x1EE16]={\
  direction=\"al\",\
 },\
 [0x1EE17]={\
  direction=\"al\",\
 },\
 [0x1EE18]={\
  direction=\"al\",\
 },\
 [0x1EE19]={\
  direction=\"al\",\
 },\
 [0x1EE1A]={\
  direction=\"al\",\
 },\
 [0x1EE1B]={\
  direction=\"al\",\
 },\
 [0x1EE1C]={\
  direction=\"al\",\
 },\
 [0x1EE1D]={\
  direction=\"al\",\
 },\
 [0x1EE1E]={\
  direction=\"al\",\
 },\
 [0x1EE1F]={\
  direction=\"al\",\
 },\
 [0x1EE21]={\
  direction=\"al\",\
 },\
 [0x1EE22]={\
  direction=\"al\",\
 },\
 [0x1EE24]={\
  direction=\"al\",\
 },\
 [0x1EE27]={\
  direction=\"al\",\
 },\
 [0x1EE29]={\
  direction=\"al\",\
 },\
 [0x1EE2A]={\
  direction=\"al\",\
 },\
 [0x1EE2B]={\
  direction=\"al\",\
 },\
 [0x1EE2C]={\
  direction=\"al\",\
 },\
 [0x1EE2D]={\
  direction=\"al\",\
 },\
 [0x1EE2E]={\
  direction=\"al\",\
 },\
 [0x1EE2F]={\
  direction=\"al\",\
 },\
 [0x1EE30]={\
  direction=\"al\",\
 },\
 [0x1EE31]={\
  direction=\"al\",\
 },\
 [0x1EE32]={\
  direction=\"al\",\
 },\
 [0x1EE34]={\
  direction=\"al\",\
 },\
 [0x1EE35]={\
  direction=\"al\",\
 },\
 [0x1EE36]={\
  direction=\"al\",\
 },\
 [0x1EE37]={\
  direction=\"al\",\
 },\
 [0x1EE39]={\
  direction=\"al\",\
 },\
 [0x1EE3B]={\
  direction=\"al\",\
 },\
 [0x1EE42]={\
  direction=\"al\",\
 },\
 [0x1EE47]={\
  direction=\"al\",\
 },\
 [0x1EE49]={\
  direction=\"al\",\
 },\
 [0x1EE4B]={\
  direction=\"al\",\
 },\
 [0x1EE4D]={\
  direction=\"al\",\
 },\
 [0x1EE4E]={\
  direction=\"al\",\
 },\
 [0x1EE4F]={\
  direction=\"al\",\
 },\
 [0x1EE51]={\
  direction=\"al\",\
 },\
 [0x1EE52]={\
  direction=\"al\",\
 },\
 [0x1EE54]={\
  direction=\"al\",\
 },\
 [0x1EE57]={\
  direction=\"al\",\
 },\
 [0x1EE59]={\
  direction=\"al\",\
 },\
 [0x1EE5B]={\
  direction=\"al\",\
 },\
 [0x1EE5D]={\
  direction=\"al\",\
 },\
 [0x1EE5F]={\
  direction=\"al\",\
 },\
 [0x1EE61]={\
  direction=\"al\",\
 },\
 [0x1EE62]={\
  direction=\"al\",\
 },\
 [0x1EE64]={\
  direction=\"al\",\
 },\
 [0x1EE67]={\
  direction=\"al\",\
 },\
 [0x1EE68]={\
  direction=\"al\",\
 },\
 [0x1EE69]={\
  direction=\"al\",\
 },\
 [0x1EE6A]={\
  direction=\"al\",\
 },\
 [0x1EE6C]={\
  direction=\"al\",\
 },\
 [0x1EE6D]={\
  direction=\"al\",\
 },\
 [0x1EE6E]={\
  direction=\"al\",\
 },\
 [0x1EE6F]={\
  direction=\"al\",\
 },\
 [0x1EE70]={\
  direction=\"al\",\
 },\
 [0x1EE71]={\
  direction=\"al\",\
 },\
 [0x1EE72]={\
  direction=\"al\",\
 },\
 [0x1EE74]={\
  direction=\"al\",\
 },\
 [0x1EE75]={\
  direction=\"al\",\
 },\
 [0x1EE76]={\
  direction=\"al\",\
 },\
 [0x1EE77]={\
  direction=\"al\",\
 },\
 [0x1EE79]={\
  direction=\"al\",\
 },\
 [0x1EE7A]={\
  direction=\"al\",\
 },\
 [0x1EE7B]={\
  direction=\"al\",\
 },\
 [0x1EE7C]={\
  direction=\"al\",\
 },\
 [0x1EE7E]={\
  direction=\"al\",\
 },\
 [0x1EE80]={\
  direction=\"al\",\
 },\
 [0x1EE81]={\
  direction=\"al\",\
 },\
 [0x1EE82]={\
  direction=\"al\",\
 },\
 [0x1EE83]={\
  direction=\"al\",\
 },\
 [0x1EE84]={\
  direction=\"al\",\
 },\
 [0x1EE85]={\
  direction=\"al\",\
 },\
 [0x1EE86]={\
  direction=\"al\",\
 },\
 [0x1EE87]={\
  direction=\"al\",\
 },\
 [0x1EE88]={\
  direction=\"al\",\
 },\
 [0x1EE89]={\
  direction=\"al\",\
 },\
 [0x1EE8B]={\
  direction=\"al\",\
 },\
 [0x1EE8C]={\
  direction=\"al\",\
 },\
 [0x1EE8D]={\
  direction=\"al\",\
 },\
 [0x1EE8E]={\
  direction=\"al\",\
 },\
 [0x1EE8F]={\
  direction=\"al\",\
 },\
 [0x1EE90]={\
  direction=\"al\",\
 },\
 [0x1EE91]={\
  direction=\"al\",\
 },\
 [0x1EE92]={\
  direction=\"al\",\
 },\
 [0x1EE93]={\
  direction=\"al\",\
 },\
 [0x1EE94]={\
  direction=\"al\",\
 },\
 [0x1EE95]={\
  direction=\"al\",\
 },\
 [0x1EE96]={\
  direction=\"al\",\
 },\
 [0x1EE97]={\
  direction=\"al\",\
 },\
 [0x1EE98]={\
  direction=\"al\",\
 },\
 [0x1EE99]={\
  direction=\"al\",\
 },\
 [0x1EE9A]={\
  direction=\"al\",\
 },\
 [0x1EE9B]={\
  direction=\"al\",\
 },\
 [0x1EEA1]={\
  direction=\"al\",\
 },\
 [0x1EEA2]={\
  direction=\"al\",\
 },\
 [0x1EEA3]={\
  direction=\"al\",\
 },\
 [0x1EEA5]={\
  direction=\"al\",\
 },\
 [0x1EEA6]={\
  direction=\"al\",\
 },\
 [0x1EEA7]={\
  direction=\"al\",\
 },\
 [0x1EEA8]={\
  direction=\"al\",\
 },\
 [0x1EEA9]={\
  direction=\"al\",\
 },\
 [0x1EEAB]={\
  direction=\"al\",\
 },\
 [0x1EEAC]={\
  direction=\"al\",\
 },\
 [0x1EEAD]={\
  direction=\"al\",\
 },\
 [0x1EEAE]={\
  direction=\"al\",\
 },\
 [0x1EEAF]={\
  direction=\"al\",\
 },\
 [0x1EEB0]={\
  direction=\"al\",\
 },\
 [0x1EEB1]={\
  direction=\"al\",\
 },\
 [0x1EEB2]={\
  direction=\"al\",\
 },\
 [0x1EEB3]={\
  direction=\"al\",\
 },\
 [0x1EEB4]={\
  direction=\"al\",\
 },\
 [0x1EEB5]={\
  direction=\"al\",\
 },\
 [0x1EEB6]={\
  direction=\"al\",\
 },\
 [0x1EEB7]={\
  direction=\"al\",\
 },\
 [0x1EEB8]={\
  direction=\"al\",\
 },\
 [0x1EEB9]={\
  direction=\"al\",\
 },\
 [0x1EEBA]={\
  direction=\"al\",\
 },\
 [0x1EEBB]={\
  direction=\"al\",\
 },\
 [0x1EEF0]={\
  direction=\"on\",\
 },\
 [0x1EEF1]={\
  direction=\"on\",\
 },\
 [0x1F000]={\
  direction=\"on\",\
 },\
 [0x1F001]={\
  direction=\"on\",\
 },\
 [0x1F002]={\
  direction=\"on\",\
 },\
 [0x1F003]={\
  direction=\"on\",\
 },\
 [0x1F004]={\
  direction=\"on\",\
 },\
 [0x1F005]={\
  direction=\"on\",\
 },\
 [0x1F006]={\
  direction=\"on\",\
 },\
 [0x1F007]={\
  direction=\"on\",\
 },\
 [0x1F008]={\
  direction=\"on\",\
 },\
 [0x1F009]={\
  direction=\"on\",\
 },\
 [0x1F00A]={\
  direction=\"on\",\
 },\
 [0x1F00B]={\
  direction=\"on\",\
 },\
 [0x1F00C]={\
  direction=\"on\",\
 },\
 [0x1F00D]={\
  direction=\"on\",\
 },\
 [0x1F00E]={\
  direction=\"on\",\
 },\
 [0x1F00F]={\
  direction=\"on\",\
 },\
 [0x1F010]={\
  direction=\"on\",\
 },\
 [0x1F011]={\
  direction=\"on\",\
 },\
 [0x1F012]={\
  direction=\"on\",\
 },\
 [0x1F013]={\
  direction=\"on\",\
 },\
 [0x1F014]={\
  direction=\"on\",\
 },\
 [0x1F015]={\
  direction=\"on\",\
 },\
 [0x1F016]={\
  direction=\"on\",\
 },\
 [0x1F017]={\
  direction=\"on\",\
 },\
 [0x1F018]={\
  direction=\"on\",\
 },\
 [0x1F019]={\
  direction=\"on\",\
 },\
 [0x1F01A]={\
  direction=\"on\",\
 },\
 [0x1F01B]={\
  direction=\"on\",\
 },\
 [0x1F01C]={\
  direction=\"on\",\
 },\
 [0x1F01D]={\
  direction=\"on\",\
 },\
 [0x1F01E]={\
  direction=\"on\",\
 },\
 [0x1F01F]={\
  direction=\"on\",\
 },\
 [0x1F020]={\
  direction=\"on\",\
 },\
 [0x1F021]={\
  direction=\"on\",\
 },\
 [0x1F022]={\
  direction=\"on\",\
 },\
 [0x1F023]={\
  direction=\"on\",\
 },\
 [0x1F024]={\
  direction=\"on\",\
 },\
 [0x1F025]={\
  direction=\"on\",\
 },\
 [0x1F026]={\
  direction=\"on\",\
 },\
 [0x1F027]={\
  direction=\"on\",\
 },\
 [0x1F028]={\
  direction=\"on\",\
 },\
 [0x1F029]={\
  direction=\"on\",\
 },\
 [0x1F02A]={\
  direction=\"on\",\
 },\
 [0x1F02B]={\
  direction=\"on\",\
 },\
 [0x1F030]={\
  direction=\"on\",\
 },\
 [0x1F031]={\
  direction=\"on\",\
 },\
 [0x1F032]={\
  direction=\"on\",\
 },\
 [0x1F033]={\
  direction=\"on\",\
 },\
 [0x1F034]={\
  direction=\"on\",\
 },\
 [0x1F035]={\
  direction=\"on\",\
 },\
 [0x1F036]={\
  direction=\"on\",\
 },\
 [0x1F037]={\
  direction=\"on\",\
 },\
 [0x1F038]={\
  direction=\"on\",\
 },\
 [0x1F039]={\
  direction=\"on\",\
 },\
 [0x1F03A]={\
  direction=\"on\",\
 },\
 [0x1F03B]={\
  direction=\"on\",\
 },\
 [0x1F03C]={\
  direction=\"on\",\
 },\
 [0x1F03D]={\
  direction=\"on\",\
 },\
 [0x1F03E]={\
  direction=\"on\",\
 },\
 [0x1F03F]={\
  direction=\"on\",\
 },\
 [0x1F040]={\
  direction=\"on\",\
 },\
 [0x1F041]={\
  direction=\"on\",\
 },\
 [0x1F042]={\
  direction=\"on\",\
 },\
 [0x1F043]={\
  direction=\"on\",\
 },\
 [0x1F044]={\
  direction=\"on\",\
 },\
 [0x1F045]={\
  direction=\"on\",\
 },\
 [0x1F046]={\
  direction=\"on\",\
 },\
 [0x1F047]={\
  direction=\"on\",\
 },\
 [0x1F048]={\
  direction=\"on\",\
 },\
 [0x1F049]={\
  direction=\"on\",\
 },\
 [0x1F04A]={\
  direction=\"on\",\
 },\
 [0x1F04B]={\
  direction=\"on\",\
 },\
 [0x1F04C]={\
  direction=\"on\",\
 },\
 [0x1F04D]={\
  direction=\"on\",\
 },\
 [0x1F04E]={\
  direction=\"on\",\
 },\
 [0x1F04F]={\
  direction=\"on\",\
 },\
 [0x1F050]={\
  direction=\"on\",\
 },\
 [0x1F051]={\
  direction=\"on\",\
 },\
 [0x1F052]={\
  direction=\"on\",\
 },\
 [0x1F053]={\
  direction=\"on\",\
 },\
 [0x1F054]={\
  direction=\"on\",\
 },\
 [0x1F055]={\
  direction=\"on\",\
 },\
 [0x1F056]={\
  direction=\"on\",\
 },\
 [0x1F057]={\
  direction=\"on\",\
 },\
 [0x1F058]={\
  direction=\"on\",\
 },\
 [0x1F059]={\
  direction=\"on\",\
 },\
 [0x1F05A]={\
  direction=\"on\",\
 },\
 [0x1F05B]={\
  direction=\"on\",\
 },\
 [0x1F05C]={\
  direction=\"on\",\
 },\
 [0x1F05D]={\
  direction=\"on\",\
 },\
 [0x1F05E]={\
  direction=\"on\",\
 },\
 [0x1F05F]={\
  direction=\"on\",\
 },\
 [0x1F060]={\
  direction=\"on\",\
 },\
 [0x1F061]={\
  direction=\"on\",\
 },\
 [0x1F062]={\
  direction=\"on\",\
 },\
 [0x1F063]={\
  direction=\"on\",\
 },\
 [0x1F064]={\
  direction=\"on\",\
 },\
 [0x1F065]={\
  direction=\"on\",\
 },\
 [0x1F066]={\
  direction=\"on\",\
 },\
 [0x1F067]={\
  direction=\"on\",\
 },\
 [0x1F068]={\
  direction=\"on\",\
 },\
 [0x1F069]={\
  direction=\"on\",\
 },\
 [0x1F06A]={\
  direction=\"on\",\
 },\
 [0x1F06B]={\
  direction=\"on\",\
 },\
 [0x1F06C]={\
  direction=\"on\",\
 },\
 [0x1F06D]={\
  direction=\"on\",\
 },\
 [0x1F06E]={\
  direction=\"on\",\
 },\
 [0x1F06F]={\
  direction=\"on\",\
 },\
 [0x1F070]={\
  direction=\"on\",\
 },\
 [0x1F071]={\
  direction=\"on\",\
 },\
 [0x1F072]={\
  direction=\"on\",\
 },\
 [0x1F073]={\
  direction=\"on\",\
 },\
 [0x1F074]={\
  direction=\"on\",\
 },\
 [0x1F075]={\
  direction=\"on\",\
 },\
 [0x1F076]={\
  direction=\"on\",\
 },\
 [0x1F077]={\
  direction=\"on\",\
 },\
 [0x1F078]={\
  direction=\"on\",\
 },\
 [0x1F079]={\
  direction=\"on\",\
 },\
 [0x1F07A]={\
  direction=\"on\",\
 },\
 [0x1F07B]={\
  direction=\"on\",\
 },\
 [0x1F07C]={\
  direction=\"on\",\
 },\
 [0x1F07D]={\
  direction=\"on\",\
 },\
 [0x1F07E]={\
  direction=\"on\",\
 },\
 [0x1F07F]={\
  direction=\"on\",\
 },\
 [0x1F080]={\
  direction=\"on\",\
 },\
 [0x1F081]={\
  direction=\"on\",\
 },\
 [0x1F082]={\
  direction=\"on\",\
 },\
 [0x1F083]={\
  direction=\"on\",\
 },\
 [0x1F084]={\
  direction=\"on\",\
 },\
 [0x1F085]={\
  direction=\"on\",\
 },\
 [0x1F086]={\
  direction=\"on\",\
 },\
 [0x1F087]={\
  direction=\"on\",\
 },\
 [0x1F088]={\
  direction=\"on\",\
 },\
 [0x1F089]={\
  direction=\"on\",\
 },\
 [0x1F08A]={\
  direction=\"on\",\
 },\
 [0x1F08B]={\
  direction=\"on\",\
 },\
 [0x1F08C]={\
  direction=\"on\",\
 },\
 [0x1F08D]={\
  direction=\"on\",\
 },\
 [0x1F08E]={\
  direction=\"on\",\
 },\
 [0x1F08F]={\
  direction=\"on\",\
 },\
 [0x1F090]={\
  direction=\"on\",\
 },\
 [0x1F091]={\
  direction=\"on\",\
 },\
 [0x1F092]={\
  direction=\"on\",\
 },\
 [0x1F093]={\
  direction=\"on\",\
 },\
 [0x1F0A0]={\
  direction=\"on\",\
 },\
 [0x1F0A1]={\
  direction=\"on\",\
 },\
 [0x1F0A2]={\
  direction=\"on\",\
 },\
 [0x1F0A3]={\
  direction=\"on\",\
 },\
 [0x1F0A4]={\
  direction=\"on\",\
 },\
 [0x1F0A5]={\
  direction=\"on\",\
 },\
 [0x1F0A6]={\
  direction=\"on\",\
 },\
 [0x1F0A7]={\
  direction=\"on\",\
 },\
 [0x1F0A8]={\
  direction=\"on\",\
 },\
 [0x1F0A9]={\
  direction=\"on\",\
 },\
 [0x1F0AA]={\
  direction=\"on\",\
 },\
 [0x1F0AB]={\
  direction=\"on\",\
 },\
 [0x1F0AC]={\
  direction=\"on\",\
 },\
 [0x1F0AD]={\
  direction=\"on\",\
 },\
 [0x1F0AE]={\
  direction=\"on\",\
 },\
 [0x1F0B1]={\
  direction=\"on\",\
 },\
 [0x1F0B2]={\
  direction=\"on\",\
 },\
 [0x1F0B3]={\
  direction=\"on\",\
 },\
 [0x1F0B4]={\
  direction=\"on\",\
 },\
 [0x1F0B5]={\
  direction=\"on\",\
 },\
 [0x1F0B6]={\
  direction=\"on\",\
 },\
 [0x1F0B7]={\
  direction=\"on\",\
 },\
 [0x1F0B8]={\
  direction=\"on\",\
 },\
 [0x1F0B9]={\
  direction=\"on\",\
 },\
 [0x1F0BA]={\
  direction=\"on\",\
 },\
 [0x1F0BB]={\
  direction=\"on\",\
 },\
 [0x1F0BC]={\
  direction=\"on\",\
 },\
 [0x1F0BD]={\
  direction=\"on\",\
 },\
 [0x1F0BE]={\
  direction=\"on\",\
 },\
 [0x1F0C1]={\
  direction=\"on\",\
 },\
 [0x1F0C2]={\
  direction=\"on\",\
 },\
 [0x1F0C3]={\
  direction=\"on\",\
 },\
 [0x1F0C4]={\
  direction=\"on\",\
 },\
 [0x1F0C5]={\
  direction=\"on\",\
 },\
 [0x1F0C6]={\
  direction=\"on\",\
 },\
 [0x1F0C7]={\
  direction=\"on\",\
 },\
 [0x1F0C8]={\
  direction=\"on\",\
 },\
 [0x1F0C9]={\
  direction=\"on\",\
 },\
 [0x1F0CA]={\
  direction=\"on\",\
 },\
 [0x1F0CB]={\
  direction=\"on\",\
 },\
 [0x1F0CC]={\
  direction=\"on\",\
 },\
 [0x1F0CD]={\
  direction=\"on\",\
 },\
 [0x1F0CE]={\
  direction=\"on\",\
 },\
 [0x1F0CF]={\
  direction=\"on\",\
 },\
 [0x1F0D1]={\
  direction=\"on\",\
 },\
 [0x1F0D2]={\
  direction=\"on\",\
 },\
 [0x1F0D3]={\
  direction=\"on\",\
 },\
 [0x1F0D4]={\
  direction=\"on\",\
 },\
 [0x1F0D5]={\
  direction=\"on\",\
 },\
 [0x1F0D6]={\
  direction=\"on\",\
 },\
 [0x1F0D7]={\
  direction=\"on\",\
 },\
 [0x1F0D8]={\
  direction=\"on\",\
 },\
 [0x1F0D9]={\
  direction=\"on\",\
 },\
 [0x1F0DA]={\
  direction=\"on\",\
 },\
 [0x1F0DB]={\
  direction=\"on\",\
 },\
 [0x1F0DC]={\
  direction=\"on\",\
 },\
 [0x1F0DD]={\
  direction=\"on\",\
 },\
 [0x1F0DE]={\
  direction=\"on\",\
 },\
 [0x1F0DF]={\
  direction=\"on\",\
 },\
 [0x1F100]={\
  direction=\"en\",\
 },\
 [0x1F101]={\
  direction=\"en\",\
 },\
 [0x1F102]={\
  direction=\"en\",\
 },\
 [0x1F103]={\
  direction=\"en\",\
 },\
 [0x1F104]={\
  direction=\"en\",\
 },\
 [0x1F105]={\
  direction=\"en\",\
 },\
 [0x1F106]={\
  direction=\"en\",\
 },\
 [0x1F107]={\
  direction=\"en\",\
 },\
 [0x1F108]={\
  direction=\"en\",\
 },\
 [0x1F109]={\
  direction=\"en\",\
 },\
 [0x1F10A]={\
  direction=\"en\",\
 },\
 [0x1F110]={\
  direction=\"l\",\
 },\
 [0x1F111]={\
  direction=\"l\",\
 },\
 [0x1F112]={\
  direction=\"l\",\
 },\
 [0x1F113]={\
  direction=\"l\",\
 },\
 [0x1F114]={\
  direction=\"l\",\
 },\
 [0x1F115]={\
  direction=\"l\",\
 },\
 [0x1F116]={\
  direction=\"l\",\
 },\
 [0x1F117]={\
  direction=\"l\",\
 },\
 [0x1F118]={\
  direction=\"l\",\
 },\
 [0x1F119]={\
  direction=\"l\",\
 },\
 [0x1F11A]={\
  direction=\"l\",\
 },\
 [0x1F11B]={\
  direction=\"l\",\
 },\
 [0x1F11C]={\
  direction=\"l\",\
 },\
 [0x1F11D]={\
  direction=\"l\",\
 },\
 [0x1F11E]={\
  direction=\"l\",\
 },\
 [0x1F11F]={\
  direction=\"l\",\
 },\
 [0x1F120]={\
  direction=\"l\",\
 },\
 [0x1F121]={\
  direction=\"l\",\
 },\
 [0x1F122]={\
  direction=\"l\",\
 },\
 [0x1F123]={\
  direction=\"l\",\
 },\
 [0x1F124]={\
  direction=\"l\",\
 },\
 [0x1F125]={\
  direction=\"l\",\
 },\
 [0x1F126]={\
  direction=\"l\",\
 },\
 [0x1F127]={\
  direction=\"l\",\
 },\
 [0x1F128]={\
  direction=\"l\",\
 },\
 [0x1F129]={\
  direction=\"l\",\
 },\
 [0x1F12A]={\
  direction=\"l\",\
 },\
 [0x1F12B]={\
  direction=\"l\",\
 },\
 [0x1F12C]={\
  direction=\"l\",\
 },\
 [0x1F12D]={\
  direction=\"l\",\
 },\
 [0x1F12E]={\
  direction=\"l\",\
 },\
 [0x1F130]={\
  direction=\"l\",\
 },\
 [0x1F131]={\
  direction=\"l\",\
 },\
 [0x1F132]={\
  direction=\"l\",\
 },\
 [0x1F133]={\
  direction=\"l\",\
 },\
 [0x1F134]={\
  direction=\"l\",\
 },\
 [0x1F135]={\
  direction=\"l\",\
 },\
 [0x1F136]={\
  direction=\"l\",\
 },\
 [0x1F137]={\
  direction=\"l\",\
 },\
 [0x1F138]={\
  direction=\"l\",\
 },\
 [0x1F139]={\
  direction=\"l\",\
 },\
 [0x1F13A]={\
  direction=\"l\",\
 },\
 [0x1F13B]={\
  direction=\"l\",\
 },\
 [0x1F13C]={\
  direction=\"l\",\
 },\
 [0x1F13D]={\
  direction=\"l\",\
 },\
 [0x1F13E]={\
  direction=\"l\",\
 },\
 [0x1F13F]={\
  direction=\"l\",\
 },\
 [0x1F140]={\
  direction=\"l\",\
 },\
 [0x1F141]={\
  direction=\"l\",\
 },\
 [0x1F142]={\
  direction=\"l\",\
 },\
 [0x1F143]={\
  direction=\"l\",\
 },\
 [0x1F144]={\
  direction=\"l\",\
 },\
 [0x1F145]={\
  direction=\"l\",\
 },\
 [0x1F146]={\
  direction=\"l\",\
 },\
 [0x1F147]={\
  direction=\"l\",\
 },\
 [0x1F148]={\
  direction=\"l\",\
 },\
 [0x1F149]={\
  direction=\"l\",\
 },\
 [0x1F14A]={\
  direction=\"l\",\
 },\
 [0x1F14B]={\
  direction=\"l\",\
 },\
 [0x1F14C]={\
  direction=\"l\",\
 },\
 [0x1F14D]={\
  direction=\"l\",\
 },\
 [0x1F14E]={\
  direction=\"l\",\
 },\
 [0x1F14F]={\
  direction=\"l\",\
 },\
 [0x1F150]={\
  direction=\"l\",\
 },\
 [0x1F151]={\
  direction=\"l\",\
 },\
 [0x1F152]={\
  direction=\"l\",\
 },\
 [0x1F153]={\
  direction=\"l\",\
 },\
 [0x1F154]={\
  direction=\"l\",\
 },\
 [0x1F155]={\
  direction=\"l\",\
 },\
 [0x1F156]={\
  direction=\"l\",\
 },\
 [0x1F157]={\
  direction=\"l\",\
 },\
 [0x1F158]={\
  direction=\"l\",\
 },\
 [0x1F159]={\
  direction=\"l\",\
 },\
 [0x1F15A]={\
  direction=\"l\",\
 },\
 [0x1F15B]={\
  direction=\"l\",\
 },\
 [0x1F15C]={\
  direction=\"l\",\
 },\
 [0x1F15D]={\
  direction=\"l\",\
 },\
 [0x1F15E]={\
  direction=\"l\",\
 },\
 [0x1F15F]={\
  direction=\"l\",\
 },\
 [0x1F160]={\
  direction=\"l\",\
 },\
 [0x1F161]={\
  direction=\"l\",\
 },\
 [0x1F162]={\
  direction=\"l\",\
 },\
 [0x1F163]={\
  direction=\"l\",\
 },\
 [0x1F164]={\
  direction=\"l\",\
 },\
 [0x1F165]={\
  direction=\"l\",\
 },\
 [0x1F166]={\
  direction=\"l\",\
 },\
 [0x1F167]={\
  direction=\"l\",\
 },\
 [0x1F168]={\
  direction=\"l\",\
 },\
 [0x1F169]={\
  direction=\"l\",\
 },\
 [0x1F16A]={\
  direction=\"on\",\
 },\
 [0x1F16B]={\
  direction=\"on\",\
 },\
 [0x1F170]={\
  direction=\"l\",\
 },\
 [0x1F171]={\
  direction=\"l\",\
 },\
 [0x1F172]={\
  direction=\"l\",\
 },\
 [0x1F173]={\
  direction=\"l\",\
 },\
 [0x1F174]={\
  direction=\"l\",\
 },\
 [0x1F175]={\
  direction=\"l\",\
 },\
 [0x1F176]={\
  direction=\"l\",\
 },\
 [0x1F177]={\
  direction=\"l\",\
 },\
 [0x1F178]={\
  direction=\"l\",\
 },\
 [0x1F179]={\
  direction=\"l\",\
 },\
 [0x1F17A]={\
  direction=\"l\",\
 },\
 [0x1F17B]={\
  direction=\"l\",\
 },\
 [0x1F17C]={\
  direction=\"l\",\
 },\
 [0x1F17D]={\
  direction=\"l\",\
 },\
 [0x1F17E]={\
  direction=\"l\",\
 },\
 [0x1F17F]={\
  direction=\"l\",\
 },\
 [0x1F180]={\
  direction=\"l\",\
 },\
 [0x1F181]={\
  direction=\"l\",\
 },\
 [0x1F182]={\
  direction=\"l\",\
 },\
 [0x1F183]={\
  direction=\"l\",\
 },\
 [0x1F184]={\
  direction=\"l\",\
 },\
 [0x1F185]={\
  direction=\"l\",\
 },\
 [0x1F186]={\
  direction=\"l\",\
 },\
 [0x1F187]={\
  direction=\"l\",\
 },\
 [0x1F188]={\
  direction=\"l\",\
 },\
 [0x1F189]={\
  direction=\"l\",\
 },\
 [0x1F18A]={\
  direction=\"l\",\
 },\
 [0x1F18B]={\
  direction=\"l\",\
 },\
 [0x1F18C]={\
  direction=\"l\",\
 },\
 [0x1F18D]={\
  direction=\"l\",\
 },\
 [0x1F18E]={\
  direction=\"l\",\
 },\
 [0x1F18F]={\
  direction=\"l\",\
 },\
 [0x1F190]={\
  direction=\"l\",\
 },\
 [0x1F191]={\
  direction=\"l\",\
 },\
 [0x1F192]={\
  direction=\"l\",\
 },\
 [0x1F193]={\
  direction=\"l\",\
 },\
 [0x1F194]={\
  direction=\"l\",\
 },\
 [0x1F195]={\
  direction=\"l\",\
 },\
 [0x1F196]={\
  direction=\"l\",\
 },\
 [0x1F197]={\
  direction=\"l\",\
 },\
 [0x1F198]={\
  direction=\"l\",\
 },\
 [0x1F199]={\
  direction=\"l\",\
 },\
 [0x1F19A]={\
  direction=\"l\",\
 },\
 [0x1F1E6]={\
  direction=\"l\",\
 },\
 [0x1F1E7]={\
  direction=\"l\",\
 },\
 [0x1F1E8]={\
  direction=\"l\",\
 },\
 [0x1F1E9]={\
  direction=\"l\",\
 },\
 [0x1F1EA]={\
  direction=\"l\",\
 },\
 [0x1F1EB]={\
  direction=\"l\",\
 },\
 [0x1F1EC]={\
  direction=\"l\",\
 },\
 [0x1F1ED]={\
  direction=\"l\",\
 },\
 [0x1F1EE]={\
  direction=\"l\",\
 },\
 [0x1F1EF]={\
  direction=\"l\",\
 },\
 [0x1F1F0]={\
  direction=\"l\",\
 },\
 [0x1F1F1]={\
  direction=\"l\",\
 },\
 [0x1F1F2]={\
  direction=\"l\",\
 },\
 [0x1F1F3]={\
  direction=\"l\",\
 },\
 [0x1F1F4]={\
  direction=\"l\",\
 },\
 [0x1F1F5]={\
  direction=\"l\",\
 },\
 [0x1F1F6]={\
  direction=\"l\",\
 },\
 [0x1F1F7]={\
  direction=\"l\",\
 },\
 [0x1F1F8]={\
  direction=\"l\",\
 },\
 [0x1F1F9]={\
  direction=\"l\",\
 },\
 [0x1F1FA]={\
  direction=\"l\",\
 },\
 [0x1F1FB]={\
  direction=\"l\",\
 },\
 [0x1F1FC]={\
  direction=\"l\",\
 },\
 [0x1F1FD]={\
  direction=\"l\",\
 },\
 [0x1F1FE]={\
  direction=\"l\",\
 },\
 [0x1F1FF]={\
  direction=\"l\",\
 },\
 [0x1F200]={\
  direction=\"l\",\
 },\
 [0x1F201]={\
  direction=\"l\",\
 },\
 [0x1F202]={\
  direction=\"l\",\
 },\
 [0x1F210]={\
  direction=\"l\",\
 },\
 [0x1F211]={\
  direction=\"l\",\
 },\
 [0x1F212]={\
  direction=\"l\",\
 },\
 [0x1F213]={\
  direction=\"l\",\
 },\
 [0x1F214]={\
  direction=\"l\",\
 },\
 [0x1F215]={\
  direction=\"l\",\
 },\
 [0x1F216]={\
  direction=\"l\",\
 },\
 [0x1F217]={\
  direction=\"l\",\
 },\
 [0x1F218]={\
  direction=\"l\",\
 },\
 [0x1F219]={\
  direction=\"l\",\
 },\
 [0x1F21A]={\
  direction=\"l\",\
 },\
 [0x1F21B]={\
  direction=\"l\",\
 },\
 [0x1F21C]={\
  direction=\"l\",\
 },\
 [0x1F21D]={\
  direction=\"l\",\
 },\
 [0x1F21E]={\
  direction=\"l\",\
 },\
 [0x1F21F]={\
  direction=\"l\",\
 },\
 [0x1F220]={\
  direction=\"l\",\
 },\
 [0x1F221]={\
  direction=\"l\",\
 },\
 [0x1F222]={\
  direction=\"l\",\
 },\
 [0x1F223]={\
  direction=\"l\",\
 },\
 [0x1F224]={\
  direction=\"l\",\
 },\
 [0x1F225]={\
  direction=\"l\",\
 },\
 [0x1F226]={\
  direction=\"l\",\
 },\
 [0x1F227]={\
  direction=\"l\",\
 },\
 [0x1F228]={\
  direction=\"l\",\
 },\
 [0x1F229]={\
  direction=\"l\",\
 },\
 [0x1F22A]={\
  direction=\"l\",\
 },\
 [0x1F22B]={\
  direction=\"l\",\
 },\
 [0x1F22C]={\
  direction=\"l\",\
 },\
 [0x1F22D]={\
  direction=\"l\",\
 },\
 [0x1F22E]={\
  direction=\"l\",\
 },\
 [0x1F22F]={\
  direction=\"l\",\
 },\
 [0x1F230]={\
  direction=\"l\",\
 },\
 [0x1F231]={\
  direction=\"l\",\
 },\
 [0x1F232]={\
  direction=\"l\",\
 },\
 [0x1F233]={\
  direction=\"l\",\
 },\
 [0x1F234]={\
  direction=\"l\",\
 },\
 [0x1F235]={\
  direction=\"l\",\
 },\
 [0x1F236]={\
  direction=\"l\",\
 },\
 [0x1F237]={\
  direction=\"l\",\
 },\
 [0x1F238]={\
  direction=\"l\",\
 },\
 [0x1F239]={\
  direction=\"l\",\
 },\
 [0x1F23A]={\
  direction=\"l\",\
 },\
 [0x1F240]={\
  direction=\"l\",\
 },\
 [0x1F241]={\
  direction=\"l\",\
 },\
 [0x1F242]={\
  direction=\"l\",\
 },\
 [0x1F243]={\
  direction=\"l\",\
 },\
 [0x1F244]={\
  direction=\"l\",\
 },\
 [0x1F245]={\
  direction=\"l\",\
 },\
 [0x1F246]={\
  direction=\"l\",\
 },\
 [0x1F247]={\
  direction=\"l\",\
 },\
 [0x1F248]={\
  direction=\"l\",\
 },\
 [0x1F250]={\
  direction=\"l\",\
 },\
 [0x1F251]={\
  direction=\"l\",\
 },\
 [0x1F300]={\
  direction=\"on\",\
 },\
 [0x1F301]={\
  direction=\"on\",\
 },\
 [0x1F302]={\
  direction=\"on\",\
 },\
 [0x1F303]={\
  direction=\"on\",\
 },\
 [0x1F304]={\
  direction=\"on\",\
 },\
 [0x1F305]={\
  direction=\"on\",\
 },\
 [0x1F306]={\
  direction=\"on\",\
 },\
 [0x1F307]={\
  direction=\"on\",\
 },\
 [0x1F308]={\
  direction=\"on\",\
 },\
 [0x1F309]={\
  direction=\"on\",\
 },\
 [0x1F30A]={\
  direction=\"on\",\
 },\
 [0x1F30B]={\
  direction=\"on\",\
 },\
 [0x1F30C]={\
  direction=\"on\",\
 },\
 [0x1F30D]={\
  direction=\"on\",\
 },\
 [0x1F30E]={\
  direction=\"on\",\
 },\
 [0x1F30F]={\
  direction=\"on\",\
 },\
 [0x1F310]={\
  direction=\"on\",\
 },\
 [0x1F311]={\
  direction=\"on\",\
 },\
 [0x1F312]={\
  direction=\"on\",\
 },\
 [0x1F313]={\
  direction=\"on\",\
 },\
 [0x1F314]={\
  direction=\"on\",\
 },\
 [0x1F315]={\
  direction=\"on\",\
 },\
 [0x1F316]={\
  direction=\"on\",\
 },\
 [0x1F317]={\
  direction=\"on\",\
 },\
 [0x1F318]={\
  direction=\"on\",\
 },\
 [0x1F319]={\
  direction=\"on\",\
 },\
 [0x1F31A]={\
  direction=\"on\",\
 },\
 [0x1F31B]={\
  direction=\"on\",\
 },\
 [0x1F31C]={\
  direction=\"on\",\
 },\
 [0x1F31D]={\
  direction=\"on\",\
 },\
 [0x1F31E]={\
  direction=\"on\",\
 },\
 [0x1F31F]={\
  direction=\"on\",\
 },\
 [0x1F320]={\
  direction=\"on\",\
 },\
 [0x1F330]={\
  direction=\"on\",\
 },\
 [0x1F331]={\
  direction=\"on\",\
 },\
 [0x1F332]={\
  direction=\"on\",\
 },\
 [0x1F333]={\
  direction=\"on\",\
 },\
 [0x1F334]={\
  direction=\"on\",\
 },\
 [0x1F335]={\
  direction=\"on\",\
 },\
 [0x1F337]={\
  direction=\"on\",\
 },\
 [0x1F338]={\
  direction=\"on\",\
 },\
 [0x1F339]={\
  direction=\"on\",\
 },\
 [0x1F33A]={\
  direction=\"on\",\
 },\
 [0x1F33B]={\
  direction=\"on\",\
 },\
 [0x1F33C]={\
  direction=\"on\",\
 },\
 [0x1F33D]={\
  direction=\"on\",\
 },\
 [0x1F33E]={\
  direction=\"on\",\
 },\
 [0x1F33F]={\
  direction=\"on\",\
 },\
 [0x1F340]={\
  direction=\"on\",\
 },\
 [0x1F341]={\
  direction=\"on\",\
 },\
 [0x1F342]={\
  direction=\"on\",\
 },\
 [0x1F343]={\
  direction=\"on\",\
 },\
 [0x1F344]={\
  direction=\"on\",\
 },\
 [0x1F345]={\
  direction=\"on\",\
 },\
 [0x1F346]={\
  direction=\"on\",\
 },\
 [0x1F347]={\
  direction=\"on\",\
 },\
 [0x1F348]={\
  direction=\"on\",\
 },\
 [0x1F349]={\
  direction=\"on\",\
 },\
 [0x1F34A]={\
  direction=\"on\",\
 },\
 [0x1F34B]={\
  direction=\"on\",\
 },\
 [0x1F34C]={\
  direction=\"on\",\
 },\
 [0x1F34D]={\
  direction=\"on\",\
 },\
 [0x1F34E]={\
  direction=\"on\",\
 },\
 [0x1F34F]={\
  direction=\"on\",\
 },\
 [0x1F350]={\
  direction=\"on\",\
 },\
 [0x1F351]={\
  direction=\"on\",\
 },\
 [0x1F352]={\
  direction=\"on\",\
 },\
 [0x1F353]={\
  direction=\"on\",\
 },\
 [0x1F354]={\
  direction=\"on\",\
 },\
 [0x1F355]={\
  direction=\"on\",\
 },\
 [0x1F356]={\
  direction=\"on\",\
 },\
 [0x1F357]={\
  direction=\"on\",\
 },\
 [0x1F358]={\
  direction=\"on\",\
 },\
 [0x1F359]={\
  direction=\"on\",\
 },\
 [0x1F35A]={\
  direction=\"on\",\
 },\
 [0x1F35B]={\
  direction=\"on\",\
 },\
 [0x1F35C]={\
  direction=\"on\",\
 },\
 [0x1F35D]={\
  direction=\"on\",\
 },\
 [0x1F35E]={\
  direction=\"on\",\
 },\
 [0x1F35F]={\
  direction=\"on\",\
 },\
 [0x1F360]={\
  direction=\"on\",\
 },\
 [0x1F361]={\
  direction=\"on\",\
 },\
 [0x1F362]={\
  direction=\"on\",\
 },\
 [0x1F363]={\
  direction=\"on\",\
 },\
 [0x1F364]={\
  direction=\"on\",\
 },\
 [0x1F365]={\
  direction=\"on\",\
 },\
 [0x1F366]={\
  direction=\"on\",\
 },\
 [0x1F367]={\
  direction=\"on\",\
 },\
 [0x1F368]={\
  direction=\"on\",\
 },\
 [0x1F369]={\
  direction=\"on\",\
 },\
 [0x1F36A]={\
  direction=\"on\",\
 },\
 [0x1F36B]={\
  direction=\"on\",\
 },\
 [0x1F36C]={\
  direction=\"on\",\
 },\
 [0x1F36D]={\
  direction=\"on\",\
 },\
 [0x1F36E]={\
  direction=\"on\",\
 },\
 [0x1F36F]={\
  direction=\"on\",\
 },\
 [0x1F370]={\
  direction=\"on\",\
 },\
 [0x1F371]={\
  direction=\"on\",\
 },\
 [0x1F372]={\
  direction=\"on\",\
 },\
 [0x1F373]={\
  direction=\"on\",\
 },\
 [0x1F374]={\
  direction=\"on\",\
 },\
 [0x1F375]={\
  direction=\"on\",\
 },\
 [0x1F376]={\
  direction=\"on\",\
 },\
 [0x1F377]={\
  direction=\"on\",\
 },\
 [0x1F378]={\
  direction=\"on\",\
 },\
 [0x1F379]={\
  direction=\"on\",\
 },\
 [0x1F37A]={\
  direction=\"on\",\
 },\
 [0x1F37B]={\
  direction=\"on\",\
 },\
 [0x1F37C]={\
  direction=\"on\",\
 },\
 [0x1F380]={\
  direction=\"on\",\
 },\
 [0x1F381]={\
  direction=\"on\",\
 },\
 [0x1F382]={\
  direction=\"on\",\
 },\
 [0x1F383]={\
  direction=\"on\",\
 },\
 [0x1F384]={\
  direction=\"on\",\
 },\
 [0x1F385]={\
  direction=\"on\",\
 },\
 [0x1F386]={\
  direction=\"on\",\
 },\
 [0x1F387]={\
  direction=\"on\",\
 },\
 [0x1F388]={\
  direction=\"on\",\
 },\
 [0x1F389]={\
  direction=\"on\",\
 },\
 [0x1F38A]={\
  direction=\"on\",\
 },\
 [0x1F38B]={\
  direction=\"on\",\
 },\
 [0x1F38C]={\
  direction=\"on\",\
 },\
 [0x1F38D]={\
  direction=\"on\",\
 },\
 [0x1F38E]={\
  direction=\"on\",\
 },\
 [0x1F38F]={\
  direction=\"on\",\
 },\
 [0x1F390]={\
  direction=\"on\",\
 },\
 [0x1F391]={\
  direction=\"on\",\
 },\
 [0x1F392]={\
  direction=\"on\",\
 },\
 [0x1F393]={\
  direction=\"on\",\
 },\
 [0x1F3A0]={\
  direction=\"on\",\
 },\
 [0x1F3A1]={\
  direction=\"on\",\
 },\
 [0x1F3A2]={\
  direction=\"on\",\
 },\
 [0x1F3A3]={\
  direction=\"on\",\
 },\
 [0x1F3A4]={\
  direction=\"on\",\
 },\
 [0x1F3A5]={\
  direction=\"on\",\
 },\
 [0x1F3A6]={\
  direction=\"on\",\
 },\
 [0x1F3A7]={\
  direction=\"on\",\
 },\
 [0x1F3A8]={\
  direction=\"on\",\
 },\
 [0x1F3A9]={\
  direction=\"on\",\
 },\
 [0x1F3AA]={\
  direction=\"on\",\
 },\
 [0x1F3AB]={\
  direction=\"on\",\
 },\
 [0x1F3AC]={\
  direction=\"on\",\
 },\
 [0x1F3AD]={\
  direction=\"on\",\
 },\
 [0x1F3AE]={\
  direction=\"on\",\
 },\
 [0x1F3AF]={\
  direction=\"on\",\
 },\
 [0x1F3B0]={\
  direction=\"on\",\
 },\
 [0x1F3B1]={\
  direction=\"on\",\
 },\
 [0x1F3B2]={\
  direction=\"on\",\
 },\
 [0x1F3B3]={\
  direction=\"on\",\
 },\
 [0x1F3B4]={\
  direction=\"on\",\
 },\
 [0x1F3B5]={\
  direction=\"on\",\
 },\
 [0x1F3B6]={\
  direction=\"on\",\
 },\
 [0x1F3B7]={\
  direction=\"on\",\
 },\
 [0x1F3B8]={\
  direction=\"on\",\
 },\
 [0x1F3B9]={\
  direction=\"on\",\
 },\
 [0x1F3BA]={\
  direction=\"on\",\
 },\
 [0x1F3BB]={\
  direction=\"on\",\
 },\
 [0x1F3BC]={\
  direction=\"on\",\
 },\
 [0x1F3BD]={\
  direction=\"on\",\
 },\
 [0x1F3BE]={\
  direction=\"on\",\
 },\
 [0x1F3BF]={\
  direction=\"on\",\
 },\
 [0x1F3C0]={\
  direction=\"on\",\
 },\
 [0x1F3C1]={\
  direction=\"on\",\
 },\
 [0x1F3C2]={\
  direction=\"on\",\
 },\
 [0x1F3C3]={\
  direction=\"on\",\
 },\
 [0x1F3C4]={\
  direction=\"on\",\
 },\
 [0x1F3C6]={\
  direction=\"on\",\
 },\
 [0x1F3C7]={\
  direction=\"on\",\
 },\
 [0x1F3C8]={\
  direction=\"on\",\
 },\
 [0x1F3C9]={\
  direction=\"on\",\
 },\
 [0x1F3CA]={\
  direction=\"on\",\
 },\
 [0x1F3E0]={\
  direction=\"on\",\
 },\
 [0x1F3E1]={\
  direction=\"on\",\
 },\
 [0x1F3E2]={\
  direction=\"on\",\
 },\
 [0x1F3E3]={\
  direction=\"on\",\
 },\
 [0x1F3E4]={\
  direction=\"on\",\
 },\
 [0x1F3E5]={\
  direction=\"on\",\
 },\
 [0x1F3E6]={\
  direction=\"on\",\
 },\
 [0x1F3E7]={\
  direction=\"on\",\
 },\
 [0x1F3E8]={\
  direction=\"on\",\
 },\
 [0x1F3E9]={\
  direction=\"on\",\
 },\
 [0x1F3EA]={\
  direction=\"on\",\
 },\
 [0x1F3EB]={\
  direction=\"on\",\
 },\
 [0x1F3EC]={\
  direction=\"on\",\
 },\
 [0x1F3ED]={\
  direction=\"on\",\
 },\
 [0x1F3EE]={\
  direction=\"on\",\
 },\
 [0x1F3EF]={\
  direction=\"on\",\
 },\
 [0x1F3F0]={\
  direction=\"on\",\
 },\
 [0x1F400]={\
  direction=\"on\",\
 },\
 [0x1F401]={\
  direction=\"on\",\
 },\
 [0x1F402]={\
  direction=\"on\",\
 },\
 [0x1F403]={\
  direction=\"on\",\
 },\
 [0x1F404]={\
  direction=\"on\",\
 },\
 [0x1F405]={\
  direction=\"on\",\
 },\
 [0x1F406]={\
  direction=\"on\",\
 },\
 [0x1F407]={\
  direction=\"on\",\
 },\
 [0x1F408]={\
  direction=\"on\",\
 },\
 [0x1F409]={\
  direction=\"on\",\
 },\
 [0x1F40A]={\
  direction=\"on\",\
 },\
 [0x1F40B]={\
  direction=\"on\",\
 },\
 [0x1F40C]={\
  direction=\"on\",\
 },\
 [0x1F40D]={\
  direction=\"on\",\
 },\
 [0x1F40E]={\
  direction=\"on\",\
 },\
 [0x1F40F]={\
  direction=\"on\",\
 },\
 [0x1F410]={\
  direction=\"on\",\
 },\
 [0x1F411]={\
  direction=\"on\",\
 },\
 [0x1F412]={\
  direction=\"on\",\
 },\
 [0x1F413]={\
  direction=\"on\",\
 },\
 [0x1F414]={\
  direction=\"on\",\
 },\
 [0x1F415]={\
  direction=\"on\",\
 },\
 [0x1F416]={\
  direction=\"on\",\
 },\
 [0x1F417]={\
  direction=\"on\",\
 },\
 [0x1F418]={\
  direction=\"on\",\
 },\
 [0x1F419]={\
  direction=\"on\",\
 },\
 [0x1F41A]={\
  direction=\"on\",\
 },\
 [0x1F41B]={\
  direction=\"on\",\
 },\
 [0x1F41C]={\
  direction=\"on\",\
 },\
 [0x1F41D]={\
  direction=\"on\",\
 },\
 [0x1F41E]={\
  direction=\"on\",\
 },\
 [0x1F41F]={\
  direction=\"on\",\
 },\
 [0x1F420]={\
  direction=\"on\",\
 },\
 [0x1F421]={\
  direction=\"on\",\
 },\
 [0x1F422]={\
  direction=\"on\",\
 },\
 [0x1F423]={\
  direction=\"on\",\
 },\
 [0x1F424]={\
  direction=\"on\",\
 },\
 [0x1F425]={\
  direction=\"on\",\
 },\
 [0x1F426]={\
  direction=\"on\",\
 },\
 [0x1F427]={\
  direction=\"on\",\
 },\
 [0x1F428]={\
  direction=\"on\",\
 },\
 [0x1F429]={\
  direction=\"on\",\
 },\
 [0x1F42A]={\
  direction=\"on\",\
 },\
 [0x1F42B]={\
  direction=\"on\",\
 },\
 [0x1F42C]={\
  direction=\"on\",\
 },\
 [0x1F42D]={\
  direction=\"on\",\
 },\
 [0x1F42E]={\
  direction=\"on\",\
 },\
 [0x1F42F]={\
  direction=\"on\",\
 },\
 [0x1F430]={\
  direction=\"on\",\
 },\
 [0x1F431]={\
  direction=\"on\",\
 },\
 [0x1F432]={\
  direction=\"on\",\
 },\
 [0x1F433]={\
  direction=\"on\",\
 },\
 [0x1F434]={\
  direction=\"on\",\
 },\
 [0x1F435]={\
  direction=\"on\",\
 },\
 [0x1F436]={\
  direction=\"on\",\
 },\
 [0x1F437]={\
  direction=\"on\",\
 },\
 [0x1F438]={\
  direction=\"on\",\
 },\
 [0x1F439]={\
  direction=\"on\",\
 },\
 [0x1F43A]={\
  direction=\"on\",\
 },\
 [0x1F43B]={\
  direction=\"on\",\
 },\
 [0x1F43C]={\
  direction=\"on\",\
 },\
 [0x1F43D]={\
  direction=\"on\",\
 },\
 [0x1F43E]={\
  direction=\"on\",\
 },\
 [0x1F440]={\
  direction=\"on\",\
 },\
 [0x1F442]={\
  direction=\"on\",\
 },\
 [0x1F443]={\
  direction=\"on\",\
 },\
 [0x1F444]={\
  direction=\"on\",\
 },\
 [0x1F445]={\
  direction=\"on\",\
 },\
 [0x1F446]={\
  direction=\"on\",\
 },\
 [0x1F447]={\
  direction=\"on\",\
 },\
 [0x1F448]={\
  direction=\"on\",\
 },\
 [0x1F449]={\
  direction=\"on\",\
 },\
 [0x1F44A]={\
  direction=\"on\",\
 },\
 [0x1F44B]={\
  direction=\"on\",\
 },\
 [0x1F44C]={\
  direction=\"on\",\
 },\
 [0x1F44D]={\
  direction=\"on\",\
 },\
 [0x1F44E]={\
  direction=\"on\",\
 },\
 [0x1F44F]={\
  direction=\"on\",\
 },\
 [0x1F450]={\
  direction=\"on\",\
 },\
 [0x1F451]={\
  direction=\"on\",\
 },\
 [0x1F452]={\
  direction=\"on\",\
 },\
 [0x1F453]={\
  direction=\"on\",\
 },\
 [0x1F454]={\
  direction=\"on\",\
 },\
 [0x1F455]={\
  direction=\"on\",\
 },\
 [0x1F456]={\
  direction=\"on\",\
 },\
 [0x1F457]={\
  direction=\"on\",\
 },\
 [0x1F458]={\
  direction=\"on\",\
 },\
 [0x1F459]={\
  direction=\"on\",\
 },\
 [0x1F45A]={\
  direction=\"on\",\
 },\
 [0x1F45B]={\
  direction=\"on\",\
 },\
 [0x1F45C]={\
  direction=\"on\",\
 },\
 [0x1F45D]={\
  direction=\"on\",\
 },\
 [0x1F45E]={\
  direction=\"on\",\
 },\
 [0x1F45F]={\
  direction=\"on\",\
 },\
 [0x1F460]={\
  direction=\"on\",\
 },\
 [0x1F461]={\
  direction=\"on\",\
 },\
 [0x1F462]={\
  direction=\"on\",\
 },\
 [0x1F463]={\
  direction=\"on\",\
 },\
 [0x1F464]={\
  direction=\"on\",\
 },\
 [0x1F465]={\
  direction=\"on\",\
 },\
 [0x1F466]={\
  direction=\"on\",\
 },\
 [0x1F467]={\
  direction=\"on\",\
 },\
 [0x1F468]={\
  direction=\"on\",\
 },\
 [0x1F469]={\
  direction=\"on\",\
 },\
 [0x1F46A]={\
  direction=\"on\",\
 },\
 [0x1F46B]={\
  direction=\"on\",\
 },\
 [0x1F46C]={\
  direction=\"on\",\
 },\
 [0x1F46D]={\
  direction=\"on\",\
 },\
 [0x1F46E]={\
  direction=\"on\",\
 },\
 [0x1F46F]={\
  direction=\"on\",\
 },\
 [0x1F470]={\
  direction=\"on\",\
 },\
 [0x1F471]={\
  direction=\"on\",\
 },\
 [0x1F472]={\
  direction=\"on\",\
 },\
 [0x1F473]={\
  direction=\"on\",\
 },\
 [0x1F474]={\
  direction=\"on\",\
 },\
 [0x1F475]={\
  direction=\"on\",\
 },\
 [0x1F476]={\
  direction=\"on\",\
 },\
 [0x1F477]={\
  direction=\"on\",\
 },\
 [0x1F478]={\
  direction=\"on\",\
 },\
 [0x1F479]={\
  direction=\"on\",\
 },\
 [0x1F47A]={\
  direction=\"on\",\
 },\
 [0x1F47B]={\
  direction=\"on\",\
 },\
 [0x1F47C]={\
  direction=\"on\",\
 },\
 [0x1F47D]={\
  direction=\"on\",\
 },\
 [0x1F47E]={\
  direction=\"on\",\
 },\
 [0x1F47F]={\
  direction=\"on\",\
 },\
 [0x1F480]={\
  direction=\"on\",\
 },\
 [0x1F481]={\
  direction=\"on\",\
 },\
 [0x1F482]={\
  direction=\"on\",\
 },\
 [0x1F483]={\
  direction=\"on\",\
 },\
 [0x1F484]={\
  direction=\"on\",\
 },\
 [0x1F485]={\
  direction=\"on\",\
 },\
 [0x1F486]={\
  direction=\"on\",\
 },\
 [0x1F487]={\
  direction=\"on\",\
 },\
 [0x1F488]={\
  direction=\"on\",\
 },\
 [0x1F489]={\
  direction=\"on\",\
 },\
 [0x1F48A]={\
  direction=\"on\",\
 },\
 [0x1F48B]={\
  direction=\"on\",\
 },\
 [0x1F48C]={\
  direction=\"on\",\
 },\
 [0x1F48D]={\
  direction=\"on\",\
 },\
 [0x1F48E]={\
  direction=\"on\",\
 },\
 [0x1F48F]={\
  direction=\"on\",\
 },\
 [0x1F490]={\
  direction=\"on\",\
 },\
 [0x1F491]={\
  direction=\"on\",\
 },\
 [0x1F492]={\
  direction=\"on\",\
 },\
 [0x1F493]={\
  direction=\"on\",\
 },\
 [0x1F494]={\
  direction=\"on\",\
 },\
 [0x1F495]={\
  direction=\"on\",\
 },\
 [0x1F496]={\
  direction=\"on\",\
 },\
 [0x1F497]={\
  direction=\"on\",\
 },\
 [0x1F498]={\
  direction=\"on\",\
 },\
 [0x1F499]={\
  direction=\"on\",\
 },\
 [0x1F49A]={\
  direction=\"on\",\
 },\
 [0x1F49B]={\
  direction=\"on\",\
 },\
 [0x1F49C]={\
  direction=\"on\",\
 },\
 [0x1F49D]={\
  direction=\"on\",\
 },\
 [0x1F49E]={\
  direction=\"on\",\
 },\
 [0x1F49F]={\
  direction=\"on\",\
 },\
 [0x1F4A0]={\
  direction=\"on\",\
 },\
 [0x1F4A1]={\
  direction=\"on\",\
 },\
 [0x1F4A2]={\
  direction=\"on\",\
 },\
 [0x1F4A3]={\
  direction=\"on\",\
 },\
 [0x1F4A4]={\
  direction=\"on\",\
 },\
 [0x1F4A5]={\
  direction=\"on\",\
 },\
 [0x1F4A6]={\
  direction=\"on\",\
 },\
 [0x1F4A7]={\
  direction=\"on\",\
 },\
 [0x1F4A8]={\
  direction=\"on\",\
 },\
 [0x1F4A9]={\
  direction=\"on\",\
 },\
 [0x1F4AA]={\
  direction=\"on\",\
 },\
 [0x1F4AB]={\
  direction=\"on\",\
 },\
 [0x1F4AC]={\
  direction=\"on\",\
 },\
 [0x1F4AD]={\
  direction=\"on\",\
 },\
 [0x1F4AE]={\
  direction=\"on\",\
 },\
 [0x1F4AF]={\
  direction=\"on\",\
 },\
 [0x1F4B0]={\
  direction=\"on\",\
 },\
 [0x1F4B1]={\
  direction=\"on\",\
 },\
 [0x1F4B2]={\
  direction=\"on\",\
 },\
 [0x1F4B3]={\
  direction=\"on\",\
 },\
 [0x1F4B4]={\
  direction=\"on\",\
 },\
 [0x1F4B5]={\
  direction=\"on\",\
 },\
 [0x1F4B6]={\
  direction=\"on\",\
 },\
 [0x1F4B7]={\
  direction=\"on\",\
 },\
 [0x1F4B8]={\
  direction=\"on\",\
 },\
 [0x1F4B9]={\
  direction=\"on\",\
 },\
 [0x1F4BA]={\
  direction=\"on\",\
 },\
 [0x1F4BB]={\
  direction=\"on\",\
 },\
 [0x1F4BC]={\
  direction=\"on\",\
 },\
 [0x1F4BD]={\
  direction=\"on\",\
 },\
 [0x1F4BE]={\
  direction=\"on\",\
 },\
 [0x1F4BF]={\
  direction=\"on\",\
 },\
 [0x1F4C0]={\
  direction=\"on\",\
 },\
 [0x1F4C1]={\
  direction=\"on\",\
 },\
 [0x1F4C2]={\
  direction=\"on\",\
 },\
 [0x1F4C3]={\
  direction=\"on\",\
 },\
 [0x1F4C4]={\
  direction=\"on\",\
 },\
 [0x1F4C5]={\
  direction=\"on\",\
 },\
 [0x1F4C6]={\
  direction=\"on\",\
 },\
 [0x1F4C7]={\
  direction=\"on\",\
 },\
 [0x1F4C8]={\
  direction=\"on\",\
 },\
 [0x1F4C9]={\
  direction=\"on\",\
 },\
 [0x1F4CA]={\
  direction=\"on\",\
 },\
 [0x1F4CB]={\
  direction=\"on\",\
 },\
 [0x1F4CC]={\
  direction=\"on\",\
 },\
 [0x1F4CD]={\
  direction=\"on\",\
 },\
 [0x1F4CE]={\
  direction=\"on\",\
 },\
 [0x1F4CF]={\
  direction=\"on\",\
 },\
 [0x1F4D0]={\
  direction=\"on\",\
 },\
 [0x1F4D1]={\
  direction=\"on\",\
 },\
 [0x1F4D2]={\
  direction=\"on\",\
 },\
 [0x1F4D3]={\
  direction=\"on\",\
 },\
 [0x1F4D4]={\
  direction=\"on\",\
 },\
 [0x1F4D5]={\
  direction=\"on\",\
 },\
 [0x1F4D6]={\
  direction=\"on\",\
 },\
 [0x1F4D7]={\
  direction=\"on\",\
 },\
 [0x1F4D8]={\
  direction=\"on\",\
 },\
 [0x1F4D9]={\
  direction=\"on\",\
 },\
 [0x1F4DA]={\
  direction=\"on\",\
 },\
 [0x1F4DB]={\
  direction=\"on\",\
 },\
 [0x1F4DC]={\
  direction=\"on\",\
 },\
 [0x1F4DD]={\
  direction=\"on\",\
 },\
 [0x1F4DE]={\
  direction=\"on\",\
 },\
 [0x1F4DF]={\
  direction=\"on\",\
 },\
 [0x1F4E0]={\
  direction=\"on\",\
 },\
 [0x1F4E1]={\
  direction=\"on\",\
 },\
 [0x1F4E2]={\
  direction=\"on\",\
 },\
 [0x1F4E3]={\
  direction=\"on\",\
 },\
 [0x1F4E4]={\
  direction=\"on\",\
 },\
 [0x1F4E5]={\
  direction=\"on\",\
 },\
 [0x1F4E6]={\
  direction=\"on\",\
 },\
 [0x1F4E7]={\
  direction=\"on\",\
 },\
 [0x1F4E8]={\
  direction=\"on\",\
 },\
 [0x1F4E9]={\
  direction=\"on\",\
 },\
 [0x1F4EA]={\
  direction=\"on\",\
 },\
 [0x1F4EB]={\
  direction=\"on\",\
 },\
 [0x1F4EC]={\
  direction=\"on\",\
 },\
 [0x1F4ED]={\
  direction=\"on\",\
 },\
 [0x1F4EE]={\
  direction=\"on\",\
 },\
 [0x1F4EF]={\
  direction=\"on\",\
 },\
 [0x1F4F0]={\
  direction=\"on\",\
 },\
 [0x1F4F1]={\
  direction=\"on\",\
 },\
 [0x1F4F2]={\
  direction=\"on\",\
 },\
 [0x1F4F3]={\
  direction=\"on\",\
 },\
 [0x1F4F4]={\
  direction=\"on\",\
 },\
 [0x1F4F5]={\
  direction=\"on\",\
 },\
 [0x1F4F6]={\
  direction=\"on\",\
 },\
 [0x1F4F7]={\
  direction=\"on\",\
 },\
 [0x1F4F9]={\
  direction=\"on\",\
 },\
 [0x1F4FA]={\
  direction=\"on\",\
 },\
 [0x1F4FB]={\
  direction=\"on\",\
 },\
 [0x1F4FC]={\
  direction=\"on\",\
 },\
 [0x1F500]={\
  direction=\"on\",\
 },\
 [0x1F501]={\
  direction=\"on\",\
 },\
 [0x1F502]={\
  direction=\"on\",\
 },\
 [0x1F503]={\
  direction=\"on\",\
 },\
 [0x1F504]={\
  direction=\"on\",\
 },\
 [0x1F505]={\
  direction=\"on\",\
 },\
 [0x1F506]={\
  direction=\"on\",\
 },\
 [0x1F507]={\
  direction=\"on\",\
 },\
 [0x1F508]={\
  direction=\"on\",\
 },\
 [0x1F509]={\
  direction=\"on\",\
 },\
 [0x1F50A]={\
  direction=\"on\",\
 },\
 [0x1F50B]={\
  direction=\"on\",\
 },\
 [0x1F50C]={\
  direction=\"on\",\
 },\
 [0x1F50D]={\
  direction=\"on\",\
 },\
 [0x1F50E]={\
  direction=\"on\",\
 },\
 [0x1F50F]={\
  direction=\"on\",\
 },\
 [0x1F510]={\
  direction=\"on\",\
 },\
 [0x1F511]={\
  direction=\"on\",\
 },\
 [0x1F512]={\
  direction=\"on\",\
 },\
 [0x1F513]={\
  direction=\"on\",\
 },\
 [0x1F514]={\
  direction=\"on\",\
 },\
 [0x1F515]={\
  direction=\"on\",\
 },\
 [0x1F516]={\
  direction=\"on\",\
 },\
 [0x1F517]={\
  direction=\"on\",\
 },\
 [0x1F518]={\
  direction=\"on\",\
 },\
 [0x1F519]={\
  direction=\"on\",\
 },\
 [0x1F51A]={\
  direction=\"on\",\
 },\
 [0x1F51B]={\
  direction=\"on\",\
 },\
 [0x1F51C]={\
  direction=\"on\",\
 },\
 [0x1F51D]={\
  direction=\"on\",\
 },\
 [0x1F51E]={\
  direction=\"on\",\
 },\
 [0x1F51F]={\
  direction=\"on\",\
 },\
 [0x1F520]={\
  direction=\"on\",\
 },\
 [0x1F521]={\
  direction=\"on\",\
 },\
 [0x1F522]={\
  direction=\"on\",\
 },\
 [0x1F523]={\
  direction=\"on\",\
 },\
 [0x1F524]={\
  direction=\"on\",\
 },\
 [0x1F525]={\
  direction=\"on\",\
 },\
 [0x1F526]={\
  direction=\"on\",\
 },\
 [0x1F527]={\
  direction=\"on\",\
 },\
 [0x1F528]={\
  direction=\"on\",\
 },\
 [0x1F529]={\
  direction=\"on\",\
 },\
 [0x1F52A]={\
  direction=\"on\",\
 },\
 [0x1F52B]={\
  direction=\"on\",\
 },\
 [0x1F52C]={\
  direction=\"on\",\
 },\
 [0x1F52D]={\
  direction=\"on\",\
 },\
 [0x1F52E]={\
  direction=\"on\",\
 },\
 [0x1F52F]={\
  direction=\"on\",\
 },\
 [0x1F530]={\
  direction=\"on\",\
 },\
 [0x1F531]={\
  direction=\"on\",\
 },\
 [0x1F532]={\
  direction=\"on\",\
 },\
 [0x1F533]={\
  direction=\"on\",\
 },\
 [0x1F534]={\
  direction=\"on\",\
 },\
 [0x1F535]={\
  direction=\"on\",\
 },\
 [0x1F536]={\
  direction=\"on\",\
 },\
 [0x1F537]={\
  direction=\"on\",\
 },\
 [0x1F538]={\
  direction=\"on\",\
 },\
 [0x1F539]={\
  direction=\"on\",\
 },\
 [0x1F53A]={\
  direction=\"on\",\
 },\
 [0x1F53B]={\
  direction=\"on\",\
 },\
 [0x1F53C]={\
  direction=\"on\",\
 },\
 [0x1F53D]={\
  direction=\"on\",\
 },\
 [0x1F540]={\
  direction=\"on\",\
 },\
 [0x1F541]={\
  direction=\"on\",\
 },\
 [0x1F542]={\
  direction=\"on\",\
 },\
 [0x1F543]={\
  direction=\"on\",\
 },\
 [0x1F550]={\
  direction=\"on\",\
 },\
 [0x1F551]={\
  direction=\"on\",\
 },\
 [0x1F552]={\
  direction=\"on\",\
 },\
 [0x1F553]={\
  direction=\"on\",\
 },\
 [0x1F554]={\
  direction=\"on\",\
 },\
 [0x1F555]={\
  direction=\"on\",\
 },\
 [0x1F556]={\
  direction=\"on\",\
 },\
 [0x1F557]={\
  direction=\"on\",\
 },\
 [0x1F558]={\
  direction=\"on\",\
 },\
 [0x1F559]={\
  direction=\"on\",\
 },\
 [0x1F55A]={\
  direction=\"on\",\
 },\
 [0x1F55B]={\
  direction=\"on\",\
 },\
 [0x1F55C]={\
  direction=\"on\",\
 },\
 [0x1F55D]={\
  direction=\"on\",\
 },\
 [0x1F55E]={\
  direction=\"on\",\
 },\
 [0x1F55F]={\
  direction=\"on\",\
 },\
 [0x1F560]={\
  direction=\"on\",\
 },\
 [0x1F561]={\
  direction=\"on\",\
 },\
 [0x1F562]={\
  direction=\"on\",\
 },\
 [0x1F563]={\
  direction=\"on\",\
 },\
 [0x1F564]={\
  direction=\"on\",\
 },\
 [0x1F565]={\
  direction=\"on\",\
 },\
 [0x1F566]={\
  direction=\"on\",\
 },\
 [0x1F567]={\
  direction=\"on\",\
 },\
 [0x1F5FB]={\
  direction=\"on\",\
 },\
 [0x1F5FC]={\
  direction=\"on\",\
 },\
 [0x1F5FD]={\
  direction=\"on\",\
 },\
 [0x1F5FE]={\
  direction=\"on\",\
 },\
 [0x1F5FF]={\
  direction=\"on\",\
 },\
 [0x1F600]={\
  direction=\"on\",\
 },\
 [0x1F601]={\
  direction=\"on\",\
 },\
 [0x1F602]={\
  direction=\"on\",\
 },\
 [0x1F603]={\
  direction=\"on\",\
 },\
 [0x1F604]={\
  direction=\"on\",\
 },\
 [0x1F605]={\
  direction=\"on\",\
 },\
 [0x1F606]={\
  direction=\"on\",\
 },\
 [0x1F607]={\
  direction=\"on\",\
 },\
 [0x1F608]={\
  direction=\"on\",\
 },\
 [0x1F609]={\
  direction=\"on\",\
 },\
 [0x1F60A]={\
  direction=\"on\",\
 },\
 [0x1F60B]={\
  direction=\"on\",\
 },\
 [0x1F60C]={\
  direction=\"on\",\
 },\
 [0x1F60D]={\
  direction=\"on\",\
 },\
 [0x1F60E]={\
  direction=\"on\",\
 },\
 [0x1F60F]={\
  direction=\"on\",\
 },\
 [0x1F610]={\
  direction=\"on\",\
 },\
 [0x1F611]={\
  direction=\"on\",\
 },\
 [0x1F612]={\
  direction=\"on\",\
 },\
 [0x1F613]={\
  direction=\"on\",\
 },\
 [0x1F614]={\
  direction=\"on\",\
 },\
 [0x1F615]={\
  direction=\"on\",\
 },\
 [0x1F616]={\
  direction=\"on\",\
 },\
 [0x1F617]={\
  direction=\"on\",\
 },\
 [0x1F618]={\
  direction=\"on\",\
 },\
 [0x1F619]={\
  direction=\"on\",\
 },\
 [0x1F61A]={\
  direction=\"on\",\
 },\
 [0x1F61B]={\
  direction=\"on\",\
 },\
 [0x1F61C]={\
  direction=\"on\",\
 },\
 [0x1F61D]={\
  direction=\"on\",\
 },\
 [0x1F61E]={\
  direction=\"on\",\
 },\
 [0x1F61F]={\
  direction=\"on\",\
 },\
 [0x1F620]={\
  direction=\"on\",\
 },\
 [0x1F621]={\
  direction=\"on\",\
 },\
 [0x1F622]={\
  direction=\"on\",\
 },\
 [0x1F623]={\
  direction=\"on\",\
 },\
 [0x1F624]={\
  direction=\"on\",\
 },\
 [0x1F625]={\
  direction=\"on\",\
 },\
 [0x1F626]={\
  direction=\"on\",\
 },\
 [0x1F627]={\
  direction=\"on\",\
 },\
 [0x1F628]={\
  direction=\"on\",\
 },\
 [0x1F629]={\
  direction=\"on\",\
 },\
 [0x1F62A]={\
  direction=\"on\",\
 },\
 [0x1F62B]={\
  direction=\"on\",\
 },\
 [0x1F62C]={\
  direction=\"on\",\
 },\
 [0x1F62D]={\
  direction=\"on\",\
 },\
 [0x1F62E]={\
  direction=\"on\",\
 },\
 [0x1F62F]={\
  direction=\"on\",\
 },\
 [0x1F630]={\
  direction=\"on\",\
 },\
 [0x1F631]={\
  direction=\"on\",\
 },\
 [0x1F632]={\
  direction=\"on\",\
 },\
 [0x1F633]={\
  direction=\"on\",\
 },\
 [0x1F634]={\
  direction=\"on\",\
 },\
 [0x1F635]={\
  direction=\"on\",\
 },\
 [0x1F636]={\
  direction=\"on\",\
 },\
 [0x1F637]={\
  direction=\"on\",\
 },\
 [0x1F638]={\
  direction=\"on\",\
 },\
 [0x1F639]={\
  direction=\"on\",\
 },\
 [0x1F63A]={\
  direction=\"on\",\
 },\
 [0x1F63B]={\
  direction=\"on\",\
 },\
 [0x1F63C]={\
  direction=\"on\",\
 },\
 [0x1F63D]={\
  direction=\"on\",\
 },\
 [0x1F63E]={\
  direction=\"on\",\
 },\
 [0x1F63F]={\
  direction=\"on\",\
 },\
 [0x1F640]={\
  direction=\"on\",\
 },\
 [0x1F645]={\
  direction=\"on\",\
 },\
 [0x1F646]={\
  direction=\"on\",\
 },\
 [0x1F647]={\
  direction=\"on\",\
 },\
 [0x1F648]={\
  direction=\"on\",\
 },\
 [0x1F649]={\
  direction=\"on\",\
 },\
 [0x1F64A]={\
  direction=\"on\",\
 },\
 [0x1F64B]={\
  direction=\"on\",\
 },\
 [0x1F64C]={\
  direction=\"on\",\
 },\
 [0x1F64D]={\
  direction=\"on\",\
 },\
 [0x1F64E]={\
  direction=\"on\",\
 },\
 [0x1F64F]={\
  direction=\"on\",\
 },\
 [0x1F680]={\
  direction=\"on\",\
 },\
 [0x1F681]={\
  direction=\"on\",\
 },\
 [0x1F682]={\
  direction=\"on\",\
 },\
 [0x1F683]={\
  direction=\"on\",\
 },\
 [0x1F684]={\
  direction=\"on\",\
 },\
 [0x1F685]={\
  direction=\"on\",\
 },\
 [0x1F686]={\
  direction=\"on\",\
 },\
 [0x1F687]={\
  direction=\"on\",\
 },\
 [0x1F688]={\
  direction=\"on\",\
 },\
 [0x1F689]={\
  direction=\"on\",\
 },\
 [0x1F68A]={\
  direction=\"on\",\
 },\
 [0x1F68B]={\
  direction=\"on\",\
 },\
 [0x1F68C]={\
  direction=\"on\",\
 },\
 [0x1F68D]={\
  direction=\"on\",\
 },\
 [0x1F68E]={\
  direction=\"on\",\
 },\
 [0x1F68F]={\
  direction=\"on\",\
 },\
 [0x1F690]={\
  direction=\"on\",\
 },\
 [0x1F691]={\
  direction=\"on\",\
 },\
 [0x1F692]={\
  direction=\"on\",\
 },\
 [0x1F693]={\
  direction=\"on\",\
 },\
 [0x1F694]={\
  direction=\"on\",\
 },\
 [0x1F695]={\
  direction=\"on\",\
 },\
 [0x1F696]={\
  direction=\"on\",\
 },\
 [0x1F697]={\
  direction=\"on\",\
 },\
 [0x1F698]={\
  direction=\"on\",\
 },\
 [0x1F699]={\
  direction=\"on\",\
 },\
 [0x1F69A]={\
  direction=\"on\",\
 },\
 [0x1F69B]={\
  direction=\"on\",\
 },\
 [0x1F69C]={\
  direction=\"on\",\
 },\
 [0x1F69D]={\
  direction=\"on\",\
 },\
 [0x1F69E]={\
  direction=\"on\",\
 },\
 [0x1F69F]={\
  direction=\"on\",\
 },\
 [0x1F6A0]={\
  direction=\"on\",\
 },\
 [0x1F6A1]={\
  direction=\"on\",\
 },\
 [0x1F6A2]={\
  direction=\"on\",\
 },\
 [0x1F6A3]={\
  direction=\"on\",\
 },\
 [0x1F6A4]={\
  direction=\"on\",\
 },\
 [0x1F6A5]={\
  direction=\"on\",\
 },\
 [0x1F6A6]={\
  direction=\"on\",\
 },\
 [0x1F6A7]={\
  direction=\"on\",\
 },\
 [0x1F6A8]={\
  direction=\"on\",\
 },\
 [0x1F6A9]={\
  direction=\"on\",\
 },\
 [0x1F6AA]={\
  direction=\"on\",\
 },\
 [0x1F6AB]={\
  direction=\"on\",\
 },\
 [0x1F6AC]={\
  direction=\"on\",\
 },\
 [0x1F6AD]={\
  direction=\"on\",\
 },\
 [0x1F6AE]={\
  direction=\"on\",\
 },\
 [0x1F6AF]={\
  direction=\"on\",\
 },\
 [0x1F6B0]={\
  direction=\"on\",\
 },\
 [0x1F6B1]={\
  direction=\"on\",\
 },\
 [0x1F6B2]={\
  direction=\"on\",\
 },\
 [0x1F6B3]={\
  direction=\"on\",\
 },\
 [0x1F6B4]={\
  direction=\"on\",\
 },\
 [0x1F6B5]={\
  direction=\"on\",\
 },\
 [0x1F6B6]={\
  direction=\"on\",\
 },\
 [0x1F6B7]={\
  direction=\"on\",\
 },\
 [0x1F6B8]={\
  direction=\"on\",\
 },\
 [0x1F6B9]={\
  direction=\"on\",\
 },\
 [0x1F6BA]={\
  direction=\"on\",\
 },\
 [0x1F6BB]={\
  direction=\"on\",\
 },\
 [0x1F6BC]={\
  direction=\"on\",\
 },\
 [0x1F6BD]={\
  direction=\"on\",\
 },\
 [0x1F6BE]={\
  direction=\"on\",\
 },\
 [0x1F6BF]={\
  direction=\"on\",\
 },\
 [0x1F6C0]={\
  direction=\"on\",\
 },\
 [0x1F6C1]={\
  direction=\"on\",\
 },\
 [0x1F6C2]={\
  direction=\"on\",\
 },\
 [0x1F6C3]={\
  direction=\"on\",\
 },\
 [0x1F6C4]={\
  direction=\"on\",\
 },\
 [0x1F6C5]={\
  direction=\"on\",\
 },\
 [0x1F700]={\
  direction=\"on\",\
 },\
 [0x1F701]={\
  direction=\"on\",\
 },\
 [0x1F702]={\
  direction=\"on\",\
 },\
 [0x1F703]={\
  direction=\"on\",\
 },\
 [0x1F704]={\
  direction=\"on\",\
 },\
 [0x1F705]={\
  direction=\"on\",\
 },\
 [0x1F706]={\
  direction=\"on\",\
 },\
 [0x1F707]={\
  direction=\"on\",\
 },\
 [0x1F708]={\
  direction=\"on\",\
 },\
 [0x1F709]={\
  direction=\"on\",\
 },\
 [0x1F70A]={\
  direction=\"on\",\
 },\
 [0x1F70B]={\
  direction=\"on\",\
 },\
 [0x1F70C]={\
  direction=\"on\",\
 },\
 [0x1F70D]={\
  direction=\"on\",\
 },\
 [0x1F70E]={\
  direction=\"on\",\
 },\
 [0x1F70F]={\
  direction=\"on\",\
 },\
 [0x1F710]={\
  direction=\"on\",\
 },\
 [0x1F711]={\
  direction=\"on\",\
 },\
 [0x1F712]={\
  direction=\"on\",\
 },\
 [0x1F713]={\
  direction=\"on\",\
 },\
 [0x1F714]={\
  direction=\"on\",\
 },\
 [0x1F715]={\
  direction=\"on\",\
 },\
 [0x1F716]={\
  direction=\"on\",\
 },\
 [0x1F717]={\
  direction=\"on\",\
 },\
 [0x1F718]={\
  direction=\"on\",\
 },\
 [0x1F719]={\
  direction=\"on\",\
 },\
 [0x1F71A]={\
  direction=\"on\",\
 },\
 [0x1F71B]={\
  direction=\"on\",\
 },\
 [0x1F71C]={\
  direction=\"on\",\
 },\
 [0x1F71D]={\
  direction=\"on\",\
 },\
 [0x1F71E]={\
  direction=\"on\",\
 },\
 [0x1F71F]={\
  direction=\"on\",\
 },\
 [0x1F720]={\
  direction=\"on\",\
 },\
 [0x1F721]={\
  direction=\"on\",\
 },\
 [0x1F722]={\
  direction=\"on\",\
 },\
 [0x1F723]={\
  direction=\"on\",\
 },\
 [0x1F724]={\
  direction=\"on\",\
 },\
 [0x1F725]={\
  direction=\"on\",\
 },\
 [0x1F726]={\
  direction=\"on\",\
 },\
 [0x1F727]={\
  direction=\"on\",\
 },\
 [0x1F728]={\
  direction=\"on\",\
 },\
 [0x1F729]={\
  direction=\"on\",\
 },\
 [0x1F72A]={\
  direction=\"on\",\
 },\
 [0x1F72B]={\
  direction=\"on\",\
 },\
 [0x1F72C]={\
  direction=\"on\",\
 },\
 [0x1F72D]={\
  direction=\"on\",\
 },\
 [0x1F72E]={\
  direction=\"on\",\
 },\
 [0x1F72F]={\
  direction=\"on\",\
 },\
 [0x1F730]={\
  direction=\"on\",\
 },\
 [0x1F731]={\
  direction=\"on\",\
 },\
 [0x1F732]={\
  direction=\"on\",\
 },\
 [0x1F733]={\
  direction=\"on\",\
 },\
 [0x1F734]={\
  direction=\"on\",\
 },\
 [0x1F735]={\
  direction=\"on\",\
 },\
 [0x1F736]={\
  direction=\"on\",\
 },\
 [0x1F737]={\
  direction=\"on\",\
 },\
 [0x1F738]={\
  direction=\"on\",\
 },\
 [0x1F739]={\
  direction=\"on\",\
 },\
 [0x1F73A]={\
  direction=\"on\",\
 },\
 [0x1F73B]={\
  direction=\"on\",\
 },\
 [0x1F73C]={\
  direction=\"on\",\
 },\
 [0x1F73D]={\
  direction=\"on\",\
 },\
 [0x1F73E]={\
  direction=\"on\",\
 },\
 [0x1F73F]={\
  direction=\"on\",\
 },\
 [0x1F740]={\
  direction=\"on\",\
 },\
 [0x1F741]={\
  direction=\"on\",\
 },\
 [0x1F742]={\
  direction=\"on\",\
 },\
 [0x1F743]={\
  direction=\"on\",\
 },\
 [0x1F744]={\
  direction=\"on\",\
 },\
 [0x1F745]={\
  direction=\"on\",\
 },\
 [0x1F746]={\
  direction=\"on\",\
 },\
 [0x1F747]={\
  direction=\"on\",\
 },\
 [0x1F748]={\
  direction=\"on\",\
 },\
 [0x1F749]={\
  direction=\"on\",\
 },\
 [0x1F74A]={\
  direction=\"on\",\
 },\
 [0x1F74B]={\
  direction=\"on\",\
 },\
 [0x1F74C]={\
  direction=\"on\",\
 },\
 [0x1F74D]={\
  direction=\"on\",\
 },\
 [0x1F74E]={\
  direction=\"on\",\
 },\
 [0x1F74F]={\
  direction=\"on\",\
 },\
 [0x1F750]={\
  direction=\"on\",\
 },\
 [0x1F751]={\
  direction=\"on\",\
 },\
 [0x1F752]={\
  direction=\"on\",\
 },\
 [0x1F753]={\
  direction=\"on\",\
 },\
 [0x1F754]={\
  direction=\"on\",\
 },\
 [0x1F755]={\
  direction=\"on\",\
 },\
 [0x1F756]={\
  direction=\"on\",\
 },\
 [0x1F757]={\
  direction=\"on\",\
 },\
 [0x1F758]={\
  direction=\"on\",\
 },\
 [0x1F759]={\
  direction=\"on\",\
 },\
 [0x1F75A]={\
  direction=\"on\",\
 },\
 [0x1F75B]={\
  direction=\"on\",\
 },\
 [0x1F75C]={\
  direction=\"on\",\
 },\
 [0x1F75D]={\
  direction=\"on\",\
 },\
 [0x1F75E]={\
  direction=\"on\",\
 },\
 [0x1F75F]={\
  direction=\"on\",\
 },\
 [0x1F760]={\
  direction=\"on\",\
 },\
 [0x1F761]={\
  direction=\"on\",\
 },\
 [0x1F762]={\
  direction=\"on\",\
 },\
 [0x1F763]={\
  direction=\"on\",\
 },\
 [0x1F764]={\
  direction=\"on\",\
 },\
 [0x1F765]={\
  direction=\"on\",\
 },\
 [0x1F766]={\
  direction=\"on\",\
 },\
 [0x1F767]={\
  direction=\"on\",\
 },\
 [0x1F768]={\
  direction=\"on\",\
 },\
 [0x1F769]={\
  direction=\"on\",\
 },\
 [0x1F76A]={\
  direction=\"on\",\
 },\
 [0x1F76B]={\
  direction=\"on\",\
 },\
 [0x1F76C]={\
  direction=\"on\",\
 },\
 [0x1F76D]={\
  direction=\"on\",\
 },\
 [0x1F76E]={\
  direction=\"on\",\
 },\
 [0x1F76F]={\
  direction=\"on\",\
 },\
 [0x1F770]={\
  direction=\"on\",\
 },\
 [0x1F771]={\
  direction=\"on\",\
 },\
 [0x1F772]={\
  direction=\"on\",\
 },\
 [0x1F773]={\
  direction=\"on\",\
 },\
 [0x2F800]={\
  direction=\"l\",\
 },\
 [0x2F801]={\
  direction=\"l\",\
 },\
 [0x2F802]={\
  direction=\"l\",\
 },\
 [0x2F803]={\
  direction=\"l\",\
 },\
 [0x2F804]={\
  direction=\"l\",\
 },\
 [0x2F805]={\
  direction=\"l\",\
 },\
 [0x2F806]={\
  direction=\"l\",\
 },\
 [0x2F807]={\
  direction=\"l\",\
 },\
 [0x2F808]={\
  direction=\"l\",\
 },\
 [0x2F809]={\
  direction=\"l\",\
 },\
 [0x2F80A]={\
  direction=\"l\",\
 },\
 [0x2F80B]={\
  direction=\"l\",\
 },\
 [0x2F80C]={\
  direction=\"l\",\
 },\
 [0x2F80D]={\
  direction=\"l\",\
 },\
 [0x2F80E]={\
  direction=\"l\",\
 },\
 [0x2F80F]={\
  direction=\"l\",\
 },\
 [0x2F810]={\
  direction=\"l\",\
 },\
 [0x2F811]={\
  direction=\"l\",\
 },\
 [0x2F812]={\
  direction=\"l\",\
 },\
 [0x2F813]={\
  direction=\"l\",\
 },\
 [0x2F814]={\
  direction=\"l\",\
 },\
 [0x2F815]={\
  direction=\"l\",\
 },\
 [0x2F816]={\
  direction=\"l\",\
 },\
 [0x2F817]={\
  direction=\"l\",\
 },\
 [0x2F818]={\
  direction=\"l\",\
 },\
 [0x2F819]={\
  direction=\"l\",\
 },\
 [0x2F81A]={\
  direction=\"l\",\
 },\
 [0x2F81B]={\
  direction=\"l\",\
 },\
 [0x2F81C]={\
  direction=\"l\",\
 },\
 [0x2F81D]={\
  direction=\"l\",\
 },\
 [0x2F81E]={\
  direction=\"l\",\
 },\
 [0x2F81F]={\
  direction=\"l\",\
 },\
 [0x2F820]={\
  direction=\"l\",\
 },\
 [0x2F821]={\
  direction=\"l\",\
 },\
 [0x2F822]={\
  direction=\"l\",\
 },\
 [0x2F823]={\
  direction=\"l\",\
 },\
 [0x2F824]={\
  direction=\"l\",\
 },\
 [0x2F825]={\
  direction=\"l\",\
 },\
 [0x2F826]={\
  direction=\"l\",\
 },\
 [0x2F827]={\
  direction=\"l\",\
 },\
 [0x2F828]={\
  direction=\"l\",\
 },\
 [0x2F829]={\
  direction=\"l\",\
 },\
 [0x2F82A]={\
  direction=\"l\",\
 },\
 [0x2F82B]={\
  direction=\"l\",\
 },\
 [0x2F82C]={\
  direction=\"l\",\
 },\
 [0x2F82D]={\
  direction=\"l\",\
 },\
 [0x2F82E]={\
  direction=\"l\",\
 },\
 [0x2F82F]={\
  direction=\"l\",\
 },\
 [0x2F830]={\
  direction=\"l\",\
 },\
 [0x2F831]={\
  direction=\"l\",\
 },\
 [0x2F832]={\
  direction=\"l\",\
 },\
 [0x2F833]={\
  direction=\"l\",\
 },\
 [0x2F834]={\
  direction=\"l\",\
 },\
 [0x2F835]={\
  direction=\"l\",\
 },\
 [0x2F836]={\
  direction=\"l\",\
 },\
 [0x2F837]={\
  direction=\"l\",\
 },\
 [0x2F838]={\
  direction=\"l\",\
 },\
 [0x2F839]={\
  direction=\"l\",\
 },\
 [0x2F83A]={\
  direction=\"l\",\
 },\
 [0x2F83B]={\
  direction=\"l\",\
 },\
 [0x2F83C]={\
  direction=\"l\",\
 },\
 [0x2F83D]={\
  direction=\"l\",\
 },\
 [0x2F83E]={\
  direction=\"l\",\
 },\
 [0x2F83F]={\
  direction=\"l\",\
 },\
 [0x2F840]={\
  direction=\"l\",\
 },\
 [0x2F841]={\
  direction=\"l\",\
 },\
 [0x2F842]={\
  direction=\"l\",\
 },\
 [0x2F843]={\
  direction=\"l\",\
 },\
 [0x2F844]={\
  direction=\"l\",\
 },\
 [0x2F845]={\
  direction=\"l\",\
 },\
 [0x2F846]={\
  direction=\"l\",\
 },\
 [0x2F847]={\
  direction=\"l\",\
 },\
 [0x2F848]={\
  direction=\"l\",\
 },\
 [0x2F849]={\
  direction=\"l\",\
 },\
 [0x2F84A]={\
  direction=\"l\",\
 },\
 [0x2F84B]={\
  direction=\"l\",\
 },\
 [0x2F84C]={\
  direction=\"l\",\
 },\
 [0x2F84D]={\
  direction=\"l\",\
 },\
 [0x2F84E]={\
  direction=\"l\",\
 },\
 [0x2F84F]={\
  direction=\"l\",\
 },\
 [0x2F850]={\
  direction=\"l\",\
 },\
 [0x2F851]={\
  direction=\"l\",\
 },\
 [0x2F852]={\
  direction=\"l\",\
 },\
 [0x2F853]={\
  direction=\"l\",\
 },\
 [0x2F854]={\
  direction=\"l\",\
 },\
 [0x2F855]={\
  direction=\"l\",\
 },\
 [0x2F856]={\
  direction=\"l\",\
 },\
 [0x2F857]={\
  direction=\"l\",\
 },\
 [0x2F858]={\
  direction=\"l\",\
 },\
 [0x2F859]={\
  direction=\"l\",\
 },\
 [0x2F85A]={\
  direction=\"l\",\
 },\
 [0x2F85B]={\
  direction=\"l\",\
 },\
 [0x2F85C]={\
  direction=\"l\",\
 },\
 [0x2F85D]={\
  direction=\"l\",\
 },\
 [0x2F85E]={\
  direction=\"l\",\
 },\
 [0x2F85F]={\
  direction=\"l\",\
 },\
 [0x2F860]={\
  direction=\"l\",\
 },\
 [0x2F861]={\
  direction=\"l\",\
 },\
 [0x2F862]={\
  direction=\"l\",\
 },\
 [0x2F863]={\
  direction=\"l\",\
 },\
 [0x2F864]={\
  direction=\"l\",\
 },\
 [0x2F865]={\
  direction=\"l\",\
 },\
 [0x2F866]={\
  direction=\"l\",\
 },\
 [0x2F867]={\
  direction=\"l\",\
 },\
 [0x2F868]={\
  direction=\"l\",\
 },\
 [0x2F869]={\
  direction=\"l\",\
 },\
 [0x2F86A]={\
  direction=\"l\",\
 },\
 [0x2F86B]={\
  direction=\"l\",\
 },\
 [0x2F86C]={\
  direction=\"l\",\
 },\
 [0x2F86D]={\
  direction=\"l\",\
 },\
 [0x2F86E]={\
  direction=\"l\",\
 },\
 [0x2F86F]={\
  direction=\"l\",\
 },\
 [0x2F870]={\
  direction=\"l\",\
 },\
 [0x2F871]={\
  direction=\"l\",\
 },\
 [0x2F872]={\
  direction=\"l\",\
 },\
 [0x2F873]={\
  direction=\"l\",\
 },\
 [0x2F874]={\
  direction=\"l\",\
 },\
 [0x2F875]={\
  direction=\"l\",\
 },\
 [0x2F876]={\
  direction=\"l\",\
 },\
 [0x2F877]={\
  direction=\"l\",\
 },\
 [0x2F878]={\
  direction=\"l\",\
 },\
 [0x2F879]={\
  direction=\"l\",\
 },\
 [0x2F87A]={\
  direction=\"l\",\
 },\
 [0x2F87B]={\
  direction=\"l\",\
 },\
 [0x2F87C]={\
  direction=\"l\",\
 },\
 [0x2F87D]={\
  direction=\"l\",\
 },\
 [0x2F87E]={\
  direction=\"l\",\
 },\
 [0x2F87F]={\
  direction=\"l\",\
 },\
 [0x2F880]={\
  direction=\"l\",\
 },\
 [0x2F881]={\
  direction=\"l\",\
 },\
 [0x2F882]={\
  direction=\"l\",\
 },\
 [0x2F883]={\
  direction=\"l\",\
 },\
 [0x2F884]={\
  direction=\"l\",\
 },\
 [0x2F885]={\
  direction=\"l\",\
 },\
 [0x2F886]={\
  direction=\"l\",\
 },\
 [0x2F887]={\
  direction=\"l\",\
 },\
 [0x2F888]={\
  direction=\"l\",\
 },\
 [0x2F889]={\
  direction=\"l\",\
 },\
 [0x2F88A]={\
  direction=\"l\",\
 },\
 [0x2F88B]={\
  direction=\"l\",\
 },\
 [0x2F88C]={\
  direction=\"l\",\
 },\
 [0x2F88D]={\
  direction=\"l\",\
 },\
 [0x2F88E]={\
  direction=\"l\",\
 },\
 [0x2F88F]={\
  direction=\"l\",\
 },\
 [0x2F890]={\
  direction=\"l\",\
 },\
 [0x2F891]={\
  direction=\"l\",\
 },\
 [0x2F892]={\
  direction=\"l\",\
 },\
 [0x2F893]={\
  direction=\"l\",\
 },\
 [0x2F894]={\
  direction=\"l\",\
 },\
 [0x2F895]={\
  direction=\"l\",\
 },\
 [0x2F896]={\
  direction=\"l\",\
 },\
 [0x2F897]={\
  direction=\"l\",\
 },\
 [0x2F898]={\
  direction=\"l\",\
 },\
 [0x2F899]={\
  direction=\"l\",\
 },\
 [0x2F89A]={\
  direction=\"l\",\
 },\
 [0x2F89B]={\
  direction=\"l\",\
 },\
 [0x2F89C]={\
  direction=\"l\",\
 },\
 [0x2F89D]={\
  direction=\"l\",\
 },\
 [0x2F89E]={\
  direction=\"l\",\
 },\
 [0x2F89F]={\
  direction=\"l\",\
 },\
 [0x2F8A0]={\
  direction=\"l\",\
 },\
 [0x2F8A1]={\
  direction=\"l\",\
 },\
 [0x2F8A2]={\
  direction=\"l\",\
 },\
 [0x2F8A3]={\
  direction=\"l\",\
 },\
 [0x2F8A4]={\
  direction=\"l\",\
 },\
 [0x2F8A5]={\
  direction=\"l\",\
 },\
 [0x2F8A6]={\
  direction=\"l\",\
 },\
 [0x2F8A7]={\
  direction=\"l\",\
 },\
 [0x2F8A8]={\
  direction=\"l\",\
 },\
 [0x2F8A9]={\
  direction=\"l\",\
 },\
 [0x2F8AA]={\
  direction=\"l\",\
 },\
 [0x2F8AB]={\
  direction=\"l\",\
 },\
 [0x2F8AC]={\
  direction=\"l\",\
 },\
 [0x2F8AD]={\
  direction=\"l\",\
 },\
 [0x2F8AE]={\
  direction=\"l\",\
 },\
 [0x2F8AF]={\
  direction=\"l\",\
 },\
 [0x2F8B0]={\
  direction=\"l\",\
 },\
 [0x2F8B1]={\
  direction=\"l\",\
 },\
 [0x2F8B2]={\
  direction=\"l\",\
 },\
 [0x2F8B3]={\
  direction=\"l\",\
 },\
 [0x2F8B4]={\
  direction=\"l\",\
 },\
 [0x2F8B5]={\
  direction=\"l\",\
 },\
 [0x2F8B6]={\
  direction=\"l\",\
 },\
 [0x2F8B7]={\
  direction=\"l\",\
 },\
 [0x2F8B8]={\
  direction=\"l\",\
 },\
 [0x2F8B9]={\
  direction=\"l\",\
 },\
 [0x2F8BA]={\
  direction=\"l\",\
 },\
 [0x2F8BB]={\
  direction=\"l\",\
 },\
 [0x2F8BC]={\
  direction=\"l\",\
 },\
 [0x2F8BD]={\
  direction=\"l\",\
 },\
 [0x2F8BE]={\
  direction=\"l\",\
 },\
 [0x2F8BF]={\
  direction=\"l\",\
 },\
 [0x2F8C0]={\
  direction=\"l\",\
 },\
 [0x2F8C1]={\
  direction=\"l\",\
 },\
 [0x2F8C2]={\
  direction=\"l\",\
 },\
 [0x2F8C3]={\
  direction=\"l\",\
 },\
 [0x2F8C4]={\
  direction=\"l\",\
 },\
 [0x2F8C5]={\
  direction=\"l\",\
 },\
 [0x2F8C6]={\
  direction=\"l\",\
 },\
 [0x2F8C7]={\
  direction=\"l\",\
 },\
 [0x2F8C8]={\
  direction=\"l\",\
 },\
 [0x2F8C9]={\
  direction=\"l\",\
 },\
 [0x2F8CA]={\
  direction=\"l\",\
 },\
 [0x2F8CB]={\
  direction=\"l\",\
 },\
 [0x2F8CC]={\
  direction=\"l\",\
 },\
 [0x2F8CD]={\
  direction=\"l\",\
 },\
 [0x2F8CE]={\
  direction=\"l\",\
 },\
 [0x2F8CF]={\
  direction=\"l\",\
 },\
 [0x2F8D0]={\
  direction=\"l\",\
 },\
 [0x2F8D1]={\
  direction=\"l\",\
 },\
 [0x2F8D2]={\
  direction=\"l\",\
 },\
 [0x2F8D3]={\
  direction=\"l\",\
 },\
 [0x2F8D4]={\
  direction=\"l\",\
 },\
 [0x2F8D5]={\
  direction=\"l\",\
 },\
 [0x2F8D6]={\
  direction=\"l\",\
 },\
 [0x2F8D7]={\
  direction=\"l\",\
 },\
 [0x2F8D8]={\
  direction=\"l\",\
 },\
 [0x2F8D9]={\
  direction=\"l\",\
 },\
 [0x2F8DA]={\
  direction=\"l\",\
 },\
 [0x2F8DB]={\
  direction=\"l\",\
 },\
 [0x2F8DC]={\
  direction=\"l\",\
 },\
 [0x2F8DD]={\
  direction=\"l\",\
 },\
 [0x2F8DE]={\
  direction=\"l\",\
 },\
 [0x2F8DF]={\
  direction=\"l\",\
 },\
 [0x2F8E0]={\
  direction=\"l\",\
 },\
 [0x2F8E1]={\
  direction=\"l\",\
 },\
 [0x2F8E2]={\
  direction=\"l\",\
 },\
 [0x2F8E3]={\
  direction=\"l\",\
 },\
 [0x2F8E4]={\
  direction=\"l\",\
 },\
 [0x2F8E5]={\
  direction=\"l\",\
 },\
 [0x2F8E6]={\
  direction=\"l\",\
 },\
 [0x2F8E7]={\
  direction=\"l\",\
 },\
 [0x2F8E8]={\
  direction=\"l\",\
 },\
 [0x2F8E9]={\
  direction=\"l\",\
 },\
 [0x2F8EA]={\
  direction=\"l\",\
 },\
 [0x2F8EB]={\
  direction=\"l\",\
 },\
 [0x2F8EC]={\
  direction=\"l\",\
 },\
 [0x2F8ED]={\
  direction=\"l\",\
 },\
 [0x2F8EE]={\
  direction=\"l\",\
 },\
 [0x2F8EF]={\
  direction=\"l\",\
 },\
 [0x2F8F0]={\
  direction=\"l\",\
 },\
 [0x2F8F1]={\
  direction=\"l\",\
 },\
 [0x2F8F2]={\
  direction=\"l\",\
 },\
 [0x2F8F3]={\
  direction=\"l\",\
 },\
 [0x2F8F4]={\
  direction=\"l\",\
 },\
 [0x2F8F5]={\
  direction=\"l\",\
 },\
 [0x2F8F6]={\
  direction=\"l\",\
 },\
 [0x2F8F7]={\
  direction=\"l\",\
 },\
 [0x2F8F8]={\
  direction=\"l\",\
 },\
 [0x2F8F9]={\
  direction=\"l\",\
 },\
 [0x2F8FA]={\
  direction=\"l\",\
 },\
 [0x2F8FB]={\
  direction=\"l\",\
 },\
 [0x2F8FC]={\
  direction=\"l\",\
 },\
 [0x2F8FD]={\
  direction=\"l\",\
 },\
 [0x2F8FE]={\
  direction=\"l\",\
 },\
 [0x2F8FF]={\
  direction=\"l\",\
 },\
 [0x2F900]={\
  direction=\"l\",\
 },\
 [0x2F901]={\
  direction=\"l\",\
 },\
 [0x2F902]={\
  direction=\"l\",\
 },\
 [0x2F903]={\
  direction=\"l\",\
 },\
 [0x2F904]={\
  direction=\"l\",\
 },\
 [0x2F905]={\
  direction=\"l\",\
 },\
 [0x2F906]={\
  direction=\"l\",\
 },\
 [0x2F907]={\
  direction=\"l\",\
 },\
 [0x2F908]={\
  direction=\"l\",\
 },\
 [0x2F909]={\
  direction=\"l\",\
 },\
 [0x2F90A]={\
  direction=\"l\",\
 },\
 [0x2F90B]={\
  direction=\"l\",\
 },\
 [0x2F90C]={\
  direction=\"l\",\
 },\
 [0x2F90D]={\
  direction=\"l\",\
 },\
 [0x2F90E]={\
  direction=\"l\",\
 },\
 [0x2F90F]={\
  direction=\"l\",\
 },\
 [0x2F910]={\
  direction=\"l\",\
 },\
 [0x2F911]={\
  direction=\"l\",\
 },\
 [0x2F912]={\
  direction=\"l\",\
 },\
 [0x2F913]={\
  direction=\"l\",\
 },\
 [0x2F914]={\
  direction=\"l\",\
 },\
 [0x2F915]={\
  direction=\"l\",\
 },\
 [0x2F916]={\
  direction=\"l\",\
 },\
 [0x2F917]={\
  direction=\"l\",\
 },\
 [0x2F918]={\
  direction=\"l\",\
 },\
 [0x2F919]={\
  direction=\"l\",\
 },\
 [0x2F91A]={\
  direction=\"l\",\
 },\
 [0x2F91B]={\
  direction=\"l\",\
 },\
 [0x2F91C]={\
  direction=\"l\",\
 },\
 [0x2F91D]={\
  direction=\"l\",\
 },\
 [0x2F91E]={\
  direction=\"l\",\
 },\
 [0x2F91F]={\
  direction=\"l\",\
 },\
 [0x2F920]={\
  direction=\"l\",\
 },\
 [0x2F921]={\
  direction=\"l\",\
 },\
 [0x2F922]={\
  direction=\"l\",\
 },\
 [0x2F923]={\
  direction=\"l\",\
 },\
 [0x2F924]={\
  direction=\"l\",\
 },\
 [0x2F925]={\
  direction=\"l\",\
 },\
 [0x2F926]={\
  direction=\"l\",\
 },\
 [0x2F927]={\
  direction=\"l\",\
 },\
 [0x2F928]={\
  direction=\"l\",\
 },\
 [0x2F929]={\
  direction=\"l\",\
 },\
 [0x2F92A]={\
  direction=\"l\",\
 },\
 [0x2F92B]={\
  direction=\"l\",\
 },\
 [0x2F92C]={\
  direction=\"l\",\
 },\
 [0x2F92D]={\
  direction=\"l\",\
 },\
 [0x2F92E]={\
  direction=\"l\",\
 },\
 [0x2F92F]={\
  direction=\"l\",\
 },\
 [0x2F930]={\
  direction=\"l\",\
 },\
 [0x2F931]={\
  direction=\"l\",\
 },\
 [0x2F932]={\
  direction=\"l\",\
 },\
 [0x2F933]={\
  direction=\"l\",\
 },\
 [0x2F934]={\
  direction=\"l\",\
 },\
 [0x2F935]={\
  direction=\"l\",\
 },\
 [0x2F936]={\
  direction=\"l\",\
 },\
 [0x2F937]={\
  direction=\"l\",\
 },\
 [0x2F938]={\
  direction=\"l\",\
 },\
 [0x2F939]={\
  direction=\"l\",\
 },\
 [0x2F93A]={\
  direction=\"l\",\
 },\
 [0x2F93B]={\
  direction=\"l\",\
 },\
 [0x2F93C]={\
  direction=\"l\",\
 },\
 [0x2F93D]={\
  direction=\"l\",\
 },\
 [0x2F93E]={\
  direction=\"l\",\
 },\
 [0x2F93F]={\
  direction=\"l\",\
 },\
 [0x2F940]={\
  direction=\"l\",\
 },\
 [0x2F941]={\
  direction=\"l\",\
 },\
 [0x2F942]={\
  direction=\"l\",\
 },\
 [0x2F943]={\
  direction=\"l\",\
 },\
 [0x2F944]={\
  direction=\"l\",\
 },\
 [0x2F945]={\
  direction=\"l\",\
 },\
 [0x2F946]={\
  direction=\"l\",\
 },\
 [0x2F947]={\
  direction=\"l\",\
 },\
 [0x2F948]={\
  direction=\"l\",\
 },\
 [0x2F949]={\
  direction=\"l\",\
 },\
 [0x2F94A]={\
  direction=\"l\",\
 },\
 [0x2F94B]={\
  direction=\"l\",\
 },\
 [0x2F94C]={\
  direction=\"l\",\
 },\
 [0x2F94D]={\
  direction=\"l\",\
 },\
 [0x2F94E]={\
  direction=\"l\",\
 },\
 [0x2F94F]={\
  direction=\"l\",\
 },\
 [0x2F950]={\
  direction=\"l\",\
 },\
 [0x2F951]={\
  direction=\"l\",\
 },\
 [0x2F952]={\
  direction=\"l\",\
 },\
 [0x2F953]={\
  direction=\"l\",\
 },\
 [0x2F954]={\
  direction=\"l\",\
 },\
 [0x2F955]={\
  direction=\"l\",\
 },\
 [0x2F956]={\
  direction=\"l\",\
 },\
 [0x2F957]={\
  direction=\"l\",\
 },\
 [0x2F958]={\
  direction=\"l\",\
 },\
 [0x2F959]={\
  direction=\"l\",\
 },\
 [0x2F95A]={\
  direction=\"l\",\
 },\
 [0x2F95B]={\
  direction=\"l\",\
 },\
 [0x2F95C]={\
  direction=\"l\",\
 },\
 [0x2F95D]={\
  direction=\"l\",\
 },\
 [0x2F95E]={\
  direction=\"l\",\
 },\
 [0x2F95F]={\
  direction=\"l\",\
 },\
 [0x2F960]={\
  direction=\"l\",\
 },\
 [0x2F961]={\
  direction=\"l\",\
 },\
 [0x2F962]={\
  direction=\"l\",\
 },\
 [0x2F963]={\
  direction=\"l\",\
 },\
 [0x2F964]={\
  direction=\"l\",\
 },\
 [0x2F965]={\
  direction=\"l\",\
 },\
 [0x2F966]={\
  direction=\"l\",\
 },\
 [0x2F967]={\
  direction=\"l\",\
 },\
 [0x2F968]={\
  direction=\"l\",\
 },\
 [0x2F969]={\
  direction=\"l\",\
 },\
 [0x2F96A]={\
  direction=\"l\",\
 },\
 [0x2F96B]={\
  direction=\"l\",\
 },\
 [0x2F96C]={\
  direction=\"l\",\
 },\
 [0x2F96D]={\
  direction=\"l\",\
 },\
 [0x2F96E]={\
  direction=\"l\",\
 },\
 [0x2F96F]={\
  direction=\"l\",\
 },\
 [0x2F970]={\
  direction=\"l\",\
 },\
 [0x2F971]={\
  direction=\"l\",\
 },\
 [0x2F972]={\
  direction=\"l\",\
 },\
 [0x2F973]={\
  direction=\"l\",\
 },\
 [0x2F974]={\
  direction=\"l\",\
 },\
 [0x2F975]={\
  direction=\"l\",\
 },\
 [0x2F976]={\
  direction=\"l\",\
 },\
 [0x2F977]={\
  direction=\"l\",\
 },\
 [0x2F978]={\
  direction=\"l\",\
 },\
 [0x2F979]={\
  direction=\"l\",\
 },\
 [0x2F97A]={\
  direction=\"l\",\
 },\
 [0x2F97B]={\
  direction=\"l\",\
 },\
 [0x2F97C]={\
  direction=\"l\",\
 },\
 [0x2F97D]={\
  direction=\"l\",\
 },\
 [0x2F97E]={\
  direction=\"l\",\
 },\
 [0x2F97F]={\
  direction=\"l\",\
 },\
 [0x2F980]={\
  direction=\"l\",\
 },\
 [0x2F981]={\
  direction=\"l\",\
 },\
 [0x2F982]={\
  direction=\"l\",\
 },\
 [0x2F983]={\
  direction=\"l\",\
 },\
 [0x2F984]={\
  direction=\"l\",\
 },\
 [0x2F985]={\
  direction=\"l\",\
 },\
 [0x2F986]={\
  direction=\"l\",\
 },\
 [0x2F987]={\
  direction=\"l\",\
 },\
 [0x2F988]={\
  direction=\"l\",\
 },\
 [0x2F989]={\
  direction=\"l\",\
 },\
 [0x2F98A]={\
  direction=\"l\",\
 },\
 [0x2F98B]={\
  direction=\"l\",\
 },\
 [0x2F98C]={\
  direction=\"l\",\
 },\
 [0x2F98D]={\
  direction=\"l\",\
 },\
 [0x2F98E]={\
  direction=\"l\",\
 },\
 [0x2F98F]={\
  direction=\"l\",\
 },\
 [0x2F990]={\
  direction=\"l\",\
 },\
 [0x2F991]={\
  direction=\"l\",\
 },\
 [0x2F992]={\
  direction=\"l\",\
 },\
 [0x2F993]={\
  direction=\"l\",\
 },\
 [0x2F994]={\
  direction=\"l\",\
 },\
 [0x2F995]={\
  direction=\"l\",\
 },\
 [0x2F996]={\
  direction=\"l\",\
 },\
 [0x2F997]={\
  direction=\"l\",\
 },\
 [0x2F998]={\
  direction=\"l\",\
 },\
 [0x2F999]={\
  direction=\"l\",\
 },\
 [0x2F99A]={\
  direction=\"l\",\
 },\
 [0x2F99B]={\
  direction=\"l\",\
 },\
 [0x2F99C]={\
  direction=\"l\",\
 },\
 [0x2F99D]={\
  direction=\"l\",\
 },\
 [0x2F99E]={\
  direction=\"l\",\
 },\
 [0x2F99F]={\
  direction=\"l\",\
 },\
 [0x2F9A0]={\
  direction=\"l\",\
 },\
 [0x2F9A1]={\
  direction=\"l\",\
 },\
 [0x2F9A2]={\
  direction=\"l\",\
 },\
 [0x2F9A3]={\
  direction=\"l\",\
 },\
 [0x2F9A4]={\
  direction=\"l\",\
 },\
 [0x2F9A5]={\
  direction=\"l\",\
 },\
 [0x2F9A6]={\
  direction=\"l\",\
 },\
 [0x2F9A7]={\
  direction=\"l\",\
 },\
 [0x2F9A8]={\
  direction=\"l\",\
 },\
 [0x2F9A9]={\
  direction=\"l\",\
 },\
 [0x2F9AA]={\
  direction=\"l\",\
 },\
 [0x2F9AB]={\
  direction=\"l\",\
 },\
 [0x2F9AC]={\
  direction=\"l\",\
 },\
 [0x2F9AD]={\
  direction=\"l\",\
 },\
 [0x2F9AE]={\
  direction=\"l\",\
 },\
 [0x2F9AF]={\
  direction=\"l\",\
 },\
 [0x2F9B0]={\
  direction=\"l\",\
 },\
 [0x2F9B1]={\
  direction=\"l\",\
 },\
 [0x2F9B2]={\
  direction=\"l\",\
 },\
 [0x2F9B3]={\
  direction=\"l\",\
 },\
 [0x2F9B4]={\
  direction=\"l\",\
 },\
 [0x2F9B5]={\
  direction=\"l\",\
 },\
 [0x2F9B6]={\
  direction=\"l\",\
 },\
 [0x2F9B7]={\
  direction=\"l\",\
 },\
 [0x2F9B8]={\
  direction=\"l\",\
 },\
 [0x2F9B9]={\
  direction=\"l\",\
 },\
 [0x2F9BA]={\
  direction=\"l\",\
 },\
 [0x2F9BB]={\
  direction=\"l\",\
 },\
 [0x2F9BC]={\
  direction=\"l\",\
 },\
 [0x2F9BD]={\
  direction=\"l\",\
 },\
 [0x2F9BE]={\
  direction=\"l\",\
 },\
 [0x2F9BF]={\
  direction=\"l\",\
 },\
 [0x2F9C0]={\
  direction=\"l\",\
 },\
 [0x2F9C1]={\
  direction=\"l\",\
 },\
 [0x2F9C2]={\
  direction=\"l\",\
 },\
 [0x2F9C3]={\
  direction=\"l\",\
 },\
 [0x2F9C4]={\
  direction=\"l\",\
 },\
 [0x2F9C5]={\
  direction=\"l\",\
 },\
 [0x2F9C6]={\
  direction=\"l\",\
 },\
 [0x2F9C7]={\
  direction=\"l\",\
 },\
 [0x2F9C8]={\
  direction=\"l\",\
 },\
 [0x2F9C9]={\
  direction=\"l\",\
 },\
 [0x2F9CA]={\
  direction=\"l\",\
 },\
 [0x2F9CB]={\
  direction=\"l\",\
 },\
 [0x2F9CC]={\
  direction=\"l\",\
 },\
 [0x2F9CD]={\
  direction=\"l\",\
 },\
 [0x2F9CE]={\
  direction=\"l\",\
 },\
 [0x2F9CF]={\
  direction=\"l\",\
 },\
 [0x2F9D0]={\
  direction=\"l\",\
 },\
 [0x2F9D1]={\
  direction=\"l\",\
 },\
 [0x2F9D2]={\
  direction=\"l\",\
 },\
 [0x2F9D3]={\
  direction=\"l\",\
 },\
 [0x2F9D4]={\
  direction=\"l\",\
 },\
 [0x2F9D5]={\
  direction=\"l\",\
 },\
 [0x2F9D6]={\
  direction=\"l\",\
 },\
 [0x2F9D7]={\
  direction=\"l\",\
 },\
 [0x2F9D8]={\
  direction=\"l\",\
 },\
 [0x2F9D9]={\
  direction=\"l\",\
 },\
 [0x2F9DA]={\
  direction=\"l\",\
 },\
 [0x2F9DB]={\
  direction=\"l\",\
 },\
 [0x2F9DC]={\
  direction=\"l\",\
 },\
 [0x2F9DD]={\
  direction=\"l\",\
 },\
 [0x2F9DE]={\
  direction=\"l\",\
 },\
 [0x2F9DF]={\
  direction=\"l\",\
 },\
 [0x2F9E0]={\
  direction=\"l\",\
 },\
 [0x2F9E1]={\
  direction=\"l\",\
 },\
 [0x2F9E2]={\
  direction=\"l\",\
 },\
 [0x2F9E3]={\
  direction=\"l\",\
 },\
 [0x2F9E4]={\
  direction=\"l\",\
 },\
 [0x2F9E5]={\
  direction=\"l\",\
 },\
 [0x2F9E6]={\
  direction=\"l\",\
 },\
 [0x2F9E7]={\
  direction=\"l\",\
 },\
 [0x2F9E8]={\
  direction=\"l\",\
 },\
 [0x2F9E9]={\
  direction=\"l\",\
 },\
 [0x2F9EA]={\
  direction=\"l\",\
 },\
 [0x2F9EB]={\
  direction=\"l\",\
 },\
 [0x2F9EC]={\
  direction=\"l\",\
 },\
 [0x2F9ED]={\
  direction=\"l\",\
 },\
 [0x2F9EE]={\
  direction=\"l\",\
 },\
 [0x2F9EF]={\
  direction=\"l\",\
 },\
 [0x2F9F0]={\
  direction=\"l\",\
 },\
 [0x2F9F1]={\
  direction=\"l\",\
 },\
 [0x2F9F2]={\
  direction=\"l\",\
 },\
 [0x2F9F3]={\
  direction=\"l\",\
 },\
 [0x2F9F4]={\
  direction=\"l\",\
 },\
 [0x2F9F5]={\
  direction=\"l\",\
 },\
 [0x2F9F6]={\
  direction=\"l\",\
 },\
 [0x2F9F7]={\
  direction=\"l\",\
 },\
 [0x2F9F8]={\
  direction=\"l\",\
 },\
 [0x2F9F9]={\
  direction=\"l\",\
 },\
 [0x2F9FA]={\
  direction=\"l\",\
 },\
 [0x2F9FB]={\
  direction=\"l\",\
 },\
 [0x2F9FC]={\
  direction=\"l\",\
 },\
 [0x2F9FD]={\
  direction=\"l\",\
 },\
 [0x2F9FE]={\
  direction=\"l\",\
 },\
 [0x2F9FF]={\
  direction=\"l\",\
 },\
 [0x2FA00]={\
  direction=\"l\",\
 },\
 [0x2FA01]={\
  direction=\"l\",\
 },\
 [0x2FA02]={\
  direction=\"l\",\
 },\
 [0x2FA03]={\
  direction=\"l\",\
 },\
 [0x2FA04]={\
  direction=\"l\",\
 },\
 [0x2FA05]={\
  direction=\"l\",\
 },\
 [0x2FA06]={\
  direction=\"l\",\
 },\
 [0x2FA07]={\
  direction=\"l\",\
 },\
 [0x2FA08]={\
  direction=\"l\",\
 },\
 [0x2FA09]={\
  direction=\"l\",\
 },\
 [0x2FA0A]={\
  direction=\"l\",\
 },\
 [0x2FA0B]={\
  direction=\"l\",\
 },\
 [0x2FA0C]={\
  direction=\"l\",\
 },\
 [0x2FA0D]={\
  direction=\"l\",\
 },\
 [0x2FA0E]={\
  direction=\"l\",\
 },\
 [0x2FA0F]={\
  direction=\"l\",\
 },\
 [0x2FA10]={\
  direction=\"l\",\
 },\
 [0x2FA11]={\
  direction=\"l\",\
 },\
 [0x2FA12]={\
  direction=\"l\",\
 },\
 [0x2FA13]={\
  direction=\"l\",\
 },\
 [0x2FA14]={\
  direction=\"l\",\
 },\
 [0x2FA15]={\
  direction=\"l\",\
 },\
 [0x2FA16]={\
  direction=\"l\",\
 },\
 [0x2FA17]={\
  direction=\"l\",\
 },\
 [0x2FA18]={\
  direction=\"l\",\
 },\
 [0x2FA19]={\
  direction=\"l\",\
 },\
 [0x2FA1A]={\
  direction=\"l\",\
 },\
 [0x2FA1B]={\
  direction=\"l\",\
 },\
 [0x2FA1C]={\
  direction=\"l\",\
 },\
 [0x2FA1D]={\
  direction=\"l\",\
 },\
 [0xE0001]={\
  direction=\"bn\",\
 },\
 [0xE0020]={\
  direction=\"bn\",\
 },\
 [0xE0021]={\
  direction=\"bn\",\
 },\
 [0xE0022]={\
  direction=\"bn\",\
 },\
 [0xE0023]={\
  direction=\"bn\",\
 },\
 [0xE0024]={\
  direction=\"bn\",\
 },\
 [0xE0025]={\
  direction=\"bn\",\
 },\
 [0xE0026]={\
  direction=\"bn\",\
 },\
 [0xE0027]={\
  direction=\"bn\",\
 },\
 [0xE0028]={\
  direction=\"bn\",\
 },\
 [0xE0029]={\
  direction=\"bn\",\
 },\
 [0xE002A]={\
  direction=\"bn\",\
 },\
 [0xE002B]={\
  direction=\"bn\",\
 },\
 [0xE002C]={\
  direction=\"bn\",\
 },\
 [0xE002D]={\
  direction=\"bn\",\
 },\
 [0xE002E]={\
  direction=\"bn\",\
 },\
 [0xE002F]={\
  direction=\"bn\",\
 },\
 [0xE0030]={\
  direction=\"bn\",\
 },\
 [0xE0031]={\
  direction=\"bn\",\
 },\
 [0xE0032]={\
  direction=\"bn\",\
 },\
 [0xE0033]={\
  direction=\"bn\",\
 },\
 [0xE0034]={\
  direction=\"bn\",\
 },\
 [0xE0035]={\
  direction=\"bn\",\
 },\
 [0xE0036]={\
  direction=\"bn\",\
 },\
 [0xE0037]={\
  direction=\"bn\",\
 },\
 [0xE0038]={\
  direction=\"bn\",\
 },\
 [0xE0039]={\
  direction=\"bn\",\
 },\
 [0xE003A]={\
  direction=\"bn\",\
 },\
 [0xE003B]={\
  direction=\"bn\",\
 },\
 [0xE003C]={\
  direction=\"bn\",\
 },\
 [0xE003D]={\
  direction=\"bn\",\
 },\
 [0xE003E]={\
  direction=\"bn\",\
 },\
 [0xE003F]={\
  direction=\"bn\",\
 },\
 [0xE0040]={\
  direction=\"bn\",\
 },\
 [0xE0041]={\
  direction=\"bn\",\
 },\
 [0xE0042]={\
  direction=\"bn\",\
 },\
 [0xE0043]={\
  direction=\"bn\",\
 },\
 [0xE0044]={\
  direction=\"bn\",\
 },\
 [0xE0045]={\
  direction=\"bn\",\
 },\
 [0xE0046]={\
  direction=\"bn\",\
 },\
 [0xE0047]={\
  direction=\"bn\",\
 },\
 [0xE0048]={\
  direction=\"bn\",\
 },\
 [0xE0049]={\
  direction=\"bn\",\
 },\
 [0xE004A]={\
  direction=\"bn\",\
 },\
 [0xE004B]={\
  direction=\"bn\",\
 },\
 [0xE004C]={\
  direction=\"bn\",\
 },\
 [0xE004D]={\
  direction=\"bn\",\
 },\
 [0xE004E]={\
  direction=\"bn\",\
 },\
 [0xE004F]={\
  direction=\"bn\",\
 },\
 [0xE0050]={\
  direction=\"bn\",\
 },\
 [0xE0051]={\
  direction=\"bn\",\
 },\
 [0xE0052]={\
  direction=\"bn\",\
 },\
 [0xE0053]={\
  direction=\"bn\",\
 },\
 [0xE0054]={\
  direction=\"bn\",\
 },\
 [0xE0055]={\
  direction=\"bn\",\
 },\
 [0xE0056]={\
  direction=\"bn\",\
 },\
 [0xE0057]={\
  direction=\"bn\",\
 },\
 [0xE0058]={\
  direction=\"bn\",\
 },\
 [0xE0059]={\
  direction=\"bn\",\
 },\
 [0xE005A]={\
  direction=\"bn\",\
 },\
 [0xE005B]={\
  direction=\"bn\",\
 },\
 [0xE005C]={\
  direction=\"bn\",\
 },\
 [0xE005D]={\
  direction=\"bn\",\
 },\
 [0xE005E]={\
  direction=\"bn\",\
 },\
 [0xE005F]={\
  direction=\"bn\",\
 },\
 [0xE0060]={\
  direction=\"bn\",\
 },\
 [0xE0061]={\
  direction=\"bn\",\
 },\
 [0xE0062]={\
  direction=\"bn\",\
 },\
 [0xE0063]={\
  direction=\"bn\",\
 },\
 [0xE0064]={\
  direction=\"bn\",\
 },\
 [0xE0065]={\
  direction=\"bn\",\
 },\
 [0xE0066]={\
  direction=\"bn\",\
 },\
 [0xE0067]={\
  direction=\"bn\",\
 },\
 [0xE0068]={\
  direction=\"bn\",\
 },\
 [0xE0069]={\
  direction=\"bn\",\
 },\
 [0xE006A]={\
  direction=\"bn\",\
 },\
 [0xE006B]={\
  direction=\"bn\",\
 },\
 [0xE006C]={\
  direction=\"bn\",\
 },\
 [0xE006D]={\
  direction=\"bn\",\
 },\
 [0xE006E]={\
  direction=\"bn\",\
 },\
 [0xE006F]={\
  direction=\"bn\",\
 },\
 [0xE0070]={\
  direction=\"bn\",\
 },\
 [0xE0071]={\
  direction=\"bn\",\
 },\
 [0xE0072]={\
  direction=\"bn\",\
 },\
 [0xE0073]={\
  direction=\"bn\",\
 },\
 [0xE0074]={\
  direction=\"bn\",\
 },\
 [0xE0075]={\
  direction=\"bn\",\
 },\
 [0xE0076]={\
  direction=\"bn\",\
 },\
 [0xE0077]={\
  direction=\"bn\",\
 },\
 [0xE0078]={\
  direction=\"bn\",\
 },\
 [0xE0079]={\
  direction=\"bn\",\
 },\
 [0xE007A]={\
  direction=\"bn\",\
 },\
 [0xE007B]={\
  direction=\"bn\",\
 },\
 [0xE007C]={\
  direction=\"bn\",\
 },\
 [0xE007D]={\
  direction=\"bn\",\
 },\
 [0xE007E]={\
  direction=\"bn\",\
 },\
 [0xE007F]={\
  direction=\"bn\",\
 },\
 [0xE0100]={\
  direction=\"nsm\",\
 },\
 [0xE0101]={\
  direction=\"nsm\",\
 },\
 [0xE0102]={\
  direction=\"nsm\",\
 },\
 [0xE0103]={\
  direction=\"nsm\",\
 },\
 [0xE0104]={\
  direction=\"nsm\",\
 },\
 [0xE0105]={\
  direction=\"nsm\",\
 },\
 [0xE0106]={\
  direction=\"nsm\",\
 },\
 [0xE0107]={\
  direction=\"nsm\",\
 },\
 [0xE0108]={\
  direction=\"nsm\",\
 },\
 [0xE0109]={\
  direction=\"nsm\",\
 },\
 [0xE010A]={\
  direction=\"nsm\",\
 },\
 [0xE010B]={\
  direction=\"nsm\",\
 },\
 [0xE010C]={\
  direction=\"nsm\",\
 },\
 [0xE010D]={\
  direction=\"nsm\",\
 },\
 [0xE010E]={\
  direction=\"nsm\",\
 },\
 [0xE010F]={\
  direction=\"nsm\",\
 },\
 [0xE0110]={\
  direction=\"nsm\",\
 },\
 [0xE0111]={\
  direction=\"nsm\",\
 },\
 [0xE0112]={\
  direction=\"nsm\",\
 },\
 [0xE0113]={\
  direction=\"nsm\",\
 },\
 [0xE0114]={\
  direction=\"nsm\",\
 },\
 [0xE0115]={\
  direction=\"nsm\",\
 },\
 [0xE0116]={\
  direction=\"nsm\",\
 },\
 [0xE0117]={\
  direction=\"nsm\",\
 },\
 [0xE0118]={\
  direction=\"nsm\",\
 },\
 [0xE0119]={\
  direction=\"nsm\",\
 },\
 [0xE011A]={\
  direction=\"nsm\",\
 },\
 [0xE011B]={\
  direction=\"nsm\",\
 },\
 [0xE011C]={\
  direction=\"nsm\",\
 },\
 [0xE011D]={\
  direction=\"nsm\",\
 },\
 [0xE011E]={\
  direction=\"nsm\",\
 },\
 [0xE011F]={\
  direction=\"nsm\",\
 },\
 [0xE0120]={\
  direction=\"nsm\",\
 },\
 [0xE0121]={\
  direction=\"nsm\",\
 },\
 [0xE0122]={\
  direction=\"nsm\",\
 },\
 [0xE0123]={\
  direction=\"nsm\",\
 },\
 [0xE0124]={\
  direction=\"nsm\",\
 },\
 [0xE0125]={\
  direction=\"nsm\",\
 },\
 [0xE0126]={\
  direction=\"nsm\",\
 },\
 [0xE0127]={\
  direction=\"nsm\",\
 },\
 [0xE0128]={\
  direction=\"nsm\",\
 },\
 [0xE0129]={\
  direction=\"nsm\",\
 },\
 [0xE012A]={\
  direction=\"nsm\",\
 },\
 [0xE012B]={\
  direction=\"nsm\",\
 },\
 [0xE012C]={\
  direction=\"nsm\",\
 },\
 [0xE012D]={\
  direction=\"nsm\",\
 },\
 [0xE012E]={\
  direction=\"nsm\",\
 },\
 [0xE012F]={\
  direction=\"nsm\",\
 },\
 [0xE0130]={\
  direction=\"nsm\",\
 },\
 [0xE0131]={\
  direction=\"nsm\",\
 },\
 [0xE0132]={\
  direction=\"nsm\",\
 },\
 [0xE0133]={\
  direction=\"nsm\",\
 },\
 [0xE0134]={\
  direction=\"nsm\",\
 },\
 [0xE0135]={\
  direction=\"nsm\",\
 },\
 [0xE0136]={\
  direction=\"nsm\",\
 },\
 [0xE0137]={\
  direction=\"nsm\",\
 },\
 [0xE0138]={\
  direction=\"nsm\",\
 },\
 [0xE0139]={\
  direction=\"nsm\",\
 },\
 [0xE013A]={\
  direction=\"nsm\",\
 },\
 [0xE013B]={\
  direction=\"nsm\",\
 },\
 [0xE013C]={\
  direction=\"nsm\",\
 },\
 [0xE013D]={\
  direction=\"nsm\",\
 },\
 [0xE013E]={\
  direction=\"nsm\",\
 },\
 [0xE013F]={\
  direction=\"nsm\",\
 },\
 [0xE0140]={\
  direction=\"nsm\",\
 },\
 [0xE0141]={\
  direction=\"nsm\",\
 },\
 [0xE0142]={\
  direction=\"nsm\",\
 },\
 [0xE0143]={\
  direction=\"nsm\",\
 },\
 [0xE0144]={\
  direction=\"nsm\",\
 },\
 [0xE0145]={\
  direction=\"nsm\",\
 },\
 [0xE0146]={\
  direction=\"nsm\",\
 },\
 [0xE0147]={\
  direction=\"nsm\",\
 },\
 [0xE0148]={\
  direction=\"nsm\",\
 },\
 [0xE0149]={\
  direction=\"nsm\",\
 },\
 [0xE014A]={\
  direction=\"nsm\",\
 },\
 [0xE014B]={\
  direction=\"nsm\",\
 },\
 [0xE014C]={\
  direction=\"nsm\",\
 },\
 [0xE014D]={\
  direction=\"nsm\",\
 },\
 [0xE014E]={\
  direction=\"nsm\",\
 },\
 [0xE014F]={\
  direction=\"nsm\",\
 },\
 [0xE0150]={\
  direction=\"nsm\",\
 },\
 [0xE0151]={\
  direction=\"nsm\",\
 },\
 [0xE0152]={\
  direction=\"nsm\",\
 },\
 [0xE0153]={\
  direction=\"nsm\",\
 },\
 [0xE0154]={\
  direction=\"nsm\",\
 },\
 [0xE0155]={\
  direction=\"nsm\",\
 },\
 [0xE0156]={\
  direction=\"nsm\",\
 },\
 [0xE0157]={\
  direction=\"nsm\",\
 },\
 [0xE0158]={\
  direction=\"nsm\",\
 },\
 [0xE0159]={\
  direction=\"nsm\",\
 },\
 [0xE015A]={\
  direction=\"nsm\",\
 },\
 [0xE015B]={\
  direction=\"nsm\",\
 },\
 [0xE015C]={\
  direction=\"nsm\",\
 },\
 [0xE015D]={\
  direction=\"nsm\",\
 },\
 [0xE015E]={\
  direction=\"nsm\",\
 },\
 [0xE015F]={\
  direction=\"nsm\",\
 },\
 [0xE0160]={\
  direction=\"nsm\",\
 },\
 [0xE0161]={\
  direction=\"nsm\",\
 },\
 [0xE0162]={\
  direction=\"nsm\",\
 },\
 [0xE0163]={\
  direction=\"nsm\",\
 },\
 [0xE0164]={\
  direction=\"nsm\",\
 },\
 [0xE0165]={\
  direction=\"nsm\",\
 },\
 [0xE0166]={\
  direction=\"nsm\",\
 },\
 [0xE0167]={\
  direction=\"nsm\",\
 },\
 [0xE0168]={\
  direction=\"nsm\",\
 },\
 [0xE0169]={\
  direction=\"nsm\",\
 },\
 [0xE016A]={\
  direction=\"nsm\",\
 },\
 [0xE016B]={\
  direction=\"nsm\",\
 },\
 [0xE016C]={\
  direction=\"nsm\",\
 },\
 [0xE016D]={\
  direction=\"nsm\",\
 },\
 [0xE016E]={\
  direction=\"nsm\",\
 },\
 [0xE016F]={\
  direction=\"nsm\",\
 },\
 [0xE0170]={\
  direction=\"nsm\",\
 },\
 [0xE0171]={\
  direction=\"nsm\",\
 },\
 [0xE0172]={\
  direction=\"nsm\",\
 },\
 [0xE0173]={\
  direction=\"nsm\",\
 },\
 [0xE0174]={\
  direction=\"nsm\",\
 },\
 [0xE0175]={\
  direction=\"nsm\",\
 },\
 [0xE0176]={\
  direction=\"nsm\",\
 },\
 [0xE0177]={\
  direction=\"nsm\",\
 },\
 [0xE0178]={\
  direction=\"nsm\",\
 },\
 [0xE0179]={\
  direction=\"nsm\",\
 },\
 [0xE017A]={\
  direction=\"nsm\",\
 },\
 [0xE017B]={\
  direction=\"nsm\",\
 },\
 [0xE017C]={\
  direction=\"nsm\",\
 },\
 [0xE017D]={\
  direction=\"nsm\",\
 },\
 [0xE017E]={\
  direction=\"nsm\",\
 },\
 [0xE017F]={\
  direction=\"nsm\",\
 },\
 [0xE0180]={\
  direction=\"nsm\",\
 },\
 [0xE0181]={\
  direction=\"nsm\",\
 },\
 [0xE0182]={\
  direction=\"nsm\",\
 },\
 [0xE0183]={\
  direction=\"nsm\",\
 },\
 [0xE0184]={\
  direction=\"nsm\",\
 },\
 [0xE0185]={\
  direction=\"nsm\",\
 },\
 [0xE0186]={\
  direction=\"nsm\",\
 },\
 [0xE0187]={\
  direction=\"nsm\",\
 },\
 [0xE0188]={\
  direction=\"nsm\",\
 },\
 [0xE0189]={\
  direction=\"nsm\",\
 },\
 [0xE018A]={\
  direction=\"nsm\",\
 },\
 [0xE018B]={\
  direction=\"nsm\",\
 },\
 [0xE018C]={\
  direction=\"nsm\",\
 },\
 [0xE018D]={\
  direction=\"nsm\",\
 },\
 [0xE018E]={\
  direction=\"nsm\",\
 },\
 [0xE018F]={\
  direction=\"nsm\",\
 },\
 [0xE0190]={\
  direction=\"nsm\",\
 },\
 [0xE0191]={\
  direction=\"nsm\",\
 },\
 [0xE0192]={\
  direction=\"nsm\",\
 },\
 [0xE0193]={\
  direction=\"nsm\",\
 },\
 [0xE0194]={\
  direction=\"nsm\",\
 },\
 [0xE0195]={\
  direction=\"nsm\",\
 },\
 [0xE0196]={\
  direction=\"nsm\",\
 },\
 [0xE0197]={\
  direction=\"nsm\",\
 },\
 [0xE0198]={\
  direction=\"nsm\",\
 },\
 [0xE0199]={\
  direction=\"nsm\",\
 },\
 [0xE019A]={\
  direction=\"nsm\",\
 },\
 [0xE019B]={\
  direction=\"nsm\",\
 },\
 [0xE019C]={\
  direction=\"nsm\",\
 },\
 [0xE019D]={\
  direction=\"nsm\",\
 },\
 [0xE019E]={\
  direction=\"nsm\",\
 },\
 [0xE019F]={\
  direction=\"nsm\",\
 },\
 [0xE01A0]={\
  direction=\"nsm\",\
 },\
 [0xE01A1]={\
  direction=\"nsm\",\
 },\
 [0xE01A2]={\
  direction=\"nsm\",\
 },\
 [0xE01A3]={\
  direction=\"nsm\",\
 },\
 [0xE01A4]={\
  direction=\"nsm\",\
 },\
 [0xE01A5]={\
  direction=\"nsm\",\
 },\
 [0xE01A6]={\
  direction=\"nsm\",\
 },\
 [0xE01A7]={\
  direction=\"nsm\",\
 },\
 [0xE01A8]={\
  direction=\"nsm\",\
 },\
 [0xE01A9]={\
  direction=\"nsm\",\
 },\
 [0xE01AA]={\
  direction=\"nsm\",\
 },\
 [0xE01AB]={\
  direction=\"nsm\",\
 },\
 [0xE01AC]={\
  direction=\"nsm\",\
 },\
 [0xE01AD]={\
  direction=\"nsm\",\
 },\
 [0xE01AE]={\
  direction=\"nsm\",\
 },\
 [0xE01AF]={\
  direction=\"nsm\",\
 },\
 [0xE01B0]={\
  direction=\"nsm\",\
 },\
 [0xE01B1]={\
  direction=\"nsm\",\
 },\
 [0xE01B2]={\
  direction=\"nsm\",\
 },\
 [0xE01B3]={\
  direction=\"nsm\",\
 },\
 [0xE01B4]={\
  direction=\"nsm\",\
 },\
 [0xE01B5]={\
  direction=\"nsm\",\
 },\
 [0xE01B6]={\
  direction=\"nsm\",\
 },\
 [0xE01B7]={\
  direction=\"nsm\",\
 },\
 [0xE01B8]={\
  direction=\"nsm\",\
 },\
 [0xE01B9]={\
  direction=\"nsm\",\
 },\
 [0xE01BA]={\
  direction=\"nsm\",\
 },\
 [0xE01BB]={\
  direction=\"nsm\",\
 },\
 [0xE01BC]={\
  direction=\"nsm\",\
 },\
 [0xE01BD]={\
  direction=\"nsm\",\
 },\
 [0xE01BE]={\
  direction=\"nsm\",\
 },\
 [0xE01BF]={\
  direction=\"nsm\",\
 },\
 [0xE01C0]={\
  direction=\"nsm\",\
 },\
 [0xE01C1]={\
  direction=\"nsm\",\
 },\
 [0xE01C2]={\
  direction=\"nsm\",\
 },\
 [0xE01C3]={\
  direction=\"nsm\",\
 },\
 [0xE01C4]={\
  direction=\"nsm\",\
 },\
 [0xE01C5]={\
  direction=\"nsm\",\
 },\
 [0xE01C6]={\
  direction=\"nsm\",\
 },\
 [0xE01C7]={\
  direction=\"nsm\",\
 },\
 [0xE01C8]={\
  direction=\"nsm\",\
 },\
 [0xE01C9]={\
  direction=\"nsm\",\
 },\
 [0xE01CA]={\
  direction=\"nsm\",\
 },\
 [0xE01CB]={\
  direction=\"nsm\",\
 },\
 [0xE01CC]={\
  direction=\"nsm\",\
 },\
 [0xE01CD]={\
  direction=\"nsm\",\
 },\
 [0xE01CE]={\
  direction=\"nsm\",\
 },\
 [0xE01CF]={\
  direction=\"nsm\",\
 },\
 [0xE01D0]={\
  direction=\"nsm\",\
 },\
 [0xE01D1]={\
  direction=\"nsm\",\
 },\
 [0xE01D2]={\
  direction=\"nsm\",\
 },\
 [0xE01D3]={\
  direction=\"nsm\",\
 },\
 [0xE01D4]={\
  direction=\"nsm\",\
 },\
 [0xE01D5]={\
  direction=\"nsm\",\
 },\
 [0xE01D6]={\
  direction=\"nsm\",\
 },\
 [0xE01D7]={\
  direction=\"nsm\",\
 },\
 [0xE01D8]={\
  direction=\"nsm\",\
 },\
 [0xE01D9]={\
  direction=\"nsm\",\
 },\
 [0xE01DA]={\
  direction=\"nsm\",\
 },\
 [0xE01DB]={\
  direction=\"nsm\",\
 },\
 [0xE01DC]={\
  direction=\"nsm\",\
 },\
 [0xE01DD]={\
  direction=\"nsm\",\
 },\
 [0xE01DE]={\
  direction=\"nsm\",\
 },\
 [0xE01DF]={\
  direction=\"nsm\",\
 },\
 [0xE01E0]={\
  direction=\"nsm\",\
 },\
 [0xE01E1]={\
  direction=\"nsm\",\
 },\
 [0xE01E2]={\
  direction=\"nsm\",\
 },\
 [0xE01E3]={\
  direction=\"nsm\",\
 },\
 [0xE01E4]={\
  direction=\"nsm\",\
 },\
 [0xE01E5]={\
  direction=\"nsm\",\
 },\
 [0xE01E6]={\
  direction=\"nsm\",\
 },\
 [0xE01E7]={\
  direction=\"nsm\",\
 },\
 [0xE01E8]={\
  direction=\"nsm\",\
 },\
 [0xE01E9]={\
  direction=\"nsm\",\
 },\
 [0xE01EA]={\
  direction=\"nsm\",\
 },\
 [0xE01EB]={\
  direction=\"nsm\",\
 },\
 [0xE01EC]={\
  direction=\"nsm\",\
 },\
 [0xE01ED]={\
  direction=\"nsm\",\
 },\
 [0xE01EE]={\
  direction=\"nsm\",\
 },\
 [0xE01EF]={\
  direction=\"nsm\",\
 },\
}\
"
, '@'..".\\lua-libraries\\char-def.lua" ) )

package.preload[ "core\\font" ] = assert( (loadstring or load)(
"\
    SILE.registerCommand(\"font\", function(options, content)\
      if (type(content)==\"function\" or content[1]) then\
        SILE.settings.pushState()  \
      end\
      if (options.family)  then SILE.settings.set(\"font.family\", options.family) end\
      if (options.size)  then \
        local size = SILE.parserBits.dimensioned_string:match(options.size)\
        if not size then SU.error(\"Couldn't parse font size \"..options.size) end\
        SILE.settings.set(\"font.size\", size)\
      end\
      if (options.weight)  then SILE.settings.set(\"font.weight\", 0+options.weight) end\
      if (options.style)  then SILE.settings.set(\"font.style\", options.style) end\
      if (options.variant)  then SILE.settings.set(\"font.variant\", options.variant) end\
      if (options.direction)  then SILE.settings.set(\"font.direction\", options.direction) end\
      if (options.features)  then SILE.settings.set(\"font.features\", options.features) end\
\
      if (options.language)  then  \
        SILE.settings.set(\"document.language\", options.language) \
        SILE.languageSupport.loadLanguage(options.language)\
      end\
      if (options.script)  then SILE.settings.set(\"font.script\", options.script) \
      elseif SILE.settings.get(\"document.language\") then\
        local lang = SILE.languageSupport.languages[SILE.settings.get(\"document.language\")]\
        if lang and lang.defaultScript then\
          SILE.settings.set(\"font.script\", lang.defaultScript)\
        end\
      end\
\
      if (type(content)==\"function\" or content[1]) then \
        SILE.process(content)\
        SILE.settings.popState()\
      end\
    end, \"Set current font family, size, weight, style, variant, script, direction and language\")\
\
SILE.settings.declare({name = \"font.family\", type = \"string\", default = \"Gentium\"})\
SILE.settings.declare({name = \"font.size\", type = \"number or integer\", default = 10})\
SILE.settings.declare({name = \"font.weight\", type = \"integer\", default = 200})\
SILE.settings.declare({name = \"font.variant\", type = \"string\", default = \"normal\"})\
SILE.settings.declare({name = \"font.script\", type = \"string\", default = \"\"})\
SILE.settings.declare({name = \"font.style\", type = \"string\", default = \"normal\"})\
SILE.settings.declare({name = \"font.features\", type = \"string\", default = \"\"})\
SILE.settings.declare({name = \"font.direction\", type = \"string\", default = \"LTR\"})\
SILE.settings.declare({name = \"document.language\", type = \"string\", default = \"en\"})\
\
SILE.fontCache = {}\
\
local _key = function(options)\
  return table.concat({options.font;options.size;options.weight;options.style;options.variant;options.features},\";\")\
end\
\
\
SILE.font = {loadDefaults = function(options)\
  if not options.font then options.font = SILE.settings.get(\"font.family\") end\
  if not options.size then options.size = SILE.settings.get(\"font.size\") end\
  if not options.weight then options.weight = SILE.settings.get(\"font.weight\") end\
  if not options.style then options.style = SILE.settings.get(\"font.style\") end\
  if not options.variant then options.variant = SILE.settings.get(\"font.variant\") end\
  if not options.language then options.language = SILE.settings.get(\"document.language\") end\
  if not options.script then options.script = SILE.settings.get(\"font.script\") end\
  if not options.direction then options.direction = SILE.settings.get(\"font.direction\") end\
  if not options.features then options.features = SILE.settings.get(\"font.features\") end\
  return options\
end,\
  cache = function(options, callback)\
    if not SILE.fontCache[_key(options)] then\
      SILE.fontCache[_key(options)] = callback(options)\
    end\
    return SILE.fontCache[_key(options)]\
  end,\
  _key = _key\
}"
, '@'..".\\core\\font.lua" ) )

package.preload[ "languages\\en" ] = assert( (loadstring or load)(
"SILE.hyphenator.languages[\"en\"] = {};\
SILE.hyphenator.languages[\"en\"].patterns = {\".ach4\", \".ad4der\", \".af1t\", \".al3t\", \".am5at\", \".an5c\", \".ang4\",\
\".ani5m\", \".ant4\", \".an3te\", \".anti5s\", \".ar5s\", \".ar4tie\", \".ar4ty\",\
\".as3c\", \".as1p\", \".as1s\", \".aster5\", \".atom5\", \".au1d\", \".av4i\",\
\".awn4\", \".ba4g\", \".ba5na\", \".bas4e\", \".ber4\", \".be5ra\", \".be3sm\",\
\".be5sto\", \".bri2\", \".but4ti\", \".cam4pe\", \".can5c\", \".capa5b\",\
\".car5ol\", \".ca4t\", \".ce4la\", \".ch4\", \".chill5i\", \".ci2\", \".cit5r\",\
\".co3e\", \".co4r\", \".cor5ner\", \".de4moi\", \".de3o\", \".de3ra\", \".de3ri\",\
\".des4c\", \".dictio5\", \".do4t\", \".du4c\", \".dumb5\", \".earth5\", \".eas3i\",\
\".eb4\", \".eer4\", \".eg2\", \".el5d\", \".el3em\", \".enam3\", \".en3g\", \".en3s\",\
\".eq5ui5t\", \".er4ri\", \".es3\", \".eu3\", \".eye5\", \".fes3\", \".for5mer\",\
\".ga2\", \".ge2\", \".gen3t4\", \".ge5og\", \".gi5a\", \".gi4b\", \".go4r\",\
\".hand5i\", \".han5k\", \".he2\", \".hero5i\", \".hes3\", \".het3\", \".hi3b\",\
\".hi3er\", \".hon5ey\", \".hon3o\", \".hov5\", \".id4l\", \".idol3\", \".im3m\",\
\".im5pin\", \".in1\", \".in3ci\", \".ine2\", \".in2k\", \".in3s\", \".ir5r\",\
\".is4i\", \".ju3r\", \".la4cy\", \".la4m\", \".lat5er\", \".lath5\", \".le2\",\
\".leg5e\", \".len4\", \".lep5\", \".lev1\", \".li4g\", \".lig5a\", \".li2n\",\
\".li3o\", \".li4t\", \".mag5a5\", \".mal5o\", \".man5a\", \".mar5ti\", \".me2\",\
\".mer3c\", \".me5ter\", \".mis1\", \".mist5i\", \".mon3e\", \".mo3ro\", \".mu5ta\",\
\".muta5b\", \".ni4c\", \".od2\", \".odd5\", \".of5te\", \".or5ato\", \".or3c\",\
\".or1d\", \".or3t\", \".os3\", \".os4tl\", \".oth3\", \".out3\", \".ped5al\",\
\".pe5te\", \".pe5tit\", \".pi4e\", \".pio5n\", \".pi2t\", \".pre3m\", \".ra4c\",\
\".ran4t\", \".ratio5na\", \".ree2\", \".re5mit\", \".res2\", \".re5stat\", \".ri4g\",\
\".rit5u\", \".ro4q\", \".ros5t\", \".row5d\", \".ru4d\", \".sci3e\", \".self5\",\
\".sell5\", \".se2n\", \".se5rie\", \".sh2\", \".si2\", \".sing4\", \".st4\",\
\".sta5bl\", \".sy2\", \".ta4\", \".te4\", \".ten5an\", \".th2\", \".ti2\", \".til4\",\
\".tim5o5\", \".ting4\", \".tin5k\", \".ton4a\", \".to4p\", \".top5i\", \".tou5s\",\
\".trib5ut\", \".un1a\", \".un3ce\", \".under5\", \".un1e\", \".un5k\", \".un5o\",\
\".un3u\", \".up3\", \".ure3\", \".us5a\", \".ven4de\", \".ve5ra\", \".wil5i\",\
\".ye4\", \"4ab.\", \"a5bal\", \"a5ban\", \"abe2\", \"ab5erd\", \"abi5a\", \"ab5it5ab\",\
\"ab5lat\", \"ab5o5liz\", \"4abr\", \"ab5rog\", \"ab3ul\", \"a4car\", \"ac5ard\",\
\"ac5aro\", \"a5ceou\", \"ac1er\", \"a5chet\", \"4a2ci\", \"a3cie\", \"ac1in\",\
\"a3cio\", \"ac5rob\", \"act5if\", \"ac3ul\", \"ac4um\", \"a2d\", \"ad4din\",\
\"ad5er.\", \"2adi\", \"a3dia\", \"ad3ica\", \"adi4er\", \"a3dio\", \"a3dit\",\
\"a5diu\", \"ad4le\", \"ad3ow\", \"ad5ran\", \"ad4su\", \"4adu\", \"a3duc\", \"ad5um\",\
\"ae4r\", \"aeri4e\", \"a2f\", \"aff4\", \"a4gab\", \"aga4n\", \"ag5ell\", \"age4o\",\
\"4ageu\", \"ag1i\", \"4ag4l\", \"ag1n\", \"a2go\", \"3agog\", \"ag3oni\", \"a5guer\",\
\"ag5ul\", \"a4gy\", \"a3ha\", \"a3he\", \"ah4l\", \"a3ho\", \"ai2\", \"a5ia\", \"a3ic.\",\
\"ai5ly\", \"a4i4n\", \"ain5in\", \"ain5o\", \"ait5en\", \"a1j\", \"ak1en\", \"al5ab\",\
\"al3ad\", \"a4lar\", \"4aldi\", \"2ale\", \"al3end\", \"a4lenti\", \"a5le5o\",\
\"al1i\", \"al4ia.\", \"ali4e\", \"al5lev\", \"4allic\", \"4alm\", \"a5log.\",\
\"a4ly.\", \"4alys\", \"5a5lyst\", \"5alyt\", \"3alyz\", \"4ama\", \"am5ab\", \"am3ag\",\
\"ama5ra\", \"am5asc\", \"a4matis\", \"a4m5ato\", \"am5era\", \"am3ic\", \"am5if\",\
\"am5ily\", \"am1in\", \"ami4no\", \"a2mo\", \"a5mon\", \"amor5i\", \"amp5en\", \"a2n\",\
\"an3age\", \"3analy\", \"a3nar\", \"an3arc\", \"anar4i\", \"a3nati\", \"4and\",\
\"ande4s\", \"an3dis\", \"an1dl\", \"an4dow\", \"a5nee\", \"a3nen\", \"an5est.\",\
\"a3neu\", \"2ang\", \"ang5ie\", \"an1gl\", \"a4n1ic\", \"a3nies\", \"an3i3f\",\
\"an4ime\", \"a5nimi\", \"a5nine\", \"an3io\", \"a3nip\", \"an3ish\", \"an3it\",\
\"a3niu\", \"an4kli\", \"5anniz\", \"ano4\", \"an5ot\", \"anoth5\", \"an2sa\",\
\"an4sco\", \"an4sn\", \"an2sp\", \"ans3po\", \"an4st\", \"an4sur\", \"antal4\",\
\"an4tie\", \"4anto\", \"an2tr\", \"an4tw\", \"an3ua\", \"an3ul\", \"a5nur\", \"4ao\",\
\"apar4\", \"ap5at\", \"ap5ero\", \"a3pher\", \"4aphi\", \"a4pilla\", \"ap5illar\",\
\"ap3in\", \"ap3ita\", \"a3pitu\", \"a2pl\", \"apoc5\", \"ap5ola\", \"apor5i\",\
\"apos3t\", \"aps5es\", \"a3pu\", \"aque5\", \"2a2r\", \"ar3act\", \"a5rade\",\
\"ar5adis\", \"ar3al\", \"a5ramete\", \"aran4g\", \"ara3p\", \"ar4at\", \"a5ratio\",\
\"ar5ativ\", \"a5rau\", \"ar5av4\", \"araw4\", \"arbal4\", \"ar4chan\", \"ar5dine\",\
\"ar4dr\", \"ar5eas\", \"a3ree\", \"ar3ent\", \"a5ress\", \"ar4fi\", \"ar4fl\",\
\"ar1i\", \"ar5ial\", \"ar3ian\", \"a3riet\", \"ar4im\", \"ar5inat\", \"ar3io\",\
\"ar2iz\", \"ar2mi\", \"ar5o5d\", \"a5roni\", \"a3roo\", \"ar2p\", \"ar3q\", \"arre4\",\
\"ar4sa\", \"ar2sh\", \"4as.\", \"as4ab\", \"as3ant\", \"ashi4\", \"a5sia.\", \"a3sib\",\
\"a3sic\", \"5a5si4t\", \"ask3i\", \"as4l\", \"a4soc\", \"as5ph\", \"as4sh\",\
\"as3ten\", \"as1tr\", \"asur5a\", \"a2ta\", \"at3abl\", \"at5ac\", \"at3alo\",\
\"at5ap\", \"ate5c\", \"at5ech\", \"at3ego\", \"at3en.\", \"at3era\", \"ater5n\",\
\"a5terna\", \"at3est\", \"at5ev\", \"4ath\", \"ath5em\", \"a5then\", \"at4ho\",\
\"ath5om\", \"4ati.\", \"a5tia\", \"at5i5b\", \"at1ic\", \"at3if\", \"ation5ar\",\
\"at3itu\", \"a4tog\", \"a2tom\", \"at5omiz\", \"a4top\", \"a4tos\", \"a1tr\",\
\"at5rop\", \"at4sk\", \"at4tag\", \"at5te\", \"at4th\", \"a2tu\", \"at5ua\", \"at5ue\",\
\"at3ul\", \"at3ura\", \"a2ty\", \"au4b\", \"augh3\", \"au3gu\", \"au4l2\", \"aun5d\",\
\"au3r\", \"au5sib\", \"aut5en\", \"au1th\", \"a2va\", \"av3ag\", \"a5van\", \"ave4no\",\
\"av3era\", \"av5ern\", \"av5ery\", \"av1i\", \"avi4er\", \"av3ig\", \"av5oc\",\
\"a1vor\", \"3away\", \"aw3i\", \"aw4ly\", \"aws4\", \"ax4ic\", \"ax4id\", \"ay5al\",\
\"aye4\", \"ays4\", \"azi4er\", \"azz5i\", \"5ba.\", \"bad5ger\", \"ba4ge\", \"bal1a\",\
\"ban5dag\", \"ban4e\", \"ban3i\", \"barbi5\", \"bari4a\", \"bas4si\", \"1bat\",\
\"ba4z\", \"2b1b\", \"b2be\", \"b3ber\", \"bbi4na\", \"4b1d\", \"4be.\", \"beak4\",\
\"beat3\", \"4be2d\", \"be3da\", \"be3de\", \"be3di\", \"be3gi\", \"be5gu\", \"1bel\",\
\"be1li\", \"be3lo\", \"4be5m\", \"be5nig\", \"be5nu\", \"4bes4\", \"be3sp\",\
\"be5str\", \"3bet\", \"bet5iz\", \"be5tr\", \"be3tw\", \"be3w\", \"be5yo\", \"2bf\",\
\"4b3h\", \"bi2b\", \"bi4d\", \"3bie\", \"bi5en\", \"bi4er\", \"2b3if\", \"1bil\",\
\"bi3liz\", \"bina5r4\", \"bin4d\", \"bi5net\", \"bi3ogr\", \"bi5ou\", \"bi2t\",\
\"3bi3tio\", \"bi3tr\", \"3bit5ua\", \"b5itz\", \"b1j\", \"bk4\", \"b2l2\", \"blath5\",\
\"b4le.\", \"blen4\", \"5blesp\", \"b3lis\", \"b4lo\", \"blun4t\", \"4b1m\", \"4b3n\",\
\"bne5g\", \"3bod\", \"bod3i\", \"bo4e\", \"bol3ic\", \"bom4bi\", \"bon4a\", \"bon5at\",\
\"3boo\", \"5bor.\", \"4b1ora\", \"bor5d\", \"5bore\", \"5bori\", \"5bos4\", \"b5ota\",\
\"both5\", \"bo4to\", \"bound3\", \"4bp\", \"4brit\", \"broth3\", \"2b5s2\", \"bsor4\",\
\"2bt\", \"bt4l\", \"b4to\", \"b3tr\", \"buf4fer\", \"bu4ga\", \"bu3li\", \"bumi4\",\
\"bu4n\", \"bunt4i\", \"bu3re\", \"bus5ie\", \"buss4e\", \"5bust\", \"4buta\",\
\"3butio\", \"b5uto\", \"b1v\", \"4b5w\", \"5by.\", \"bys4\", \"1ca\", \"cab3in\",\
\"ca1bl\", \"cach4\", \"ca5den\", \"4cag4\", \"2c5ah\", \"ca3lat\", \"cal4la\",\
\"call5in\", \"4calo\", \"can5d\", \"can4e\", \"can4ic\", \"can5is\", \"can3iz\",\
\"can4ty\", \"cany4\", \"ca5per\", \"car5om\", \"cast5er\", \"cas5tig\", \"4casy\",\
\"ca4th\", \"4cativ\", \"cav5al\", \"c3c\", \"ccha5\", \"cci4a\", \"ccompa5\",\
\"ccon4\", \"ccou3t\", \"2ce.\", \"4ced.\", \"4ceden\", \"3cei\", \"5cel.\", \"3cell\",\
\"1cen\", \"3cenc\", \"2cen4e\", \"4ceni\", \"3cent\", \"3cep\", \"ce5ram\", \"4cesa\",\
\"3cessi\", \"ces5si5b\", \"ces5t\", \"cet4\", \"c5e4ta\", \"cew4\", \"2ch\", \"4ch.\",\
\"4ch3ab\", \"5chanic\", \"ch5a5nis\", \"che2\", \"cheap3\", \"4ched\", \"che5lo\",\
\"3chemi\", \"ch5ene\", \"ch3er.\", \"ch3ers\", \"4ch1in\", \"5chine.\", \"ch5iness\",\
\"5chini\", \"5chio\", \"3chit\", \"chi2z\", \"3cho2\", \"ch4ti\", \"1ci\", \"3cia\",\
\"ci2a5b\", \"cia5r\", \"ci5c\", \"4cier\", \"5cific.\", \"4cii\", \"ci4la\", \"3cili\",\
\"2cim\", \"2cin\", \"c4ina\", \"3cinat\", \"cin3em\", \"c1ing\", \"c5ing.\", \"5cino\",\
\"cion4\", \"4cipe\", \"ci3ph\", \"4cipic\", \"4cista\", \"4cisti\", \"2c1it\",\
\"cit3iz\", \"5ciz\", \"ck1\", \"ck3i\", \"1c4l4\", \"4clar\", \"c5laratio\",\
\"5clare\", \"cle4m\", \"4clic\", \"clim4\", \"cly4\", \"c5n\", \"1co\", \"co5ag\",\
\"coe2\", \"2cog\", \"co4gr\", \"coi4\", \"co3inc\", \"col5i\", \"5colo\", \"col3or\",\
\"com5er\", \"con4a\", \"c4one\", \"con3g\", \"con5t\", \"co3pa\", \"cop3ic\",\
\"co4pl\", \"4corb\", \"coro3n\", \"cos4e\", \"cov1\", \"cove4\", \"cow5a\", \"coz5e\",\
\"co5zi\", \"c1q\", \"cras5t\", \"5crat.\", \"5cratic\", \"cre3at\", \"5cred\",\
\"4c3reta\", \"cre4v\", \"cri2\", \"cri5f\", \"c4rin\", \"cris4\", \"5criti\",\
\"cro4pl\", \"crop5o\", \"cros4e\", \"cru4d\", \"4c3s2\", \"2c1t\", \"cta4b\",\
\"ct5ang\", \"c5tant\", \"c2te\", \"c3ter\", \"c4ticu\", \"ctim3i\", \"ctu4r\",\
\"c4tw\", \"cud5\", \"c4uf\", \"c4ui\", \"cu5ity\", \"5culi\", \"cul4tis\", \"3cultu\",\
\"cu2ma\", \"c3ume\", \"cu4mi\", \"3cun\", \"cu3pi\", \"cu5py\", \"cur5a4b\",\
\"cu5ria\", \"1cus\", \"cuss4i\", \"3c4ut\", \"cu4tie\", \"4c5utiv\", \"4cutr\",\
\"1cy\", \"cze4\", \"1d2a\", \"5da.\", \"2d3a4b\", \"dach4\", \"4daf\", \"2dag\",\
\"da2m2\", \"dan3g\", \"dard5\", \"dark5\", \"4dary\", \"3dat\", \"4dativ\", \"4dato\",\
\"5dav4\", \"dav5e\", \"5day\", \"d1b\", \"d5c\", \"d1d4\", \"2de.\", \"deaf5\",\
\"deb5it\", \"de4bon\", \"decan4\", \"de4cil\", \"de5com\", \"2d1ed\", \"4dee.\",\
\"de5if\", \"deli4e\", \"del5i5q\", \"de5lo\", \"d4em\", \"5dem.\", \"3demic\",\
\"dem5ic.\", \"de5mil\", \"de4mons\", \"demor5\", \"1den\", \"de4nar\", \"de3no\",\
\"denti5f\", \"de3nu\", \"de1p\", \"de3pa\", \"depi4\", \"de2pu\", \"d3eq\", \"d4erh\",\
\"5derm\", \"dern5iz\", \"der5s\", \"des2\", \"d2es.\", \"de1sc\", \"de2s5o\",\
\"des3ti\", \"de3str\", \"de4su\", \"de1t\", \"de2to\", \"de1v\", \"dev3il\", \"4dey\",\
\"4d1f\", \"d4ga\", \"d3ge4t\", \"dg1i\", \"d2gy\", \"d1h2\", \"5di.\", \"1d4i3a\",\
\"dia5b\", \"di4cam\", \"d4ice\", \"3dict\", \"3did\", \"5di3en\", \"d1if\", \"di3ge\",\
\"di4lato\", \"d1in\", \"1dina\", \"3dine.\", \"5dini\", \"di5niz\", \"1dio\",\
\"dio5g\", \"di4pl\", \"dir2\", \"di1re\", \"dirt5i\", \"dis1\", \"5disi\", \"d4is3t\",\
\"d2iti\", \"1di1v\", \"d1j\", \"d5k2\", \"4d5la\", \"3dle.\", \"3dled\", \"3dles.\",\
\"4dless\", \"2d3lo\", \"4d5lu\", \"2dly\", \"d1m\", \"4d1n4\", \"1do\", \"3do.\",\
\"do5de\", \"5doe\", \"2d5of\", \"d4og\", \"do4la\", \"doli4\", \"do5lor\", \"dom5iz\",\
\"do3nat\", \"doni4\", \"doo3d\", \"dop4p\", \"d4or\", \"3dos\", \"4d5out\", \"do4v\",\
\"3dox\", \"d1p\", \"1dr\", \"drag5on\", \"4drai\", \"dre4\", \"drea5r\", \"5dren\",\
\"dri4b\", \"dril4\", \"dro4p\", \"4drow\", \"5drupli\", \"4dry\", \"2d1s2\", \"ds4p\",\
\"d4sw\", \"d4sy\", \"d2th\", \"1du\", \"d1u1a\", \"du2c\", \"d1uca\", \"duc5er\",\
\"4duct.\", \"4ducts\", \"du5el\", \"du4g\", \"d3ule\", \"dum4be\", \"du4n\", \"4dup\",\
\"du4pe\", \"d1v\", \"d1w\", \"d2y\", \"5dyn\", \"dy4se\", \"dys5p\", \"e1a4b\",\
\"e3act\", \"ead1\", \"ead5ie\", \"ea4ge\", \"ea5ger\", \"ea4l\", \"eal5er\",\
\"eal3ou\", \"eam3er\", \"e5and\", \"ear3a\", \"ear4c\", \"ear5es\", \"ear4ic\",\
\"ear4il\", \"ear5k\", \"ear2t\", \"eart3e\", \"ea5sp\", \"e3ass\", \"east3\", \"ea2t\",\
\"eat5en\", \"eath3i\", \"e5atif\", \"e4a3tu\", \"ea2v\", \"eav3en\", \"eav5i\",\
\"eav5o\", \"2e1b\", \"e4bel.\", \"e4bels\", \"e4ben\", \"e4bit\", \"e3br\", \"e4cad\",\
\"ecan5c\", \"ecca5\", \"e1ce\", \"ec5essa\", \"ec2i\", \"e4cib\", \"ec5ificat\",\
\"ec5ifie\", \"ec5ify\", \"ec3im\", \"eci4t\", \"e5cite\", \"e4clam\", \"e4clus\",\
\"e2col\", \"e4comm\", \"e4compe\", \"e4conc\", \"e2cor\", \"ec3ora\", \"eco5ro\",\
\"e1cr\", \"e4crem\", \"ec4tan\", \"ec4te\", \"e1cu\", \"e4cul\", \"ec3ula\", \"2e2da\",\
\"4ed3d\", \"e4d1er\", \"ede4s\", \"4edi\", \"e3dia\", \"ed3ib\", \"ed3ica\", \"ed3im\",\
\"ed1it\", \"edi5z\", \"4edo\", \"e4dol\", \"edon2\", \"e4dri\", \"e4dul\", \"ed5ulo\",\
\"ee2c\", \"eed3i\", \"ee2f\", \"eel3i\", \"ee4ly\", \"ee2m\", \"ee4na\", \"ee4p1\",\
\"ee2s4\", \"eest4\", \"ee4ty\", \"e5ex\", \"e1f\", \"e4f3ere\", \"1eff\", \"e4fic\",\
\"5efici\", \"efil4\", \"e3fine\", \"ef5i5nite\", \"3efit\", \"efor5es\", \"e4fuse.\",\
\"4egal\", \"eger4\", \"eg5ib\", \"eg4ic\", \"eg5ing\", \"e5git5\", \"eg5n\", \"e4go.\",\
\"e4gos\", \"eg1ul\", \"e5gur\", \"5egy\", \"e1h4\", \"eher4\", \"ei2\", \"e5ic\",\
\"ei5d\", \"eig2\", \"ei5gl\", \"e3imb\", \"e3inf\", \"e1ing\", \"e5inst\", \"eir4d\",\
\"eit3e\", \"ei3th\", \"e5ity\", \"e1j\", \"e4jud\", \"ej5udi\", \"eki4n\", \"ek4la\",\
\"e1la\", \"e4la.\", \"e4lac\", \"elan4d\", \"el5ativ\", \"e4law\", \"elaxa4\",\
\"e3lea\", \"el5ebra\", \"5elec\", \"e4led\", \"el3ega\", \"e5len\", \"e4l1er\",\
\"e1les\", \"el2f\", \"el2i\", \"e3libe\", \"e4l5ic.\", \"el3ica\", \"e3lier\",\
\"el5igib\", \"e5lim\", \"e4l3ing\", \"e3lio\", \"e2lis\", \"el5ish\", \"e3liv3\",\
\"4ella\", \"el4lab\", \"ello4\", \"e5loc\", \"el5og\", \"el3op.\", \"el2sh\",\
\"el4ta\", \"e5lud\", \"el5ug\", \"e4mac\", \"e4mag\", \"e5man\", \"em5ana\", \"em5b\",\
\"e1me\", \"e2mel\", \"e4met\", \"em3ica\", \"emi4e\", \"em5igra\", \"em1in2\",\
\"em5ine\", \"em3i3ni\", \"e4mis\", \"em5ish\", \"e5miss\", \"em3iz\", \"5emniz\",\
\"emo4g\", \"emoni5o\", \"em3pi\", \"e4mul\", \"em5ula\", \"emu3n\", \"e3my\",\
\"en5amo\", \"e4nant\", \"ench4er\", \"en3dic\", \"e5nea\", \"e5nee\", \"en3em\",\
\"en5ero\", \"en5esi\", \"en5est\", \"en3etr\", \"e3new\", \"en5ics\", \"e5nie\",\
\"e5nil\", \"e3nio\", \"en3ish\", \"en3it\", \"e5niu\", \"5eniz\", \"4enn\", \"4eno\",\
\"eno4g\", \"e4nos\", \"en3ov\", \"en4sw\", \"ent5age\", \"4enthes\", \"en3ua\",\
\"en5uf\", \"e3ny.\", \"4en3z\", \"e5of\", \"eo2g\", \"e4oi4\", \"e3ol\", \"eop3ar\",\
\"e1or\", \"eo3re\", \"eo5rol\", \"eos4\", \"e4ot\", \"eo4to\", \"e5out\", \"e5ow\",\
\"e2pa\", \"e3pai\", \"ep5anc\", \"e5pel\", \"e3pent\", \"ep5etitio\", \"ephe4\",\
\"e4pli\", \"e1po\", \"e4prec\", \"ep5reca\", \"e4pred\", \"ep3reh\", \"e3pro\",\
\"e4prob\", \"ep4sh\", \"ep5ti5b\", \"e4put\", \"ep5uta\", \"e1q\", \"equi3l\",\
\"e4q3ui3s\", \"er1a\", \"era4b\", \"4erand\", \"er3ar\", \"4erati.\", \"2erb\",\
\"er4bl\", \"er3ch\", \"er4che\", \"2ere.\", \"e3real\", \"ere5co\", \"ere3in\",\
\"er5el.\", \"er3emo\", \"er5ena\", \"er5ence\", \"4erene\", \"er3ent\", \"ere4q\",\
\"er5ess\", \"er3est\", \"eret4\", \"er1h\", \"er1i\", \"e1ria4\", \"5erick\",\
\"e3rien\", \"eri4er\", \"er3ine\", \"e1rio\", \"4erit\", \"er4iu\", \"eri4v\",\
\"e4riva\", \"er3m4\", \"er4nis\", \"4ernit\", \"5erniz\", \"er3no\", \"2ero\",\
\"er5ob\", \"e5roc\", \"ero4r\", \"er1ou\", \"er1s\", \"er3set\", \"ert3er\", \"4ertl\",\
\"er3tw\", \"4eru\", \"eru4t\", \"5erwau\", \"e1s4a\", \"e4sage.\", \"e4sages\",\
\"es2c\", \"e2sca\", \"es5can\", \"e3scr\", \"es5cu\", \"e1s2e\", \"e2sec\", \"es5ecr\",\
\"es5enc\", \"e4sert.\", \"e4serts\", \"e4serva\", \"4esh\", \"e3sha\", \"esh5en\",\
\"e1si\", \"e2sic\", \"e2sid\", \"es5iden\", \"es5igna\", \"e2s5im\", \"es4i4n\",\
\"esis4te\", \"esi4u\", \"e5skin\", \"es4mi\", \"e2sol\", \"es3olu\", \"e2son\",\
\"es5ona\", \"e1sp\", \"es3per\", \"es5pira\", \"es4pre\", \"2ess\", \"es4si4b\",\
\"estan4\", \"es3tig\", \"es5tim\", \"4es2to\", \"e3ston\", \"2estr\", \"e5stro\",\
\"estruc5\", \"e2sur\", \"es5urr\", \"es4w\", \"eta4b\", \"eten4d\", \"e3teo\",\
\"ethod3\", \"et1ic\", \"e5tide\", \"etin4\", \"eti4no\", \"e5tir\", \"e5titio\",\
\"et5itiv\", \"4etn\", \"et5ona\", \"e3tra\", \"e3tre\", \"et3ric\", \"et5rif\",\
\"et3rog\", \"et5ros\", \"et3ua\", \"et5ym\", \"et5z\", \"4eu\", \"e5un\", \"e3up\",\
\"eu3ro\", \"eus4\", \"eute4\", \"euti5l\", \"eu5tr\", \"eva2p5\", \"e2vas\",\
\"ev5ast\", \"e5vea\", \"ev3ell\", \"evel3o\", \"e5veng\", \"even4i\", \"ev1er\",\
\"e5verb\", \"e1vi\", \"ev3id\", \"evi4l\", \"e4vin\", \"evi4v\", \"e5voc\", \"e5vu\",\
\"e1wa\", \"e4wag\", \"e5wee\", \"e3wh\", \"ewil5\", \"ew3ing\", \"e3wit\", \"1exp\",\
\"5eyc\", \"5eye.\", \"eys4\", \"1fa\", \"fa3bl\", \"fab3r\", \"fa4ce\", \"4fag\",\
\"fain4\", \"fall5e\", \"4fa4ma\", \"fam5is\", \"5far\", \"far5th\", \"fa3ta\",\
\"fa3the\", \"4fato\", \"fault5\", \"4f5b\", \"4fd\", \"4fe.\", \"feas4\", \"feath3\",\
\"fe4b\", \"4feca\", \"5fect\", \"2fed\", \"fe3li\", \"fe4mo\", \"fen2d\", \"fend5e\",\
\"fer1\", \"5ferr\", \"fev4\", \"4f1f\", \"f4fes\", \"f4fie\", \"f5fin.\", \"f2f5is\",\
\"f4fly\", \"f2fy\", \"4fh\", \"1fi\", \"fi3a\", \"2f3ic.\", \"4f3ical\", \"f3ican\",\
\"4ficate\", \"f3icen\", \"fi3cer\", \"fic4i\", \"5ficia\", \"5ficie\", \"4fics\",\
\"fi3cu\", \"fi5del\", \"fight5\", \"fil5i\", \"fill5in\", \"4fily\", \"2fin\",\
\"5fina\", \"fin2d5\", \"fi2ne\", \"f1in3g\", \"fin4n\", \"fis4ti\", \"f4l2\",\
\"f5less\", \"flin4\", \"flo3re\", \"f2ly5\", \"4fm\", \"4fn\", \"1fo\", \"5fon\",\
\"fon4de\", \"fon4t\", \"fo2r\", \"fo5rat\", \"for5ay\", \"fore5t\", \"for4i\",\
\"fort5a\", \"fos5\", \"4f5p\", \"fra4t\", \"f5rea\", \"fres5c\", \"fri2\", \"fril4\",\
\"frol5\", \"2f3s\", \"2ft\", \"f4to\", \"f2ty\", \"3fu\", \"fu5el\", \"4fug\",\
\"fu4min\", \"fu5ne\", \"fu3ri\", \"fusi4\", \"fus4s\", \"4futa\", \"1fy\", \"1ga\",\
\"gaf4\", \"5gal.\", \"3gali\", \"ga3lo\", \"2gam\", \"ga5met\", \"g5amo\", \"gan5is\",\
\"ga3niz\", \"gani5za\", \"4gano\", \"gar5n4\", \"gass4\", \"gath3\", \"4gativ\",\
\"4gaz\", \"g3b\", \"gd4\", \"2ge.\", \"2ged\", \"geez4\", \"gel4in\", \"ge5lis\",\
\"ge5liz\", \"4gely\", \"1gen\", \"ge4nat\", \"ge5niz\", \"4geno\", \"4geny\", \"1geo\",\
\"ge3om\", \"g4ery\", \"5gesi\", \"geth5\", \"4geto\", \"ge4ty\", \"ge4v\", \"4g1g2\",\
\"g2ge\", \"g3ger\", \"gglu5\", \"ggo4\", \"gh3in\", \"gh5out\", \"gh4to\", \"5gi.\",\
\"1gi4a\", \"gia5r\", \"g1ic\", \"5gicia\", \"g4ico\", \"gien5\", \"5gies.\", \"gil4\",\
\"g3imen\", \"3g4in.\", \"gin5ge\", \"5g4ins\", \"5gio\", \"3gir\", \"gir4l\",\
\"g3isl\", \"gi4u\", \"5giv\", \"3giz\", \"gl2\", \"gla4\", \"glad5i\", \"5glas\",\
\"1gle\", \"gli4b\", \"g3lig\", \"3glo\", \"glo3r\", \"g1m\", \"g4my\", \"gn4a\",\
\"g4na.\", \"gnet4t\", \"g1ni\", \"g2nin\", \"g4nio\", \"g1no\", \"g4non\", \"1go\",\
\"3go.\", \"gob5\", \"5goe\", \"3g4o4g\", \"go3is\", \"gon2\", \"4g3o3na\", \"gondo5\",\
\"go3ni\", \"5goo\", \"go5riz\", \"gor5ou\", \"5gos.\", \"gov1\", \"g3p\", \"1gr\",\
\"4grada\", \"g4rai\", \"gran2\", \"5graph.\", \"g5rapher\", \"5graphic\",\
\"4graphy\", \"4gray\", \"gre4n\", \"4gress.\", \"4grit\", \"g4ro\", \"gruf4\", \"gs2\",\
\"g5ste\", \"gth3\", \"gu4a\", \"3guard\", \"2gue\", \"5gui5t\", \"3gun\", \"3gus\",\
\"4gu4t\", \"g3w\", \"1gy\", \"2g5y3n\", \"gy5ra\", \"h3ab4l\", \"hach4\", \"hae4m\",\
\"hae4t\", \"h5agu\", \"ha3la\", \"hala3m\", \"ha4m\", \"han4ci\", \"han4cy\",\
\"5hand.\", \"han4g\", \"hang5er\", \"hang5o\", \"h5a5niz\", \"han4k\", \"han4te\",\
\"hap3l\", \"hap5t\", \"ha3ran\", \"ha5ras\", \"har2d\", \"hard3e\", \"har4le\",\
\"harp5en\", \"har5ter\", \"has5s\", \"haun4\", \"5haz\", \"haz3a\", \"h1b\", \"1head\",\
\"3hear\", \"he4can\", \"h5ecat\", \"h4ed\", \"he5do5\", \"he3l4i\", \"hel4lis\",\
\"hel4ly\", \"h5elo\", \"hem4p\", \"he2n\", \"hena4\", \"hen5at\", \"heo5r\", \"hep5\",\
\"h4era\", \"hera3p\", \"her4ba\", \"here5a\", \"h3ern\", \"h5erou\", \"h3ery\",\
\"h1es\", \"he2s5p\", \"he4t\", \"het4ed\", \"heu4\", \"h1f\", \"h1h\", \"hi5an\",\
\"hi4co\", \"high5\", \"h4il2\", \"himer4\", \"h4ina\", \"hion4e\", \"hi4p\", \"hir4l\",\
\"hi3ro\", \"hir4p\", \"hir4r\", \"his3el\", \"his4s\", \"hith5er\", \"hi2v\", \"4hk\",\
\"4h1l4\", \"hlan4\", \"h2lo\", \"hlo3ri\", \"4h1m\", \"hmet4\", \"2h1n\", \"h5odiz\",\
\"h5ods\", \"ho4g\", \"hoge4\", \"hol5ar\", \"3hol4e\", \"ho4ma\", \"home3\", \"hon4a\",\
\"ho5ny\", \"3hood\", \"hoon4\", \"hor5at\", \"ho5ris\", \"hort3e\", \"ho5ru\",\
\"hos4e\", \"ho5sen\", \"hos1p\", \"1hous\", \"house3\", \"hov5el\", \"4h5p\", \"4hr4\",\
\"hree5\", \"hro5niz\", \"hro3po\", \"4h1s2\", \"h4sh\", \"h4tar\", \"ht1en\",\
\"ht5es\", \"h4ty\", \"hu4g\", \"hu4min\", \"hun5ke\", \"hun4t\", \"hus3t4\", \"hu4t\",\
\"h1w\", \"h4wart\", \"hy3pe\", \"hy3ph\", \"hy2s\", \"2i1a\", \"i2al\", \"iam4\",\
\"iam5ete\", \"i2an\", \"4ianc\", \"ian3i\", \"4ian4t\", \"ia5pe\", \"iass4\",\
\"i4ativ\", \"ia4tric\", \"i4atu\", \"ibe4\", \"ib3era\", \"ib5ert\", \"ib5ia\",\
\"ib3in\", \"ib5it.\", \"ib5ite\", \"i1bl\", \"ib3li\", \"i5bo\", \"i1br\", \"i2b5ri\",\
\"i5bun\", \"4icam\", \"5icap\", \"4icar\", \"i4car.\", \"i4cara\", \"icas5\",\
\"i4cay\", \"iccu4\", \"4iceo\", \"4ich\", \"2ici\", \"i5cid\", \"ic5ina\", \"i2cip\",\
\"ic3ipa\", \"i4cly\", \"i2c5oc\", \"4i1cr\", \"5icra\", \"i4cry\", \"ic4te\",\
\"ictu2\", \"ic4t3ua\", \"ic3ula\", \"ic4um\", \"ic5uo\", \"i3cur\", \"2id\", \"i4dai\",\
\"id5anc\", \"id5d\", \"ide3al\", \"ide4s\", \"i2di\", \"id5ian\", \"idi4ar\",\
\"i5die\", \"id3io\", \"idi5ou\", \"id1it\", \"id5iu\", \"i3dle\", \"i4dom\", \"id3ow\",\
\"i4dr\", \"i2du\", \"id5uo\", \"2ie4\", \"ied4e\", \"5ie5ga\", \"ield3\", \"ien5a4\",\
\"ien4e\", \"i5enn\", \"i3enti\", \"i1er.\", \"i3esc\", \"i1est\", \"i3et\", \"4if.\",\
\"if5ero\", \"iff5en\", \"if4fr\", \"4ific.\", \"i3fie\", \"i3fl\", \"4ift\", \"2ig\",\
\"iga5b\", \"ig3era\", \"ight3i\", \"4igi\", \"i3gib\", \"ig3il\", \"ig3in\", \"ig3it\",\
\"i4g4l\", \"i2go\", \"ig3or\", \"ig5ot\", \"i5gre\", \"igu5i\", \"ig1ur\", \"i3h\",\
\"4i5i4\", \"i3j\", \"4ik\", \"i1la\", \"il3a4b\", \"i4lade\", \"i2l5am\", \"ila5ra\",\
\"i3leg\", \"il1er\", \"ilev4\", \"il5f\", \"il1i\", \"il3ia\", \"il2ib\", \"il3io\",\
\"il4ist\", \"2ilit\", \"il2iz\", \"ill5ab\", \"4iln\", \"il3oq\", \"il4ty\", \"il5ur\",\
\"il3v\", \"i4mag\", \"im3age\", \"ima5ry\", \"imenta5r\", \"4imet\", \"im1i\",\
\"im5ida\", \"imi5le\", \"i5mini\", \"4imit\", \"im4ni\", \"i3mon\", \"i2mu\",\
\"im3ula\", \"2in.\", \"i4n3au\", \"4inav\", \"incel4\", \"in3cer\", \"4ind\",\
\"in5dling\", \"2ine\", \"i3nee\", \"iner4ar\", \"i5ness\", \"4inga\", \"4inge\",\
\"in5gen\", \"4ingi\", \"in5gling\", \"4ingo\", \"4ingu\", \"2ini\", \"i5ni.\",\
\"i4nia\", \"in3io\", \"in1is\", \"i5nite.\", \"5initio\", \"in3ity\", \"4ink\",\
\"4inl\", \"2inn\", \"2i1no\", \"i4no4c\", \"ino4s\", \"i4not\", \"2ins\", \"in3se\",\
\"insur5a\", \"2int.\", \"2in4th\", \"in1u\", \"i5nus\", \"4iny\", \"2io\", \"4io.\",\
\"ioge4\", \"io2gr\", \"i1ol\", \"io4m\", \"ion3at\", \"ion4ery\", \"ion3i\", \"io5ph\",\
\"ior3i\", \"i4os\", \"io5th\", \"i5oti\", \"io4to\", \"i4our\", \"2ip\", \"ipe4\",\
\"iphras4\", \"ip3i\", \"ip4ic\", \"ip4re4\", \"ip3ul\", \"i3qua\", \"iq5uef\",\
\"iq3uid\", \"iq3ui3t\", \"4ir\", \"i1ra\", \"ira4b\", \"i4rac\", \"ird5e\", \"ire4de\",\
\"i4ref\", \"i4rel4\", \"i4res\", \"ir5gi\", \"ir1i\", \"iri5de\", \"ir4is\",\
\"iri3tu\", \"5i5r2iz\", \"ir4min\", \"iro4g\", \"5iron.\", \"ir5ul\", \"2is.\",\
\"is5ag\", \"is3ar\", \"isas5\", \"2is1c\", \"is3ch\", \"4ise\", \"is3er\", \"3isf\",\
\"is5han\", \"is3hon\", \"ish5op\", \"is3ib\", \"isi4d\", \"i5sis\", \"is5itiv\",\
\"4is4k\", \"islan4\", \"4isms\", \"i2so\", \"iso5mer\", \"is1p\", \"is2pi\", \"is4py\",\
\"4is1s\", \"is4sal\", \"issen4\", \"is4ses\", \"is4ta.\", \"is1te\", \"is1ti\",\
\"ist4ly\", \"4istral\", \"i2su\", \"is5us\", \"4ita.\", \"ita4bi\", \"i4tag\",\
\"4ita5m\", \"i3tan\", \"i3tat\", \"2ite\", \"it3era\", \"i5teri\", \"it4es\", \"2ith\",\
\"i1ti\", \"4itia\", \"4i2tic\", \"it3ica\", \"5i5tick\", \"it3ig\", \"it5ill\",\
\"i2tim\", \"2itio\", \"4itis\", \"i4tism\", \"i2t5o5m\", \"4iton\", \"i4tram\",\
\"it5ry\", \"4itt\", \"it3uat\", \"i5tud\", \"it3ul\", \"4itz.\", \"i1u\", \"2iv\",\
\"iv3ell\", \"iv3en.\", \"i4v3er.\", \"i4vers.\", \"iv5il.\", \"iv5io\", \"iv1it\",\
\"i5vore\", \"iv3o3ro\", \"i4v3ot\", \"4i5w\", \"ix4o\", \"4iy\", \"4izar\", \"izi4\",\
\"5izont\", \"5ja\", \"jac4q\", \"ja4p\", \"1je\", \"jer5s\", \"4jestie\", \"4jesty\",\
\"jew3\", \"jo4p\", \"5judg\", \"3ka.\", \"k3ab\", \"k5ag\", \"kais4\", \"kal4\", \"k1b\",\
\"k2ed\", \"1kee\", \"ke4g\", \"ke5li\", \"k3en4d\", \"k1er\", \"kes4\", \"k3est.\",\
\"ke4ty\", \"k3f\", \"kh4\", \"k1i\", \"5ki.\", \"5k2ic\", \"k4ill\", \"kilo5\", \"k4im\",\
\"k4in.\", \"kin4de\", \"k5iness\", \"kin4g\", \"ki4p\", \"kis4\", \"k5ish\", \"kk4\",\
\"k1l\", \"4kley\", \"4kly\", \"k1m\", \"k5nes\", \"1k2no\", \"ko5r\", \"kosh4\",\
\"k3ou\", \"kro5n\", \"4k1s2\", \"k4sc\", \"ks4l\", \"k4sy\", \"k5t\", \"k1w\",\
\"lab3ic\", \"l4abo\", \"laci4\", \"l4ade\", \"la3dy\", \"lag4n\", \"lam3o\", \"3land\",\
\"lan4dl\", \"lan5et\", \"lan4te\", \"lar4g\", \"lar3i\", \"las4e\", \"la5tan\",\
\"4lateli\", \"4lativ\", \"4lav\", \"la4v4a\", \"2l1b\", \"lbin4\", \"4l1c2\", \"lce4\",\
\"l3ci\", \"2ld\", \"l2de\", \"ld4ere\", \"ld4eri\", \"ldi4\", \"ld5is\", \"l3dr\",\
\"l4dri\", \"le2a\", \"le4bi\", \"left5\", \"5leg.\", \"5legg\", \"le4mat\",\
\"lem5atic\", \"4len.\", \"3lenc\", \"5lene.\", \"1lent\", \"le3ph\", \"le4pr\",\
\"lera5b\", \"ler4e\", \"3lerg\", \"3l4eri\", \"l4ero\", \"les2\", \"le5sco\",\
\"5lesq\", \"3less\", \"5less.\", \"l3eva\", \"lev4er.\", \"lev4era\", \"lev4ers\",\
\"3ley\", \"4leye\", \"2lf\", \"l5fr\", \"4l1g4\", \"l5ga\", \"lgar3\", \"l4ges\",\
\"lgo3\", \"2l3h\", \"li4ag\", \"li2am\", \"liar5iz\", \"li4as\", \"li4ato\", \"li5bi\",\
\"5licio\", \"li4cor\", \"4lics\", \"4lict.\", \"l4icu\", \"l3icy\", \"l3ida\",\
\"lid5er\", \"3lidi\", \"lif3er\", \"l4iff\", \"li4fl\", \"5ligate\", \"3ligh\",\
\"li4gra\", \"3lik\", \"4l4i4l\", \"lim4bl\", \"lim3i\", \"li4mo\", \"l4im4p\",\
\"l4ina\", \"1l4ine\", \"lin3ea\", \"lin3i\", \"link5er\", \"li5og\", \"4l4iq\",\
\"lis4p\", \"l1it\", \"l2it.\", \"5litica\", \"l5i5tics\", \"liv3er\", \"l1iz\",\
\"4lj\", \"lka3\", \"l3kal\", \"lka4t\", \"l1l\", \"l4law\", \"l2le\", \"l5lea\",\
\"l3lec\", \"l3leg\", \"l3lel\", \"l3le4n\", \"l3le4t\", \"ll2i\", \"l2lin4\",\
\"l5lina\", \"ll4o\", \"lloqui5\", \"ll5out\", \"l5low\", \"2lm\", \"l5met\",\
\"lm3ing\", \"l4mod\", \"lmon4\", \"2l1n2\", \"3lo.\", \"lob5al\", \"lo4ci\", \"4lof\",\
\"3logic\", \"l5ogo\", \"3logu\", \"lom3er\", \"5long\", \"lon4i\", \"l3o3niz\",\
\"lood5\", \"5lope.\", \"lop3i\", \"l3opm\", \"lora4\", \"lo4rato\", \"lo5rie\",\
\"lor5ou\", \"5los.\", \"los5et\", \"5losophiz\", \"5losophy\", \"los4t\", \"lo4ta\",\
\"loun5d\", \"2lout\", \"4lov\", \"2lp\", \"lpa5b\", \"l3pha\", \"l5phi\", \"lp5ing\",\
\"l3pit\", \"l4pl\", \"l5pr\", \"4l1r\", \"2l1s2\", \"l4sc\", \"l2se\", \"l4sie\",\
\"4lt\", \"lt5ag\", \"ltane5\", \"l1te\", \"lten4\", \"ltera4\", \"lth3i\", \"l5ties.\",\
\"ltis4\", \"l1tr\", \"ltu2\", \"ltur3a\", \"lu5a\", \"lu3br\", \"luch4\", \"lu3ci\",\
\"lu3en\", \"luf4\", \"lu5id\", \"lu4ma\", \"5lumi\", \"l5umn.\", \"5lumnia\", \"lu3o\",\
\"luo3r\", \"4lup\", \"luss4\", \"lus3te\", \"1lut\", \"l5ven\", \"l5vet4\", \"2l1w\",\
\"1ly\", \"4lya\", \"4lyb\", \"ly5me\", \"ly3no\", \"2lys4\", \"l5yse\", \"1ma\",\
\"2mab\", \"ma2ca\", \"ma5chine\", \"ma4cl\", \"mag5in\", \"5magn\", \"2mah\",\
\"maid5\", \"4mald\", \"ma3lig\", \"ma5lin\", \"mal4li\", \"mal4ty\", \"5mania\",\
\"man5is\", \"man3iz\", \"4map\", \"ma5rine.\", \"ma5riz\", \"mar4ly\", \"mar3v\",\
\"ma5sce\", \"mas4e\", \"mas1t\", \"5mate\", \"math3\", \"ma3tis\", \"4matiza\",\
\"4m1b\", \"mba4t5\", \"m5bil\", \"m4b3ing\", \"mbi4v\", \"4m5c\", \"4me.\", \"2med\",\
\"4med.\", \"5media\", \"me3die\", \"m5e5dy\", \"me2g\", \"mel5on\", \"mel4t\",\
\"me2m\", \"mem1o3\", \"1men\", \"men4a\", \"men5ac\", \"men4de\", \"4mene\", \"men4i\",\
\"mens4\", \"mensu5\", \"3ment\", \"men4te\", \"me5on\", \"m5ersa\", \"2mes\",\
\"3mesti\", \"me4ta\", \"met3al\", \"me1te\", \"me5thi\", \"m4etr\", \"5metric\",\
\"me5trie\", \"me3try\", \"me4v\", \"4m1f\", \"2mh\", \"5mi.\", \"mi3a\", \"mid4a\",\
\"mid4g\", \"mig4\", \"3milia\", \"m5i5lie\", \"m4ill\", \"min4a\", \"3mind\",\
\"m5inee\", \"m4ingl\", \"min5gli\", \"m5ingly\", \"min4t\", \"m4inu\", \"miot4\",\
\"m2is\", \"mis4er.\", \"mis5l\", \"mis4ti\", \"m5istry\", \"4mith\", \"m2iz\", \"4mk\",\
\"4m1l\", \"m1m\", \"mma5ry\", \"4m1n\", \"mn4a\", \"m4nin\", \"mn4o\", \"1mo\",\
\"4mocr\", \"5mocratiz\", \"mo2d1\", \"mo4go\", \"mois2\", \"moi5se\", \"4mok\",\
\"mo5lest\", \"mo3me\", \"mon5et\", \"mon5ge\", \"moni3a\", \"mon4ism\", \"mon4ist\",\
\"mo3niz\", \"monol4\", \"mo3ny.\", \"mo2r\", \"4mora.\", \"mos2\", \"mo5sey\",\
\"mo3sp\", \"moth3\", \"m5ouf\", \"3mous\", \"mo2v\", \"4m1p\", \"mpara5\", \"mpa5rab\",\
\"mpar5i\", \"m3pet\", \"mphas4\", \"m2pi\", \"mpi4a\", \"mp5ies\", \"m4p1in\",\
\"m5pir\", \"mp5is\", \"mpo3ri\", \"mpos5ite\", \"m4pous\", \"mpov5\", \"mp4tr\",\
\"m2py\", \"4m3r\", \"4m1s2\", \"m4sh\", \"m5si\", \"4mt\", \"1mu\", \"mula5r4\",\
\"5mult\", \"multi3\", \"3mum\", \"mun2\", \"4mup\", \"mu4u\", \"4mw\", \"1na\",\
\"2n1a2b\", \"n4abu\", \"4nac.\", \"na4ca\", \"n5act\", \"nag5er.\", \"nak4\",\
\"na4li\", \"na5lia\", \"4nalt\", \"na5mit\", \"n2an\", \"nanci4\", \"nan4it\",\
\"nank4\", \"nar3c\", \"4nare\", \"nar3i\", \"nar4l\", \"n5arm\", \"n4as\", \"nas4c\",\
\"nas5ti\", \"n2at\", \"na3tal\", \"nato5miz\", \"n2au\", \"nau3se\", \"3naut\",\
\"nav4e\", \"4n1b4\", \"ncar5\", \"n4ces.\", \"n3cha\", \"n5cheo\", \"n5chil\",\
\"n3chis\", \"nc1in\", \"nc4it\", \"ncour5a\", \"n1cr\", \"n1cu\", \"n4dai\", \"n5dan\",\
\"n1de\", \"nd5est.\", \"ndi4b\", \"n5d2if\", \"n1dit\", \"n3diz\", \"n5duc\",\
\"ndu4r\", \"nd2we\", \"2ne.\", \"n3ear\", \"ne2b\", \"neb3u\", \"ne2c\", \"5neck\",\
\"2ned\", \"ne4gat\", \"neg5ativ\", \"5nege\", \"ne4la\", \"nel5iz\", \"ne5mi\",\
\"ne4mo\", \"1nen\", \"4nene\", \"3neo\", \"ne4po\", \"ne2q\", \"n1er\", \"nera5b\",\
\"n4erar\", \"n2ere\", \"n4er5i\", \"ner4r\", \"1nes\", \"2nes.\", \"4nesp\", \"2nest\",\
\"4nesw\", \"3netic\", \"ne4v\", \"n5eve\", \"ne4w\", \"n3f\", \"n4gab\", \"n3gel\",\
\"nge4n4e\", \"n5gere\", \"n3geri\", \"ng5ha\", \"n3gib\", \"ng1in\", \"n5git\",\
\"n4gla\", \"ngov4\", \"ng5sh\", \"n1gu\", \"n4gum\", \"n2gy\", \"4n1h4\", \"nha4\",\
\"nhab3\", \"nhe4\", \"3n4ia\", \"ni3an\", \"ni4ap\", \"ni3ba\", \"ni4bl\", \"ni4d\",\
\"ni5di\", \"ni4er\", \"ni2fi\", \"ni5ficat\", \"n5igr\", \"nik4\", \"n1im\",\
\"ni3miz\", \"n1in\", \"5nine.\", \"nin4g\", \"ni4o\", \"5nis.\", \"nis4ta\", \"n2it\",\
\"n4ith\", \"3nitio\", \"n3itor\", \"ni3tr\", \"n1j\", \"4nk2\", \"n5kero\", \"n3ket\",\
\"nk3in\", \"n1kl\", \"4n1l\", \"n5m\", \"nme4\", \"nmet4\", \"4n1n2\", \"nne4\",\
\"nni3al\", \"nni4v\", \"nob4l\", \"no3ble\", \"n5ocl\", \"4n3o2d\", \"3noe\", \"4nog\",\
\"noge4\", \"nois5i\", \"no5l4i\", \"5nologis\", \"3nomic\", \"n5o5miz\", \"no4mo\",\
\"no3my\", \"no4n\", \"non4ag\", \"non5i\", \"n5oniz\", \"4nop\", \"5nop5o5li\",\
\"nor5ab\", \"no4rary\", \"4nosc\", \"nos4e\", \"nos5t\", \"no5ta\", \"1nou\",\
\"3noun\", \"nov3el3\", \"nowl3\", \"n1p4\", \"npi4\", \"npre4c\", \"n1q\", \"n1r\",\
\"nru4\", \"2n1s2\", \"ns5ab\", \"nsati4\", \"ns4c\", \"n2se\", \"n4s3es\", \"nsid1\",\
\"nsig4\", \"n2sl\", \"ns3m\", \"n4soc\", \"ns4pe\", \"n5spi\", \"nsta5bl\", \"n1t\",\
\"nta4b\", \"nter3s\", \"nt2i\", \"n5tib\", \"nti4er\", \"nti2f\", \"n3tine\",\
\"n4t3ing\", \"nti4p\", \"ntrol5li\", \"nt4s\", \"ntu3me\", \"nu1a\", \"nu4d\",\
\"nu5en\", \"nuf4fe\", \"n3uin\", \"3nu3it\", \"n4um\", \"nu1me\", \"n5umi\", \"3nu4n\",\
\"n3uo\", \"nu3tr\", \"n1v2\", \"n1w4\", \"nym4\", \"nyp4\", \"4nz\", \"n3za\", \"4oa\",\
\"oad3\", \"o5a5les\", \"oard3\", \"oas4e\", \"oast5e\", \"oat5i\", \"ob3a3b\",\
\"o5bar\", \"obe4l\", \"o1bi\", \"o2bin\", \"ob5ing\", \"o3br\", \"ob3ul\", \"o1ce\",\
\"och4\", \"o3chet\", \"ocif3\", \"o4cil\", \"o4clam\", \"o4cod\", \"oc3rac\",\
\"oc5ratiz\", \"ocre3\", \"5ocrit\", \"octor5a\", \"oc3ula\", \"o5cure\", \"od5ded\",\
\"od3ic\", \"odi3o\", \"o2do4\", \"odor3\", \"od5uct.\", \"od5ucts\", \"o4el\",\
\"o5eng\", \"o3er\", \"oe4ta\", \"o3ev\", \"o2fi\", \"of5ite\", \"ofit4t\", \"o2g5a5r\",\
\"og5ativ\", \"o4gato\", \"o1ge\", \"o5gene\", \"o5geo\", \"o4ger\", \"o3gie\",\
\"1o1gis\", \"og3it\", \"o4gl\", \"o5g2ly\", \"3ogniz\", \"o4gro\", \"ogu5i\", \"1ogy\",\
\"2ogyn\", \"o1h2\", \"ohab5\", \"oi2\", \"oic3es\", \"oi3der\", \"oiff4\", \"oig4\",\
\"oi5let\", \"o3ing\", \"oint5er\", \"o5ism\", \"oi5son\", \"oist5en\", \"oi3ter\",\
\"o5j\", \"2ok\", \"o3ken\", \"ok5ie\", \"o1la\", \"o4lan\", \"olass4\", \"ol2d\",\
\"old1e\", \"ol3er\", \"o3lesc\", \"o3let\", \"ol4fi\", \"ol2i\", \"o3lia\", \"o3lice\",\
\"ol5id.\", \"o3li4f\", \"o5lil\", \"ol3ing\", \"o5lio\", \"o5lis.\", \"ol3ish\",\
\"o5lite\", \"o5litio\", \"o5liv\", \"olli4e\", \"ol5ogiz\", \"olo4r\", \"ol5pl\",\
\"ol2t\", \"ol3ub\", \"ol3ume\", \"ol3un\", \"o5lus\", \"ol2v\", \"o2ly\", \"om5ah\",\
\"oma5l\", \"om5atiz\", \"om2be\", \"om4bl\", \"o2me\", \"om3ena\", \"om5erse\",\
\"o4met\", \"om5etry\", \"o3mia\", \"om3ic.\", \"om3ica\", \"o5mid\", \"om1in\",\
\"o5mini\", \"5ommend\", \"omo4ge\", \"o4mon\", \"om3pi\", \"ompro5\", \"o2n\",\
\"on1a\", \"on4ac\", \"o3nan\", \"on1c\", \"3oncil\", \"2ond\", \"on5do\", \"o3nen\",\
\"on5est\", \"on4gu\", \"on1ic\", \"o3nio\", \"on1is\", \"o5niu\", \"on3key\",\
\"on4odi\", \"on3omy\", \"on3s\", \"onspi4\", \"onspir5a\", \"onsu4\", \"onten4\",\
\"on3t4i\", \"ontif5\", \"on5um\", \"onva5\", \"oo2\", \"ood5e\", \"ood5i\", \"oo4k\",\
\"oop3i\", \"o3ord\", \"oost5\", \"o2pa\", \"ope5d\", \"op1er\", \"3opera\",\
\"4operag\", \"2oph\", \"o5phan\", \"o5pher\", \"op3ing\", \"o3pit\", \"o5pon\",\
\"o4posi\", \"o1pr\", \"op1u\", \"opy5\", \"o1q\", \"o1ra\", \"o5ra.\", \"o4r3ag\",\
\"or5aliz\", \"or5ange\", \"ore5a\", \"o5real\", \"or3ei\", \"ore5sh\", \"or5est.\",\
\"orew4\", \"or4gu\", \"4o5ria\", \"or3ica\", \"o5ril\", \"or1in\", \"o1rio\",\
\"or3ity\", \"o3riu\", \"or2mi\", \"orn2e\", \"o5rof\", \"or3oug\", \"or5pe\",\
\"3orrh\", \"or4se\", \"ors5en\", \"orst4\", \"or3thi\", \"or3thy\", \"or4ty\",\
\"o5rum\", \"o1ry\", \"os3al\", \"os2c\", \"os4ce\", \"o3scop\", \"4oscopi\", \"o5scr\",\
\"os4i4e\", \"os5itiv\", \"os3ito\", \"os3ity\", \"osi4u\", \"os4l\", \"o2so\",\
\"os4pa\", \"os4po\", \"os2ta\", \"o5stati\", \"os5til\", \"os5tit\", \"o4tan\",\
\"otele4g\", \"ot3er.\", \"ot5ers\", \"o4tes\", \"4oth\", \"oth5esi\", \"oth3i4\",\
\"ot3ic.\", \"ot5ica\", \"o3tice\", \"o3tif\", \"o3tis\", \"oto5s\", \"ou2\", \"ou3bl\",\
\"ouch5i\", \"ou5et\", \"ou4l\", \"ounc5er\", \"oun2d\", \"ou5v\", \"ov4en\",\
\"over4ne\", \"over3s\", \"ov4ert\", \"o3vis\", \"oviti4\", \"o5v4ol\", \"ow3der\",\
\"ow3el\", \"ow5est\", \"ow1i\", \"own5i\", \"o4wo\", \"oy1a\", \"1pa\", \"pa4ca\",\
\"pa4ce\", \"pac4t\", \"p4ad\", \"5pagan\", \"p3agat\", \"p4ai\", \"pain4\", \"p4al\",\
\"pan4a\", \"pan3el\", \"pan4ty\", \"pa3ny\", \"pa1p\", \"pa4pu\", \"para5bl\",\
\"par5age\", \"par5di\", \"3pare\", \"par5el\", \"p4a4ri\", \"par4is\", \"pa2te\",\
\"pa5ter\", \"5pathic\", \"pa5thy\", \"pa4tric\", \"pav4\", \"3pay\", \"4p1b\", \"pd4\",\
\"4pe.\", \"3pe4a\", \"pear4l\", \"pe2c\", \"2p2ed\", \"3pede\", \"3pedi\", \"pedia4\",\
\"ped4ic\", \"p4ee\", \"pee4d\", \"pek4\", \"pe4la\", \"peli4e\", \"pe4nan\", \"p4enc\",\
\"pen4th\", \"pe5on\", \"p4era.\", \"pera5bl\", \"p4erag\", \"p4eri\", \"peri5st\",\
\"per4mal\", \"perme5\", \"p4ern\", \"per3o\", \"per3ti\", \"pe5ru\", \"per1v\",\
\"pe2t\", \"pe5ten\", \"pe5tiz\", \"4pf\", \"4pg\", \"4ph.\", \"phar5i\", \"phe3no\",\
\"ph4er\", \"ph4es.\", \"ph1ic\", \"5phie\", \"ph5ing\", \"5phisti\", \"3phiz\",\
\"ph2l\", \"3phob\", \"3phone\", \"5phoni\", \"pho4r\", \"4phs\", \"ph3t\", \"5phu\",\
\"1phy\", \"pi3a\", \"pian4\", \"pi4cie\", \"pi4cy\", \"p4id\", \"p5ida\", \"pi3de\",\
\"5pidi\", \"3piec\", \"pi3en\", \"pi4grap\", \"pi3lo\", \"pi2n\", \"p4in.\", \"pind4\",\
\"p4ino\", \"3pi1o\", \"pion4\", \"p3ith\", \"pi5tha\", \"pi2tu\", \"2p3k2\", \"1p2l2\",\
\"3plan\", \"plas5t\", \"pli3a\", \"pli5er\", \"4plig\", \"pli4n\", \"ploi4\",\
\"plu4m\", \"plum4b\", \"4p1m\", \"2p3n\", \"po4c\", \"5pod.\", \"po5em\", \"po3et5\",\
\"5po4g\", \"poin2\", \"5point\", \"poly5t\", \"po4ni\", \"po4p\", \"1p4or\", \"po4ry\",\
\"1pos\", \"pos1s\", \"p4ot\", \"po4ta\", \"5poun\", \"4p1p\", \"ppa5ra\", \"p2pe\",\
\"p4ped\", \"p5pel\", \"p3pen\", \"p3per\", \"p3pet\", \"ppo5site\", \"pr2\",\
\"pray4e\", \"5preci\", \"pre5co\", \"pre3em\", \"pref5ac\", \"pre4la\", \"pre3r\",\
\"p3rese\", \"3press\", \"pre5ten\", \"pre3v\", \"5pri4e\", \"prin4t3\", \"pri4s\",\
\"pris3o\", \"p3roca\", \"prof5it\", \"pro3l\", \"pros3e\", \"pro1t\", \"2p1s2\",\
\"p2se\", \"ps4h\", \"p4sib\", \"2p1t\", \"pt5a4b\", \"p2te\", \"p2th\", \"pti3m\",\
\"ptu4r\", \"p4tw\", \"pub3\", \"pue4\", \"puf4\", \"pul3c\", \"pu4m\", \"pu2n\",\
\"pur4r\", \"5pus\", \"pu2t\", \"5pute\", \"put3er\", \"pu3tr\", \"put4ted\",\
\"put4tin\", \"p3w\", \"qu2\", \"qua5v\", \"2que.\", \"3quer\", \"3quet\", \"2rab\",\
\"ra3bi\", \"rach4e\", \"r5acl\", \"raf5fi\", \"raf4t\", \"r2ai\", \"ra4lo\",\
\"ram3et\", \"r2ami\", \"rane5o\", \"ran4ge\", \"r4ani\", \"ra5no\", \"rap3er\",\
\"3raphy\", \"rar5c\", \"rare4\", \"rar5ef\", \"4raril\", \"r2as\", \"ration4\",\
\"rau4t\", \"ra5vai\", \"rav3el\", \"ra5zie\", \"r1b\", \"r4bab\", \"r4bag\", \"rbi2\",\
\"rbi4f\", \"r2bin\", \"r5bine\", \"rb5ing.\", \"rb4o\", \"r1c\", \"r2ce\", \"rcen4\",\
\"r3cha\", \"rch4er\", \"r4ci4b\", \"rc4it\", \"rcum3\", \"r4dal\", \"rd2i\", \"rdi4a\",\
\"rdi4er\", \"rdin4\", \"rd3ing\", \"2re.\", \"re1al\", \"re3an\", \"re5arr\",\
\"5reav\", \"re4aw\", \"r5ebrat\", \"rec5oll\", \"rec5ompe\", \"re4cre\", \"2r2ed\",\
\"re1de\", \"re3dis\", \"red5it\", \"re4fac\", \"re2fe\", \"re5fer.\", \"re3fi\",\
\"re4fy\", \"reg3is\", \"re5it\", \"re1li\", \"re5lu\", \"r4en4ta\", \"ren4te\",\
\"re1o\", \"re5pin\", \"re4posi\", \"re1pu\", \"r1er4\", \"r4eri\", \"rero4\",\
\"re5ru\", \"r4es.\", \"re4spi\", \"ress5ib\", \"res2t\", \"re5stal\", \"re3str\",\
\"re4ter\", \"re4ti4z\", \"re3tri\", \"reu2\", \"re5uti\", \"rev2\", \"re4val\",\
\"rev3el\", \"r5ev5er.\", \"re5vers\", \"re5vert\", \"re5vil\", \"rev5olu\",\
\"re4wh\", \"r1f\", \"rfu4\", \"r4fy\", \"rg2\", \"rg3er\", \"r3get\", \"r3gic\",\
\"rgi4n\", \"rg3ing\", \"r5gis\", \"r5git\", \"r1gl\", \"rgo4n\", \"r3gu\", \"rh4\",\
\"4rh.\", \"4rhal\", \"ri3a\", \"ria4b\", \"ri4ag\", \"r4ib\", \"rib3a\", \"ric5as\",\
\"r4ice\", \"4rici\", \"5ricid\", \"ri4cie\", \"r4ico\", \"rid5er\", \"ri3enc\",\
\"ri3ent\", \"ri1er\", \"ri5et\", \"rig5an\", \"5rigi\", \"ril3iz\", \"5riman\",\
\"rim5i\", \"3rimo\", \"rim4pe\", \"r2ina\", \"5rina.\", \"rin4d\", \"rin4e\",\
\"rin4g\", \"ri1o\", \"5riph\", \"riph5e\", \"ri2pl\", \"rip5lic\", \"r4iq\", \"r2is\",\
\"r4is.\", \"ris4c\", \"r3ish\", \"ris4p\", \"ri3ta3b\", \"r5ited.\", \"rit5er.\",\
\"rit5ers\", \"rit3ic\", \"ri2tu\", \"rit5ur\", \"riv5el\", \"riv3et\", \"riv3i\",\
\"r3j\", \"r3ket\", \"rk4le\", \"rk4lin\", \"r1l\", \"rle4\", \"r2led\", \"r4lig\",\
\"r4lis\", \"rl5ish\", \"r3lo4\", \"r1m\", \"rma5c\", \"r2me\", \"r3men\", \"rm5ers\",\
\"rm3ing\", \"r4ming.\", \"r4mio\", \"r3mit\", \"r4my\", \"r4nar\", \"r3nel\",\
\"r4ner\", \"r5net\", \"r3ney\", \"r5nic\", \"r1nis4\", \"r3nit\", \"r3niv\", \"rno4\",\
\"r4nou\", \"r3nu\", \"rob3l\", \"r2oc\", \"ro3cr\", \"ro4e\", \"ro1fe\", \"ro5fil\",\
\"rok2\", \"ro5ker\", \"5role.\", \"rom5ete\", \"rom4i\", \"rom4p\", \"ron4al\",\
\"ron4e\", \"ro5n4is\", \"ron4ta\", \"1room\", \"5root\", \"ro3pel\", \"rop3ic\",\
\"ror3i\", \"ro5ro\", \"ros5per\", \"ros4s\", \"ro4the\", \"ro4ty\", \"ro4va\",\
\"rov5el\", \"rox5\", \"r1p\", \"r4pea\", \"r5pent\", \"rp5er.\", \"r3pet\", \"rp4h4\",\
\"rp3ing\", \"r3po\", \"r1r4\", \"rre4c\", \"rre4f\", \"r4reo\", \"rre4st\", \"rri4o\",\
\"rri4v\", \"rron4\", \"rros4\", \"rrys4\", \"4rs2\", \"r1sa\", \"rsa5ti\", \"rs4c\",\
\"r2se\", \"r3sec\", \"rse4cr\", \"rs5er.\", \"rs3es\", \"rse5v2\", \"r1sh\", \"r5sha\",\
\"r1si\", \"r4si4b\", \"rson3\", \"r1sp\", \"r5sw\", \"rtach4\", \"r4tag\", \"r3teb\",\
\"rten4d\", \"rte5o\", \"r1ti\", \"rt5ib\", \"rti4d\", \"r4tier\", \"r3tig\",\
\"rtil3i\", \"rtil4l\", \"r4tily\", \"r4tist\", \"r4tiv\", \"r3tri\", \"rtroph4\",\
\"rt4sh\", \"ru3a\", \"ru3e4l\", \"ru3en\", \"ru4gl\", \"ru3in\", \"rum3pl\", \"ru2n\",\
\"runk5\", \"run4ty\", \"r5usc\", \"ruti5n\", \"rv4e\", \"rvel4i\", \"r3ven\",\
\"rv5er.\", \"r5vest\", \"r3vey\", \"r3vic\", \"rvi4v\", \"r3vo\", \"r1w\", \"ry4c\",\
\"5rynge\", \"ry3t\", \"sa2\", \"2s1ab\", \"5sack\", \"sac3ri\", \"s3act\", \"5sai\",\
\"salar4\", \"sal4m\", \"sa5lo\", \"sal4t\", \"3sanc\", \"san4de\", \"s1ap\", \"sa5ta\",\
\"5sa3tio\", \"sat3u\", \"sau4\", \"sa5vor\", \"5saw\", \"4s5b\", \"scan4t5\",\
\"sca4p\", \"scav5\", \"s4ced\", \"4scei\", \"s4ces\", \"sch2\", \"s4cho\", \"3s4cie\",\
\"5scin4d\", \"scle5\", \"s4cli\", \"scof4\", \"4scopy\", \"scour5a\", \"s1cu\",\
\"4s5d\", \"4se.\", \"se4a\", \"seas4\", \"sea5w\", \"se2c3o\", \"3sect\", \"4s4ed\",\
\"se4d4e\", \"s5edl\", \"se2g\", \"seg3r\", \"5sei\", \"se1le\", \"5self\", \"5selv\",\
\"4seme\", \"se4mol\", \"sen5at\", \"4senc\", \"sen4d\", \"s5ened\", \"sen5g\",\
\"s5enin\", \"4sentd\", \"4sentl\", \"sep3a3\", \"4s1er.\", \"s4erl\", \"ser4o\",\
\"4servo\", \"s1e4s\", \"se5sh\", \"ses5t\", \"5se5um\", \"5sev\", \"sev3en\",\
\"sew4i\", \"5sex\", \"4s3f\", \"2s3g\", \"s2h\", \"2sh.\", \"sh1er\", \"5shev\",\
\"sh1in\", \"sh3io\", \"3ship\", \"shiv5\", \"sho4\", \"sh5old\", \"shon3\", \"shor4\",\
\"short5\", \"4shw\", \"si1b\", \"s5icc\", \"3side.\", \"5sides\", \"5sidi\",\
\"si5diz\", \"4signa\", \"sil4e\", \"4sily\", \"2s1in\", \"s2ina\", \"5sine.\",\
\"s3ing\", \"1sio\", \"5sion\", \"sion5a\", \"si2r\", \"sir5a\", \"1sis\", \"3sitio\",\
\"5siu\", \"1siv\", \"5siz\", \"sk2\", \"4ske\", \"s3ket\", \"sk5ine\", \"sk5ing\",\
\"s1l2\", \"s3lat\", \"s2le\", \"slith5\", \"2s1m\", \"s3ma\", \"small3\", \"sman3\",\
\"smel4\", \"s5men\", \"5smith\", \"smol5d4\", \"s1n4\", \"1so\", \"so4ce\", \"soft3\",\
\"so4lab\", \"sol3d2\", \"so3lic\", \"5solv\", \"3som\", \"3s4on.\", \"sona4\",\
\"son4g\", \"s4op\", \"5sophic\", \"s5ophiz\", \"s5ophy\", \"sor5c\", \"sor5d\",\
\"4sov\", \"so5vi\", \"2spa\", \"5spai\", \"spa4n\", \"spen4d\", \"2s5peo\", \"2sper\",\
\"s2phe\", \"3spher\", \"spho5\", \"spil4\", \"sp5ing\", \"4spio\", \"s4ply\",\
\"s4pon\", \"spor4\", \"4spot\", \"squal4l\", \"s1r\", \"2ss\", \"s1sa\", \"ssas3\",\
\"s2s5c\", \"s3sel\", \"s5seng\", \"s4ses.\", \"s5set\", \"s1si\", \"s4sie\",\
\"ssi4er\", \"ss5ily\", \"s4sl\", \"ss4li\", \"s4sn\", \"sspend4\", \"ss2t\",\
\"ssur5a\", \"ss5w\", \"2st.\", \"s2tag\", \"s2tal\", \"stam4i\", \"5stand\",\
\"s4ta4p\", \"5stat.\", \"s4ted\", \"stern5i\", \"s5tero\", \"ste2w\", \"stew5a\",\
\"s3the\", \"st2i\", \"s4ti.\", \"s5tia\", \"s1tic\", \"5stick\", \"s4tie\", \"s3tif\",\
\"st3ing\", \"5stir\", \"s1tle\", \"5stock\", \"stom3a\", \"5stone\", \"s4top\",\
\"3store\", \"st4r\", \"s4trad\", \"5stratu\", \"s4tray\", \"s4trid\", \"4stry\",\
\"4st3w\", \"s2ty\", \"1su\", \"su1al\", \"su4b3\", \"su2g3\", \"su5is\", \"suit3\",\
\"s4ul\", \"su2m\", \"sum3i\", \"su2n\", \"su2r\", \"4sv\", \"sw2\", \"4swo\", \"s4y\",\
\"4syc\", \"3syl\", \"syn5o\", \"sy5rin\", \"1ta\", \"3ta.\", \"2tab\", \"ta5bles\",\
\"5taboliz\", \"4taci\", \"ta5do\", \"4taf4\", \"tai5lo\", \"ta2l\", \"ta5la\",\
\"tal5en\", \"tal3i\", \"4talk\", \"tal4lis\", \"ta5log\", \"ta5mo\", \"tan4de\",\
\"tanta3\", \"ta5per\", \"ta5pl\", \"tar4a\", \"4tarc\", \"4tare\", \"ta3riz\",\
\"tas4e\", \"ta5sy\", \"4tatic\", \"ta4tur\", \"taun4\", \"tav4\", \"2taw\", \"tax4is\",\
\"2t1b\", \"4tc\", \"t4ch\", \"tch5et\", \"4t1d\", \"4te.\", \"tead4i\", \"4teat\",\
\"tece4\", \"5tect\", \"2t1ed\", \"te5di\", \"1tee\", \"teg4\", \"te5ger\", \"te5gi\",\
\"3tel.\", \"teli4\", \"5tels\", \"te2ma2\", \"tem3at\", \"3tenan\", \"3tenc\",\
\"3tend\", \"4tenes\", \"1tent\", \"ten4tag\", \"1teo\", \"te4p\", \"te5pe\", \"ter3c\",\
\"5ter3d\", \"1teri\", \"ter5ies\", \"ter3is\", \"teri5za\", \"5ternit\", \"ter5v\",\
\"4tes.\", \"4tess\", \"t3ess.\", \"teth5e\", \"3teu\", \"3tex\", \"4tey\", \"2t1f\",\
\"4t1g\", \"2th.\", \"than4\", \"th2e\", \"4thea\", \"th3eas\", \"the5at\", \"the3is\",\
\"3thet\", \"th5ic.\", \"th5ica\", \"4thil\", \"5think\", \"4thl\", \"th5ode\",\
\"5thodic\", \"4thoo\", \"thor5it\", \"tho5riz\", \"2ths\", \"1tia\", \"ti4ab\",\
\"ti4ato\", \"2ti2b\", \"4tick\", \"t4ico\", \"t4ic1u\", \"5tidi\", \"3tien\", \"tif2\",\
\"ti5fy\", \"2tig\", \"5tigu\", \"till5in\", \"1tim\", \"4timp\", \"tim5ul\", \"2t1in\",\
\"t2ina\", \"3tine.\", \"3tini\", \"1tio\", \"ti5oc\", \"tion5ee\", \"5tiq\", \"ti3sa\",\
\"3tise\", \"tis4m\", \"ti5so\", \"tis4p\", \"5tistica\", \"ti3tl\", \"ti4u\", \"1tiv\",\
\"tiv4a\", \"1tiz\", \"ti3za\", \"ti3zen\", \"2tl\", \"t5la\", \"tlan4\", \"3tle.\",\
\"3tled\", \"3tles.\", \"t5let.\", \"t5lo\", \"4t1m\", \"tme4\", \"2t1n2\", \"1to\",\
\"to3b\", \"to5crat\", \"4todo\", \"2tof\", \"to2gr\", \"to5ic\", \"to2ma\", \"tom4b\",\
\"to3my\", \"ton4ali\", \"to3nat\", \"4tono\", \"4tony\", \"to2ra\", \"to3rie\",\
\"tor5iz\", \"tos2\", \"5tour\", \"4tout\", \"to3war\", \"4t1p\", \"1tra\", \"tra3b\",\
\"tra5ch\", \"traci4\", \"trac4it\", \"trac4te\", \"tras4\", \"tra5ven\",\
\"trav5es5\", \"tre5f\", \"tre4m\", \"trem5i\", \"5tria\", \"tri5ces\", \"5tricia\",\
\"4trics\", \"2trim\", \"tri4v\", \"tro5mi\", \"tron5i\", \"4trony\", \"tro5phe\",\
\"tro3sp\", \"tro3v\", \"tru5i\", \"trus4\", \"4t1s2\", \"t4sc\", \"tsh4\", \"t4sw\",\
\"4t3t2\", \"t4tes\", \"t5to\", \"ttu4\", \"1tu\", \"tu1a\", \"tu3ar\", \"tu4bi\",\
\"tud2\", \"4tue\", \"4tuf4\", \"5tu3i\", \"3tum\", \"tu4nis\", \"2t3up.\", \"3ture\",\
\"5turi\", \"tur3is\", \"tur5o\", \"tu5ry\", \"3tus\", \"4tv\", \"tw4\", \"4t1wa\",\
\"twis4\", \"4two\", \"1ty\", \"4tya\", \"2tyl\", \"type3\", \"ty5ph\", \"4tz\", \"tz4e\",\
\"4uab\", \"uac4\", \"ua5na\", \"uan4i\", \"uar5ant\", \"uar2d\", \"uar3i\", \"uar3t\",\
\"u1at\", \"uav4\", \"ub4e\", \"u4bel\", \"u3ber\", \"u4bero\", \"u1b4i\", \"u4b5ing\",\
\"u3ble.\", \"u3ca\", \"uci4b\", \"uc4it\", \"ucle3\", \"u3cr\", \"u3cu\", \"u4cy\",\
\"ud5d\", \"ud3er\", \"ud5est\", \"udev4\", \"u1dic\", \"ud3ied\", \"ud3ies\",\
\"ud5is\", \"u5dit\", \"u4don\", \"ud4si\", \"u4du\", \"u4ene\", \"uens4\", \"uen4te\",\
\"uer4il\", \"3ufa\", \"u3fl\", \"ugh3en\", \"ug5in\", \"2ui2\", \"uil5iz\", \"ui4n\",\
\"u1ing\", \"uir4m\", \"uita4\", \"uiv3\", \"uiv4er.\", \"u5j\", \"4uk\", \"u1la\",\
\"ula5b\", \"u5lati\", \"ulch4\", \"5ulche\", \"ul3der\", \"ul4e\", \"u1len\",\
\"ul4gi\", \"ul2i\", \"u5lia\", \"ul3ing\", \"ul5ish\", \"ul4lar\", \"ul4li4b\",\
\"ul4lis\", \"4ul3m\", \"u1l4o\", \"4uls\", \"uls5es\", \"ul1ti\", \"ultra3\",\
\"4ultu\", \"u3lu\", \"ul5ul\", \"ul5v\", \"um5ab\", \"um4bi\", \"um4bly\", \"u1mi\",\
\"u4m3ing\", \"umor5o\", \"um2p\", \"unat4\", \"u2ne\", \"un4er\", \"u1ni\", \"un4im\",\
\"u2nin\", \"un5ish\", \"uni3v\", \"un3s4\", \"un4sw\", \"unt3ab\", \"un4ter.\",\
\"un4tes\", \"unu4\", \"un5y\", \"un5z\", \"u4ors\", \"u5os\", \"u1ou\", \"u1pe\",\
\"uper5s\", \"u5pia\", \"up3ing\", \"u3pl\", \"up3p\", \"upport5\", \"upt5ib\",\
\"uptu4\", \"u1ra\", \"4ura.\", \"u4rag\", \"u4ras\", \"ur4be\", \"urc4\", \"ur1d\",\
\"ure5at\", \"ur4fer\", \"ur4fr\", \"u3rif\", \"uri4fic\", \"ur1in\", \"u3rio\",\
\"u1rit\", \"ur3iz\", \"ur2l\", \"url5ing.\", \"ur4no\", \"uros4\", \"ur4pe\",\
\"ur4pi\", \"urs5er\", \"ur5tes\", \"ur3the\", \"urti4\", \"ur4tie\", \"u3ru\", \"2us\",\
\"u5sad\", \"u5san\", \"us4ap\", \"usc2\", \"us3ci\", \"use5a\", \"u5sia\", \"u3sic\",\
\"us4lin\", \"us1p\", \"us5sl\", \"us5tere\", \"us1tr\", \"u2su\", \"usur4\", \"uta4b\",\
\"u3tat\", \"4ute.\", \"4utel\", \"4uten\", \"uten4i\", \"4u1t2i\", \"uti5liz\",\
\"u3tine\", \"ut3ing\", \"ution5a\", \"u4tis\", \"5u5tiz\", \"u4t1l\", \"ut5of\",\
\"uto5g\", \"uto5matic\", \"u5ton\", \"u4tou\", \"uts4\", \"u3u\", \"uu4m\", \"u1v2\",\
\"uxu3\", \"uz4e\", \"1va\", \"5va.\", \"2v1a4b\", \"vac5il\", \"vac3u\", \"vag4\",\
\"va4ge\", \"va5lie\", \"val5o\", \"val1u\", \"va5mo\", \"va5niz\", \"va5pi\",\
\"var5ied\", \"3vat\", \"4ve.\", \"4ved\", \"veg3\", \"v3el.\", \"vel3li\", \"ve4lo\",\
\"v4ely\", \"ven3om\", \"v5enue\", \"v4erd\", \"5vere.\", \"v4erel\", \"v3eren\",\
\"ver5enc\", \"v4eres\", \"ver3ie\", \"vermi4n\", \"3verse\", \"ver3th\", \"v4e2s\",\
\"4ves.\", \"ves4te\", \"ve4te\", \"vet3er\", \"ve4ty\", \"vi5ali\", \"5vian\",\
\"5vide.\", \"5vided\", \"4v3iden\", \"5vides\", \"5vidi\", \"v3if\", \"vi5gn\",\
\"vik4\", \"2vil\", \"5vilit\", \"v3i3liz\", \"v1in\", \"4vi4na\", \"v2inc\", \"vin5d\",\
\"4ving\", \"vio3l\", \"v3io4r\", \"vi1ou\", \"vi4p\", \"vi5ro\", \"vis3it\", \"vi3so\",\
\"vi3su\", \"4viti\", \"vit3r\", \"4vity\", \"3viv\", \"5vo.\", \"voi4\", \"3vok\",\
\"vo4la\", \"v5ole\", \"5volt\", \"3volv\", \"vom5i\", \"vor5ab\", \"vori4\", \"vo4ry\",\
\"vo4ta\", \"4votee\", \"4vv4\", \"v4y\", \"w5abl\", \"2wac\", \"wa5ger\", \"wag5o\",\
\"wait5\", \"w5al.\", \"wam4\", \"war4t\", \"was4t\", \"wa1te\", \"wa5ver\", \"w1b\",\
\"wea5rie\", \"weath3\", \"wed4n\", \"weet3\", \"wee5v\", \"wel4l\", \"w1er\",\
\"west3\", \"w3ev\", \"whi4\", \"wi2\", \"wil2\", \"will5in\", \"win4de\", \"win4g\",\
\"wir4\", \"3wise\", \"with3\", \"wiz5\", \"w4k\", \"wl4es\", \"wl3in\", \"w4no\",\
\"1wo2\", \"wom1\", \"wo5ven\", \"w5p\", \"wra4\", \"wri4\", \"writa4\", \"w3sh\",\
\"ws4l\", \"ws4pe\", \"w5s4t\", \"4wt\", \"wy4\", \"x1a\", \"xac5e\", \"x4ago\", \"xam3\",\
\"x4ap\", \"xas5\", \"x3c2\", \"x1e\", \"xe4cuto\", \"x2ed\", \"xer4i\", \"xe5ro\",\
\"x1h\", \"xhi2\", \"xhil5\", \"xhu4\", \"x3i\", \"xi5a\", \"xi5c\", \"xi5di\", \"x4ime\",\
\"xi5miz\", \"x3o\", \"x4ob\", \"x3p\", \"xpan4d\", \"xpecto5\", \"xpe3d\", \"x1t2\",\
\"x3ti\", \"x1u\", \"xu3a\", \"xx4\", \"y5ac\", \"3yar4\", \"y5at\", \"y1b\", \"y1c\",\
\"y2ce\", \"yc5er\", \"y3ch\", \"ych4e\", \"ycom4\", \"ycot4\", \"y1d\", \"y5ee\",\
\"y1er\", \"y4erf\", \"yes4\", \"ye4t\", \"y5gi\", \"4y3h\", \"y1i\", \"y3la\",\
\"ylla5bl\", \"y3lo\", \"y5lu\", \"ymbol5\", \"yme4\", \"ympa3\", \"yn3chr\", \"yn5d\",\
\"yn5g\", \"yn5ic\", \"5ynx\", \"y1o4\", \"yo5d\", \"y4o5g\", \"yom4\", \"yo5net\",\
\"y4ons\", \"y4os\", \"y4ped\", \"yper5\", \"yp3i\", \"y3po\", \"y4poc\", \"yp2ta\",\
\"y5pu\", \"yra5m\", \"yr5ia\", \"y3ro\", \"yr4r\", \"ys4c\", \"y3s2e\", \"ys3ica\",\
\"ys3io\", \"3ysis\", \"y4so\", \"yss4\", \"ys1t\", \"ys3ta\", \"ysur4\", \"y3thin\",\
\"yt3ic\", \"y1w\", \"za1\", \"z5a2b\", \"zar2\", \"4zb\", \"2ze\", \"ze4n\", \"ze4p\",\
\"z1er\", \"ze3ro\", \"zet4\", \"2z1i\", \"z4il\", \"z4is\", \"5zl\", \"4zm\", \"1zo\",\
\"zo4m\", \"zo5ol\", \"zte4\", \"4z1z2\", \"z4zy\"};\
\
SILE.hyphenator.languages[\"en\"].exceptions = {\"as-so-ciate\", \"as-so-ciates\",\
\"dec-li-na-tion\", \"oblig-a-tory\", \"phil-an-thropic\", \"present\",\
\"presents\", \"project\", \"projects\", \"reci-procity\", \"re-cog-ni-zance\",\
\"ref-or-ma-tion\", \"ret-ri-bu-tion\", \"ta-ble\"};"
, '@'..".\\languages\\en.lua" ) )

package.preload[ "packages\\unichar" ] = assert( (loadstring or load)(
"local function utf8encode(code)\
  if code < 0 then\
    error('Code point must not be negative.')\
  elseif code <= 0x7f then\
    return string.char(code)\
  elseif code <= 0x7ff then\
    local c1 = code / 64 + 192\
    local c2 = code % 64 + 128\
    return string.char(c1, c2)\
  elseif code <= 0xffff then\
    local c1 = code / 4096 + 224\
    local c2 = code % 4096 / 64 + 128\
    local c3 = code % 64 + 128\
    return string.char(c1, c2, c3)\
  elseif code <= 0x10ffff then\
    local c1 = code / 262144 + 240\
    local c2 = code % 262144 / 4096 + 128\
    local c3 = code % 4096 / 64 + 128\
    local c4 = code % 64 + 128\
    return string.char(c1, c2, c3, c4)\
  end\
  return ''\
end\
\
SILE.registerCommand(\"unichar\", function(options, content)\
  local cp = content[1]\
  if type(cp) ~= \"string\" then SU.error(\"Bad argument to \\\\unicode\") end\
  hex = (cp:match(\"[Uu]%+(%x+)\") or cp:match(\"0[xX](%x+)\"))\
  if hex then\
    cp = tonumber(\"0x\"..hex)\
  elseif tonumber(cp) then \
    cp = tonumber(cp)\
  end\
  SILE.typesetter:typeset(utf8encode(cp))\
end)\
"
, '@'..".\\packages\\unichar.lua" ) )

package.preload[ "packages\\twoside" ] = assert( (loadstring or load)(
"local tp = \"odd\"\
local mirrorMaster = function(class, existing, new)\
  -- Frames in one master can't \"see\" frames in another, so we have to get creative\
  -- XXX This knows altogether too much about the implementation of masters\
  if not SILE.scratch.masters[new] then SILE.scratch.masters[new] = {frames={}} end\
  if not SILE.scratch.masters[existing] then\
    SU.error(\"Can't find master \"..existing)\
  end\
  for name,frame in pairs(SILE.scratch.masters[existing].frames) do\
    -- This seems to work although it is almost certainly too much magic\
    SILE.scratch.masters[new].frames[name] = frame {\
      left = function(frame)\
        frame:solve()\
        return SILE.frames.page:width() - frame.variables.right.value\
      end,\
      right = function(frame)\
        frame:solve()\
        return SILE.frames.page:width() - frame.variables.left.value\
      end\
    }\
\
    if frame == SILE.scratch.masters[existing].firstContentFrame then\
      SILE.scratch.masters[new].firstContentFrame = SILE.scratch.masters[new].frames[name]\
    end\
  end\
end\
\
return {\
  init = function (class, args)\
    class.oddPageMaster = args.oddPageMaster\
    class.evenPageMaster = args.evenPageMaster\
  end,\
  exports = {\
    oddPage = function (self) return tp == \"odd\" end,\
    mirrorMaster = mirrorMaster,\
    switchPage = function (self)\
      if self:oddPage() then\
        tp = \"even\"\
        self.switchMaster(self.evenPageMaster)\
      else\
        tp = \"odd\"\
        self.switchMaster(self.oddPageMaster)\
      end\
    end\
  }\
}"
, '@'..".\\packages\\twoside.lua" ) )

package.preload[ "packages\\xmltricks" ] = assert( (loadstring or load)(
"SILE.registerCommand(\"xmltricks:ignore\", function (options, content)\
  for token in SU.gtoke(content[1]) do\
    if token.string then SILE.call(\"define\", { command = token.string}, function() end) end\
  end\
end)\
\
SILE.registerCommand(\"xmltricks:passthru\", function (options, content)\
  for token in SU.gtoke(content[1]) do\
    if token.string then SILE.registerCommand(token.string, function(o,c) SILE.process(c) end) end\
  end\
end)\
"
, '@'..".\\packages\\xmltricks.lua" ) )

package.preload[ "packages\\simpletable" ] = assert( (loadstring or load)(
"-- A very simple table formatting class\
\
-- Calling conventions:\
-- myClass:loadPackage(\"simpletable\", {\
--  tableTag = \"a\",\
--  trTag = \"b\",\
--  tdTag = \"c\"\
-- })\
\
-- Defines commands \\a, \\b and \\c equivalent to HTML\
-- <table>, <tr> and <td> tags.\
\
-- Todo: Set a maximum width for the whole table and ensure\
-- vbox width is no greater than this. In fact, we should use\
-- the complete CSS2.1 two-pass table layout algorithm.\
\
SILE.scratch.simpletable = { tables = {} }\
return {\
  exports = {},\
  init = function (class, args)\
    local tableTag = SU.required(args,\"tableTag\",\"setting up table class\")\
    local trTag = SU.required(args,\"trTag\",\"setting up table class\")\
    local tdTag = SU.required(args,\"tdTag\",\"setting up table class\")\
\
    SILE.registerCommand(trTag, function(options,content)\
      local tbl = SILE.scratch.simpletable.tables[#(SILE.scratch.simpletable.tables)]\
      tbl[#tbl+1] = {}\
      SILE.process(content)\
    end)\
    SILE.registerCommand(tdTag, function(options,content)\
      local tbl = SILE.scratch.simpletable.tables[#(SILE.scratch.simpletable.tables)]\
      local row = tbl[#tbl]\
      row[#row+1] = {\
        content = content,\
        width = (SILE.Commands[\"hbox\"]({},content)).width\
      }\
      SILE.typesetter.state.nodes[#(SILE.typesetter.state.nodes)] = nil\
    end)\
\
SILE.registerCommand(tableTag, function(options, content)\
  SILE.scratch.simpletable.tables[#(SILE.scratch.simpletable.tables)+1] = {}\
  local tbl = SILE.scratch.simpletable.tables[#(SILE.scratch.simpletable.tables)]\
  SILE.settings.temporarily(function ()\
    SILE.settings.set(\"document.parindent\", SILE.nodefactory.newGlue(\"0pt\"))\
    SILE.settings.set(\"current.parindent\", SILE.nodefactory.newGlue(\"0pt\"))\
    SILE.process(content)  \
  end)\
  SILE.typesetter:leaveHmode()\
  -- Look down columns and find largest thing per column\
  local colwidths = {}\
  local col = 1\
  local stuffInThisColumn \
  repeat\
    stuffInThisColumn = false\
    for row = 1,#tbl do \
      cell = tbl[row][col]\
      if cell then\
        stuffInThisColumn = true\
        if not(colwidths[col]) or cell.width > colwidths[col] then\
          colwidths[col] = cell.width\
        end\
      end\
    end\
    col = col + 1\
  until not stuffInThisColumn\
  \
\
  -- Now set each row at the given column width\
  for row = 1,#tbl do\
    for col = 1,#(tbl[row]) do\
      cell = tbl[row][col]\
      local box = SILE.Commands[\"vbox\"]({width = colwidths[col]}, cell.content)\
      box = box.nodes[1]\
      box.outputYourself = function(self,typesetter, line)\
       for i, n in ipairs(self.nodes) do \
          n:outputYourself(typesetter, self) \
        end\
      end\
      table.insert(SILE.typesetter.state.nodes, box) -- a vbox on the hbox list!\
    end\
    SILE.typesetter:leaveHmode()\
    SILE.call(\"smallskip\")\
  end\
  SILE.typesetter:leaveHmode()\
  SILE.scratch.simpletable.tables[#(SILE.scratch.simpletable.tables)] = nil\
end)\
\
end}"
, '@'..".\\packages\\simpletable.lua" ) )

package.preload[ "packages\\rotate" ] = assert( (loadstring or load)(
"if SILE.outputter ~= SILE.outputters.libtexpdf then\
  SU.error(\"rotating package requires libtexpdf backend\")\
end\
local pdf = require(\"justenoughlibtexpdf\")\
\
local enter = function(self) \
  if not self.rotate then return end \
  local x = -math.rad(self.rotate)\
  -- Keep center point the same\
  pdf:gsave()\
  local cx = (self:left() + self:width() / 2) \
  local cy = -((self:top() + self:bottom()) / 2) -- Trial and error, just like everything else.\
\
  pdf.setmatrix(1,0,0,1,cx,cy)\
  pdf.setmatrix(math.cos(x), math.sin(x), -math.sin(x), math.cos(x), 0, 0)\
  pdf.setmatrix(1,0,0,1,-cx,-cy)\
end\
\
local leave =   function(self)\
  if not self.rotate then return end\
  pdf:grestore()\
end\
\
if SILE.typesetter.frame then \
  enter(SILE.typesetter.frame)\
  table.insert(SILE.typesetter.frame.leaveHooks, leave)\
end\
\
table.insert(SILE.framePrototype.enterHooks, enter)\
table.insert(SILE.framePrototype.leaveHooks, leave)\
\
-- What is the width, depth and height of a rectangle width w and height h rotated by angle theta?\
-- rect1 = Rectangle[{0, 0}, {w, h}]\
-- {{xmin, xmax}, {ymin, ymax}} = Refine[RegionBounds[TransformedRegion[rect1, \
--                                                     RotationTransform[theta, {w/2,h/2}]]],\
--                                      w > 0 && h > 0 && theta > 0 && theta < 2 Pi ]\
-- PiecewiseExpand[xmax - xmin]\
    -- \\[Piecewise]  -w Cos[theta]-h Sin[theta]  Sin[theta]<=0&&Cos[theta]<=0\
    --                w Cos[theta]-h Sin[theta]  Sin[theta]<=0&&Cos[theta]>0\
    --               -w Cos[theta]+h Sin[theta]  Sin[theta]>0&&Cos[theta]<=0\
    --                w Cos[theta]+h Sin[theta]  True\
\
local outputRotatedHbox = function (self, typesetter,line)\
  local origbox = self.value.orig\
  local x = self.value.theta\
  -- Find origin of untransformed hbox\
  local save = typesetter.frame.state.cursorX\
  typesetter.frame.state.cursorX = typesetter.frame.state.cursorX - (origbox.width.length-self.width)/2\
  \
  local horigin = typesetter.frame.state.cursorX + origbox.width.length / 2\
  local vorigin = -(typesetter.frame.state.cursorY - (origbox.height) /2)\
  pdf:gsave()\
  pdf.setmatrix(1,0,0,1,horigin,vorigin)\
  pdf.setmatrix(math.cos(x), math.sin(x), -math.sin(x), math.cos(x), 0, 0)\
  pdf.setmatrix(1,0,0,1,-horigin,-vorigin)\
  origbox:outputYourself(typesetter,line)\
  pdf:grestore()\
  typesetter.frame.state.cursorX = save\
  typesetter.frame:moveX(self.width)\
end\
\
SILE.registerCommand(\"rotate\", function(options, content)\
  local theta = -math.rad(SU.required(options, \"angle\", \"rotate command\"))\
  local origbox = SILE.Commands[\"hbox\"]({}, content)\
  SILE.typesetter.state.nodes[#SILE.typesetter.state.nodes] = nil\
  local h = (origbox.height + origbox.depth)\
  local w = origbox.width.length\
  local st = math.sin(theta)\
  local ct = math.cos(theta)\
  local height, width, depth\
  if st <= 0 and ct <= 0    then \
    width  = -w * ct - h * st\
    height = 0.5*(h-h*ct-w*st)\
    depth  = 0.5*(h+h*ct+w*st)\
  elseif st <=0 and ct > 0  then \
    width  =  w * ct - h * st\
    height = 0.5*(h+h*ct-w*st)\
    depth  = 0.5*(h-h*ct+w*st)\
  elseif st > 0 and ct <= 0 then\
    width  = -w * ct + h * st\
    height = 0.5*(h-h*ct+w*st)\
    depth  = 0.5*(h+h*ct-w*st)\
  else\
    width  =  w * ct + h * st\
    height = 0.5*(h+h*ct+w*st)\
    depth  = 0.5*(h-h*ct-w*st)\
  end\
  depth = -depth\
  if depth < 0 then depth = 0 end\
  SILE.typesetter:pushHbox({ \
    value = { orig = origbox, theta = theta},\
    height = height,\
    width = width,\
    depth = depth,\
    outputYourself= outputRotatedHbox\
  });\
end)"
, '@'..".\\packages\\rotate.lua" ) )

package.preload[ "core\\settings" ] = assert( (loadstring or load)(
"local _type = function(v)\
  if type(v) == \"number\" then return math.floor(v)==v and \"integer\" or \"number\" end\
  if not(type(v) == \"table\") then return type(v) end\
  return v:prototype()\
end\
\
SILE.settings = {\
  state = {},\
  declarations = {},\
  stateQueue = {},\
  defaults = {},\
  pushState = function()\
    table.insert(SILE.settings.stateQueue, SILE.settings.state);\
    SILE.settings.state = std.table.clone(SILE.settings.state);\
  end,\
  popState = function()\
    SILE.settings.state = table.remove(SILE.settings.stateQueue);  \
  end,\
  declare = function(t)\
    SILE.settings.declarations[t.name] = t\
    SILE.settings.set(t.name, t.default)\
    SILE.settings.defaults[t.name] = t.default\
  end,\
  reset = function(t)\
    for k,_ in pairs(SILE.settings.state) do\
      SILE.settings.set(k,SILE.settings.defaults[k])\
    end\
  end,\
  get = function(name) \
    if not SILE.settings.declarations[name] then\
      SU.error(\"Undefined setting '\"..name..\"'\")\
    end  \
    return SILE.settings.state[name] \
  end,\
  set = function(name, value)\
    if not SILE.settings.declarations[name] then\
      SU.error(\"Undefined setting '\"..name..\"'\")\
    end\
    local t = _type(value)\
    local wantedType = SILE.settings.declarations[name].type\
    if not (string.find(wantedType, t) == 1 or string.find(wantedType, \"or \"..t) ) then\
      SU.error(\"Setting \"..name..\" must be of type \"..wantedType..\", not \"..t..\" \"..value..\"\\n\"..name..\": \"..SILE.settings.declarations[name].help)\
    end\
    SILE.settings.state[name] = value    \
  end,\
  temporarily = function(f)\
    SILE.settings.pushState()\
    f()\
    SILE.settings.popState()\
  end,\
  wrap = function() -- Returns a closure which applies the current state, later\
    local clSettings = std.table.clone(SILE.settings.state)\
    return function(f)\
      table.insert(SILE.settings.stateQueue, SILE.settings.state)\
      SILE.settings.state = clSettings\
      SILE.process(f)\
      SILE.settings.popState()\
    end\
  end,\
\
}\
\
SILE.settings.declare({\
  name = \"document.parindent\",\
  type = \"Glue\",\
  default = SILE.nodefactory.newGlue(\"20pt\"),\
  help = \"Glue at start of paragraph\"\
})\
\
SILE.settings.declare({\
  name = \"document.baselineskip\",\
  type = \"VGlue\",\
  default = SILE.nodefactory.newVglue(\"13pt plus 1pt\"),\
  help = \"Leading\"\
})\
\
SILE.settings.declare({\
  name = \"document.lineskip\",\
  type = \"VGlue\",\
  default = SILE.nodefactory.newVglue(\"1pt\"),\
  help = \"Leading\"\
})\
\
SILE.settings.declare({\
  name = \"document.parskip\",\
  type = \"VGlue\",\
  default = SILE.nodefactory.newVglue(\"5pt plus 1pt\"),\
  help = \"Leading\"\
})\
\
SILE.settings.declare({\
  name = \"document.spaceskip\",\
  type = \"Length or nil\",\
  default = nil,\
  help = \"The length of a space (if nil, then measured from the font)\"\
})\
\
SILE.settings.declare({\
  name = \"document.rskip\",\
  type = \"Glue or nil\",\
  default = nil,\
  help = \"Skip to be added to right side of line\"\
})\
\
SILE.settings.declare({\
  name = \"document.lskip\",\
  type = \"Glue or nil\",\
  default = nil,\
  help = \"Skip to be added to left side of line\"\
})\
\
SILE.registerCommand(\"set\", function(options, content)\
  local p = SU.required(options, \"parameter\", \"\\\\set command\")\
  local v = options.value -- could be nil!\
  local def = SILE.settings.declarations[p]\
  if not def then SU.error(\"Unknown parameter \"..p..\" in \\\\set command\") end\
  if     string.match(def.type, \"nil\") and type(v) == \"nil\" then -- ok\
  elseif  string.match(def.type, \"integer\") then v = tonumber(v)\
  elseif  string.match(def.type, \"Length\") then v = SILE.length.parse(v)\
  elseif string.match(def.type, \"VGlue\") then v = SILE.nodefactory.newVglue(v)\
  elseif string.match(def.type, \"Glue\") then v = SILE.nodefactory.newGlue(v) end\
  if content and (type(content) == \"function\" or content[1]) then\
    SILE.settings.temporarily(function()\
      SILE.settings.set(p,v)\
      SILE.process(content)\
    end)\
  else\
    SILE.settings.set(p,v)\
  end\
end, \"Set a SILE parameter <parameter> to value <value> (restoring the value afterwards if <content> is provided)\")"
, '@'..".\\core\\settings.lua" ) )

package.preload[ "lua-libraries\\imagesize\\format\\jpeg" ] = assert( (loadstring or load)(
"-- Andrew Tong, werdna@ugcs.caltech.edu           February 14, 1995\
-- modified slightly by alex@ed.ac.uk\
-- and further still by rjray@blackperl.com\
-- optimization and general re-write from tmetro@vl.com\
\
local Util = require \"imagesize.util\"\
\
local MIME_TYPE = \"image/jpeg\"\
\
local MARKER = 0xFF         -- Section marker.\
\
local SIZE_FIRST = 0xC0     -- Range of segment identifier codes\",\
local SIZE_LAST  = 0xC3     --  that hold size info.\
\
local function size (stream, options)\
    -- Dummy read to skip header ID\
    stream:read(2)\
\
    while true do\
        local length = 4\
        local segheader = stream:read(length)\
        if not segheader or segheader:len() ~= length then\
            return nil, nil, \"end of file before JPEG size found\"\
        end\
\
        -- Extract the segment header.\
        local marker, code = segheader:byte(1, 2)\
        length = Util.get_uint16_be(segheader, 3)\
\
        -- Verify that it's a valid segment.\
        if marker ~= MARKER then\
            -- Was it there?\
            return nil, nil, \"JPEG marker not found\"\
        elseif code >= SIZE_FIRST and code <= SIZE_LAST then\
            -- Segments that contain size info\
            length = 5\
            local sizeinfo = stream:read(length)\
            if not sizeinfo or sizeinfo:len() ~= length then\
                return nil, nil, \"JPEG file's size info incomplete\"\
            end\
            return Util.get_uint16_be(sizeinfo, 4),\
                   Util.get_uint16_be(sizeinfo, 2), MIME_TYPE\
        else\
            -- Dummy read to skip over data\
            stream:read(length - 2)\
        end\
    end\
end\
\
return size\
-- vi:ts=4 sw=4 expandtab\
"
, '@'..".\\lua-libraries\\imagesize\\format\\jpeg.lua" ) )

package.preload[ "packages\\pagebuilder-bestfit" ] = assert( (loadstring or load)(
"local MAX_PAGES = 5\
\
SILE.typesetter.pageBuilder = function (self, independent)\
  -- Find last penalty\
  local q = self.state.outputQueue\
  local lastpenalty = -1\
  local cHeight = SILE.length.new()\
  for j = #q,1,-1 do \
    if q[j]:isPenalty() and lastpenalty == -1 then \
      lastpenalty = q[j].penalty\
    end\
    cHeight = cHeight + q[j].height\
  end\
  if not(cHeight > self.frame:height() * MAX_PAGES) and not(independent) and lastpenalty > -10000 then return false end\
  SU.debug(\"pagebuilder\", \"Finally running pagebuilder\")\
  repeat\
    q = self.state.outputQueue\
    local breaks = SILE.linebreak:doBreak( q, self.frame:height(), true) \
    --Height is variable! therefore only the first break is believable\
    local point = breaks[1]\
    if point.position == 0 then return false end\
    local linestart = 1\
    local slice = {}\
    local newslice = {}\
    for j = linestart, #self.state.outputQueue do\
      if j <= point.position then slice[#slice+1] = q[j]  else newslice[#newslice+1] = q[j] end\
    end\
    self:setVerticalGlue(slice, self.frame:height())\
    self:outputLinesToPage(slice)\
    self.state.outputQueue = newslice\
    if #(self.state.outputQueue) == 0 then return false end\
\
    self:initNextFrame() -- This causes a tail call if there is more stuff waiting\
    -- If not, we keep going if we are being asked to ship out a page now now now.\
  until lastpenalty > -10000\
  return false -- because we have already dealt with initializing the next frame\
end"
, '@'..".\\packages\\pagebuilder-bestfit.lua" ) )

package.preload[ "packages\\image" ] = assert( (loadstring or load)(
"local imagesize = SILE.require(\"imagesize\")\
SILE.registerCommand(\"img\", function(options, content)\
  SU.required(options, \"src\", \"including image file\")\
  local width =  SILE.parseComplexFrameDimension(options.width or 0,\"w\") or 0 \
  local height = SILE.parseComplexFrameDimension(options.height or 0,\"h\") or 0\
  local src = options.src\
  local box_width,box_height,err = imagesize.imgsize(src)\
  if not box_width then\
    SU.error(err..\" loading image\")\
  end\
  local sx, sy = 1,1\
  if width > 0 or height > 0 then\
    sx = width > 0 and box_width / width\
    sy = height > 0 and box_height / height\
    sx = sx or sy\
    sy = sy or sx\
  end\
\
  SILE.typesetter:pushHbox({ \
    width= box_width / (sx),\
    height= box_height / (sy),\
    depth= 0,\
    value= options.src,\
    outputYourself= function (this, typesetter, line)\
      SILE.outputter.drawImage(this.value, typesetter.frame.state.cursorX, typesetter.frame.state.cursorY-this.height, this.width,this.height);\
      typesetter.frame:moveX(this.width)\
  end});\
\
end, \"Inserts the image specified with the <src> option in a box of size <width> by <height>\");\
"
, '@'..".\\packages\\image.lua" ) )

package.preload[ "lua-libraries\\std\\tree" ] = assert( (loadstring or load)(
"--[[--\
 Tree container.\
\
 Derived from @{std.container}, and inherits Container's metamethods.\
\
 Note that Functions listed below are only available from the Tree\
 prototype return by requiring this module, because Container objects\
 cannot have object methods.\
\
 @classmod std.tree\
 @see std.container\
]]\
\
local base      = require \"std.base\"\
local Container = require \"std.container\"\
local List      = require \"std.list\"\
local func      = require \"std.functional\"\
\
local prototype = (require \"std.object\").prototype\
\
local Tree -- forward declaration\
\
\
--- Tree iterator which returns just numbered leaves, in order.\
-- @function ileaves\
-- @static\
-- @tparam  tree|table tr tree or tree-like table\
-- @treturn function iterator function\
-- @treturn tree|table the tree `tr`\
local ileaves = base.ileaves\
\
\
--- Tree iterator which returns just leaves.\
-- @function leaves\
-- @static\
-- @tparam  tree|table tr tree or tree-like table\
-- @treturn function iterator function\
-- @treturn tree|table the tree, `tr`\
local leaves = base.leaves\
\
\
--- Make a deep copy of a tree, including any metatables.\
--\
-- To make fast shallow copies, use @{std.table.clone}.\
-- @tparam  table|tree t table or tree to be cloned\
-- @tparam  boolean nometa if non-nil don't copy metatables\
-- @treturn table|tree a deep copy of `t`\
local function clone (t, nometa)\
  assert (type (t) == \"table\",\
          \"bad argument #1 to 'clone' (table expected, got \" .. type (t) .. \")\")\
  local r = {}\
  if not nometa then\
    setmetatable (r, getmetatable (t))\
  end\
  local d = {[t] = r}\
  local function copy (o, x)\
    for i, v in pairs (x) do\
      if type (v) == \"table\" then\
        if not d[v] then\
          d[v] = {}\
          if not nometa then\
            setmetatable (d[v], getmetatable (v))\
          end\
          o[i] = copy (d[v], v)\
        else\
          o[i] = d[v]\
        end\
      else\
        o[i] = v\
      end\
    end\
    return o\
  end\
  return copy (r, t)\
end\
\
\
--- Tree iterator.\
-- @tparam  function it iterator function\
-- @tparam  tree|table tr tree or tree-like table\
-- @treturn string   type (\"leaf\", \"branch\" (pre-order) or \"join\" (post-order))\
-- @treturn table    path to node ({i\\_1...i\\_k})\
-- @return           node\
local function _nodes (it, tr)\
  local p = {}\
  local function visit (n)\
    if type (n) == \"table\" then\
      coroutine.yield (\"branch\", p, n)\
      for i, v in it (n) do\
        table.insert (p, i)\
        visit (v)\
        table.remove (p)\
      end\
      coroutine.yield (\"join\", p, n)\
    else\
      coroutine.yield (\"leaf\", p, n)\
    end\
  end\
  return coroutine.wrap (visit), tr\
end\
\
\
--- Tree iterator over all nodes.\
--\
-- The returned iterator function performs a depth-first traversal of\
-- `tr`, and at each node it returns `{node-type, tree-path, tree-node}`\
-- where `node-type` is `branch`, `join` or `leaf`; `tree-path` is a\
-- list of keys used to reach this node, and `tree-node` is the current\
-- node.\
--\
-- Given a `tree` to represent:\
--\
--     + root\
--        +-- node1\
--        |    +-- leaf1\
--        |    '-- leaf2\
--        '-- leaf 3\
--\
--     tree = std.tree { std.tree { \"leaf1\", \"leaf2\"}, \"leaf3\" }\
--\
-- A series of calls to `tree.nodes` will return:\
--\
--     \"branch\", {},    {{\"leaf1\", \"leaf2\"}, \"leaf3\"}\
--     \"branch\", {1},   {\"leaf1\", \"leaf\"2\")\
--     \"leaf\",   {1,1}, \"leaf1\"\
--     \"leaf\",   {1,2}, \"leaf2\"\
--     \"join\",   {1},   {\"leaf1\", \"leaf2\"}\
--     \"leaf\",   {2},   \"leaf3\"\
--     \"join\",   {},    {{\"leaf1\", \"leaf2\"}, \"leaf3\"}\
--\
-- Note that the `tree-path` reuses the same table on each iteration, so\
-- you must `table.clone` a copy if you want to take a snap-shot of the\
-- current state of the `tree-path` list before the next iteration\
-- changes it.\
-- @tparam  tree|table tr tree or tree-like table to iterate over\
-- @treturn function iterator function\
-- @treturn tree|table the tree, `tr`\
-- @see inodes\
local function nodes (tr)\
  assert (type (tr) == \"table\",\
          \"bad argument #1 to 'nodes' (table expected, got \" .. type (tr) .. \")\")\
  return _nodes (pairs, tr)\
end\
\
\
--- Tree iterator over numbered nodes, in order.\
--\
-- The iterator function behaves like @{nodes}, but only traverses the\
-- array part of the nodes of `tr`, ignoring any others.\
-- @tparam  tree|table tr tree to iterate over\
-- @treturn function iterator function\
-- @treturn tree|table the tree, `tr`\
-- @see nodes\
local function inodes (tr)\
  assert (type (tr) == \"table\",\
          \"bad argument #1 to 'inodes' (table expected, got \" .. type (tr) .. \")\")\
  return _nodes (ipairs, tr)\
end\
\
\
--- Destructively deep-merge one tree into another.\
-- @tparam  tree|table t destination tree or table\
-- @tparam  tree|table u tree or table with nodes to merge\
-- @treturn tree|table `t` with nodes from `u` merged in\
-- @see std.table.merge\
local function merge (t, u)\
  assert (type (t) == \"table\",\
          \"bad argument #1 to 'merge' (table expected, got \" .. type (t) .. \")\")\
  assert (type (u) == \"table\",\
          \"bad argument #2 to 'merge' (table expected, got \" .. type (u) .. \")\")\
  for ty, p, n in nodes (u) do\
    if ty == \"leaf\" then\
      t[p] = n\
    end\
  end\
  return t\
end\
\
\
--- @export\
local _functions = {\
  clone   = clone,\
  ileaves = ileaves,\
  inodes  = inodes,\
  leaves  = leaves,\
  merge   = merge,\
  nodes   = nodes,\
}\
\
\
--- Tree prototype object.\
-- @table std.tree\
-- @string[opt=\"Tree\"] _type type of Tree, returned by\
--   @{std.object.prototype}\
-- @tfield[opt={}] table|function _init a table of field names, or\
--   initialisation function, see @{std.object.__call}\
-- @tfield nil|table _functions a table of module functions not copied\
--   by @{std.object.__call}\
Tree = Container {\
  -- Derived object type.\
  _type = \"Tree\",\
\
  --- Tree `__index` metamethod.\
  -- @function __index\
  -- @param i non-table, or list of keys `{i\\_1 ... i\\_n}`\
  -- @return `self[i]...[i\\_n]` if i is a table, or `self[i]` otherwise\
  -- @todo the following doesn't treat list keys correctly\
  --       e.g. self[{{1, 2}, {3, 4}}], maybe flatten first?\
  __index = function (self, i)\
    if type (i) == \"table\" and #i > 0 then\
      return List.foldl (func.op[\"[]\"], self, i)\
    else\
      return rawget (self, i)\
    end\
  end,\
\
  --- Tree `__newindex` metamethod.\
  --\
  -- Sets `self[i\\_1]...[i\\_n] = v` if i is a table, or `self[i] = v` otherwise\
  -- @function __newindex\
  -- @param i non-table, or list of keys `{i\\_1 ... i\\_n}`\
  -- @param v value\
  __newindex = function (self, i, v)\
    if type (i) == \"table\" then\
      for n = 1, #i - 1 do\
        if prototype (self[i[n]]) ~= \"Tree\" then\
          rawset (self, i[n], Tree {})\
        end\
        self = self[i[n]]\
      end\
      rawset (self, i[#i], v)\
    else\
      rawset (self, i, v)\
    end\
  end,\
\
  _functions = base.merge (_functions, {\
    -- backwards compatibility.\
    new = function (t) return Tree (t or {}) end,\
  }),\
}\
\
return Tree\
"
, '@'..".\\lua-libraries\\std\\tree.lua" ) )

package.preload[ "lua-libraries\\repl\\plugins\\autoreturn" ] = assert( (loadstring or load)(
"-- Copyright (c) 2011-2014 Rob Hoelz <rob@hoelz.ro>\
--\
-- Permission is hereby granted, free of charge, to any person obtaining a copy of\
-- this software and associated documentation files (the \"Software\"), to deal in\
-- the Software without restriction, including without limitation the rights to\
-- use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\
-- the Software, and to permit persons to whom the Software is furnished to do so,\
-- subject to the following conditions:\
--\
-- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\
--\
-- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\
-- FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\
-- COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\
-- IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\
-- CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\
\
-- A plugin that causes the REPL to automatically return evaluation results\
\
function around:compilechunk(orig, chunk)\
  local f, err = orig(self, 'return ' .. chunk)\
\
  if not f then\
    f, err = orig(self, chunk)\
  end\
\
  return f, err\
end\
"
, '@'..".\\lua-libraries\\repl\\plugins\\autoreturn.lua" ) )

package.preload[ "packages\\lorem" ] = assert( (loadstring or load)(
"local lorem = [[\
lorem ipsum dolor sit amet consetetur sadipscing elitr sed diam nonumy\
eirmod tempor invidunt ut labore et dolore magna aliquyam erat sed diam\
voluptua at vero eos et accusam et justo duo dolores et ea rebum stet clita\
kasd gubergren no sea takimata sanctus est lorem ipsum dolor sit amet lorem\
ipsum dolor sit amet consetetur sadipscing elitr sed diam nonumy eirmod\
tempor invidunt ut labore et dolore magna aliquyam erat sed diam voluptua at\
vero eos et accusam et justo duo dolores et ea rebum stet clita kasd\
gubergren no sea takimata sanctus est lorem ipsum dolor sit amet lorem ipsum\
dolor sit amet consetetur sadipscing elitr sed diam nonumy eirmod tempor\
invidunt ut labore et dolore magna aliquyam erat sed diam voluptua at vero\
eos et accusam et justo duo dolores et ea rebum stet clita kasd gubergren no\
sea takimata sanctus est lorem ipsum dolor sit amet\
\
duis autem vel eum iriure dolor in hendrerit in vulputate velit esse\
molestie consequat vel illum dolore eu feugiat nulla facilisis at vero eros\
et accumsan et iusto odio dignissim qui blandit praesent luptatum zzril\
delenit augue duis dolore te feugait nulla facilisi lorem ipsum dolor sit\
amet consectetuer adipiscing elit sed diam nonummy nibh euismod tincidunt ut\
laoreet dolore magna aliquam erat volutpat\
\
ut wisi enim ad minim veniam quis nostrud exerci tation ullamcorper suscipit\
lobortis nisl ut aliquip ex ea commodo consequat duis autem vel eum iriure\
dolor in hendrerit in vulputate velit esse molestie consequat vel illum\
dolore eu feugiat nulla facilisis at vero eros et accumsan et iusto odio\
dignissim qui blandit praesent luptatum zzril delenit augue duis dolore te\
feugait nulla facilisi\
\
nam liber tempor cum soluta nobis eleifend option congue nihil imperdiet\
doming id quod mazim placerat facer possim assum lorem ipsum dolor sit amet\
consectetuer adipiscing elit sed diam nonummy nibh euismod tincidunt ut\
laoreet dolore magna aliquam erat volutpat ut wisi enim ad minim veniam quis\
nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea\
commodo consequat\
\
duis autem vel eum iriure dolor in hendrerit in vulputate velit esse\
molestie consequat vel illum dolore eu feugiat nulla facilisis\
\
at vero eos et accusam et justo duo dolores et ea rebum stet clita kasd\
gubergren no sea takimata sanctus est lorem ipsum dolor sit amet lorem ipsum\
dolor sit amet consetetur sadipscing elitr sed diam nonumy eirmod tempor\
invidunt ut labore et dolore magna aliquyam erat sed diam voluptua at vero\
eos et accusam et justo duo dolores et ea rebum stet clita kasd gubergren no\
sea takimata sanctus est lorem ipsum dolor sit amet lorem ipsum dolor sit\
amet consetetur sadipscing elitr at accusam aliquyam diam diam dolore\
dolores duo eirmod eos erat et nonumy sed tempor et et invidunt justo labore\
stet clita ea et gubergren kasd magna no rebum sanctus sea sed takimata ut\
vero voluptua est lorem ipsum dolor sit amet lorem ipsum dolor sit amet\
consetetur sadipscing elitr sed diam nonumy eirmod tempor invidunt ut labore\
et dolore magna aliquyam erat\
\
consetetur sadipscing elitr sed diam nonumy eirmod tempor invidunt ut labore\
et dolore magna aliquyam erat sed diam voluptua at vero eos et accusam et\
justo duo dolores et ea rebum stet clita kasd gubergren no sea takimata\
sanctus est lorem ipsum dolor sit amet lorem ipsum dolor sit amet consetetur\
sadipscing elitr sed diam nonumy eirmod tempor invidunt ut labore et dolore\
magna aliquyam erat sed diam voluptua at vero eos et accusam et justo duo\
dolores et ea rebum stet clita kasd gubergren no sea takimata sanctus est\
lorem ipsum dolor sit amet lorem ipsum dolor sit amet consetetur sadipscing\
elitr sed diam nonumy eirmod tempor invidunt ut labore et dolore magna\
aliquyam erat sed diam voluptua at vero eos et accusam et justo duo dolores\
et ea rebum stet clita kasd gubergren no sea takimata sanctus est lorem\
ipsum dolor sit amet\
\
]]\
\
local _, nwords = lorem:gsub(\"%S+\",\"\")\
local floor = math.floor\
\
SILE.registerCommand(\"lorem\", function(options, content)\
  local words = tonumber(options.words) or 50\
  local times = floor(words/nwords)\
  words = words - times*nwords\
  local i, j = 0, 0\
  for n = 1, words do\
    i, j = lorem:find(\"%S+\", j+1)\
  end\
  local s = string.rep(lorem,times)..lorem:sub(1,j)\
  SILE.settings.temporarily(function()\
    SILE.settings.set(\"document.language\",\"la\")\
    SILE.typesetter:typeset(s)\
    SILE.typesetter:leaveHmode()\
  end)\
end)"
, '@'..".\\packages\\lorem.lua" ) )

package.preload[ "core\\frameparser" ] = assert( (loadstring or load)(
"lpeg = require(\"lpeg\")\
local R = lpeg.R\
local S = lpeg.S\
local P = lpeg.P\
local C = lpeg.C\
local V = lpeg.V\
local Cg = lpeg.Cg\
local Ct = lpeg.Ct\
\
local number = SILE.parserBits.number\
local identifier = SILE.parserBits.identifier\
local dimensioned_string = SILE.parserBits.dimensioned_string\
local whitespace = SILE.parserBits.whitespace\
\
local functionOfFrame = function (dim, ident)\
\9if not SILE.frames[ident] then\9\
\9\9SILE.newFrame({id = ident})\
\9end\
\9return SILE.frames[ident].variables[dim]\9\
end\
local func = C(P(\"top\") + P(\"left\") + P(\"bottom\") + P(\"right\") + P(\"width\") + P(\"height\")) * P(\"(\") * C(identifier) * P(\")\") / functionOfFrame\
\
local percentage = ( C(number.number) * whitespace * P(\"%\") ) / function (n) \
\9local dim = SILE.documentState._dimension == \"w\" and \"width\" or \"height\"\
\9return cassowary.times(n / 100, functionOfFrame(dim, \"page\"))\
end\
\
local primary = dimensioned_string + percentage + func + number.number\
\
\9SILE.frameParserBits = {\
\9\9number = number,\
\9\9identifier = identifier,\
\9\9whitespace = whitespace,\
\9\9units = units,\
\9\9dimensioned_string = dimensioned_string,\
\9\9func = func,\
\9\9percentage = percentage,\
\9\9primary = primary\
\9}\
\
local grammar = {\
\9\"additive\",\
\9additive =  (( V(\"multiplicative\") * whitespace * P(\"+\")  * whitespace * V(\"additive\") ) / function (l,r) return cassowary.plus(l,r) end)\
\9\9\9\9+\
\9\9\9\9(( V(\"multiplicative\") * whitespace * P(\"-\") * whitespace * V(\"additive\") * whitespace ) / function(l,r) return cassowary.minus(l,r) end )+\
\9\9\9\9V(\"multiplicative\")\
\9,\
\9primary = primary + V(\"bracketed\"),\
\9multiplicative =  (( V(\"primary\") * whitespace * P(\"*\") * whitespace * V(\"multiplicative\") ) / function (l,r) return cassowary.times(l,r) end)+\
\9\9\9\9(( V(\"primary\") * whitespace * P(\"/\") * whitespace * V(\"multiplicative\") ) / function(l,r) return cassowary.divide(l,r) end) +\
\9\9\9\9V(\"primary\"),\
\9bracketed = P(\"(\") * whitespace * V(\"additive\") * whitespace * P(\")\") / function (a) return a; end\
}\
\
return P(grammar)\
"
, '@'..".\\core\\frameparser.lua" ) )

package.preload[ "packages\\infonode" ] = assert( (loadstring or load)(
"-- Info nodes are used to store information about what actually ends up on which page.\
-- Index terms are an obvious use for this, as well as anything where you wanted to\
-- know where something had ended up after the page builder had broken the page.\
-- Check out SILE.scratch.info.thispage in your end-of-page routine and see what nodes\
-- are there.\
\
-- Exports\
--    newPageInfo (call this in endPage to empty the info node list)\
SILE.scratch.info = {\
  thispage = {}\
}\
local _info = SILE.nodefactory.zeroHbox {\
  _type = \"Info\",\
  type=\"special\",\
  category = \"\",\
  value=nil,\
  __tostring = function (this) return \"I<\" .. this.category .. \"|\" .. this.value.. \">\"; end,\
  outputYourself = function(self,typesetter, line)\
    if not SILE.scratch.info.thispage[self.category] then\
      SILE.scratch.info.thispage[self.category] = {self.value}\
    else\
      local i = #(SILE.scratch.info.thispage[self.category]) + 1\
      SILE.scratch.info.thispage[self.category][i] = self.value\
    end\
  end\
}\
\
function SILE.nodefactory.newInfo(spec)  return _info(spec) end\
\
SILE.registerCommand(\"info\", function ( options, content )\
  SU.required(options, \"category\", \"info node\")\
  SU.required(options, \"value\", \"info node\")\
  table.insert(SILE.typesetter.state.nodes, SILE.nodefactory.newInfo({\
    category = options.category, value = options.value\
  }))\
end, \"Inserts an info node onto the current page\")\
\
return {\
  init = function () end,\
  exports = {\
    newPageInfo = function()\
      SILE.scratch.info = { thispage = {} }\
    end\
  }\
}"
, '@'..".\\packages\\infonode.lua" ) )

package.preload[ "core\\inputs-texlike" ] = assert( (loadstring or load)(
"SILE.inputs.TeXlike = {}\
local epnf = require( \"epnf\" )\
\
texlike = epnf.define(function (_ENV)\
  local _ = WS^0\
  local sep = lpeg.S(\",;\") * _\
  local quotedString = (P(\"\\\"\") * C((1-lpeg.S(\"\\\"\"))^1) * P(\"\\\"\")) \
  local value = (quotedString + (1-lpeg.S(\",;]\"))^1 )\
  local myID = C( ((ID+P(\"-\")+P(\":\"))^1)  + P(1) ) / function (t) return t end\
  local pair = lpeg.Cg(myID * _ * \"=\" * _ * C(value)) * sep^-1   / function (...) local t= {...}; return t[1], t[#t] end\
  local list = lpeg.Cf(lpeg.Ct(\"\") * pair^0, rawset)\
  local parameters = (P(\"[\") * list * P(\"]\")) ^-1 / function (a) return type(a)==\"table\" and a or {} end\
  local anything = C( (1-lpeg.S(\"\\\\{}%\\r\\n\")) ^1) \
\
  START \"document\";\
  document = V(\"stuff\") * (-1 + E(\"Unexpected character at end of input\"))\
  text = (anything + C(WS))^1 / function(...) return table.concat({...}, \"\") end\
  stuff = Cg(V\"environment\" + \
    ((P(\"%\") * (1-lpeg.S(\"\\r\\n\"))^0 * lpeg.S(\"\\r\\n\")^0) /function () return \"\" end) -- Don't bother telling me about comments\
    + V(\"text\") + V\"bracketed_stuff\" + V\"command\")^0\
  bracketed_stuff = P\"{\" * V\"stuff\" * (P\"}\" + E(\"} expected\"))\
  command =((P(\"\\\\\")-P(\"\\\\begin\")) * Cg(myID, \"tag\") * Cg(parameters,\"attr\") * V\"bracketed_stuff\"^0)-P(\"\\\\end{\")\
  environment = \
    P(\"\\\\begin\") * Cg(parameters, \"attr\") * P(\"{\") * Cg(myID, \"tag\") * P(\"}\") \
      * V(\"stuff\") \
    * (P(\"\\\\end{\") * (\
      Cmt(myID * Cb(\"tag\"), function(s,i,a,b) return a==b end) +\
      E(\"Environment mismatch\")\
    ) * P(\"}\") + E(\"Environment begun but never ended\"))\
end)\
\
local linecache = {}\
local lno, col, lastpos\
local function resetCache()\
  lno = 1\
  col = 1\
  lastpos = 0\
  linecache = { { lno = 1, pos = 1} }\
end\
\
local function getline( s, p )\
  start = 1\
  lno = 1\
  if p > lastpos then\
    lno = linecache[#linecache].lno \
    start = linecache[#linecache].pos + 1\
    col = 1\
  else\
    for j = 1,#linecache-1 do\
      if linecache[j+1].pos >= p then\
        lno = linecache[j].lno\
        col = p - linecache[j].pos \
        return lno,col\
      end\
    end\
  end\
  for i = start, p do\
    if string.sub( s, i, i ) == \"\\n\" then\
      lno = lno + 1\
      col = 1\
      linecache[#linecache+1] = { pos = i, lno = lno }\
      lastpos = i\
    end\
    col = col + 1\
  end\
  return lno, col\
end\
\
local function massage_ast(t,doc)\
  -- Sort out pos\
  if type(t) == \"string\" then return t end\
  if t.pos then\
    t.line, t.col = getline(doc, t.pos)\
  end\
  if t.id == \"document\" then return massage_ast(t[1],doc) end\
  if t.id == \"text\" then return t[1] end\
  if t.id == \"bracketed_stuff\" then return massage_ast(t[1],doc) end\
  for k,v in ipairs(t) do\
    if v.id == \"stuff\" then\
      local val = massage_ast(v,doc)\
      SU.splice(t, k,k, val)\
    else\
      t[k] = massage_ast(v,doc)\
    end\
  end\
  return t\
end\
\
function SILE.inputs.TeXlike.process(fn)\
  local fh = io.open(fn)\
  resetCache()\
  local doc = fh:read(\"*all\")\
  local t = SILE.inputs.TeXlike.docToTree(doc)\
  local root = SILE.documentState.documentClass == nil\
  if root then\
    if not(t.tag == \"document\") then SU.error(\"Should begin with \\\\begin{document}\") end\
    SILE.inputs.common.init(fn, t)\
  end\
  SILE.process(t)\
  if root and not SILE.preamble then\
    SILE.documentState.documentClass:finish()\
  end  \
end\
\
function SILE.inputs.TeXlike.docToTree(doc)\
  local t = epnf.parsestring(texlike, doc)\
  -- a document always consists of one stuff\
  t = t[1][1]\
  if not t then return end\
  resetCache()\
  t = massage_ast(t,doc) \
  return t\
end\
"
, '@'..".\\core\\inputs-texlike.lua" ) )

package.preload[ "lua-libraries\\std\\functional" ] = assert( (loadstring or load)(
"--[[--\
 Functional programming.\
 @module std.functional\
]]\
\
local list = require \"std.base\"\
\
local functional -- forward declaration\
\
\
--- Return given metamethod, if any, or nil.\
-- @param x object to get metamethod of\
-- @param n name of metamethod to get\
-- @return metamethod function or nil if no metamethod or not a\
-- function\
local function metamethod (x, n)\
  local _, m = pcall (function (x)\
                        return getmetatable (x)[n]\
                      end,\
                      x)\
  if type (m) ~= \"function\" then\
    m = nil\
  end\
  return m\
end\
\
\
--- Identity function.\
-- @param ...\
-- @return the arguments passed to the function\
local function id (...)\
  return ...\
end\
\
\
--- Partially apply a function.\
-- @param f function to apply partially\
-- @param ... arguments to bind\
-- @return function with ai already bound\
local function bind (f, ...)\
  local fix = {...}\
  return function (...)\
           return f (unpack (list.concat (fix, {...})))\
         end\
end\
\
\
--- Curry a function.\
-- @param f function to curry\
-- @param n number of arguments\
-- @return curried version of f\
local function curry (f, n)\
  if n <= 1 then\
    return f\
  else\
    return function (x)\
             return curry (bind (f, x), n - 1)\
           end\
  end\
end\
\
\
--- Compose functions.\
-- @param f1...fn functions to compose\
-- @return composition of f1 ... fn\
local function compose (...)\
  local arg = {...}\
  local fns, n = arg, #arg\
  return function (...)\
           local arg = {...}\
           for i = n, 1, -1 do\
             arg = {fns[i] (unpack (arg))}\
           end\
           return unpack (arg)\
         end\
end\
\
\
--- Memoize a function, by wrapping it in a functable.\
-- @param fn function that returns a single result\
-- @return memoized function\
local function memoize (fn)\
  return setmetatable ({}, {\
    __call = function (self, ...)\
               local k = tostring ({...})\
               local v = self[k]\
               if v == nil then\
                 v = fn (...)\
                 self[k] = v\
               end\
               return v\
             end\
  })\
end\
\
\
--- Evaluate a string.\
-- @param s string\
-- @return value of string\
local function eval (s)\
  return loadstring (\"return \" .. s)()\
end\
\
\
--- Collect the results of an iterator.\
-- @param i iterator\
-- @return results of running the iterator on its arguments\
local function collect (i, ...)\
  local t = {}\
  for e in i (...) do\
    table.insert (t, e)\
  end\
  return t\
end\
\
\
--- Map a function over an iterator.\
-- @param f function\
-- @param i iterator\
-- @return result table\
local function map (f, i, ...)\
  local t = {}\
  for e in i (...) do\
    local r = f (e)\
    if r then\
      table.insert (t, r)\
    end\
  end\
  return t\
end\
\
\
--- Filter an iterator with a predicate.\
-- @param p predicate\
-- @param i iterator\
-- @return result table containing elements e for which p (e)\
local function filter (p, i, ...)\
  local t = {}\
  for e in i (...) do\
    if p (e) then\
      table.insert (t, e)\
    end\
  end\
  return t\
end\
\
\
--- Fold a binary function into an iterator.\
-- @param f function\
-- @param d initial first argument\
-- @param i iterator\
-- @return result\
local function fold (f, d, i, ...)\
  local r = d\
  for e in i (...) do\
    r = f (r, e)\
  end\
  return r\
end\
\
--- @export\
functional = {\
  bind       = bind,\
  collect    = collect,\
  compose    = compose,\
  curry      = curry,\
  eval       = eval,\
  filter     = filter,\
  fold       = fold,\
  id         = id,\
  map        = map,\
  memoize    = memoize,\
  metamethod = metamethod,\
}\
\
--- Functional forms of infix operators.\
-- Defined here so that other modules can write to it.\
-- @table op\
-- @field [] dereference table index\
-- @field + addition\
-- @field - subtraction\
-- @field * multiplication\
-- @field / division\
-- @field and logical and\
-- @field or logical or\
-- @field not logical not\
-- @field == equality\
-- @field ~= inequality\
functional.op = {\
  [\"[]\"]  = function (t, s) return t[s]    end,\
  [\"+\"]   = function (a, b) return a + b   end,\
  [\"-\"]   = function (a, b) return a - b   end,\
  [\"*\"]   = function (a, b) return a * b   end,\
  [\"/\"]   = function (a, b) return a / b   end,\
  [\"and\"] = function (a, b) return a and b end,\
  [\"or\"]  = function (a, b) return a or b  end,\
  [\"not\"] = function (a)    return not a   end,\
  [\"==\"]  = function (a, b) return a == b  end,\
  [\"~=\"]  = function (a, b) return a ~= b  end,\
}\
\
return functional\
"
, '@'..".\\lua-libraries\\std\\functional.lua" ) )

package.preload[ "packages\\grid" ] = assert( (loadstring or load)(
"local gridSpacing -- Should be a setting\
\
local makeUp = function ()\
  local toadd = gridSpacing - (SILE.typesetter.frame.state.totals.gridCursor % gridSpacing)   \
  SILE.typesetter.frame.state.totals.gridCursor = SILE.typesetter.frame.state.totals.gridCursor + toadd\
  return SILE.nodefactory.newVglue({ height = SILE.length.new({ length = toadd }) })\
end\
\
local leadingFor = function(this, vbox, previous)\
  if not this.frame.state.totals.gridCursor then this.frame.state.totals.gridCursor = SILE.typesetter.frame.state.cursorY end\
  this.frame.state.totals.gridCursor = this.frame.state.totals.gridCursor + previous.height.length + previous.depth.length\
  return makeUp()\
end\
\
local pushVglue = function(this, spec)\
  if not this.frame.state.totals.gridCursor then this.frame.state.totals.gridCursor = SILE.typesetter.frame.state.cursorY end\
  this.frame.state.totals.gridCursor = this.frame.state.totals.gridCursor + spec.height.length\
  SILE.defaultTypesetter.pushVglue(this, spec);\
  SILE.defaultTypesetter.pushVglue(this, makeUp())\
end\
\
local newBoxup = function (this)\
  local b = SILE.defaultTypesetter.boxUpNodes(this)\
  if not this.frame.state.totals.gridCursor then this.frame.state.totals.gridCursor = SILE.typesetter.frame.state.cursorY end\
  \
  if #b > 1 then\
    this.frame.state.totals.gridCursor = this.frame.state.totals.gridCursor + b[#b].height.length + b[#b].depth.length\
  end\
  return b\
end\
\
local debugGrid = function()\
  local t = SILE.typesetter\
  if not t.frame.state.totals.gridCursor then t.frame.state.totals.gridCursor = SILE.typesetter.frame.state.cursorY end\
  local g = t.frame.state.totals.gridCursor\
  while g < t.frame:bottom() do\
    SILE.outputter.rule(t.frame:left(), g, t.frame:width(), 0.1)\
    g = g + gridSpacing\
  end\
end\
\
SILE.registerCommand(\"grid:debug\", debugGrid)\
\
SILE.registerCommand(\"grid\", function(options, content)\
  SU.required(options, \"spacing\", \"grid package\")\
  gridSpacing = SILE.parseComplexFrameDimension(options.spacing,\"h\");\
  SILE.typesetter:chuck()\
\
  SILE.typesetter.leadingFor = leadingFor\
  SILE.typesetter.pushVglue = pushVglue\
  SILE.typesetter.boxUpNodes = newBoxup\
  SILE.typesetter.setVerticalGlue = function () end\
  SILE.typesetter.frame.state.totals.gridCursor = SILE.typesetter.frame.state.cursorY\
  -- add some now\
  SILE.defaultTypesetter.pushVglue(SILE.typesetter, makeUp())\
end, \"Begins typesetting on a grid spaced at <spacing> intervals.\")\
\
SILE.registerCommand(\"no-grid\", function (options, content)\
  SILE.typesetter.leadingFor = SILE.defaultTypesetter.leadingFor\
  SILE.typesetter.pushVglue = SILE.defaultTypesetter.pushVglue\
  SILE.typesetter.setVerticalGlue = SILE.defaultTypesetter.setVerticalGlue\
  -- SILE.typesetter.state = t.state\
end, \"Stops grid typesetting.\")"
, '@'..".\\packages\\grid.lua" ) )

package.preload[ "packages\\frametricks" ] = assert( (loadstring or load)(
"local breakFrameVertical = function(after)\
  local cFrame = SILE.typesetter.frame\
  if after then\
    totalHeight = after\
  else\
    totalHeight = 0\
    SILE.typesetter:leaveHmode(1)    \
    local q = SILE.typesetter.state.outputQueue\
    for i=1,#q do\
      totalHeight = totalHeight + q[i].height + q[i].depth\
    end\
    SILE.typesetter:chuck()\
  end\
\
  if type(totalHeight) == \"table\" then totalHeight= totalHeight.length end\
\
  local newFrame = SILE.newFrame({ \
    bottom = cFrame:bottom(), \
    left = cFrame:left(), \
    right = cFrame:right(),\
    next = cFrame.next,\
    previous = cFrame,\
    id = cFrame.id .. \"_\"\
  })\
\
  cFrame:relax(\"bottom\")\
  cFrame:constrain(\"height\", totalHeight)\
  cFrame.next = newFrame.id\
  SILE.documentState.thisPageTemplate.frames[newFrame.id] = newFrame\
  newFrame:constrain(\"top\", cFrame:top() + totalHeight)\
  if (after) then\
    SILE.typesetter:initFrame(cFrame)\
  else\
    SILE.typesetter:initFrame(newFrame)\
  end\
  -- SILE.outputter:debugFrame(cFrame)\
  -- SILE.outputter:debugFrame(newFrame)\
end\
\
local breakFrameHorizontalAt = function (offset)\
  local cFrame = SILE.typesetter.frame\
  if not offset or not (offset > 0) then\
    SILE.typesetter:chuck()\
    offset = SILE.typesetter.frame.state.cursorX\
  end\
  local newFrame = SILE.newFrame({ \
    bottom = cFrame:bottom(),\
    top = cFrame:top(),\
    left = cFrame:left() + offset,\
    right = cFrame:right(),\
    next = cFrame.next,\
    previous = cFrame,\
    id = cFrame.id .. \"_\"\
  })\
  local oldLeft = cFrame:left()\
  cFrame.next = newFrame.id\
  cFrame:constrain(\"left\", oldLeft)\
  cFrame:constrain(\"right\", oldLeft + offset)\
  -- SILE.outputter:debugFrame(cFrame)\
  -- SILE.outputter:debugFrame(newFrame)\
  SILE.typesetter:initFrame(newFrame)\
end\
\
local shiftframeedge = function(frame, options)\
  if options.left then \
    frame:constrain(\"left\", frame:left() + SILE.length.parse(options.left).length)\
  end\
  if options.right then \
    frame:constrain(\"right\", frame:right() + SILE.length.parse(options.right).length)\
  end\
end\
\
SILE.registerCommand(\"showframe\", function(options, content)\
  local id = options.id or SILE.typesetter.frame.id\
  if id == \"all\" then\
    for _,f in pairs(SILE.frames) do\
      SILE.outputter:debugFrame(f)\
    end\
  else\
    SILE.outputter:debugFrame(SILE.getFrame(id))\
  end\
end)\
\
SILE.registerCommand(\"shiftframeedge\", function(options, content)\
  local cFrame = SILE.typesetter.frame\
  shiftframeedge(cFrame, options)\
  SILE.typesetter:initFrame(cFrame)\
  --SILE.outputter:debugFrame(cFrame)\
end, \"Adjusts the edge of the frame horizontally by amounts specified in <left> and <right>\")\
\
SILE.registerCommand(\"breakframevertical\", function ( options, content )\
  breakFrameVertical(options.offset and SILE.length.parse(options.offset).length)\
end, \"Breaks the current frame in two vertically at the current location or at a point <offset> below the current location\")\
\
SILE.registerCommand(\"breakframehorizontal\", function ( options, content )\
  breakFrameHorizontalAt(options.offset and SILE.length.parse(options.offset).length)\
end, \"Breaks the current frame in two horizontally either at the current location or at a point <offset> from the left of the current frame\")\
\
SILE.registerCommand(\"float\", function(options, content)\
  breakFrameVertical()\
  SILE.settings.set(\"current.parindent\", SILE.nodefactory.zeroGlue)\
  local hbox = SILE.Commands[\"hbox\"]({}, content)\
  table.remove(SILE.typesetter.state.nodes) -- steal it back\
  local boundary = hbox.width.length + SILE.length.parse(options.rightboundary).length\
  breakFrameHorizontalAt(boundary)\
  SILE.typesetNaturally(SILE.typesetter.frame.previous, function()\
    table.insert(SILE.typesetter.state.nodes,hbox)\
  end)\
  local undoSkip = SILE.length.new({}) - SILE.settings.get(\"document.baselineskip\").height.length + SILE.length.parse(\"1ex\")\
  undoSkip.stretch = hbox.height\
  SILE.typesetter:pushHbox({value = {}})\
  -- SILE.typesetter:pushVglue({height = undoSkip })\
  breakFrameVertical(hbox.height + SILE.length.parse(options.bottomboundary).length)\
  shiftframeedge(SILE.getFrame(SILE.typesetter.frame.next), {left = \"\"..tostring(SILE.length.new() - boundary)})\
  --SILE.outputter:debugFrame(SILE.typesetter.frame)\
  SILE.settings.set(\"current.parindent\", SILE.settings.get(\"document.parindent\"))\
end, \"Sets the given content in its own frame, flowing the remaining content around it\")\
\
SILE.registerCommand(\"typeset-into\", function(options,content)\
  SU.required(options, \"frame\", \"calling \\\\typeset-into\")\
  if not SILE.frames[options.frame] then\
    SU.error(\"Can't find frame \"..options.frame..\" to typeset into\")\
  end\
  SILE.typesetter:chuck()\
  SILE.typesetNaturally(SILE.frames[options.frame], function() SILE.process(content) end)\
end)\
\
return {\
  init = function () end,\
  exports = {\
    breakFrameVertical = breakFrameVertical\
  }\
}"
, '@'..".\\packages\\frametricks.lua" ) )

package.preload[ "lua-libraries\\std\\math" ] = assert( (loadstring or load)(
"--[[--\
 Additions to the math module.\
 @module std.math\
]]\
\
local _floor = math.floor\
\
\
--- Extend `math.floor` to take the number of decimal places.\
-- @function floor\
-- @param n number\
-- @param p number of decimal places to truncate to (default: 0)\
-- @return `n` truncated to `p` decimal places\
local function floor (n, p)\
  if p and p ~= 0 then\
    local e = 10 ^ p\
    return _floor (n * e) / e\
  else\
    return _floor (n)\
  end\
end\
\
\
--- Round a number to a given number of decimal places\
-- @function round\
-- @param n number\
-- @param p number of decimal places to round to (default: 0)\
-- @return `n` rounded to `p` decimal places\
local function round (n, p)\
  local e = 10 ^ (p or 0)\
  return _floor (n * e + 0.5) / e\
end\
\
\
local Math = {\
  floor  = floor,\
  round  = round,\
\
  -- Core Lua function implementations.\
  _floor = _floor,\
}\
\
for k, v in pairs (math) do\
  Math[k] = Math[k] or v\
end\
\
return Math\
"
, '@'..".\\lua-libraries\\std\\math.lua" ) )

package.preload[ "packages\\features" ] = assert( (loadstring or load)(
"local opentype = { -- Mapping of opentype features to friendly names\
  Ligatures = { \
    Required = \"rlig\", Common = \"liga\", Contextual = \"clig\", \
    Rare = \"dlig\", Discretionary = \"dlig\", Historic = \"hlig\"\
  },\
  Fractions = { On = \"frac\", Alternate = \"afrc\" },\
  StylisticSet = function(i) return string.format(\"ss%02i\", tonumber(i)) end,\
  Letters = { \
    Uppercase = \"case\", SmallCaps = \"smcp\", PetiteCaps = \"pcap\",\
    UppercaseSmallCaps = \"c2sc\", UppercasePetiteCaps = \"c2pc\",\
    Unicase = \"unic\"\
  },\
  Numbers = {\
    Uppercase = \"lnum\", Lining = \"lnum\", LowerCase = \"onum\", OldStyle = \"onum\",\
    Proportional = \"pnum\", monospaced = \"tnum\", SlashedZero = \"zero\", Arabic = \"anum\"\
  },\
  Contextuals = {\
    Swash = \"cswh\", Alternate = \"calt\", WordInitial = \"init\", WordFinal = \"fina\",\
    LineFinal = \"falt\", Inner = \"medi\"\
  },\
  VerticalPosition = {\
    Superior = \"sups\", Inferior = \"subs\", Numerator = \"numr\", Denominator = \"dnom\",\
    ScientificInferior = \"sinf\", Ordinal = \"ordn\"\
  },\
  -- XXX character variant\
  Style = {\
    Alternate = \"salt\", Italic= \"ital\",\
    Ruby= \"ruby\", Swash= \"swsh\", Historic= \"hist\", TitlingCaps= \"titl\", \
    HorizontalKana= \"hkna\", VerticalKana= \"vkna\"\
  },\
  Diacritics = {MarkToBase = \"mark\", MarkToMark = \"mkmk\", AboveBase = \"abvm\", BelowBase = \"blwm\" },\
  Kerning = { Uppercase = \"cpsp\", On = \"kern\" },\
  CJKShape = {\
    Traditional = \"trad\", Simplified = \"smpl\", JIS1978 = \"jp78\", \
    JIS1983 = \"jp83\", JIS1990 = \"jp90\", Expert = \"expt\", NLC = \"nlck\",\
  },\
  CharacterWidth = {\
    Proportional = \"pwid\", Full = \"fwid\", Half = \"hwid\", Third = \"twid\", \
    Quarter = \"qwid\", AlternateProportional = \"palt\", AlternateHalf = \"halt\", \
  },\
}\
\
-- Parser for feature strings\
local lpeg = require(\"lpeg\")\
local featurename = lpeg.C((1-lpeg.S(\",;:=\"))^1)\
local value = lpeg.C(SILE.parserBits.number.integer)\
local tag = lpeg.C(lpeg.S(\"+-\")) * featurename * (lpeg.P(\"=\") * value)^0 * lpeg.S(\",;:\")^-1 / function(pn,key,value) return key, { posneg = pn, value = value} end\
local featurestring = lpeg.Cf(lpeg.Ct(\"\") * tag^0, rawset)\
\
local featurestring2table = function(s)\
  return featurestring:match(s) or SU.error(\"Unparsable Opentype feature string '\"..s..\"'\")\
end\
\
local table2featurestring = function(t)\
  local t2 = {}\
  for k,v in pairs(t) do t2[#t2+1] = v.posneg..k..(v.value and \"=\"..v.value or \"\") end\
  return table.concat(t2, \";\")\
end\
\
SILE.registerCommand(\"add-font-feature\", function(o,c)\
  local t = featurestring2table(SILE.settings.get(\"font.features\"))\
  for k,v in pairs(o) do\
    if not opentype[k] then SU.warn(\"Unknown Opentype feature \"..k)\
    else\
      local posneg = \"+\"\
      v = v:gsub(\"^No\", function() posneg= \"-\"; return \"\" end)\
      local res\
      if type(opentype[k]) == \"function\" then res = opentype[k](v) else res = opentype[k][v] end\
      if not res then SU.error(\"Bad OpenType value \"..v..\" for feature \"..k) end\
      if type(res) == \"string\" then\
        t[res] = {posneg = posneg}\
      else\
        t[res.key] = { posneg = posneg, value = res.value}\
      end\
    end\
  end\
\
  SILE.settings.set(\"font.features\", table2featurestring(t))\
end)\
\
SILE.registerCommand(\"remove-font-feature\", function(o,c)\
  local t = featurestring2table(SILE.settings.get(\"font.features\"))\
\
  for k,v in pairs(o) do\
    if not opentype[k] then SU.warn(\"Unknown Opentype feature \"..k)\
    else\
      v = v:gsub(\"^No\", \"\")\
      local res\
      if type(opentype[k]) == \"function\" then res = opentype[k](v) else res = opentype[k][v] end\
      if not res then SU.error(\"Bad OpenType value \"..v..\" for feature \"..k) end\
      if type(res) == \"string\" then t[res] = nil else t[res.key] = nil end\
    end\
  end\
\
  SILE.settings.set(\"font.features\", table2featurestring(t))\
end)"
, '@'..".\\packages\\features.lua" ) )

package.preload[ "lua-libraries\\std\\optparse" ] = assert( (loadstring or load)(
"--[=[--\
 Parse and process command line options.\
\
     local OptionParser = require \"std.optparse\"\
\
     local parser = OptionParser [[\
     any text VERSION\
     Additional lines of text to show when the --version\
     option is passed.\
\
     Several lines or paragraphs are permitted.\
\
     Usage: PROGNAME\
\
     Banner text.\
\
     Optional long description text to show when the --help\
     option is passed.\
\
     Several lines or paragraphs of long description are permitted.\
\
     Options:\
\
       -b                       a short option with no long option\
           --long               a long option with no short option\
           --another-long       a long option with internal hypen\
       -v, --verbose            a combined short and long option\
       -n, --dryrun, --dry-run  several spellings of the same option\
       -u, --name=USER          require an argument\
       -o, --output=[FILE]      accept an optional argument\
           --version            display version information, then exit\
           --help               display this help, then exit\
\
    Footer text.  Several lines or paragraphs are permitted.\
\
    Please report bugs at bug-list@yourhost.com\
    ]]\
\
    _G.arg, _G.opts = parser:parse (_G.arg)\
\
 Most often, everything else is handled automatically.  After calling\
 `parser:parse` as shown above, `_G.arg` will contain unparsed arguments,\
 usually filenames or similar, and `_G.opts` will be a table of parsed\
 option values. The keys to the table are the long-options with leading\
 hyphens stripped, and non-word characters turned to `_`.  For example\
 if `--another-long` had been found in `_G.arg` then `_G.opts` would\
 have a key named `another_long`.  If there is no long option name, then\
 the short option is used, e.g. `_G.opts.b` will be set.  The values\
 saved in those keys are controlled by the option handler, usually just\
 `true` or the option argument string as appropriate.\
\
 On those occasions where more complex processing is required, handlers\
 can be replaced or added using parser:@{on}.  A good option to always\
 add, is to make `--` signal the end of processed options, so that any\
 options following `--` on the command line, even if they begin with a\
 hyphen and look like options otherwise, are not processed but instead\
 left in the modified `_G.arg` returned by `parser:parse`:\
\
     parser:on ('--', parser.finished)\
\
 See the documentation for @{std.optparse:on} for more details of how to\
 use this powerful method.\
\
 When writing your own handlers for @{std.optparse:on}, you only need\
 to deal with normalised arguments, because combined short arguments\
 (`-xyz`), equals separators to long options (`--long=ARG`) are fully\
 expanded before any handler is called.\
\
 Note that @{std.io.die} and @{std.io.warn} will only prefix messages\
 with `parser.program` if the parser options are assigned back to\
 `_G.opts` as shown in the example above.\
\
 @classmod std.optparse\
]=]\
\
\
local OptionParser -- forward declaration\
\
\
------\
-- Customized parser for your options.\
--\
-- This table is returned by @{OptionParser}, and most importantly has\
-- the @{parse} method you call to fill the `opts` table according to\
-- what command-line options were passed to your program.\
-- @table parser\
-- @string program the first word following `Usage:` in @{OptionParser}\
--   spec string\
-- @string version the last white-space delimited word on the first line\
--   of text in the spec string\
-- @string versiontext everything preceding `Usage:` in the spec string,\
--   and which will be displayed by the @{version} @{on_handler}\
-- @string helptext everything including and following `Usage:` in the\
--   spec string and which will be displayed by the @{help}\
--   @{on_handler}\
-- @func parse see @{parse}\
-- @func on see @{on}\
\
\
--[[ ----------------- ]]--\
--[[ Helper Functions. ]]--\
--[[ ----------------- ]]--\
\
\
local optional, required\
\
\
--- Normalise an argument list.\
-- Separate short options, remove `=` separators from\
-- `--long-option=optarg` etc.\
-- @local\
-- @function normalise\
-- @tparam table arglist list of arguments to normalise\
-- @treturn table normalised argument list\
local function normalise (self, arglist)\
  -- First pass: Normalise to long option names, without '=' separators.\
  local normal = {}\
  local i = 0\
  while i < #arglist do\
    i = i + 1\
    local opt = arglist[i]\
\
    -- Split '--long-option=option-argument'.\
    if opt:sub (1, 2) == \"--\" then\
      local x = opt:find (\"=\", 3, true)\
      if x then\
        table.insert (normal, opt:sub (1, x - 1))\
        table.insert (normal, opt:sub (x + 1))\
      else\
        table.insert (normal, opt)\
      end\
\
    elseif opt:sub (1, 1) == \"-\" and string.len (opt) > 2 then\
      local rest\
      repeat\
        opt, rest = opt:sub (1, 2), opt:sub (3)\
\
        table.insert (normal, opt)\
\
        -- Split '-xyz' into '-x -yz', and reiterate for '-yz'\
        if self[opt].handler ~= optional and\
           self[opt].handler ~= required then\
\9  if string.len (rest) > 0 then\
            opt = \"-\" .. rest\
\9  else\
\9    opt = nil\
\9  end\
\
        -- Split '-xshortargument' into '-x shortargument'.\
        else\
          table.insert (normal, rest)\
          opt = nil\
        end\
      until opt == nil\
    else\
      table.insert (normal, opt)\
    end\
  end\
\
  normal[-1], normal[0]  = arglist[-1], arglist[0]\
  return normal\
end\
\
\
--- Store `value` with `opt`.\
-- @local\
-- @function set\
-- @string opt option name\
-- @param value option argument value\
local function set (self, opt, value)\
  local key = self[opt].key\
\
  if type (self.opts[key]) == \"table\" then\
    table.insert (self.opts[key], value)\
  elseif self.opts[key] ~= nil then\
    self.opts[key] = { self.opts[key], value }\
  else\
    self.opts[key] = value\
  end\
end\
\
\
\
--[[ ============= ]]--\
--[[ Option Types. ]]--\
--[[ ============= ]]--\
\
\
--- Option at `arglist[i]` can take an argument.\
-- Argument is accepted only if there is a following entry that does not\
-- begin with a '-'.\
--\
-- This is the handler automatically assigned to options that have\
-- `--opt=[ARG]` style specifications in the @{OptionParser} spec\
-- argument.  You can also pass it as the `handler` argument to @{on} for\
-- options you want to add manually without putting them in the\
-- @{OptionParser} spec.\
--\
-- Like @{required}, this handler will store multiple occurrences of a\
-- command-line option.\
-- @static\
-- @tparam table arglist list of arguments\
-- @int i index of last processed element of `arglist`\
-- @param[opt=true] value either a function to process the option\
--   argument, or a default value if encountered without an optarg\
-- @treturn int index of next element of `arglist` to process\
function optional (self, arglist, i, value)\
  if i + 1 <= #arglist and arglist[i + 1]:sub (1, 1) ~= \"-\" then\
    return self:required (arglist, i, value)\
  end\
\
  if type (value) == \"function\" then\
    value = value (self, opt, nil)\
  elseif value == nil then\
    value = true\
  end\
\
  set (self, arglist[i], value)\
  return i + 1\
end\
\
\
--- Option at `arglist[i}` requires an argument.\
--\
-- This is the handler automatically assigned to options that have\
-- `--opt=ARG` style specifications in the @{OptionParser} spec argument.\
-- You can also pass it as the `handler` argument to @{on} for options\
-- you want to add manually without putting them in the @{OptionParser}\
-- spec.\
--\
-- Normally the value stored in the `opt` table by this handler will be\
-- the string given as the argument to that option on the command line.\
-- However, if the option is given on the command-line multiple times,\
-- `opt[\"name\"]` will end up with all those arguments stored in the\
-- array part of a table:\
--\
--     $ cat ./prog\
--     ...\
--     parser:on ({\"-e\", \"-exec\"}, required)\
--     _G.arg, _G.opt = parser:parse (_G.arg)\
--     print std.string.tostring (_G.opt.exec)\
--     ...\
--     $ ./prog -e '(foo bar)' -e '(foo baz)' -- qux\
--     {1=(foo bar),2=(foo baz)}\
-- @static\
-- @tparam table arglist list of arguments\
-- @int i index of last processed element of `arglist`\
-- @param[opt] value either a function to process the option argument,\
--   or a forced value to replace the user's option argument.\
-- @treturn int index of next element of `arglist` to process\
function required (self, arglist, i, value)\
  local opt = arglist[i]\
  if i + 1 > #arglist then\
    self:opterr (\"option '\" .. opt .. \"' requires an argument\")\
    return i + 1\
  end\
\
  if type (value) == \"function\" then\
    value = value (self, opt, arglist[i + 1])\
  elseif value == nil then\
    value = arglist[i + 1]\
  end\
\
  set (self, opt, value)\
  return i + 2\
end\
\
\
--- Finish option processing\
--\
-- This is the handler automatically assigned to the option written as\
-- `--` in the @{OptionParser} spec argument.  You can also pass it as\
-- the `handler` argument to @{on} if you want to manually add an end\
-- of options marker without writing it in the @{OptionParser} spec.\
--\
-- This handler tells the parser to stop processing arguments, so that\
-- anything after it will be an argument even if it otherwise looks\
-- like an option.\
-- @static\
-- @tparam table arglist list of arguments\
-- @int i index of last processed element of `arglist`\
-- @treturn int index of next element of `arglist` to process\
local function finished (self, arglist, i)\
  for opt = i + 1, #arglist do\
    table.insert (self.unrecognised, arglist[opt])\
  end\
  return 1 + #arglist\
end\
\
\
--- Option at `arglist[i]` is a boolean switch.\
--\
-- This is the handler automatically assigned to options that have\
-- `--long-opt` or `-x` style specifications in the @{OptionParser} spec\
-- argument. You can also pass it as the `handler` argument to @{on} for\
-- options you want to add manually without putting them in the\
-- @{OptionParser} spec.\
--\
-- Beware that, _unlike_ @{required}, this handler will store multiple\
-- occurrences of a command-line option as a table **only** when given a\
-- `value` function.  Automatically assigned handlers do not do this, so\
-- the option will simply be `true` if the option was given one or more\
-- times on the command-line.\
-- @static\
-- @tparam table arglist list of arguments\
-- @int i index of last processed element of `arglist`\
-- @param[opt] value either a function to process the option argument,\
--   or a value to store when this flag is encountered\
-- @treturn int index of next element of `arglist` to process\
local function flag (self, arglist, i, value)\
  local opt = arglist[i]\
  if type (value) == \"function\" then\
    set (self, opt, value (self, opt, true))\
  elseif value == nil then\
    local key = self[opt].key\
    self.opts[key] = true\
  end\
\
  return i + 1\
end\
\
\
--- Option should display help text, then exit.\
--\
-- This is the handler automatically assigned tooptions that have\
-- `--help` in the specification, e.g. `-h, -?, --help`.\
-- @static\
-- @function help\
local function help (self)\
  print (self.helptext)\
  os.exit (0)\
end\
\
\
--- Option should display version text, then exit.\
--\
-- This is the handler automatically assigned tooptions that have\
-- `--version` in the specification, e.g. `-V, --version`.\
-- @static\
-- @function version\
local function version (self)\
  print (self.versiontext)\
  os.exit (0)\
end\
\
\
\
--[[ =============== ]]--\
--[[ Argument Types. ]]--\
--[[ =============== ]]--\
\
\
--- Map various option strings to equivalent Lua boolean values.\
-- @table boolvals\
-- @field false false\
-- @field 0 false\
-- @field no false\
-- @field n false\
-- @field true true\
-- @field 1 true\
-- @field yes true\
-- @field y true\
local boolvals = {\
  [\"false\"] = false, [\"true\"]  = true,\
  [\"0\"]     = false, [\"1\"]     = true,\
  no        = false, yes       = true,\
  n         = false, y         = true,\
}\
\
\
--- Return a Lua boolean equivalent of various `optarg` strings.\
-- Report an option parse error if `optarg` is not recognised.\
--\
-- Pass this as the `value` function to @{on} when you want various\
-- *truthy* or *falsey* option arguments to be coerced to a Lua `true`\
-- or `false` respectively in the options table.\
-- @static\
-- @string opt option name\
-- @string[opt=\"1\"] optarg option argument, must be a key in @{boolvals}\
-- @treturn bool `true` or `false`\
local function boolean (self, opt, optarg)\
  if optarg == nil then optarg = \"1\" end -- default to truthy\
  local b = boolvals[tostring (optarg):lower ()]\
  if b == nil then\
    return self:opterr (optarg .. \": Not a valid argument to \" ..opt[1] .. \".\")\
  end\
  return b\
end\
\
\
--- Report an option parse error unless `optarg` names an\
-- existing file.\
--\
-- Pass this as the `value` function to @{on} when you want to accept\
-- only option arguments that name an existing file.\
-- @fixme this only checks whether the file has read permissions\
-- @static\
-- @string opt option name\
-- @string optarg option argument, must be an existing file\
-- @treturn `optarg`\
local function file (self, opt, optarg)\
  local h, errmsg = io.open (optarg, \"r\")\
  if h == nil then\
    return self:opterr (optarg .. \": \" .. errmsg)\
  end\
  h:close ()\
  return optarg\
end\
\
\
\
--[[ =============== ]]--\
--[[ Option Parsing. ]]--\
--[[ =============== ]]--\
\
\
--- Report an option parse error, then exit with status 2.\
--\
-- Use this in your custom option handlers for consistency with the\
-- error output from built-in `optparse` error messages.\
-- @static\
-- @string msg error message\
local function opterr (self, msg)\
  local prog = self.program\
  -- Ensure final period.\
  if msg:match (\"%.$\") == nil then msg = msg .. \".\" end\
  io.stderr:write (prog .. \": error: \" .. msg .. \"\\n\")\
  io.stderr:write (prog .. \": Try '\" .. prog .. \" --help' for help.\\n\")\
  os.exit (2)\
end\
\
\
------\
-- Function signature of an option handler for @{on}.\
-- @function on_handler\
-- @tparam table arglist list of arguments\
-- @int i index of last processed element of `arglist`\
-- @param[opt=nil] value additional `value` registered with @{on}\
-- @treturn int index of next element of `arglist` to process\
\
\
--- Add an option handler.\
--\
-- When the automatically assigned option handlers don't do everything\
-- you require, or when you don't want to put an option into the\
-- @{OptionParser} `spec` argument, use this function to specify custom\
-- behaviour.  If you write the option into the `spec` argument anyway,\
-- calling this function will replace the automatically assigned handler\
-- with your own.\
--\
--     parser:on (\"--\", parser.finished)\
--     parser:on (\"-V\", parser.version)\
--     parser:on (\"--config-file\", parser.required, parser.file)\
--     parser:on (\"--enable-nls\", parser.optional, parser.boolean)\
-- @function on\
-- @tparam[string|table] opts name of the option, or list of option names\
-- @tparam on_handler handler function to call when any of `opts` is\
--   encountered\
-- @param value additional value passed to @{on_handler}\
local function on (self, opts, handler, value)\
  if type (opts) == \"string\" then opts = { opts } end\
  handler = handler or flag -- unspecified options behave as flags\
\
  normal = {}\
  for _, optspec in ipairs (opts) do\
    optspec:gsub (\"(%S+)\",\
                  function (opt)\
                    -- 'x' => '-x'\
                    if string.len (opt) == 1 then\
                      opt = \"-\" .. opt\
\
                    -- 'option-name' => '--option-name'\
                    elseif opt:match (\"^[^%-]\") ~= nil then\
                      opt = \"--\" .. opt\
                    end\
\
                    if opt:match (\"^%-[^%-]+\") ~= nil then\
                      -- '-xyz' => '-x -y -z'\
                      for i = 2, string.len (opt) do\
                        table.insert (normal, \"-\" .. opt:sub (i, i))\
                      end\
                    else\
                      table.insert (normal, opt)\
                    end\
                  end)\
  end\
\
  -- strip leading '-', and convert non-alphanums to '_'\
  key = normal[#normal]:match (\"^%-*(.*)$\"):gsub (\"%W\", \"_\")\
\
  for _, opt in ipairs (normal) do\
    self[opt] = { key = key, handler = handler, value = value }\
  end\
end\
\
\
------\
-- Parsed options table, with a key for each encountered option, each\
-- with value set by that option's @{on_handler}.  Where an option\
-- has one or more long-options specified, the key will be the first\
-- one of those with leading hyphens stripped and non-alphanumeric\
-- characters replaced with underscores.  For options that can only be\
-- specified by a short option, the key will be the letter of the first\
-- of the specified short options:\
--\
--     {\"-e\", \"--eval-file\"} => opts.eval_file\
--     {\"-n\", \"--dryrun\", \"--dry-run\"} => opts.dryrun\
--     {\"-t\", \"-T\"} => opts.t\
--\
-- Generally there will be one key for each previously specified\
-- option (either automatically assigned by @{OptionParser} or\
-- added manually with @{on}) containing the value(s) assigned by the\
-- associated @{on_handler}.  For automatically assigned handlers,\
-- that means `true` for straight-forward flags and\
-- optional-argument options for which no argument was given; or else\
-- the string value of the argument passed with an option given only\
-- once; or a table of string values of the same for arguments given\
-- multiple times.\
--\
--     ./prog -x -n -x => opts = { x = true, dryrun = true }\
--     ./prog -e '(foo bar)' -e '(foo baz)'\
--         => opts = {eval_file = {\"(foo bar)\", \"(foo baz)\"} }\
--\
-- If you write your own handlers, or otherwise specify custom\
-- handling of options with @{on}, then whatever value those handlers\
-- return will be assigned to the respective keys in `opts`.\
-- @table opts\
\
\
--- Parse `arglist`.\
-- @tparam table arglist list of arguments\
-- @treturn table a list of unrecognised `arglist` elements\
-- @treturn opts parsing results\
local function parse (self, arglist)\
  self.unrecognised = {}\
\
  arglist = normalise (self, arglist)\
\
  local i = 1\
  while i > 0 and i <= #arglist do\
    local opt = arglist[i]\
\
    if self[opt] == nil then\
      table.insert (self.unrecognised, opt)\
      i = i + 1\
\
      -- Following non-'-' prefixed argument is an optarg.\
      if i <= #arglist and arglist[i]:match \"^[^%-]\" then\
        table.insert (self.unrecognised, arglist[i])\
        i = i + 1\
      end\
\
    -- Run option handler functions.\
    else\
      assert (type (self[opt].handler) == \"function\")\
\
      i = self[opt].handler (self, arglist, i, self[opt].value)\
    end\
  end\
\
  -- metatable allows `io.warn` to find `parser.program` when assigned\
  -- back to _G.opts.\
  return self.unrecognised, setmetatable (self.opts, {__index = self})\
end\
\
\
--- @export\
local methods = {\
  boolean  = boolean,\
  file     = file,\
  finished = finished,\
  flag     = flag,\
  help     = help,\
  optional = optional,\
  required = required,\
  version  = version,\
\
  on     = on,\
  opterr = opterr,\
  parse  = parse,\
}\
\
\
\
--- Take care not to register duplicate handlers.\
-- @param current current handler value\
-- @param new new handler value\
-- @return `new` if `current` is nil\
local function set_handler (current, new)\
  assert (current == nil, \"only one handler per option\")\
  return new\
end\
\
\
--- Instantiate a new parser.\
-- Read the documented options from `spec` and return a new parser that\
-- can be passed to @{parse} for parsing those options from an argument\
-- list.  Options are recognised as lines that begin with at least two\
-- spaces, followed by a hyphen.\
-- @static\
-- @string spec option parsing specification\
-- @treturn parser a parser for options described by `spec`\
function OptionParser (spec)\
  local parser = setmetatable ({ opts = {} }, { __index = methods })\
\
  parser.versiontext, parser.version, parser.helptext, parser.program =\
    spec:match (\"^([^\\n]-(%S+)\\n.-)%s*([Uu]sage: (%S+).-)%s*$\")\
\
  if parser.versiontext == nil then\
    error (\"OptionParser spec argument must match '<version>\\\\n\" ..\
           \"...Usage: <program>...'\")\
  end\
\
  -- Collect helptext lines that begin with two or more spaces followed\
  -- by a '-'.\
  local specs = {}\
  parser.helptext:gsub (\"\\n  %s*(%-[^\\n]+)\",\
                        function (spec) table.insert (specs, spec) end)\
\
  -- Register option handlers according to the help text.\
  for _, spec in ipairs (specs) do\
    local options, handler = {}\
\
    -- Loop around each '-' prefixed option on this line.\
    while spec:sub (1, 1) == \"-\" do\
\
      -- Capture end of options processing marker.\
      if spec:match \"^%-%-,?%s\" then\
        handler = set_handler (handler, finished)\
\
      -- Capture optional argument in the option string.\
      elseif spec:match \"^%-[%-%w]+=%[.+%],?%s\" then\
        handler = set_handler (handler, optional)\
\
      -- Capture required argument in the option string.\
      elseif spec:match \"^%-[%-%w]+=%S+,?%s\" then\
        handler = set_handler (handler, required)\
\
      -- Capture any specially handled arguments.\
      elseif spec:match \"^%-%-help,?%s\" then\
        handler = set_handler (handler, help)\
\
      elseif spec:match \"^%-%-version,?%s\" then\
        handler = set_handler (handler, version)\
      end\
\
      -- Consume argument spec, now that it was processed above.\
      spec = spec:gsub (\"^(%-[%-%w]+)=%S+%s\", \"%1 \")\
\
      -- Consume short option.\
      local _, c = spec:gsub (\"^%-([-%w]),?%s+(.*)$\",\
                              function (opt, rest)\
                                if opt == \"-\" then opt = \"--\" end\
                                table.insert (options, opt)\
                                spec = rest\
                              end)\
\
      -- Be careful not to consume more than one option per iteration,\
      -- otherwise we might miss a handler test at the next loop.\
      if c == 0 then\
        -- Consume long option.\
        spec:gsub (\"^%-%-([%-%w]+),?%s+(.*)$\",\
                   function (opt, rest)\
                     table.insert (options, opt)\
                     spec = rest\
                   end)\
      end\
    end\
\
    -- Unless specified otherwise, treat each option as a flag.\
    parser:on (options, handler or flag)\
  end\
\
  return parser\
end\
\
\
-- Support calling the returned table:\
return setmetatable (methods, {\
  __call = function (_, ...)\
             return OptionParser (...)\
           end,\
})\
"
, '@'..".\\lua-libraries\\std\\optparse.lua" ) )

package.preload[ "core\\baseclass" ] = assert( (loadstring or load)(
"SILE.Commands = {}\
SILE.Help = {}\
function SILE.registerCommand (name, f, help, pack) \
  SILE.Commands[name] = f \
  if not pack then\
    local where = debug.getinfo(2).source\
    pack = where:match(\"(%w+).lua\")\
  end\
  --if not help and not pack:match(\".sil\") then SU.error(\"Could not define command '\"..name..\"' (in package \"..pack..\") - no help text\" ) end\
\
  SILE.Help[name] = {\
    description = help,\
    where = pack\
  }\
end\
\
function SILE.doTexlike (doc)\
  doc = \"\\\\begin{document}\"..doc..\"\\\\end{document}\"\
  SILE.process(SILE.inputs.TeXlike.docToTree(doc))\
end\
\
SILE.baseClass = std.object {\
  registerCommands = (function()\
    SILE.registerCommand(\"\\\\\", function(o,c)  SILE.typesetter:typeset(\"\\\\\") end)\
\
    local commandStack = {};\
    SILE.registerCommand(\"define\", function (options, content)\
      SU.required(options, \"command\", \"defining command\")\
      SILE.registerCommand(options[\"command\"], function(o,c)\
        --local prevState = SILE.documentState;\
        --SILE.documentState = std.tree.clone( prevState )\
        table.insert(commandStack, c)\
        SILE.process(content)\
        --SILE.documentState = prevState\
      end, options.help, SILE.currentlyProcessingFile)\
    end, \"Define a new macro. \\\\define[command=example]{ ... \\\\process }\")\
\
    SILE.registerCommand(\"comment\", function(o,c) end, \"Ignores any text within this command's body.\");\
    SILE.registerCommand(\"process\", function()\
      SILE.process(table.remove(commandStack));\
    end, \"Within a macro definition, processes the contents of the macro body.\")\
\
    SILE.registerCommand(\"script\", function(options, content)\
      if (options[\"src\"]) then \
        require(options[\"src\"])\
      else \
        p,e = loadstring(content[1])\
        if not p then SU.error(e) end\
        p()\
      end\
    end, \"Runs lua code. The code may be supplied either inline or using the src=... option. (Think HTML.)\")\
\
    SILE.registerCommand(\"include\", function(options, content)\
        SILE.readFile(options[\"src\"]);\
    end, \"Includes a SILE file for processing.\")\
\
    SILE.registerCommand(\"pagetemplate\", function (options, content) \
      SILE.documentState.thisPageTemplate = { frames = {} };\
      SILE.process(content);\
      SILE.documentState.thisPageTemplate.firstContentFrame = SILE.getFrame(options[\"first-content-frame\"]);\
      SILE.typesetter:initFrame(SILE.documentState.thisPageTemplate.firstContentFrame);\
    end, \"Defines a new page template for the current page and sets the typesetter to use it.\")\
\
    SILE.registerCommand(\"frame\", function (options, content)\
      -- local spec = {\
      --   id = options.id,\
      --   next = options.next,\
      --   balanced = (options.balanced or false),\
      --   top = options.top,\
      --   bottom = options.bottom,\
      --   left = options.left,\
      --   right = options.right,\
      --   width = options.width,\
      --   height = options.height\
      -- };\
      SILE.documentState.thisPageTemplate.frames[options.id] = SILE.newFrame(options);\
    end, \"Declares (or re-declares) a frame on this page.\")\
\
    SILE.registerCommand(\"penalty\", function(options, content)\
      if (SILE.typesetter:vmode() or options.vertical) then\
        SILE.typesetter:pushVpenalty({ flagged= tonumber(options.flagged), penalty = tonumber(options.penalty) })\
      else\
        SILE.typesetter:pushPenalty({ flagged= tonumber(options.flagged), penalty = tonumber(options.penalty) })\
      end\
    end, \"Inserts a penalty node. Options are penalty= for the size of the penalty and flagged= if this is a flagged penalty.\")\
\
    SILE.registerCommand(\"glue\", function(options, content) \
      SILE.typesetter:pushGlue({ \
        width = SILE.length.parse(options.width)\
      })\
    end, \"Inserts a glue node. The width option denotes the glue dimension.\")\
\
    SILE.registerCommand(\"skip\", function(options, content)\
      SILE.typesetter:leaveHmode();\
      SILE.typesetter:pushVglue({ height = SILE.length.parse(options.height) })\
    end, \"Inserts vertical skip. The height options denotes the skip dimension.\")\
\
    SILE.registerCommand(\"par\", function(options, content) \
      SILE.typesetter:leaveHmode()\
      SILE.documentState.documentClass.endPar(SILE.typesetter)\
    end, \"Ends the current paragraph.\")\
\
  end),\
\
  pageTemplate = std.object { frames= {}, firstContentFrame= nil },\
  deferredInit = {},\
  loadPackage = function(self, packname, args)\
    local pack = require(\"packages/\"..packname)\
    if type(pack) == \"table\" then \
      self:mapfields(pack.exports)\
      if pack.init then\
        table.insert(SILE.baseClass.deferredInit, function () pack.init(self, args) end)\
      end\
    end\
  end,\
  init = function(self)\
    SILE.settings.declare({\
      name = \"current.parindent\",\
      type = \"Glue\",\
      default = SILE.settings.get(\"document.parindent\"),\
      help = \"Glue at start of paragraph\"\
    })\
    SILE.outputter.init(self); \
    self:registerCommands();\
    -- Call all stored package init routines\
    for i = 1,#(SILE.baseClass.deferredInit) do (SILE.baseClass.deferredInit[i])() end\
    return self:initialFrame();\
  end,\
  initialFrame= function(self)\
    SILE.documentState.thisPageTemplate = std.tree.clone(self.pageTemplate)\
    local p = SILE.frames.page\
    SILE.frames = {page = p}\
    for k,v in pairs(SILE.documentState.thisPageTemplate.frames) do\
      SILE.frames[k] = v\
    end\
    SILE.documentState.thisPageTemplate.firstContentFrame:invalidate()\
    return SILE.documentState.thisPageTemplate.firstContentFrame\
  end,\
  declareFrame = function (self, id, spec)\
    -- local fW = function (val) return function() return SILE.parseComplexFrameDimension(val, \"w\"); end end\
    -- local fH = function (val) return function() return SILE.parseComplexFrameDimension(val, \"h\"); end end\
    spec.id = id\
    SILE.frames[id] = nil\
    self.pageTemplate.frames[id] = SILE.newFrame(spec)\
    --   next= spec.next,\
    --   left= spec.left and fW(spec.left),\
    --   right= spec.right and fW(spec.right),\
    --   top= spec.top and fH(spec.top),\
    --   bottom= spec.bottom and fH(spec.bottom),\
    --   height = spec.height and fH(spec.height),\
    --   width = spec.width and fH(spec.width),\
    --   id = id\
    -- });\
  end,\
  newPage = function(self) \
    SILE.outputter:newPage();\
    -- Any other output-routiney things will be done here by inheritors\
    return self:initialFrame();\
  end,\
  endPage= function()\
    SILE.typesetter.frame:leave()\
    SILE.typesetter:leaveHmode();\
    -- Any other output-routiney things will be done here by inheritors\
  end,\
  finish = function(self)\
    SILE.call(\"supereject\")\
    SILE.typesetter:leaveHmode(1)\
    self:endPage()\
    SILE.outputter:finish()\
 end,\
  newPar = function(typesetter)\
    typesetter:pushGlue(SILE.settings.get(\"current.parindent\"))\
    SILE.settings.set(\"current.parindent\", SILE.settings.get(\"document.parindent\"))    \
  end,\
  endPar = function(typesetter)\
    typesetter:pushVglue(SILE.settings.get(\"document.parskip\"))\
  end,\
  options= { \
    papersize= function(size)\
      _, _, x, y = string.find(size, \"(.+)%s+x%s+(.+)\")\
      if x then\
        SILE.documentState.paperSize ={ SILE.toPoints(x), SILE.toPoints(y) };\
      elseif (SILE.paperSizes[size]) then\
        SILE.documentState.paperSize = SILE.paperSizes[size];\
      else\
        SU.error(\"Unknown paper size \"..size);\
      end\
      SILE.newFrame({id = \"page\", left = 0, top = 0, right = SILE.documentState.paperSize[1], bottom = SILE.documentState.paperSize[2] })\
    end\
  }\
}"
, '@'..".\\core\\baseclass.lua" ) )

package.preload[ "packages\\color" ] = assert( (loadstring or load)(
"\
SILE.registerCommand(\"color\", function(options, content)\
  local color = options.color or \"black\"\
  color = SILE.colorparser(color)\
  SILE.typesetter:pushHbox({ \
    outputYourself= function () SILE.outputter:pushColor(color) end\
  });\
  SILE.process(content)\
  SILE.typesetter:pushHbox({ \
    outputYourself= function () SILE.outputter:popColor() end\
  });\
end, \"Changes the active ink color to the color <color>.\");\
"
, '@'..".\\packages\\color.lua" ) )

package.preload[ "packages\\bidi" ] = assert( (loadstring or load)(
"SILE.registerCommand(\"thisframeLTR\", function(options, content)\
  SILE.typesetter.frame.direction = \"LTR\"\
  SILE.typesetter:leaveHmode()\
end);\
\
SILE.registerCommand(\"thisframeRTL\", function(options, content)\
  SILE.typesetter.frame.direction = \"RTL\"\
  SILE.typesetter:leaveHmode()\
end);\
\
local bidi = require(\"unicode-bidi-algorithm\")\
\
SILE.typesetter.boxUpNodes = function (self)\
  self.state.nodes = bidi.process(SILE.hyphenate(self.state.nodes), self.frame)\
  return SILE.defaultTypesetter.boxUpNodes(self)\
end"
, '@'..".\\packages\\bidi.lua" ) )

package.preload[ "lua-libraries\\imagesize\\util" ] = assert( (loadstring or load)(
"local M = { _NAME = \"imagesize.util\" }\
\
function M.get_uint16_le (s, p)\
    local a, b = s:byte(p, p + 1)\
    return a + b * 256\
end\
\
function M.get_uint16_be (s, p)\
    local a, b = s:byte(p, p + 1)\
    return a * 256 + b\
end\
\
function M.get_uint32_le (s, p)\
    local a, b, c, d = s:byte(p, p + 3)\
    return a + b * 256 + c * 65536 + d * 16777216\
end\
\
function M.get_uint32_be (s, p)\
    local a, b, c, d = s:byte(p, p + 3)\
    return a * 16777216 + b * 65536 + c * 256 + d\
end\
\
return M\
-- vi:ts=4 sw=4 expandtab\
"
, '@'..".\\lua-libraries\\imagesize\\util.lua" ) )

package.preload[ "lua-libraries\\unicode-bidi-algorithm" ] = assert( (loadstring or load)(
"bidi            = bidi or { }\
\
bidi.module     = {\
  name        = \"bidi\",\
  version     = 0.003,\
  date        = \"2011/09/05\",\
  description = \"Unicode Bidirectional Algorithm implementation for LuaTeX\",\
  author      = \"Khaled Hosny\",\
  copyright   = \"Khaled Hosny\",\
  license     = \"CC0\",\
}\
\
if not modules then modules = { } end modules ['bidi'] = bidi.module\
\
--[[\
  This code started as a line for line translation of Arabeyes' minibidi.c from\
  C to lua, excluding parts that of no use to us like shaping.\
\
  The C code is Copyright (c) 2004 Ahmad Khalifa, and is distributed under the\
  MIT Licence. The full license text:\
  http://svn.arabeyes.org/viewvc/projects/adawat/minibidi/LICENCE\
--]]\
\
local MAX_STACK = 60\
\
local format, upper, max = string.format, string.upper, math.max\
require(\"char-def\")\
local chardata  = characters.data\
\
local function get_bidi_type(c)\
  local dir = chardata[c] and chardata[c].direction or \"l\"\
  return dir\
end\
\
local function get_mirror(c)\
  local mir = chardata[c] and chardata[c].mirror\
  return mir\
end\
\
local function odd(x)\
  return x%2 == 1 and true or false\
end\
\
local function least_greater_odd(x)\
  return odd(x) and x+2 or x+1\
end\
\
local function least_greater_even(x)\
  return odd(x) and x+1 or x+2\
end\
\
local function type_of_level(x)\
  return odd(x) and \"r\" or \"l\"\
end\
\
local function dir_of_level(x)\
  return format(\"T%sT\", upper(type_of_level(x)))\
end\
\
local function Set(list)\
  local set = {}\
  for _,v in ipairs(list) do\
    set[v] = true\
  end\
  return set\
end\
\
local function is_whitespace(x)\
  if Set{\"lre\", \"rle\", \"lro\", \"rlo\", \"pdf\", \"bn\", \"ws\"}[x] then\
    return true\
  end\
end\
\
local function find_run_limit(line, run_start, limit, types)\
  local run_limit = run_start\
  local i = run_start\
  while i <= limit and Set(types)[line[i].type] do\
    run_limit = i\
    i = i + 1\
  end\
  return run_limit\
end\
\
local function get_base_level(line)\
  -- P2, P3\
  for _,c in next, line do\
    if c.type == \"r\" or c.type == \"al\" then\
      return 1\
    elseif c.type == \"l\" then\
      return 0\
    end\
  end\
  return 0\
end\
\
local function resolve_explicit(line, base_level)\
  --[[\
  to be checked:\
  X1. Begin by setting the current embedding level to the paragraph\
    embedding level. Set the directional override status to neutral.\
  X8. All explicit directional embeddings and overrides are completely\
  terminated at the end of each paragraph. Paragraph separators are not\
  included in the embedding. (Useless here) NOT IMPLEMENTED\
  --]]\
\
  local curr_level    = base_level\
  local curr_override = \"on\"\
  local stack         = { }\
\
  for _,c in next, line do\
    -- X2\
    if c.type == \"rle\" then\
      if #stack <= MAX_STACK then\
        table.insert  (stack, {curr_level, curr_override})\
        curr_level    = least_greater_odd(curr_level)\
        curr_override =  \"on\"\
        c.level       = curr_level\
        c.type        = \"bn\"\
        c.remove      = true\
      end\
    -- X3\
    elseif c.type == \"lre\" then\
      if #stack < MAX_STACK then\
        table.insert  (stack, {curr_level, curr_override})\
        curr_level    = least_greater_even(curr_level)\
        curr_override =  \"on\"\
        c.level       = curr_level\
        c.type        = \"bn\"\
        c.remove      = true\
      end\
    -- X4\
    elseif c.type == \"rlo\" then\
      if #stack <= MAX_STACK then\
        table.insert  (stack, {curr_level, curr_override})\
        curr_level    = least_greater_odd(curr_level)\
        curr_override = \"r\"\
        c.level       = curr_level\
        c.type        = \"bn\"\
        c.remove      = true\
      end\
    -- X5\
    elseif c.type == \"lro\" then\
      if #stack < MAX_STACK then\
        table.insert  (stack, {curr_level, curr_override})\
        curr_level    = least_greater_even(curr_level)\
        curr_override = \"l\"\
        c.level       = curr_level\
        c.type        = \"bn\"\
        c.remove      = true\
      end\
    -- X7\
    elseif c.type == \"pdf\" then\
      if #stack > 0 then\
        curr_level, curr_override = unpack(table.remove(stack))\
        c.level  = curr_level\
        c.type   = \"bn\"\
        c.remove = true\
      end\
    -- X6\
    else\
      c.level = curr_level\
      if curr_override ~= \"on\" then\
        c.type  = curr_override\
      end\
    end\
  end\
end\
\
local function resolve_weak(line, start, limit, sor, eor)\
  -- W1\
  for i = start, limit do\
    local c = line[i]\
    if c.type == \"nsm\" then\
      if i == start then\
        c.type = sor\
      else\
        c.type = line[i-1].type\
      end\
    end\
  end\
\
  -- W2\
  for i = start, limit do\
    local c = line[i]\
    if c.type == \"en\" then\
      for j = i - 1, start, -1 do\
        local bc = line[j]\
        if bc.type == \"al\" then\
          c.type = \"an\"\
          break\
        elseif bc.type == \"r\" or bc.type == \"l\" then\
          break\
        end\
      end\
    end\
  end\
\
  -- W3\
  for i = start, limit do\
    local c = line[i]\
    if c.type == \"al\" then\
      c.type = \"r\"\
    end\
  end\
\
  -- W4\
  for i = start+1, limit-1 do\
    local c, pc, nc = line[i], line[i-1], line[i+1]\
    if c.type == \"es\" or c.type == \"cs\"  then\
      if pc.type == \"en\" and nc.type == \"en\" then\
        c.type = \"en\"\
      elseif c.type == \"cs\" and pc.type == \"an\" and nc.type == \"an\" then\
        c.type = \"an\"\
      end\
    end\
  end\
\
  -- W5\
  local i = start\
  while i <= limit do\
    if line[i].type == \"et\" then\
      local et_start, et_limit, t\
      et_start = i\
      et_limit = find_run_limit(line, et_start, limit, {\"et\"})\
\
      t = (et_start == start and sor) or line[et_start-1].type\
\
      if t ~= \"en\" then\
        t = (et_limit == limit and eor) or line[et_limit+1].type\
      end\
\
      if t == \"en\" then\
        for j = et_start, et_limit do\
          line[j].type = \"en\"\
        end\
      end\
      i = et_limit\
    end\
    i = i + 1\
  end\
\
  -- W6\
  for i = start, limit do\
    local c = line[i]\
    if c.type == \"es\" or c.type == \"et\" or c.type == \"cs\" then\
      c.type = \"on\"\
    end\
  end\
\
  -- W7\
  for i = start, limit do\
    local c = line[i]\
    if c.type == \"en\" then\
      local prev_strong = sor\
      for j = i - 1, start, -1 do\
        if line[j].type == \"l\" or line[j].type == \"r\" then\
          prev_strong = line[j].type\
          break\
        end\
      end\
      if prev_strong == \"l\" then\
        c.type = \"l\"\
      end\
    end\
  end\
end\
\
local function resolve_neutral(line, start, limit, sor, eor)\
  -- N1, N2\
  for i = start, limit do\
    local c = line[i]\
    if c.type == \"b\" or c.type == \"s\" or c.type == \"ws\" or c.type == \"on\" then\
      local n_start, n_limit, leading_type, trailing_type, resolved_type\
      n_start = i\
      n_limit = find_run_limit(line, n_start, limit, {\"b\", \"s\", \"ws\", \"on\"})\
\
      if n_start == start then\
        leading_type = sor\
      else\
        leading_type = line[n_start-1].type\
        if leading_type == \"en\" or leading_type == \"an\" then\
          leading_type = \"r\"\
        end\
      end\
\
      if n_limit == limit then\
        trailing_type = eor\
      else\
        trailing_type = line[n_limit+1].type\
        if trailing_type == \"en\" or trailing_type == \"an\" then\
          trailing_type = \"r\"\
        end\
      end\
\
      if leading_type == trailing_type then\
        -- N1\
        resolved_type = leading_type\
      else\
        -- N2\
        resolved_type = type_of_level(line[i].level)\
      end\
      for j = n_start, n_limit do\
        line[j].type = resolved_type\
      end\
      i = n_limit\
    end\
    i = i + 1\
  end\
end\
\
local function resolve_implicit(line, start, limit, sor, eor)\
  -- I1\
  for i = start, limit do\
    local c = line[i]\
    if not odd(c.level) then\
      if c.type == \"r\" then\
        c.level = c.level + 1\
      elseif c.type == \"an\" or c.type == \"en\" then\
        c.level = c.level + 2\
      end\
    end\
  end\
\
  -- I2\
  for i = start, limit do\
    local c = line[i]\
    if odd(c.level) then\
      if c.type == \"l\" or c.type == \"en\" or c.type == \"an\" then\
        c.level = c.level + 1\
      end\
    end\
  end\
end\
\
local function resolve_levels(line, base_level)\
  -- Rules X1 to X9\
  resolve_explicit(line, base_level)\
\
  -- X10\
  local start = 1\
  while start < #line do\
    local level = line[start].level\
\
    local limit = start + 1\
    while limit < #line and line[limit].level == level do\
      limit = limit + 1\
    end\
\
    local prev_level = (start == 1 and base_level) or line[start-1].level\
    local next_level = (limit == #line and base_level) or line[limit+1].level\
    local sor = type_of_level(max(level, prev_level))\
    local eor = type_of_level(max(level, next_level))\
\
    -- Rules W1 to W7\
    resolve_weak(line, start, limit, sor, eor)\
\
    -- Rules N1 and N2\
    resolve_neutral(line, start, limit, sor, eor)\
\
    -- Rules I1 and I2\
    resolve_implicit(line, start, limit, sor, eor)\
\
    start = limit\
  end\
\
  -- L1\
  for i,c in next, line do\
    -- (1)\
    if c.orig_type == \"s\" or c.orig_type == \"b\" then\
      c.level = base_level\
      -- (2)\
      for j = i - 1, 1, -1 do\
        local bc = line[j]\
        if is_whitespace(bc.orig_type) then\
          bc.level = base_level\
        else\
          break\
        end\
      end\
    end\
  end\
  -- (3)\
  for i = #line, 1, -1 do\
    local bc = line[i]\
    if is_whitespace(bc.orig_type) then\
      bc.level = base_level\
    else\
      break\
    end\
  end\
\
  -- L4\
  for _,c in next, line do\
    if odd(c.level) then\
      c.mirror = get_mirror(c.char)\
    end\
  end\
\
  return line\
end\
\
local obj_code = 0xFFFC -- A who-cares character\
\
local function node_to_table(nodelist)\
  -- Takes a node list and returns its textual representation\
\
  local line = {}\
  for i = 1,#nodelist do\
    local n = nodelist[i]\
    if n.type == \"hbox\" and n.value and n.value.text then\
      print(n.value)\
      c = SU.codepoint(n.value.text)\
    elseif n:isNnode() then\
      -- This is technically a hack. n.text will probably contain multiple\
      -- characters, but by dint of being shaped into the same run, they are\
      -- guaranteed(?) to be of the same class, so using one as a representative\
      -- should be fine.\
      c = SU.codepoint(n.text)\
    elseif n:isGlue() then\
      c = 0x0020 -- space\
    else\
      c = obj_code\
    end\
    line[#line+1] = { char = c, type = get_bidi_type(c), orig_type = get_bidi_type(c), level = 0 }\
  end\
\
  return line\
end\
\
-- Dumb stupid version\
local function reverse_portion(tbl, s,e)\
  rv = {}\
  for i = 1,s-1 do rv[#rv+1] = tbl[i] end\
  for i = e,s,-1 do rv[#rv+1] = tbl[i] end\
  for i = e+1, #tbl do rv[#rv+1] = tbl[i] end\
  return rv\
end\
\
local function create_matrix(line, base_level)\
  -- L2; create a transformation matrix of elements\
  -- such that output[matrix[i]] = input[i]\
  -- e.g. No reversions required: [1,2,3,4,5]\
  -- Levels [0,0,0,1,1] -> [1,2,3,5,4]\
\
  local max_level = 0\
  local matrix = {}\
  for i,c in next, line do\
    if c.level > max_level then max_level = c.level end\
    matrix[i] = i\
  end\
\
  for level = base_level+1, max_level do\
    local level_start, level_limit\
    for i,_ in next, line do\
      if line[i].level >= level then\
        if not level_start then\
          level_start = i\
        elseif i == #line then\
          level_end = i\
          matrix = reverse_portion(matrix, level_start, level_end)\
          level_start = nil\
        end\
      else\
        if level_start then\
          level_end = i-1\
          matrix = reverse_portion(matrix, level_start, level_end)\
          level_start = nil\
        end\
      end\
    end\
  end\
\
  return matrix\
end\
\
local function process(nodelist, frame)\
  -- main node list processing\
\
  -- return early if there is nothing to process\
  if not nodelist then\
    return nodelist\
  end\
\
  local line, base_level, par_dir\
\
  -- convert node list into our internal structure, this way the bidi\
  -- implementation is kept separate from actual node list processing\
  line = node_to_table(nodelist)\
\
  -- set paragraph direction according to main direction set by the user,\
  -- else based on first strong bidi character according to the algorithm\
    if frame.direction then\
      base_level = frame.direction == \"RTL\" and 1 or 0\
    else\
      base_level = get_base_level(line)\
    end\
\
  -- will be used later to set direction of sublists\
  par_dir = dir_of_level(base_level)\
\
  -- run the bidi algorithm\
  line = resolve_levels(line, base_level)\
  matrix = create_matrix(line, base_level)\
  assert(#line == #nodelist)\
\
  local rv = {}\
  for i = 1, #nodelist do\
    rv[matrix[i]] = nodelist[i]\
  end\
  return rv\
end\
\
return { process = process }"
, '@'..".\\lua-libraries\\unicode-bidi-algorithm.lua" ) )

package.preload[ "lua-libraries\\std" ] = assert( (loadstring or load)(
"--[[--\
 Global namespace scribbler.\
\
 For backwards compatibility with older releases, `require \"std\"`\
 will inject the same functions into the global namespace as it\
 has done previously, even though it is now deprecated.\
\
 For new code, much better than scribbling all over the global\
 namespace, it's more hygienic to explicitly assign the results of\
 requiring just the submodules you actually use to a local variable,\
 and access its functions via that table.\
\
 @todo Write a style guide (indenting/wrapping, capitalisation,\
   function and variable names); library functions should call\
   error, not die; OO vs non-OO (a thorny problem).\
 @todo Add tests for each function immediately after the function;\
   this also helps to check module dependencies.\
 @todo pre-compile.\
 @module std\
]]\
\
\
--- Module table.\
-- Lazy load submodules into `std` on first reference.  On initial\
-- load, `std` has the usual single `version` entry, but the `__index`\
-- metatable will automatically require submodules on first reference:\
--\
--     local std = require \"std\"\
--     local prototype = std.container.prototype\
-- @table std\
-- @field version release version string\
local version = \"General Lua libraries / 38\"\
\
local modules = require \"std.modules\"\
\
for m, globally in pairs (modules) do\
  if globally == true then\
    -- Inject stdlib extensions directly into global package namespaces.\
    for k, v in pairs (require (\"std.\" .. m)) do\
      _G[m][k] = v\
    end\
  else\
    _G[m] = require (\"std.\" .. m)\
  end\
end\
\
-- Add io functions to the file handle metatable.\
local file_metatable = getmetatable (io.stdin)\
file_metatable.readlines  = io.readlines\
file_metatable.writelines = io.writelines\
\
-- Maintain old global interface access points.\
for _, api in ipairs {\
  --- Partially apply a function.\
  -- @function _G.bind\
  -- @see std.functional.bind\
  \"functional.bind\",\
\
  --- Collect the results of an iterator.\
  -- @function _G.collect\
  -- @see std.functional.collect\
  \"functional.collect\",\
\
  --- Compose functions.\
  -- @function _G.compose\
  -- @see std.functional.compose\
  \"functional.compose\",\
\
  --- Curry a function.\
  -- @function _G.curry\
  -- @see std.functional.curry\
  \"functional.curry\",\
\
  --- Evaluate a string.\
  -- @function _G.eval\
  -- @see std.functional.eval\
  \"functional.eval\",\
\
  --- Filter an iterator with a predicate.\
  -- @function _G.filter\
  -- @see std.functional.filter\
  \"functional.filter\",\
\
  --- Fold a binary function into an iterator.\
  -- @function _G.fold\
  -- @see std.functional.fold\
  \"functional.fold\",\
\
  --- Identity function.\
  -- @function _G.id\
  -- @see std.functional.id\
  \"functional.id\",\
\
  --- Map a function over an iterator.\
  -- @function _G.map\
  -- @see std.functional.map\
  \"functional.map\",\
\
  --- Memoize a function, by wrapping it in a functable.\
  -- @function _G.memoize\
  -- @see std.functional.memoize\
  \"functional.memoize\",\
\
  --- Return given metamethod, if any, else nil.\
  -- @function _G.metamethod\
  -- @see std.functional.metamethod\
  \"functional.metamethod\",\
\
  --- Functional forms of infix operators.\
  -- @table _G.op\
  -- @see std.functional.op\
  \"functional.op\",\
\
\
\
  --- Die with an error.\
  -- @function _G.die\
  -- @see std.io.die\
  \"io.die\",\
\
  --- Give a warning with the name of program and file (if any).\
  --  @function _G.warn\
  --  @see std.io.warn\
  \"io.warn\",\
\
\
\
  --- Extend to allow formatted arguments.\
  -- @function _G.assert\
  -- @see std.string.assert\
  \"string.assert\",\
\
  --- Convert a value to a string.\
  -- @function _G.pickle\
  -- @see std.string.pickle\
  \"string.pickle\",\
\
  --- Pretty-print a table.\
  -- @function _G.prettytostring\
  -- @see std.string.prettytostring\
  \"string.prettytostring\",\
\
  --- Turn tables into strings with recursion detection.\
  -- @function _G.render\
  -- @see std.string.render\
  \"string.render\",\
\
  --- Require a module with a particular version.\
  -- @function _G.require_version\
  -- @see std.string.require_version\
  \"string.require_version\",\
\
  --- Extend `tostring` to work better on tables.\
  -- @function _G.tostring\
  -- @see std.string.tostring\
  \"string.tostring\",\
\
\
\
  --- Turn a tuple into a list.\
  -- @function _G.pack\
  -- @see std.table.pack\
  \"table.pack\",\
\
  --- An iterator like ipairs, but in reverse.\
  -- @function _G.ripairs\
  -- @see std.table.ripairs\
  \"table.ripairs\",\
\
  --- Turn an object into a table, according to `__totable` metamethod.\
  -- @function _G.totable\
  -- @see std.table.totable\
  \"table.totable\",\
\
\
\
  --- Tree iterator which returns just numbered leaves, in order.\
  -- @function _G.ileaves\
  -- @see std.tree.ileaves\
  \"tree.ileaves\",\
\
  --- Tree iterator over numbered nodes, in order.\
  -- @function _G.inodes\
  -- @see std.tree.inodes\
  \"tree.inodes\",\
\
  --- Tree iterator which returns just leaves.\
  -- @function _G.leaves\
  -- @see std.tree.leaves\
  \"tree.leaves\",\
\
  --- Tree iterator.\
  -- @function _G.nodes\
  -- @see std.tree.nodes\
  \"tree.nodes\",\
} do\
  local module, method = api:match \"^(.*)%.(.-)$\"\
  _G[method] = _G[module][method]\
end\
\
local M = {\
  version = version,\
}\
\
\
--- Metamethods\
-- @section Metamethods\
\
return setmetatable (M, {\
  --- Lazy loading of stdlib modules.\
  -- Don't load everything on initial startup, wait until first attempt\
  -- to access a submodule, and then load it on demand.\
  -- @function __index\
  -- @string name submodule name\
  -- @return the submodule that was loaded to satisfy the missing `name`\
  __index = function (self, name)\
              local ok, t = pcall (require, \"std.\" .. name)\
              if ok then\
\9\9rawset (self, name, t)\
\9\9return t\
\9      end\
\9    end,\
})\
"
, '@'..".\\lua-libraries\\std.lua" ) )

package.preload[ "packages\\masters" ] = assert( (loadstring or load)(
"SILE.scratch.masters = {}\
local _currentMaster\
\
local function defineMaster (self, args)\
  SU.required(args, \"id\", \"defining master\")\
  SU.required(args, \"frames\", \"defining master\")\
  SU.required(args, \"firstContentFrame\", \"defining master\")\
  SILE.scratch.masters[args.id] = {frames = {}, firstContentFrame = nil}\
  for k,spec in pairs(args.frames) do\
    spec.id=k\
    SILE.scratch.masters[args.id].frames[k] = SILE.newFrame(spec)\
  end\
  SILE.frames = {page = SILE.frames.page}\
\
  SILE.scratch.masters[args.id].firstContentFrame = SILE.scratch.masters[args.id].frames[args.firstContentFrame]\
end\
\
local function defineMasters (self, list)\
  if list then\
    for i=1,#list do defineMaster(self, list[i]) end\
  end\
end\
\
local function doswitch(frames)\
  SILE.frames = {page = SILE.frames.page}\
  for id,f in pairs(frames) do\
    SILE.frames[id] =f \
    f:invalidate()\
  end\
end\
 \
local function switchMasterOnePage (id)\
  if not SILE.scratch.masters[id] then\
    SU.error(\"Can't find master \"..id)\
  end\
  SILE.documentState.thisPageTemplate = SILE.scratch.masters[id]\
  doswitch(SILE.scratch.masters[id].frames)\
  SILE.typesetter:chuck()\
  SILE.typesetter:initFrame(SILE.scratch.masters[id].firstContentFrame)\
end\
\
local function switchMaster (id)\
  _currentMaster = id\
  if not SILE.scratch.masters[id] then\
    SU.error(\"Can't find master \"..id)\
  end\
  SILE.documentState.documentClass.pageTemplate = SILE.scratch.masters[id]\
  SILE.documentState.thisPageTemplate = std.tree.clone(SILE.documentState.documentClass.pageTemplate)\
  doswitch(SILE.scratch.masters[id].frames)\
  -- SILE.typesetter:chuck()\
  -- SILE.typesetter:init(SILE.scratch.masters[id].firstContentFrame)\
end\
\
SILE.registerCommand(\"define-master-template\", function(options, content)\
  SU.required(options, \"id\", \"defining a master\")\
  SU.required(options, \"first-content-frame\", \"defining a master\")\
  -- Subvert the <frame> functionality from baseclass\
  local spare = SILE.documentState.thisPageTemplate.frames\
  local sp2 = SILE.frames\
  SILE.frames = {page = SILE.frames.page}\
  SILE.documentState.thisPageTemplate.frames = {}\
  SILE.process(content)\
  SILE.scratch.masters[options.id] = {}\
  SILE.scratch.masters[options.id].frames = SILE.documentState.thisPageTemplate.frames\
  if not SILE.scratch.masters[options.id].frames[options[\"first-content-frame\"]] then\
    SU.error(\"first-content-frame \"..options[\"first-content-frame\"]..\" not found\")\
  end\
  SILE.scratch.masters[options.id].firstContentFrame = SILE.scratch.masters[options.id].frames[options[\"first-content-frame\"]]\
  SILE.documentState.thisPageTemplate.frames = spare\
  SILE.frames = sp2\
end)\
\
SILE.registerCommand(\"switch-master-one-page\", function ( options, content )\
  SU.required(options, \"id\", \"switching master\")\
  switchMasterOnePage(options.id)\
  SILE.typesetter:leaveHmode()\
end, \"Switches the master for the current page\")\
SILE.registerCommand(\"switch-master\", function ( options, content )\
  SU.required(options, \"id\", \"switching master\")\
  switchMaster(options.id)\
end, \"Switches the master for the current page\")\
\
\
return {\
  init = defineMasters,\
  exports = {\
    switchMasterOnePage = switchMasterOnePage,\
    switchMaster = switchMaster,\
    defineMaster = defineMaster,\
    defineMasters = defineMasters,\
    currentMaster = function () return _currentMaster end\
  }\
}"
, '@'..".\\packages\\masters.lua" ) )

package.preload[ "core\\break" ] = assert( (loadstring or load)(
"-- Skeletons for nodes:\
-- activeNode = { next = nil, breakNode = nil, \
--  lineNumber = 0, fitness = nil, \
--  type = nil, -- \"hyphenated\", \"unhyphenated\", \"delta\" (Delta nodes have a length entry)\
--  totalDemerits = nil }\
-- passiveNode = { prev = nil, curBreak = nil, prevBreak = nil, serial = 0 }\
\
SILE.settings.declare({ name=\"linebreak.parShape\", type = \"string or nil\", default = nil}) -- unimplemented\
SILE.settings.declare({ name=\"linebreak.tolerance\", type = \"integer or nil\", default = 500})\
SILE.settings.declare({ name=\"linebreak.pretolerance\", type = \"integer or nil\", default = 100})\
SILE.settings.declare({ name=\"linebreak.hangIndent\", type = \"nil\", default = nil}) -- unimplemented\
SILE.settings.declare({ name=\"linebreak.adjdemerits\", type = \"integer\", default = 10000,\
  help = \"Additional demerits which are accumulated in the course of paragraph building when two consecutive lines are visually incompatible. In these cases, one line is built with much space for justification, and the other one with little space.\"})\
SILE.settings.declare({ name=\"linebreak.looseness\", type = \"integer\", default = 0})\
SILE.settings.declare({ name=\"linebreak.prevGraf\", type = \"integer\", default = 0})\
SILE.settings.declare({ name=\"linebreak.emergencyStretch\", type = \"Length or nil\", default = SILE.length.new()})\
SILE.settings.declare({ name=\"linebreak.doLastLineFit\", type = \"boolean\", default = false}) -- unimplemented\
SILE.settings.declare({ name=\"linebreak.linePenalty\", type = \"integer\", default = 10})\
SILE.settings.declare({ name=\"linebreak.hyphenPenalty\", type = \"integer\", default = 50})\
SILE.settings.declare({ name=\"linebreak.doubleHyphenDemerits\", type = \"integer\", default = 10000})\
\
-- doubleHyphenDemerits\
-- hyphenPenalty\
\
\
local passSerial = 0\
local awful_bad = 1073741823\
local inf_bad = 10000\
local ejectPenalty = -inf_bad\
lineBreak = {}\
\
local param = function(x) return SILE.settings.get(\"linebreak.\"..x) end\
\
function lineBreak:init()\
  self:trimGlue() -- 842\
  self.active = { type = \"hyphenated\", lineNumber = awful_bad, subtype = 0 } -- 846\
  -- 849\
  self.activeWidth = SILE.length.new()\
  self.curActiveWidth = SILE.length.new()\
  self.background = SILE.length.new()\
  self.breakWidth = SILE.length.new() \
  -- 853\
  self.q = SILE.settings.get(\"document.rskip\")\
  if type(self.q) == \"table\" then self.q = self.q.width else self.q = 0 end\
  self.r = SILE.settings.get(\"document.lskip\")\
  if type(self.r) == \"table\" then self.r = self.r.width else self.r = 0 end\
  self.background = self.background + self.q + self.r   \
  -- 860\
  self.minimalDemerits = { tight = awful_bad, decent = awful_bad, loose = awful_bad, veryLoose = awful_bad }\
  self.minimumDemerits = awful_bad\
  self.best_place = {}\
  self.best_pl_line = {}\
  self:setupLineLengths(params)\
end\
\
function lineBreak:trimGlue() -- 842\
  nodes = self.nodes\
  if nodes[#nodes]:isGlue() then\
    nodes[#nodes] = SILE.nodefactory.newPenalty({penalty = inf_bad})\
  else\
    nodes[#nodes+1] = SILE.nodefactory.newPenalty({penalty = inf_bad})\
  end \
  -- XXX Add parskipfill glue here  \
end\
\
function lineBreak:setupLineLengths(params) -- 874\
  self.parShape = param(\"parShape\")\
  if not self.parShape then\
    if not param(\"hangIndent\") then\
      self.lastSpecialLine = 0\
      self.secondWidth = self.hsize or SU.error(\"No hsize\")\
    else\
      self.node875() -- XXX\
    end\
  else\
    self.lastSpecialLine = #param(\"parShape\")\
    self.secondWidth = SU.error(\"Oops\")\
  end\
  if param(\"looseness\") == 0 then self.easy_line = self.lastSpecialLine else self.easy_line = awful_bad end\
  -- self.easy_line = awful_bad\
\
end\
\
function lineBreak:tryBreak(pi, breakType) -- 855\
  SU.debug(\"break\", \"Trying a \"..breakType..\" break p=\"..pi)\
  self.no_break_yet = true -- We have to store all this state crap in the object, or it's global variables all the way\
  self.prev_prev_r = nil\
  self.prev_r = self.active\
  self.old_l = 0\
  self.r = nil\
  self.curActiveWidth = std.tree.clone(self.activeWidth)\
\
  while true do\
    while true do -- allows \"break\" to function as \"continue\"\
      self.r = self.prev_r.next\
      SU.debug(\"break\",\"We have moved the link  forward, ln is now \"..(self.r.type == \"delta\" and \"XX\" or self.r.lineNumber))\
\
      if self.r.type == \"delta\" then -- 858\
        SU.debug(\"break\", \" Adding delta node width of \".. tostring(self.r.width))\
\
        self.curActiveWidth = self.curActiveWidth + self.r.width\
        self.prev_prev_r = self.prev_r\
        self.prev_r = self.r\
        break\
      end\
\
      -- 861\
      if self.r.lineNumber > self.old_l then\
        SU.debug(\"break\",\"Mimimum demerits = \" .. self.minimumDemerits)\
        if self.minimumDemerits < awful_bad and (not (self.old_l == self.easy_line) or self.r == self.active) then\
          self:createNewActiveNodes(breakType)          \
        end\
        if self.r == self.active then\
          SU.debug(\"break\", \"<- tryBreak\") \
          return \
        end\
        -- 876\
        if self.r.lineNumber > self.easy_line then \
          self.lineWidth = self.secondWidth\
          self.old_l = awful_bad -1\
        else\
          self.old_l = self.r.lineNumber\
          if self.r.lineNumber > self.lastSpecialLine then self.lineWidth = self.secondWidth\
          elseif not self.parShape then self.lineWidth = self.firstWidth else self.lineWidth = self.parShape[self.r.lineNumber]\
          end\
        end\
        SU.debug(\"break\", \"line width = \"..self.lineWidth)\
      end \
      SU.debug(\"break\", \" ---> (2) cuaw is \".. self.curActiveWidth.length)\
      SU.debug(\"break\", \" ---> aw is \".. self.activeWidth.length)\
      local continuing = self:considerDemerits(pi, breakType)\
      SU.debug(\"break\", \" <--- cuaw is \".. self.curActiveWidth.length)\
      SU.debug(\"break\", \" <--- aw is \".. self.activeWidth.length)\
    end\
  end\
  \
end\
\
function lineBreak:considerDemerits(pi, breakType) -- 877  \
  self.artificialDemerits = false\
  local nodeStaysActive = false\
  local shortfall = self.lineWidth - self.curActiveWidth.length\
  SU.debug(\"break\", \"Considering demerits, shortfall is \"..shortfall)\
  if shortfall > 0 then\
    -- 878\
    -- We do not currently deal with infinities, so we don't implement the \"quick\" side of this\
    if shortfall > 110 and self.curActiveWidth.stretch < 25 then -- Blame Knuth for the magic numbers\
      self.b = inf_bad; self.fitClass = \"veryLoose\";\
    else self.b = lineBreak:badness(shortfall, self.curActiveWidth.stretch) end\
    if self.b > 12 then \
      if self.b > 99 then self.fitClass = \"veryLoose\" else self.fitClass = \"loose\" end\
    else self.fitClass = \"decent\" \
    end\
  else\
    if -shortfall > self.curActiveWidth.shrink then self.b = inf_bad + 1\
      else self.b = lineBreak:badness(-shortfall, self.curActiveWidth.shrink) end\
    if self.b > 12 then self.fitClass = \"tight\" else self.fitClass = \"decent\" end\
  end\
  SU.debug(\"break\", self.b .. \" \" .. self.fitClass)\
  if (self.b > inf_bad or pi == ejectPenalty) then\
    if self.finalpass and self.minimumDemerits == awful_bad and self.r.next == self.active and self.prev_r == self.active then\
      self.artificialDemerits = true\
    else\
      if self.b > self.threshold then \
        self:deactivateR()\
        return false\
      end\
      self.nodeStaysActive = false\
    end\
  else\
    self.prev_r = self.r\
    if self.b > self.threshold then return true end\
    nodeStaysActive = true\
  end\
\
  self.lastRatio = shortfall > 0 and shortfall/(self.curActiveWidth.stretch or awful_bad) or shortfall/(self.curActiveWidth.shrink or awful_bad)\
  self:recordFeasible(pi, breakType)\
  if nodeStaysActive then return true end\
  self:deactivateR()\
  return false\
end\
\
function lineBreak:badness(t,s)\
  local bad = 100 * (t/s)^3\
  bad = math.floor(bad) -- TeX uses integer math for this stuff, so for compatibility...\
\
  if bad > inf_bad then return inf_bad else return bad end\
end\
\
function lineBreak:deactivateR() -- 886\
  SU.debug(\"break\",\" Deactivating r (\"..self.r.type..\")\")\
  self.prev_r.next = self.r.next\
  if self.prev_r == self.active then\
    -- 887\
    self.r = self.active.next\
    if self.r.type == \"delta\" then\
      self.activeWidth = self.activeWidth + self.r.width      \
      self.curActiveWidth = std.tree.clone(self.activeWidth)      \
      self.active.next = self.r.next\
    end\
    SU.debug(\"break\",\"  Deactivate, branch 1\");\
  else\
    if self.prev_r.type == \"delta\" then\
      self.r = self.prev_r.next\
      if self.r == self.active then\
        self.curActiveWidth = self.curActiveWidth - self.r.width\
        self.prev_prev_r.next = self.active\
        self.prev_r = self.prev_prev_r\
      elseif self.r.type == \"delta\" then\
        self.curActiveWidth = self.curActiveWidth + self.r.width\
        self.prev_r.width = self.prev_r.width + self.r.width\
        self.prev_r.next = self.r.next\
      end\
    end\
    SU.debug(\"break\",\"  Deactivate, branch 2\");\
  end\
end\
\
function lineBreak:recordFeasible(pi, breakType) -- 881\
  local d\
  if self.artificialDemerits then d = 0\
  else\
    d = param(\"linePenalty\") + self.b\
    if math.abs(d) >= 10000 then d = 100000000 else d = d * d end\
    if not(pi == 0) then \
      if pi > 0 then d = d + pi * pi elseif pi > ejectPenalty then d = d - pi * pi end\
    end\
    if breakType == \"hyphenated\" and self.r.type == \"hyphenated\" then\
      if self.nodes[self.cur_p] then d = d + param(\"doubleHyphenDemerits\") else d = d + param(\"finalHyphenDemerits\") end\
    end\
    -- XXX adjDemerits not added here\
  end\
  if self.nodes[self.cur_p] then\
    SU.debug(\"break\", \"@\" .. self.nodes[self.cur_p] .. \" via @@\" .. (self.r.breakNode and self.r.breakNode.serial or \"0\")  .. \" b=\" .. self.b .. \" d=\".. d) -- 882\
  else\
    SU.debug(\"break\", \"@ \\\\par via @@\");\
  end\
  SU.debug(\"break\",\" fit class = \"..self.fitClass);\
  d = d + self.r.totalDemerits\
  if d <= self.minimalDemerits[self.fitClass] then\
    self.minimalDemerits[self.fitClass] = d\
    self.best_place[self.fitClass] = self.r.breakNode\
    self.best_pl_line[self.fitClass] = self.r.lineNumber\
    -- XXX do last line fit\
    if d < self.minimumDemerits then self.minimumDemerits = d end\
  end\
end\
\
function lineBreak:computeDiscBreakWidth() -- 866\
  local rep = self.nodes[self.cur_p].replacement\
  for _,n in pairs(rep) do self.breakWidth = self.breakWidth - n.width end\
  local s = self.nodes[self.cur_p].postbreak\
  for _,n in pairs(s) do self.breakWidth = self.breakWidth + n.width end\
  self.breakWidth = self.breakWidth + self.discWidth\
end\
\
\
function lineBreak:createNewActiveNodes(breakType) -- 862\
  if self.no_break_yet then\
    -- 863\
    self.no_break_yet = false\
    self.breakWidth = std.tree.clone(self.background)\
    local s = self.cur_p\
    if breakType == \"hyphenated\" and self.nodes[self.cur_p] then self:computeDiscBreakWidth() end\
    while self.nodes[s] and not self.nodes[s]:isBox() do\
      if self.sideways and self.nodes[s].height then\
        self.breakWidth = self.breakWidth - (self.nodes[s].height + self.nodes[s].depth)\
      elseif self.nodes[s].width then -- We use the fact that (a) nodes know if they have width and (b) width subtraction is polymorphic\
        self.breakWidth = self.breakWidth - self.nodes[s].width\
      end\
      s = s + 1\
    end\
    SU.debug(\"break\", \"Value of breakWidth = \" .. tostring(self.breakWidth))\
  end\
  -- 869 (Add a new delta node)\
  if self.prev_r.type == \"delta\" then self.prev_r.width = self.prev_r.width - self.curActiveWidth + self.breakWidth\
  elseif self.prev_r == self.active then self.activeWidth = std.tree.clone(self.breakWidth)\
  else\
    local newDelta = { next = self.r, type = \"delta\", width = self.breakWidth - self.curActiveWidth}\
    SU.debug(\"break\", \"Added new delta node = \" .. tostring(newDelta.width))\
    self.prev_r.next = newDelta\
    self.prev_prev_r = self.prev_r\
    self.prev_r = newDelta\
  end\
  if (math.abs(self.adjdemerits) >= awful_bad - self.minimumDemerits) then self.minimumDemerits = awful_bad - 1\
  else self.minimumDemerits = self.minimumDemerits + math.abs(self.adjdemerits)\
  end\
\
  for class, value in pairs(self.minimalDemerits) do\
    SU.debug(\"break\",\"Class is \"..class..\" Best value here is \" .. value)\
\
    if value <= self.minimumDemerits then\
      -- 871: this is what creates new active notes\
      passSerial = passSerial + 1\
\
      local newPassive = { prev = self.passive, curBreak = self.cur_p, prevBreak = self.best_place[class], serial = passSerial, ratio = self.lastRatio }\
      self.passive = newPassive\
\
      local newActive = { next = self.r, breakNode = newPassive, lineNumber = self.best_pl_line[class] + 1, type = breakType, fitness = class, totalDemerits = value }\
      -- DoLastLineFit? 1636 XXX\
      self.prev_r.next = newActive\
      self.prev_r = newActive\
      self:dumpBreakNode(newActive)\
\
    end\
    self.minimalDemerits[class] = awful_bad\
  end\
\
  self.minimumDemerits = awful_bad\
  -- 870\
  if not (self.r == self.active) then\
    local newDelta = { next = self.r, type = \"delta\", width = self.curActiveWidth - self.breakWidth }\
    self.prev_r.next = newDelta\
    self.prev_prev_r = self.prev_r\
    self.prev_r = newDelta    \
  end  \
end\
\
function lineBreak:dumpBreakNode(b)\
  if not SU.debugging(\"break\") then return end\
  print(\"@@\" .. b.breakNode.serial .. \": line \" .. (b.lineNumber -1) .. \".\" .. b.fitness .. \" \" .. b.type .. \" t=\".. b.totalDemerits .. \" -> @@ \" .. (b.breakNode.prevBreak and b.breakNode.prevBreak.serial or \"0\") )\
end\
\
function lineBreak:checkForLegalBreak(n) -- 892\
  SU.debug(\"break\", \"considering node \"..n);\
  if self.sideways and n:isVbox() then\
    self.activeWidth = self.activeWidth + n.height + n.depth\
  elseif self.sideways and n:isVglue() then\
    if self.nodes[self.prev_p] and (self.nodes[self.prev_p]:isVbox()) then\
      self:tryBreak(0, \"unhyphenated\")\
    end\
    self.activeWidth = self.activeWidth + n.height + n.depth\
  elseif n:isBox() then\
    self.activeWidth = self.activeWidth + n.width\
  elseif n:isGlue() then\
    -- 894\
    if self.auto_breaking then\
      if self.nodes[self.prev_p] and (self.nodes[self.prev_p]:isBox()) then\
        --self.nodes[self.prev_p]:precedesBreak() or \
        --self.nodes[self.prev_p]:isKern()) then\
        self:tryBreak(0, \"unhyphenated\")\
      end\
      self.activeWidth = self.activeWidth + n.width -- Length version      \
    end\
  elseif n:isDiscretionary() then\
    -- 895  XXX\
    self.discWidth = 0\
    if not n.prebreak then \
      tryBreak(param(\"hyphenPenalty\"), \"hyphenated\")\
    else\
      self.discWidth = n:prebreakWidth()\
      self.activeWidth = self.activeWidth + self.discWidth\
      self:tryBreak(param(\"hyphenPenalty\"), \"hyphenated\")\
      self.activeWidth = self.activeWidth - self.discWidth      \
    end\
  elseif n:isPenalty() then\
    self:tryBreak(n.penalty, \"unhyphenated\")\
  end\
  self:updatePrevP()\
  self.cur_p = self.cur_p + 1\
end\
\
function lineBreak:updatePrevP()\
  self.prev_p = self.cur_p\
  global_prev_p = self.cur_p\
end\
\
function lineBreak:tryFinalBreak()      -- 899\
  self:tryBreak(ejectPenalty, \"hyphenated\")\
  if not(self.active.next == self.active) then\
    self.r = self.active.next\
    self.fewestDemerits = awful_bad\
    repeat\
      if not(self.r.type == \"delta\") then\
        if (self.r.totalDemerits < self.fewestDemerits) then\
          self.bestBet = self.r\
        end\
      end\
      self.r = self.r.next\
    until self.r == self.active\
    self.bestLine = self.bestBet.lineNumber\
    if param(\"looseness\") == 0 then return \"done\" end\
    -- XXX 901\
    if (self.actualLooseness == param(\"looseness\")) or self.finalpass then return \"done\" end\
  end\
end\
\
function lineBreak:doBreak (nodes, hsize, sideways)\
  self.nodes = nodes\
  self.hsize = hsize\
  self.sideways = sideways\
  self.auto_breaking = 1\
  self:init()\
  self.adjdemerits = param(\"adjdemerits\")\
  self.threshold = param(\"pretolerance\")\
  if self.threshold >= 0 then \
    self.pass = \"first\"\
    self.finalpass = false\
  else\
    self.threshold = param(\"tolerance\")\
    self.pass = \"second\"\
    self.finalpass = (param(\"emergencyStretch\") <= 0)\
  end\
  -- 889\
  while 1 do\
    SU.debug(\"break\", \"@\" .. self.pass .. \"pass\")\
    if self.threshold > inf_bad then self.threshold = inf_bad end\
    if self.pass == \"second\" then \
      self.nodes = SILE.hyphenate(self.nodes) \
    end\
    -- 890\
    self.active.next = { type = \"unhyphenated\", fitness = \"decent\", next = self.active, breakNode = nil, lineNumber = param(\"prevGraf\") + 1, totalDemerits = 0}\
\
    if param(\"doLastLineFit\") then\
      --1630\
    end\
    self.activeWidth = std.tree.clone(self.background)\
\
    self.passive = nil\
\
    self.cur_p = 1\
    self.auto_breaking = true\
    self:updatePrevP()\
    self.first_p = self.cur_p\
    while self.nodes[self.cur_p] and not (self.active.next == self.active) do\
      self:checkForLegalBreak(self.nodes[self.cur_p])\
    end\
    if not self.nodes[self.cur_p] then\
      if self:tryFinalBreak() == \"done\" then break end\
    end\
    -- (Not doing 891)\
    if not (self.pass == \"second\") then\
      self.pass = \"second\"\
      self.threshold = param(\"tolerance\")\
    else\
      self.pass = \"emergency\"\
      self.background.stretch = self.background.stretch + param(\"emergencyStretch\").length\
      self.finalpass = true\
    end    \
  end\
  if param(\"doLastLineFit\") then \
    -- 1638\
  end\
  return self:postLineBreak()\
end\
\
function lineBreak:postLineBreak() -- 903\
  local p = self.bestBet.breakNode\
  local breaks = {}\
  local line  = 1\
  repeat\
    table.insert(breaks, 1,  { position = p.curBreak, width = self.parShape and self.parShape[line] or self.hsize } )\
    p = p.prevBreak\
    line = line + 1\
  until not p\
  return breaks\
end\
\
return lineBreak"
, '@'..".\\core\\break.lua" ) )

package.preload[ "lua-libraries\\imagesize\\format\\bmp" ] = assert( (loadstring or load)(
"local Util = require \"imagesize.util\"\
\
local MIME_TYPE = \"image/x-ms-bmp\"\
\
-- Size a Windows-ish BitMaP image\
-- Adapted from code contributed by Aldo Calpini <a.calpini@romagiubileo.it>\
local function size (stream, options)\
    local buf = stream:read(26)\
    if not buf or buf:len() ~= 26 then\
        return nil, nil, \"file isn't big enough to contain a BMP header\"\
    end\
\
    if Util.get_uint32_le(buf, 15) == 12 then\
        -- Old OS/2 BITMAPCOREHEADER with 16 bit width and height.\
        return Util.get_uint16_le(buf, 19), Util.get_uint16_le(buf, 21),\
               MIME_TYPE\
    else\
        -- Some variant of Windows BITMAPINFOHEADER with 32 bit width & height.\
        return Util.get_uint32_le(buf, 19), Util.get_uint32_le(buf, 23),\
               MIME_TYPE\
    end\
end\
\
return size\
-- vi:ts=4 sw=4 expandtab\
"
, '@'..".\\lua-libraries\\imagesize\\format\\bmp.lua" ) )

package.preload[ "lua-libraries\\std\\string" ] = assert( (loadstring or load)(
"--[[--\
 Additions to the string module.\
 @module std.string\
]]\
\
local func   = require \"std.functional\"\
local List   = require \"std.list\"\
local StrBuf = require \"std.strbuf\"\
local table  = require \"std.table\"\
\
local _assert   = _G.assert\
local _format   = string.format\
local _tostring = _G.tostring\
local old__index = getmetatable (\"\").__index\
\
local M = {}\
\
--- Extend to work better with one argument.\
-- If only one argument is passed, no formatting is attempted.\
-- @param f format\
-- @param arg1 first argument to format\
-- @param ... arguments to format\
-- @return formatted string\
local function format (f, arg1, ...)\
  if arg1 == nil then\
    return f\
  else\
    return _format (f, arg1, ...)\
  end\
end\
\
--- Extend to allow formatted arguments.\
-- @param v value to assert\
-- @param f format\
-- @param ... arguments to format\
-- @return value\
local function assert (v, f, ...)\
  if not v then\
    if f == nil then\
      f = \"\"\
    end\
    error (format (f, ...), 2)\
  end\
  return v\
end\
\
--- Do find, returning captures as a list.\
-- @param s target string\
-- @param p pattern\
-- @param init start position (default: 1)\
-- @param plain inhibit magic characters (default: nil)\
-- @return start of match, end of match, table of captures\
local function tfind (s, p, init, plain)\
  assert (type (s) == \"string\",\
          \"bad argument #1 to 'tfind' (string expected, got \" .. type (s) .. \")\")\
  assert (type (p) == \"string\",\
          \"bad argument #2 to 'tfind' (string expected, got \" .. type (p) .. \")\")\
  local function pack (from, to, ...)\
    return from, to, {...}\
  end\
  return pack (p.find (s, p, init, plain))\
end\
\
--- Do multiple `find`s on a string.\
-- @param s target string\
-- @param p pattern\
-- @param init start position (default: 1)\
-- @param plain inhibit magic characters (default: nil)\
-- @return list of `{from, to; capt = {captures}}`\
local function finds (s, p, init, plain)\
  init = init or 1\
  local l = {}\
  local from, to, r\
  repeat\
    from, to, r = tfind (s, p, init, plain)\
    if from ~= nil then\
      table.insert (l, {from, to, capt = r})\
      init = to + 1\
    end\
  until not from\
  return l\
end\
\
--- Split a string at a given separator.\
-- Separator is a Lua pattern, so you have to escape active characters,\
-- `^$()%.[]*+-?` with a `%` prefix to match a literal character in `s`.\
-- @string s to split\
-- @string[opt=\"%s*\"] sep separator pattern\
-- @return list of strings\
-- @return list of strings\
local function split (s, sep)\
  assert (type (s) == \"string\",\
          \"bad argument #1 to 'split' (string expected, got \" .. type (s) .. \")\")\
  local b, len, t, patt = 0, #s, {}, \"(.-)\" .. sep\
  if sep == \"\" then patt = \"(.)\"; table.insert (t, \"\") end\
  while b <= len do\
    local e, n, m = string.find (s, patt, b + 1)\
    table.insert (t, m or s:sub (b + 1, len))\
    b = n or len + 1\
  end\
  return t\
end\
\
--- Require a module with a particular version.\
-- @param module module to require\
-- @param min lowest acceptable version (default: any)\
-- @param too_big lowest version that is too big (default: none)\
-- @param pattern to match version in `module.version` or\
-- `module.VERSION` (default: `\".*[%.%d]+\"`)\
local function require_version (module, min, too_big, pattern)\
  local function version_to_list (v)\
    return List (split (v, \"%.\"))\
  end\
  local function module_version (module, pattern)\
    return version_to_list (string.match (module.version or module._VERSION,\
                                          pattern or \".*[%.%d]+\"))\
  end\
  local m = require (module)\
  if min then\
    assert (module_version (m, pattern) >= version_to_list (min))\
  end\
  if too_big then\
    assert (module_version (m, pattern) < version_to_list (too_big))\
  end\
  return m\
end\
\
\
-- Write pretty-printing based on:\
--\
--   John Hughes's and Simon Peyton Jones's Pretty Printer Combinators\
--\
--   Based on \"The Design of a Pretty-printing Library in Advanced\
--   Functional Programming\", Johan Jeuring and Erik Meijer (eds), LNCS 925\
--   http://www.cs.chalmers.se/~rjmh/Papers/pretty.ps\
--   Heavily modified by Simon Peyton Jones, Dec 96\
--\
--   Haskell types:\
--   data Doc     list of lines\
--   quote :: Char -> Char -> Doc -> Doc    Wrap document in ...\
--   (<>) :: Doc -> Doc -> Doc              Beside\
--   (<+>) :: Doc -> Doc -> Doc             Beside, separated by space\
--   ($$) :: Doc -> Doc -> Doc              Above; if there is no overlap it \"dovetails\" the two\
--   nest :: Int -> Doc -> Doc              Nested\
--   punctuate :: Doc -> [Doc] -> [Doc]     punctuate p [d1, ... dn] = [d1 <> p, d2 <> p, ... dn-1 <> p, dn]\
--   render      :: Int                     Line length\
--               -> Float                   Ribbons per line\
--               -> (TextDetails -> a -> a) What to do with text\
--               -> a                       What to do at the end\
--               -> Doc                     The document\
--               -> a                       Result\
\
\
--- Turn tables into strings with recursion detection.\
-- N.B. Functions calling render should not recurse, or recursion\
-- detection will not work.\
-- @see render_OpenRenderer, render_CloseRenderer\
-- @see render_ElementRenderer, render_PairRenderer\
-- @see render_SeparatorRenderer\
-- @param x object to convert to string\
-- @param open open table renderer\
-- @param close close table renderer\
-- @param elem element renderer\
-- @param pair pair renderer\
-- @param sep separator renderer\
-- @param roots accumulates table references to detect recursion\
-- @return string representation\
local function render (x, open, close, elem, pair, sep, roots)\
  local function stop_roots (x)\
    return roots[x] or render (x, open, close, elem, pair, sep, table.clone (roots))\
  end\
  roots = roots or {}\
  if type (x) ~= \"table\" or func.metamethod (x, \"__tostring\") then\
    return elem (x)\
  else\
    local s = StrBuf {}\
    s = s .. open (x)\
    roots[x] = elem (x)\
\
    -- create a sorted list of keys\
    local ord = {}\
    for k, _ in pairs (x) do table.insert (ord, k) end\
    table.sort (ord, function (a, b) return tostring (a) < tostring (b) end)\
\
    -- render x elements in order\
    local i, v = nil, nil\
    for _, j in ipairs (ord) do\
      local w = x[j]\
      s = s .. sep (x, i, v, j, w) .. pair (x, j, w, stop_roots (j), stop_roots (w))\
      i, v = j, w\
    end\
    s = s .. sep (x, i, v, nil, nil) .. close (x)\
    return s:tostring ()\
  end\
end\
\
---\
-- @function render_OpenRenderer\
-- @param t table\
-- @return open table string\
\
---\
-- @function render_CloseRenderer\
-- @param t table\
-- @return close table string\
\
---\
-- @function render_ElementRenderer\
-- @param e element\
-- @return element string\
\
--- NB. the function should not try to render i and v, or treat them recursively.\
-- @function render_PairRenderer\
-- @param t table\
-- @param i index\
-- @param v value\
-- @param is index string\
-- @param vs value string\
-- @return element string\
\
---\
-- @function render_SeparatorRenderer\
-- @param t table\
-- @param i preceding index (nil on first call)\
-- @param v preceding value (nil on first call)\
-- @param j following index (nil on last call)\
-- @param w following value (nil on last call)\
-- @return separator string\
\
--- Extend `tostring` to work better on tables.\
-- @function tostring\
-- @param x object to convert to string\
-- @return string representation\
local function tostring (x)\
  return render (x,\
                 function () return \"{\" end,\
                 function () return \"}\" end,\
                 _tostring,\
                 function (t, _, _, i, v)\
                   return i .. \"=\" .. v\
                 end,\
                 function (_, i, _, j)\
                   if i and j then\
                     return \",\"\
                   end\
                   return \"\"\
                 end)\
end\
\
\
--- Pretty-print a table.\
-- @param t table to print\
-- @param indent indent between levels [\"\\t\"]\
-- @param spacing space before every line\
-- @return pretty-printed string\
local function prettytostring (t, indent, spacing)\
  indent = indent or \"\\t\"\
  spacing = spacing or \"\"\
  return render (t,\
                 function ()\
                   local s = spacing .. \"{\"\
                   spacing = spacing .. indent\
                   return s\
                 end,\
                 function ()\
                   spacing = string.gsub (spacing, indent .. \"$\", \"\")\
                   return spacing .. \"}\"\
                 end,\
                 function (x)\
                   if type (x) == \"string\" then\
                     return format (\"%q\", x)\
                   else\
                     return tostring (x)\
                   end\
                 end,\
                 function (x, i, v, is, vs)\
                   local s = spacing\
\9\9   if type (i) ~= \"string\" or i:match \"[^%w_]\" then\
\9\9     s = s .. \"[\"\
                     if type (i) == \"table\" then\
                       s = s .. \"\\n\"\
                     end\
                     s = s .. is\
                     if type (i) == \"table\" then\
                       s = s .. \"\\n\"\
                     end\
                     s = s .. \"]\"\
\9\9   else\
\9\9     s = s .. i\
\9\9   end\
\9\9   s = s .. \" =\"\
                   if type (v) == \"table\" then\
                     s = s .. \"\\n\"\
                   else\
                     s = s .. \" \"\
                   end\
                   s = s .. vs\
                   return s\
                 end,\
                 function (_, i)\
                   local s = \"\\n\"\
                   if i then\
                     s = \",\" .. s\
                   end\
                   return s\
                 end)\
end\
\
\
--- Convert a value to a string.\
-- The string can be passed to dostring to retrieve the value.\
-- @todo Make it work for recursive tables.\
-- @param x object to pickle\
-- @return string such that eval (s) is the same value as x\
local function pickle (x)\
  if type (x) == \"string\" then\
    return format (\"%q\", x)\
  elseif type (x) == \"number\" or type (x) == \"boolean\" or\
    type (x) == \"nil\" then\
    return tostring (x)\
  else\
    x = totable (x) or x\
    if type (x) == \"table\" then\
      local s, sep = \"{\", \"\"\
      for i, v in pairs (x) do\
        s = s .. sep .. \"[\" .. pickle (i) .. \"]=\" .. pickle (v)\
        sep = \",\"\
      end\
      s = s .. \"}\"\
      return s\
    else\
      die (\"cannot pickle \" .. tostring (x))\
    end\
  end\
end\
\
\
--- Give strings a subscription operator.\
-- @param s string\
-- @param i index\
-- @return `string.sub (s, i, i)` if i is a number, or\
-- falls back to any previous metamethod (by default, string methods)\
getmetatable (\"\").__index = function (s, i)\
  if type (i) == \"number\" then\
    return s:sub (i, i)\
    -- Fall back to module metamethods\
  else\
    return M[i]\
  end\
end\
\
--- Give strings an append metamethod.\
-- @param s string\
-- @param c character (1-character string)\
-- @return `s .. c`\
getmetatable (\"\").__append = function (s, c)\
  return s .. c\
end\
\
--- Give strings a concat metamethod.\
-- @param s string\
-- @param o object\
-- @return s .. tostring (o)\
getmetatable (\"\").__concat = function (s, o)\
  return tostring (s) .. tostring (o)\
end\
\
--- Capitalise each word in a string.\
-- @param s string\
-- @return capitalised string\
local function caps (s)\
  return (string.gsub (s, \"(%w)([%w]*)\",\
                      function (l, ls)\
                        return string.upper (l) .. ls\
                      end))\
end\
\
--- Remove any final newline from a string.\
-- @param s string to process\
-- @return processed string\
local function chomp (s)\
  return (string.gsub (s, \"\\n$\", \"\"))\
end\
\
--- Escape a string to be used as a pattern.\
-- @param s string to process\
-- @return processed string\
local function escape_pattern (s)\
  return (string.gsub (s, \"[%^%$%(%)%%%.%[%]%*%+%-%?]\", \"%%%0\"))\
end\
\
--- Escape a string to be used as a shell token.\
-- Quotes spaces, parentheses, brackets, quotes, apostrophes and\
-- whitespace.\
-- @param s string to process\
-- @return processed string\
local function escape_shell (s)\
  return (string.gsub (s, \"([ %(%)%\\\\%[%]\\\"'])\", \"\\\\%1\"))\
end\
\
--- Return the English suffix for an ordinal.\
-- @param n number of the day\
-- @return suffix\
local function ordinal_suffix (n)\
  n = math.abs (n) % 100\
  local d = n % 10\
  if d == 1 and n ~= 11 then\
    return \"st\"\
  elseif d == 2 and n ~= 12 then\
    return \"nd\"\
  elseif d == 3 and n ~= 13 then\
    return \"rd\"\
  else\
    return \"th\"\
  end\
end\
\
--- Justify a string.\
-- When the string is longer than w, it is truncated (left or right\
-- according to the sign of w).\
-- @param s string to justify\
-- @param w width to justify to (-ve means right-justify; +ve means\
-- left-justify)\
-- @param p string to pad with (default: `\" \"`)\
-- @return justified string\
local function pad (s, w, p)\
  p = string.rep (p or \" \", math.abs (w))\
  if w < 0 then\
    return string.sub (p .. s, w)\
  end\
  return string.sub (s .. p, 1, w)\
end\
\
--- Wrap a string into a paragraph.\
-- @param s string to wrap\
-- @param w width to wrap to (default: 78)\
-- @param ind indent (default: 0)\
-- @param ind1 indent of first line (default: ind)\
-- @return wrapped paragraph\
local function wrap (s, w, ind, ind1)\
  w = w or 78\
  ind = ind or 0\
  ind1 = ind1 or ind\
  assert (ind1 < w and ind < w,\
          \"the indents must be less than the line width\")\
  assert (type (s) == \"string\",\
          \"bad argument #1 to 'wrap' (string expected, got \" .. type (s) .. \")\")\
  local r = StrBuf { string.rep (\" \", ind1) }\
  local i, lstart, len = 1, ind1, #s\
  while i <= #s do\
    local j = i + w - lstart\
    while #s[j] > 0 and s[j] ~= \" \" and j > i do\
      j = j - 1\
    end\
    local ni = j + 1\
    while s[j] == \" \" do\
      j = j - 1\
    end\
    r:concat (s:sub (i, j))\
    i = ni\
    if i < #s then\
      r:concat (\"\\n\" .. string.rep (\" \", ind))\
      lstart = ind\
    end\
  end\
  return r:tostring ()\
end\
\
--- Write a number using SI suffixes.\
-- The number is always written to 3 s.f.\
-- @param n number\
-- @return string\
local function numbertosi (n)\
  local SIprefix = {\
    [-8] = \"y\", [-7] = \"z\", [-6] = \"a\", [-5] = \"f\",\
    [-4] = \"p\", [-3] = \"n\", [-2] = \"mu\", [-1] = \"m\",\
    [0] = \"\", [1] = \"k\", [2] = \"M\", [3] = \"G\",\
    [4] = \"T\", [5] = \"P\", [6] = \"E\", [7] = \"Z\",\
    [8] = \"Y\"\
  }\
  local t = format(\"% #.2e\", n)\
  local _, _, m, e = t:find(\".(.%...)e(.+)\")\
  local man, exp = tonumber (m), tonumber (e)\
  local siexp = math.floor (exp / 3)\
  local shift = exp - siexp * 3\
  local s = SIprefix[siexp] or \"e\" .. tostring (siexp)\
  man = man * (10 ^ shift)\
  return tostring (man) .. s\
end\
\
--- Remove leading matter from a string.\
-- @param s string\
-- @param r leading pattern (default: `\"%s+\"`)\
-- @return string without leading r\
local function ltrim (s, r)\
  r = r or \"%s+\"\
  return (string.gsub (s, \"^\" .. r, \"\"))\
end\
\
--- Remove trailing matter from a string.\
-- @param s string\
-- @param r trailing pattern (default: `\"%s+\"`)\
-- @return string without trailing r\
local function rtrim (s, r)\
  r = r or \"%s+\"\
  return (string.gsub (s, r .. \"$\", \"\"))\
end\
\
--- Remove leading and trailing matter from a string.\
-- @param s string\
-- @param r leading/trailing pattern (default: `\"%s+\"`)\
-- @return string without leading/trailing r\
local function trim (s, r)\
  return rtrim (ltrim (s, r), r)\
end\
\
\
--- @export\
local String = {\
  __index         = old__index,\
  assert          = assert,\
  caps            = caps,\
  chomp           = chomp,\
  escape_pattern  = escape_pattern,\
  escape_shell    = escape_shell,\
  finds           = finds,\
  format          = format,\
  ltrim           = ltrim,\
  numbertosi      = numbertosi,\
  ordinal_suffix  = ordinal_suffix,\
  pad             = pad,\
  pickle          = pickle,\
  prettytostring  = prettytostring,\
  render          = render,\
  require_version = require_version,\
  rtrim           = rtrim,\
  split           = split,\
  tfind           = tfind,\
  tostring        = tostring,\
  trim            = trim,\
  wrap            = wrap,\
}\
\
-- Merge non-@export functions:\
for k,v in pairs (table.merge (String, {\
  -- camelCase compatibility:\
  escapePattern  = escape_pattern,\
  escapeShell    = escape_shell,\
  ordinalSuffix  = ordinal_suffix,\
\
  -- Core Lua function implementations.\
  _format   = _format,\
  _tostring = _tostring,\
})) do\
  M[k] = v\
end\
\
for k, v in pairs (string) do\
  M[k] = M[k] or v\
end\
\
return M\
"
, '@'..".\\lua-libraries\\std\\string.lua" ) )

package.preload[ "core\\frame" ] = assert( (loadstring or load)(
"local cassowary = require(\"cassowary\")\
SILE.frames = {}\
local solver = cassowary.SimplexSolver();\
solverNeedsReloading = true\
\
local parseFrameDef = function(d, width_or_height)\
  SILE.documentState._dimension = width_or_height; -- ugly hack since you can't pass state to the parser\
  return SILE._frameParser:match(d);\
end\
\
SILE.framePrototype = std.object {\
  next= nil,\
  id= nil,\
  previous= nil,\
  balanced= false,\
  direction = nil,\
  state = {},\
  enterHooks = {},\
  leaveHooks = {},\
  constrain = function (self, method, value)\
    self.constraints[method] = value\
    self:invalidate()\
  end, \
  invalidate = function()\
    solverNeedsReloading = true\
  end,\
  relax = function(self, method)\
    self.constraints[method] = nil\
  end,\
  reifyConstraint = function(self, solver, method, stay)\
    if not self.constraints[method] then return end\
    local dims = { top=\"h\", bottom=\"h\", height=\"h\", left=\"w\", right=\"w\", width=\"w\"}\
    local c = parseFrameDef(self.constraints[method], dims[method])\
    --print(\"Adding constraint \"..self.id..\"(\"..method..\") = \"..self.constraints[method])\
    local eq = cassowary.Equation(self.variables[method],c)\
    solver:addConstraint(eq)\
    if stay then solver:addStay(eq) end\
  end,\
  addWidthHeightDefinitions = function(self, solver)\
    solver:addConstraint(cassowary.Equation(self.variables.width, cassowary.minus(self.variables.right, self.variables.left)))\
    solver:addConstraint(cassowary.Equation(self.variables.height, cassowary.minus(self.variables.bottom, self.variables.top)))\
  end,\
  -- This is hideously inefficient, \
  -- but it's the easiest way to allow users to reconfigure frames at runtime.\
  solve = function(self)\
    if not solverNeedsReloading then return end\
    --print(\"Solving\")\
    solver = cassowary.SimplexSolver();\
    if SILE.frames.page then\
      for k,c in pairs(SILE.frames.page.constraints) do\
        SILE.frames.page:reifyConstraint(solver, k, true)\
      end\
      SILE.frames.page:addWidthHeightDefinitions(solver)\
    end\
\
    for id,f in pairs(SILE.frames) do\
      if not (id == \"page\") then\
        for k,c in pairs(f.constraints) do\
          f:reifyConstraint(solver, k)\
        end\
        f:addWidthHeightDefinitions(solver)\
      end\
    end\
    solver:solve()\
    solverNeedsReloading = false\
    --SILE.repl()\
  end\
};\
\
function SILE.framePrototype:toString()\
  local f = \"<Frame: \"..self.id..\": \"\
  f = f ..\" next=\"..self.next..\" \"\
  for k,v in pairs(self.constraints) do\
    f = f .. k..\"=\"..v..\"; \"\
  end\
  f = f.. \">\"\
  return f\
end\
\
function SILE.framePrototype:moveX(amount)\
  if self.direction == \"RTL\" then\
    self.state.cursorX = self.state.cursorX - amount\
  else\
    self.state.cursorX = self.state.cursorX + amount\
  end\
  self:normalize()\
end\
\
function SILE.framePrototype:moveY(amount)\
  self.state.cursorY = self.state.cursorY + amount\
  self:normalize()\
end\
\
function SILE.framePrototype:newLine()\
  self.state.cursorX = self.direction == \"RTL\" and self:right() or self:left()\
end\
\
function SILE.framePrototype:init()\
  self.state = {\
    cursorY = self:top(),\
    totals = { height= 0, pastTop = false }\
  }\
  self:enter()\
  self:newLine()\
end\
\
function SILE.framePrototype:enter()\
  for i = 1,#SILE.framePrototype.enterHooks do\
    SILE.framePrototype.enterHooks[i](self)\
  end\
end\
\
function SILE.framePrototype:leave()\
  for i = 1,#self.leaveHooks do\
    self.leaveHooks[i](self)\
  end\
end\
\
function SILE.framePrototype:normalize()\
  if (type(self.state.cursorY)) == \"table\" then self.state.cursorY  =self.state.cursorY.length end\
  if (type(self.state.cursorX)) == \"table\" then self.state.cursorX  =self.state.cursorX.length end\
end\
\
function SILE.framePrototype:isMainContentFrame()\
  local c =  SILE.documentState.thisPageTemplate.firstContentFrame\
  while c do\
    if c == self then return true end\
    if c.next then c = SILE.getFrame(c.next) else return false end\
  end\
  return false\
end\
\
SILE.newFrame = function(spec)\
  SU.required(spec, \"id\", \"frame declaration\")\
  local dims = { top=\"h\", bottom=\"h\", height=\"h\", left=\"w\", right=\"w\", width=\"w\"}\
\
  local frame \
  if not SILE.frames[spec.id] then \
    frame = SILE.framePrototype {\
      constraints = {},\
      variables = {}\
    }\
    -- Copy everything in from spec\
    SILE.frames[spec.id] = frame\
\
    for method, dimension in pairs(dims) do\
      frame.variables[method] = cassowary.Variable({ name = spec.id .. \"_\" .. method });\
      frame[method] = function (frame)\
        frame:solve()\
        return frame.variables[method].value\
      end\
    end\
  else\
    frame = SILE.frames[spec.id]\
  end\
\
  for key, value in pairs(spec) do\
    if not dims[key] then frame[key] = spec[key] end\
  end\
  -- Fix up \"balanced\"\
  if frame.balanced == \"true\" or frame.balanced == \"1\" then\
    frame.balanced = true\
  end\
\
  frame.constraints = {}\
  -- Add definitions of width and height\
  for method, dimension in pairs(dims) do \
    if spec[method] then\
      frame:constrain(method, spec[method])\
    end\
  end\
  return frame\
end\
\
SILE.getFrame = function(id) \
  if type(frame) == \"table\" then return frame end -- Shouldn't happen but...\
  return SILE.frames[id] or SU.error(\"Couldn't get frame ID \"..id, true) \
end\
\
SILE._frameParser = require(\"core/frameparser\")\
\
SILE.parseComplexFrameDimension = function(d, width_or_height)\
  SILE.documentState._dimension = width_or_height; -- ugly hack since you can't pass state to the parser\
  local v =  SILE._frameParser:match(d);\
  if type(v) == \"table\" then\
    local g = cassowary.Variable({ name = \"t\" })\
    local eq = cassowary.Equation(g,v)\
    solverNeedsReloading = true\
    solver:addConstraint(eq)\
    SILE.frames.page:solve()\
    solverNeedsReloading = true\
    return g.value\
  end\
  return v\
end\
"
, '@'..".\\core\\frame.lua" ) )

package.preload[ "packages\\raiselower" ] = assert( (loadstring or load)(
"\
SILE.registerCommand(\"raise\", function(options, content)\
  local height = options.height or 0\
  height = SILE.parseComplexFrameDimension(height,\"h\")\
  SILE.typesetter:pushHbox({ \
    outputYourself= function (self, typesetter, line)\
      typesetter.frame:moveY(-height)\
    end\
  });\
  SILE.process(content)\
  SILE.typesetter:pushHbox({ \
    outputYourself= function (self, typesetter, line)\
      if (type(typesetter.state.cursorY)) == \"table\" then typesetter.state.cursorY  =typesetter.state.cursorY.length end      \
      typesetter.frame:moveY(height)\
    end\
  });\
end, \"Raises the contents of the command by the amount specified in the <height> option\");\
\
SILE.registerCommand(\"lower\", function (options, content)\
  SILE.Commands[\"raise\"]({height = \"-\"..options.height}, content)\
end, \"Lowers the contents of the command by the amount specified in the <height> option\");"
, '@'..".\\packages\\raiselower.lua" ) )

package.preload[ "core\\inputs-common" ] = assert( (loadstring or load)(
"SILE.inputs.common = {\
  init = function(fn, t)\
    local dclass = t.attr.class or \"plain\"\
    SILE.documentState.documentClass = SILE.require(\"classes/\"..dclass)\
    SU.required(t.attr, \"papersize\", fn)\
    for k,v in pairs(t.attr) do\
      if SILE.documentState.documentClass.options[k] then\
        SILE.documentState.documentClass.options[k](v)\
      end\
    end\
\
    if not SILE.outputFilename and SILE.masterFileName then\
      SILE.outputFilename = string.gsub(SILE.masterFileName,\"%..-$\", \"\").. \".pdf\"\
    end\
    local ff = SILE.documentState.documentClass:init()\
    SILE.typesetter:init(ff)\
  end\
}\
\
SILE.process = function(t)\
  if type(t) == \"function\" then return t() end\
  for k,v in ipairs(t) do\
    SILE.currentCommand = v\
    if type(v) == \"string\" then\
      SILE.typesetter:typeset(v)\
    elseif SILE.Commands[v.tag] then\
      SILE.Commands[v.tag](v.attr,v)\
    else\
      SU.error(\"Unknown command \"..(v.tag or v.id))\
    end\
  end\
end\
\
-- Just a simple one-level find. We're not reimplementing XPath here.\
SILE.findInTree = function (t, tag)\
  for k,v in ipairs(t) do\
    if type(v) == \"string\" then\
    elseif v.tag == tag then\
      return v\
    end\
  end\
end"
, '@'..".\\core\\inputs-common.lua" ) )

package.preload[ "lua-libraries\\std\\object" ] = assert( (loadstring or load)(
"--[[--\
 Prototype-based objects.\
\
 This module creates the root prototype object from which every other\
 object is descended.  There are no classes as such, rather new objects\
 are created by cloning an existing object, and then changing or adding\
 to the clone. Further objects can then be made by cloning the changed\
 object, and so on.\
\
 Objects are cloned by simply calling an existing object, which then\
 serves as a prototype from which the new object is copied.\
\
 All valid objects contain a field `_init`, which determines the syntax\
 required to execute the cloning process:\
\
   1. `_init` can be a list of keys; then the unnamed `init_1` through\
      `init_m` values from the argument table are assigned to the\
      corresponding keys in `new_object`;\
\
         new_object = proto_object {\
           init_1, ..., init_m;\
           field_1 = value_1,\
           ...\
           field_n = value_n,\
         }\
\
   2. Or it can be a function, in which the arguments passed to the\
      prototype during cloning are simply handed to the `_init` function:\
\
        new_object = proto_object (arg, ...)\
\
 Objects, then, are essentially tables of `field\\_n = value\\_n` pairs:\
\
      > o = Object {\
      >>  field_1 = \"value_1\",\
      >>  method_1 = function (self) return self.field_1 end,\
      >> }\
      > = o.field_1\
      value_1\
      > o.field_2 = 2\
      > function o:method_2 (n) return self.field_2 + n end\
      > = o:method_2 (2)\
      4\
\
 Normally `new_object` automatically shares a metatable with\
 `proto_object`. However, field names beginning with \"_\" are *private*,\
 and moved into the object metatable during cloning. So, adding new\
 private fields to an object during cloning will result in a new\
 metatable for `new_object` that also contains a copy of all the entries\
 in the `proto_object` metatable.\
\
 Note that Object methods are stored in the `\\_\\_index` field of their\
 metatable, and so cannot also use `\\_\\_index` to lookup references with\
 square brackets.  See @{std.container} objects if you want to do that.\
\
 @classmod std.object\
]]\
\
\
\
-- Surprise!!  The real root object is Container, which has less\
-- functionality than Object, but that makes the heirarchy hard to\
-- explain, so the documentation pretends this is the root object, and\
-- Container is derived from it.  Confused? ;-)\
\
\
local Container  = require \"std.container\"\
local metamethod = (require \"std.functional\").metamethod\
\
\
--- Root object.\
--\
-- Changing the values of these fields in a new object will change the\
-- corresponding behaviour.\
-- @table std.object\
-- @string[opt=\"Object\"] _type type of Object, returned by @{prototype}\
-- @tfield table|function _init a table of field names, or\
--   initialisation function, used by @{clone}\
-- @tfield nil|table _functions a table of module functions not copied\
--   by @{std.object.__call}\
return Container {\
  _type  = \"Object\",\
\
  -- No need for explicit module functions here, because calls to, e.g.\
  -- `Object.prototype` will automatically fall back metamethods in\
  -- `\\_\\_index`.\
\
  __index = {\
    --- Clone this Object.\
    -- @function clone\
    -- @tparam std.object obj an object\
    -- @param ... a list of arguments if `o._init` is a function, or a\
    --   single table if `o._init` is a table.\
    -- @treturn std.object a clone of `o`\
    -- @see __call\
    clone = metamethod (Container, \"__call\"),\
\
\
    --- Type of an object, or primitive.\
    --\
    -- It's conventional to organise similar objects according to a\
    -- string valued `_type` field, which can then be queried using this\
    -- function.\
    --\
    --     Stack = Object {\
    --       _type = \"Stack\",\
    --\
    --       __tostring = function (self) ... end,\
    --\
    --       __index = {\
    --         push = function (self) ... end,\
    --         pop  = function (self) ... end,\
    --       },\
    --     }\
    --     stack = Stack {}\
    --\
    --     stack:prototype () --> \"Stack\"\
    --\
    -- @function prototype\
    -- @param x anything\
    -- @treturn string type of `x`\
    prototype = Container.prototype.call,\
\
\
    --- Return `obj` with references to the fields of `src` merged in.\
    --\
    -- More importantly, split the fields in `src` between `obj` and its\
    -- metatable. If any field names begin with `\\_`, attach a metatable\
    -- to `obj` if it doesn't have one yet, and copy the \"private\" `\\_`\
    -- prefixed fields there.\
    --\
    -- You might want to use this function to instantiate your derived\
    -- objct clones when the prototype's `_init` is a function -- when\
    -- `_init` is a table, the default (inherited unless you overwrite\
    -- it) clone method calls `mapfields` automatically.  When you're\
    -- using a function `_init` setting, `clone` doesn't know what to\
    -- copy into a new object from the `_init` function's arguments...\
    -- so you're on your own.  Except that calling `mapfields` inside\
    -- `_init` is safer than manually splitting `src` into `obj` and\
    -- its metatable, because you'll pick up fixes and changes when you\
    -- upgrade stdlib.\
    -- @function mapfields\
    -- @tparam table obj destination object\
    -- @tparam table src fields to copy int clone\
    -- @tparam[opt={}] table map `{old_key=new_key, ...}`\
    -- @treturn table `obj` with non-private fields from `src` merged,\
    --   and a metatable with private fields (if any) merged, both sets\
    --   of keys renamed according to `map`\
    mapfields = Container.mapfields.call,\
\
\
    -- Backwards compatibility:\
    type = Container.prototype.call,\
  },\
\
\
  --- Return a @{clone} of this object, and its metatable.\
  --\
  -- Private fields are stored in the metatable.\
  -- @function __call\
  -- @param ... arguments for `\\_init`\
  -- @treturn std.object a clone of the this object.\
  -- @see clone\
\
\
  --- Return a string representation of this object.\
  --\
  -- First the object type, and then between { and } a list of the\
  -- array part of the object table (without numeric keys) followed\
  -- by the remaining key-value pairs.\
  --\
  -- This function doesn't recurse explicity, but relies upon suitable\
  -- `__tostring` metamethods in field values.\
  -- @function __tostring\
  -- @treturn string stringified container representation\
  -- @see tostring\
\
\
  --- Return a shallow copy of non-private object fields.\
  --\
  -- Used by @{clone} to get the base contents of the new object. Can\
  -- be overridden in other objects for greater control of which fields\
  -- are considered non-private.\
  -- @function __totable\
  -- @treturn table a shallow copy of non-private object fields\
  -- @see std.table.totable\
}\
"
, '@'..".\\lua-libraries\\std\\object.lua" ) )

package.preload[ "core\\colorparser" ] = assert( (loadstring or load)(
"local colorsRGB = {\
  aliceblue = {240, 248, 255},\
  antiquewhite = {250, 235, 215},\
  aqua = { 0, 255, 255},\
  aquamarine = {127, 255, 212},\
  azure = {240, 255, 255},\
  beige = {245, 245, 220},\
  bisque = {255, 228, 196},\
  black = { 0, 0, 0},\
  blanchedalmond = {255, 235, 205},\
  blue = { 0, 0, 255},\
  blueviolet = {138, 43, 226},\
  brown = {165, 42, 42},\
  burlywood = {222, 184, 135},\
  cadetblue = { 95, 158, 160},\
  chartreuse = {127, 255, 0},\
  chocolate = {210, 105, 30},\
  coral = {255, 127, 80},\
  cornflowerblue = {100, 149, 237},\
  cornsilk = {255, 248, 220},\
  crimson = {220, 20, 60},\
  cyan = { 0, 255, 255},\
  darkblue = { 0, 0, 139},\
  darkcyan = { 0, 139, 139},\
  darkgoldenrod = {184, 134, 11},\
  darkgray = {169, 169, 169},\
  darkgreen = { 0, 100, 0},\
  darkgrey = {169, 169, 169},\
  darkkhaki = {189, 183, 107},\
  darkmagenta = {139, 0, 139},\
  darkolivegreen = { 85, 107, 47},\
  darkorange = {255, 140, 0},\
  darkorchid = {153, 50, 204},\
  darkred = {139, 0, 0},\
  darksalmon = {233, 150, 122},\
  darkseagreen = {143, 188, 143},\
  darkslateblue = { 72, 61, 139},\
  darkslategray = { 47, 79, 79},\
  darkslategrey = { 47, 79, 79},\
  darkturquoise = { 0, 206, 209},\
  darkviolet = {148, 0, 211},\
  deeppink = {255, 20, 147},\
  deepskyblue = { 0, 191, 255},\
  dimgray = {105, 105, 105},\
  dimgrey = {105, 105, 105},\
  dodgerblue = { 30, 144, 255},\
  firebrick = {178, 34, 34},\
  floralwhite = {255, 250, 240},\
  forestgreen = { 34, 139, 34},\
  fuchsia = {255, 0, 255},\
  gainsboro = {220, 220, 220},\
  ghostwhite = {248, 248, 255},\
  gold = {255, 215, 0},\
  goldenrod = {218, 165, 32},\
  gray = {128, 128, 128},\
  grey = {128, 128, 128},\
  green = { 0, 128, 0},\
  greenyellow = {173, 255, 47},\
  honeydew = {240, 255, 240},\
  hotpink = {255, 105, 180},\
  indianred = {205, 92, 92},\
  indigo = { 75, 0, 130},\
  ivory = {255, 255, 240},\
  khaki = {240, 230, 140},\
  lavender = {230, 230, 250},\
  lavenderblush = {255, 240, 245},\
  lawngreen = {124, 252, 0},\
  lemonchiffon = {255, 250, 205},\
  lightblue = {173, 216, 230},\
  lightcoral = {240, 128, 128},\
  lightcyan = {224, 255, 255},\
  lightgoldenrodyellow = {250, 250, 210},\
  lightgray = {211, 211, 211},\
  lightgreen = {144, 238, 144},\
  lightgrey = {211, 211, 211},\
  lightpink = {255, 182, 193},\
  lightsalmon = {255, 160, 122},\
  lightseagreen = { 32, 178, 170},\
  lightskyblue = {135, 206, 250},\
  lightslategray = {119, 136, 153},\
  lightslategrey = {119, 136, 153},\
  lightsteelblue = {176, 196, 222},\
  lightyellow = {255, 255, 224},\
  lime = { 0, 255, 0},\
  limegreen = { 50, 205, 50},\
  linen = {250, 240, 230},\
  magenta = {255, 0, 255},\
  maroon = {128, 0, 0},\
  mediumaquamarine = {102, 205, 170},\
  mediumblue = { 0, 0, 205},\
  mediumorchid = {186, 85, 211},\
  mediumpurple = {147, 112, 219},\
  mediumseagreen = { 60, 179, 113},\
  mediumslateblue = {123, 104, 238},\
  mediumspringgreen = { 0, 250, 154},\
  mediumturquoise = { 72, 209, 204},\
  mediumvioletred = {199, 21, 133},\
  midnightblue = { 25, 25, 112},\
  mintcream = {245, 255, 250},\
  mistyrose = {255, 228, 225},\
  moccasin = {255, 228, 181},\
  navajowhite = {255, 222, 173},\
  navy = { 0, 0, 128},\
  oldlace = {253, 245, 230},\
  olive = {128, 128, 0},\
  olivedrab = {107, 142, 35},\
  orange = {255, 165, 0},\
  orangered = {255, 69, 0},\
  orchid = {218, 112, 214},\
  palegoldenrod = {238, 232, 170},\
  palegreen = {152, 251, 152},\
  paleturquoise = {175, 238, 238},\
  palevioletred = {219, 112, 147},\
  papayawhip = {255, 239, 213},\
  peachpuff = {255, 218, 185},\
  peru = {205, 133, 63},\
  pink = {255, 192, 203},\
  plum = {221, 160, 221},\
  powderblue = {176, 224, 230},\
  purple = {128, 0, 128},\
  rebeccapurple = {102, 51, 153},\
  red = {255, 0, 0},\
  rosybrown = {188, 143, 143},\
  royalblue = { 65, 105, 225},\
  saddlebrown = {139, 69, 19},\
  salmon = {250, 128, 114},\
  sandybrown = {244, 164, 96},\
  seagreen = { 46, 139, 87},\
  seashell = {255, 245, 238},\
  sienna = {160, 82, 45},\
  silver = {192, 192, 192},\
  skyblue = {135, 206, 235},\
  slateblue = {106, 90, 205},\
  slategray = {112, 128, 144},\
  slategrey = {112, 128, 144},\
  snow = {255, 250, 250},\
  springgreen = { 0, 255, 127},\
  steelblue = { 70, 130, 180},\
  tan = {210, 180, 140},\
  teal = { 0, 128, 128},\
  thistle = {216, 191, 216},\
  tomato = {255, 99, 71},\
  turquoise = { 64, 224, 208},\
  violet = {238, 130, 238},\
  wheat = {245, 222, 179},\
  white = {255, 255, 255},\
  whitesmoke = {245, 245, 245},\
  yellow = {255, 255, 0},\
  yellowgreen = {154, 205, 50}\
}\
\
SILE.colorparser = function(col)\
  if colorsRGB[col] then\
    local c = colorsRGB[col]\
    return { r = c[1] / 255, g = c[2] / 255, b = c[3] / 255 }\
  end\
  local r, g, b =  col:match(\"#(%x%x)(%x%x)(%x%x)\")\
  if r then\
    return { r = tonumber(\"0x\"..r)/255, g = tonumber(\"0x\"..g)/255, b = tonumber(\"0x\"..b)/255,}\
  end\
  local r, g, b =  col:match(\"#(%x)(%x)(%x)\")\
  if r then\
    return { r = tonumber(\"0x\"..r)/15, g = tonumber(\"0x\"..g)/15, b = tonumber(\"0x\"..b)/15,}\
  end\
  SU.error(\"Unparsable color \"..col)\
end"
, '@'..".\\core\\colorparser.lua" ) )

package.preload[ "lua-libraries\\repl\\plugins\\rcfile" ] = assert( (loadstring or load)(
"-- Copyright (c) 2011-2014 Rob Hoelz <rob@hoelz.ro>\
--\
-- Permission is hereby granted, free of charge, to any person obtaining a copy of\
-- this software and associated documentation files (the \"Software\"), to deal in\
-- the Software without restriction, including without limitation the rights to\
-- use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\
-- the Software, and to permit persons to whom the Software is furnished to do so,\
-- subject to the following conditions:\
--\
-- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\
--\
-- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\
-- FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\
-- COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\
-- IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\
-- CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\
\
-- A plugin that runs code in $HOME/.rep.lua before the REPL starts\
\
local setfenv = require('repl.utils').setfenv\
\
local function readable(filename)\
  local f = io.open(filename, 'r')\
  if not f then\
    return false\
  end\
  f:close()\
  return true\
end\
\
local function init()\
  local home = os.getenv 'HOME'\
\
  if not home then\
    return\
  end\
\
  local rcfile = home .. '/.rep.lua'\
\
  if not readable(rcfile) then\
    return\
  end\
\
  local chunk = assert(loadfile(rcfile))\
  local env   = setmetatable({ repl = repl }, { __index = _G, __newindex = _G })\
\
  setfenv(chunk, env)\
\
  chunk()\
end\
\
init()\
"
, '@'..".\\lua-libraries\\repl\\plugins\\rcfile.lua" ) )

package.preload[ "core\\parserbits" ] = assert( (loadstring or load)(
"lpeg = require(\"lpeg\")\
local R = lpeg.R\
local S = lpeg.S\
local P = lpeg.P\
local C = lpeg.C\
local V = lpeg.V\
local Cg = lpeg.Cg\
local Ct = lpeg.Ct\
local number = {}\
\
local digit = R(\"09\")\
number.integer = (S(\"+-\") ^ -1) * (digit   ^  1)\
number.fractional = (P(\".\")   ) * (digit ^ 1)\
number.decimal =  \
  (number.integer *              -- Integer\
  (number.fractional ^ -1)) +    -- Fractional\
  (S(\"+-\") * number.fractional)  -- Completely fractional number\
\
number.scientific = \
  number.decimal * -- Decimal number\
  S(\"Ee\") *        -- E or e\
  number.integer   -- Exponent\
\
-- Matches all of the above\
number.number = C(number.decimal + number.scientific) / function (n) return tonumber(n) end\
local whitespace = S('\\r\\n\\f\\t ')^0\
local units = P(\"mm\") + P(\"cm\") + P(\"in\") + P(\"pt\") + P(\"em\") + P(\"ex\") + P(\"en\")\
local zero = P(\"0\") / function(...) return 0 end\
local dimensioned_string = ( C(number.number) * whitespace * C(units) ) / function (x,n,u) return  SILE.toPoints(n, u) end\
\
SILE.parserBits = {\
  number = number,\
  identifier = (R(\"AZ\") + R(\"az\") + P(\"_\") + R(\"09\"))^1,\
  units = units,\
  zero = zero,\
  whitespace = whitespace,\
  dimensioned_string = dimensioned_string,  \
  length = Ct(Cg(dimensioned_string + zero, \"length\") * whitespace * (P(\"plus\") * whitespace * Cg(dimensioned_string + zero, \"stretch\"))^-1 * whitespace * (P(\"minus\") * whitespace * Cg(dimensioned_string + zero,\"shrink\"))^-1)\
}"
, '@'..".\\core\\parserbits.lua" ) )

package.preload[ "lua-libraries\\repl\\plugins\\keep_last_eval" ] = assert( (loadstring or load)(
"-- Copyright (c) 2011-2014 Rob Hoelz <rob@hoelz.ro>\
--\
-- Permission is hereby granted, free of charge, to any person obtaining a copy of\
-- this software and associated documentation files (the \"Software\"), to deal in\
-- the Software without restriction, including without limitation the rights to\
-- use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\
-- the Software, and to permit persons to whom the Software is furnished to do so,\
-- subject to the following conditions:\
--\
-- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\
--\
-- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\
-- FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\
-- COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\
-- IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\
-- CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\
\
-- A plugin that stores the results of the last evaluation in _G._\
\
local tostring = tostring\
\
function before:displayresults(results)\
  local context = self:getcontext()\
\
  if self._keep_eval_lastn then\
    context._ = nil\
\
    for i = 1, self._keep_eval_lastn do\
      context['_' .. tostring(i)] = nil\
    end\
  end\
\
  if results.n > 0 then\
    context._ = results[1]\
\
    for i = 1, results.n do\
      context['_' .. tostring(i)] = results[i]\
    end\
\
    self._keep_eval_lastn = results.n\
  end\
end\
"
, '@'..".\\lua-libraries\\repl\\plugins\\keep_last_eval.lua" ) )

package.preload[ "lua-libraries\\repl\\console" ] = assert( (loadstring or load)(
"-- Copyright (c) 2011-2014 Rob Hoelz <rob@hoelz.ro>\
--\
-- Permission is hereby granted, free of charge, to any person obtaining a copy of\
-- this software and associated documentation files (the \"Software\"), to deal in\
-- the Software without restriction, including without limitation the rights to\
-- use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\
-- the Software, and to permit persons to whom the Software is furnished to do so,\
-- subject to the following conditions:\
--\
-- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\
--\
-- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\
-- FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\
-- COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\
-- IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\
-- CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\
\
-- @class repl.console\
--- This module implements a command line-based REPL,\
--- similar to the standalone Lua interpreter.\
\
local sync_repl    = require 'repl.sync'\
local console_repl = sync_repl:clone()\
local stdout       = io.stdout\
local stdin        = io.stdin\
local print        = print\
local unpack       = unpack\
\
-- @see repl:showprompt(prompt)\
function console_repl:showprompt(prompt)\
  stdout:write(prompt .. ' ')\
end\
\
-- @see repl.sync:lines()\
function console_repl:lines()\
  return stdin:lines()\
end\
\
-- @see repl:displayresults(results)\
function console_repl:displayresults(results)\
  if results.n == 0 then\
    return\
  end\
\
  print(unpack(results, 1, results.n))\
end\
\
-- @see repl:displayerror(err)\
function console_repl:displayerror(err)\
  print(err)\
end\
\
console_repl._features.console = true\
\
return console_repl\
"
, '@'..".\\lua-libraries\\repl\\console.lua" ) )

package.preload[ "packages\\indexer" ] = assert( (loadstring or load)(
"SILE.registerCommand(\"indexentry\", function(o,c)\
  if not o.label then\
    -- Reconstruct the text.\
    SILE.typesetter:pushState()\
    SILE.process(c)\
    local t = \"\"\
    local nl = SILE.typesetter.state.nodes\
    for i = 2,#nl do \
      t = t .. nl[i]:toText() \
    end\
    o.label = t\
    SILE.typesetter:popState()\
  end\
  if not o.index then o.index = \"main\" end\
  SILE.call(\"info\", {category=\"index\", value = { index = o.index, label = o.label }})\
end)\
\
SILE.scratch.index = {}\
\
local moveNodes = function(self)\
  local n = SILE.scratch.info.thispage.index\
  local thisPage = SILE.formatCounter(SILE.scratch.counters.folio)\
  if not n then return end\
  for i=1,#n do node = n[i]\
    if not SILE.scratch.index[node.index] then SILE.scratch.index[node.index] = {} end\
    local thisIndex = SILE.scratch.index[node.index]\
    if not thisIndex[node.label] then thisIndex[node.label] = {} end\
    if not(#(thisIndex[node.label])) or (thisIndex[node.label])[#(thisIndex[node.label])] ~= thisPage then\
      table.insert(thisIndex[node.label], thisPage)\
    end\
  end\
end\
  -- if c then \
  --   for i = 1,#c do \
  --     if not SILE.scratch.index.commands[c[i].label] then\
  --       SILE.scratch.index.commands[c[i].label] = {}\
  --     end\
  --     SILE.scratch.index.commands[c[i].label][SILE.formatCounter(SILE.scratch.counters.folio)] = 1\
  --   end\
  -- end\
\
\
SILE.registerCommand(\"printindex\", function(o,c)\
  moveNodes()\
  if not o.index then o.index = \"main\" end\
  local index = SILE.scratch.index[o.index]\
  local sortedIndex = {}\
  for n in pairs(index) do table.insert(sortedIndex, n) end\
  table.sort(sortedIndex)\
  SILE.call(\"bigskip\")\
  for i,k in ipairs(sortedIndex) do\
    local v = table.concat(index[k],\", \")    \
    SILE.call(\"index:item\", {pageno = v}, {k}) \
  end\
end)\
\
SILE.registerCommand(\"index:item\", function (o,c)\
  SILE.settings.temporarily(function ()\
    SILE.settings.set(\"typesetter.parfillskip\", SILE.nodefactory.zeroGlue)\
    SILE.settings.set(\"current.parindent\", SILE.nodefactory.zeroGlue)\
    SILE.settings.set(\"document.parindent\", SILE.nodefactory.zeroGlue)\
    SILE.call(\"code\", {}, c)\
    -- Ideally, leaders\
    SILE.call(\"hss\")\
    SILE.typesetter:typeset(o.pageno)\
    SILE.call(\"smallskip\")\
  end)\
end)\
\
return {\
  init = function () end,\
  exports = {\
    buildIndex = moveNodes\
  }\
}"
, '@'..".\\packages\\indexer.lua" ) )

package.preload[ "lua-libraries\\repl\\init" ] = assert( (loadstring or load)(
"-- Copyright (c) 2011-2014 Rob Hoelz <rob@hoelz.ro>\
--\
-- Permission is hereby granted, free of charge, to any person obtaining a copy of\
-- this software and associated documentation files (the \"Software\"), to deal in\
-- the Software without restriction, including without limitation the rights to\
-- use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\
-- the Software, and to permit persons to whom the Software is furnished to do so,\
-- subject to the following conditions:\
--\
-- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\
--\
-- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\
-- FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\
-- COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\
-- IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\
-- CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\
\
-- @class repl\
--- This module implements the core functionality of a REPL.\
\
local plugins_lookup_meta = { __mode = 'k' }\
\
local repl         = { _buffer = '', _plugins = setmetatable({}, plugins_lookup_meta), _features = {}, _ifplugin = {}, VERSION = 0.6 }\
local select       = select\
local loadstring   = loadstring\
local dtraceback   = debug.traceback\
local setmetatable = setmetatable\
local sformat      = string.format\
local smatch       = string.match\
local error        = error\
local setfenv      = require('repl.utils').setfenv\
\
local function gather_results(success, ...)\
  local n = select('#', ...)\
  return success, { n = n, ... }\
end\
\
local function tcopy(t, copy)\
  copy = copy or {}\
\
  for k, v in pairs(t) do\
    copy[k] = v\
  end\
\
  return copy\
end\
\
--- Returns the prompt for a given level.\
-- @param level The prompt level. Either 1 or 2.\
function repl:getprompt(level)\
  return level == 1 and '>' or '>>'\
end\
\
--- Displays a prompt for the given prompt level.\
-- @param level The prompt level. Either 1 or 2.\
function repl:prompt(level)\
  self:showprompt(self:getprompt(level))\
end\
\
--- Returns the name of the REPL.  For usage in chunk compilation.\
-- @return The REPL's name.\
-- @see load\
function repl:name()\
  return 'REPL'\
end\
\
--- Gets a traceback for an error.\
-- @param ... All of the stuff that xpcall passes to error functions.\
-- @see xpcall\
-- @return A stack trace.  The default implementation returns a simple string-based trace.\
function repl:traceback(...)\
  return dtraceback(...)\
end\
\
--- Uses the compilation error to determine whether or not further input\
--- is pending after the last line.  You shouldn't have to override this\
--- unless you use an implementation of Lua that varies in its error\
--- messages.\
-- @param err The compilation error from Lua.\
-- @return Whether or not the input should continue after this line.\
function repl:detectcontinue(err)\
  return smatch(err, \"'<eof>'$\") or smatch(err, \"<eof>$\")\
end\
\
function repl:compilechunk(chunk)\
  return loadstring(chunk, self:name())\
end\
\
--- Evaluates a line of input, and displays return value(s).\
-- @param line The line to evaluate\
-- @return The prompt level (1 or 2)\
function repl:handleline(line)\
  local chunk  = self._buffer .. line\
  local f, err = self:compilechunk(chunk)\
\
  if f then\
    self._buffer = ''\
\
    setfenv(f, self:getcontext())\
    local success, results = gather_results(xpcall(f, function(...) return self:traceback(...) end))\
    if success then\
      self:displayresults(results)\
    else\
      self:displayerror(results[1])\
    end\
  else\
    if self:detectcontinue(err) then\
      self._buffer = chunk .. '\\n'\
      return 2\
    else\
      self:displayerror(err)\
    end\
  end\
\
  return 1\
end\
\
--- Creates a new REPL object, so you can override methods without fear.\
-- @return A REPL clone.\
function repl:clone()\
  local plugins_copy  = tcopy(self._plugins, setmetatable({}, plugins_lookup_meta))\
  local features_copy = tcopy(self._features)\
  local ifplugin_copy = {}\
\
  for k, v in pairs(self._ifplugin) do\
    ifplugin_copy[k] = tcopy(v)\
  end\
\
  return setmetatable({\
    _buffer   = '',\
    _plugins  = plugins_copy,\
    _features = features_copy,\
    _ifplugin = ifplugin_copy,\
  }, { __index = self })\
end\
\
--- Displays the given prompt to the user.  Must be overriden.\
-- @param prompt The prompt to display.\
function repl:showprompt(prompt)\
  error 'You must implement the showprompt method'\
end\
\
--- Displays the results from evaluate().  Must be overriden.\
-- @param results The results to display. The results are a table, with the integer keys containing the results, and the 'n' key containing the highest integer key.\
\
function repl:displayresults(results)\
  error 'You must implement the displayresults method'\
end\
\
--- Displays errors from evaluate().  Must be overriden.\
-- @param err The error value returned from repl:traceback().\
-- @see repl:traceback\
function repl:displayerror(err)\
  error 'You must implement the displayerror method'\
end\
\
--- Checks whether this REPL object has loaded the given plugin.\
-- @param plugin The plugin that the REPL may have loaded.\
function repl:hasplugin(plugin)\
  return self._plugins[plugin]\
end\
\
function repl:hasfeature(feature)\
  return self._features[feature]\
end\
\
function repl:requirefeature(feature)\
  if not self:hasfeature(feature) then\
    error(sformat('required feature %q not present', feature), 2)\
  end\
end\
\
function repl:ifplugin(plugin, action)\
  if self:hasplugin(plugin) then\
    action()\
  else\
    local pending_actions = self._ifplugin[plugin]\
\
    if not pending_actions then\
      pending_actions        = {}\
      self._ifplugin[plugin] = pending_actions\
    end\
\
    pending_actions[#pending_actions + 1] = action\
  end\
end\
\
local function setup_before(repl)\
  local mt = {}\
\
  function mt:__newindex(key, value)\
    if type(value) ~= 'function' then\
      error(tostring(value) .. \" is not a function\", 2)\
    end\
\
    local old_value = repl[key]\
\
    if old_value == nil then\
      error(sformat(\"The '%s' method does not exist\", key), 2)\
    end\
\
    repl[key] = function(...)\
      value(...)\
      return old_value(...)\
    end\
  end\
\
  return setmetatable({}, mt)\
end\
\
local function setup_after(repl)\
  local mt = {}\
\
  function mt:__newindex(key, value)\
    if type(value) ~= 'function' then\
      error(tostring(value) .. \" is not a function\", 2)\
    end\
\
    local old_value = repl[key]\
\
    if old_value == nil then\
      error(sformat(\"The '%s' method does not exist\", key), 2)\
    end\
\
    repl[key] = function(...)\
      local _, results = gather_results(true, old_value(...))\
      value(...)\
      return unpack(results, 1, results.n)\
    end\
  end\
\
  return setmetatable({}, mt)\
end\
\
local function setup_around(repl)\
  local mt = {}\
\
  function mt:__newindex(key, value)\
    if type(value) ~= 'function' then\
      error(tostring(value) .. \" is not a function\", 2)\
    end\
\
    local old_value = repl[key]\
\
    if old_value == nil then\
      error(sformat(\"The '%s' method does not exist\", key), 2)\
    end\
\
    repl[key] = function(self, ...)\
      return value(self, old_value, ...)\
    end\
  end\
\
  return setmetatable({}, mt)\
end\
\
local function setup_override(repl)\
  local mt = {}\
\
  function mt:__newindex(key, value)\
    if type(value) ~= 'function' then\
      error(tostring(value) .. \" is not a function\", 2)\
    end\
\
    local old_value = repl[key]\
\
    if old_value == nil then\
      error(sformat(\"The '%s' method does not exist\", key), 2)\
    end\
\
    repl[key] = value\
  end\
\
  return setmetatable({}, mt)\
end\
\
local function setup_repl(repl)\
  local mt = {}\
\
  function mt:__newindex(key, value)\
    local old_value = repl[key]\
\
    if old_value ~= nil then\
      error(sformat(\"The '%s' method already exists\", key), 2)\
    end\
\
    repl[key] = value\
  end\
\
  function mt:__index(key)\
    local value = repl[key]\
\
    if type(value) == 'function' then\
      -- XXX cache this?\
      return function(_, ...)\
        return value(repl, ...)\
      end\
    end\
\
    return value\
  end\
\
  return setmetatable({}, mt)\
end\
\
-- TODO use lua-procure for this (eventually)\
local function findchunk(name)\
  for _, loader in pairs(package.loaders) do\
    local chunk = loader(name)\
\
    if type(chunk) == 'function' then\
      return chunk\
    end\
  end\
\
  error('unable to locate plugin', 3)\
end\
\
function repl:loadplugin(chunk)\
  if self:hasplugin(chunk) then\
    error(sformat('plugin %q has already been loaded', tostring(chunk)), 2)\
  end\
  self._plugins[chunk] = true\
\
  local actions         = self._ifplugin[chunk]\
  self._ifplugin[chunk] = nil\
\
  if type(chunk) == 'string' then\
    chunk = findchunk('repl.plugins.' .. chunk)\
  end\
\
  local plugin_env = {\
    repl     = setup_repl(self),\
    before   = setup_before(self),\
    after    = setup_after(self),\
    around   = setup_around(self),\
    override = setup_override(self),\
    init     = function() end,\
  }\
\
  local function ro_globals(_, key, _)\
    error(sformat('global environment is read-only (key = %q)', key), 2)\
  end\
\
  plugin_env._G       = plugin_env\
  plugin_env.features = {}\
  setmetatable(plugin_env, { __index = _G, __newindex = ro_globals })\
\
  setfenv(chunk, plugin_env)\
  chunk()\
\
  local features = plugin_env.features or {}\
\
  if type(features) == 'string' then\
    features = { features }\
  end\
\
  for _, feature in ipairs(features) do\
    if self._features[feature] then\
      error(sformat('feature %q already present', feature), 2)\
    end\
\
    self._features[feature] = true\
  end\
\
  if actions then\
    for _, action in ipairs(actions) do\
      action()\
    end\
  end\
end\
\
-- XXX how to guarantee this gets called?\
function repl:shutdown()\
end\
\
function repl:getcontext()\
  return _G\
end\
\
return repl\
"
, '@'..".\\lua-libraries\\repl\\init.lua" ) )

package.preload[ "lua-libraries\\std\\debug" ] = assert( (loadstring or load)(
"--[[--\
 Additions to the debug module\
 @module std.debug\
]]\
\
local init   = require \"std.debug_init\"\
local io     = require \"std.io\"\
local list   = require \"std.list\"\
local string = require \"std.string\"\
\
--- To activate debugging set _DEBUG either to any true value\
-- (equivalent to {level = 1}), or as documented below.\
-- @class table\
-- @name _DEBUG\
-- @field level debugging level\
-- @field call do call trace debugging\
-- @field std do standard library debugging (run examples & test code)\
\
\
--- Print a debugging message.\
-- @param n debugging level, defaults to 1\
-- @param ... objects to print (as for print)\
local function say (n, ...)\
  local level = 1\
  local arg = {n, ...}\
  if type (arg[1]) == \"number\" then\
    level = arg[1]\
    table.remove (arg, 1)\
  end\
  if init._DEBUG and\
    ((type (init._DEBUG) == \"table\" and type (init._DEBUG.level) == \"number\" and\
      init._DEBUG.level >= level)\
       or level <= 1) then\
    io.writelines (io.stderr, table.concat (list.map (string.tostring, arg), \"\\t\"))\
  end\
end\
\
--- Trace function calls.\
-- Use as debug.sethook (trace, \"cr\"), which is done automatically\
-- when _DEBUG.call is set.\
-- Based on test/trace-calls.lua from the Lua distribution.\
-- @class function\
-- @name trace\
-- @param event event causing the call\
local level = 0\
local function trace (event)\
  local t = debug.getinfo (3)\
  local s = \" >>> \" .. string.rep (\" \", level)\
  if t ~= nil and t.currentline >= 0 then\
    s = s .. t.short_src .. \":\" .. t.currentline .. \" \"\
  end\
  t = getinfo (2)\
  if event == \"call\" then\
    level = level + 1\
  else\
    level = math.max (level - 1, 0)\
  end\
  if t.what == \"main\" then\
    if event == \"call\" then\
      s = s .. \"begin \" .. t.short_src\
    else\
      s = s .. \"end \" .. t.short_src\
    end\
  elseif t.what == \"Lua\" then\
    s = s .. event .. \" \" .. (t.name or \"(Lua)\") .. \" <\" ..\
      t.linedefined .. \":\" .. t.short_src .. \">\"\
  else\
    s = s .. event .. \" \" .. (t.name or \"(C)\") .. \" [\" .. t.what .. \"]\"\
  end\
  io.writelines (io.stderr, s)\
end\
\
-- Set hooks according to init._DEBUG\
if type (init._DEBUG) == \"table\" and init._DEBUG.call then\
  debug.sethook (trace, \"cr\")\
end\
\
--- @export\
local M = {\
  say   = say,\
  trace = trace,\
}\
\
for k, v in pairs (debug) do\
  M[k] = M[k] or v\
end\
\
--- The global function `debug` is an abbreviation for `debug.say (1, ...)`\
-- @function debug\
-- @see say\
local metatable = {\
  __call = function (self, ...)\
             say (1, ...)\
           end,\
}\
\
return setmetatable (M, metatable)\
"
, '@'..".\\lua-libraries\\std\\debug.lua" ) )

package.preload[ "lua-libraries\\std\\base" ] = assert( (loadstring or load)(
"------\
-- @module std.base\
\
-- Doc-commented in table.lua...\
local function clone (t, nometa)\
  local u = {}\
  if not nometa then\
    setmetatable (u, getmetatable (t))\
  end\
  for i, v in pairs (t) do\
    u[i] = v\
  end\
  return u\
end\
\
-- Doc-commented in table.lua...\
local function clone_rename (map, t)\
  local r = clone (t)\
  for i, v in pairs (map) do\
    r[v] = t[i]\
    r[i] = nil\
  end\
  return r\
end\
\
-- Doc-commented in table.lua...\
local function merge (t, u)\
  for i, v in pairs (u) do\
    t[i] = v\
  end\
  return t\
end\
\
local new -- forward declaration\
\
-- Doc-commented in list.lua...\
local function append (l, x)\
  local r = {unpack (l)}\
  table.insert (r, x)\
  return r\
end\
\
-- Doc-commented in list.lua...\
local function compare (l, m)\
  for i = 1, math.min (#l, #m) do\
    if l[i] < m[i] then\
      return -1\
    elseif l[i] > m[i] then\
      return 1\
    end\
  end\
  if #l < #m then\
    return -1\
  elseif #l > #m then\
    return 1\
  end\
  return 0\
end\
\
-- Doc-commented in list.lua...\
local function elems (l)\
  local n = 0\
  return function (l)\
           n = n + 1\
           if n <= #l then\
             return l[n]\
           end\
         end,\
  l, true\
end\
\
--- Concatenate lists.\
-- @param ... lists\
-- @return `{l<sub>1</sub>[1], ...,\
-- l<sub>1</sub>[#l<sub>1</sub>], ..., l<sub>n</sub>[1], ...,\
-- l<sub>n</sub>[#l<sub>n</sub>]}`\
local function concat (...)\
  local r = new ()\
  for l in elems ({...}) do\
    for v in elems (l) do\
      table.insert (r, v)\
    end\
  end\
  return r\
end\
\
local function _leaves (it, tr)\
  local function visit (n)\
    if type (n) == \"table\" then\
      for _, v in it (n) do\
        visit (v)\
      end\
    else\
      coroutine.yield (n)\
    end\
  end\
  return coroutine.wrap (visit), tr\
end\
\
-- Metamethods for lists\
-- It would be nice to define this in `list.lua`, but then we\
-- couldn't keep `new` here, and other modules that really only\
-- need `list.new` (as opposed to the entire `std.list` API) get\
-- caught in a dependency loop.\
local metatable = {\
  -- list .. table = list.concat\
  __concat = concat,\
\
  -- list == list retains its referential meaning\
  --\
  -- list < list = list.compare returns < 0\
  __lt = function (l, m) return compare (l, m) < 0 end,\
\
  -- list <= list = list.compare returns <= 0\
  __le = function (l, m) return compare (l, m) <= 0 end,\
\
  __append = append,\
}\
\
--- List constructor.\
-- Needed in order to use metamethods.\
-- @param t list (as a table), or nil for empty list\
-- @return list (with list metamethods)\
function new (t)\
  return setmetatable (t or {}, metatable)\
end\
\
\
-- Doc-commented in tree.lua...\
local function ileaves (tr)\
  assert (type (tr) == \"table\",\
          \"bad argument #1 to 'ileaves' (table expected, got \" .. type (tr) .. \")\")\
  return _leaves (ipairs, tr)\
end\
\
-- Doc-commented in tree.lua...\
local function leaves (tr)\
  assert (type (tr) == \"table\",\
          \"bad argument #1 to 'leaves' (table expected, got \" .. type (tr) .. \")\")\
  return _leaves (pairs, tr)\
end\
\
local M = {\
  append       = append,\
  clone        = clone,\
  clone_rename = clone_rename,\
  compare      = compare,\
  concat       = concat,\
  elems        = elems,\
  ileaves      = ileaves,\
  leaves       = leaves,\
  merge        = merge,\
  new          = new,\
\
  -- list metatable\
  _list_mt     = metatable,\
}\
\
return M\
"
, '@'..".\\lua-libraries\\std\\base.lua" ) )

package.preload[ "core\\utilities" ] = assert( (loadstring or load)(
"local utilities = {}\
\
require(\"bit32-compat\")\
\
function utilities.required(t, name, context)\
  if not t[name] then utilities.error(context..\" needs a \"..name..\" parameter\") end\
  return t[name]\
end\
\
function utilities.error(message,bug)\
  if(SILE.currentCommand) then\
    print(\"\\n! \"..message.. \" at \"..SILE.currentlyProcessingFile..\" l.\"..(SILE.currentCommand.line)..\", col.\"..(SILE.currentCommand.col))\
  else\
    print(\"\\n! \"..message.. \" at \"..SILE.currentlyProcessingFile)\
  end\
  if bug then print(debug.traceback()) end\
  os.exit(1)\
end\
\
function utilities.warn(message)\
  print(\"\\n! \"..message)\
  --print(debug.traceback())\
  --os.exit(1)\
end\
\
function utilities.debugging(category)\
  return SILE.debugFlags.all or SILE.debugFlags[category]\
end\
\
function utilities.gtoke(string, pattern)\
  string = string and tostring(string) or ''\
  pattern = pattern and tostring(pattern) or \"%s+\"\
  local length = #string\
  return coroutine.wrap(function()\
    local index = 1\
    repeat\
      local first, last = string:find(pattern, index)\
      if last then\
        if index < first then coroutine.yield({ string = string:sub(index, first - 1) }) end\
        coroutine.yield({ separator = string:sub(first, last) })\
        index = last + 1\
      else\
        if index <= length then\
          coroutine.yield({ string = string:sub(index) })\
        end\
        break\
      end\
    until index > length\
  end)\
end\
\
function utilities.debug(category, messages)\
  if utilities.debugging(category) then\
    print(\"[\"..category..\"]\", messages)\
  end\
end\
\
function utilities.concat(array, c)\
  return table.concat(utilities.map(tostring, array), c)\
end\
\
function utilities.inherit(orig, spec)\
  local new = std.tree.clone(orig)\
  if spec then\
    for k,v in pairs(spec) do new[k] = v end\
  end\
  if new.init then new:init() end\
  return new\
end\
\
function utilities.map(func, array)\
  local new_array = {}\
  local last = #array\
  for i = 1, last do\
    new_array[i] = func(array[i])\
  end\
  return new_array\
end\
\
function utilities.splice(array, start, stop, replacement)\
  local ptr = start\
  local room = stop - start + 1\
  local last = replacement and #replacement or 0\
  for i = 1, last do\
    if room > 0 then\
      room = room - 1\
      array[ptr] = replacement[i]\
    else\
      table.insert(array, ptr, replacement[i])\
    end\
    ptr = ptr + 1\
  end\
\
  for i = 1, room do\
      table.remove(array, ptr)\
  end\
  return array\
end\
\
function utilities.sum(array)\
  local t = 0\
  local last = #array\
  for i = 1, last do\
    t = t + array[i]\
  end\
  return t\
end\
\
function utilities.codepoint(uchar)\
  local seq = 0\
  local val = -1\
  for i = 1, #uchar do\
    local c = string.byte(uchar, i)\
    if seq == 0 then\
      if val > -1 then return val end\
      seq = c < 0x80 and 1 or c < 0xE0 and 2 or c < 0xF0 and 3 or\
            c < 0xF8 and 4 or --c < 0xFC and 5 or c < 0xFE and 6 or\
          error(\"invalid UTF-8 character sequence\")\
      val = bit32.band(c, 2^(8-seq) - 1)\
    else\
      val = bit32.bor(bit32.lshift(val, 6), bit32.band(c, 0x3F))\
    end\
    seq = seq - 1\
  end  \
  return val\
end\
\
return utilities\
"
, '@'..".\\core\\utilities.lua" ) )

package.preload[ "lua-libraries\\repl\\utils" ] = assert( (loadstring or load)(
"-- Copyright (c) 2011-2014 Rob Hoelz <rob@hoelz.ro>\
--\
-- Permission is hereby granted, free of charge, to any person obtaining a copy of\
-- this software and associated documentation files (the \"Software\"), to deal in\
-- the Software without restriction, including without limitation the rights to\
-- use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\
-- the Software, and to permit persons to whom the Software is furnished to do so,\
-- subject to the following conditions:\
--\
-- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\
--\
-- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\
-- FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\
-- COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\
-- IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\
-- CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\
\
local setfenv = setfenv or function(f, t)\
  local upvalue_index = 1\
\
  -- XXX we may need a utility library if debug isn't available\
  while true do\
    local name = debug.getupvalue(f, upvalue_index)\
    -- some functions don't have an _ENV upvalue, because\
    -- they never refer to globals\
    if not name then\
      return\
    end\
    if name == '_ENV' then\
      debug.setupvalue(f, upvalue_index, t)\
      return\
    end\
    upvalue_index = upvalue_index + 1\
  end\
end\
\
return {\
  setfenv = setfenv,\
}\
"
, '@'..".\\lua-libraries\\repl\\utils.lua" ) )

package.preload[ "lua-libraries\\repl\\sync" ] = assert( (loadstring or load)(
"-- Copyright (c) 2011-2014 Rob Hoelz <rob@hoelz.ro>\
--\
-- Permission is hereby granted, free of charge, to any person obtaining a copy of\
-- this software and associated documentation files (the \"Software\"), to deal in\
-- the Software without restriction, including without limitation the rights to\
-- use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\
-- the Software, and to permit persons to whom the Software is furnished to do so,\
-- subject to the following conditions:\
--\
-- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\
--\
-- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\
-- FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\
-- COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\
-- IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\
-- CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\
\
local repl      = require 'repl'\
local sync_repl = repl:clone()\
local error     = error\
\
-- @class repl.sync\
--- This module implements a synchronous REPL.  It provides\
--- a run() method for actually running the REPL, and requires\
--- that implementors implement the lines() method.\
\
--- Run a REPL loop in a synchronous fashion.\
-- @name repl.sync:run\
function sync_repl:run()\
  self:prompt(1)\
  for line in self:lines() do\
    local level = self:handleline(line)\
    self:prompt(level)\
  end\
  self:shutdown()\
end\
\
--- Returns an iterator that yields lines to be evaluated.\
-- @name repl.sync:lines\
-- @return An iterator.\
function sync_repl:lines()\
  error 'You must implement the lines method'\
end\
\
return sync_repl\
"
, '@'..".\\lua-libraries\\repl\\sync.lua" ) )

package.preload[ "lua-libraries\\imagesize\\format\\gif" ] = assert( (loadstring or load)(
"local Util = require \"imagesize.util\"\
\
local MIME_TYPE = \"image/gif\"\
\
local DEFAULT_GIF_BEHAVIOR = \"screen\"\
local ALLOWED_GIF_BEHAVIOR = { screen = true, first = true, largest = true }\
\
local function _gif_blockskip (stream, skip, typ)\
    while true do\
        local buf = stream:read(skip)\
        if not buf or buf:len() ~= skip then\
            return \"invalid/corrupted GIF (at EOF in GIF \" .. typ .. \")\"\
        end\
        local lbuf = stream:read(1)     -- Block size\
        if lbuf and lbuf ~= \"\" then\
            skip = lbuf:byte(1)\
            if skip == 0 then break end  -- Block terminator\
        end\
    end\
end\
\
local function _skip_table_based_image (stream)\
    local flags = stream:read(1)\
    if not flags or flags == \"\" then return false end\
    flags = flags:byte(1)\
\
    -- Skip local color table.\
    if flags >= 0x80 then\
        local cmapsize = 3 * (2 ^ ((x % 8) + 1))\
        local buf = stream:read(cmapsize)\
        if not buf or buf:len() ~= cmapsize then return false end\
    end\
\
    -- Skip LZW minimum code size byte, then table based image data blocks.\
    return not _gif_blockskip(stream, 1, \"image\")\
end\
\
local function size (stream, options)\
    local gif_behavior = options.gif_behavior or DEFAULT_GIF_BEHAVIOR\
    if not ALLOWED_GIF_BEHAVIOR[gif_behavior] then\
        error(\"invalid 'gif_behavior' option\", 3)\
    end\
\
    -- Skip over the identifying string, since we already know this is a GIF\
    local typ  = stream:read(6)\
    local buf = stream:read(7)\
    if not typ or not buf or typ:len() ~= 6 or buf:len() ~= 7 then\
        return nil, nil, \"invalid/corrupted GIF (incomplete header)\"\
    end\
\
    local sw = Util.get_uint16_le(buf, 1)\
    local sh = Util.get_uint16_le(buf, 3)\
    local x = buf:byte(5)\
\
    if gif_behavior == \"screen\" then return sw, sh, MIME_TYPE end\
\
    if x >= 0x80 then\
        local cmapsize = 3 * (2 ^ ((x % 8) + 1))\
        buf = stream:read(cmapsize)\
        if not buf or buf:len() ~= cmapsize then\
            return nil, nil,\
                   \"invalid/corrupted GIF (global color map too small?)\"\
        end\
    end\
\
    -- Before we start this loop, set $sw and $sh to 0s and use them to track\
    -- the largest sub-image in the overall GIF.\
    sw, sh = 0, 0\
\
    while true do\
        buf = stream:read(1)\
        if not buf or buf == \"\" then\
            -- At this point, if we haven't returned then the user wants the\
            -- largest of the sub-images. So, if $sh and $sw are still 0s, then\
            -- we didn't see even one Image Descriptor block. Otherwise, return\
            -- those two values.\
            if sw > 0 and sh > 0 then\
                return sw, sh, MIME_TYPE\
            else\
                return nil, nil, \"invalid/corrupted GIF (no Image Descriptors)\"\
            end\
        end\
        x = buf:byte(1)\
        if x == 0x2C then\
            -- Image Descriptor (GIF87a, GIF89a 20.c.i)\
            buf = stream:read(8)\
            if not buf or buf:len() ~= 8 then\
                return nil, nil, \"invalid/corrupted GIF (missing image header?)\"\
            end\
            local w, h = Util.get_uint16_le(buf, 5), Util.get_uint16_le(buf, 7)\
            if gif_behavior == \"first\" then return w, h, MIME_TYPE end\
            if w > sw and h > sh then sw, sh = w, h end\
            if not _skip_table_based_image(stream) then\
                return nil, nil, \"incomplete/invalid table based image in GIF\"\
            end\
        elseif x == 0x21 then\
            -- Extension Introducer (GIF89a 23.c.i, could also be in GIF87a)\
            buf = stream:read(1)\
            if buf and buf ~= \"\" then\
                x = buf:byte(1)\
                if x == 0xF9 then\
                    -- Graphic Control Extension (GIF89a 23.c.ii)\
                    stream:read(6)  -- skip it\
                elseif x == 0xFE then\
                    -- Comment Extension (GIF89a 24.c.ii)\
                    local err = _gif_blockskip(stream, 0, \"Comment\")\
                    if err then return nil, nil, err end\
                elseif x == 0x01 then\
                    -- Plain Text Label (GIF89a 25.c.ii)\
                    local err = _gif_blockskip(stream, 13, \"text data\")\
                    if err then return nil, nil, err end\
                elseif x == 0xFF then\
                    -- Application Extension Label (GIF89a 26.c.ii)\
                    local err = _gif_blockskip(stream, 12, \"application data\")\
                    if err then return nil, nil, err end\
                else\
                    return nil, nil,\
                            string.format(\"invalid/corrupted GIF (unknown\" ..\
                                          \" extension 0x%X)\", x)\
                end\
            end\
        elseif x == 0x3B then\
            if sw > 0 and sh > 0 then\
                return sw, sh, MIME_TYPE\
            else\
                return nil, nil, \"GIF trailer reached with no image size found\"\
            end\
        else\
            return nil, nil,\
                   string.format(\"invalid/corrupted GIF (unknown code 0x%X)\", x)\
        end\
    end\
end\
\
return size\
-- vi:ts=4 sw=4 expandtab\
"
, '@'..".\\lua-libraries\\imagesize\\format\\gif.lua" ) )

package.preload[ "lua-libraries\\repl\\plugins\\semicolon_suppress_output" ] = assert( (loadstring or load)(
"-- Copyright (c) 2011-2014 Rob Hoelz <rob@hoelz.ro>\
--\
-- Permission is hereby granted, free of charge, to any person obtaining a copy of\
-- this software and associated documentation files (the \"Software\"), to deal in\
-- the Software without restriction, including without limitation the rights to\
-- use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\
-- the Software, and to permit persons to whom the Software is furnished to do so,\
-- subject to the following conditions:\
--\
-- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\
--\
-- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\
-- FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\
-- COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\
-- IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\
-- CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\
\
local smatch = string.match\
\
-- XXX will this affect any other plugins?\
function around:compilechunk(orig, chunk)\
  local f, err = orig(self, chunk)\
\
  if not f then\
    return f, err\
  end\
\
  if smatch(chunk, ';%s*$') then\
    return function()\
      f()\
    end\
  end\
\
  return f\
end\
"
, '@'..".\\lua-libraries\\repl\\plugins\\semicolon_suppress_output.lua" ) )

package.preload[ "core\\podofo-output" ] = assert( (loadstring or load)(
"local pdf = require(\"podofo\");\
if (not SILE.outputters) then SILE.outputters = {} end\
\
local document\
local page\
local painter\
local pagesize\
local font\
local lastfont\
\
local podofoFaces = {}\
\
local cursorX = 0\
local cursorY = 0\
SILE.outputters.podofo = {\
  init = function()\
    document = pdf.PdfMemDocument()\
    pagesize = pdf.PdfRect()\
    pagesize:SetWidth(SILE.documentState.paperSize[1])\
    pagesize:SetHeight(SILE.documentState.paperSize[2])\
    page = document:CreatePage(pagesize)\
    painter = podofo.PdfPainter();\
    painter:SetPage(page)\
  end,\
  newPage = function()\
    painter:FinishPage()\
    page = document:CreatePage(pagesize)\
    painter:SetPage(page)\
  end,\
  finish = function()\
    painter:FinishPage()\
    document:Write(SILE.outputFilename)\
  end,\
  setColor = function (self, color)\
    painter:SetColor(color.r, color.g, color.b)\
  end,\
  outputHbox = function (value)\
    if not value.glyphNames then return end\
    for i = 1,#(value.glyphNames) do\
      painter:DrawGlyph(document,cursorX, cursorY, value.glyphNames[i])\
    end\
  end,\
  setFont = function (options)\
    if SILE.font._key(options) == lastkey then return end\
    lastkey = SILE.font._key(options)\
    if not podofoFaces[lastkey] then\
      local ftface = SILE.font.cache(options, function () SU.error(\"Font should exist\") end)\
      print(ftface.filename)\
      podofoFaces[lastkey] = document:CreateFont(ftface.face)\
    end\
    podofoFaces[lastkey]:SetFontSize(options.size)\
    painter:SetFont(podofoFaces[lastkey])\
    -- Podofo trashes the font, so we need to recompute.\
    SILE.fontCache[lastkey] = nil\
  end,\
  drawPNG = function (src, x,y,w,h)\
  end,\
  moveTo = function (x,y)\
    cursorX = x\
    cursorY = SILE.documentState.paperSize[2] - y\
  end,\
  rule = function (x,y,w,d)\
    painter:Rectangle(x,SILE.documentState.paperSize[2] - y,w,d)\
    painter:Close()\
    painter:Fill()\
  end,\
  debugFrame = function (self,f)\
  end,\
  debugHbox = function(typesetter, hbox, scaledWidth)\
    painter:SetColor(0.9,0.9,0.9);\
    painter:SetStrokeWidth(0.5);  \
    painter:Rectangle(typesetter.frame.state.cursorX, typesetter.frame.state.cursorY+(hbox.height), scaledWidth, hbox.height+hbox.depth);\
    if (hbox.depth) then painter:Rectangle(typesetter.frame.state.cursorX, typesetter.frame.state.cursorY+(hbox.height), scaledWidth, hbox.height); end\
    painter:Stroke();\
    painter:SetColor(0,0,0);\
    --cr:move_to(typesetter.frame.state.cursorX, typesetter.frame.state.cursorY);\
  end\
}\
\
SILE.outputter = SILE.outputters.podofo"
, '@'..".\\core\\podofo-output.lua" ) )

package.preload[ "lua-libraries\\std\\modules" ] = assert( (loadstring or load)(
"-- Set of imported modules.\
\
return {\
  -- true => module symbols injected into equivalent core namespace\
  --         with `require 'std'`:\
  debug      = true,\
  debug_init = false,\
  functional = false,\
  io         = true,\
  list       = false,\
  math       = true,\
  optparse   = false,\
  package    = true,\
  set        = false,\
  strbuf     = false,\
  string     = true,\
  table      = true,\
  tree       = false,\
}\
"
, '@'..".\\lua-libraries\\std\\modules.lua" ) )

package.preload[ "lua-libraries\\imagesize\\format\\xpm" ] = assert( (loadstring or load)(
"local MIME_TYPE = \"image/x-xpixmap\"\
\
-- Added by Randy J. Ray, 30 Jul 1996\
-- Size an XPM file by looking for the \"X Y N W\" line, where X and Y are\
-- dimensions, N is the total number of colors defined, and W is the width of a\
-- color in the ASCII representation, in characters. We only care about X & Y.\
local function size (stream, options)\
    for line in stream:lines() do\
        local _, _, x, y = line:find('\"%s*(%d+)%s+(%d+)[%s%d]+\"')\
        if x then return tonumber(x), tonumber(y), MIME_TYPE end\
    end\
\
    return nil, nil, \"can't find image size in XPM file\"\
end\
\
return size\
-- vi:ts=4 sw=4 expandtab\
"
, '@'..".\\lua-libraries\\imagesize\\format\\xpm.lua" ) )

package.preload[ "core\\hyphenator-liang" ] = assert( (loadstring or load)(
"local function addPattern(h, p)\
  local t = h.trie;\
  for char in p:gmatch('%D') do\
    if not(t[char]) then t[char] = {} end\
    t = t[char]\
  end\
  t[\"_\"] = {};\
  local lastWasDigit = 0\
  for char in p:gmatch('.') do\
    if char:find(\"%d\") then \
      lastWasDigit = 1\
      table.insert(t[\"_\"], tonumber(char))\
    elseif lastWasDigit == 1 then\
      lastWasDigit = 0\
    else\
      table.insert(t[\"_\"], 0)\
    end\
  end\
end\
\
function loadPatterns(h, language)\
  SILE.languageSupport.loadLanguage(language)\
\
  local languageset = SILE.hyphenator.languages[language];\
  if not (languageset) then \
    print(\"No patterns for language \"..language)\
    return\
  end\
  for _,pat in pairs(languageset.patterns) do addPattern(h, pat) end\
  if not languageset.exceptions then languageset.exceptions = {} end\
  for _,exc in pairs(languageset.exceptions) do\
    local k = exc:gsub(\"-\", \"\")\
    h.exceptions[k] = { 0 }\
    for i in exc:gmatch(\".\") do table.insert(h.exceptions[k], i == \"-\" and 1 or 0) end\
  end\
end\
\
function _hyphenate(self, w)\
  if string.len(w) < self.minWord then return {w} end\
  local points = self.exceptions[w:lower()]\
  local word = {}\
  for i in w:gmatch(\".\") do table.insert(word, i) end\
  if not points then\
    points = SU.map(function()return 0 end, word)\
    local work = SU.map(string.lower, word)\
    table.insert(work, \".\")\
    table.insert(work, 1, \".\")\
    table.insert(points, 1, 0)\
    for i = 1, #work do\
      local t = self.trie\
      for j = i, #work do\
        if not t[work[j]] then break end\
        t = t[work[j]]\
        local p = t[\"_\"]\
        if p then\
          for k = 1, #p do\
            if points[i+k - 2] and points[i+k -2] < p[k] then\
              points[i+k -2] = p[k]\
            end\
          end\
        end\
      end\
    end\
    -- Still inside the no-exceptions case\
    for i = 1,self.leftmin do points[i] = 0 end\
    for i = #points-self.rightmin,#points do points[i] = 0 end\
  end\
  local pieces = {\"\"}\
  for i = 1,#word do\
    pieces[#pieces] = pieces[#pieces] .. word[i]\
    if points[1+i] and 1 == (points[1+i] % 2) then table.insert(pieces, \"\") end\
  end\
  return pieces\
end\
\
SILE.hyphenator = {}\
SILE.hyphenator.languages = {};\
_hyphenators = {};\
\
SILE.hyphenate = function (nodelist)\
  --local itList = std.tree.clone(nodelist)\
  for i,n in ipairs(nodelist) do\
    if (n:isNnode() and n.text) then\
      if not _hyphenators[n.language] then\
        _hyphenators[n.language] = {minWord = 5, leftmin = 2, rightmin = 2, trie = {}, exceptions = {} };\
        loadPatterns(_hyphenators[n.language], n.language)\
      end\
      local breaks = _hyphenate(_hyphenators[n.language],n.text);\
      if #breaks > 1 then\
        local newnodes = {}\
        for j, b in ipairs(breaks) do\
          if not(b==\"\") then\
            for _,nn in pairs(SILE.shaper.shape(b, n.options)) do \
              nn.parent = n\
              table.insert(newnodes, nn)\
            end\
            if not (j == #breaks) then\
              d = SILE.nodefactory.newDiscretionary({ prebreak = SILE.shaper.shape(\"-\", { pal = n.pal, options = n.options } ) })\
              d.parent = n\
              table.insert(newnodes, d)\
             --table.insert(newnodes, SILE.nodefactory.newPenalty({ value = SILE.settings.get(\"typesetter.hyphenpenalty\") }))\
            end\
          end\
        end\
        n.children = newnodes\
        n.hyphenated = false\
        n.done = false\
        SU.splice(nodelist, i, i, newnodes);\
        i = i + #newnodes - 1\
      end\
    end\
  end\
  return nodelist\
end\
"
, '@'..".\\core\\hyphenator-liang.lua" ) )

package.preload[ "lua-libraries\\repl\\plugins\\linenoise" ] = assert( (loadstring or load)(
"-- Copyright (c) 2011-2014 Rob Hoelz <rob@hoelz.ro>\
--\
-- Permission is hereby granted, free of charge, to any person obtaining a copy of\
-- this software and associated documentation files (the \"Software\"), to deal in\
-- the Software without restriction, including without limitation the rights to\
-- use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\
-- the Software, and to permit persons to whom the Software is furnished to do so,\
-- subject to the following conditions:\
--\
-- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\
--\
-- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\
-- FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\
-- COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\
-- IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\
-- CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\
\
-- A plugin that uses linenoise (https://github.com/hoelzro/lua-linenoise) for prompting\
\
local ln = require 'linenoise'\
\
repl:requirefeature 'console'\
\
function override:showprompt(prompt)\
  self._prompt = prompt -- XXX how do we make sure other plugins don't step on this?\
end\
\
function override:lines()\
  return function()\
    return ln.linenoise(self._prompt .. ' ')\
  end\
end\
\
repl:ifplugin('completion', function()\
  ln.setcompletion(function(completions, line)\
    repl:complete(line, function(completion)\
      ln.addcompletion(completions, completion)\
    end)\
  end)\
end)\
\
repl:ifplugin('history', function()\
  repl:setuphistorycallbacks {\
    load = function(filename)\
      ln.historyload(filename)\
    end,\
\
    addline = function(line)\
      ln.historyadd(line)\
    end,\
\
    save = function(filename)\
      ln.historysave(filename)\
    end,\
  }\
end)\
\
features = 'input'\
"
, '@'..".\\lua-libraries\\repl\\plugins\\linenoise.lua" ) )

package.preload[ "lua-libraries\\lomwithpos" ] = assert( (loadstring or load)(
"\
local lxp = require \"lxp\"\
\
local tinsert, tremove = table.insert, table.remove\
local assert, type, print = assert, type, print\
\
local function starttag (p, tag, attr)\
  local stack = p:getcallbacks().stack\
  local l, c, pos = p:pos()\
  local newelement = {tag = tag, attr = attr, line = l, col = c}\
  tinsert(stack, newelement)\
end\
\
local function endtag (p, tag)\
  local stack = p:getcallbacks().stack\
  local element = tremove(stack)\
  assert(element.tag == tag)\
  local level = #stack\
  tinsert(stack[level], element)\
end\
\
local function text (p, txt)\
  local stack = p:getcallbacks().stack\
  local element = stack[#stack]\
  local n = #element\
  if type(element[n]) == \"string\" then\
    element[n] = element[n] .. txt\
  else\
    tinsert(element, txt)\
  end\
end\
\
local function parse (o)\
  local c = { StartElement = starttag,\
              EndElement = endtag,\
              CharacterData = text,\
              _nonstrict = true,\
              stack = {{}}\
            }\
  local p = lxp.new(c)\
  local status, err\
  if type(o) == \"string\" then\
    status, err = p:parse(o)\
    if not status then return nil, err end\
  else\
    for l in pairs(o) do\
      status, err = p:parse(l)\
      if not status then return nil, err end\
    end\
  end\
  status, err = p:parse()\
  if not status then return nil, err end\
  p:close()\
  return c.stack[1][1]\
end\
\
return { parse = parse }\
"
, '@'..".\\lua-libraries\\lomwithpos.lua" ) )

package.preload[ "core\\libtexpdf-output" ] = assert( (loadstring or load)(
"local pdf = require(\"justenoughlibtexpdf\");\
if (not SILE.outputters) then SILE.outputters = {} end\
local cursorX = 0\
local cursorY = 0\
local font = 0\
local lastW = 0\
SILE.outputters.libtexpdf = {\
  init = function()\
    pdf.init(SILE.outputFilename, SILE.documentState.paperSize[1],SILE.documentState.paperSize[2])\
    pdf.beginpage()\
  end,\
  newPage = function()\
    pdf.endpage()\
    pdf.beginpage()\
  end,\
  finish = function()\
    pdf.endpage()\
    pdf.finish()\
  end,\
  setColor = function(self, color)\
    pdf.setcolor(color.r, color.g, color.b)\
  end,\
  pushColor = function (self, color)\
    pdf.colorpush(color.r, color.g, color.b)\
  end,\
  popColor = function (self)\
    pdf.colorpop()\
  end,\
  outputHbox = function (value,w)\
    if not value.glyphString then return end\
    local buf = {}\
    for i=1,#(value.glyphString) do\
      glyph = value.glyphString[i]\
      buf[#buf+1] = string.char(math.floor(glyph % 2^32 / 2^8))\
      buf[#buf+1] = string.char(glyph % 0x100)\
    end\
    buf = table.concat(buf, \"\")\
    pdf.setstring(cursorX, cursorY, buf, string.len(buf), font, w)\
    lastW = w\
  end,\
  setFont = function (options)\
    if SILE.font._key(options) == lastkey then return end\
    lastkey = SILE.font._key(options)\
    font = SILE.font.cache(options)\
    f = pdf.loadfont(font)\
    font = f\
  end,\
  drawImage = function (src, x,y,w,h)\
    pdf.drawimage(src, x, y, w, h)\
  end,\
  moveTo = function (x,y)\
    cursorX = x\
    cursorY = SILE.documentState.paperSize[2] - y\
  end,\
  rule = function (x,y,w,d)\
    pdf.setrule(x,SILE.documentState.paperSize[2] -y,w,d)\
  end,\
  debugFrame = function (self,f)\
    pdf.colorpush(0.8,0,0)\
    self.rule(f:left(), f:top(), f:width(), 0.5)\
    self.rule(f:left(), f:top(), 0.5, - f:height())\
    self.rule(f:right(), f:top(), 0.5, - f:height())\
    self.rule(f:left(), f:bottom(), f:width(), 0.5)\
    --self.rule(f:left() + f:width()/2 - 5, (f:top() + f:bottom())/2+5, 10, 10)\
    pdf.colorpop()\
  end,\
  debugHbox = function(typesetter, hbox, scaledWidth)\
  end\
}\
\
SILE.outputter = SILE.outputters.libtexpdf"
, '@'..".\\core\\libtexpdf-output.lua" ) )

package.preload[ "lua-libraries\\std\\set" ] = assert( (loadstring or load)(
"--[[--\
 Set container.\
\
 Derived from @{std.container}, and inherits Container's metamethods.\
\
 Note that Functions listed below are available only available from the\
 Set prototype returned by requiring this module, because Container\
 objects cannot have object methods.\
\
 @classmod std.set\
 @see std.container\
 ]]\
\
local base      = require \"std.base\"\
local Container = require \"std.container\"\
local prototype = (require \"std.object\").prototype\
\
\
local Set -- forward declaration\
\
-- Primitive methods (know about representation)\
-- The representation is a table whose tags are the elements, and\
-- whose values are true.\
\
\
--- Say whether an element is in a set.\
-- @tparam set set a set\
-- @param e element\
-- @return `true` if `e` is in `set`, otherwise `false`\
-- otherwise\
local function member (set, e)\
  return rawget (set, e) == true\
end\
\
\
--- Insert an element into a set.\
-- @tparam set set a set\
-- @param e element\
-- @return the modified set\
local function insert (set, e)\
  rawset (set, e, true)\
  return set\
end\
\
\
--- Delete an element from a set.\
-- @tparam set set a set\
-- @param e element\
-- @return the modified set\
local function delete (set, e)\
  rawset (set, e, nil)\
  return set\
end\
\
\
--- Iterator for sets.\
-- @tparam set set a set\
-- @todo Make the iterator return only the key\
local function elems (set)\
  return pairs (set)\
end\
\
\
-- High level methods (representation-independent)\
\
local difference, symmetric_difference, intersection, union, subset,\
      proper_subset, equal\
\
\
--- Find the difference of two sets.\
-- @tparam set set1 a set\
-- @tparam table|set set2 another set, or table\
-- @return `set1` with elements of s removed\
function difference (set1, set2)\
  if prototype (set2) == \"table\" then\
    set2 = Set (set2)\
  end\
  local t = Set {}\
  for e in elems (set1) do\
    if not member (set2, e) then\
      insert (t, e)\
    end\
  end\
  return t\
end\
\
\
--- Find the symmetric difference of two sets.\
-- @tparam set set1 a set\
-- @tparam table|set set2 another set, or table\
-- @return elements of `set1` and `set2` that are in `set1` or `set2` but not both\
function symmetric_difference (set1, set2)\
  if prototype (set2) == \"table\" then\
    set2 = Set (set2)\
  end\
  return difference (union (set1, set2), intersection (set2, set1))\
end\
\
\
--- Find the intersection of two sets.\
-- @tparam set set1 a set\
-- @tparam table|set set2 another set, or table\
-- @return set intersection of `set1` and `set2`\
function intersection (set1, set2)\
  if prototype (set2) == \"table\" then\
    set2 = Set (set2)\
  end\
  local t = Set {}\
  for e in elems (set1) do\
    if member (set2, e) then\
      insert (t, e)\
    end\
  end\
  return t\
end\
\
\
--- Find the union of two sets.\
-- @tparam set set1 a set\
-- @tparam table|set set2 another set, or table\
-- @return set union of `set1` and `set2`\
function union (set1, set2)\
  if prototype (set2) == \"table\" then\
    set2 = Set (set2)\
  end\
  local t = Set {}\
  for e in elems (set1) do\
    insert (t, e)\
  end\
  for e in elems (set2) do\
    insert (t, e)\
  end\
  return t\
end\
\
\
--- Find whether one set is a subset of another.\
-- @tparam set set1 a set\
-- @tparam table|set set2 another set, or table\
-- @return `true` if `set1` is a subset of `set2`, `false` otherwise\
function subset (set1, set2)\
  if prototype (set2) == \"table\" then\
    set2 = Set (set2)\
  end\
  for e in elems (set1) do\
    if not member (set2, e) then\
      return false\
    end\
  end\
  return true\
end\
\
\
--- Find whether one set is a proper subset of another.\
-- @tparam set set1 a set\
-- @tparam table|set set2 another set, or table\
-- @return `true` if `set1` is a proper subset of `set2`, `false` otherwise\
function proper_subset (set1, set2)\
  if prototype (set2) == \"table\" then\
    t = Set (set2)\
  end\
  return subset (set1, set2) and not subset (set2, set1)\
end\
\
\
--- Find whether two sets are equal.\
-- @tparam set set1 a set\
-- @tparam table|set set2 another set, or table\
-- @return `true` if `set1` and `set2` are equal, `false` otherwise\
function equal (set1, set2)\
  return subset (set1, set2) and subset (set2, set1)\
end\
\
\
--- @export\
local _functions = {\
  delete               = delete,\
  difference           = difference,\
  elems                = elems,\
  equal                = equal,\
  insert               = insert,\
  intersection         = intersection,\
  member               = member,\
  proper_subset        = proper_subset,\
  subset               = subset,\
  symmetric_difference = symmetric_difference,\
  union                = union,\
}\
\
\
--- Set prototype object.\
-- @table std.set\
-- @string[opt=\"Set\"] _type type of Set, returned by\
--   @{std.object.prototype}\
-- @tfield table|function _init a table of field names, or\
--   initialisation function, see @{std.object.__call}\
-- @tfield nil|table _functions a table of module functions not copied\
--   by @{std.object.__call}\
Set = Container {\
  _type      = \"Set\",\
\
  _init      = function (self, t)\
                 for e in base.elems (t) do\
                   insert (self, e)\
                 end\
                 return self\
               end,\
\
\
  --- Union operator.\
  --     union = set + table\
  -- @function __add\
  -- @static\
  -- @tparam set set set\
  -- @tparam table|set table another set or table\
  -- @treturn set union\
  -- @see union\
  __add = union,\
\
\
  --- Difference operator.\
  --     difference = set - table\
  -- @function __sub\
  -- @static\
  -- @tparam set set set\
  -- @tparam table|set table another set or table\
  -- @treturn set difference\
  -- @see difference\
  __sub = difference,\
\
\
  --- Intersection operator.\
  --     intersection = set * table\
  -- @function __mul\
  -- @static\
  -- @tparam set set set\
  -- @tparam table|set table another set or table\
  -- @treturn set intersection\
  -- @see intersection\
  __mul = intersection,\
\
\
  --- Symmetric difference operator.\
  --     symmetric_difference = set / table\
  -- @function __div\
  -- @static\
  -- @tparam set set set\
  -- @tparam table|set table another set or table\
  -- @treturn set symmetric_difference\
  -- @see symmetric_difference\
  __div = symmetric_difference,\
\
\
  --- Subset operator.\
  --     set = set <= table\
  -- @function __le\
  -- @static\
  -- @tparam set set set\
  -- @tparam table|set table another set or table\
  -- @treturn set subset\
  -- @see subset\
  __le  = subset,\
\
\
  --- Proper subset operator.\
  --     proper_subset = set < table\
  -- @function __lt\
  -- @static\
  -- @tparam set set set\
  -- @tparam table|set table another set or table\
  -- @treturn set proper_subset\
  -- @see proper_subset\
  __lt  = proper_subset,\
\
\
  -- Set to table conversion.\
  -- @treturn table table representation of a set.\
  -- @see std.table.totable\
  __totable  = function (self)\
                 local t = {}\
                 for e in elems (self) do\
                   table.insert (t, e)\
                 end\
                 table.sort (t)\
                 return t\
               end,\
\
\
  _functions = base.merge (_functions, {\
    -- backwards compatibility.\
    new = function (t) return Set (t or {}) end,\
  }),\
}\
\
return Set\
"
, '@'..".\\lua-libraries\\std\\set.lua" ) )

package.preload[ "core\\typesetter" ] = assert( (loadstring or load)(
"-- This is the default typesetter. You are, of course, welcome to create your own.\
local awful_bad = 1073741823\
local inf_bad = 10000\
local eject_penalty = -inf_bad\
local supereject_penalty = 2 * -inf_bad\
local deplorable = 100000\
\
if std.string.monkey_patch then -- stdlib >= 40\
  std.string.monkey_patch()\
end\
\
SILE.settings.declare({\
  name = \"typesetter.widowpenalty\", \
  type = \"integer\",\
  default = 3000,\
  help = \"Penalty to be applied to widow lines (at the start of a paragraph)\"\
})\
\
SILE.settings.declare({\
  name = \"typesetter.parseppattern\", \
  type = \"string or integer\",\
  default = \"\\n\\n+\",\
  help = \"Lua pattern used to separate paragraphs\"\
})\
SILE.settings.declare({\
  name = \"typesetter.orphanpenalty\",\
  type = \"integer\",\
  default = 3000,\
  help = \"Penalty to be applied to orphan lines (at the end of a paragraph)\"\
})\
\
SILE.settings.declare({\
  name = \"typesetter.parfillskip\",\
  type = \"Glue\",\
  default = SILE.nodefactory.newGlue(\"0pt plus 10000pt\"),\
  help = \"Glue added at the end of a paragraph\"\
})\
\
SILE.settings.declare({\
  name = \"typesetter.breakwidth\",\
  type = \"Length or nil\",\
  default = nil,\
  help = \"Width to break lines at\"\
})\
SILE.defaultTypesetter = std.object {\
  -- Setup functions\
  hooks = {},\
  init = function(self, frame)\
    self.stateQueue = {};\
    self:initFrame(frame)\
    self:initState();\
    return self\
  end,\
  initState = function(self)\
    self.state = {\
      nodes = {},\
      outputQueue = {},\
      lastBadness = awful_bad,      \
    };\
    self:initline()\
  end,\
  initFrame = function(self, frame)\
    self.frame = frame\
    self.frame:init()\
  end,\
  pushState = function(self)\
    table.insert(self.stateQueue, self.state);\
    self:initState();\
  end,\
  popState = function(self)\
    self.state = table.remove(self.stateQueue)\
    if not self.state then SU.error(\"Typesetter state queue empty\") end\
  end,\
  vmode = function(self)\
    return #self.state.nodes == 0\
  end,\
\
  debugState = function(self)\
    print(\"\\n---\\nI am in \"..(self:vmode() and \"vertical\" or \"horizontal\")..\" mode\")\
    print(\"Writing into \"..self.frame:toString())\
    print(\"Recent contributions: \")\
    for i = 1,#(self.state.nodes) do\
      io.write(self.state.nodes[i].. \" \")\
    end\
    print(\"\\nVertical list: \")\
    for i = 1,#(self.state.outputQueue) do\
      print(\"  \"..self.state.outputQueue[i])\
    end\
  end,\
  -- Boxy stuff\
  pushHbox = function (self, spec) table.insert(self.state.nodes, SILE.nodefactory.newHbox(spec)); end,\
  pushGlue = function (self, spec) return table.insert(self.state.nodes, SILE.nodefactory.newGlue(spec)); end,\
  pushPenalty = function (self, spec) return table.insert(self.state.nodes, SILE.nodefactory.newPenalty(spec)); end,\
  pushVbox = function (self, spec) local v = SILE.nodefactory.newVbox(spec); table.insert(self.state.outputQueue,v); return v; end,\
  pushVglue = function (self, spec) return table.insert(self.state.outputQueue, SILE.nodefactory.newVglue(spec)); end,\
  pushVpenalty = function (self, spec) return table.insert(self.state.outputQueue, SILE.nodefactory.newPenalty(spec)); end,\
\
  -- Actual typesetting functions\
  typeset = function (self, text)\
    for t in SU.gtoke(text,SILE.settings.get(\"typesetter.parseppattern\")) do\
      if (t.separator) then \
        self:leaveHmode();\
        SILE.documentState.documentClass.endPar(self)\
      else self:setpar(t.string)\
      end\
    end\
  end,\
\
  initline = function (self)\
    if (#self.state.nodes == 0) then\
      table.insert(self.state.nodes, SILE.nodefactory.zeroHbox)\
    end\
  end,\
\
  -- Takes string, writes onto self.state.nodes\
  setpar = function (self, t)\
    t = string.gsub(t,\"\\n\", \" \");\
    --t = string.gsub(t,\"^%s+\", \"\");\
    if (#self.state.nodes == 0) then\
      self:initline()\
      SILE.documentState.documentClass.newPar(self)\
    end\
    for token in SU.gtoke(t, \"-\") do\
      local t2= token.separator and token.separator or token.string\
      local newNodes = SILE.shaper.shape(t2)\
      for i=1,#newNodes do\
          self.state.nodes[#(self.state.nodes)+1] = newNodes[i]\
          if token.separator then\
            self.state.nodes[#(self.state.nodes)+1] = SILE.nodefactory.newPenalty({ value = SILE.settings.get(\"linebreak.hyphenPenalty\") })\
          end\
      end\
    end\
  end,\
\
  -- Empties self.state.nodes, breaks into lines, puts lines into vbox, adds vbox to\
  -- Turns a node list into a list of vboxes\
  boxUpNodes = function (self)\
    local nl = self.state.nodes\
    while (#nl > 0 and (nl[#nl]:isPenalty() or nl[#nl]:isGlue())) do\
     table.remove(nl);\
    end\
    while (#nl >0 and nl[1]:isPenalty()) do table.remove(nl,1) end\
    if #nl == 0 then return {} end\
    self:pushGlue(SILE.settings.get(\"typesetter.parfillskip\"));\
    self:pushPenalty({ flagged= 1, penalty= -inf_bad });\
    local listToString = function(l)\
      local rv = \"\"\
      for i = 1,#l do rv = rv ..l[i] end return rv\
    end\
    SU.debug(\"typesetter\", \"Boxed up \"..listToString(nl));\
\
    local breakWidth = SILE.settings.get(\"typesetter.breakwidth\") or self.frame:width()\
    SU.debug(\"typesetter\", \"breakWidth=\"..SILE.settings.get(\"typesetter.breakwidth\"))\
    \
    if (type(breakWidth) == \"table\") then breakWidth = breakWidth.length end\
    local breaks = SILE.linebreak:doBreak( nl, breakWidth);\
    if (#breaks == 0) then\
      SU.error(\"Couldn't break :(\")\
    end\
    local lines = self:breakpointsToLines(breaks);\
    local vboxes = {}\
    local previousVbox = nil\
    for index=1, #lines do\
      local l = lines[index]\
      local v = SILE.nodefactory.newVbox({ nodes = l.nodes, ratio = l.ratio });\
      local pageBreakPenalty = 0\
      if (#lines > 1 and index == 1) then\
        pageBreakPenalty = SILE.settings.get(\"typesetter.widowpenalty\")\
      elseif (#lines > 1 and index == (#lines-1)) then\
        pageBreakPenalty = SILE.settings.get(\"typesetter.orphanpenalty\")\
      end\
      if index > 1 then\
        vboxes[#vboxes+1] = self:leadingFor(v, previousVbox)\
      end\
      vboxes[#vboxes+1] = v\
      previousVbox = v\
      if pageBreakPenalty > 0 then\
        SU.debug(\"typesetter\", \"adding penalty of \"..pageBreakPenalty..\" after \"..v)\
        vboxes[#vboxes+1] = SILE.nodefactory.newPenalty({ penalty = pageBreakPenalty})\
      end\
    end\
    return vboxes\
  end,\
\
  pageTarget = function(self)\
    return self.frame:height()\
  end,\
  registerHook = function (self, category, f)\
    if not self.hooks[category] then self.hooks[category] = {} end\
    self.hooks[category][1+#(self.hooks[category])] = f\
  end,\
  runHooks = function(self, category, data)\
    if not self.hooks[category] then return data end\
    for i = 1,#self.hooks[category] do\
      data = self.hooks[category][i](self, data)\
    end\
    return data\
  end,\
  registerPageBreakHook = function (self, f)\
    self:registerHook(\"pagebreak\", f)\
  end,\
  registerNewPageHook = function (self, f)\
    self:registerHook(\"newpage\", f)\
  end,\
  pageBuilder = function (self, independent)\
    local vbox;\
    local pageNodeList\
    if #(self.state.outputQueue) == 0 then return end\
    local target = self:pageTarget()\
    pageNodeList, self.state.lastPenalty = SILE.pagebuilder.findBestBreak(self.state.outputQueue, target)\
    if not pageNodeList then -- No break yet\
      return false\
    end\
    pageNodeList = self:runHooks(\"pagebreak\",pageNodeList)\
    self:setVerticalGlue(pageNodeList, target)\
    self:outputLinesToPage(pageNodeList);\
    return true\
  end,\
\
  setVerticalGlue = function (self, pageNodeList, target)\
    -- Do some sums on that list\
    local glues = {};\
    local gTotal = SILE.length.new()\
    local totalHeight = SILE.length.new()\
\
    for i=1,#pageNodeList do\
      totalHeight = totalHeight + pageNodeList[i].height + pageNodeList[i].depth\
      if pageNodeList[i]:isVglue() then \
        table.insert(glues,pageNodeList[i]);\
        gTotal = gTotal + pageNodeList[i].height\
      end\
    end\
\
    local adjustment = (target - totalHeight).length\
\
    if (adjustment > gTotal.stretch) then adjustment = gTotal.stretch end\
    if (adjustment / gTotal.stretch > 0) then \
      for i,g in pairs(glues) do\
        g:setGlue(adjustment * g.height.stretch / gTotal.stretch)\
      end\
    end\
\
    SU.debug(\"pagebuilder\", \"Glues for self page adjusted by \"..(adjustment/gTotal.stretch) )  \
  end,\
\
  initNextFrame = function(self)\
    self.frame:leave()\
    if (self.frame.next and not (self.state.lastPenalty <= supereject_penalty )) then\
      self:initFrame(SILE.getFrame(self.frame.next));\
    elseif not self.frame:isMainContentFrame() then\
      SU.warn(\"Overfull content for frame \"..self.frame.id)\
      self:chuck()\
    else\
      SILE.documentState.documentClass:endPage()\
      self:initFrame(SILE.documentState.documentClass:newPage()); -- XXX Hack\
    end\
    -- Always push back and recalculate. The frame may have a different shape, or\
    -- we may be doing clever things like grid typesetting. CPU time is cheap.\
    self:pushBack();\
  end,\
\
  pushBack = function (self)\
    SU.debug(\"typesetter\", \"Pushing back \"..#(self.state.outputQueue)..\" nodes\")\
    --self:pushHbox({ width = SILE.length.new({}), value = {glyph = 0} });\
    local v\
    local function luaSucks (a) v=a return a end\
\
    local oldqueue = self.state.outputQueue\
    self.state.outputQueue = {}\
    while luaSucks(table.remove(oldqueue,1)) do\
      if not v:isVglue() and not v:isPenalty() then\
        for i=1,#(v.nodes) do\
            if v.nodes[i]:isDiscretionary() then\
              v.nodes[i].used = 0 -- HACK HACK HACK\
            end\
            -- HACK HACK HACK HACK HACK\
            if not (v.nodes[i]:isGlue() and (v.nodes[i].value == \"lskip\" or v.nodes[i].value == \"rskip\")) then\
              self.state.nodes[#(self.state.nodes)+1] = v.nodes[i]\
            end\
        end\
      else\
        -- local vboxlist = self:boxUpNodes()\
        -- self.state.nodes = {};\
        -- for index=1, #vboxlist do\
        --   self.state.outputQueue[#(self.state.outputQueue)+1] = vboxlist[index]\
        -- end\
        -- self.state.outputQueue[#(self.state.outputQueue)+1] = v\
      end\
    end\
    self:leaveHmode();\
    self:runHooks(\"newpage\")\
  end,\
  outputLinesToPage = function (self, lines)\
    SU.debug(\"pagebuilder\", \"OUTPUTTING frame \"..self.frame.id);\
    local i\
    for i = 1,#lines do local l = lines[i]\
      if not self.frame.state.totals.pastTop and not (l:isVglue() or l:isPenalty()) then\
        self.frame.state.totals.pastTop = true\
      end\
      if self.frame.state.totals.pastTop then\
        l:outputYourself(self, l)\
      end\
    end\
  end,\
  leaveHmode = function(self, independent)\
    SU.debug(\"typesetter\", \"Leaving hmode\");\
    local vboxlist = self:boxUpNodes()\
    self.state.nodes = {};\
    -- Push output lines into boxes and ship them to the page builder\
    for index=1, #vboxlist do\
      self.state.outputQueue[#(self.state.outputQueue)+1] = vboxlist[index]\
    end\
    if self:pageBuilder() and not independent then\
      self:initNextFrame()\
    end\
  end,\
  leadingFor = function(self, v, previous)\
    -- Insert leading\
    SU.debug(\"typesetter\", \"   Considering leading between self two lines\");\
    local prevDepth = 0\
    if previous then prevDepth = previous.depth end\
    SU.debug(\"typesetter\", \"   Depth of previous line was \"..tostring(prevDepth));\
    local bls = SILE.settings.get(\"document.baselineskip\")\
    local d = bls.height - v.height - prevDepth;\
    d = d.length\
    SU.debug(\"typesetter\", \"   Leading height = \" .. tostring(bls.height) .. \" - \" .. tostring(v.height) .. \" - \" .. tostring(prevDepth) .. \" = \"..d) ;\
\
    if (d > SILE.settings.get(\"document.lineskip\").height.length) then\
      len = SILE.length.new({ length = d, stretch = bls.height.stretch, shrink = bls.height.shrink })\
      return SILE.nodefactory.newVglue({height = len});\
    else\
      return SILE.nodefactory.newVglue(SILE.settings.get(\"document.lineskip\"));\
    end\
  end,\
  addrlskip = function (self, slice)\
    local rskip = SILE.settings.get(\"document.rskip\")\
    if rskip then\
      rskip.value = \"rskip\"\
      table.insert(slice, rskip)\
      table.insert(slice, SILE.nodefactory.zeroHbox)\
    end\
    local lskip = SILE.settings.get(\"document.lskip\")\
    if lskip then\
      lskip.value = \"lskip\"\
      table.insert(slice, 1, lskip) \
      table.insert(slice, 1, SILE.nodefactory.zeroHbox) \
    end\
  end,\
  breakpointsToLines = function(self, bp)\
    local linestart = 0;\
    local lines = {};\
    local nodes = self.state.nodes;\
\
    for i,point in pairs(bp) do\
      if not(point.position == 0) then\
        slice = {}\
        local seenHbox = 0\
        local toss = 1\
        for j = linestart, point.position do\
          slice[#slice+1] = nodes[j]\
          if nodes[j] then\
            toss = 0\
            if nodes[j]:isBox() then seenHbox = 1 end\
          end\
        end\
        if seenHbox == 0 then break end\
        self:addrlskip(slice)\
\
        local naturalTotals = SILE.length.new({length =0 , stretch =0, shrink = 0})\
        for i,node in ipairs(slice) do\
          if (node:isBox() or (node:isPenalty() and node.penalty == -inf_bad)) then\
            skipping = 0\
            if node:isBox() then\
              naturalTotals = naturalTotals + node.width\
            end\
          elseif skipping == 0 then-- and not(node:isGlue() and i == #slice) then\
            naturalTotals = naturalTotals + node.width\
          end\
        end\
        local i = #slice\
        while i > 1 do\
          if slice[i]:isGlue() or slice[i] == SILE.nodefactory.zeroHbox then\
            -- Do nothing\
          elseif (slice[i]:isDiscretionary()) then\
            slice[i].used = 1;\
            if slice[i].parent then slice[i].parent.hyphenated = true end\
            naturalTotals = naturalTotals + slice[i]:prebreakWidth()\
          else\
            break\
          end\
          i = i -1\
        end\
        local left = (point.width - naturalTotals.length)\
\
        if left < 0 then\
          left = left / naturalTotals.shrink\
        else\
          left = left / naturalTotals.stretch\
        end\
        if left < -1 then left = -1 end\
        local thisLine = { ratio = left, nodes = slice };\
        lines[#lines+1] = thisLine\
        linestart = point.position+1\
      end\
    end\
    --self.state.nodes = nodes.slice(linestart+1,nodes.length);\
    return lines;\
  end,\
  chuck = function(self) -- emergency shipout everything\
    self:leaveHmode(true)\
    self:outputLinesToPage(self.state.outputQueue)\
    self.state.outputQueue = {}\
  end\
};\
\
SILE.typesetter = SILE.defaultTypesetter {};\
\
SILE.typesetNaturally = function (frame, f)\
  local saveTypesetter = SILE.typesetter\
  if SILE.typesetter.frame then SILE.typesetter.frame:leave() end\
  SILE.typesetter = SILE.defaultTypesetter {};\
  SILE.typesetter:init(frame)\
  SILE.settings.temporarily(f)\
  SILE.typesetter:leaveHmode()\
  SILE.typesetter:chuck()\
  SILE.typesetter.frame:leave()\
  SILE.typesetter = saveTypesetter\
  if SILE.typesetter.frame then SILE.typesetter.frame:enter() end\
end;\
"
, '@'..".\\core\\typesetter.lua" ) )

package.preload[ "lua-libraries\\std\\debug_init\\init" ] = assert( (loadstring or load)(
"-- Debugging is on by default\
local M = {\
  _DEBUG = true,\
}\
\
if _G._DEBUG ~= nil then\
  M._DEBUG = _G._DEBUG\
end\
\
return M\
"
, '@'..".\\lua-libraries\\std\\debug_init\\init.lua" ) )

package.preload[ "classes\\lectionary" ] = assert( (loadstring or load)(
"-- add spaces in PSA bekim\
-- odd header alignment\
-- write code to insert headings\
-- document process in GitHub\
\
-- support in twocol <eject/>\
\
-- port to windows\
\
-- SILE.debugFlags[\"break\"] = true\
-- SILE.debugFlags.typesetter = true\
\
local plain = SILE.require(\"classes/plain\");\
local twocol = std.tree.clone(plain);\
twocol.id = \"twocol\"\
\
twocol:loadPackage(\"masters\")\
\
twocol:defineMaster({ id = \"right\", firstContentFrame = \"content\", frames = {\
  content = {\
    left = \"18%\", \
    right = \"90%\", \
    top = \"10%\", \
    bottom = \"top(footnotes)\" \
  },\
  runningHead = {\
    left = \"left(content)\", \
    right = \"right(content)\", \
    top = \"top(content) - 5%\", \
    bottom = \"top(content)-2%\" \
  },\
  footnotes = { \
    left=\"left(content)\", \
    right = \"right(content)\", \
    height = \"0\", \
    bottom=\"92%\"}\
}})\
\
twocol:loadPackage(\"infonode\")\
\
twocol:loadPackage(\"twoside\", { oddPageMaster = \"right\", evenPageMaster = \"left\" });\
\
twocol:mirrorMaster(\"right\", \"left\")\
\
twocol.pageTemplate = SILE.scratch.masters[\"right\"]\
\
function twocol:newPage()\
  twocol:switchPage()\
  -- print(\"newPage oddPage=\"..twocol:oddPage())\
  return plain.newPage(self)\
end\
\
SILE.scratch.headers = {}\
SILE.scratch.headers.newHeader = false\
SILE.scratch.headers.pageno = 0\
SILE.scratch.headers.startNumbering = false\
\
function twocol:endPage()\
  -- we don't number pages until the first <info> found\
  -- the first page of each new info section has an empty header\
  if SILE.scratch.info.thispage.h then\
    SILE.scratch.headers.startNumbering = true\
    SILE.scratch.headers.newHeader = true\
    SILE.scratch.headers.top = SILE.scratch.info.thispage.h[1]\
    SILE.scratch.info.thispage.h = nil\
  end\
\
  if not SILE.scratch.headers.startNumbering then return end\
\
  SILE.scratch.headers.pageno = SILE.scratch.headers.pageno + 1\
  io.write(\"[\"..SILE.scratch.headers.pageno..\"] \")\
\
  -- if 0 == 0 then return end\
\
  SILE.settings.pushState()\
  if SILE.scratch.headers.frameWidth then\
    SILE.settings.set(\"typesetter.breakwidth\", SILE.length.new({ length = SILE.scratch.headers.frameWidth }))\
  end    \
  SILE.settings.set(\"current.parindent\", SILE.nodefactory.zeroGlue)\
  SILE.settings.set(\"document.lskip\", SILE.nodefactory.zeroGlue)\
\
  --print(\"Settings\")\
  --for k,s in pairs(SILE.settings.state) do\
  --    print(k,s)\
  --end\
  --print()\
\
  SILE.typesetNaturally(\
    SILE.getFrame(\"runningHead\"),\
    -- running header is centered, ommitted on first page of section\
    -- page number is at outside margin \
    function()\
      SILE.settings.set(\"current.parindent\", SILE.nodefactory.zeroGlue)\
      SILE.settings.set(\"typesetter.parfillskip\", SILE.nodefactory.zeroGlue)\
\
      if not twocol:oddPage() then\
        SILE.Commands[\"bodyfont\"](\
            {}, \
            function()\
              SILE.typesetter:typeset(SILE.scratch.headers.pageno..\"\")\
            end)\
      end\
\
      SILE.call(\"hss\")\
\
      if not SILE.scratch.headers.newHeader and SILE.scratch.headers.top then\
        SILE.Commands[\"hfont\"](\
          {}, \
          function()\
            SILE.typesetter:typeset(SILE.scratch.headers.top)\
          end)\
      end\
      \
      SILE.call(\"hss\")\
\
      if twocol:oddPage() then\
        SILE.Commands[\"bodyfont\"](\
          {}, \
          function()\
            SILE.typesetter:typeset(SILE.scratch.headers.pageno..\"\")\
          end)\
      end\
    end)\
\
  SILE.scratch.headers.newHeader = false\
\
  SILE.settings.popState()\
end\
\
local typesetter = SILE.defaultTypesetter {};\
SILE.typesetter = typesetter\
\
-- pushBack is an interesting idea but it inserts strange vertical skips\
-- in the lectionary. Don't do it.\
typesetter.pushBack = function() end\
\
local function twocol_func(options, content)\
  SU.debug(\"typesetter\", \"   start twocols\")\
  typesetter:startTwoCol()\
  SILE.process(content)\
  typesetter:leaveHmode()\
  typesetter.allTwoColMaterialProcessed = true\
\
  while typesetter:pageBuilder() do\
    typesetter:initNextFrame()\
  end\
\
  typesetter:endTwoCol()\
end\
\
-- in order to not have extra space between paragraphs, make\
-- font size + parskip = baselineskip\
SILE.settings.set(\"document.parskip\", SILE.nodefactory.newVglue(\"2pt\"))\
SILE.settings.set(\"document.baselineskip\", SILE.nodefactory.newVglue(\"14pt\"))\
\
SILE.registerCommand(\"lineskip\", function ( options, content )\
    SILE.typesetter:leaveHmode();    \
    SILE.typesetter:pushVglue(SILE.settings.get(\"document.baselineskip\"))\
  end, \"Skip vertically by a line\")\
\
SILE.registerCommand(\"twocol\", twocol_func, \
  \"Temporarily switch to two balanced columns\")\
\
-- If we are near the end of a page this is a good place to break\
local plus120 = SILE.nodefactory.newVglue(\
  {height = SILE.length.new({length = 120})})\
local minus120 = SILE.nodefactory.newVglue(\
  {height = SILE.length.new({length = -120})})\
SILE.registerCommand(\"gdbreak\", function(o,c) \
  SILE.typesetter:leaveHmode()\
  SILE.typesetter:pushPenalty({ flagged= 1, penalty= -500 })\
  SILE.typesetter:pushVglue(plus120) \
  SILE.typesetter:pushPenalty({ flagged= 1, penalty= -500 })\
  SILE.typesetter:pushVglue(minus120) \
  end, \"good place to break\")\
\
function typesetter:init()\
  self.left = 0\
  self.frame = SILE.frames[\"content\"]\
  local ret = SILE.defaultTypesetter.init(self, self.frame)\
  self.gapWidth = .05 * self.frame:width()\
  return ret\
end\
\
function typesetter:startTwoCol()\
  SILE.typesetter:leaveHmode()\
  self.columnWidth = (self.frame:width() - self.gapWidth)  / 2\
  SILE.scratch.headers.frameWidth = self.frame:width()\
  SILE.settings.set(\"typesetter.breakwidth\", SILE.length.new({ length = self.columnWidth }))\
\
  local oq = self.state.outputQueue\
  self.left = #oq + 1\
  self.allTwoColMaterialProcessed = false\
end\
\
function typesetter:endTwoCol()\
  SILE.settings.set(\"typesetter.breakwidth\", SILE.length.new({ length = self.frame:width() }))\
  self.left = 0\
end\
\
-- Output one page.\
-- Return true if page is complete.\
function typesetter:pageBuilder(independent)\
  -- if not two column material present, use default typesetter\
  if self.left == 0 then \
    return SILE.defaultTypesetter.pageBuilder(self, independent)\
  end\
\
  -- process all two column material before attempting to build page\
  if not self.allTwoColMaterialProcessed then return false end\
\
  local oq = self.state.outputQueue\
\
  -- remove discardable stuff at beginning of page\
  while #oq > 0 and isDiscardable(oq[1]) do\
    table.remove(oq, 1)\
    if self.left > 1 then self.left = self.left - 1 end\
  end\
\
  -- make 2col material start at first non-zero height vbox\
  while self.left <= #oq do\
    local box = oq[self.left]\
    if box:isVbox() and box.height and box.height.length > 0 then break end\
    self.left = self.left+1\
  end\
  if self.left > #oq then \
    SU.debug(\"columns\", \"   pageBuilder RETURN empty oq / false\")\
    self:endTwoCol()\
    return false \
  end\
  SU.debug(\"columns\", \"pageBuilder left=\"..self.left..\", #oq=\"..#oq)\
\
  local currentHeight = typesetter:totalHeight(1, self.left)\
\
  local targetHeight = SILE.length.new({ length = self.frame:height() }) \
  targetHeight = targetHeight - currentHeight\
\
  local p\
  self.right, self.rightEnd, p = tcpb.findBestTwoColBreak(\
         oq, self.left, targetHeight)\
\
  if self.right then \
    assert(self.right > self.left)\
    assert(self.rightEnd)\
    assert(self.rightEnd >= self.right)\
    assert(self.rightEnd <= #oq+1)\
  end\
  \
  -- if can't fit any two column content on page then\
  -- output all the one column content and eject\
  if not self.right then\
    assert(self.left > 1)\
    self:outputLinesToPage2(1, self.left)  \
    self.left = 1\
    SU.debug(\"columns\", \
       \"   pageBuilder RETURN can't fit 2col material on page / true\")\
    return true\
  end\
\
  -- gather all the two column material between [self.left,self.rightEnd) that\
  -- will fit on current page and place it in a single box at self.left\
  typesetter:createTwoColVbox()\
  self.rightEnd = self.left + 1\
\
  -- if we have processed all the two column material then\
  -- exit two column mode but do not output page because more\
  -- material may still fit.\
  if self.rightEnd == #oq+1 then \
    SU.debug(\"columns\", \
       \"   pageBuilder RETURN end 2c, page not full / false\")\
    self:endTwoCol()\
    return false \
  end\
\
  -- page is full, output it.\
  -- stay in two col mode to output the rest\
  local totalHeight = typesetter:totalHeight(1, self.rightEnd)\
  local glues, gTotal = self:accumulateGlues(1, self.rightEnd)\
  self:adjustGlues(targetHeight, totalHeight, glues, gTotal)\
  self:outputLinesToPage2(1, self.rightEnd);\
  \
  self.left = 1\
  SU.debug(\"columns\", \
     \"pageBuilder RETURN produced 2c page, more 2c material to process / true\")\
  return true\
end\
\
function typesetter:createTwoColVbox()\
  local oq = self.state.outputQueue\
\
  local vbox = SILE.nodefactory.newVbox({})\
  vbox.outputYourself = twoColBoxOutputYourself\
\
  while self.rightEnd > self.right and isDiscardable(oq[self.rightEnd-1]) do\
    self.rightEnd = self.rightEnd - 1\
  end\
  vbox.rightCol = typesetter:extract(self.right, self.rightEnd)\
  typesetter:removeDiscardable(vbox.rightCol)\
  --typesetter:dump(\"rightCol\", vbox.rightCol)\
\
  while self.left <= #oq and isDiscardable(oq[self.left]) do \
    self.left = self.left + 1 \
  end\
  vbox.leftCol = typesetter:extract(self.left, self.right)\
  typesetter:removeDiscardable(vbox.leftCol)\
  --typesetter:dump(\"rightCol\", vbox.leftCol)\
\
  vbox.height = 0\
  vbox.depth = tcpb.columnHeight(vbox.leftCol, 1, #vbox.leftCol)\
  vbox.depth.stretch = 0\
  vbox.depth.shrink = 0\
\
  table.insert(oq, self.left, vbox)\
end\
\
function typesetter:extract(first, last)\
  local oq = self.state.outputQueue\
  local col, i = {}, nil\
  for i=first,last-1 do\
    col[#col+1] = oq[first]\
    -- if col[#col]:isVglue() then col[#col]:setGlue(0) end\
    table.remove(oq, first)\
  end\
  return col\
end\
\
function typesetter:removeDiscardable(col)\
  while #col > 0 and isDiscardable(col[1]) do table.remove(col, 1) end\
  while #col > 0 and isDiscardable(col[#col]) do table.remove(col, #col) end\
end\
\
function isDiscardable(box) return box:isPenalty() or box:isVglue() end\
\
function twoColBoxOutputYourself(vbox, typesetter, line)\
  local y0 = typesetter.frame.state.cursorY\
  SU.debug(\"oyv\", \"y0=\"..y0)\
\
  -- line up right column baseline with left column baseline\
  typesetter.frame:moveY(vbox.leftCol[1].height.length)\
  if #vbox.rightCol > 0 then\
    typesetter.frame:moveY(-vbox.rightCol[1].height.length)\
  end\
\
  local horizOffset = typesetter.columnWidth + typesetter.gapWidth\
  columnOutputYourself(vbox.rightCol, typesetter, horizOffset, line, \"right\")\
  \
  typesetter.frame.state.cursorY = y0\
  columnOutputYourself(vbox.leftCol, typesetter, 0, line, \"left\")\
end  \
\
-- output one column of a custom two column vbox\
function columnOutputYourself(col, typesetter, horizOffset, line, side)\
  SU.debug(\"oyv\", \"output \"..side..\" column\")\
  local i\
  for i=1,#col do\
    typesetter.frame:newLine()\
    typesetter.frame:moveX(horizOffset)\
    local box = col[i]\
    box:outputYourself(typesetter, box)\
  end\
end  \
\
function typesetter:dump(heading, oq)\
  if SILE.debugFlags[\"dump\"] then\
    print(heading)\
    for i=1,#oq do\
      print(i, oq[i])\
    end\
    print()\
  end\
end\
\
function typesetter:totalHeight(left, right)\
  return tcpb.columnHeight(self.state.outputQueue, left, right)\
end\
\
-- first = first oq item to output\
-- last = first oq item to not output\
function typesetter:outputLinesToPage2(first, last)\
  if last <= first then return end\
\
  local oq = self.state.outputQueue\
\
  assert(last > first)\
  assert(last-1 <= #oq)\
\
  if SILE.debugFlags[\"outputLinesToPage2\"] then\
    print(\"outputLinesToPage2\")\
    for i=first,last do\
      print(i, oq[i])\
    end\
  end\
\
  SU.debug(\"pagebuilder\", \"OUTPUTTING frame \"..self.frame.id);\
\
  local i\
  for i = first,last-1 do \
    local line = oq[i]\
    assert(line, \"empty oq element at position \"..i..\" of \"..#oq)\
    if not self.frame.state.totals.pastTop and not (line:isVglue() or line:isPenalty()) then\
      self.frame.state.totals.pastTop = true\
    end\
    if self.frame.state.totals.pastTop then\
      line:outputYourself(self, line)\
    end\
  end\
\
  self:removeFromOutputQueue(first, last)\
end\
\
function typesetter:removeFromOutputQueue(first, last)\
  local i\
  for i=1,last-first do\
    table.remove(self.state.outputQueue, first)\
  end\
end\
\
-- look at page, find all glues, return them and their total height\
function typesetter:accumulateGlues(first, last)\
  local glues = {}\
  local totalGlueHeight = SILE.length.new()\
  local oq = self.state.outputQueue\
\
  local i\
  for i=first,last-1 do\
    if oq[i]:isVglue() then \
      table.insert(glues,oq[i]);\
      totalGlueHeight = totalGlueHeight + oq[i].height\
    end\
  end\
  return glues, totalGlueHeight\
end\
\
-- stretch vertical glues to match targetHeight\
function typesetter:adjustGlues(targetHeight, totalHeight, glues, gTotal)\
  local adjustment = (targetHeight - totalHeight)\
  if type(adjustment) == \"table\" then adjustment = adjustment.length end\
\
  if (adjustment > gTotal.stretch) then adjustment = gTotal.stretch end\
  if (adjustment / gTotal.stretch > 0) then \
    for i,g in pairs(glues) do\
      g:setGlue(adjustment * g.height.stretch / gTotal.stretch)\
    end\
  end\
\
  SU.debug(\"pagebuilder\", \"Glues for self page adjusted by \"..(adjustment/gTotal.stretch) )\
end\
\
tcpb = {}\
\
local overfull = 1073741820\
\
-- Look at all the material left..#oq.\
-- Find 'best' place into two columns that fit on current page.\
-- Return right, rightEnd, penalty.\
-- Penalty will be ovefull if there is no way to fit anything on page.\
function tcpb.findBestTwoColBreak(oq, left, targetHeight)\
  assert(left >= 1 and left <= #oq)\
  if SILE.debugFlags.twocol then\
    print(\"findBestTwoColBreak left=\"..left..\",\"..\
      \"targetHeight=\"..targetHeight..\", (\"..#oq..\")\")\
    for i=left,#oq do\
      print(i, oq[i])\
    end\
  end\
\
  local right, rightEnd, penalty = nil, nil, overfull  -- outputs\
  local _right, _rightEnd, _penalty, _height \
\
  for _right=left+1,#oq+1 do\
    if _right == #oq+1 or oq[_right]:isVbox() then\
      local _rightEnd, _penalty, _height = tcpb.findBestTwoColBreak2(\
                                     oq, left, _right, targetHeight)\
      if _height > targetHeight then break end\
      if _rightEnd and _penalty <= penalty then \
        right, rightEnd, penalty = _right, _rightEnd, _penalty\
      end\
    end\
  end\
  \
  SU.debug(\"twocol\", \
    \"   ****** right=\"..right..\", rightEnd=\"..rightEnd..\", penalty=\"..penalty)\
  return right, rightEnd, penalty\
end\
\
-- Find the best rightEnd given left and right.\
-- Warning! right may be as large as #oq+1\
-- returns rightEnd, penalty, height\
function tcpb.findBestTwoColBreak2(oq, left, right, targetHeight)\
  SU.debug(\"twocol\",\
     \"   findBestTwoColBreak2 left=\"..left..\
     \", right=\"..right..\", targetHeight=\"..targetHeight)\
  local rightEnd, penalty, leftHeight = nil, overfull, nil   -- outputs\
\
  leftHeight = tcpb.columnHeight(oq, left, right)\
  if leftHeight > targetHeight then return rightEnd, penalty, leftHeight end\
  local leftPenalty = tcpb.columnPenalty(oq, right)\
\
  for _rightEnd=right,#oq+1 do\
    if _rightEnd == #oq+1 or oq[_rightEnd]:isVbox() then\
      local rightHeight = tcpb.columnHeight(oq, right, _rightEnd)\
      if rightHeight > leftHeight then \
          SU.debug(\"twocol\", \"         rightHeight > leftHeight\")\
        break \
      end\
\
      local rightPenalty = tcpb.columnPenalty(oq, _rightEnd)\
      local pageBottomGap = targetHeight - leftHeight\
      local interColumnGap = leftHeight - rightHeight\
      local remainingLines = tcpb.countLines(oq, _rightEnd)\
      local _penalty = tcpb.calculatePenalty(leftPenalty, rightPenalty,    \
                         pageBottomGap, interColumnGap, remainingLines)\
\
      SU.debug(\"twocol\", \"         *** \".._penalty..\" \"..right..\"/\".._rightEnd)\
      if _rightEnd and _penalty <= penalty then \
        rightEnd, penalty = _rightEnd, _penalty \
      end \
    end\
  end\
\
  SU.debug(\"twocol\", \"      *** \", penalty..\" \"..right..\"/\"..rightEnd..\", h=\"..leftHeight)\
  return rightEnd, penalty, leftHeight\
end\
\
function tcpb.countLines(oq, first)\
  local count = 0\
  for i=first,#oq do\
    if oq[i]:isVbox() then count = count+1 end\
  end\
  return count\
end\
\
-- return penalty\
function tcpb.calculatePenalty(leftPenalty, rightPenalty, pageBottomGap, \
         interColumnGap, remainingLines)\
\
  if remainingLines > 0 and remainingLines < 7 then return 9999 end\
  \
  local penalty\
  if leftPenalty > 100 or rightPenalty > 100 then \
    penalty = overfull \
  else\
    penalty = pageBottomGap.length + interColumnGap.length + 1000*remainingLines\
  end\
\
  return penalty \
end\
\
function tcpb.columnHeight(oq, first, last)\
  local h = SILE.length.new({})\
\
  local i\
  for i=first,last-1 do\
    h = h + oq[i].height + oq[i].depth\
  end\
\
  return h\
end\
\
-- return height, penalty\
function tcpb.columnPenalty(oq, last)\
  local p = 0\
  last = last-1\
  while last >= 1 and oq[last]:isVglue() do last = last-1 end\
  if last >= 1 and oq[last]:isPenalty() then p = oq[last].penalty end\
\
  return p\
end\
\
return twocol"
, '@'..".\\classes\\lectionary.lua" ) )

package.preload[ "lua-libraries\\repl\\plugins\\history" ] = assert( (loadstring or load)(
"-- Copyright (c) 2011-2014 Rob Hoelz <rob@hoelz.ro>\
--\
-- Permission is hereby granted, free of charge, to any person obtaining a copy of\
-- this software and associated documentation files (the \"Software\"), to deal in\
-- the Software without restriction, including without limitation the rights to\
-- use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\
-- the Software, and to permit persons to whom the Software is furnished to do so,\
-- subject to the following conditions:\
--\
-- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\
--\
-- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\
-- FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\
-- COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\
-- IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\
-- CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\
\
local history_file\
\
local function invokecallback(self, name, ...)\
  if not self._history_callbacks then\
    return\
  end\
\
  local impl = self._history_callbacks[name]\
  return impl(...)\
end\
\
local function init()\
  if os.getenv 'HOME' then\
    history_file = os.getenv('HOME') .. '/.rep.lua.history'\
  end\
end\
\
-- XXX I don't know if this callback setup way\
--     is the best way to go about this (in fact\
--     I'm pretty sure it isn't), but I just need\
--     something that works right now.\
function repl:setuphistorycallbacks(callbacks)\
  self._history_callbacks = callbacks\
\
  if history_file then\
    invokecallback(self, 'load', history_file)\
  end\
end\
\
function after:handleline(line)\
  invokecallback(self, 'addline', line)\
end\
\
function before:shutdown()\
  if history_file then\
    invokecallback(self, 'save', history_file)\
  end\
end\
\
features = 'history'\
\
init()\
"
, '@'..".\\lua-libraries\\repl\\plugins\\history.lua" ) )

package.preload[ "lua-libraries\\std\\io" ] = assert( (loadstring or load)(
"--[[--\
 Additions to the io module.\
 @module std.io\
]]\
\
local package = require \"std.package\"\
local string  = require \"std.string\"\
local tree    = require \"std.tree\"\
\
\
-- Get an input file handle.\
-- @param h file handle or name (default: `io.input ()`)\
-- @return file handle, or nil on error\
local function input_handle (h)\
  if h == nil then\
    h = io.input ()\
  elseif type (h) == \"string\" then\
    h = io.open (h)\
  end\
  return h\
end\
\
--- Slurp a file handle.\
-- @param h file handle or name (default: `io.input ()`)\
-- @return contents of file or handle, or nil if error\
local function slurp (h)\
  h = input_handle (h)\
  if h then\
    local s = h:read (\"*a\")\
    h:close ()\
    return s\
  end\
end\
\
--- Read a file or file handle into a list of lines.\
-- @param h file handle or name (default: `io.input ()`);\
-- if h is a handle, the file is closed after reading\
-- @return list of lines\
local function readlines (h)\
  h = input_handle (h)\
  local l = {}\
  for line in h:lines () do\
    table.insert (l, line)\
  end\
  h:close ()\
  return l\
end\
\
--- Write values adding a newline after each.\
-- @param h file handle (default: `io.output ()`\
-- @param ... values to write (as for write)\
local function writelines (h, ...)\
  if io.type (h) ~= \"file\" then\
    io.write (h, \"\\n\")\
    h = io.output ()\
  end\
  for v in tree.ileaves ({...}) do\
    h:write (v, \"\\n\")\
  end\
end\
\
--- Split a directory path into components.\
-- Empty components are retained: the root directory becomes `{\"\", \"\"}`.\
-- @param path path\
-- @return list of path components\
local function splitdir (path)\
  return string.split (path, package.dirsep)\
end\
\
--- Concatenate one or more directories and a filename into a path.\
-- @param ... path components\
-- @return path\
local function catfile (...)\
  return table.concat ({...}, package.dirsep)\
end\
\
--- Concatenate two or more directories into a path, removing the trailing slash.\
-- @param ... path components\
-- @return path\
local function catdir (...)\
  return (string.gsub (catfile (...), \"^$\", package.dirsep))\
end\
\
--- Perform a shell command and return its output.\
-- @param c command\
-- @return output, or nil if error\
local function shell (c)\
  return slurp (io.popen (c))\
end\
\
--- Process files specified on the command-line.\
-- If no files given, process `io.stdin`; in list of files,\
-- `-` means `io.stdin`.\
-- @todo Make the file list an argument to the function.\
-- @param f function to process files with, which is passed\
-- `(name, arg_no)`\
local function process_files (f)\
  -- N.B. \"arg\" below refers to the global array of command-line args\
  if #arg == 0 then\
    table.insert (arg, \"-\")\
  end\
  for i, v in ipairs (arg) do\
    if v == \"-\" then\
      io.input (io.stdin)\
    else\
      io.input (v)\
    end\
    f (v, i)\
  end\
end\
\
--- Give warning with the name of program and file (if any).\
-- If there is a global `prog` table, prefix the message with\
-- `prog.name` or `prog.file`, and `prog.line` if any.  Otherwise\
-- if there is a global `opts` table, prefix the message with\
-- `opts.program` and `opts.line` if any.  @{std.optparse:parse}\
-- returns an `opts` table that provides the required `program`\
-- field, as long as you assign it back to `_G.opts`:\
--\
--     local OptionParser = require \"std.optparse\"\
--     local parser = OptionParser \"eg 0\\nUsage: eg\\n\"\
--     _G.arg, _G.opts = parser:parse (_G.arg)\
--     if not _G.opts.keep_going then\
--       require \"std.io\".warn \"oh noes!\"\
--     end\
--\
-- @param ... arguments for format\
-- @see std.optparse:parse\
local function warn (...)\
  local prefix = \"\"\
  if (prog or {}).name then\
    prefix = prog.name .. \":\"\
    if prog.line then\
      prefix = prefix .. tostring (prog.line) .. \":\"\
    end\
  elseif (prog or {}).file then\
    prefix = prog.file .. \":\"\
    if prog.line then\
      prefix = prefix .. tostring (prog.line) .. \":\"\
    end\
  elseif (opts or {}).program then\
    prefix = opts.program .. \":\"\
    if opts.line then\
      prefix = prefix .. tostring (opts.line) .. \":\"\
    end\
  end\
  if #prefix > 0 then prefix = prefix .. \" \" end\
  writelines (io.stderr, prefix .. string.format (...))\
end\
\
--- Die with error.\
-- This function uses the same rules to build a message prefix\
-- as @{std.io.warn}.\
-- @param ... arguments for format\
-- @see std.io.warn\
local function die (...)\
  warn (...)\
  error ()\
end\
\
\
--- @export\
local M = {\
  catdir        = catdir,\
  catfile       = catfile,\
  die           = die,\
  process_files = process_files,\
  readlines     = readlines,\
  shell         = shell,\
  slurp         = slurp,\
  splitdir      = splitdir,\
  warn          = warn,\
  writelines    = writelines,\
}\
\
-- camelCase compatibility.\
M.processFiles  = process_files\
\
for k, v in pairs (io) do\
  M[k] = M[k] or v\
end\
\
return M\
"
, '@'..".\\lua-libraries\\std\\io.lua" ) )

package.preload[ "lua-libraries\\repl\\plugins\\completion" ] = assert( (loadstring or load)(
"-- Copyright (c) 2011-2014 Rob Hoelz <rob@hoelz.ro>\
--\
-- Permission is hereby granted, free of charge, to any person obtaining a copy of\
-- this software and associated documentation files (the \"Software\"), to deal in\
-- the Software without restriction, including without limitation the rights to\
-- use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\
-- the Software, and to permit persons to whom the Software is furnished to do so,\
-- subject to the following conditions:\
--\
-- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\
--\
-- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\
-- FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\
-- COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\
-- IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\
-- CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\
\
local getmetatable = getmetatable\
local pairs        = pairs\
local sfind        = string.find\
local sgmatch      = string.gmatch\
local smatch       = string.match\
local ssub         = string.sub\
local tconcat      = table.concat\
local tsort        = table.sort\
local type         = type\
\
local function isindexable(value)\
  if type(value) == 'table' then\
    return true\
  end\
\
  local mt = getmetatable(value)\
\
  return mt and mt.__index\
end\
\
local function getcompletions(t)\
  local union = {}\
\
  while isindexable(t) do\
    if type(t) == 'table' then\
      -- XXX what about the pairs metamethod in 5.2?\
      --     either we don't care, we implement a __pairs-friendly\
      --     pairs for 5.1, or implement a 'rawpairs' for 5.2\
      for k, v in pairs(t) do\
        if union[k] == nil then\
          union[k] = v\
        end\
      end\
    end\
\
    local mt = getmetatable(t)\
    t        = mt and mt.__index or nil\
  end\
\
  return pairs(union)\
end\
\
local function split_ns(expr)\
  if expr == '' then\
    return { '' }\
  end\
\
  local pieces = {}\
\
  -- XXX method calls too (option?)\
  for m in sgmatch(expr, '[^.]+') do\
    pieces[#pieces + 1] = m\
  end\
\
  -- logic for determining whether to pad the matches with the empty\
  -- string (ugly)\
  if ssub(expr, -1) == '.' then\
    pieces[#pieces + 1] = ''\
  end\
\
  return pieces\
end\
\
local function determine_ns(expr)\
  local ns     = _G -- XXX what if the REPL lives in a special context? (option?)\
  local pieces = split_ns(expr)\
\
  for index = 1, #pieces - 1 do\
    local key = pieces[index]\
    -- XXX rawget? or regular access? (option?)\
    ns = ns[key]\
\
    if not isindexable(ns) then\
      return {}, '', ''\
    end\
  end\
\
  expr = pieces[#pieces]\
\
  local prefix = ''\
\
  if #pieces > 1 then\
    prefix = tconcat(pieces, '.', 1, #pieces - 1) .. '.'\
  end\
\
  local last_piece = pieces[#pieces]\
\
  local before, after = smatch(last_piece, '(.*):(.*)')\
\
  if before then\
    ns     = ns[before] -- XXX rawget\
    prefix = prefix .. before .. ':'\
    expr   = after\
  end\
\
  return ns, prefix, expr\
end\
\
local isidentifierchar\
\
do\
  local ident_chars_set = {}\
  -- XXX I think this can be done with isalpha in C...\
  local ident_chars     = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.:_0123456789'\
\
  for i = 1, #ident_chars do\
    local char = ssub(ident_chars, i, i)\
    ident_chars_set[char] = true\
  end\
\
  function isidentifierchar(char)\
    return ident_chars_set[char]\
  end\
end\
\
local function extract_innermost_expr(expr)\
  local index = #expr\
\
  while index > 0 do\
    local char = ssub(expr, index, index)\
    if isidentifierchar(char) then\
      index = index - 1\
    else\
      break\
    end\
  end\
\
  index = index + 1\
\
  return ssub(expr, 1, index - 1), ssub(expr, index)\
end\
\
-- XXX is this logic (namely, returning the entire line) too specific to\
--     linenoise?\
function repl:complete(expr, callback)\
  local ns, prefix, path\
\
  prefix, expr = extract_innermost_expr(expr)\
\
  ns, path, expr = determine_ns(expr)\
\
  prefix = prefix .. path\
\
  local completions = {}\
\
  for k, v in getcompletions(ns) do\
    if sfind(k, expr, 1, true) == 1 then\
      local suffix = ''\
      local type   = type(v)\
\
      -- XXX this should be optional\
      if type == 'function' then\
        suffix = '('\
      elseif type == 'table' then\
        suffix = '.'\
      end\
\
      completions[#completions + 1] = prefix .. k .. suffix\
    end\
  end\
\
  tsort(completions)\
\
  for _, completion in ipairs(completions) do\
    callback(completion)\
  end\
end\
\
features = 'completion'\
"
, '@'..".\\lua-libraries\\repl\\plugins\\completion.lua" ) )

package.preload[ "lua-libraries\\cassowary" ] = assert( (loadstring or load)(
"local epsilon = 1e-8\
local count = 2\
std = require(\"std\")\
\
local function gPairs (t)\
  local a = {}\
  for n in pairs(t) do table.insert(a, n) end\
  table.sort(a, function(x,y) return x.hashcode < y.hashcode end)\
  local i = 0      -- iterator variable\
  local iter = function ()   -- iterator function\
    i = i + 1\
    if a[i] == nil then return nil\
    else return a[i], t[a[i]]\
    end\
  end\
  return iter\
end\
\
cassowary = {\
  debug = false,\
  trace = false,\
  verbose = false,\
  traceAdded = false,\
  tracePrint = function(self, p) if self.trace and self.verbose then print(p) end end,\
  traceFnEnterPrint = function(self, p) if self.trace then  print(\"* \"..p) end end,\
  traceFnExitPrint  = function(self, p) if self.trace then print(\"- \"..p) end end,\
  exprFromVarOrValue = function (v)\
    if type(v)==\"number\" then\
      return cassowary.Expression.fromConstant(v)\
    elseif v:prototype() == \"Expression\" then\
      return v\
    elseif type(v)==\"table\" then\
      return cassowary.Expression.fromVariable(v)\
    else\
      return v\
    end\
  end,\
  plus = function (e1,e2)\
    return cassowary.exprFromVarOrValue(e1):plus(cassowary.exprFromVarOrValue(e2))\
  end,\
  minus = function (e1,e2)\
    return cassowary.exprFromVarOrValue(e1):minus(cassowary.exprFromVarOrValue(e2))\
  end,\
  times = function (e1,e2)\
    return cassowary.exprFromVarOrValue(e1):times(cassowary.exprFromVarOrValue(e2))\
  end,\
  divide = function (e1,e2)\
    return cassowary.exprFromVarOrValue(e1):divide(cassowary.exprFromVarOrValue(e2))\
  end,\
  approx = function (a,b)\
    if a == b then return true end\
    a = type(a) == \"table\" and a.value or 0 + a\
    b = type(b) == \"table\" and b.value or 0 + b\
    if a == 0 then return math.abs(b) < epsilon end\
    if b == 0 then return math.abs(a) < epsilon end\
    return (math.abs(a - b) < math.abs(a) * epsilon)\
  end,\
  gensym = function()\
    count = count + 1\
    return count\
  end\
}\
\
local object = require \"std.object\"\
local Object = object { }\
\
cassowary.AbstractVariable = Object {\
  varnameprefix = \"\",\
  prefix = \"\",\
  name = \"\",\
  value = 0,\
  isDummy = false,\
  isExternal = false,\
  isPivotable = false,\
  isRestricted = false,\
  _type = \"AbstractVariable\",\
  _init = function (self,t)\
    self.hashcode = cassowary.gensym()\
    self.name = self.varnameprefix .. self.hashcode\
    if t then\
      return std.table.merge(self, t)\
    else\
      return self\
    end\
  end,\
  __tostring = function (self) return self.prefix .. \"[\" .. self.name .. \":\" .. self.value .. \"]\" end\
}\
\
cassowary.Variable = cassowary.AbstractVariable {\
  varnameprefix = \"v\",\
  _type = \"Variable\",\
  isExternal = true\
}\
\
cassowary.DummyVariable = cassowary.AbstractVariable {\
  varnameprefix = \"d\",\
  _type = \"DummyVariable\",\
  isDummy = true,\
  isRestricted = true,\
  value = \"dummy\"\
}\
\
cassowary.ObjectiveVariable = cassowary.AbstractVariable {\
  varnameprefix = \"o\",\
  _type = \"ObjectiveVariable\",\
  value = \"obj\"\
}\
\
cassowary.SlackVariable = cassowary.AbstractVariable {\
  varnameprefix = \"s\",\
  _type = \"SlackVariable\",\
  value = \"slack\",\
  isPivotable = true,\
  isRestricted = true\
}\
\
local _multiplier = 1000\
cassowary.SymbolicWeight = Object {\
  _type = \"SymbolicWeight\",\
  _init = function ( self, coefficients )\
    self.value = 0\
    local factor = 1\
    while #coefficients > 0 do\
      self.value = self.value + ( factor * table.remove(coefficients) )\
      factor = factor * _multiplier\
    end\
    return self\
  end\
}\
\
cassowary.Strength = Object {\
  _type = \"Strength\",\
  _init = function ( self, name, w1, w2, w3 )\
    self.name = name\
    if (type(w1) == \"table\" and a.prototype and a:prototype() == \"SymbolicWeight\") then\
      self.symbolicWeight = w1\
    else\
      self.symbolicWeight = cassowary.SymbolicWeight { w1; w2; w3 }\
    end\
    return self\
  end,\
  isRequired = function ( self ) return self == cassowary.Strength.required end,\
  __tostring = function ( self ) return self.name .. (self:isRequired() and \"\" or \":\"..tostring(self.symbolicWeight)) end\
}\
\
cassowary.Strength.required = cassowary.Strength(\"<Required>\", 1000, 1000, 1000 )\
cassowary.Strength.strong = cassowary.Strength(\"strong\", 1, 0, 0)\
cassowary.Strength.medium = cassowary.Strength(\"medium\", 0, 1, 0)\
cassowary.Strength.weak = cassowary.Strength(\"weak\", 0, 0, 1)\
\
cassowary.EditInfo = Object {_type = \"EditInfo\"}\
\
cassowary.Error = Object { _type = \"Error\", description = \"An error has occured in Cassowary\" }\
cassowary.ConstraintError = cassowary.Error { _type = \"ConstraintError\", description = \"Tried to remove a constraint never added to the tableau\" }\
cassowary.InternalError   = cassowary.Error { _type = \"InternalError\" }\
cassowary.NonExpression   = cassowary.Error { _type = \"NonExpression\", description = \"The resulting expression would be non\" }\
cassowary.NotEnoughStays  = cassowary.Error { _type = \"NotEnoughStays\", description = \"There are not enough stays to give specific values to every variable\" }\
cassowary.RequiredFailure = cassowary.Error { _type = \"RequiredFailure\", description = \"A required constraint cannot be satisfied\" }\
cassowary.TooDifficult    = cassowary.Error { _type = \"TooDifficult\", description = \"The constraints are too difficult to solve\" }\
\
Set = require(\"std.set\")\
\
local SetSize = function (set)\
  local c = 0\
  for _ in Set.elems(set) do c = c + 1 end\
  return c\
end\
\
SetFirst = function(set)\
  local iter = Set.elems(set)\
  return iter(set)\
end\
\
cassowary.Tableau = Object {\
  _type = \"Tableau\",\
  _init = function(self, ...)\
    local specializer = {}\
    local newObject\
    local args = {...}\
    if args[1] and type(args[1]) == \"table\" and not args[1].prototype then -- I am inheriting\
      specializer = table.remove(args,1)\
      newObject = Object.mapfields(self,specializer)\
    else -- I am instantiating\
      newObject = Object.mapfields(self,{})\
      newObject:initializer(unpack(args))\
    end\
    return newObject\
  end,  \
  initializer =  function(self)\
    self.columns = {}\
    self.rows = {}\
    self.infeasibleRows         = Set {}\
    self.externalRows           = Set {}\
    self.externalParametricVars = Set {}\
    return self\
  end,\
  noteRemovedVariable = function(self, v, subject)\
    if cassowary.trace then print(\"c.Tableau::noteRemovedVariable: \", v, subject) end\
    local column = self.columns[v]\
    if (subject and column) then column[subject] = nil end\
  end,\
  noteAddedVariable = function(self, v, subject)\
    if subject then self:insertColVar(v,subject) end\
  end,\
  insertColVar = function (self, paramVar, rowvar)\
    cassowary:traceFnEnterPrint(\"insertColVar \"..tostring(paramVar)..\" \"..tostring(rowvar))\
    local rowset = self.columns[paramVar]\
    if not rowset then\
      rowset = Set {}\
      self.columns[paramVar] = rowset\
    end\
    Set.insert(rowset, rowvar)\
  end,\
  addRow = function (self, aVar, expr)\
    cassowary:traceFnEnterPrint(\"addRow: \"..tostring(aVar)..\", \"..tostring(expr))\
    self.rows[aVar] = expr\
    for clv,coeff in pairs(expr.terms) do \
      self:insertColVar(clv, aVar)\
      if clv.isExternal then Set.insert(self.externalParametricVars, clv) end\
    end\
    if aVar.isExternal then Set.insert(self.externalRows, aVar) end\
    -- cassowary:tracePrint(self..\"\")\
  end,\
  removeColumn = function (self, aVar)\
    cassowary:traceFnEnterPrint(\"removeColumn: \"..tostring(aVar) )\
    rows = self.columns[aVar]\
    if rows then\
      self.columns[aVar] = nil\
      for clv in Set.elems(rows) do\
        local expr = self.rows[clv]\
        expr.terms[aVar] = nil\
      end\
    else\
      --print(\"Could not find \"..aVar..\" in columns\")\
    end\
    if aVar.isExternal then\
      Set.delete(self.externalRows, aVar)\
      Set.delete(self.externalParametricVars, aVar)\
    end\
  end,\
  removeRow = function (self, aVar)\
    cassowary:traceFnEnterPrint(\"removeRow: \"..tostring(aVar) )\
    local expr = self.rows[aVar]\
    assert(expr)\
    for clv,coeff in pairs(expr.terms) do \
      local varset = self.columns[clv]\
      if varset then\
        Set.delete(varset, aVar)\
      end\
    end    \
    Set.delete(self.infeasibleRows, aVar)\
    if aVar.isExternal then\
      Set.delete(self.externalRows, aVar)\
    end\
    self.rows[aVar] = nil\
    cassowary:traceFnExitPrint(\"returning \"..tostring(expr) )\
    return expr\
  end,\
  substituteOut = function (self, oldVar, expr)\
    if cassowary.trace then\
      cassowary:traceFnEnterPrint(\"substituteOut: \"..tostring(oldVar))\
    end\
\
    local varset = self.columns[oldVar]\
    for v in Set.elems(varset) do\
      local row = self.rows[v]\
      row:substituteOut(oldVar, expr, v, self)\
      if v.isRestricted and row.constant < 0 then\
        Set.insert(self.infeasibleRows, v)\
      end\
    end\
\
    if oldVar.isExternal then \
      Set.insert(self.externalRows, oldVar)\
      Set.delete(self.externalParametricVars, oldVar)\
    end\
\
    self.columns[oldVar] = nil\
  end,\
  columnsHasKey = function(self, subject)\
    return self.columns[subject] ~= nil\
  end\
}\
\
cassowary.Expression = Object { \
  _type = \"Expression\",\
  _init = function(self, cvar, value, constant)\
    self.hashcode = cassowary.gensym()\
    self.constant = type(constant) == \"number\" and constant or 0\
    self.terms = {}\
    if type(cvar) == \"number\" then self.constant = cvar\
    elseif type(cvar) == \"table\" then\
      self:setVariable(cvar, type(value) == \"number\" and value or 1)\
    end\
    return self\
  end,\
  initializeFromTable = function(self, constant, terms)\
    self.constant = constant\
    self.terms = std.table.clone(terms)\
    return self\
  end,\
  multiplyMe = function(self, x)\
    self.constant = self.constant * x\
    for clv,coeff in pairs(self.terms) do \
      self.terms[clv] = coeff * x\
    end\
    return self\
  end,\
  clone = function(self)\
    local c = cassowary.Expression.empty()\
    c:initializeFromTable(self.constant, self.terms)\
    return c\
  end,\
  times = function(self, x)\
    if type(x) == \"number\" then return (self:clone()):multiplyMe(x)\
    elseif self:isConstant() then return x:times(self.constant)\
    elseif x:isConstant() then return self:times(x.constant)\
    else error(cassowary.NonExpression)\
    end\
  end,\
  plus = function(self, x)\
    if x:prototype() == \"Expression\" then return (self:clone()):addExpression(x, 1)\
    elseif x:prototype() == \"AbstractVariable\" then return (self:clone()):addVariable(x,1)\
    end\
  end,\
  minus = function(self, x)\
    if x:prototype() == \"Expression\" then return (self:clone()):addExpression(x, -1)\
    elseif x:prototype() == \"AbstractVariable\" then return (self:clone()):addVariable(x,-1)\
    end\
  end,\
  divide = function(self, x)\
    if type(x) == \"number\" then \
      if cassowary.approx(x,0) then error(cassowary.NonExpression) else return self:times(1/x) end\
    elseif x:prototype() == \"Expression\" then\
      if not x:isConstant() then error(cassowary.NonExpression) else return self:times(1/x.constant) end\
    end\
  end,\
  addExpression = function (self, expr, n, subject, solver)\
    if expr:prototype() == \"AbstractVariable\" then expr = cassowary.Expression.fromVariable(expr) end\
    n = type(n) == \"number\" and n or 1\
    self.constant = self.constant + (n * expr.constant)\
    for clv,coeff in pairs(expr.terms) do\
      self:addVariable(clv, coeff * n, subject, solver)\
    end\
    return self\
  end,\
  addVariable = function (self, v, cd, subject, solver)\
    cd = cd or 1\
    local coeff = self.terms[v]\
    if coeff then\
      local newCoefficient = coeff + cd\
      if newCoefficient == 0 or cassowary.approx(newCoefficient, 0) then\
        if solver then solver:noteRemovedVariable(v, subject) end\
        self.terms[v] = nil\
      else\
        self:setVariable(v, newCoefficient)\
      end\
    else\
      if not cassowary.approx(cd, 0) then\
        self:setVariable(v, cd)\
        if solver then\
          solver:noteAddedVariable(v, subject)\
        end\
      end\
    end\
    return self\
  end,\
  setVariable = function (self, v, c)\
    self.terms[v] = c\
    return self\
  end,\
  anyPivotableVariable = function (self)\
    if self:isConstant() then\
      error(cassowary.InternalError { description = \"anyPivotableVariable called on a constant\"})\
    end\
    for clv,coeff in pairs(self.terms) do\
      if clv.isPivotable then return clv end\
    end\
    return nil\
  end,\
  substituteOut = function (self, outvar, expr, subject, solver)\
    local multiplier = self.terms[outvar]\
    self.terms[outvar] = nil\
    self.constant = self.constant + (multiplier * expr.constant)\
    for clv,coeff in pairs(expr.terms) do\
      local oldcoeff = self.terms[clv]\
      if oldcoeff then\
        local newCoefficient = oldcoeff + multiplier * coeff\
        if cassowary.approx(newCoefficient, 0) then\
          solver:noteRemovedVariable(clv, subject)\
          self.terms[clv] = nil\
        else\
          self.terms[clv] = newCoefficient\
        end\
      else\
        self.terms[clv] = multiplier * coeff\
        if solver then\
          solver:noteAddedVariable(clv, subject)\
        end\
      end\
    end\
  end,\
  changeSubject = function (self, old, new)\
    self:setVariable(old, self:newSubject(new))\
  end,\
  newSubject = function (self, subject)\
    local reciprocal = 1 / self.terms[subject]\
    self.terms[subject] = nil\
    self:multiplyMe(-reciprocal)\
    return reciprocal\
  end,\
  coefficientFor = function (self, clv)\
    return self.terms[clv] or 0\
  end,  \
  isConstant = function (self)\
    for _ in pairs(self.terms) do\
      return false\
    end\
    return true\
  end,\
  equals = function (self, other)\
    if self == other then return true end\
    if not (other:prototype() == \"Expression\" and other.constant == self.constant) then return false end\
    -- This is wasteful but I am lazy and lua is fast and most expressions are small\
    for k,v in pairs(self.terms) do\
      if not (other.terms[k] == v) then return false end\
    end\
    for k,v in pairs(other.terms) do\
      if not (self.terms[k] == v) then return false end\
    end\
    return true\
  end,\
\
  __tostring = function (self) -- worth it for debugging, eh\
    local rv = \"\"\
    local needsplus = false\
    if (not cassowary.approx(self.constant, 0) or self:isConstant()) then\
      rv = rv .. self.constant\
      if self:isConstant() then return rv end\
      needsplus = true\
    end\
    for clv, coeff in gPairs(self.terms) do\
      if needsplus then rv = rv .. \" + \" end\
      rv = rv .. coeff .. \"*\" .. clv.value\
      needsplus = true\
    end\
    return rv\
  end,\
  empty = function() return cassowary.Expression(nil, 1, 0) end,\
  fromConstant = function(c) return cassowary.Expression(c) end,\
  fromValue    = function(v) return cassowary.Expression(nil, v, 0) end,\
  fromVariable = function(v) return cassowary.Expression(v,1,0) end\
}\
\
local _constraintStringify = function (self) return tostring(self.strength) .. \" {\" .. tostring(self.weight) .. \"} (\" .. tostring(self.expression) .. \")\" end\
\
local abcon_init = function (self, strength, weight)\
    self.hashcode = cassowary.gensym()\
    self.strength = strength or cassowary.Strength.required\
    self.weight = (not weight or weight == 0) and 1 or weight\
    return self\
  end\
\
cassowary.AbstractConstraint = Object {\
  _type = \"AbstractConstraint\",\
  isEditConstraint = false,\
  isInequality = false,\
  isStayConstraint = false,\
  _init = function(self, ...)\
    local specializer = {}\
    local newObject\
    local args = {...}\
    if args[1] and type(args[1]) == \"table\" and not args[1].prototype then -- I am inheriting\
      specializer = table.remove(args,1)\
      newObject = Object.mapfields(self,specializer)\
    else -- I am instantiating\
      newObject = Object.mapfields(self,{})\
      newObject:initializer(unpack(args))\
    end\
    return newObject\
  end,\
  initializer = abcon_init,\
  required = function (self) return self.strength == cassowary.Strength.required end,\
  __tostring = _constraintStringify\
}\
\
local _editStayInit = function (self, cv, strength, weight)\
  self = abcon_init(self, strength,weight)\
  self.variable = cv\
  self.expression = cassowary.Expression(cv, -1, cv.value)\
  return self\
end\
\
\
cassowary.EditConstraint = cassowary.AbstractConstraint {\
  _type = \"EditConstraint\",\
  isEditConstraint = true,\
  initializer = _editStayInit,\
  __tostring = function (self) return \"edit: \".._constraintStringify(self) end\
}\
\
cassowary.StayConstraint = cassowary.AbstractConstraint {\
  _type = \"StayConstraint\",\
  isStayConstraint = true,\
  initializer = _editStayInit,\
  __tostring = function (self) return \"stay: \".._constraintStringify(self) end\
}\
\
cassowary.Constraint = cassowary.AbstractConstraint({\
  _type = \"Constraint\",\
  initializer = function (self, cle, strength, weight)\
    self = cassowary.AbstractConstraint.initializer(self, strength, weight)\
    self.expression = cle\
    return self\
  end,\
})\
\
cassowary.Inequality = cassowary.Constraint {\
  _type = \"Inequality\",\
  cloneOrNewCle = function (self, cle)\
    if type(cle)==\"table\" and cle.clone then return cle:clone() else return cassowary.Expression(cle) end\
  end,\
  initializer = function (self, a1, a2, a3, a4, a5)  \
    -- This disgusting mess copied from slightyoff's disgusting mess\
    -- (cle || number), op, cv\
    if (type(a1) == \"number\" or a1:prototype() == \"Expression\") and type(a3) == \"table\" and a3:prototype() == \"AbstractVariable\" then\
      local cle, op, cv, strength, weight = a1, a2,a3,a4,a5\
      self = cassowary.Constraint.initializer(self, self:cloneOrNewCle(cle), strength, weight)\
      if op == \"<=\" then\
        self.expression:multiplyMe(-1)\
        self.expression:addVariable(cv)\
      elseif op == \">=\" then\
        self.expression:addVariable(cv, -1)\
      else\
        error(cassowary.InternalError { description = \"Invalid operator in c.Inequality constructor\"})\
      end\
    -- cv, op, (cle || number)\
    elseif type(a1) == \"table\" and a1:prototype() == \"AbstractVariable\" and a3 and (type(a3) == \"number\" or a3:prototype() == \"Expression\") then\
      local cle, op, cv, strength, weight = a3,a2,a1,a4,a5\
      self = cassowary.Constraint.initializer(self, self:cloneOrNewCle(cle), strength, weight)\
      if op == \">=\" then -- a switch!\
        self.expression:multiplyMe(-1)\
        self.expression:addVariable(cv)\
      elseif op == \"<=\" then\
        self.expression:addVariable(cv, -1)\
      else\
        error(cassowary.InternalError { description = \"Invalid operator in c.Inequality constructor\"})\
      end\
    -- cle, op, num  \
    elseif type(a1) == \"table\" and a1:prototype() == \"Expression\" and type(a3) == \"number\" then\
      -- I feel like I'm writing Java\
      local cle1, op, cle2, strength, weight = a1,a2,a3,a4,a5\
      self = cassowary.Constraint.initializer(self, self:cloneOrNewCle(cle1), strength, weight)\
      if op == \"<=\" then\
        self.expression:multiplyMe(-1)\
        self.expression:addExpression(self:cloneOrNewCle(cle2))\
      elseif op == \">=\" then\
        -- Just keep turning the crank and the code keeps coming out\
        self.expression:addExpression(self:cloneOrNewCle(cle2), -1)\
      else\
        error(cassowary.InternalError { description = \"Invalid operator in c.Inequality constructor\"})\
      end\
    elseif type(a1) == \"number\" and type(a3) == \"table\" and a3:prototype() == \"Expression\" then\
      -- Polymorphism makes a lot of sense in strongly-typed languages\
      local cle1, op, cle2, strength, weight = a3,a2,a1,a4,a5\
      self = cassowary.Constraint.initializer(self, self:cloneOrNewCle(cle1), strength, weight)\
      if op == \">=\" then\
        self.expression:multiplyMe(-1)\
        self.expression:addExpression(self:cloneOrNewCle(cle2))\
      elseif op == \"<=\" then\
        self.expression:addExpression(self:cloneOrNewCle(cle2), -1)\
      else\
        error(cassowary.InternalError { description = \"Invalid operator in c.Inequality constructor\"})\
      end\
    elseif type(a1) == \"table\" and a1:prototype() == \"Expression\" and type(a3) == \"table\" and a3:prototype() == \"Expression\" then\
      -- but in weakly-typed languages it really doesn't gain you anything.\
      local cle1, op, cle2, strength, weight = a1,a2,a3,a4,a5\
      self = cassowary.Constraint.initializer(self, self:cloneOrNewCle(cle2), strength, weight)\
      if op == \">=\" then\
        self.expression:multiplyMe(-1)\
        self.expression:addExpression(self:cloneOrNewCle(cle1))\
      elseif op == \"<=\" then\
        self.expression:addExpression(self:cloneOrNewCle(cle1), -1)\
      else\
        error(cassowary.InternalError { description = \"Invalid operator in c.Inequality constructor\"})\
      end\
    elseif type(a1) == \"table\" and a1:prototype() == \"Expression\" then\
      self = cassowary.Constraint.initializer(self, a1, a2, a3)\
    elseif a2 == \">=\" then\
      self = cassowary.Constraint.initializer(self, cassowary.Expression(a3), a4, a5)\
      self.expression:multiplyMe(-1)\
      self.expression:addVariable(a1)\
    elseif a2 == \"<=\" then\
      self = cassowary.Constraint.initializer(self, cassowary.Expression(a3), a4, a5)\
      self.expression:addVariable(a1,-1)\
    else\
      error(cassowary.InternalError { description = \"Invalid operator in c.Inequality constructor\"})\
    end\
    return self\
  end,\
  isInequality = true,\
  __tostring = function (self)\
    return _constraintStringify(self) .. \" >= 0) id: \".. self.hashcode\
  end\
}\
\
cassowary.Equation = cassowary.Constraint {\
  _type = \"Equation\",\
  initializer = function (self, a1, a2, a3, a4)\
    local isExpression   = function(f) return (type(f)==\"table\" and f:prototype() == \"Expression\") end\
    local isVariable     = function(f) return (type(f)==\"table\" and f:prototype() == \"AbstractVariable\") end\
    local isNumber       = function(f) return (type(f)==\"number\") end\
    if (isExpression(a1) and not a2 or type(a2) == \"table\" and a2:prototype() == \"Strength\") then\
      self = cassowary.Constraint.initializer(self, a1, a2, a3)\
    elseif isVariable(a1) and isExpression(a2) then\
      local cv,cle,strength,weight = a1,a2,a3,a4\
      self = cassowary.Constraint.initializer(self, cle:clone(), strength, weight)\
      self.expression:addVariable(cv, -1)\
    elseif isVariable(a1) and isNumber(a2) then\
      local cv,val,strength,weight= a1,a2,a3,a4\
      self = cassowary.Constraint.initializer(self, cassowary.Expression(val), strength, weight)\
      self.expression:addVariable(cv, -1)      \
    elseif isExpression(a1) and isVariable(a2) then\
      local cle,cv,strength,weight= a1,a2,a3,a4\
      self = cassowary.Constraint.initializer(self, cle:clone(), strength, weight)\
      self.expression:addVariable(cv, -1)\
    elseif (isNumber(a1) or isExpression(a1) or isVariable(a1)) and\
           (isNumber(a2) or isExpression(a2) or isVariable(a2)) then\
      a1 = isExpression(a1) and a1:clone() or cassowary.Expression(a1)\
      a2 = isExpression(a2) and a2:clone() or cassowary.Expression(a2)\
      self = cassowary.Constraint.initializer(self, a1,a3,a4)\
      self.expression:addExpression(a2, -1)\
    else\
      error(\"Bad initializer to Equation\")\
    end\
    assert(self.strength:prototype() == \"Strength\")\
    return self\
    end,\
  __tostring = function(self) return _constraintStringify(self) .. \" = 0\" end   \
}\
\
cassowary.SimplexSolver = cassowary.Tableau {\
  _type = \"SimplexSolver\",\
  _init = function(self, ...)\
    local specializer = {}\
    local newObject\
    local args = {...}\
    if args[1] and type(args[1]) == \"table\" and not args[1].prototype then -- I am inheriting\
      specializer = table.remove(args,1)\
      newObject = Object.mapfields(self,specializer)\
    else -- I am instantiating\
      newObject = Object.mapfields(self,{})\
      newObject:initializer(unpack(args))\
    end\
    return newObject\
  end,  \
  initializer = function(self)\
    cassowary.Tableau.initializer(self)\
    self.stayMinusErrorVars = {}\
    self.stayPlusErrorVars = {}\
    self.errorVars = {}\
    self.markerVars = {}\
    self.objective = cassowary.ObjectiveVariable({name = \"Z\"})\
    self.editVarMap = {}\
    self.editVarList = {} -- XXX\
    self.slackCounter = 0\
    self.artificialCounter = 0\
    self.dummyCounter = 0\
    self.autoSolve = true\
    self.needsSolving = false\
    self.optimizeCount = 0\
    self.rows[self.objective] = cassowary.Expression.empty()\
    self.editVariableStack = { 0 } -- A stack of *element counts*\
    if cassowary.trace then\
      cassowary:tracePrint(\"objective expr == \"..self.rows[self.objective])\
    end\
  end,\
  add = function (self, ...)\
    local args = {...}\
    for k=1, #args do self:addConstraint(args[k]) end\
    return self\
  end,\
  addEditConstraint = function (self, cn, eplus_eminus, prevEConstant)\
    local i = 0\
    for _ in pairs(self.editVarMap) do i = i + 1 end\
    local cvEplus, cvEminus = eplus_eminus[1], eplus_eminus[2]\
    local ei = cassowary.EditInfo { constraint = cn, \
      editPlus = cvEplus, \
      editMinus = cvEminus, \
      prevEditConstant = prevEConstant, \
      index = i }\
    self.editVarMap[cn.variable] = ei\
    self.editVarList[i+1] = {v = cn.variable, info = ei}\
  end,\
  addConstraint = function(self, cn)\
    cassowary:traceFnEnterPrint(\"addConstraint: \"..tostring(cn))\
    local expr, eplus_eminus, prevEConstant = self:newExpression(cn)\
    if not self:tryAddingDirectly(expr) then self:addWithArtificialVariable(expr) end\
    self.needsSolving = true\
    if cn.isEditConstraint then self:addEditConstraint(cn, eplus_eminus, prevEConstant) end\
    if self.autoSolve then\
      self:optimize(self.objective)\
      self:setExternalVariables()\
    end\
    return self\
  end,\
  addConstraintNoException = function (self,cn)\
    cassowary:traceFnEnterPrint(\"addConstaintNoException: \"..tostring(cn))\
    return pcall(self.addConstraint, self, cn)\
  end,\
  addEditVar = function (self, v, strength, weight)\
    cassowary:traceFnEnterPrint(\"addEditVar: \" .. tostring(v) .. \" @ \" .. tostring(strength) .. \" {\" .. tostring(weight) .. \"}\");\
    return self:addConstraint(cassowary.EditConstraint(v, strength or cassowary.Strength.strong, weight));\
  end,\
  beginEdit = function(self)\
    local count = 0\
    for _ in pairs(self.editVarMap) do count = count + 1 end\
    assert(count > 0)\
    self.infeasibleRows = Set {}\
    self:resetStayConstants();\
    self.editVariableStack[#(self.editVariableStack)+1] = count\
    return self;\
  end,\
  endEdit = function ( self )\
    local count = 0\
    for _ in pairs(self.editVarMap) do count = count + 1 end\
    assert(count > 0)\
    self:resolve()\
    table.remove(self.editVariableStack)\
    local last = self.editVariableStack[#(self.editVariableStack)]\
    self:removeEditVarsTo(last)\
    return self\
  end,\
  removeAllEditVars = function(self)\
    self:removeEditVarsTo(0)\
  end,\
  removeEditVarsTo = function(self, n)\
    -- n is a count, which in lua is not an index\
    for k=n+1,#(self.editVarList) do\
      if self.editVarList[k] then\
        local v = self.editVarMap[self.editVarList[k].v]\
        self:removeConstraint(v.constraint)\
      end\
      self.editVarList[k] = nil\
    end\
    local count = 0\
    for _ in pairs(self.editVarMap) do count = count + 1 end\
    assert(count == n)    \
  end,\
  addPointStays = function(self, points)\
    cassowary:traceFnEnterPrint(\"addPointStays: \"..tostring(points))\
    for i = 1,#points do\
      local p = points[i]\
      self:addStay(p.x, cassowary.Strength.weak, 2^i)\
      self:addStay(p.y, cassowary.Strength.weak, 2^i)\
    end\
    return self\
  end,\
  addStay = function (self, v, strength, weight)\
    local cn = cassowary.StayConstraint(v, strength or cassowary.Strength.weak, weight or 1)\
    return self:addConstraint(cn)\
  end,\
  removeConstraint = function (self, cn)\
    cassowary:traceFnEnterPrint(\"removeConstraint: \"..tostring(cn))\
    self.needsSolving = true\
    self:resetStayConstants()\
    local zrow = self.rows[self.objective]\
    local evars = self.errorVars[cn]\
    cassowary:tracePrint(\"evars: \"..tostring(evars))\
\
    if evars then\
      for cv in Set.elems(evars) do\
        local expr = self.rows[cv]\
        if not expr then\
          zrow:addVariable(cv, -cn.weight * cn.strength.symbolicWeight.value, self.objective, self)\
        else\
          zrow:addExpression(expr, -cn.weight * cn.strength.symbolicWeight.value, self.objective, self)\
        end\
        cassowary:tracePrint(\"now evars: \"..tostring(evars))\
      end\
    end\
    local marker = self.markerVars[cn]\
    self.markerVars[cn] = nil\
    if not marker then error(cassowary.InternalError { description = \"Constraint not found in removeConstraint\"}) end\
    cassowary:tracePrint(\"Looking to remove var \"..tostring(marker))\
    if not self.rows[marker] then\
      local col = self.columns[marker] -- XXX\
      --cassowary:tracePrint(\"Must pivot - cols are \"..col)\
      local exitVar\
      local minRatio = 0\
      for v in Set.elems(col) do\
        if v.isRestricted then\
          local expr = self.rows[v]\
          local coeff = expr:coefficientFor(marker)\
          cassowary:tracePrint(\"Marker \"..tostring(marker)..\"'s coefficient in \"..tostring(expr)..\" is \"..tostring(coeff))\
          if coeff < 0 then\
            local r = -expr.constant / coeff\
            if (not exitVar) or r < minRatio or (\
              cassowary.approx(r, minRatio) and v.hashcode < exitVar.hashcode\
              ) then\
              minRatio = r\
              exitVar = v\
            end\
          end\
        end\
      end\
      if not exitVar then\
        cassowary:tracePrint(\"Exitvar still null\")\
        for v in Set.elems(col) do\
          if v.isRestricted then\
            local expr = self.rows[v]\
            local coeff = expr:coefficientFor(marker)\
            local r = expr.constant / coeff\
            if (not exitVar) or r < minRatio then\
              minRatio = r\
              exitVar = v\
            end\
          end\
        end        \
      end\
      if not exitVar then\
        if #col == 0 then self:removeColumn(marker)\
        else\
          local i = 1\
          while i <= #col and not exitVar do\
            if not (col[i] == self.objective) then exitVar = col[i] end\
          end\
        end\
      end\
      if exitVar then self:pivot(marker, exitVar) end\
    end\
    if self.rows[marker] then self:removeRow(marker) end\
    if eVars then\
      for i=1,#eVars do local v = eVars[i]\
        if not (v == marker) then self:removeColumn(v) end\
      end\
    end\
    if cn.isStayConstraint then\
      if eVars then \
        for i = 1,#(self.stayPlusErrorVars) do\
          eVars[self.stayPlusErrorVars[i]] = nil\
          eVars[self.stayMinusErrorVars[i]] = nil\
        end\
      end\
    elseif cn.isEditConstraint then\
      assert(evars)\
      local cei = self.editVarMap[cn.variable]\
      self:removeColumn(cei.editMinus)\
      self.editVarMap[cn.variable] = nil\
    end\
\
    if eVars then self.errorVars[eVars] = nil end\
    if self.autoSolve then\
      self:optimize(self.objective)\
      self:setExternalVariables()\
    end\
    return self\
  end,\
  reset = function (self)\
    error(cassowary.InternalError { description = \"reset not implemented\" })\
  end,\
  resolveArray = function (self, newEditConstants)\
    cassowary:traceFnEnterPrint(\"resolveArray: \"..newEditConstants)\
    local l = #newEditConstants\
    for v,cei in pairs(self.editVarMap) do\
      local i = cei.index\
      if i < l then self:suggestValue(v, newEditConstants[i]) end\
    end\
    self:resolve()\
  end,\
  resolvePair = function (self, x, y)\
    self:suggestValue(self.editVarList[1].v, x)\
    self:suggestValue(self.editVarList[2].v, y)\
  end,\
  resolve = function (self)\
    self:dualOptimize()\
    self:setExternalVariables()\
    self.infeasibleRows = Set {}  \
    self:resetStayConstants()\
  end,\
  suggestValue = function(self, v, x)\
    cassowary:traceFnEnterPrint(\"suggestValue: \"..tostring(v).. \" \"..tostring(x))\
    local cei = self.editVarMap[v] or error(cassowary.Error {description = \"suggestValue for variable \" .. v .. \", but var is not an edit variable\"})\
    local delta = x - cei.prevEditConstant\
    cei.prevEditConstant = x\
    self:deltaEditConstant(delta, cei.editPlus, cei.editMinus)\
    return self\
  end,\
  solve = function (self)\
    if not self.needsSolving then return self end\
    self:optimize(self.objective)\
    self:setExternalVariables()\
    return self\
  end,\
  setEditedValue = function(self, v, n)\
    assert(\"Nobody calls this\")\
  end,\
  addVar = function (self, v)\
    assert(\"Or this\")\
  end,\
  getInternalInfo = function(self)\
    error(\"Unimplemented\")\
  end,\
  addWithArtificialVariable = function (self, expr)\
    cassowary:traceFnEnterPrint(\"addWithArtificialVariable \"..tostring(expr))\
    self.artificialCounter = self.artificialCounter + 1\
    local av = cassowary.SlackVariable { value = self.artificialCounter, prefix = \"a\"}\
    local az = cassowary.ObjectiveVariable { name = \"az\" }\
    local azRow = expr:clone()\
    self:addRow(az, azRow)\
    self:addRow(av, expr)\
    self:optimize(az)\
    local azTableauRow = self.rows[az]\
    cassowary:tracePrint(\"azTableauRow.constant == \" .. tostring(azTableauRow.constant))\
    if not cassowary.approx(azTableauRow.constant, 0) then\
      self:removeRow(az)\
      self:removeColumn(av)\
      error(cassowary.RequiredFailure)\
    end\
    local e = self.rows[av]\
    if e then\
      if e.isConstant then\
        self:removeRow(av)\
        self:removeRow(az)\
        return\
      end\
      self:pivot(e:anyPivotableVariable(), av)\
    end\
    assert(not self.rows[ev])\
    self:removeColumn(av)\
    self:removeRow(az)\
  end,\
  tryAddingDirectly = function (self, expr)\
    cassowary:traceFnEnterPrint(\"tryAddingDirectly \"..tostring(expr))\
    local subject = self:chooseSubject(expr)\
    if not subject then\
      cassowary:traceFnExitPrint(\"Returning false\")\
      return false\
    end\
    expr:newSubject(subject)\
    if self:columnsHasKey(subject) then\
      self:substituteOut(subject, expr)\
    end\
    self:addRow(subject, expr)\
    cassowary:traceFnExitPrint(\"Returning true\")\
    return true\
  end,\
  chooseSubject = function (self, expr)\
    cassowary:traceFnEnterPrint(\"chooseSubject \"..tostring(expr))\
    local subject, foundUnrestricted, foundNewRestricted\
    local terms = expr.terms\
    for v,c in pairs(terms) do\
      if foundUnrestricted then\
        if not v.isRestricted and not self:columnsHasKey(v) then\
          return v\
        end\
      elseif v.isRestricted then\
        if not foundNewRestricted and not v.isDummy and c < 0 then\
          local col = self.columns[v]\
          if not col or (SetSize(col) == 1 and self:columnsHasKey(self.objective)) then\
            subject = v\
            foundNewRestricted = true\
          end\
        end\
      else\
        subject = v\
        foundUnrestricted = true\
      end\
    end\
\
    if subject then return subject end\
    local coeff = 0\
    local oneNonDummy = false\
    for v,c in pairs(terms) do\
      if not v.isDummy then\
        oneNonDummy = true\
        break\
      end\
      if not self:columnsHasKey(v) then\
        subject = v\
        coeff = c\
      end\
    end\
    if oneNonDummy then return false end\
    if not cassowary.approx(expr.constant,0) then\
      error(cassowary.RequiredFailure)\
    end\
    if coeff > 0 then expr:multiplyMe(-1) end\
\
    return subject\
  end,\
\
  deltaEditConstant = function(self, delta, plusErrorVar, minusErrorVar)\
    cassowary:traceFnEnterPrint(\"deltaEditConstant\".. \" \"..tostring(delta)..\" \"..tostring(plusErrorVar)..\" \"..tostring(minusErrorVar))\
    local exprPlus = self.rows[plusErrorVar]\
    if exprPlus then\
      exprPlus.constant = exprPlus.constant + delta\
      if exprPlus.constant < 0 then Set.insert(self.infeasibleRows,plusErrorVar) end\
      return\
    end\
\
    local exprMinus = self.rows[minusErrorVar]\
    if exprMinus then\
      exprMinus.constant = exprMinus.constant - delta\
      if exprMinus.constant < 0 then Set.insert(self.infeasibleRows,minusErrorVar) end\
      return\
    end\
\
    local columnVars = self.columns[minusErrorVar]\
    if not columnVars then print(\"columnVars is null!\") end\
    for basicVar in Set.elems(columnVars) do\
      local expr = self.rows[basicVar]\
      local c = expr:coefficientFor(minusErrorVar)\
      expr.constant = expr.constant + (c * delta)\
      if basicVar.isRestricted and expr.constant < 0 then\
        Set.insert(self.infeasibleRows,basicVar)\
      end\
    end\
  end,\
  dualOptimize = function (self)\
    cassowary:traceFnEnterPrint(\"dualOptimize\")\
    local zRow = self.rows[self.objective]\
    while SetSize(self.infeasibleRows) > 0 do\
      local exitVar = SetFirst(self.infeasibleRows)\
      Set.delete(self.infeasibleRows, exitVar)\
      local entryVar = nil\
      expr = self.rows[exitVar]\
      if expr and expr.constant < 0 then\
        local ratio = 1/0\
        local r\
        local terms = expr.terms\
        for v,cd in pairs(terms) do\
          if cd > 0 and v.isPivotable then\
            local zc = zRow:coeffientFor(v)\
            r = zc / cd\
            if r < ratio or (cassowary.approx(r, ratio) and v.hashcode < entryVar.hashcode) then\
              entryVar = v\
              ratio = r\
            end\
          end\
        end\
        if ratio == 1/0 then\
          error(cassowary.InternalError { description = \"ratio == nil in dualOptimize\"})\
        end\
        self:pivot(entryVar, exitVar)\
      end\
    end\
  end,\
  newExpression = function (self, cn)\
    cassowary:traceFnEnterPrint(\"newExpression \"..tostring(cn))\
    local cnExpr = cn.expression\
    local expr = cassowary.Expression.fromConstant(cnExpr.constant)\
    local slackvar = cassowary.SlackVariable {}\
    local dummyvar = cassowary.DummyVariable {}\
    local eminus = cassowary.SlackVariable {}\
    local eplus = cassowary.SlackVariable {}\
    local cnTerms = cnExpr.terms\
    local eplus_eminus = {}\
    local prevEConstant\
\
    for v,c in pairs(cnTerms) do\
      local e = self.rows[v]\
      if not e then expr:addVariable(v,c) else expr:addExpression(e,c) end\
    end\
\
    if cn.isInequality then\
      cassowary:tracePrint(\"Inequality, adding slack\")\
      self.slackCounter = self.slackCounter + 1\
      slackvar = cassowary.SlackVariable { value = self.slackCounter, prefix = \"s\" }\
      expr:setVariable(slackvar, -1)\
      self.markerVars[cn] = slackvar\
      if not cn:required() then\
        self.slackCounter = self.slackCounter + 1\
        eminus = cassowary.SlackVariable { value = self.slackCounter, prefix = \"em\" }\
        expr:setVariable(eminus, 1)\
        local zRow = self.rows[self.objective]\
        zRow:setVariable(eminus, cn.strength.symbolicWeight.value * cn.weight)\
        self:insertErrorVar(cn, eminus)\
        self:noteAddedVariable(eminus, self.objective)\
      end\
    elseif cn:required() then\
      cassowary:tracePrint(\"Equality, required\")\
      self.dummyCounter = self.dummyCounter + 1\
      dummyvar = cassowary.DummyVariable { value = self.dummyCounter, prefix = \"d\" }\
      eplus_eminus[1] = dummyvar\
      eplus_eminus[2] = dummyvar\
      prevEConstant = cnExpr.constant\
      expr:setVariable(dummyvar, 1)\
      self.markerVars[cn] = dummyvar\
      cassowary:tracePrint(\"Adding dummy var d\"..self.dummyCounter)\
    else\
      cassowary:tracePrint(\"Equality, not required\")\
      self.slackCounter = self.slackCounter + 1\
      eplus = cassowary.SlackVariable { value = self.slackCounter, prefix = \"ep\" }\
      eminus = cassowary.SlackVariable { value = self.slackCounter, prefix = \"em\" }\
      expr:setVariable(eplus, -1)\
      expr:setVariable(eminus, 1)\
      self.markerVars[cn] = eplus\
      local zRow = self.rows[self.objective]\
      cassowary:tracePrint(zRow)\
      local swCoeff = cn.strength.symbolicWeight.value * cn.weight\
      if swCoeff == 0 then\
        cassowary:tracePrint(\"cn === \"..cn.. \" swCoeff = 0\")\
      end\
      zRow:setVariable(eplus, swCoeff)\
      self:noteAddedVariable(eplus, self.objective)\
      zRow:setVariable(eminus, swCoeff)\
      self:noteAddedVariable(eminus, self.objective)\
      self:insertErrorVar(cn, eminus)\
      self:insertErrorVar(cn, eplus)\
      if cn.isStayConstraint then\
        self.stayPlusErrorVars[#self.stayPlusErrorVars+1] = eplus\
        self.stayMinusErrorVars[#self.stayMinusErrorVars+1] = eminus\
      elseif cn.isEditConstraint then\
        eplus_eminus[1] = eplus\
        eplus_eminus[2] = eminus\
        prevEConstant = cnExpr.constant\
      end\
    end\
    if expr.constant <0 then expr:multiplyMe(-1) end\
    return expr, eplus_eminus, prevEConstant\
  end,\
  optimize = function (self, zVar)\
    cassowary:traceFnEnterPrint(\"optimize: \"..tostring(zVar))\
    self.optimizeCount = self.optimizeCount + 1\
    local zRow = self.rows[zVar]\
    assert(zRow)\
    local entryVar, exitVar, objectiveCoeff, terms\
    while true do \
      objectiveCoeff = 0\
      terms = zRow.terms\
      for v,c in pairs(terms) do\
        if v.isPivotable and c < objectiveCoeff then\
          objectiveCoeff = c\
          entryVar = v\
          break\
        end\
      end\
      cassowary:tracePrint(\"entryVar: \"..tostring(entryVar)..\" objectiveCoeff: \"..tostring(objectiveCoeff))\
\
      if objectiveCoeff >= -epsilon then return end\
\
\
      local minRatio = 2^64\
      local columnVars = self.columns[entryVar]\
      local r = 0\
\
      for v in Set.elems(columnVars) do\
        cassowary:tracePrint(\"Checking \"..tostring(v))\
        if v.isPivotable then\
          local expr = self.rows[v]\
          local coeff = expr:coefficientFor(entryVar)\
          cassowary:tracePrint(\"pivotable, coeff is \"..tostring(coeff))\
          if coeff < 0 then\
            r = -expr.constant / coeff\
            if r < minRatio or (cassowary.approx(r, minRatio) and v.hashcode < exitVar.hashcode) then\
              minRatio = r\
              exitVar = v\
            end\
          end\
        end\
      end\
\
      if minRatio == 2^64 then \
        error(cassowary.InternalError { description = \"Objective function is unbounded in optimize\"})\
      end\
      self:pivot(entryVar, exitVar)\
    end\
  end,\
\
  pivot = function(self, entryVar, exitVar)\
    cassowary:tracePrint(\"pivot: \"..tostring(entryVar)..\", \"..tostring(exitVar))\
    local expr = self:removeRow(exitVar)\
    expr:changeSubject(exitVar, entryVar)\
    self:substituteOut(entryVar, expr)\
    self:addRow(entryVar, expr)\
  end,\
  resetStayConstants = function (self)\
    cassowary:tracePrint(\"resetStayConstants\")\
    local spev = self.stayPlusErrorVars\
    local i\
    for i = 1,#spev do\
      local expr = self.rows[spev[i]]\
      if not expr then expr = self.rows[self.stayMinusErrorVars[i]] end\
      if expr then expr.constant = 0 end\
    end\
  end,\
\
  setExternalVariables = function(self)\
    cassowary:tracePrint(\"setExternalVariables\")\
    local changed = {}\
    for v in Set.elems(self.externalParametricVars) do\
      if self.rows[v] then\
        cassowary:tracePrint(\"Error: variable\" .. tostring(v) .. \" in _externalParametricVars is basic\")\
      else\
        v.value = 0\
        changed[v.name] = 0\
      end\
    end\
\
    for v in Set.elems(self.externalRows) do\
      local expr = self.rows[v]\
      if not (v.value == expr.constant) then\
        v.value = expr.constant\
        changed[v.name] = expr.constant\
      end\
    end\
\
    self.changed = changed\
    self.needsSolving = false\
    -- self:informCallbacks()\
    -- self:onsolved()\
  end,\
\
  insertErrorVar = function (self, cn, aVar)\
    cassowary:tracePrint(\"insertErrorVar: \"..tostring(cn)..\", \"..tostring(aVar))\
    local constraintSet = self.errorVars[aVar]\
    if not constraintSet then\
      constraintSet = Set {}\
      self.errorVars[cn] = constraintSet\
    end\
    Set.insert(constraintSet, aVar)\
  end\
}\
\
return cassowary\
"
, '@'..".\\lua-libraries\\cassowary.lua" ) )

package.preload[ "core\\inputs-xml" ] = assert( (loadstring or load)(
"SILE.inputs.XML = {\
  process = function (fn)\
    local lom = require(\"lomwithpos\")\
    local fh = io.open(fn)\
    local t = lom.parse(fh:read(\"*all\"))\
    local root = SILE.documentState.documentClass == nil\
    if root then\
      if not(t.tag == \"sile\") then\
        SU.error(\"This isn't a SILE document!\")\
      end\
      SILE.inputs.common.init(fn, t)\
    end\
    SILE.currentCommand = t    \
    if SILE.Commands[t.tag] then\
      SILE.Commands[t.tag](t.attr,t)\
    else\
      SILE.process(t)\
    end\
    if root and not SILE.preamble then\
      SILE.documentState.documentClass:finish()\
    end\
  end,\
}"
, '@'..".\\core\\inputs-xml.lua" ) )

package.preload[ "core\\pagebuilder" ] = assert( (loadstring or load)(
"local awful_bad = 1073741823\
local inf_bad = 10000\
local eject_penalty = -inf_bad\
local deplorable = 100000\
\
SILE.pagebuilder = {\
  collateVboxes = function(vboxlist)\
    local i\
    local output = SILE.nodefactory.newVbox({nodes = {} })\
    local h = SILE.length.new({})\
    for i=1,#vboxlist do\
      table.insert(output.nodes, vboxlist[i])\
      h = h + vboxlist[i].height + vboxlist[i].depth\
    end\
    output.ratio = 1\
    output.height = h\
    output.depth = 0\
    return output\
  end,\
\
  badness = function (t,s)\
    local bad = 100 * (t/s)^3\
    bad = math.floor(bad) -- TeX uses integer math for this stuff, so for compatibility...\
\
    if bad > inf_bad then return inf_bad else return bad end\
  end,\
\
  findBestBreak = function(vboxlist, target)\
    local i\
    local totalHeight = SILE.length.new()\
    local bestBreak = nil\
    local leastC = inf_bad\
    SU.debug(\"pagebuilder\", \"Page builder called with \"..#vboxlist..\" nodes, \"..target)\
    for i = 1,#vboxlist do local vbox = vboxlist[i]\
      SU.debug(\"pagebuilder\", \"Dealing with VBox \" .. vbox)\
      if (vbox:isVbox()) then\
        totalHeight = totalHeight + vbox.height + vbox.depth;\
      elseif vbox:isVglue() then\
        totalHeight = totalHeight + vbox.height\
      end\
      local left = target - totalHeight.length\
      SU.debug(\"pagebuilder\", \"I have \" .. tostring(left) .. \"pts left\");\
      -- if (left < -20) then SU.error(\"\\nCatastrophic page breaking failure!\"); end \
      local pi = 0\
      if vbox:isPenalty() then\
        pi = vbox.penalty\
      end \
      if vbox:isPenalty() and vbox.penalty < inf_bad  or (vbox:isVglue() and i > 1 and not vboxlist[i-1]:isDiscardable()) then\
        local badness\
        if totalHeight.length < target then -- TeX #1039\
          -- Account for infinite stretch?\
          badness = SILE.pagebuilder.badness(left, totalHeight.stretch)\
        elseif left < totalHeight.shrink then badness = awful_bad\
        else badness = SILE.pagebuilder.badness(-left, totalHeight.shrink)\
        end\
\
        local c\
        if badness < awful_bad then \
          if pi <= eject_penalty then c = pi\
          elseif badness < inf_bad then c = badness + pi -- plus insert\
          else c = deplorable\
          end\
        else c = badness end\
        if c < leastC then\
          leastC = c\
          bestBreak = i\
        end\
        SU.debug(\"pagebuilder\", \"Badness: \"..c);\
        if c == awful_bad or pi <= eject_penalty then\
          SU.debug(\"pagebuilder\", \"outputting\");\
          local onepage = {}\
          if not bestBreak then bestBreak = i-1 end\
          for j=1,bestBreak do\
            onepage[j] = table.remove(vboxlist,1)\
          end\
          return onepage, pi\
        end\
      end\
    end\
    SU.debug(\"pagebuilder\", \"No page break here\")\
    return\
  end,    \
}"
, '@'..".\\core\\pagebuilder.lua" ) )

package.preload[ "lua-libraries\\repl\\plugins\\example" ] = assert( (loadstring or load)(
"-- Example plugin that demonstrates the objects available to a\
-- plugin, as well as the methods that a plugin should make use\
-- of\
\
-- Adding methods and properties to the repl object adds them to\
-- the REPL object loading the plugin.  If such a method or property\
-- already exists, the current plugin will fail to load.\
function repl:newmethod(...)\
end\
\
-- Adding methods to the before object causes them to be called\
-- before the actual method itself.  If the method being added\
-- (in this case displayresults) does not exist on the REPL object\
-- loading this plugin, the current plugin will fail to load.\
function before:displayresults(results)\
end\
\
-- Adding methods to the after object causes them to be called\
-- after the actual method itself.  If the method being added\
-- (in this case displayresults) does not exist on the REPL object\
-- loading this plugin, the current plugin will fail to load.\
function after:displayresults(results)\
end\
\
-- Adding methods to the around object causes them to be called\
-- instead of the original method of the same name.  The new\
-- method receives all of the arguments that the original would,\
-- except it also receives the original method as the first argument.\
-- This way, the new method may invoke the original as it pleases.\
-- If the method being added (in this case displayresults) does not exist on\
-- the REPL object loading this plugin, the current plugin will fail to load.\
function around:evalute(orig, chunk)\
end\
\
-- Adding methods to the override object causes them to be called\
-- instead of the original method of the same name.  If the method being added\
-- (in this case displayresults) does not exist on the REPL object loading this\
-- plugin, the current plugin will fail to load.\
function override:name()\
  return 'Plugin!'\
end\
"
, '@'..".\\lua-libraries\\repl\\plugins\\example.lua" ) )

package.preload[ "lua-libraries\\imagesize\\format\\pcd" ] = assert( (loadstring or load)(
"local MIME_TYPE = \"image/x-kodak-photocd\"\
\
-- Kodak photo-CDs are weird. Don't ask me why, you really don't want details.\
local PCD_MAP = {\
    [\"base/16\"] = { 192,  128  },\
    [\"base/4\"]  = { 384,  256  },\
    [\"base\"]    = { 768,  512  },\
    [\"base4\"]   = { 1536, 1024 },\
    [\"base16\"]  = { 3072, 2048 },\
    [\"base64\"]  = { 6144, 4096 },\
}\
-- Default scale for PCD images\
local DEFAULT_PCD_SCALE = \"base\"\
\
-- Suggested by Matt Mueller <mueller@wetafx.co.nz>, and based on a piece of\
-- sample Perl code by a currently-unknown author. Credit will be placed here\
-- once the name is determined.\
local function size (stream, options)\
    local buf = stream:read(0xF00)\
    if not buf or buf:len() ~= 0xF00 then\
        return nil, nil, \"PCD image file is not big enough\"\
    end\
\
    -- Second-tier sanity check\
    if buf:sub(0x801, 0x803) ~= \"PCD\" then\
        return nil, nil, \"can't find 'PCD' identifier in PCD image file\"\
    end\
\
    local sizespec = PCD_MAP[options.pcd_scale or DEFAULT_PCD_SCALE]\
    if not sizespec then error(\"invalid 'pcd_scale' option\", 3) end\
\
    local orient = (buf:byte(0x0E03) % 1) > 0   -- Clear down to one bit\
    if orient then\
        return sizespec[1], sizespec[2], MIME_TYPE\
    else\
        return sizespec[2], sizespec[1], MIME_TYPE\
    end\
end\
\
return size\
-- vi:ts=4 sw=4 expandtab\
"
, '@'..".\\lua-libraries\\imagesize\\format\\pcd.lua" ) )

package.preload[ "lua-libraries\\imagesize\\format\\psd" ] = assert( (loadstring or load)(
"local Util = require \"imagesize.util\"\
\
local MIME_TYPE = \"image/x-photoshop\"\
\
-- Determine the size of a PhotoShop save-file (*.PSD)\
local function size (stream, options)\
    local buf = stream:read(26)\
    if not buf or buf:len() ~= 26 then\
        return nil, nil, \"PSD image header incomplete\"\
    end\
\
    return Util.get_uint32_be(buf, 19), Util.get_uint32_be(buf, 15), MIME_TYPE\
end\
\
return size\
-- vi:ts=4 sw=4 expandtab\
"
, '@'..".\\lua-libraries\\imagesize\\format\\psd.lua" ) )

package.preload[ "lua-libraries\\std\\strbuf" ] = assert( (loadstring or load)(
"--[[--\
 String buffers.\
 @classmod std.strbuf\
]]\
\
\
local Object = require \"std.object\"\
\
\
--- Add a string to a buffer.\
-- @tparam string s string to add\
-- @treturn std.strbuf modified buffer\
local function concat (self, s)\
  table.insert (self, s)\
  return self\
end\
\
\
--- Convert a buffer to a string.\
-- @treturn string stringified `self`\
local function tostring (self)\
  return table.concat (self)\
end\
\
\
return Object {\
  -- Derived object type.\
  _type = \"StrBuf\",\
\
  ------\
  -- Support concatenation of StrBuf objects.\
  --     buffer = buffer .. str\
  -- @function __concat\
  -- @tparam std.strbuf buffer StrBuf object\
  -- @tparam string str a string or string-like object\
  -- @treturn std.strbuf modified `buffer`\
  -- @see concat\
  __concat   = concat,\
\
\
  ------\
  -- Support fast conversion to Lua string.\
  --     str = tostring (buffer)\
  -- @function __tostring\
  -- @tparam std.strbuf buffer Strbuf object\
  -- @treturn string concatenation of buffer contents\
  -- @see tostring\
  __tostring = tostring,\
\
\
  --- @export\
  __index = {\
    concat   = concat,\
    tostring = tostring,\
  },\
\
  -- backwards compatibility.\
  _functions = {\
    new = function () return StrBuf {} end,\
  },\
}\
"
, '@'..".\\lua-libraries\\std\\strbuf.lua" ) )

package.preload[ "lua-libraries\\repl\\plugins\\pretty_print" ] = assert( (loadstring or load)(
"-- Copyright (c) 2011-2014 Rob Hoelz <rob@hoelz.ro>\
--\
-- Permission is hereby granted, free of charge, to any person obtaining a copy of\
-- this software and associated documentation files (the \"Software\"), to deal in\
-- the Software without restriction, including without limitation the rights to\
-- use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\
-- the Software, and to permit persons to whom the Software is furnished to do so,\
-- subject to the following conditions:\
--\
-- The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\
--\
-- THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\
-- IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\
-- FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\
-- COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\
-- IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\
-- CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\
\
-- Pretty prints expression results (console only)\
\
local format   = string.format\
local tconcat  = table.concat\
local tsort    = table.sort\
local tostring = tostring\
local type     = type\
local floor    = math.floor\
local pairs    = pairs\
local ipairs   = ipairs\
local error    = error\
local stderr   = io.stderr\
\
pcall(require, 'luarocks.require')\
local ok, term = pcall(require, 'term')\
if not ok then\
  term = nil\
end\
\
local keywords = {\
  ['and']      = true,\
  ['break']    = true,\
  ['do']       = true,\
  ['else']     = true,\
  ['elseif']   = true,\
  ['end']      = true,\
  ['false']    = true,\
  ['for']      = true,\
  ['function'] = true,\
  ['if']       = true,\
  ['in']       = true,\
  ['local']    = true,\
  ['nil']      = true,\
  ['not']      = true,\
  ['or']       = true,\
  ['repeat']   = true,\
  ['return']   = true,\
  ['then']     = true,\
  ['true']     = true,\
  ['until']    = true,\
  ['while']    = true,\
}\
\
local function compose(f, g)\
  return function(...)\
    return f(g(...))\
  end\
end\
\
local emptycolormap = setmetatable({}, { __index = function()\
  return function(s)\
    return s\
  end\
end})\
\
local colormap = emptycolormap\
\
if term then\
  colormap = {\
    ['nil']     = term.colors.blue,\
    string      = term.colors.yellow,\
    punctuation = compose(term.colors.green, term.colors.bright),\
    ident       = term.colors.red,\
    boolean     = term.colors.green,\
    number      = term.colors.cyan,\
    path        = term.colors.white,\
    misc        = term.colors.magenta,\
  }\
end\
\
local function isinteger(n)\
  return type(n) == 'number' and floor(n) == n\
end\
\
local function isident(s)\
  return type(s) == 'string' and not keywords[s] and s:match('^[a-zA-Z_][a-zA-Z0-9_]*$')\
end\
\
-- most of these are arbitrary, I *do* want numbers first, though\
local type_order = {\
  number       = 0,\
  string       = 1,\
  userdata     = 2,\
  table        = 3,\
  thread       = 4,\
  boolean      = 5,\
  ['function'] = 6,\
}\
\
local function cross_type_order(a, b)\
  local pos_a = type_order[ type(a) ]\
  local pos_b = type_order[ type(b) ]\
\
  if pos_a == pos_b then\
    return a < b\
  else\
    return pos_a < pos_b\
  end\
end\
\
local function sortedpairs(t)\
  local keys = {}\
\
  local seen_non_string\
\
  for k in pairs(t) do\
    keys[#keys + 1] = k\
\
    if not seen_non_string and type(k) ~= 'string' then\
      seen_non_string = true\
    end\
  end\
\
  local sort_func = seen_non_string and cross_type_order or nil\
  tsort(keys, sort_func)\
\
  local index = 1\
  return function()\
    if keys[index] == nil then\
      return nil\
    else\
      local key   = keys[index]\
      local value = t[key]\
      index       = index + 1\
\
      return key, value\
    end\
  end, keys\
end\
\
local function find_longstring_nest_level(s)\
  local level = 0\
\
  while s:find(']' .. string.rep('=', level) .. ']', 1, true) do\
    level = level + 1\
  end\
\
  return level\
end\
\
local function dump(params)\
  local pieces = params.pieces\
  local seen   = params.seen\
  local path   = params.path\
  local v      = params.value\
  local indent = params.indent\
\
  local t = type(v)\
\
  if t == 'nil' or t == 'boolean' or t == 'number' then\
    pieces[#pieces + 1] = colormap[t](tostring(v))\
  elseif t == 'string' then\
    if v:match '\\n' then\
      local level = find_longstring_nest_level(v)\
      pieces[#pieces + 1] = colormap.string('[' .. string.rep('=', level) .. '[' .. v .. ']' .. string.rep('=', level) .. ']')\
    else\
      pieces[#pieces + 1] = colormap.string(format('%q', v))\
    end\
  elseif t == 'table' then\
    if seen[v] then\
      pieces[#pieces + 1] = colormap.path(seen[v])\
      return\
    end\
\
    seen[v] = path\
\
    local lastintkey = 0\
\
    pieces[#pieces + 1] = colormap.punctuation '{\\n'\
    for i, v in ipairs(v) do\
      for j = 1, indent do\
        pieces[#pieces + 1] = '  '\
      end\
      dump {\
        pieces = pieces,\
        seen   = seen,\
        path   = path .. '[' .. tostring(i) .. ']',\
        value  = v,\
        indent = indent + 1,\
      }\
      pieces[#pieces + 1] = colormap.punctuation ',\\n'\
      lastintkey = i\
    end\
\
    for k, v in sortedpairs(v) do\
      if not (isinteger(k) and k <= lastintkey and k > 0) then\
        for j = 1, indent do\
          pieces[#pieces + 1] = '  '\
        end\
\
        if isident(k) then\
          pieces[#pieces + 1] = colormap.ident(k)\
        else\
          pieces[#pieces + 1] = colormap.punctuation '['\
          dump {\
            pieces = pieces,\
            seen   = seen,\
            path   = path .. '.' .. tostring(k),\
            value  = k,\
            indent = indent + 1,\
          }\
          pieces[#pieces + 1] = colormap.punctuation ']'\
        end\
        pieces[#pieces + 1] = colormap.punctuation ' = '\
        dump {\
          pieces = pieces,\
          seen   = seen,\
          path   = path .. '.' .. tostring(k),\
          value  = v,\
          indent = indent + 1,\
        }\
        pieces[#pieces + 1] = colormap.punctuation ',\\n'\
      end\
    end\
\
    for j = 1, indent - 1 do\
      pieces[#pieces + 1] = '  '\
    end\
\
    pieces[#pieces + 1] = colormap.punctuation '}'\
  else\
    pieces[#pieces + 1] = colormap.misc(tostring(v))\
  end\
end\
\
repl:requirefeature 'console'\
\
function override:displayresults(results)\
  local pieces = {}\
\
  for i = 1, results.n do\
    dump {\
      pieces = pieces,\
      seen   = {},\
      path   = '<topvalue>',\
      value  = results[i],\
      indent = 1,\
    }\
    pieces[#pieces + 1] = '\\n'\
  end\
\
  stderr:write(tconcat(pieces, ''))\
end\
"
, '@'..".\\lua-libraries\\repl\\plugins\\pretty_print.lua" ) )

package.preload[ "classes\\diglot" ] = assert( (loadstring or load)(
"local plain = SILE.require(\"classes/plain\");\
local diglot = std.tree.clone(plain);\
SILE.require(\"packages/counters\");\
SILE.scratch.counters.folio = { value = 1, display = \"arabic\" };\
SILE.scratch.diglot = {}\
diglot:declareFrame(\"a\",    {left = \"8.3%\",            right = \"48%\",            top = \"11.6%\",       bottom = \"80%\"        });\
diglot:declareFrame(\"b\",    {left = \"52%\",             right = \"100% - left(a)\", top = \"top(a)\",      bottom = \"bottom(a)\"    });\
diglot:declareFrame(\"folio\",{left = \"left(a)\",         right = \"right(b)\",       top = \"bottom(a)+3%\",bottom = \"bottom(a)+8%\" });\
diglot.leftTypesetter = SILE.defaultTypesetter {};\
diglot.rightTypesetter = SILE.defaultTypesetter {};\
diglot.rightTypesetter.other = diglot.leftTypesetter\
diglot.leftTypesetter.other = diglot.rightTypesetter\
\
local sync =   function()\
  local lVbox = SILE.pagebuilder.collateVboxes(diglot.leftTypesetter.state.outputQueue)\
  local rVbox = SILE.pagebuilder.collateVboxes(diglot.rightTypesetter.state.outputQueue)\
  if (rVbox.height > lVbox.height) then\
    diglot.leftTypesetter:pushVglue({ height = rVbox.height - lVbox.height })\
  elseif (rVbox.height < lVbox.height) then\
    diglot.rightTypesetter:pushVglue({ height = lVbox.height - rVbox.height })\
  end\
  diglot.rightTypesetter:leaveHmode();\
  diglot.leftTypesetter:leaveHmode();\
  SILE.settings.set(\"typesetter.parseppattern\", \"\\n\\n+\")\
end\
\
diglot.finish = function(self)\
  table.insert(SILE.typesetter.other.state.outputQueue, SILE.nodefactory.vfillGlue)\
  SILE.typesetter.other:chuck()\
  plain.finish(self)\
end\
\
diglot.endPage = function(self)\
  SILE.typesetter.other:leaveHmode(1)\
  plain.endPage(self)\
end\
\
diglot.newPage = function(self)\
  plain.newPage(self)\
  if SILE.typesetter == diglot.leftTypesetter then\
    SILE.typesetter.other:initFrame(SILE.getFrame(\"b\"))\
    return SILE.getFrame(\"a\")\
  else\
    SILE.typesetter.other:initFrame(SILE.getFrame(\"a\"))\
    return SILE.getFrame(\"b\")\
  end\
end\
\
diglot.init = function(self)\
  diglot.leftTypesetter:init(SILE.getFrame(\"a\"))\
  diglot.rightTypesetter:init(SILE.getFrame(\"b\"))\
  return SILE.baseClass.init(self)\
end\
\
SILE.registerCommand(\"leftfont\", function(options, content)\
  SILE.scratch.diglot.leftfont = options\
end, \"Set the font for the left side\")\
\
SILE.registerCommand(\"rightfont\", function(options, content)\
  SILE.scratch.diglot.rightfont = options\
end, \"Set the font for the right side\")\
\
SILE.registerCommand(\"left\", function(options, content)\
  SILE.settings.set(\"typesetter.parseppattern\", -1)\
  SILE.typesetter = diglot.leftTypesetter;\
  SILE.Commands[\"font\"](SILE.scratch.diglot.leftfont, {})\
end, \"Begin entering text on the left side\")\
\
SILE.registerCommand(\"right\", function(options, content)\
  SILE.settings.set(\"typesetter.parseppattern\", -1)  \
  SILE.typesetter = diglot.rightTypesetter;\
  SILE.Commands[\"font\"](SILE.scratch.diglot.rightfont, {})\
end, \"Begin entering text on the right side\")\
\
\
SILE.registerCommand(\"sync\", sync, \"Ensure that left and right sides are balanced\")\
\
return diglot"
, '@'..".\\classes\\diglot.lua" ) )

package.preload[ "lua-libraries\\imagesize\\format\\mng" ] = assert( (loadstring or load)(
"local Util = require \"imagesize.util\"\
\
local MIME_TYPE = \"video/x-mng\"\
\
-- See <URL:http://www.libpng.org/pub/mng/spec/> for the specification.\
-- Basically a copy of the PNG one.\
local function size (stream, options)\
    -- Offset to first Chunk Type code = 8-byte ident + 4-byte chunk length + 1\
    local offset = 12\
    local length = 4\
\
    local ok, err = stream:seek(\"set\", offset)\
    if not ok then return nil, nil, \"error seeking in MNG file: \" .. err end\
\
    local buf = stream:read(length)\
    if not buf or buf:len() ~= length then\
        return nil, nil, \"MNG file not big enough to contain header data\"\
    end\
\
    if buf == \"MHDR\" then\
        -- MHDR = Image Header\
        length = 8\
        buf = stream:read(length)\
        if not buf or buf:len() ~= length then\
            return nil, nil, \"MNG file not big enough to contain header data\"\
        end\
        return Util.get_uint32_be(buf, 1), Util.get_uint32_be(buf, 5), MIME_TYPE\
    else\
        return nil, nil, \"can't find header data in MNG file\"\
    end\
end\
\
return size\
-- vi:ts=4 sw=4 expandtab\
"
, '@'..".\\lua-libraries\\imagesize\\format\\mng.lua" ) )

package.preload[ "core\\measurements" ] = assert( (loadstring or load)(
"SILE.toPoints = function(num, unit, dimension)\
  local toPoints = {\
    \
    mm = function(m) return 2.8346457 * m end,\
    pt = function (i) return i end,\
    cm = function (c) return 2.8346457 * 10 * c end,\
  }\
  toPoints[\"in\"] = function(i) return 72.0 * i end\
  toPoints[\"%\"] = function(v, dimension) \
    return tonumber(v) / 100 * SILE.documentState.paperSize[ dimension == 'w' and 1 or 2]\
  end\
  toPoints[\"ex\"] =  function(v) return tonumber(v) * SILE.shaper.measureDim(\"x\") end\
  toPoints[\"em\"] =  function(v) return tonumber(v) * SILE.shaper.measureDim(\"m\") end\
  toPoints[\"en\"] =  function(v) return tonumber(v) * SILE.shaper.measureDim(\"n\") end\
  if (not unit) then\
    if (type(num) == \"string\") then -- split into num and unit parts\
      num,unit = string.match(num, \"(-?[%d%.]+)%s*([%%%a]+)\")\
      num = tonumber(num)\
    else return tonumber(num) end\
  end\
  if (not toPoints[unit]) then SU.error( \"Unknown unit \"..unit ) end\
  num =  tonumber(string.match(num, \"(-?[%d%.]+)\"))\
  return toPoints[unit](num, dimension);\
end"
, '@'..".\\core\\measurements.lua" ) )

package.preload[ "lua-libraries\\imagesize\\format\\swf" ] = assert( (loadstring or load)(
"local MIME_TYPE = \"application/x-shockwave-flash\"\
\
local function _bytes_to_bits (s)\
    local bits = \"\"\
    for i = 1, s:len() do\
        local c = s:byte(i)\
        bits = bits .. (c >= 0x80          and \"1\" or \"0\")\
                    .. ((c % 0x80) >= 0x40 and \"1\" or \"0\")\
                    .. ((c % 0x40) >= 0x20 and \"1\" or \"0\")\
                    .. ((c % 0x20) >= 0x10 and \"1\" or \"0\")\
                    .. ((c % 0x10) >= 0x08 and \"1\" or \"0\")\
                    .. ((c % 0x08) >= 0x04 and \"1\" or \"0\")\
                    .. ((c % 0x04) >= 0x02 and \"1\" or \"0\")\
                    .. ((c % 0x02) >= 0x01 and \"1\" or \"0\")\
    end\
    return bits\
end\
\
local function _bin2int (s)\
    local n = 0\
    for i = 1, s:len() do\
        n = n * 2\
        if s:sub(i, i) == \"1\" then n = n + 1 end\
    end\
    return n\
end\
\
-- Determine size of ShockWave/Flash files. Adapted from code sent by\
-- Dmitry Dorofeev <dima@yasp.com>\
local function size (stream, options)\
    local buf = stream:read(33)\
    if not buf or buf:len() ~= 33 then\
        return nil, nil, \"SWF file header incomplete\"\
    end\
\
    local bs\
    if buf:sub(1, 1) == \"C\" then\
        -- Decompress enough of the file to get the FrameSize RECT.\
        -- TODO - decompress into bs, update docs about module required\
        return nil, nil, \"compressed SWF files are currently not supported\"\
    else\
        bs = _bytes_to_bits(buf:sub(9, 25))\
    end\
\
    local bits = _bin2int(bs:sub(1, 5))\
    local x = _bin2int(bs:sub(6 + bits, 5 + bits * 2))\
    local y = _bin2int(bs:sub(6 + bits * 3, 5 + bits * 4))\
\
    return math.floor((x + 19) / 20), math.floor((y + 19) / 20), MIME_TYPE\
end\
\
return size\
-- vi:ts=4 sw=4 expandtab\
"
, '@'..".\\lua-libraries\\imagesize\\format\\swf.lua" ) )

package.preload[ "core\\length" ] = assert( (loadstring or load)(
"local _length\
_length = std.object {\
  length = 0,\
  stretch = 0,\
  shrink = 0,\
  _type = \"Length\",\
\
  fromLengthOrNumber = function (self, x)\
    if type(x) == \"table\" then\
      self.length = x.length\
      self.stretch = x.stretch\
      self.shrink = x.shrink\
    else\
      self.length = x\
    end\
    return self\
  end,\
\
  __tostring = function (x)\
    local s = tostring(x.length)..\"pt\"\
    if x.stretch ~= 0 then s = s .. \" plus \"..x.stretch..\"pt\" end\
    if x.shrink ~= 0 then s = s .. \" minus \"..x.shrink..\"pt\" end\
    return s\
  end,\
\
  __add = function (self, other)\
    local result = _length {}\
    result:fromLengthOrNumber(self)\
    if type(other) == \"table\" then\
      result.length = result.length + other.length\
      result.stretch = result.stretch + other.stretch\
      result.shrink = result.shrink + other.shrink\
    else\
      result.length = result.length + other\
    end\
    return result\
  end,\
\
  __sub = function (self, other)\
    local result = _length {}\
    result:fromLengthOrNumber(self)\
    if type(other) == \"table\" then\
      result.length = result.length - other.length\
      result.stretch = result.stretch - other.stretch\
      result.shrink = result.shrink - other.shrink\
    else\
      result.length = result.length - other\
    end\
    return result\
  end,\
\
  -- __mul = function(self, other)\
  --   local result = _length {}\
  --   result:fromLengthOrNumber(self)\
  --   if type(other) == \"table\" then\
  --     SU.error(\"Attempt to multiply two lengths together\")\
  --   else\
  --     result.length = result.length * other\
  --     result.stretch = result.stretch * other\
  --     result.shrink = result.shrink * other\
  --   end\
  --   return result\
  -- end,\
    \
  __lt = function (self, other)\
    return (self-other).length < 0\
  end,\
}\
\
local length = {\
  new = function (spec)\
    return _length(spec or {})\
  end,\
\
  parse = function (spec)\
    if not spec then return _length {} end\
    local t = lpeg.match(SILE.parserBits.length, spec)\
    if not t then SU.error(\"Bad length definition '\"..spec..\"'\") end\
    if not t.shrink then t.shrink = 0 end\
    if not t.stretch then t.stretch = 0 end\
    return _length(t)\
  end,\
\
  zero = _length {}\
}\
\
return length\
"
, '@'..".\\core\\length.lua" ) )

package.preload[ "classes\\book" ] = assert( (loadstring or load)(
"local plain = SILE.require(\"classes/plain\");\
local book = plain { id = \"book\" };\
book:loadPackage(\"masters\")\
book:defineMaster({ id = \"right\", firstContentFrame = \"content\", frames = {\
  content = {left = \"8.3%\", right = \"86%\", top = \"11.6%\", bottom = \"top(footnotes)\" },\
  folio = {left = \"left(content)\", right = \"right(content)\", top = \"bottom(footnotes)+3%\",bottom = \"bottom(footnotes)+5%\" },\
  runningHead = {left = \"left(content)\", right = \"right(content)\", top = \"top(content) - 8%\", bottom = \"top(content)-3%\" },\
  footnotes = { left=\"left(content)\", right = \"right(content)\", height = \"0\", bottom=\"83.3%\"}\
}})\
book:loadPackage(\"twoside\", { oddPageMaster = \"right\", evenPageMaster = \"left\" });\
book:mirrorMaster(\"right\", \"left\")\
\
book:loadPackage(\"tableofcontents\")\
\
if not(SILE.scratch.headers) then SILE.scratch.headers = {}; end\
\
book.pageTemplate = SILE.scratch.masters[\"right\"]\
book.init = function(self)\
  book:loadPackage(\"footnotes\", { insertInto = \"footnotes\", stealFrom = {\"content\"} } )\
  return plain.init(self)\
end\
\
book.newPage = function(self)\
  book:switchPage()\
  return plain.newPage(self)\
end\
\
book.finish = function ()\
  book:writeToc()\
  return plain:finish()\
end\
\
book.endPage = function(self)\
  book:outputInsertions()\
  book:moveTocNodes()\
  book:newPageInfo()\
\
  if (book:oddPage() and SILE.scratch.headers.right) then\
    SILE.typesetNaturally(SILE.getFrame(\"runningHead\"), function()\
      SILE.settings.set(\"current.parindent\", SILE.nodefactory.zeroGlue)\
      -- SILE.settings.set(\"typesetter.parfillskip\", SILE.nodefactory.zeroGlue)\
      SILE.process(SILE.scratch.headers.right)\
      SILE.call(\"par\")\
    end)\
  elseif (not(book:oddPage()) and SILE.scratch.headers.left) then\
      SILE.typesetNaturally(SILE.getFrame(\"runningHead\"), function()\
        SILE.settings.set(\"current.parindent\", SILE.nodefactory.zeroGlue)\
        -- SILE.settings.set(\"typesetter.parfillskip\", SILE.nodefactory.zeroGlue)\
        SILE.process(SILE.scratch.headers.left)\
        SILE.call(\"par\")\
      end)\
  end\
\
  return plain.endPage(book);\
end;\
\
SILE.registerCommand(\"left-running-head\", function(options, content)\
  local closure = SILE.settings.wrap()\
  SILE.scratch.headers.left = function () closure(content) end\
end, \"Text to appear on the top of the left page\");\
\
SILE.registerCommand(\"right-running-head\", function(options, content)\
  local closure = SILE.settings.wrap()\
  SILE.scratch.headers.right = function () closure(content) end\
end, \"Text to appear on the top of the right page\");\
\
SILE.registerCommand(\"chapter\", function (options, content)\
  SILE.call(\"open-double-page\")\
  SILE.call(\"noindent\")\
  SILE.scratch.headers.right = nil\
  SILE.Commands[\"set-counter\"]({id = \"section\", value = 0});\
  SILE.Commands[\"set-counter\"]({id = \"footnote\", value = 1});\
  if options.numbering == nil or options.numbering == \"yes\" then\
    SILE.Commands[\"increment-counter\"]({id = \"chapter\"})\
    SILE.Commands[\"book:chapterfont\"]({}, {\"Chapter \"..SILE.formatCounter(SILE.scratch.counters.chapter)});\
    SILE.typesetter:leaveHmode()\
  end\
  SILE.Commands[\"book:chapterfont\"]({}, content);\
  SILE.Commands[\"left-running-head\"]({}, content)\
  SILE.call(\"tocentry\", {level = 1}, content)\
  SILE.call(\"bigskip\")\
  SILE.call(\"nofoliosthispage\")\
end, \"Begin a new chapter\");\
\
SILE.registerCommand(\"section\", function (options, content)\
  SILE.typesetter:leaveHmode()\
  SILE.call(\"goodbreak\")  \
  SILE.call(\"noindent\")\
  SILE.call(\"set-counter\", {id=\"subsection\", value=0 })\
  SILE.call(\"increment-counter\", {id=\"section\" })\
  SILE.call(\"bigskip\")\
  SILE.Commands[\"book:sectionfont\"]({}, function()\
    SILE.call(\"show-counter\", {id =\"chapter\"})\
    SILE.typesetter:typeset(\".\")\
    SILE.call(\"show-counter\", {id=\"section\"})\
    SILE.typesetter:typeset(\" \")\
    SILE.process(content)\
  end)\
  SILE.call(\"tocentry\", {level = 2}, content)\
  if not SILE.scratch.counters.folio.off then\
    SILE.Commands[\"right-running-head\"]({}, function()\
      SILE.call(\"rightalign\", {}, function ()\
        SILE.settings.temporarily(function()\
          SILE.settings.set(\"font.style\", \"italic\")\
          SILE.call(\"show-counter\", {id =\"chapter\"})\
          SILE.typesetter:typeset(\".\")\
          SILE.call(\"show-counter\", {id=\"section\"})\
          SILE.typesetter:typeset(\" \")\
          SILE.process(content)\
        end)\
      end)\
    end);\
  end\
  SILE.call(\"novbreak\")\
  SILE.call(\"bigskip\")\
  SILE.call(\"novbreak\")\
end, \"Begin a new section\")\
\
SILE.registerCommand(\"subsection\", function (options, content)\
  SILE.typesetter:leaveHmode()\
  SILE.call(\"goodbreak\")\
  SILE.call(\"noindent\")\
  SILE.call(\"increment-counter\", {id=\"subsection\" })\
  SILE.call(\"medskip\")\
  SILE.Commands[\"book:subsectionfont\"]({}, function()\
    SILE.call(\"show-counter\", {id =\"chapter\"})\
    SILE.typesetter:typeset(\".\")\
    SILE.call(\"show-counter\", {id=\"section\"})\
    SILE.typesetter:typeset(\".\")\
    SILE.call(\"show-counter\", {id=\"subsection\"})\
    SILE.typesetter:typeset(\" \")\
    SILE.process(content)\
  end)\
  SILE.typesetter:leaveHmode()\
  SILE.call(\"novbreak\")\
  SILE.call(\"medskip\")\
  SILE.call(\"novbreak\")\
end, \"Begin a new subsection\")\
\
SILE.registerCommand(\"book:chapterfont\", function (options, content)\
  SILE.settings.temporarily(function()\
    SILE.Commands[\"font\"]({weight=800, size=\"22pt\"}, content)\
  end)\
end)\
SILE.registerCommand(\"book:sectionfont\", function (options, content)\
  SILE.settings.temporarily(function()\
    SILE.Commands[\"font\"]({weight=800, size=\"15pt\"}, content)\
  end)\
end)\
\
SILE.registerCommand(\"book:subsectionfont\", function (options, content)\
  SILE.settings.temporarily(function()\
    SILE.Commands[\"font\"]({weight=800, size=\"12pt\"}, content)\
  end)\
end)\
SILE.registerCommand(\"open-double-page\", function() \
  SILE.typesetter:leaveHmode();\
  SILE.Commands[\"supereject\"]();\
  if book:oddPage() then\
    SILE.typesetter:typeset(\"\")\
    SILE.typesetter:leaveHmode();\
    SILE.Commands[\"supereject\"]();\
  end\
\
end)\
return book"
, '@'..".\\classes\\book.lua" ) )

package.preload[ "core\\nodefactory" ] = assert( (loadstring or load)(
"-- Just boxes\
\
_box = std.object {\
  _type = \"Box\",\
  height= 0,\
  depth= 0,\
  width= 0,\
  type=\"special\", \
  value=nil,\
  __tostring = function (s) return s.type end,\
  __concat = function (x,y) return tostring(x)..tostring(y) end,\
  init = function(self) return self end\
}\
\
function _box:outputYourself () SU.error(self.type..\" with no output routine\") end\
function _box:toText ()  return self.type end\
function _box:isBox ()   return self.type==\"hbox\" or self.type == \"nnode\" or self.type==\"vbox\" end\
function _box:isNnode () return self.type==\"nnode\" end\
function _box:isGlue ()  return self.type == \"glue\" end\
function _box:isVglue ()  return self.type == \"vglue\" end\
function _box:isVbox ()  return self.type == \"vbox\" end\
function _box:isDiscardable () return self:isGlue() or self:isPenalty() end\
function _box:isPenalty ()  return self.type == \"penalty\" end\
function _box:isDiscretionary ()  return self.type == \"discretionary\" end\
\
function _box:isKern ()  return self.type == \"kern\" end -- Which it never is\
\
-- Hboxes\
\
local _hbox = _box { \
  type = \"hbox\",\
  __tostring = function (this) return \"H<\" .. tostring(this.width) .. \">^\" .. tostring(this.height) .. \"-\" .. tostring(this.depth) .. \"v\"; end,\
  outputYourself = function(self,typesetter, line)\
  if not self.value.glyphString then return end\
    local scaledWidth = self.width.length\
    if line.ratio < 0 and self.width.shrink > 0 then\
      scaledWidth = scaledWidth + self.width.shrink * line.ratio\
    elseif line.ratio > 0 and self.width.stretch > 0 then\
      scaledWidth = scaledWidth + self.width.stretch * line.ratio\
    end\
    typesetter.frame:normalize()\
    -- Yuck!\
    if typesetter.frame.direction == \"RTL\" then\
      typesetter.frame:moveX(scaledWidth)\
    end\
    SILE.outputter.moveTo(typesetter.frame.state.cursorX, typesetter.frame.state.cursorY)\
\
    -- SILE.outputter.debugHbox(typesetter, self, scaledWidth)\
    if self.value.glyphNames then\
      -- print(self.value.glyphNames[1])\
    end\
    SILE.outputter.setFont(self.value.options)\
    -- SILE.outputter.showGlyphs(self.value.glyphNames)\
    SILE.outputter.outputHbox(self.value, self.width.length)\
    if typesetter.frame.direction ~= \"RTL\" then\
      typesetter.frame:moveX(scaledWidth)\
    end\
  end\
}\
\
-- Native nodes (clever hboxes)\
\
local _nnode = _hbox {\
  type = \"nnode\",\
  text = \"\",\
  language = \"\",\
  pal = nil,\
  nodes = {},\
  __tostring = function (this) \
  return \"N<\" .. tostring(this.width) .. \">^\" .. this.height .. \"-\" .. this.depth .. \"v(\" .. this:toText() .. \")\";\
end,\
  init = function(self)\
    if 0 == self.depth then self.depth = math.max(0,unpack(SU.map(function (n) return n.depth end, self.nodes))) end\
    if 0 == self.height then self.height = math.max(0,unpack(SU.map(function (n) return n.height end, self.nodes))) end\
    if 0 == self.width then self.width = SU.sum(SU.map(function (n) return n.width end, self.nodes)) end\
    return self\
    end,\
  outputYourself = function(self, typesetter, line)\
    if self.parent and not self.parent.hyphenated then \
      if not self.parent.used then\
        self.parent:outputYourself(typesetter,line)\
      end\
      self.parent.used = true\
      return\
    end\
    for i, n in ipairs(self.nodes) do n:outputYourself(typesetter, line) end\
  end,\
  toText = function (self) return self.text end\
}\
\
-- Discretionaries\
\
local _disc = _hbox {\
  type = \"discretionary\",\
  prebreak = {},\
  postbreak = {},\
  replacement = {},\
  used = 0,\
  pbw = nil,\
  __tostring = function (this) \
      return \"D(\" .. SU.concat(this.prebreak,\"\") .. \"|\" .. SU.concat(this.postbreak, \"\") .. \")\";\
  end,\
  toText = function (self) return self.used==1 and \"-\" or \"_\" end,\
  outputYourself = function(self,typesetter, line)\
    if self.used == 1 then\
      -- XXX\
      for i, n in ipairs(self.prebreak) do n:outputYourself(typesetter,line) end\
    end\
  end,\
  prebreakWidth = function(self)\
    -- if self.pbw then return self.pbw end\
    local l = 0\
    for _,n in pairs(self.prebreak) do l = l + n.width end\
    -- self.pbw = l\
    return l\
  end\
}\
\
-- Glue\
local _glue = _box {\
  _type = \"Glue\",\
  type = \"glue\",\
  __tostring = function (this) return \"G<\" .. tostring(this.width) .. \">\"; end,\
  toText = function () return \" \" end,\
  outputYourself = function (self,typesetter, line)\
    local scaledWidth = self.width.length\
    if line.ratio and line.ratio < 0 and self.width.shrink > 0 then\
      scaledWidth = scaledWidth + self.width.shrink * line.ratio\
    elseif line.ratio and line.ratio > 0 and self.width.stretch > 0 then\
      scaledWidth = scaledWidth + self.width.stretch * line.ratio\
    end\
    typesetter.frame:moveX(scaledWidth)\
  end\
}\
\
\
-- VGlue\
local _vglue = _box {\
  type = \"vglue\",\
  _type = \"VGlue\",\
  __tostring = function (this) \
      return \"VG<\" .. tostring(this.height) .. \">\";\
  end,\
  setGlue = function (self,adjustment)  \
    -- XXX\
    self.height.length = self.height.length + adjustment\
    self.height.stretch = 0\
    -- self.shrink = 0\
  end,\
  outputYourself = function (self,typesetter, line)\
    typesetter.frame:moveY(line.depth + line.height)\
  end\
}\
\
-- Penalties\
local _penalty = _box {\
  type = \"penalty\",\
  width = SILE.length.new({}),\
  flagged = 0,\
  penalty = 0,\
  __tostring = function (this) \
      return \"P(\" .. this.flagged .. \"|\" .. this.penalty .. \")\";\
  end,\
  outputYourself = function() end,\
  toText = function() return \"(!)\" end\
}\
\
-- Vbox\
local _vbox = _box {\
  type = \"vbox\",\
  nodes = {},\
  __tostring = function (this) \
      return \"VB<\" .. tostring(this.height) .. \"|\" .. this:toText() .. \"v\"..tostring(this.depth)..\")\";\
  end,\
  init = function (self)\
    self.depth = 0\
    self.height = 0\
    for i=1,#(self.nodes) do local n = self.nodes[i]\
      local h = type(n.height) == \"table\" and n.height.length or n.height\
      local d = type(n.depth) == \"table\" and n.depth.length or n.depth\
      self.depth = (d > self.depth) and d or self.depth\
      self.height = (h > self.height) and h or self.height\
    end\
    self.depth = SILE.length.new({length = self.depth })\
    self.height = SILE.length.new({length = self.height })\
    return self\
  end,\
  toText = function (self) \
    return \"VB[\" .. SU.concat(SU.map(function (n) return n:toText()..\"\" end, self.nodes), \"\") .. \"]\" \
  end,\
  outputYourself = function(self, typesetter, line)\
    typesetter.frame:moveY(self.height)  \
    local initial = true\
    for i,node in pairs(self.nodes) do\
      if initial and (node:isGlue() or node:isPenalty()) then\
        -- do nothing\
      else\
        initial = false\
        node:outputYourself(typesetter, self)\
      end\
    end\
    typesetter.frame:moveY(self.depth)\
    typesetter.frame:newLine()\
  end  \
}\
\
SILE.nodefactory = {}\
\
function SILE.nodefactory.newHbox(spec)   return _hbox(spec) end\
function SILE.nodefactory.newNnode(spec)  return _nnode(spec):init() end\
function SILE.nodefactory.newDisc(spec)   return _disc(spec) end\
function SILE.nodefactory.newGlue(spec)\
  if type(spec) == \"table\" then return _glue(spec) end\
  if type(spec) == \"string\" then return _glue({width = SILE.length.parse(spec)}) end\
  SU.error(\"Unparsable glue spec \"..spec)\
end\
function SILE.nodefactory.newVglue(spec)\
  if type(spec) == \"table\" then return _vglue(spec) end\
  if type(spec) == \"string\" then return _vglue({height = SILE.length.parse(spec)}) end\
  SU.error(\"Unparsable glue spec \"..spec)\
end\
function SILE.nodefactory.newPenalty(spec)  return _penalty(spec) end\
function SILE.nodefactory.newDiscretionary(spec)  return _disc(spec) end\
function SILE.nodefactory.newVbox(spec)  return _vbox(spec):init() end\
\
-- This infinity needs to be smaller than an actual infinity but bigger than the infinite stretch\
-- added by the typesetter.\
local inf = 100000 \
SILE.nodefactory.zeroGlue = SILE.nodefactory.newGlue({width = SILE.length.new({length = 0})})\
SILE.nodefactory.hfillGlue = SILE.nodefactory.newGlue({width = SILE.length.new({length = 0, stretch = inf})})\
SILE.nodefactory.vfillGlue = SILE.nodefactory.newVglue({height = SILE.length.new({length = 0, stretch = inf})})\
SILE.nodefactory.hssGlue = SILE.nodefactory.newGlue({width = SILE.length.new({length = 0, stretch = inf, shrink = inf})})\
SILE.nodefactory.vssGlue = SILE.nodefactory.newVglue({height = SILE.length.new({length = 0, stretch = inf, shrink = inf})})\
SILE.nodefactory.zeroHbox = SILE.nodefactory.newHbox({ width = SILE.length.new({length = 0, stretch = 0, shrink = 0}), value = {glyph = 0} });\
SILE.nodefactory.zeroVglue = SILE.nodefactory.newVglue({height = SILE.length.new({length = 0, stretch = 0, shrink = 0}) })\
return SILE.nodefactory"
, '@'..".\\core\\nodefactory.lua" ) )

package.preload[ "lua-libraries\\std\\table" ] = assert( (loadstring or load)(
"--[[--\
 Extensions to the table module.\
 @module std.table\
]]\
\
local base = require \"std.base\"\
local func = require \"std.functional\"\
\
\
--- Make a shallow copy of a table, including any metatable.\
--\
-- To make deep copies, use @{std.tree.clone}.\
-- @function clone\
-- @tparam table   t      source table\
-- @tparam boolean nometa if non-nil don't copy metatable\
-- @return copy of *table*\
local clone = base.clone\
\
\
--- Clone a table, renaming some keys.\
-- @function clone_rename\
-- @tparam table t   source table\
-- @tparam table map table `{old_key=new_key, ...}`\
-- @return copy of *table*\
local clone_rename = base.clone_rename\
\
\
--- Destructively merge another table's fields into *table*.\
-- @function merge\
-- @tparam table t destination table\
-- @tparam table u table with fields to merge\
-- @return table   `t` with fields from `u` merged in\
local merge = base.merge\
\
\
-- Preserve core table sort function.\
local _sort = table.sort\
\
--- Make table.sort return its result.\
-- @tparam table    t unsorted table\
-- @tparam function c comparator function\
-- @return `t` with keys sorted accordind to `c`\
local function sort (t, c)\
  _sort (t, c)\
  return t\
end\
\
\
--- Return whether table is empty.\
-- @tparam table t any table\
-- @return `true` if `t` is empty, otherwise `false`\
local function empty (t)\
  return not next (t)\
end\
\
\
--- Turn a tuple into a list.\
-- @param ... tuple\
-- @return list\
local function pack (...)\
  return {...}\
end\
\
\
--- Find the number of elements in a table.\
-- @tparam table t any table\
-- @return number of non-nil values in `t`\
local function size (t)\
  local n = 0\
  for _ in pairs (t) do\
    n = n + 1\
  end\
  return n\
end\
\
\
--- Make the list of keys in table.\
-- @tparam  table t any table\
-- @treturn table   list of keys\
local function keys (t)\
  local l = {}\
  for k, _ in pairs (t) do\
    table.insert (l, k)\
  end\
  return l\
end\
\
\
--- Make the list of values of a table.\
-- @tparam  table t any table\
-- @treturn table   list of values\
local function values (t)\
  local l = {}\
  for _, v in pairs (t) do\
    table.insert (l, v)\
  end\
  return l\
end\
\
\
--- Invert a table.\
-- @tparam  table t a table with `{k=v, ...}`\
-- @treturn table   inverted table `{v=k, ...}`\
local function invert (t)\
  local i = {}\
  for k, v in pairs (t) do\
    i[v] = k\
  end\
  return i\
end\
\
\
--- An iterator like ipairs, but in reverse.\
-- @tparam  table    t any table\
-- @treturn function   iterator function\
-- @treturn table      the table, `t`\
-- @treturn  number    `#t + 1`\
local function ripairs (t)\
  return function (t, n)\
           n = n - 1\
           if n > 0 then\
             return n, t[n]\
           end\
         end,\
  t, #t + 1\
end\
\
\
--- Turn an object into a table according to __totable metamethod.\
-- @tparam  std.object x object to turn into a table\
-- @treturn table resulting table or `nil`\
local function totable (x)\
  local m = func.metamethod (x, \"__totable\")\
  if m then\
    return m (x)\
  elseif type (x) == \"table\" then\
    return x\
  elseif type (x) == \"string\" then\
    local t = {}\
    x:gsub (\".\", function (c) t[#t + 1] = c end)\
    return t\
  else\
    return nil\
  end\
end\
\
\
--- Make a table with a default value for unset keys.\
-- @param         x default entry value (default: `nil`)\
-- @tparam  table t initial table (default: `{}`)\
-- @treturn table   table whose unset elements are x\
local function new (x, t)\
  return setmetatable (t or {},\
                       {__index = function (t, i)\
                                    return x\
                                  end})\
end\
\
\
--- @export\
local Table = {\
  clone        = clone,\
  clone_rename = clone_rename,\
  empty        = empty,\
  invert       = invert,\
  keys         = keys,\
  merge        = merge,\
  new          = new,\
  pack         = pack,\
  ripairs      = ripairs,\
  size         = size,\
  sort         = sort,\
  totable      = totable,\
  values       = values,\
\
  -- Core Lua table.sort function\
  _sort        = _sort,\
}\
\
for k, v in pairs (table) do\
  Table[k] = Table[k] or v\
end\
\
return Table\
"
, '@'..".\\lua-libraries\\std\\table.lua" ) )

package.preload[ "core\\languages" ] = assert( (loadstring or load)(
"SILE.languageSupport = {\
  languages = {},\
  loadLanguage = function(language)\
    if SILE.languageSupport.languages[language] then return end\
    if SILE.hyphenator.languages[language] then return end\
    if not(language) or language == \"\" then language = \"en\" end\
    ok, fail = pcall(function () SILE.require(\"languages/\"..language..\"-compiled\") end)\
    if ok then return end\
    if not pcall(function () SILE.require(\"languages/\"..language) end) then\
      return\
    end\
  end\
}\
\
-- The following languages neither have hyphenation nor specific\
-- language support at present. This code is here to suppress warnings.\
SILE.hyphenator.languages.ar = {patterns={}}\
"
, '@'..".\\core\\languages.lua" ) )

end

assert( (loadstring or load)(
"local baseLuaPath = (os.getenv(\"SILE_PATH\") and os.getenv(\"SILE_PATH\")..\"/?.lua\" or \"\")\
package.path = ';?.lua;lua-libraries/?.lua;lua-libraries/?/init.lua;' .. package.path \
\
package.cpath = package.cpath .. \";core/?.dll;\"\
\
SILE = require(\"core/sile\")\
\
io.stdout:setvbuf 'no'\
\
if not os.getenv 'LUA_REPL_RLWRAP' then\
  print('This is SILE '..SILE.version)\
end\
\
SILE.parseArguments()\
SILE.init()\
\
if unparsed and unparsed[1] then\
  SILE.masterFileName = unparsed[1]\
  if SILE.preamble then\
    print(\"Loading \"..SILE.preamble)\
    local i = SILE.resolveFile(\"classes/\"..SILE.preamble)\
    if i then\
      SILE.readFile(i)\
    else\
      require(\"classes/\"..SILE.preamble)\
    end\
  end\
  SILE.readFile(unparsed[1])\
  io.write(\"\\n\")\
else\
  SILE.repl()\
end\
"
, '@'.."run_sile.lua" ) )( ... )

