\begin[class=book,papersize=a4]{document}%
\script[src=packages/frametricks]
\script[src=packages/lorem]
\script[src=packages/bidi]
\script[src=packages/image]
\set[parameter=linebreak.tolerance,value=10000]
\define[command=tableofcontents:headerfont]{\font[size=24pt,family=Baskerville,style=italic]{\process}}%
% Of course this is a bit complicated. We're showing off doing complicated things.
\begin[first-content-frame=title]{pagetemplate}
  \frame[id=gutter,width=3%]
  \frame[id=title, top=top(content), bottom=top(title)+5%, left=left(content), right=0.95 * width(page),next=leftCol]
  \frame[id=leftCol,left=left(content),right=left(gutter),top=bottom(title)+2%,bottom=top(bottomBox)-2%,next=rightCol]
  \frame[id=rightCol,left=right(gutter),top=top(leftCol),bottom=top(bottomBox)-2%,width=width(leftCol)]
  \frame[id=sidebar,width=200pt,left=right(rightCol)+3%,right=right(title),top=top(leftCol),bottom=bottom(content)]
  \frame[id=bottomBox,bottom=bottom(content),left=left(content),right=right(rightCol),height=90pt]
\end{pagetemplate}

% Main title
\center{\font[family=Baskerville,size=35pt]{\em{The SILE Show-off Document}}}\par
\framebreak%
\typeset-into[frame=sidebar]{\tableofcontents}%

% First frame
\skip[height=-1ex]\noindent{}\float[bottomboundary=5pt]{\font[size=60pt]{S}}ILE is a typesetting system. Its job is to produce beautiful printed documents. It’s similar to TeX, but with some ideas borrowed from InDesign, and written with modern technologies in mind.

Let’s demonstrate some of the things which are interesting about SILE.
\tocentry{Frames}% Normally called automatically but we are not using sectioning commands.
On this page, we are demonstrating SILE’s frame capabilities.

SILE’s frame system allows you to declare areas of the page where your text should be set.
The frames are specified declaratively; this means that you say that, for instance, the first two columns on this
page must have the same width, and sit either side of a gutter of a particular size.

For this page we have also declared a sidebar frame of a particular width (200pt), and a box at the bottom of the page.
The two columns will be flowed frames. In other words, once this left column is full, text will begin again on the right column. However, the sidebar frame and the bottom frame are not flowed frames; text will not spill over into them,
but we will enter text into those separately.

I’m not really expecting you to use this kind of magazine-style layout in your documents, but this is a demonstration
of what you can do with the ability to define frames. Here is some more text for the sake of padding out the
columns.

\lorem[words=100]

Now I will typeset some text on the other frames of this page.

\typeset-into[frame=bottomBox]{%
\font[family=Gill Sans]\font[size=15pt,weight=600]{The Bottom Frame}

\bigskip%
\noindent{}Here we are in the bottom frame. This frame stretches across the full width of the first two columns
on the page, but it doesn’t stretch as far as the third column. I’ve defined this frame to be precisely 90pt high,
and so the two columns have adjusted their height to fit in with this one.

\font[style=italic]{Some more text to pad out this frame.}
}

\eject%
\left-running-head{Multilingual capabilities}% Again, normally called automatically.
\noindent\font[family=Baskerville,size=25pt]{\em{Multilingual capabilities}}
\tocentry{Multilingual capabilities}
\set[parameter=linebreak.tolerance,value=500]

\noindent{}SILE uses the \em{Harfbuzz} shaping engine, which provides excellent support for handling text containing
different languages. It’s very easy to use multiple languages, multiple text directions, and multiple text
tokenizations. There’s a simple system for extending SILE in language-specific ways, to support the rules
and conventions of typesetting in particular languages. For instance, here’s some Japanese.

\medskip

\noindent\font[family=Hiragino Mincho Pro,language=ja]{日本語の植字（「文字の組み合わせ」ということ）では、いくつがのルールがあります。その中の一つは、禁則処理というルールです。
}

\medskip

Please notice the following features in the above: first, where two full-width Japanese punctuation characters appear
next to each other, as in \font[family=Hiragino Mincho Pro,language=ja]{字（{}「文}, these are kerned together so
that each occupies a half-space. Second, although SILE would really like to break the line
after \font[family=Hiragino Mincho Pro,language=ja]{一つは}, this would leave the full width comma
\font[family=Hiragino Mincho Pro,language=ja]{、} at the start of a line, which is forbidden under Japanese
typesetting principles. SILE understands these principles and refuses to allow a line to begin with 
certain punctuation characters.

But even so, Japanese typesetting is pretty easy because it’s still fundamentally left-to-right typesetting.
Multilingual typesetting only gets difficult when you have to mix left-to-right and right-to-left typesetting,
such as when you have English and \font[family=Scheherazade,size=12pt,direction=RTL,language=ar,script=Arab]{الخط العربي
}
in the same document.

In fact, even that’s pretty easy, until you want to typeset primarily Arabic or other right-to-left languages,
and insert some left-to-right text in them. But don’t worry. SILE can do that too.

\breakframevertical
\thisframeRTL%
\font[family=Scheherazade,size=12pt,direction=RTL,language=ar,script=Arab]{%
\noindent عندما يريد العالم أن ‪يتكلّم ‬ ، فهو يتحدّث بلغة يونيكود. تسجّل الآن لحضور المؤتمر الدولي العاشر ليونيكود (\font[direction=LTR]{Unicode Conference})، الذي سيعقد في \font[direction=LTR]{10-12} آذار \font[direction=LTR]{1997} بمدينة مَايِنْتْس، ألمانيا. و سيجمع المؤتمر بين خبراء من كافة قطاعات الصناعة على الشبكة العالمية انترنيت ويونيكود، حيث ستتم، على الصعيدين الدولي والمحلي على حد سواء مناقشة سبل استخدام يونكود في النظم القائمة وفيما يخص التطبيقات الحاسوبية، الخطوط، تصميم النصوص والحوسبة متعددة اللغات.  
}


\breakframevertical
\thisframeLTR%

SILE also understands the difference between various languages, applying an appropriate shaper for each language;
for instance, we will typeset the same Unicode text three times. First, in standard Arabic
\font[family=Scheherazade,direction=RTL,language=ar,script=Arab]{ههه}; then in Sindi
\font[family=Scheherazade,direction=RTL,language=snd,script=Arab]{ههه}; and then in Urdu
\font[family=Scheherazade,direction=RTL,language=urd,script=Arab]{ههه}.

\supereject

\right-running-head{\hfill Typesetting on a grid}%
\noindent\font[family=Baskerville,size=25pt]{\em{Typesetting on a grid}}
\tocentry{Typesetting on a grid}
\script[src=packages/grid]
\grid[spacing=15pt]


Because SILE is written in an interpreted language (Lua), it’s possible—in fact, it’s actually quite easy—to change the way that its typesetting algorithms work, at runtime and even during the course of a document. As an
example, we’re currently using the grid package to typeset text on a fixed, 15 point grid.

Spacing is quantised to this grid size, so even if I add some irregular sized vertical spacing here:

\medskip

\noindent{}SILE will still place text regularly on the grid further down the page. This is a very useful
feature when you’re trying to typeset onto very thin paper, as aligning the text regularly on both sides
stops the ink from bleeding through onto the other side of the page.

\no-grid
\eject

\end{document}