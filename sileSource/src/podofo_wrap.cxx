/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#define SWIGLUA
#define SWIG_LUA_TARGET SWIG_LUA_FLAVOR_LUA
#define SWIG_LUA_MODULE_GLOBAL


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif


/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------
 * luarun.swg
 *
 * This file contains the runtime support for Lua modules
 * and includes code for managing global variables and pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

#include "lua.h"
#include "lauxlib.h"
#include <stdlib.h>  /* for malloc */
#include <assert.h>  /* for a few sanity tests */

/* -----------------------------------------------------------------------------
 * Lua flavors
 * ----------------------------------------------------------------------------- */

#define SWIG_LUA_FLAVOR_LUA 1
#define SWIG_LUA_FLAVOR_ELUA 2
#define SWIG_LUA_FLAVOR_ELUAC 3

#if !defined(SWIG_LUA_TARGET)
# error SWIG_LUA_TARGET not defined
#endif

#if defined(SWIG_LUA_ELUA_EMULATE)

struct swig_elua_entry;

typedef struct swig_elua_key {
  int type;
  union {
    const char* strkey;
    lua_Number numkey;
  } key;
} swig_elua_key;

typedef struct swig_elua_val {
  int type;
  union {
    lua_Number number;
    const struct swig_elua_entry *table;
    const char *string;
    lua_CFunction function;
    struct {
      char member;
      long lvalue;
      void *pvalue;
      swig_type_info **ptype;
    } userdata;
  } value;
} swig_elua_val;

typedef struct swig_elua_entry {
  swig_elua_key key;
  swig_elua_val value;
} swig_elua_entry;

#define LSTRKEY(x) {LUA_TSTRING, {.strkey = x} }
#define LNUMKEY(x) {LUA_TNUMBER, {.numkey = x} }
#define LNILKEY {LUA_TNIL, {.strkey = 0} }

#define LNUMVAL(x) {LUA_TNUMBER, {.number = x} }
#define LFUNCVAL(x) {LUA_TFUNCTION, {.function = x} }
#define LROVAL(x) {LUA_TTABLE, {.table = x} }
#define LNILVAL {LUA_TNIL, {.string = 0} }
#define LSTRVAL(x) {LUA_TSTRING, {.string = x} }

#define LUA_REG_TYPE swig_elua_entry

#define SWIG_LUA_ELUA_EMUL_METATABLE_KEY "__metatable"

#define lua_pushrotable(L,p)\
  lua_newtable(L);\
  assert(p);\
  SWIG_Lua_elua_emulate_register(L,(swig_elua_entry*)(p));

#define SWIG_LUA_CONSTTAB_POINTER(B,C,D)\
  LSTRKEY(B), {LUA_TUSERDATA, { .userdata={0,0,(void*)(C),&D} } }

#define SWIG_LUA_CONSTTAB_BINARY(B,S,C,D)\
  LSTRKEY(B), {LUA_TUSERDATA, { .userdata={1,S,(void*)(C),&D} } }
#endif

#if (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_ELUA) || (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_ELUAC)
#  define SWIG_LUA_CONSTTAB_INT(B, C) LSTRKEY(B), LNUMVAL(C)
#  define SWIG_LUA_CONSTTAB_FLOAT(B, C) LSTRKEY(B), LNUMVAL(C)
#  define SWIG_LUA_CONSTTAB_STRING(B, C) LSTRKEY(B), LSTRVAL(C)
#  define SWIG_LUA_CONSTTAB_CHAR(B, C) LSTRKEY(B), LNUMVAL(C)
    /* Those two types of constants are not supported in elua */

#ifndef SWIG_LUA_CONSTTAB_POINTER
#warning eLua does not support pointers as constants. By default, nil will be used as value
#define SWIG_LUA_CONSTTAB_POINTER(B,C,D) LSTRKEY(B), LNILVAL
#endif

#ifndef SWIG_LUA_CONSTTAB_BINARY
#warning eLua does not support pointers to member as constants. By default, nil will be used as value
#define SWIG_LUA_CONSTTAB_BINARY(B, S, C, D) LSTRKEY(B), LNILVAL
#endif
#else /* SWIG_LUA_FLAVOR_LUA */
#  define SWIG_LUA_CONSTTAB_INT(B, C) SWIG_LUA_INT, (char *)B, (long)C, 0, 0, 0
#  define SWIG_LUA_CONSTTAB_FLOAT(B, C) SWIG_LUA_FLOAT, (char *)B, 0, (double)C, 0, 0
#  define SWIG_LUA_CONSTTAB_STRING(B, C) SWIG_LUA_STRING, (char *)B, 0, 0, (void *)C, 0
#  define SWIG_LUA_CONSTTAB_CHAR(B, C) SWIG_LUA_CHAR, (char *)B, (long)C, 0, 0, 0
#  define SWIG_LUA_CONSTTAB_POINTER(B,C,D)\
       SWIG_LUA_POINTER, (char *)B, 0, 0, (void *)C, &D
#  define SWIG_LUA_CONSTTAB_BINARY(B, S, C, D)\
       SWIG_LUA_BINARY,  (char *)B, S, 0, (void *)C, &D
#endif

#ifndef SWIG_LUA_ELUA_EMULATE
#if (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_ELUA) || (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_ELUAC)
#  define LRO_STRVAL(v) {{.p = (char *) v}, LUA_TSTRING}
#  define LSTRVAL LRO_STRVAL
#endif
#endif /* SWIG_LUA_ELUA_EMULATE*/

#ifndef SWIG_LUA_ELUA_EMULATE
#if (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_ELUA) || (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_ELUAC)

#ifndef MIN_OPT_LEVEL
#define MIN_OPT_LEVEL 2
#endif

#include "lrodefs.h"
#include "lrotable.h"
#endif
#endif /* SWIG_LUA_ELUA_EMULATE*/
/* -----------------------------------------------------------------------------
 * compatibility defines
 * ----------------------------------------------------------------------------- */

/* History of Lua C API length functions:  In Lua 5.0 (and before?)
   there was "lua_strlen".  In Lua 5.1, this was renamed "lua_objlen",
   but a compatibility define of "lua_strlen" was added.  In Lua 5.2,
   this function was again renamed, to "lua_rawlen" (to emphasize that
   it doesn't call the "__len" metamethod), and the compatibility
   define of lua_strlen was removed.  All SWIG uses have been updated
   to "lua_rawlen", and we add our own defines of that here for older
   versions of Lua.  */
#if !defined(LUA_VERSION_NUM) || LUA_VERSION_NUM < 501
# define lua_rawlen lua_strlen
#elif LUA_VERSION_NUM == 501
# define lua_rawlen lua_objlen
#endif


/* lua_pushglobaltable is the recommended "future-proof" way to get
   the global table for Lua 5.2 and later.  Here we define
   lua_pushglobaltable ourselves for Lua versions before 5.2.  */
#if !defined(LUA_VERSION_NUM) || LUA_VERSION_NUM < 502
# define lua_pushglobaltable(L) lua_pushvalue(L, LUA_GLOBALSINDEX)
#endif

/* lua_absindex was introduced in Lua 5.2 */
#if !defined(LUA_VERSION_NUM) || LUA_VERSION_NUM < 502
# define lua_absindex(L,i) ((i)>0 || (i) <= LUA_REGISTRYINDEX ? (i) : lua_gettop(L) + (i) + 1)
#endif

/* lua_rawsetp was introduced in Lua 5.2 */
#if !defined(LUA_VERSION_NUM) || LUA_VERSION_NUM < 502
#define lua_rawsetp(L,index,ptr)\
  lua_pushlightuserdata(L,(void*)(ptr));\
  lua_insert(L,-2);\
  lua_rawset(L,index);

#define lua_rawgetp(L,index,ptr)\
  lua_pushlightuserdata(L,(void*)(ptr));\
  lua_rawget(L,index);

#endif

/* --------------------------------------------------------------------------
 * Helper functions for error handling
 * -------------------------------------------------------------------------- */

/* Push the string STR on the Lua stack, like lua_pushstring, but
   prefixed with the the location of the innermost Lua call-point
   (as formated by luaL_where).  */
SWIGRUNTIME void
SWIG_Lua_pusherrstring (lua_State *L, const char *str)
{
  luaL_where (L, 1);
  lua_pushstring (L, str);
  lua_concat (L, 2);
}

/* Push a formatted string generated from FMT and following args on
   the Lua stack, like lua_pushfstring, but prefixed with the the
   location of the innermost Lua call-point (as formated by luaL_where).  */
SWIGRUNTIME void
SWIG_Lua_pushferrstring (lua_State *L, const char *fmt, ...)
{
  va_list argp;
  va_start(argp, fmt);
  luaL_where(L, 1);
  lua_pushvfstring(L, fmt, argp);
  va_end(argp);
  lua_concat(L, 2);
}


/* -----------------------------------------------------------------------------
 * global swig types
 * ----------------------------------------------------------------------------- */
/* Constant table */
#define SWIG_LUA_INT     1
#define SWIG_LUA_FLOAT   2
#define SWIG_LUA_STRING  3
#define SWIG_LUA_POINTER 4
#define SWIG_LUA_BINARY  5
#define SWIG_LUA_CHAR    6

/* Structure for variable linking table */
typedef struct {
  const char *name;
  lua_CFunction get;
  lua_CFunction set;
} swig_lua_var_info;

#if (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_ELUA) || (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_ELUAC)
typedef const LUA_REG_TYPE swig_lua_method;
typedef const LUA_REG_TYPE swig_lua_const_info;
#else /* Normal lua */
typedef luaL_Reg swig_lua_method;

/* Constant information structure */
typedef struct {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_lua_const_info;

#endif

typedef struct {
  const char     *name;
  lua_CFunction   getmethod;
  lua_CFunction   setmethod;
} swig_lua_attribute;


struct swig_lua_class;
/* Can be used to create namespaces. Currently used to wrap class static methods/variables/constants */
typedef struct swig_lua_namespace {
  const char            *name;
  swig_lua_method       *ns_methods;
  swig_lua_attribute    *ns_attributes;
  swig_lua_const_info   *ns_constants;
  struct swig_lua_class        **ns_classes;
  struct swig_lua_namespace    **ns_namespaces;
} swig_lua_namespace;

typedef struct swig_lua_class {
  const char    *name; /* Name that this class has in Lua */
  const char    *fqname; /* Fully qualified name - Scope + class name */
  swig_type_info   **type;
  lua_CFunction  constructor;
  void    (*destructor)(void *);
  swig_lua_method   *methods;
  swig_lua_attribute     *attributes;
  swig_lua_namespace    *cls_static;
  swig_lua_method   *metatable; /* 0 for -eluac */
  struct swig_lua_class **bases;
  const char **base_names;
} swig_lua_class;

/* this is the struct for wrapping all pointers in SwigLua
*/
typedef struct {
  swig_type_info   *type;
  int     own;  /* 1 if owned & must be destroyed */
  void        *ptr;
} swig_lua_userdata;

/* this is the struct for wrapping arbitrary packed binary data
(currently it is only used for member function pointers)
the data ordering is similar to swig_lua_userdata, but it is currently not possible
to tell the two structures apart within SWIG, other than by looking at the type
*/
typedef struct {
  swig_type_info   *type;
  int     own;  /* 1 if owned & must be destroyed */
  char data[1];       /* arbitary amount of data */    
} swig_lua_rawdata;

/* Common SWIG API */
#define SWIG_NewPointerObj(L, ptr, type, owner)       SWIG_Lua_NewPointerObj(L, (void *)ptr, type, owner)
#define SWIG_ConvertPtr(L,idx, ptr, type, flags)    SWIG_Lua_ConvertPtr(L,idx,ptr,type,flags)
#define SWIG_MustGetPtr(L,idx, type,flags, argnum,fnname)  SWIG_Lua_MustGetPtr(L,idx, type,flags, argnum,fnname)
/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(L, idx, ptr, sz, ty)       SWIG_Lua_ConvertPacked(L, idx, ptr, sz, ty)
#define SWIG_NewMemberObj(L, ptr, sz, type)      SWIG_Lua_NewPackedObj(L, ptr, sz, type)

/* Runtime API */
#define SWIG_GetModule(clientdata) SWIG_Lua_GetModule((lua_State*)(clientdata))
#define SWIG_SetModule(clientdata, pointer) SWIG_Lua_SetModule((lua_State*) (clientdata), pointer)
#define SWIG_MODULE_CLIENTDATA_TYPE lua_State*

/* Contract support */
#define SWIG_contract_assert(expr, msg)  \
  if (!(expr)) { SWIG_Lua_pusherrstring(L, (char *) msg); goto fail; } else


/* helper #defines */
#define SWIG_fail {goto fail;}
#define SWIG_fail_arg(func_name,argnum,type) \
  {SWIG_Lua_pushferrstring(L,"Error in %s (arg %d), expected '%s' got '%s'",\
  func_name,argnum,type,SWIG_Lua_typename(L,argnum));\
  goto fail;}
#define SWIG_fail_ptr(func_name,argnum,type) \
  SWIG_fail_arg(func_name,argnum,(type && type->str)?type->str:"void*")
#define SWIG_check_num_args(func_name,a,b) \
  if (lua_gettop(L)<a || lua_gettop(L)>b) \
  {SWIG_Lua_pushferrstring(L,"Error in %s expected %d..%d args, got %d",func_name,a,b,lua_gettop(L));\
  goto fail;}


#define SWIG_Lua_get_table(L,n) \
  (lua_pushstring(L, n), lua_rawget(L,-2))

#define SWIG_Lua_add_function(L,n,f) \
  (lua_pushstring(L, n), \
      lua_pushcfunction(L, f), \
      lua_rawset(L,-3))

#define SWIG_Lua_add_boolean(L,n,b) \
  (lua_pushstring(L, n), \
      lua_pushboolean(L, b), \
      lua_rawset(L,-3))

/* special helper for allowing 'nil' for usertypes */
#define SWIG_isptrtype(L,I) (lua_isuserdata(L,I) || lua_isnil(L,I))

#ifdef __cplusplus
/* Special helper for member function pointers 
it gets the address, casts it, then dereferences it */
/*#define SWIG_mem_fn_as_voidptr(a)  (*((char**)&(a))) */
#endif

/* storing/access of swig_module_info */
SWIGRUNTIME swig_module_info *
SWIG_Lua_GetModule(lua_State *L) {
  swig_module_info *ret = 0;
  lua_pushstring(L,"swig_runtime_data_type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME);
  lua_rawget(L,LUA_REGISTRYINDEX);
  if (lua_islightuserdata(L,-1))
    ret=(swig_module_info*)lua_touserdata(L,-1);
  lua_pop(L,1);  /* tidy */
  return ret;
}

SWIGRUNTIME void
SWIG_Lua_SetModule(lua_State *L, swig_module_info *module) {
  /* add this all into the Lua registry: */
  lua_pushstring(L,"swig_runtime_data_type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME);
  lua_pushlightuserdata(L,(void*)module);
  lua_rawset(L,LUA_REGISTRYINDEX);
}

/* -----------------------------------------------------------------------------
 * global variable support code: modules
 * ----------------------------------------------------------------------------- */

/* this function is called when trying to set an immutable.
default action is to print an error.
This can removed with a compile flag SWIGLUA_IGNORE_SET_IMMUTABLE */
SWIGINTERN int SWIG_Lua_set_immutable(lua_State *L)
{
/*  there should be 1 param passed in: the new value */
#ifndef SWIGLUA_IGNORE_SET_IMMUTABLE
  lua_pop(L,1);  /* remove it */
  luaL_error(L,"This variable is immutable");
#endif
    return 0;   /* should not return anything */
}

#ifdef SWIG_LUA_ELUA_EMULATE

SWIGRUNTIME void SWIG_Lua_NewPointerObj(lua_State *L,void *ptr,swig_type_info *type, int own);
SWIGRUNTIME void SWIG_Lua_NewPackedObj(lua_State *L,void *ptr,size_t size,swig_type_info *type);
static int swig_lua_elua_emulate_unique_key;

/* This function emulates eLua rotables behaviour. It loads a rotable definition into the usual lua table. */
SWIGINTERN void SWIG_Lua_elua_emulate_register(lua_State *L, const swig_elua_entry *table)
{
  int i, table_parsed, parsed_tables_array, target_table;
  assert(lua_istable(L,-1));
  target_table = lua_gettop(L);
  /* Get the registry where we put all parsed tables to avoid loops */
  lua_rawgetp(L, LUA_REGISTRYINDEX, &swig_lua_elua_emulate_unique_key);
  if(lua_isnil(L,-1)) {
    lua_pop(L,1);
    lua_newtable(L);
    lua_pushvalue(L,-1);
    lua_rawsetp(L,LUA_REGISTRYINDEX,(void*)(&swig_lua_elua_emulate_unique_key));
  }
  parsed_tables_array = lua_gettop(L);
  lua_pushvalue(L,target_table);
  lua_rawsetp(L, parsed_tables_array, table);
  table_parsed = 0;
  const int SWIGUNUSED pairs_start = lua_gettop(L);
  for(i = 0;table[i].key.type != LUA_TNIL || table[i].value.type != LUA_TNIL;i++)
  {
    const swig_elua_entry *entry = table + i;
    int is_metatable = 0;
    switch(entry->key.type) {
      case LUA_TSTRING:
        lua_pushstring(L,entry->key.key.strkey);
        if(strcmp(entry->key.key.strkey, SWIG_LUA_ELUA_EMUL_METATABLE_KEY) == 0)
          is_metatable = 1;
        break;
      case  LUA_TNUMBER:
        lua_pushnumber(L,entry->key.key.numkey);
        break;
      case LUA_TNIL:
        lua_pushnil(L);
        break;
      default:
        assert(0);
    }
    switch(entry->value.type) {
      case LUA_TSTRING:
        lua_pushstring(L,entry->value.value.string);
        break;
      case  LUA_TNUMBER:
        lua_pushnumber(L,entry->value.value.number);
        break;
      case LUA_TFUNCTION:
        lua_pushcfunction(L,entry->value.value.function);
        break;
      case LUA_TTABLE:
        lua_rawgetp(L,parsed_tables_array, entry->value.value.table);
        table_parsed = !lua_isnil(L,-1);
        if(!table_parsed) {
          lua_pop(L,1); /*remove nil */
          lua_newtable(L);
          SWIG_Lua_elua_emulate_register(L,entry->value.value.table);
        } 
        if(is_metatable) {
          assert(lua_istable(L,-1));
          lua_pushvalue(L,-1);
          lua_setmetatable(L,target_table);
        }

        break;
      case LUA_TUSERDATA:
        if(entry->value.value.userdata.member) 
          SWIG_NewMemberObj(L,entry->value.value.userdata.pvalue,
              entry->value.value.userdata.lvalue,
              *(entry->value.value.userdata.ptype));
        else 
          SWIG_NewPointerObj(L,entry->value.value.userdata.pvalue,
              *(entry->value.value.userdata.ptype),0);
        break;
      case LUA_TNIL:
        lua_pushnil(L);
        break;
      default:
        assert(0);
    }
    assert(lua_gettop(L) == pairs_start + 2);
    lua_rawset(L,target_table);
  }
  lua_pop(L,1); /* Removing parsed tables storage */
  assert(lua_gettop(L) == target_table);
}

SWIGINTERN void SWIG_Lua_elua_emulate_register_clear(lua_State *L)
{
  lua_pushnil(L);
  lua_rawsetp(L, LUA_REGISTRYINDEX, &swig_lua_elua_emulate_unique_key);
}

SWIGINTERN void SWIG_Lua_get_class_registry(lua_State *L);

SWIGINTERN int SWIG_Lua_emulate_elua_getmetatable(lua_State *L)
{
  SWIG_check_num_args("getmetatable(SWIG eLua emulation)", 1, 1);
  SWIG_Lua_get_class_registry(L);
  lua_getfield(L,-1,"lua_getmetatable");
  lua_remove(L,-2); /* remove the registry*/
  assert(!lua_isnil(L,-1));
  lua_pushvalue(L,1);
  assert(lua_gettop(L) == 3); /* object | function | object again */
  lua_call(L,1,1);
  if(!lua_isnil(L,-1)) /*There is an ordinary metatable */
    return 1;
  /*if it is a table, then emulate elua behaviour - check for __metatable attribute of a table*/
  assert(lua_gettop(L) == 2);
  if(lua_istable(L,-2)) {
    lua_pop(L,1); /*remove the nil*/
    lua_getfield(L,-1, SWIG_LUA_ELUA_EMUL_METATABLE_KEY);
  }
  assert(lua_gettop(L) == 2);
  return 1;
  
fail:
  lua_error(L);
  return 0;
}

SWIGINTERN void SWIG_Lua_emulate_elua_swap_getmetatable(lua_State *L)
{
  SWIG_Lua_get_class_registry(L);
  lua_pushglobaltable(L);
  lua_pushstring(L,"lua_getmetatable");
  lua_getfield(L,-2,"getmetatable");
  assert(!lua_isnil(L,-1));
  lua_rawset(L,-4);
  lua_pushstring(L, "getmetatable");
  lua_pushcfunction(L, SWIG_Lua_emulate_elua_getmetatable);
  lua_rawset(L,-3);
  lua_pop(L,2);
      
}
/* END OF REMOVE */

#endif
/* -----------------------------------------------------------------------------
 * global variable support code: namespaces and modules (which are the same thing)
 * ----------------------------------------------------------------------------- */

SWIGINTERN int SWIG_Lua_namespace_get(lua_State *L)
{
/*  there should be 2 params passed in
  (1) table (not the meta table)
  (2) string name of the attribute
*/
  assert(lua_istable(L,-2));  /* just in case */
  lua_getmetatable(L,-2);
  assert(lua_istable(L,-1));
  SWIG_Lua_get_table(L,".get"); /* find the .get table */
  assert(lua_istable(L,-1));
  /* look for the key in the .get table */
  lua_pushvalue(L,2);  /* key */
  lua_rawget(L,-2);
  lua_remove(L,-2); /* stack tidy, remove .get table */
  if (lua_iscfunction(L,-1))
  {  /* found it so call the fn & return its value */
    lua_call(L,0,1);  /* 1 value in (userdata),1 out (result) */
    lua_remove(L,-2); /* stack tidy, remove metatable */
    return 1;
  }
  lua_pop(L,1);  /* remove whatever was there */
  /* ok, so try the .fn table */
  SWIG_Lua_get_table(L,".fn"); /* find the .get table */
  assert(lua_istable(L,-1));  /* just in case */
  lua_pushvalue(L,2);  /* key */
  lua_rawget(L,-2);  /* look for the fn */
  lua_remove(L,-2); /* stack tidy, remove .fn table */
  if (lua_isfunction(L,-1)) /* note: whether it's a C function or lua function */
  {  /* found it so return the fn & let lua call it */
    lua_remove(L,-2); /* stack tidy, remove metatable */
    return 1;
  }
  lua_pop(L,1);  /* remove whatever was there */
  return 0;
}

SWIGINTERN int SWIG_Lua_namespace_set(lua_State *L)
{
/*  there should be 3 params passed in
  (1) table (not the meta table)
  (2) string name of the attribute
  (3) any for the new value
*/

  assert(lua_istable(L,1));
  lua_getmetatable(L,1);    /* get the meta table */
  assert(lua_istable(L,-1));

  SWIG_Lua_get_table(L,".set"); /* find the .set table */
  if (lua_istable(L,-1))
  {
    /* look for the key in the .set table */
    lua_pushvalue(L,2);  /* key */
    lua_rawget(L,-2);
    if (lua_iscfunction(L,-1))
    {  /* found it so call the fn & return its value */
      lua_pushvalue(L,3);  /* value */
      lua_call(L,1,0);
      return 0;
    }
    lua_pop(L,1);  /* remove the value */
  }
  lua_pop(L,1);  /* remove the value .set table */
  lua_pop(L,1); /* remote metatable */
  lua_rawset(L,-3);
  return 0;
}

#if (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_LUA) /* In elua this is useless */
SWIGINTERN void SWIG_Lua_InstallConstants(lua_State *L, swig_lua_const_info constants[]); /* forward declaration */
SWIGINTERN void  SWIG_Lua_add_variable(lua_State *L,const char *name,lua_CFunction getFn,lua_CFunction setFn); /* forward declaration */
SWIGINTERN void  SWIG_Lua_class_register(lua_State *L,swig_lua_class *clss);

/* helper function - register namespace methods and attributes into namespace */
SWIGINTERN int SWIG_Lua_add_namespace_details(lua_State *L, swig_lua_namespace *ns)
{
  int i;
  /* There must be namespace table (not metatable) at the top of the stack */
  assert(lua_istable(L,-1));
  SWIG_Lua_InstallConstants(L, ns->ns_constants);

  /* add methods to the namespace/module table */
  for(i=0;ns->ns_methods[i].name;i++){
    SWIG_Lua_add_function(L,ns->ns_methods[i].name,ns->ns_methods[i].func);
  }
  lua_getmetatable(L,-1);

  /* add fns */
  for(i=0;ns->ns_attributes[i].name;i++){
    SWIG_Lua_add_variable(L,ns->ns_attributes[i].name,ns->ns_attributes[i].getmethod,ns->ns_attributes[i].setmethod);
  }

  /* clear stack - remove metatble */
  lua_pop(L,1);
  return 0;
}

/* Register all classes in the namespace */
SWIGINTERN void SWIG_Lua_add_namespace_classes(lua_State *L, swig_lua_namespace *ns)
{
  swig_lua_class **classes;

  /* There must be a module/namespace table at the top of the stack */
  assert(lua_istable(L,-1));

  classes = ns->ns_classes;

  if( classes != 0 ) {
    while(*classes != 0) {
      SWIG_Lua_class_register(L, *classes);
      classes++;
    }
  }
}

/* Helper function. Creates namespace table and adds it to module table
   if 'reg' is true, then will register namespace table to parent one (must be on top of the stack
   when function is called).
   Function always returns newly registered table on top of the stack.
*/
SWIGINTERN void SWIG_Lua_namespace_register(lua_State *L, swig_lua_namespace *ns, int reg)
{
  swig_lua_namespace **sub_namespace;
  /* 1 argument - table on the top of the stack */
  const int SWIGUNUSED begin = lua_gettop(L);
  assert(lua_istable(L,-1)); /* just in case. This is supposed to be module table or parent namespace table */
  lua_checkstack(L,5);
  lua_newtable(L); /* namespace itself */
  lua_newtable(L); /* metatable for namespace */

  /* add a table called ".get" */
  lua_pushstring(L,".get");
  lua_newtable(L);
  lua_rawset(L,-3);
  /* add a table called ".set" */
  lua_pushstring(L,".set");
  lua_newtable(L);
  lua_rawset(L,-3);
  /* add a table called ".fn" */
  lua_pushstring(L,".fn");
  lua_newtable(L);
  lua_rawset(L,-3);

  /* add accessor fns for using the .get,.set&.fn */
  SWIG_Lua_add_function(L,"__index",SWIG_Lua_namespace_get);
  SWIG_Lua_add_function(L,"__newindex",SWIG_Lua_namespace_set);

  lua_setmetatable(L,-2); /* set metatable */

  /* Register all functions, variables etc */
  SWIG_Lua_add_namespace_details(L,ns);
  /* Register classes */
  SWIG_Lua_add_namespace_classes(L,ns);

  sub_namespace = ns->ns_namespaces;
  if( sub_namespace != 0) {
    while(*sub_namespace != 0) {
      SWIG_Lua_namespace_register(L, *sub_namespace, 1);
      lua_pop(L,1); /* removing sub-namespace table */
      sub_namespace++;
    }
  }

  if (reg) {
    lua_pushstring(L,ns->name);
    lua_pushvalue(L,-2);
    lua_rawset(L,-4); /* add namespace to module table */
  }
  assert(lua_gettop(L) == begin+1);
}
#endif /* SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_LUA */

/* -----------------------------------------------------------------------------
 * global variable support code: classes
 * ----------------------------------------------------------------------------- */

SWIGINTERN void  SWIG_Lua_get_class_metatable(lua_State *L,const char *cname);

typedef int (*swig_lua_base_iterator_func)(lua_State*,swig_type_info*, int, int *ret);

SWIGINTERN int SWIG_Lua_iterate_bases(lua_State *L, swig_type_info * SWIGUNUSED swig_type,
  int first_arg, swig_lua_base_iterator_func func, int  *const ret)
{
    /* first_arg - position of the object in stack. Everything that is above are arguments
     * and is passed to every evocation of the func */
    int last_arg = lua_gettop(L);/* position of last argument */
    int original_metatable = last_arg + 1;
    size_t bases_count;
    int result = SWIG_ERROR;
    int bases_table;
    (void)swig_type;
    lua_getmetatable(L,first_arg);

    /* initialise base search */
#if (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_LUA)
    SWIG_Lua_get_table(L,".bases");
    assert(lua_istable(L,-1));
    bases_count = lua_rawlen(L,-1);
    bases_table = lua_gettop(L);
#else
    /* In elua .bases table doesn't exist. Use table from swig_lua_class */
    (void)bases_table;
    assert(swig_type!=0);
    swig_module_info *module=SWIG_GetModule(L);
    swig_lua_class **bases= ((swig_lua_class*)(swig_type->clientdata))->bases;
    const char **base_names= ((swig_lua_class*)(swig_type->clientdata))->base_names;
    bases_count = 0;
    for(;base_names[bases_count];
      bases_count++);/* get length of bases */
#endif

    if(ret)
      *ret = 0;
    if(bases_count>0)
    {
      int to_remove;
      size_t i;
      int j;
      int subcall_last_arg;
      int subcall_first_arg = lua_gettop(L) + 1;/* Here a copy of first_arg and arguments begin */
      int valid = 1;
      swig_type_info *base_swig_type = 0;
      for(j=first_arg;j<=last_arg;j++)
        lua_pushvalue(L,j);
      subcall_last_arg = lua_gettop(L);

      /* Trick: temporarily replacing original metatable with metatable for base class and call getter */
      for(i=0;i<bases_count;i++) {
        /* Iteration through class bases */
#if (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_LUA)
        lua_rawgeti(L,bases_table,i+1);
        base_swig_type = 0;
        if(lua_isnil(L,-1)) {
          valid = 0;
          lua_pop(L,1);
        } else {
          valid = 1;
        }
#else /* In elua .bases table doesn't exist. Use table from swig_lua_class */
        swig_lua_class *base_class = bases[i];
        if(!base_class) {
          valid = 0;
        } else {
          valid = 1;
          SWIG_Lua_get_class_metatable(L,base_class->fqname);
          base_swig_type = SWIG_TypeQueryModule(module,module,base_names[i]);
          assert(base_swig_type != 0);
        }
#endif

        if(!valid)
          continue;
        assert(lua_isuserdata(L, subcall_first_arg));
        assert(lua_istable(L,-1));
        lua_setmetatable(L,subcall_first_arg); /* Set new metatable */
        assert(lua_gettop(L) == subcall_last_arg);
        result = func(L, base_swig_type,subcall_first_arg, ret); /* Forward call */
        if(result != SWIG_ERROR) {
          break;
        }
      }
      /* Restore original metatable */
      lua_pushvalue(L,original_metatable);
      lua_setmetatable(L,first_arg);
      /* Clear - remove everything between last_arg and subcall_last_arg including */
      to_remove = subcall_last_arg - last_arg;
      for(j=0;j<to_remove;j++)
        lua_remove(L,last_arg+1);
    } else {
      /* Remove everything after last_arg */
      lua_pop(L, lua_gettop(L) - last_arg);
    }
    if(ret) assert(lua_gettop(L) == last_arg + *ret);
    return result;
}

/* The class.get method helper, performs the lookup of class attributes.
 * It returns an error code. Number of function return values is passed inside 'ret'.
 * first_arg is not used in this function because function always has 2 arguments.
 */
SWIGINTERN int  SWIG_Lua_class_do_get(lua_State *L, swig_type_info *type, int SWIGUNUSED first_arg, int *ret)
{
/*  there should be 2 params passed in
  (1) userdata (not the meta table)
  (2) string name of the attribute
*/
  int bases_search_result;
  int substack_start = lua_gettop(L)-2;
  assert(first_arg == substack_start+1);
  lua_checkstack(L,5);
  assert(lua_isuserdata(L,-2));  /* just in case */
  lua_getmetatable(L,-2);    /* get the meta table */
  assert(lua_istable(L,-1));  /* just in case */
  SWIG_Lua_get_table(L,".get"); /* find the .get table */
  assert(lua_istable(L,-1));  /* just in case */
  /* look for the key in the .get table */
  lua_pushvalue(L,substack_start+2);  /* key */
  lua_rawget(L,-2);
  lua_remove(L,-2); /* stack tidy, remove .get table */
  if (lua_iscfunction(L,-1))
  {  /* found it so call the fn & return its value */
    lua_pushvalue(L,substack_start+1);  /* the userdata */
    lua_call(L,1,1);  /* 1 value in (userdata),1 out (result) */
    lua_remove(L,-2); /* stack tidy, remove metatable */
    if(ret)
      *ret = 1;
    return SWIG_OK;
  }
  lua_pop(L,1);  /* remove whatever was there */
  /* ok, so try the .fn table */
  SWIG_Lua_get_table(L,".fn"); /* find the .fn table */
  assert(lua_istable(L,-1));  /* just in case */
  lua_pushvalue(L,substack_start+2);  /* key */
  lua_rawget(L,-2);  /* look for the fn */
  lua_remove(L,-2); /* stack tidy, remove .fn table */
  if (lua_isfunction(L,-1)) /* note: if its a C function or lua function */
  {  /* found it so return the fn & let lua call it */
    lua_remove(L,-2); /* stack tidy, remove metatable */
    if(ret)
      *ret = 1;
    return SWIG_OK;
  }
  lua_pop(L,1);  /* remove whatever was there */
  /* NEW: looks for the __getitem() fn
  this is a user provided get fn */
  SWIG_Lua_get_table(L,"__getitem"); /* find the __getitem fn */
  if (lua_iscfunction(L,-1))  /* if its there */
  {  /* found it so call the fn & return its value */
    lua_pushvalue(L,substack_start+1);  /* the userdata */
    lua_pushvalue(L,substack_start+2);  /* the parameter */
    lua_call(L,2,1);  /* 2 value in (userdata),1 out (result) */
    lua_remove(L,-2); /* stack tidy, remove metatable */
    if(ret) *ret = 1;
    return SWIG_OK;
  }
  lua_pop(L,1);
  /* Remove the metatable */
  lua_pop(L,1);
  /* Search in base classes */
  bases_search_result = SWIG_Lua_iterate_bases(L,type,substack_start+1,SWIG_Lua_class_do_get,ret);
  return bases_search_result;  /* sorry not known */
}

/* the class.get method, performs the lookup of class attributes
 */
SWIGINTERN int  SWIG_Lua_class_get(lua_State *L)
{
/*  there should be 2 params passed in
  (1) userdata (not the meta table)
  (2) string name of the attribute
*/
  int result;
  swig_lua_userdata *usr;
  swig_type_info *type;
  int ret = 0;
  assert(lua_isuserdata(L,1));
  usr=(swig_lua_userdata*)lua_touserdata(L,1);  /* get data */
  type = usr->type;
  result = SWIG_Lua_class_do_get(L,type,1,&ret);
  if(result == SWIG_OK)
    return ret;

  return 0;
}

/* helper for the class.set method, performs the lookup of class attributes
 * It returns error code. Number of function return values is passed inside 'ret'
 */
SWIGINTERN int  SWIG_Lua_class_do_set(lua_State *L, swig_type_info *type, int first_arg, int *ret)
{
/*  there should be 3 params passed in
  (1) table (not the meta table)
  (2) string name of the attribute
  (3) any for the new value
  */

  int bases_search_result;
  int substack_start = lua_gettop(L) - 3;
  lua_checkstack(L,5);
  assert(lua_isuserdata(L,substack_start+1));  /* just in case */
  lua_getmetatable(L,substack_start+1);    /* get the meta table */
  assert(lua_istable(L,-1));  /* just in case */
  if(ret)
    *ret = 0; /* it is setter - number of return values is always 0 */

  SWIG_Lua_get_table(L,".set"); /* find the .set table */
  if (lua_istable(L,-1))
  {
    /* look for the key in the .set table */
    lua_pushvalue(L,substack_start+2);  /* key */
    lua_rawget(L,-2);
    lua_remove(L,-2); /* tidy stack, remove .set table */
    if (lua_iscfunction(L,-1))
    {  /* found it so call the fn & return its value */
      lua_pushvalue(L,substack_start+1);  /* userdata */
      lua_pushvalue(L,substack_start+3);  /* value */
      lua_call(L,2,0);
      lua_remove(L,substack_start+4); /*remove metatable*/
      return SWIG_OK;
    }
    lua_pop(L,1);  /* remove the value */
  } else {
    lua_pop(L,1);  /* remove the answer for .set table request*/
  }
  /* NEW: looks for the __setitem() fn
  this is a user provided set fn */
  SWIG_Lua_get_table(L,"__setitem"); /* find the fn */
  if (lua_iscfunction(L,-1))  /* if its there */
  {  /* found it so call the fn & return its value */
    lua_pushvalue(L,substack_start+1);  /* the userdata */
    lua_pushvalue(L,substack_start+2);  /* the parameter */
    lua_pushvalue(L,substack_start+3);  /* the value */
    lua_call(L,3,0);  /* 3 values in ,0 out */
    lua_remove(L,-2); /* stack tidy, remove metatable */
    return SWIG_OK;
  }
  lua_pop(L,1); /* remove value */

  lua_pop(L,1); /* remove metatable */
  /* Search among bases */
  bases_search_result = SWIG_Lua_iterate_bases(L,type,first_arg,SWIG_Lua_class_do_set,ret);
  if(ret)
    assert(*ret == 0);
  assert(lua_gettop(L) == substack_start + 3);
  return bases_search_result;
}

/* This is the actual method exported to Lua. It calls SWIG_Lua_class_do_set and correctly
 * handles return values.
 */
SWIGINTERN int  SWIG_Lua_class_set(lua_State *L)
{
/*  There should be 3 params passed in
  (1) table (not the meta table)
  (2) string name of the attribute
  (3) any for the new value
  */
  int ret = 0;
  int result;
  swig_lua_userdata *usr;
  swig_type_info *type;
  assert(lua_isuserdata(L,1));
  usr=(swig_lua_userdata*)lua_touserdata(L,1);  /* get data */
  type = usr->type;
  result = SWIG_Lua_class_do_set(L,type,1,&ret);
  if(result != SWIG_OK) {
   SWIG_Lua_pushferrstring(L,"Assignment not possible. No setter/member with this name. For custom assignments implement __setitem method.");
   lua_error(L);
  } else {
    assert(ret==0);
  }
  return 0;
}

/* the class.destruct method called by the interpreter */
SWIGINTERN int  SWIG_Lua_class_destruct(lua_State *L)
{
/*  there should be 1 params passed in
  (1) userdata (not the meta table) */
  swig_lua_userdata *usr;
  swig_lua_class *clss;
  assert(lua_isuserdata(L,-1));  /* just in case */
  usr=(swig_lua_userdata*)lua_touserdata(L,-1);  /* get it */
  /* if must be destroyed & has a destructor */
  if (usr->own) /* if must be destroyed */
  {
    clss=(swig_lua_class*)usr->type->clientdata;  /* get the class */
    if (clss && clss->destructor)  /* there is a destroy fn */
    {
      clss->destructor(usr->ptr);  /* bye bye */
    }
  }
  return 0;
}

/* the class.__tostring method called by the interpreter and print */
SWIGINTERN int  SWIG_Lua_class_tostring(lua_State *L)
{
/*  there should be 1 param passed in
  (1) userdata (not the metatable) */
  const char *className;
  void* userData;
  assert(lua_isuserdata(L,1));  /* just in case */
  userData = lua_touserdata(L,1); /* get the userdata address for later */
  lua_getmetatable(L,1);    /* get the meta table */
  assert(lua_istable(L,-1));  /* just in case */

  lua_getfield(L, -1, ".type");
  className = lua_tostring(L, -1);

  lua_pushfstring(L, "<%s userdata: %p>", className, userData);
  return 1;
}

/* to manually disown some userdata */
SWIGINTERN int  SWIG_Lua_class_disown(lua_State *L)
{
/*  there should be 1 params passed in
  (1) userdata (not the meta table) */
  swig_lua_userdata *usr;
  assert(lua_isuserdata(L,-1));  /* just in case */
  usr=(swig_lua_userdata*)lua_touserdata(L,-1);  /* get it */
  
  usr->own = 0; /* clear our ownership */
  return 0;
}

/* lua callable function to compare userdata's value
the issue is that two userdata may point to the same thing
but to lua, they are different objects */
SWIGRUNTIME int SWIG_Lua_class_equal(lua_State *L)
{
  int result;
  swig_lua_userdata *usr1,*usr2;
  if (!lua_isuserdata(L,1) || !lua_isuserdata(L,2))  /* just in case */
    return 0;  /* nil reply */
  usr1=(swig_lua_userdata*)lua_touserdata(L,1);  /* get data */
  usr2=(swig_lua_userdata*)lua_touserdata(L,2);  /* get data */
  /*result=(usr1->ptr==usr2->ptr && usr1->type==usr2->type); only works if type is the same*/
  result=(usr1->ptr==usr2->ptr);
   lua_pushboolean(L,result);
  return 1;
}

/* populate table at the top of the stack with metamethods that ought to be inherited */
SWIGINTERN void SWIG_Lua_populate_inheritable_metamethods(lua_State *L)
{
  SWIG_Lua_add_boolean(L, "__add", 1);
  SWIG_Lua_add_boolean(L, "__sub", 1);
  SWIG_Lua_add_boolean(L, "__mul", 1);
  SWIG_Lua_add_boolean(L, "__div", 1);
  SWIG_Lua_add_boolean(L, "__mod", 1);
  SWIG_Lua_add_boolean(L, "__pow", 1);
  SWIG_Lua_add_boolean(L, "__unm", 1);
  SWIG_Lua_add_boolean(L, "__len", 1 );
  SWIG_Lua_add_boolean(L, "__concat", 1 );
  SWIG_Lua_add_boolean(L, "__eq", 1);
  SWIG_Lua_add_boolean(L, "__lt", 1);
  SWIG_Lua_add_boolean(L, "__le", 1);
  SWIG_Lua_add_boolean(L, "__call", 1);
  SWIG_Lua_add_boolean(L, "__tostring", 1);
  SWIG_Lua_add_boolean(L, "__gc", 0);
}

/* creates the swig registry */
SWIGINTERN void SWIG_Lua_create_class_registry(lua_State *L)
{
  /* create main SWIG registry table */
  lua_pushstring(L,"SWIG");
  lua_newtable(L);
  /* populate it with some predefined data */

  /* .library table. Placeholder */
  lua_pushstring(L,".library");
  lua_newtable(L);
  {
    /* list of metamethods that class inherits from its bases */
    lua_pushstring(L,"inheritable_metamethods");
    lua_newtable(L);
    /* populate with list of metamethods */
    SWIG_Lua_populate_inheritable_metamethods(L);
    lua_rawset(L,-3);
  }
  lua_rawset(L,-3);

  lua_rawset(L,LUA_REGISTRYINDEX);
}

/* gets the swig registry (or creates it) */
SWIGINTERN void  SWIG_Lua_get_class_registry(lua_State *L)
{
  /* add this all into the swig registry: */
  lua_pushstring(L,"SWIG");
  lua_rawget(L,LUA_REGISTRYINDEX);  /* get the registry */
  if (!lua_istable(L,-1))  /* not there */
  {  /* must be first time, so add it */
    lua_pop(L,1);  /* remove the result */
    SWIG_Lua_create_class_registry(L);
    /* then get it */
    lua_pushstring(L,"SWIG");
    lua_rawget(L,LUA_REGISTRYINDEX);
  }
}

SWIGINTERN void SWIG_Lua_get_inheritable_metamethods(lua_State *L)
{
  SWIG_Lua_get_class_registry(L);
  lua_pushstring(L, ".library");
  lua_rawget(L,-2);
  assert( !lua_isnil(L,-1) );
  lua_pushstring(L, "inheritable_metamethods");
  lua_rawget(L,-2);

  /* Remove class registry and library table */
  lua_remove(L,-2);
  lua_remove(L,-2);
}

/* Helper function to get the classes metatable from the register */
SWIGINTERN void  SWIG_Lua_get_class_metatable(lua_State *L,const char *cname)
{
  SWIG_Lua_get_class_registry(L);  /* get the registry */
  lua_pushstring(L,cname);  /* get the name */
  lua_rawget(L,-2);    /* get it */
  lua_remove(L,-2);    /* tidy up (remove registry) */
}

/* Set up the base classes pointers.
Each class structure has a list of pointers to the base class structures.
This function fills them.
It cannot be done at compile time, as this will not work with hireachies
spread over more than one swig file. 
Therefore it must be done at runtime, querying the SWIG type system.
*/
SWIGINTERN void SWIG_Lua_init_base_class(lua_State *L,swig_lua_class *clss)
{
  int i=0;
  swig_module_info *module=SWIG_GetModule(L);
  for(i=0;clss->base_names[i];i++)
  {
    if (clss->bases[i]==0) /* not found yet */
    {
      /* lookup and cache the base class */
      swig_type_info *info = SWIG_TypeQueryModule(module,module,clss->base_names[i]);
      if (info) clss->bases[i] = (swig_lua_class *) info->clientdata;
    }
  }
}

#if defined(SWIG_LUA_SQUASH_BASES) && (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_LUA)
/* Merges two tables  */
SWIGINTERN int SWIG_Lua_merge_tables_by_index(lua_State *L, int target, int source)
{
  /* iterating */
  lua_pushnil(L);
  while (lua_next(L,source) != 0) {
    /* -1 - value, -2 - index */
    /* have to copy to assign */
    lua_pushvalue(L,-2); /* copy of index */
    lua_pushvalue(L,-2); /* copy of value */
    lua_rawset(L, target);
    lua_pop(L,1);
    /* only key is left */
  }
}

/* Merges two tables with given name. original - index of target metatable, base - index of source metatable */
SWIGINTERN int SWIG_Lua_merge_tables(lua_State *L, const char* name, int original, int base)
{
  /* push original[name], then base[name] */
  lua_pushstring(L,name);
  lua_rawget(L,original);
  int original_table = lua_gettop(L);
  lua_pushstring(L,name);
  lua_rawget(L,base);
  int base_table = lua_gettop(L);
  SWIG_Lua_merge_tables_by_index(L, original_table, base_table);
  /* clearing stack */
  lua_pop(L,2);
}

/* Function takes all symbols from base and adds it to derived class. It's just a helper. */
SWIGINTERN int SWIG_Lua_class_squash_base(lua_State *L, swig_lua_class *base_cls)
{
  /* There is one parameter - original, i.e. 'derived' class metatable */
  assert(lua_istable(L,-1));
  int original = lua_gettop(L);
  SWIG_Lua_get_class_metatable(L,base_cls->fqname);
  int base = lua_gettop(L);
  SWIG_Lua_merge_tables(L, ".fn", original, base );
  SWIG_Lua_merge_tables(L, ".set", original, base );
  SWIG_Lua_merge_tables(L, ".get", original, base );
  lua_pop(L,1);
}

/* Function squashes all symbols from 'clss' bases into itself */
SWIGINTERN int  SWIG_Lua_class_squash_bases(lua_State *L, swig_lua_class *clss)
{
  int i;
  SWIG_Lua_get_class_metatable(L,clss->fqname);
  for(i=0;clss->base_names[i];i++)
  {
    if (clss->bases[i]==0) /* Somehow it's not found. Skip it */
      continue;
    /* Thing is: all bases are already registered. Thus they have already executed
     * this function. So we just need to squash them into us, because their bases
     * are already squashed into them. No need for recursion here!
     */
    SWIG_Lua_class_squash_base(L, clss->bases[i]);
  }
  lua_pop(L,1); /*tidy stack*/
}
#endif

#if (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_LUA) /* In elua this is useless */
/* helper add a variable to a registered class */
SWIGINTERN void  SWIG_Lua_add_variable(lua_State *L,const char *name,lua_CFunction getFn,lua_CFunction setFn)
{
  assert(lua_istable(L,-1));  /* just in case */
  SWIG_Lua_get_table(L,".get"); /* find the .get table */
  assert(lua_istable(L,-1));  /* just in case */
  SWIG_Lua_add_function(L,name,getFn);
  lua_pop(L,1);       /* tidy stack (remove table) */
  if (setFn)
  {
    SWIG_Lua_get_table(L,".set"); /* find the .set table */
    assert(lua_istable(L,-1));  /* just in case */
    SWIG_Lua_add_function(L,name,setFn);
    lua_pop(L,1);       /* tidy stack (remove table) */
  }
}

/* helper to recursively add class static details (static attributes, operations and constants) */
SWIGINTERN void SWIG_Lua_add_class_static_details(lua_State *L, swig_lua_class *clss)
{
  int i = 0;
  /* The class namespace table must be on the top of the stack */
  assert(lua_istable(L,-1));
  /* call all the base classes first: we can then override these later: */
  for(i=0;clss->bases[i];i++)
  {
    SWIG_Lua_add_class_static_details(L,clss->bases[i]);
  }

  SWIG_Lua_add_namespace_details(L, clss->cls_static);
}

SWIGINTERN void SWIG_Lua_add_class_user_metamethods(lua_State *L, swig_lua_class *clss); /* forward declaration */

/* helper to recursively add class details (attributes & operations) */
SWIGINTERN void  SWIG_Lua_add_class_instance_details(lua_State *L, swig_lua_class *clss)
{
  int i;
  size_t bases_count = 0;
  /* Add bases to .bases table */
  SWIG_Lua_get_table(L,".bases");
  assert(lua_istable(L,-1));  /* just in case */
  for(i=0;clss->bases[i];i++)
  {
    SWIG_Lua_get_class_metatable(L,clss->bases[i]->fqname);
    /* Base class must be already registered */
    assert(lua_istable(L,-1));
    lua_rawseti(L,-2,i+1); /* In lua indexing starts from 1 */
    bases_count++;
  }
  assert(lua_rawlen(L,-1) == bases_count);
  lua_pop(L,1); /* remove .bases table */
  /* add attributes */
  for(i=0;clss->attributes[i].name;i++){
    SWIG_Lua_add_variable(L,clss->attributes[i].name,clss->attributes[i].getmethod,clss->attributes[i].setmethod);
  }
  /* add methods to the metatable */
  SWIG_Lua_get_table(L,".fn"); /* find the .fn table */
  assert(lua_istable(L,-1));  /* just in case */
  for(i=0;clss->methods[i].name;i++){
    SWIG_Lua_add_function(L,clss->methods[i].name,clss->methods[i].func);
  }
  lua_pop(L,1);       /* tidy stack (remove table) */
  /* add operator overloads
    This adds methods from metatable array to metatable. Can mess up garbage
    collectind if someone defines __gc method
    */
  if(clss->metatable) {
    for(i=0;clss->metatable[i].name;i++) {
      SWIG_Lua_add_function(L,clss->metatable[i].name,clss->metatable[i].func);
    }
  }

#if !defined(SWIG_LUA_SQUASH_BASES)
  /* Adding metamethods that are defined in base classes. If bases were squashed
   * then it is obviously unnecessary
   */
  SWIG_Lua_add_class_user_metamethods(L, clss);
#endif
}

/* Helpers to add user defined class metamedhods - __add, __sub etc. The helpers are needed
   for the following issue: Lua runtime checks for metamethod existence with rawget function
   ignoring our SWIG-provided __index and __newindex functions. Thus our inheritance-aware method
   search algorithm doesn't work in such case. (Not to say that Lua runtime queries metamethod directly
   in metatable and not in object).
   Current solution is this: if somewhere in hierarchy metamethod __x is defined, then all descendants
   are automatically given a special proxy __x that calls the real __x method.
   Obvious idea - to copy __x instead of creating __x-proxy is wrong because if someone changes __x in runtime,
   those changes must be reflected in all descendants.
*/

SWIGRUNTIME int SWIG_Lua_resolve_metamethod(lua_State *L); /*forward declaration*/

/* The real function that resolves a metamethod.
 * Function searches given class and all it's bases(recursively) for first instance of something that is
 * not equal to SWIG_Lua_resolve_metatmethod. (Almost always this 'something' is actual metamethod implementation
 * and it is a SWIG-generated C function.). It returns value on the top of the L and there is no garbage below the
 * answer.
 * Returns 1 if found, 0 otherwise.
 * clss is class which metatable we will search for method
 * metamethod_name_idx is index in L where metamethod name (as string) lies
 * skip_check allows to skip searching metamethod in givel clss and immideatelly go to searching in bases. skip_check
 * is not caried to subsequent recursive calls - false is always passed. It is set to true only at first call from
 * SWIG_Lua_resolve_metamethod
 * */
SWIGINTERN int SWIG_Lua_do_resolve_metamethod(lua_State *L, const swig_lua_class *clss, int metamethod_name_idx,
    int skip_check)
{
  /* This function is called recursively */
  int result = 0;
  int i = 0;

  if (!skip_check) {
    SWIG_Lua_get_class_metatable(L, clss->fqname);
    lua_pushvalue(L, metamethod_name_idx);
    lua_rawget(L,-2);
    /* If this is cfunction and it is equal to SWIG_Lua_resolve_metamethod then
     * this isn't the function we are looking for :)
     * lua_tocfunction will return NULL if not cfunction
     */
    if (!lua_isnil(L,-1) && lua_tocfunction(L,-1) != SWIG_Lua_resolve_metamethod ) {
      lua_remove(L,-2); /* removing class metatable */
      return 1;
    }
    lua_pop(L,2); /* remove class metatable and query result */
  }

  /* Forwarding calls to bases */
  for(i=0;clss->bases[i];i++)
  {
    result = SWIG_Lua_do_resolve_metamethod(L, clss->bases[i], metamethod_name_idx, 0);
    if (result)
      break;
  }

  return result;
}

/* The proxy function for metamethod. All parameters are passed as cclosure. Searches for actual method
 * and calls it */
SWIGRUNTIME int SWIG_Lua_resolve_metamethod(lua_State *L)
{
  int numargs;
  int metamethod_name_idx;
  const swig_lua_class* clss;
  int result;

  lua_checkstack(L,5);
  numargs = lua_gettop(L); /* number of arguments to pass to actual metamethod */
  
  /* Get upvalues from closure */
  lua_pushvalue(L, lua_upvalueindex(1)); /*Get function name*/
  metamethod_name_idx = lua_gettop(L);
  
  lua_pushvalue(L, lua_upvalueindex(2));
  clss = (const swig_lua_class*)(lua_touserdata(L,-1));
  lua_pop(L,1); /* remove lightuserdata with clss from stack */

  /* Actual work */
  result = SWIG_Lua_do_resolve_metamethod(L, clss, metamethod_name_idx, 1);
  if (!result) {
   SWIG_Lua_pushferrstring(L,"The metamethod proxy is set, but it failed to find actual metamethod. Memory corruption is most likely explanation.");
   lua_error(L);
   return 0;
  }

  lua_remove(L,-2); /* remove metamethod key */
  lua_insert(L,1); /* move function to correct position */
  lua_call(L, numargs, LUA_MULTRET);
  return lua_gettop(L); /* return all results */
}


/* If given metamethod must be present in given class, then creates appropriate proxy
 * Returns 1 if successfully added, 0 if not added because no base class has it, -1
 * if method is defined in the class metatable itself
 */
SWIGINTERN int SWIG_Lua_add_class_user_metamethod(lua_State *L, swig_lua_class *clss, const int metatable_index)
{
  int key_index;
  int success = 0;
  int i = 0;

  /* metamethod name - on the top of the stack */
  assert(lua_isstring(L,-1));
  
  key_index = lua_gettop(L);

  /* Check whether method is already defined in metatable */
  lua_pushvalue(L,key_index); /* copy of the key */
  lua_gettable(L,metatable_index);
  if( !lua_isnil(L,-1) ) {
    lua_pop(L,1);
    return -1;
  }
  lua_pop(L,1); 

  /* Iterating over immediate bases */
  for(i=0;clss->bases[i];i++)
  {
    const swig_lua_class *base = clss->bases[i];
    SWIG_Lua_get_class_metatable(L, base->fqname);
    lua_pushvalue(L, key_index);
    lua_rawget(L, -2);
    if( !lua_isnil(L,-1) ) {
      lua_pushvalue(L, key_index); 

      /* Add proxy function */
      lua_pushvalue(L, key_index); /* first closure value is function name */
      lua_pushlightuserdata(L, clss); /* second closure value is swig_lua_class structure */
      lua_pushcclosure(L, SWIG_Lua_resolve_metamethod, 2);
      
      lua_rawset(L, metatable_index);
      success = 1;
    }
    lua_pop(L,1); /* remove function or nil */
    lua_pop(L,1); /* remove base class metatable */

    if( success )
      break;
  }

  return success; 
}

SWIGINTERN void SWIG_Lua_add_class_user_metamethods(lua_State *L, swig_lua_class *clss)
{
  int metatable_index;
  int metamethods_info_index;
  int tostring_undefined;
  int eq_undefined = 0;

  SWIG_Lua_get_class_metatable(L, clss->fqname);
  metatable_index = lua_gettop(L);
  SWIG_Lua_get_inheritable_metamethods(L);
  assert(lua_istable(L,-1));
  metamethods_info_index = lua_gettop(L);
  lua_pushnil(L); /* first key */
  while(lua_next(L, metamethods_info_index) != 0 ) {
    /* key at index -2, value at index -1 */
    const int is_inheritable = lua_toboolean(L,-2);
    lua_pop(L,1); /* remove value - we don't need it anymore */

    if(is_inheritable) { /* if metamethod is inheritable */
      SWIG_Lua_add_class_user_metamethod(L,clss,metatable_index);
    }
  }

  lua_pop(L,1); /* remove inheritable metatmethods table */

  /* Special handling for __tostring method */
  lua_pushstring(L, "__tostring");
  lua_pushvalue(L,-1);
  lua_rawget(L,metatable_index);
  tostring_undefined = lua_isnil(L,-1);
  lua_pop(L,1);
  if( tostring_undefined ) {
    lua_pushcfunction(L, SWIG_Lua_class_tostring);
    lua_rawset(L, metatable_index);
  } else {
    lua_pop(L,1); /* remove copy of the key */
  }

  /* Special handling for __eq method */
  lua_pushstring(L, "__eq");
  lua_pushvalue(L,-1);
  lua_rawget(L,metatable_index);
  eq_undefined = lua_isnil(L,-1);
  lua_pop(L,1);
  if( eq_undefined ) {
    lua_pushcfunction(L, SWIG_Lua_class_equal);
    lua_rawset(L, metatable_index);
  } else {
    lua_pop(L,1); /* remove copy of the key */
  }
  /* Warning: __index and __newindex are SWIG-defined. For user-defined operator[]
   * a __getitem/__setitem method should be defined
   */
  lua_pop(L,1); /* pop class metatable */
}

/* Register class static methods,attributes etc as well as constructor proxy */
SWIGINTERN void SWIG_Lua_class_register_static(lua_State *L, swig_lua_class *clss)
{
  const int SWIGUNUSED begin = lua_gettop(L);
  lua_checkstack(L,5); /* just in case */
  assert(lua_istable(L,-1));  /* just in case */
  assert(strcmp(clss->name, clss->cls_static->name) == 0); /* in class those 2 must be equal */

  SWIG_Lua_namespace_register(L,clss->cls_static, 1);

  assert(lua_istable(L,-1)); /* just in case */

  /*  add its constructor to module with the name of the class
  so you can do MyClass(...) as well as new_MyClass(...)
  BUT only if a constructor is defined
  (this overcomes the problem of pure virtual classes without constructors)*/
  if (clss->constructor)
  {
    lua_getmetatable(L,-1);
    assert(lua_istable(L,-1)); /* just in case */
    SWIG_Lua_add_function(L,"__call", clss->constructor);
    lua_pop(L,1);
  }

  assert(lua_istable(L,-1)); /* just in case */
  SWIG_Lua_add_class_static_details(L, clss);

  /* clear stack */
  lua_pop(L,1);
  assert( lua_gettop(L) == begin );
}

/* Performs the instance (non-static) class registration process. Metatable for class is created
 * and added to the class registry.
 */
SWIGINTERN void  SWIG_Lua_class_register_instance(lua_State *L,swig_lua_class *clss)
{
  const int SWIGUNUSED begin = lua_gettop(L);
  int i;
  /* if name already there (class is already registered) then do nothing */
  SWIG_Lua_get_class_registry(L);  /* get the registry */
  lua_pushstring(L,clss->fqname);  /* get the name */
  lua_rawget(L,-2);
  if(!lua_isnil(L,-1)) {
    lua_pop(L,2);
    assert(lua_gettop(L)==begin);
    return;
  }
  lua_pop(L,2); /* tidy stack */
  /* Recursively initialize all bases */
  for(i=0;clss->bases[i];i++)
  {
    SWIG_Lua_class_register_instance(L,clss->bases[i]);
  }
  /* Again, get registry and push name */
  SWIG_Lua_get_class_registry(L);  /* get the registry */
  lua_pushstring(L,clss->fqname);  /* get the name */
  lua_newtable(L);    /* create the metatable */
#if defined(SWIG_LUA_SQUASH_BASES) && (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_LUA)
  /* If squashing is requested, then merges all bases metatable into this one.
   * It would get us all special methods: __getitem, __add etc.
   * This would set .fn, .type, and other .xxx incorrectly, but we will overwrite it right away
   */
  {
    int new_metatable_index = lua_absindex(L,-1);
    for(i=0;clss->bases[i];i++)
    {
      int base_metatable;
      SWIG_Lua_get_class_metatable(L,clss->bases[i]->fqname);
      base_metatable = lua_absindex(L,-1);
      SWIG_Lua_merge_tables_by_index(L,new_metatable_index, base_metatable);
      lua_pop(L,1);
    }
  }
  /* And now we will overwrite all incorrectly set data */
#endif
  /* add string of class name called ".type" */
  lua_pushstring(L,".type");
  lua_pushstring(L,clss->fqname);
  lua_rawset(L,-3);
  /* add a table called bases */
  lua_pushstring(L,".bases");
  lua_newtable(L);
  lua_rawset(L,-3);
  /* add a table called ".get" */
  lua_pushstring(L,".get");
  lua_newtable(L);
  lua_rawset(L,-3);
  /* add a table called ".set" */
  lua_pushstring(L,".set");
  lua_newtable(L);
  lua_rawset(L,-3);
  /* add a table called ".fn" */
  lua_pushstring(L,".fn");
  lua_newtable(L);
  /* add manual disown method */
  SWIG_Lua_add_function(L,"__disown",SWIG_Lua_class_disown);
  lua_rawset(L,-3);
  /* add accessor fns for using the .get,.set&.fn */
  SWIG_Lua_add_function(L,"__index",SWIG_Lua_class_get);
  SWIG_Lua_add_function(L,"__newindex",SWIG_Lua_class_set);
  SWIG_Lua_add_function(L,"__gc",SWIG_Lua_class_destruct);
  /* add it */
  lua_rawset(L,-3);  /* metatable into registry */
  lua_pop(L,1);      /* tidy stack (remove registry) */
  assert(lua_gettop(L) == begin);

#if defined(SWIG_LUA_SQUASH_BASES) && (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_LUA)
  /* Now merge all symbols from .fn, .set, .get etc from bases to our tables */
  SWIG_Lua_class_squash_bases(L,clss);
#endif
  SWIG_Lua_get_class_metatable(L,clss->fqname);
  SWIG_Lua_add_class_instance_details(L,clss);  /* recursive adding of details (atts & ops) */
  lua_pop(L,1);      /* tidy stack (remove class metatable) */
  assert( lua_gettop(L) == begin );
}

SWIGINTERN void  SWIG_Lua_class_register(lua_State *L,swig_lua_class *clss)
{
  int SWIGUNUSED begin;
  assert(lua_istable(L,-1)); /* This is a table (module or namespace) where classes will be added */
  SWIG_Lua_class_register_instance(L,clss);
  SWIG_Lua_class_register_static(L,clss);

  /* Add links from static part to instance part and vice versa */
  /* [SWIG registry]                                   [Module]
   *    "MyClass" ----> [MyClass metatable] <=====     "MyClass" -+> [static part]
   *                     ".get" ----> ...        |                |     getmetatable()----|
   *                     ".set" ----> ...        |                |                       |
   *                     ".static" --------------)----------------/           [static part metatable]
   *                                             |                                ".get" --> ...
   *                                             |                                ".set" --> ....
   *                                             |=============================== ".instance"
   */
  begin = lua_gettop(L);
  lua_pushstring(L,clss->cls_static->name);
  lua_rawget(L,-2); /* get class static table */
  assert(lua_istable(L,-1));
  lua_getmetatable(L,-1);
  assert(lua_istable(L,-1)); /* get class static metatable */
  lua_pushstring(L,".instance"); /* prepare key */

  SWIG_Lua_get_class_metatable(L,clss->fqname); /* get class metatable */
  assert(lua_istable(L,-1));
  lua_pushstring(L,".static"); /* prepare key */
  lua_pushvalue(L, -4); /* push static class TABLE */
  assert(lua_istable(L,-1));
  lua_rawset(L,-3); /* assign static class table(!NOT metatable) as ".static" member of class metatable */
  lua_rawset(L,-3); /* assign class metatable as ".instance" member of class static METATABLE */
  lua_pop(L,2);
  assert(lua_gettop(L) == begin);
}
#endif /* SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_LUA */

#if (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_ELUA) || (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_ELUAC)
SWIGINTERN void SWIG_Lua_elua_class_register_instance(lua_State *L, swig_lua_class *clss)
{
  const int SWIGUNUSED begin = lua_gettop(L);
  int i;
  /* if name already there (class is already registered) then do nothing */
  SWIG_Lua_get_class_registry(L);  /* get the registry */
  lua_pushstring(L,clss->fqname);  /* get the name */
  lua_rawget(L,-2);
  if(!lua_isnil(L,-1)) {
    lua_pop(L,2);
    assert(lua_gettop(L)==begin);
    return;
  }
  lua_pop(L,2); /* tidy stack */
  /* Recursively initialize all bases */
  for(i=0;clss->bases[i];i++)
  {
    SWIG_Lua_elua_class_register_instance(L,clss->bases[i]);
  }
  /* Again, get registry and push name */
  SWIG_Lua_get_class_registry(L);  /* get the registry */
  lua_pushstring(L,clss->fqname);  /* get the name */
  assert(clss->metatable);
  lua_pushrotable(L, (void*)(clss->metatable));    /* create the metatable */
  lua_rawset(L,-3);
  lua_pop(L,1);
  assert(lua_gettop(L) == begin);
}
#endif /* elua && eluac */

/* -----------------------------------------------------------------------------
 * Class/structure conversion fns
 * ----------------------------------------------------------------------------- */

/* helper to add metatable to new lua object */
SWIGINTERN void SWIG_Lua_AddMetatable(lua_State *L,swig_type_info *type)
{
  if (type->clientdata)  /* there is clientdata: so add the metatable */
  {
    SWIG_Lua_get_class_metatable(L,((swig_lua_class*)(type->clientdata))->fqname);
    if (lua_istable(L,-1))
    {
      lua_setmetatable(L,-2);
    }
    else
    {
      lua_pop(L,1);
    }
  }
}

/* pushes a new object into the lua stack */
SWIGRUNTIME void SWIG_Lua_NewPointerObj(lua_State *L,void *ptr,swig_type_info *type, int own)
{
  swig_lua_userdata *usr;
  if (!ptr){
    lua_pushnil(L);
    return;
  }
  usr=(swig_lua_userdata*)lua_newuserdata(L,sizeof(swig_lua_userdata));  /* get data */
  usr->ptr=ptr;  /* set the ptr */
  usr->type=type;
  usr->own=own;
#if (SWIG_LUA_TARGET != SWIG_LUA_FLAVOR_ELUAC)
  SWIG_Lua_AddMetatable(L,type); /* add metatable */
#endif
}

/* takes a object from the lua stack & converts it into an object of the correct type
 (if possible) */
SWIGRUNTIME int  SWIG_Lua_ConvertPtr(lua_State *L,int index,void **ptr,swig_type_info *type,int flags)
{
  swig_lua_userdata *usr;
  swig_cast_info *cast;
  if (lua_isnil(L,index)){*ptr=0; return SWIG_OK;}    /* special case: lua nil => NULL pointer */
  usr=(swig_lua_userdata*)lua_touserdata(L,index);  /* get data */
  if (usr)
  {
    if (flags & SWIG_POINTER_DISOWN) /* must disown the object */
    {
        usr->own=0;
    }
    if (!type)            /* special cast void*, no casting fn */
    {
      *ptr=usr->ptr;
      return SWIG_OK; /* ok */
    }
    cast=SWIG_TypeCheckStruct(usr->type,type); /* performs normal type checking */
    if (cast)
    {
      int newmemory = 0;
      *ptr=SWIG_TypeCast(cast,usr->ptr,&newmemory);
      assert(!newmemory); /* newmemory handling not yet implemented */
      return SWIG_OK;  /* ok */
    }
  }
  return SWIG_ERROR;  /* error */
}

SWIGRUNTIME void* SWIG_Lua_MustGetPtr(lua_State *L,int index,swig_type_info *type,int flags,
       int argnum,const char *func_name){
  void *result;
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,index,&result,type,flags))){
    luaL_error (L,"Error in %s, expected a %s at argument number %d\n",
		func_name,(type && type->str)?type->str:"void*",argnum);
  }
  return result;
}

/* pushes a packed userdata. user for member fn pointers only */
SWIGRUNTIME void SWIG_Lua_NewPackedObj(lua_State *L,void *ptr,size_t size,swig_type_info *type)
{
  swig_lua_rawdata *raw;
  assert(ptr); /* not acceptable to pass in a NULL value */
  raw=(swig_lua_rawdata*)lua_newuserdata(L,sizeof(swig_lua_rawdata)-1+size);  /* alloc data */
  raw->type=type;
  raw->own=0;
  memcpy(raw->data,ptr,size); /* copy the data */
  SWIG_Lua_AddMetatable(L,type); /* add metatable */
}
    
/* converts a packed userdata. user for member fn pointers only */
SWIGRUNTIME int  SWIG_Lua_ConvertPacked(lua_State *L,int index,void *ptr,size_t size,swig_type_info *type)
{
  swig_lua_rawdata *raw;
  raw=(swig_lua_rawdata*)lua_touserdata(L,index);  /* get data */
  if (!raw) return SWIG_ERROR;  /* error */
  if (type==0 || type==raw->type) /* void* or identical type */
  {
    memcpy(ptr,raw->data,size); /* copy it */
    return SWIG_OK; /* ok */
  }
  return SWIG_ERROR;  /* error */
}

/* a function to get the typestring of a piece of data */
SWIGRUNTIME const char *SWIG_Lua_typename(lua_State *L, int tp)
{
  swig_lua_userdata *usr;
  if (lua_isuserdata(L,tp))
  {
    usr=(swig_lua_userdata*)lua_touserdata(L,tp);  /* get data */
    if (usr && usr->type && usr->type->str)
      return usr->type->str;
    return "userdata (unknown type)";
  }
  return lua_typename(L,lua_type(L,tp));
}

/* lua callable function to get the userdata's type */
SWIGRUNTIME int SWIG_Lua_type(lua_State *L)
{
  lua_pushstring(L,SWIG_Lua_typename(L,1));
  return 1;
}

/* -----------------------------------------------------------------------------
 * global variable support code: class/struct typemap functions
 * ----------------------------------------------------------------------------- */

#if ((SWIG_LUA_TARGET != SWIG_LUA_FLAVOR_ELUA) && (SWIG_LUA_TARGET != SWIG_LUA_FLAVOR_ELUAC))
/* Install Constants */
SWIGINTERN void
SWIG_Lua_InstallConstants(lua_State *L, swig_lua_const_info constants[]) {
  int i;
  for (i = 0; constants[i].type; i++) {
    switch(constants[i].type) {
    case SWIG_LUA_INT:
      lua_pushstring(L,constants[i].name);
      lua_pushnumber(L,(lua_Number)constants[i].lvalue);
      lua_rawset(L,-3);
      break;
    case SWIG_LUA_FLOAT:
      lua_pushstring(L,constants[i].name);
      lua_pushnumber(L,(lua_Number)constants[i].dvalue);
      lua_rawset(L,-3);
      break;
    case SWIG_LUA_CHAR:
      lua_pushstring(L,constants[i].name);
      lua_pushfstring(L,"%c",(char)constants[i].lvalue);
      lua_rawset(L,-3);
      break;
    case SWIG_LUA_STRING:
      lua_pushstring(L,constants[i].name);
      lua_pushstring(L,(char *) constants[i].pvalue);
      lua_rawset(L,-3);
      break;
    case SWIG_LUA_POINTER:
      lua_pushstring(L,constants[i].name);
      SWIG_NewPointerObj(L,constants[i].pvalue, *(constants[i]).ptype,0);
      lua_rawset(L,-3);
      break;
    case SWIG_LUA_BINARY:
      lua_pushstring(L,constants[i].name);
      SWIG_NewMemberObj(L,constants[i].pvalue,constants[i].lvalue,*(constants[i]).ptype);
      lua_rawset(L,-3);
      break;
    default:
      break;
    }
  }
}
#endif

/* -----------------------------------------------------------------------------
 * executing lua code from within the wrapper
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_DOSTRING_FAIL /* Allows redefining of error function */
#define SWIG_DOSTRING_FAIL(S) fprintf(stderr,"%s\n",S)
#endif
/* Executes a C string in Lua which is a really simple way of calling lua from C
Unfortunately lua keeps changing its APIs, so we need a conditional compile
In lua 5.0.X it's lua_dostring()
In lua 5.1.X it's luaL_dostring()
*/
SWIGINTERN int 
SWIG_Lua_dostring(lua_State *L, const char *str) {
  int ok,top;
  if (str==0 || str[0]==0) return 0; /* nothing to do */
  top=lua_gettop(L); /* save stack */
#if (defined(LUA_VERSION_NUM) && (LUA_VERSION_NUM>=501))
  ok=luaL_dostring(L,str);	/* looks like this is lua 5.1.X or later, good */
#else
  ok=lua_dostring(L,str);	/* might be lua 5.0.x, using lua_dostring */
#endif
  if (ok!=0) {
    SWIG_DOSTRING_FAIL(lua_tostring(L,-1));
  }
  lua_settop(L,top); /* restore the stack */
  return ok;
}    

#ifdef __cplusplus
}
#endif

/* ------------------------------ end luarun.swg  ------------------------------ */


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_FT_Library swig_types[0]
#define SWIGTYPE_p_List swig_types[1]
#define SWIGTYPE_p_PdfArray swig_types[2]
#define SWIGTYPE_p_PdfData swig_types[3]
#define SWIGTYPE_p_PdfDate swig_types[4]
#define SWIGTYPE_p_PdfDictionary swig_types[5]
#define SWIGTYPE_p_PdfEncrypt swig_types[6]
#define SWIGTYPE_p_PdfFont swig_types[7]
#define SWIGTYPE_p_PdfFontCache__EFontCreationFlags swig_types[8]
#define SWIGTYPE_p_PdfFontMetrics swig_types[9]
#define SWIGTYPE_p_PdfFontMetricsBase14 swig_types[10]
#define SWIGTYPE_p_PdfObject swig_types[11]
#define SWIGTYPE_p_PdfRefCountedBuffer swig_types[12]
#define SWIGTYPE_p_PdfRefCountedInputDevice swig_types[13]
#define SWIGTYPE_p_PdfStream swig_types[14]
#define SWIGTYPE_p_PoDoFo__NonPublic__PdfHintStream swig_types[15]
#define SWIGTYPE_p_PoDoFo__PODOFO_CharData swig_types[16]
#define SWIGTYPE_p_PoDoFo__PdfAcroForm swig_types[17]
#define SWIGTYPE_p_PoDoFo__PdfAction swig_types[18]
#define SWIGTYPE_p_PoDoFo__PdfAnnotation swig_types[19]
#define SWIGTYPE_p_PoDoFo__PdfArray swig_types[20]
#define SWIGTYPE_p_PoDoFo__PdfAxialShadingPattern swig_types[21]
#define SWIGTYPE_p_PoDoFo__PdfButton swig_types[22]
#define SWIGTYPE_p_PoDoFo__PdfCMapEncoding swig_types[23]
#define SWIGTYPE_p_PoDoFo__PdfCanvas swig_types[24]
#define SWIGTYPE_p_PoDoFo__PdfCheckBox swig_types[25]
#define SWIGTYPE_p_PoDoFo__PdfColor swig_types[26]
#define SWIGTYPE_p_PoDoFo__PdfComboBox swig_types[27]
#define SWIGTYPE_p_PoDoFo__PdfContents swig_types[28]
#define SWIGTYPE_p_PoDoFo__PdfDestination swig_types[29]
#define SWIGTYPE_p_PoDoFo__PdfDictionary swig_types[30]
#define SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding swig_types[31]
#define SWIGTYPE_p_PoDoFo__PdfDocument swig_types[32]
#define SWIGTYPE_p_PoDoFo__PdfElement swig_types[33]
#define SWIGTYPE_p_PoDoFo__PdfEncoding swig_types[34]
#define SWIGTYPE_p_PoDoFo__PdfEncodingDifference swig_types[35]
#define SWIGTYPE_p_PoDoFo__PdfEncodingObjectFactory swig_types[36]
#define SWIGTYPE_p_PoDoFo__PdfEncrypt swig_types[37]
#define SWIGTYPE_p_PoDoFo__PdfEncrypt__EPdfEncryptAlgorithm swig_types[38]
#define SWIGTYPE_p_PoDoFo__PdfEncrypt__EPdfKeyLength swig_types[39]
#define SWIGTYPE_p_PoDoFo__PdfError swig_types[40]
#define SWIGTYPE_p_PoDoFo__PdfErrorInfo swig_types[41]
#define SWIGTYPE_p_PoDoFo__PdfError__LogMessageCallback swig_types[42]
#define SWIGTYPE_p_PoDoFo__PdfExponentialFunction swig_types[43]
#define SWIGTYPE_p_PoDoFo__PdfExtGState swig_types[44]
#define SWIGTYPE_p_PoDoFo__PdfField swig_types[45]
#define SWIGTYPE_p_PoDoFo__PdfFileSpec swig_types[46]
#define SWIGTYPE_p_PoDoFo__PdfFont swig_types[47]
#define SWIGTYPE_p_PoDoFo__PdfFontCID swig_types[48]
#define SWIGTYPE_p_PoDoFo__PdfFontCache swig_types[49]
#define SWIGTYPE_p_PoDoFo__PdfFontConfigWrapper swig_types[50]
#define SWIGTYPE_p_PoDoFo__PdfFontFactory swig_types[51]
#define SWIGTYPE_p_PoDoFo__PdfFontMetrics swig_types[52]
#define SWIGTYPE_p_PoDoFo__PdfFontSimple swig_types[53]
#define SWIGTYPE_p_PoDoFo__PdfFontTTFSubset swig_types[54]
#define SWIGTYPE_p_PoDoFo__PdfFunction swig_types[55]
#define SWIGTYPE_p_PoDoFo__PdfFunctionBaseShadingPattern swig_types[56]
#define SWIGTYPE_p_PoDoFo__PdfIdentityEncoding swig_types[57]
#define SWIGTYPE_p_PoDoFo__PdfImage swig_types[58]
#define SWIGTYPE_p_PoDoFo__PdfInfo swig_types[59]
#define SWIGTYPE_p_PoDoFo__PdfInputDevice swig_types[60]
#define SWIGTYPE_p_PoDoFo__PdfInputStream swig_types[61]
#define SWIGTYPE_p_PoDoFo__PdfListBox swig_types[62]
#define SWIGTYPE_p_PoDoFo__PdfListField swig_types[63]
#define SWIGTYPE_p_PoDoFo__PdfMemDocument swig_types[64]
#define SWIGTYPE_p_PoDoFo__PdfName swig_types[65]
#define SWIGTYPE_p_PoDoFo__PdfNamesTree swig_types[66]
#define SWIGTYPE_p_PoDoFo__PdfObject swig_types[67]
#define SWIGTYPE_p_PoDoFo__PdfOutlineItem swig_types[68]
#define SWIGTYPE_p_PoDoFo__PdfOutlines swig_types[69]
#define SWIGTYPE_p_PoDoFo__PdfOutputDevice swig_types[70]
#define SWIGTYPE_p_PoDoFo__PdfPage swig_types[71]
#define SWIGTYPE_p_PoDoFo__PdfPagesTree swig_types[72]
#define SWIGTYPE_p_PoDoFo__PdfPagesTreeCache swig_types[73]
#define SWIGTYPE_p_PoDoFo__PdfPainter swig_types[74]
#define SWIGTYPE_p_PoDoFo__PdfPainterMM swig_types[75]
#define SWIGTYPE_p_PoDoFo__PdfPushButton swig_types[76]
#define SWIGTYPE_p_PoDoFo__PdfRadialShadingPattern swig_types[77]
#define SWIGTYPE_p_PoDoFo__PdfRect swig_types[78]
#define SWIGTYPE_p_PoDoFo__PdfReference swig_types[79]
#define SWIGTYPE_p_PoDoFo__PdfSampledFunction swig_types[80]
#define SWIGTYPE_p_PoDoFo__PdfShadingPattern swig_types[81]
#define SWIGTYPE_p_PoDoFo__PdfSigIncPainter swig_types[82]
#define SWIGTYPE_p_PoDoFo__PdfSignOutputDevice swig_types[83]
#define SWIGTYPE_p_PoDoFo__PdfSignatureField swig_types[84]
#define SWIGTYPE_p_PoDoFo__PdfSimpleTableModel swig_types[85]
#define SWIGTYPE_p_PoDoFo__PdfStitchingFunction swig_types[86]
#define SWIGTYPE_p_PoDoFo__PdfStream swig_types[87]
#define SWIGTYPE_p_PoDoFo__PdfStreamedDocument swig_types[88]
#define SWIGTYPE_p_PoDoFo__PdfString swig_types[89]
#define SWIGTYPE_p_PoDoFo__PdfTable swig_types[90]
#define SWIGTYPE_p_PoDoFo__PdfTableModel swig_types[91]
#define SWIGTYPE_p_PoDoFo__PdfTextField swig_types[92]
#define SWIGTYPE_p_PoDoFo__PdfTilingPattern swig_types[93]
#define SWIGTYPE_p_PoDoFo__PdfTriangleShadingPattern swig_types[94]
#define SWIGTYPE_p_PoDoFo__PdfVariant swig_types[95]
#define SWIGTYPE_p_PoDoFo__PdfVecObjects swig_types[96]
#define SWIGTYPE_p_PoDoFo__PdfXObject swig_types[97]
#define SWIGTYPE_p_PoDoFo__TFontCacheElement swig_types[98]
#define SWIGTYPE_p_PoDoFo__TLineElement swig_types[99]
#define SWIGTYPE_p_Sample swig_types[100]
#define SWIGTYPE_p_TVecFilters swig_types[101]
#define SWIGTYPE_p_a_4__char swig_types[102]
#define SWIGTYPE_p_a_9__char swig_types[103]
#define SWIGTYPE_p_char swig_types[104]
#define SWIGTYPE_p_double swig_types[105]
#define SWIGTYPE_p_f_r_PoDoFo__PdfRect_p_void__p_PoDoFo__PdfPage swig_types[106]
#define SWIGTYPE_p_p_char swig_types[107]
#define SWIGTYPE_p_pdf_int16 swig_types[108]
#define SWIGTYPE_p_pdf_int64 swig_types[109]
#define SWIGTYPE_p_pdf_long swig_types[110]
#define SWIGTYPE_p_pdf_uint16 swig_types[111]
#define SWIGTYPE_p_pdf_uint32 swig_types[112]
#define SWIGTYPE_p_ptrdiff_t swig_types[113]
#define SWIGTYPE_p_std__dequeT_PoDoFo__PdfErrorInfo_t swig_types[114]
#define SWIGTYPE_p_std__dequeT_PoDoFo__PdfErrorInfo_t__const_iterator swig_types[115]
#define SWIGTYPE_p_std__dequeT_PoDoFo__PdfErrorInfo_t__iterator swig_types[116]
#define SWIGTYPE_p_std__dequeT_PoDoFo__PdfObject_p_t swig_types[117]
#define SWIGTYPE_p_std__listT_PoDoFo__PdfFunction_t swig_types[118]
#define SWIGTYPE_p_std__listT_char_t swig_types[119]
#define SWIGTYPE_p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t swig_types[120]
#define SWIGTYPE_p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t__const_iterator swig_types[121]
#define SWIGTYPE_p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t__iterator swig_types[122]
#define SWIGTYPE_p_std__ostringstream swig_types[123]
#define SWIGTYPE_p_std__string swig_types[124]
#define SWIGTYPE_p_std__vectorT_PdfExtension_t swig_types[125]
#define SWIGTYPE_p_std__vectorT_PoDoFo__PdfObject_p_t swig_types[126]
#define SWIGTYPE_p_std__vectorT_PoDoFo__PdfPage_p_t swig_types[127]
#define SWIGTYPE_p_std__vectorT_PoDoFo__PdfRect_t swig_types[128]
#define SWIGTYPE_p_std__vectorT_PoDoFo__PdfString_t swig_types[129]
#define SWIGTYPE_p_std__wstring swig_types[130]
#define SWIGTYPE_p_unsigned_char swig_types[131]
#define SWIGTYPE_p_void swig_types[132]
#define SWIGTYPE_p_wchar_t swig_types[133]
static swig_type_info *swig_types[135];
static swig_module_info swig_module = {swig_types, 134, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#define SWIG_name      "podofo"
#define SWIG_init      luaopen_podofo
#define SWIG_init_user luaopen_podofo_user

#define SWIG_LUACODE   luaopen_podofo_luacode

namespace swig {
typedef struct{} LANGUAGE_OBJ;
}


#include <podofo/podofo.h>
using namespace PoDoFo;


SWIGINTERN int SWIG_lua_isnilstring(lua_State *L, int idx) {
  int ret = lua_isstring(L, idx);
  if (!ret)
   ret = lua_isnil(L, idx);
  return ret;
}

#ifdef __cplusplus
extern "C" {
#endif
static int _wrap_ePdfVersion_Default_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::EPdfVersion result;
  
  SWIG_check_num_args("PoDoFo::ePdfVersion_Default",0,0)
  result = (PoDoFo::EPdfVersion)(PoDoFo::EPdfVersion)PoDoFo::ePdfVersion_Default;
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ePdfWriteMode_Default_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::EPdfWriteMode result;
  
  SWIG_check_num_args("PoDoFo::ePdfWriteMode_Default",0,0)
  result = (PoDoFo::EPdfWriteMode)(PoDoFo::EPdfWriteMode)PoDoFo::ePdfWriteMode_Default;
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ePdfCreateObject_get(lua_State* L) {
  int SWIG_arg = 0;
  bool result;
  
  SWIG_check_num_args("PoDoFo::ePdfCreateObject",0,0)
  result = (bool)(bool)PoDoFo::ePdfCreateObject;
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_ePdfDontCreateObject_get(lua_State* L) {
  int SWIG_arg = 0;
  bool result;
  
  SWIG_check_num_args("PoDoFo::ePdfDontCreateObject",0,0)
  result = (bool)(bool)PoDoFo::ePdfDontCreateObject;
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_s_szPdfVersions_get(lua_State* L) {
  int SWIG_arg = 0;
  char (*result)[9] = 0 ;
  
  SWIG_check_num_args("PoDoFo::s_szPdfVersions",0,0)
  result = (char (*)[9])(char (*)[9])PoDoFo::s_szPdfVersions;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_a_9__char,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_s_szPdfVersionNums_get(lua_State* L) {
  int SWIG_arg = 0;
  char (*result)[4] = 0 ;
  
  SWIG_check_num_args("PoDoFo::s_szPdfVersionNums",0,0)
  result = (char (*)[4])(char (*)[4])PoDoFo::s_szPdfVersionNums;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_a_4__char,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_s_nNumWhiteSpaces_get(lua_State* L) {
  int SWIG_arg = 0;
  int result;
  
  SWIG_check_num_args("PoDoFo::s_nNumWhiteSpaces",0,0)
  result = (int)(int)PoDoFo::s_nNumWhiteSpaces;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_s_cWhiteSpaces_get(lua_State* L) {
  int SWIG_arg = 0;
  char *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::s_cWhiteSpaces",0,0)
  result = (char *)(char *)PoDoFo::s_cWhiteSpaces;
  lua_pushstring(L,(const char *)result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_s_nNumDelimiters_get(lua_State* L) {
  int SWIG_arg = 0;
  int result;
  
  SWIG_check_num_args("PoDoFo::s_nNumDelimiters",0,0)
  result = (int)(int)PoDoFo::s_nNumDelimiters;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_s_cDelimiters_get(lua_State* L) {
  int SWIG_arg = 0;
  char *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::s_cDelimiters",0,0)
  result = (char *)(char *)PoDoFo::s_cDelimiters;
  lua_pushstring(L,(const char *)result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfElement_GetObject__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfElement *arg1 = (PoDoFo::PdfElement *) 0 ;
  PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfElement::GetObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfElement::GetObject",1,"PoDoFo::PdfElement *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfElement,0))){
    SWIG_fail_ptr("PdfElement_GetObject",1,SWIGTYPE_p_PoDoFo__PdfElement);
  }
  
  {
    try {
      result = (PdfObject *)(arg1)->GetObject();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfElement_GetObject__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfElement *arg1 = (PoDoFo::PdfElement *) 0 ;
  PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfElement::GetObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfElement::GetObject",1,"PoDoFo::PdfElement const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfElement,0))){
    SWIG_fail_ptr("PdfElement_GetObject",1,SWIGTYPE_p_PoDoFo__PdfElement);
  }
  
  {
    try {
      result = (PdfObject *)((PoDoFo::PdfElement const *)arg1)->GetObject();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfElement_GetObject(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfElement, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfElement_GetObject__SWIG_0(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfElement, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfElement_GetObject__SWIG_1(L);
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfElement_GetObject'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfElement::GetObject()\n"
    "    PoDoFo::PdfElement::GetObject() const\n");
  lua_error(L);return 0;
}


static void swig_delete_PdfElement(void *obj) {
PoDoFo::PdfElement *arg1 = (PoDoFo::PdfElement *) obj;
delete arg1;
}
static swig_lua_attribute swig_PdfElement_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfElement_methods[]= {
    { "GetObject", _wrap_PdfElement_GetObject},
    {0,0}
};
static swig_lua_method swig_PdfElement_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfElement_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfElement_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfElement_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfElement_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfElement_Sf_SwigStatic = {
    "PdfElement",
    swig_PdfElement_Sf_SwigStatic_methods,
    swig_PdfElement_Sf_SwigStatic_attributes,
    swig_PdfElement_Sf_SwigStatic_constants,
    swig_PdfElement_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfElement_bases[] = {0};
static const char *swig_PdfElement_base_names[] = {0};
static swig_lua_class _wrap_class_PdfElement = { "PdfElement", "PdfElement", &SWIGTYPE_p_PoDoFo__PdfElement,0, swig_delete_PdfElement, swig_PdfElement_methods, swig_PdfElement_attributes, &swig_PdfElement_Sf_SwigStatic, swig_PdfElement_meta, swig_PdfElement_bases, swig_PdfElement_base_names };

static int _wrap_new_PdfAcroForm__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::EPdfAcroFormDefaulAppearance arg2 ;
  PoDoFo::PdfAcroForm *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAcroForm::PdfAcroForm",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAcroForm::PdfAcroForm",1,"PoDoFo::PdfDocument *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfAcroForm::PdfAcroForm",2,"PoDoFo::EPdfAcroFormDefaulAppearance");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfAcroForm",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (PoDoFo::EPdfAcroFormDefaulAppearance)(int)lua_tonumber(L, 2);
  {
    try {
      result = (PoDoFo::PdfAcroForm *)new PoDoFo::PdfAcroForm(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAcroForm,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfAcroForm__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfAcroForm *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAcroForm::PdfAcroForm",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAcroForm::PdfAcroForm",1,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfAcroForm",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfAcroForm *)new PoDoFo::PdfAcroForm(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAcroForm,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfAcroForm__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PdfObject *arg2 = (PdfObject *) 0 ;
  PoDoFo::EPdfAcroFormDefaulAppearance arg3 ;
  PoDoFo::PdfAcroForm *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAcroForm::PdfAcroForm",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAcroForm::PdfAcroForm",1,"PoDoFo::PdfDocument *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfAcroForm::PdfAcroForm",2,"PdfObject *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfAcroForm::PdfAcroForm",3,"PoDoFo::EPdfAcroFormDefaulAppearance");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfAcroForm",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PdfObject,0))){
    SWIG_fail_ptr("new_PdfAcroForm",2,SWIGTYPE_p_PdfObject);
  }
  
  arg3 = (PoDoFo::EPdfAcroFormDefaulAppearance)(int)lua_tonumber(L, 3);
  {
    try {
      result = (PoDoFo::PdfAcroForm *)new PoDoFo::PdfAcroForm(arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAcroForm,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfAcroForm__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PdfObject *arg2 = (PdfObject *) 0 ;
  PoDoFo::PdfAcroForm *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAcroForm::PdfAcroForm",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAcroForm::PdfAcroForm",1,"PoDoFo::PdfDocument *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfAcroForm::PdfAcroForm",2,"PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfAcroForm",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PdfObject,0))){
    SWIG_fail_ptr("new_PdfAcroForm",2,SWIGTYPE_p_PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfAcroForm *)new PoDoFo::PdfAcroForm(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAcroForm,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfAcroForm(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfAcroForm__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PdfObject, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfAcroForm__SWIG_3(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_new_PdfAcroForm__SWIG_0(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PdfObject, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_new_PdfAcroForm__SWIG_2(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfAcroForm'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfAcroForm::PdfAcroForm(PoDoFo::PdfDocument *,PoDoFo::EPdfAcroFormDefaulAppearance)\n"
    "    PoDoFo::PdfAcroForm::PdfAcroForm(PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfAcroForm::PdfAcroForm(PoDoFo::PdfDocument *,PdfObject *,PoDoFo::EPdfAcroFormDefaulAppearance)\n"
    "    PoDoFo::PdfAcroForm::PdfAcroForm(PoDoFo::PdfDocument *,PdfObject *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfAcroForm_GetDocument(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAcroForm *arg1 = (PoDoFo::PdfAcroForm *) 0 ;
  PoDoFo::PdfDocument *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAcroForm::GetDocument",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAcroForm::GetDocument",1,"PoDoFo::PdfAcroForm *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAcroForm,0))){
    SWIG_fail_ptr("PdfAcroForm_GetDocument",1,SWIGTYPE_p_PoDoFo__PdfAcroForm);
  }
  
  {
    try {
      result = (PoDoFo::PdfDocument *)(arg1)->GetDocument();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDocument,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAcroForm_SetNeedAppearances(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAcroForm *arg1 = (PoDoFo::PdfAcroForm *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfAcroForm::SetNeedAppearances",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAcroForm::SetNeedAppearances",1,"PoDoFo::PdfAcroForm *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfAcroForm::SetNeedAppearances",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAcroForm,0))){
    SWIG_fail_ptr("PdfAcroForm_SetNeedAppearances",1,SWIGTYPE_p_PoDoFo__PdfAcroForm);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetNeedAppearances(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAcroForm_GetNeedAppearances(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAcroForm *arg1 = (PoDoFo::PdfAcroForm *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfAcroForm::GetNeedAppearances",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAcroForm::GetNeedAppearances",1,"PoDoFo::PdfAcroForm const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAcroForm,0))){
    SWIG_fail_ptr("PdfAcroForm_GetNeedAppearances",1,SWIGTYPE_p_PoDoFo__PdfAcroForm);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfAcroForm const *)arg1)->GetNeedAppearances();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfAcroForm(void *obj) {
PoDoFo::PdfAcroForm *arg1 = (PoDoFo::PdfAcroForm *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfAcroForm(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfAcroForm);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfAcroForm_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfAcroForm_methods[]= {
    { "GetDocument", _wrap_PdfAcroForm_GetDocument},
    { "SetNeedAppearances", _wrap_PdfAcroForm_SetNeedAppearances},
    { "GetNeedAppearances", _wrap_PdfAcroForm_GetNeedAppearances},
    {0,0}
};
static swig_lua_method swig_PdfAcroForm_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfAcroForm_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfAcroForm_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfAcroForm_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfAcroForm_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfAcroForm_Sf_SwigStatic = {
    "PdfAcroForm",
    swig_PdfAcroForm_Sf_SwigStatic_methods,
    swig_PdfAcroForm_Sf_SwigStatic_attributes,
    swig_PdfAcroForm_Sf_SwigStatic_constants,
    swig_PdfAcroForm_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfAcroForm_bases[] = {0,0};
static const char *swig_PdfAcroForm_base_names[] = {"PoDoFo::PdfElement *",0};
static swig_lua_class _wrap_class_PdfAcroForm = { "PdfAcroForm", "PdfAcroForm", &SWIGTYPE_p_PoDoFo__PdfAcroForm,_proxy__wrap_new_PdfAcroForm, swig_delete_PdfAcroForm, swig_PdfAcroForm_methods, swig_PdfAcroForm_attributes, &swig_PdfAcroForm_Sf_SwigStatic, swig_PdfAcroForm_meta, swig_PdfAcroForm_bases, swig_PdfAcroForm_base_names };

static int _wrap_new_PdfAction__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::EPdfAction arg1 ;
  PoDoFo::PdfVecObjects *arg2 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfAction *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAction::PdfAction",2,2)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfAction::PdfAction",1,"PoDoFo::EPdfAction");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfAction::PdfAction",2,"PoDoFo::PdfVecObjects *");
  arg1 = (PoDoFo::EPdfAction)(int)lua_tonumber(L, 1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfAction",2,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfAction *)new PoDoFo::PdfAction(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAction,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfAction__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::EPdfAction arg1 ;
  PoDoFo::PdfDocument *arg2 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfAction *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAction::PdfAction",2,2)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfAction::PdfAction",1,"PoDoFo::EPdfAction");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfAction::PdfAction",2,"PoDoFo::PdfDocument *");
  arg1 = (PoDoFo::EPdfAction)(int)lua_tonumber(L, 1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfAction",2,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfAction *)new PoDoFo::PdfAction(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAction,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfAction__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfAction *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAction::PdfAction",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAction::PdfAction",1,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfAction",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfAction *)new PoDoFo::PdfAction(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAction,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfAction(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfAction__SWIG_2(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfAction__SWIG_1(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfAction__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfAction'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfAction::PdfAction(PoDoFo::EPdfAction,PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfAction::PdfAction(PoDoFo::EPdfAction,PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfAction::PdfAction(PoDoFo::PdfObject *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfAction_SetURI(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAction *arg1 = (PoDoFo::PdfAction *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAction::SetURI",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAction::SetURI",1,"PoDoFo::PdfAction *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfAction::SetURI",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfAction_SetURI",1,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfAction_SetURI",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetURI((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAction_GetURI(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAction *arg1 = (PoDoFo::PdfAction *) 0 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfAction::GetURI",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAction::GetURI",1,"PoDoFo::PdfAction const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfAction_GetURI",1,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      result = ((PoDoFo::PdfAction const *)arg1)->GetURI();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAction_HasURI(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAction *arg1 = (PoDoFo::PdfAction *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfAction::HasURI",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAction::HasURI",1,"PoDoFo::PdfAction const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfAction_HasURI",1,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfAction const *)arg1)->HasURI();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAction_SetScript(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAction *arg1 = (PoDoFo::PdfAction *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAction::SetScript",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAction::SetScript",1,"PoDoFo::PdfAction *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfAction::SetScript",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfAction_SetScript",1,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfAction_SetScript",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetScript((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAction_GetScript(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAction *arg1 = (PoDoFo::PdfAction *) 0 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfAction::GetScript",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAction::GetScript",1,"PoDoFo::PdfAction const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfAction_GetScript",1,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      result = ((PoDoFo::PdfAction const *)arg1)->GetScript();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAction_HasScript(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAction *arg1 = (PoDoFo::PdfAction *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfAction::HasScript",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAction::HasScript",1,"PoDoFo::PdfAction const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfAction_HasScript",1,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfAction const *)arg1)->HasScript();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAction_GetType(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAction *arg1 = (PoDoFo::PdfAction *) 0 ;
  PoDoFo::EPdfAction result;
  
  SWIG_check_num_args("PoDoFo::PdfAction::GetType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAction::GetType",1,"PoDoFo::PdfAction const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfAction_GetType",1,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      result = (PoDoFo::EPdfAction)((PoDoFo::PdfAction const *)arg1)->GetType();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAction_AddToDictionary(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAction *arg1 = (PoDoFo::PdfAction *) 0 ;
  PdfDictionary *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAction::AddToDictionary",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAction::AddToDictionary",1,"PoDoFo::PdfAction const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfAction::AddToDictionary",2,"PdfDictionary &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfAction_AddToDictionary",1,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PdfDictionary,0))){
    SWIG_fail_ptr("PdfAction_AddToDictionary",2,SWIGTYPE_p_PdfDictionary);
  }
  
  {
    try {
      ((PoDoFo::PdfAction const *)arg1)->AddToDictionary(*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfAction(void *obj) {
PoDoFo::PdfAction *arg1 = (PoDoFo::PdfAction *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfAction(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfAction);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfAction_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfAction_methods[]= {
    { "SetURI", _wrap_PdfAction_SetURI},
    { "GetURI", _wrap_PdfAction_GetURI},
    { "HasURI", _wrap_PdfAction_HasURI},
    { "SetScript", _wrap_PdfAction_SetScript},
    { "GetScript", _wrap_PdfAction_GetScript},
    { "HasScript", _wrap_PdfAction_HasScript},
    { "GetType", _wrap_PdfAction_GetType},
    { "AddToDictionary", _wrap_PdfAction_AddToDictionary},
    {0,0}
};
static swig_lua_method swig_PdfAction_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfAction_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfAction_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfAction_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfAction_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfAction_Sf_SwigStatic = {
    "PdfAction",
    swig_PdfAction_Sf_SwigStatic_methods,
    swig_PdfAction_Sf_SwigStatic_attributes,
    swig_PdfAction_Sf_SwigStatic_constants,
    swig_PdfAction_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfAction_bases[] = {0,0};
static const char *swig_PdfAction_base_names[] = {"PoDoFo::PdfElement *",0};
static swig_lua_class _wrap_class_PdfAction = { "PdfAction", "PdfAction", &SWIGTYPE_p_PoDoFo__PdfAction,_proxy__wrap_new_PdfAction, swig_delete_PdfAction, swig_PdfAction_methods, swig_PdfAction_attributes, &swig_PdfAction_Sf_SwigStatic, swig_PdfAction_meta, swig_PdfAction_bases, swig_PdfAction_base_names };

static int _wrap_new_PdfDestination__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfVecObjects *arg1 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfDestination *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::PdfDestination",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::PdfDestination",1,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfDestination",1,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfDestination *)new PoDoFo::PdfDestination(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDestination,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDestination__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfDocument *arg2 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfDestination *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::PdfDestination",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::PdfDestination",1,"PoDoFo::PdfObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfDestination::PdfDestination",2,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfDestination",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfDestination",2,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfDestination *)new PoDoFo::PdfDestination(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDestination,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDestination__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfVecObjects *arg2 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfDestination *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::PdfDestination",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::PdfDestination",1,"PoDoFo::PdfObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfDestination::PdfDestination",2,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfDestination",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfDestination",2,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfDestination *)new PoDoFo::PdfDestination(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDestination,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDestination__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::EPdfDestinationFit arg2 ;
  PoDoFo::PdfDestination *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::PdfDestination",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::PdfDestination",1,"PoDoFo::PdfPage const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfDestination::PdfDestination",2,"PoDoFo::EPdfDestinationFit");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfDestination",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  arg2 = (PoDoFo::EPdfDestinationFit)(int)lua_tonumber(L, 2);
  {
    try {
      result = (PoDoFo::PdfDestination *)new PoDoFo::PdfDestination((PoDoFo::PdfPage const *)arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDestination,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDestination__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfDestination *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::PdfDestination",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::PdfDestination",1,"PoDoFo::PdfPage const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfDestination",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  {
    try {
      result = (PoDoFo::PdfDestination *)new PoDoFo::PdfDestination((PoDoFo::PdfPage const *)arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDestination,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDestination__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfDestination *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::PdfDestination",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::PdfDestination",1,"PoDoFo::PdfPage const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDestination::PdfDestination",2,"PoDoFo::PdfRect const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfDestination",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfDestination",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  {
    try {
      result = (PoDoFo::PdfDestination *)new PoDoFo::PdfDestination((PoDoFo::PdfPage const *)arg1,(PoDoFo::PdfRect const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDestination,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDestination__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  PoDoFo::PdfDestination *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::PdfDestination",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::PdfDestination",1,"PoDoFo::PdfPage const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfDestination::PdfDestination",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfDestination::PdfDestination",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfDestination::PdfDestination",4,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfDestination",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  {
    try {
      result = (PoDoFo::PdfDestination *)new PoDoFo::PdfDestination((PoDoFo::PdfPage const *)arg1,arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDestination,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDestination__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::EPdfDestinationFit arg2 ;
  double arg3 ;
  PoDoFo::PdfDestination *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::PdfDestination",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::PdfDestination",1,"PoDoFo::PdfPage const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfDestination::PdfDestination",2,"PoDoFo::EPdfDestinationFit");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfDestination::PdfDestination",3,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfDestination",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  arg2 = (PoDoFo::EPdfDestinationFit)(int)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  {
    try {
      result = (PoDoFo::PdfDestination *)new PoDoFo::PdfDestination((PoDoFo::PdfPage const *)arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDestination,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDestination__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDestination *arg1 = 0 ;
  PoDoFo::PdfDestination *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::PdfDestination",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::PdfDestination",1,"PoDoFo::PdfDestination const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("new_PdfDestination",1,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  {
    try {
      result = (PoDoFo::PdfDestination *)new PoDoFo::PdfDestination((PoDoFo::PdfDestination const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDestination,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDestination(lua_State* L) {
  int argc;
  int argv[5]={
    1,2,3,4,5
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfDestination__SWIG_0(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfDestination__SWIG_4(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDestination, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfDestination__SWIG_8(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfDestination__SWIG_5(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfDestination__SWIG_1(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_new_PdfDestination__SWIG_3(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfDestination__SWIG_2(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_new_PdfDestination__SWIG_7(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_new_PdfDestination__SWIG_6(L);
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfDestination'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfDestination::PdfDestination(PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfDestination::PdfDestination(PoDoFo::PdfObject *,PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfDestination::PdfDestination(PoDoFo::PdfObject *,PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfDestination::PdfDestination(PoDoFo::PdfPage const *,PoDoFo::EPdfDestinationFit)\n"
    "    PoDoFo::PdfDestination::PdfDestination(PoDoFo::PdfPage const *)\n"
    "    PoDoFo::PdfDestination::PdfDestination(PoDoFo::PdfPage const *,PoDoFo::PdfRect const &)\n"
    "    PoDoFo::PdfDestination::PdfDestination(PoDoFo::PdfPage const *,double,double,double)\n"
    "    PoDoFo::PdfDestination::PdfDestination(PoDoFo::PdfPage const *,PoDoFo::EPdfDestinationFit,double)\n"
    "    PoDoFo::PdfDestination::PdfDestination(PoDoFo::PdfDestination const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfDestination_GetPage__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDestination *arg1 = (PoDoFo::PdfDestination *) 0 ;
  PoDoFo::PdfDocument *arg2 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfPage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::GetPage",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::GetPage",1,"PoDoFo::PdfDestination *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfDestination::GetPage",2,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("PdfDestination_GetPage",1,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDestination_GetPage",2,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfPage *)(arg1)->GetPage(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPage,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDestination_GetPage__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDestination *arg1 = (PoDoFo::PdfDestination *) 0 ;
  PoDoFo::PdfVecObjects *arg2 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfPage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::GetPage",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::GetPage",1,"PoDoFo::PdfDestination *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfDestination::GetPage",2,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("PdfDestination_GetPage",1,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("PdfDestination_GetPage",2,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfPage *)(arg1)->GetPage(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPage,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDestination_GetPage(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDestination, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfDestination_GetPage__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDestination, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfDestination_GetPage__SWIG_1(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfDestination_GetPage'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfDestination::GetPage(PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfDestination::GetPage(PoDoFo::PdfVecObjects *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfDestination_GetType(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDestination *arg1 = (PoDoFo::PdfDestination *) 0 ;
  PoDoFo::EPdfDestinationType result;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::GetType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::GetType",1,"PoDoFo::PdfDestination const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("PdfDestination_GetType",1,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  {
    try {
      result = (PoDoFo::EPdfDestinationType)((PoDoFo::PdfDestination const *)arg1)->GetType();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDestination_GetZoom(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDestination *arg1 = (PoDoFo::PdfDestination *) 0 ;
  double result;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::GetZoom",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::GetZoom",1,"PoDoFo::PdfDestination const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("PdfDestination_GetZoom",1,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  {
    try {
      result = (double)((PoDoFo::PdfDestination const *)arg1)->GetZoom();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDestination_GetRect(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDestination *arg1 = (PoDoFo::PdfDestination *) 0 ;
  PoDoFo::PdfRect result;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::GetRect",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::GetRect",1,"PoDoFo::PdfDestination const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("PdfDestination_GetRect",1,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  {
    try {
      result = ((PoDoFo::PdfDestination const *)arg1)->GetRect();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfRect * resultptr = new PoDoFo::PdfRect((const PoDoFo::PdfRect &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDestination_GetTop(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDestination *arg1 = (PoDoFo::PdfDestination *) 0 ;
  double result;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::GetTop",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::GetTop",1,"PoDoFo::PdfDestination const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("PdfDestination_GetTop",1,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  {
    try {
      result = (double)((PoDoFo::PdfDestination const *)arg1)->GetTop();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDestination_GetLeft(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDestination *arg1 = (PoDoFo::PdfDestination *) 0 ;
  double result;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::GetLeft",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::GetLeft",1,"PoDoFo::PdfDestination const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("PdfDestination_GetLeft",1,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  {
    try {
      result = (double)((PoDoFo::PdfDestination const *)arg1)->GetLeft();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDestination_GetDValue(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDestination *arg1 = (PoDoFo::PdfDestination *) 0 ;
  double result;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::GetDValue",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::GetDValue",1,"PoDoFo::PdfDestination const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("PdfDestination_GetDValue",1,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  {
    try {
      result = (double)((PoDoFo::PdfDestination const *)arg1)->GetDValue();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDestination_GetObject__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDestination *arg1 = (PoDoFo::PdfDestination *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::GetObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::GetObject",1,"PoDoFo::PdfDestination *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("PdfDestination_GetObject",1,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)(arg1)->GetObject();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDestination_GetObject__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDestination *arg1 = (PoDoFo::PdfDestination *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::GetObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::GetObject",1,"PoDoFo::PdfDestination const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("PdfDestination_GetObject",1,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfDestination const *)arg1)->GetObject();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDestination_GetObject(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDestination, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfDestination_GetObject__SWIG_0(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDestination, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfDestination_GetObject__SWIG_1(L);
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfDestination_GetObject'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfDestination::GetObject()\n"
    "    PoDoFo::PdfDestination::GetObject() const\n");
  lua_error(L);return 0;
}


static int _wrap_PdfDestination_GetArray__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDestination *arg1 = (PoDoFo::PdfDestination *) 0 ;
  PdfArray *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::GetArray",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::GetArray",1,"PoDoFo::PdfDestination *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("PdfDestination_GetArray",1,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  {
    try {
      result = (PdfArray *) &(arg1)->GetArray();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PdfArray,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDestination_GetArray__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDestination *arg1 = (PoDoFo::PdfDestination *) 0 ;
  PdfArray *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::GetArray",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::GetArray",1,"PoDoFo::PdfDestination const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("PdfDestination_GetArray",1,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  {
    try {
      result = (PdfArray *) &((PoDoFo::PdfDestination const *)arg1)->GetArray();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PdfArray,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDestination_GetArray(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDestination, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfDestination_GetArray__SWIG_0(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDestination, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfDestination_GetArray__SWIG_1(L);
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfDestination_GetArray'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfDestination::GetArray()\n"
    "    PoDoFo::PdfDestination::GetArray() const\n");
  lua_error(L);return 0;
}


static int _wrap_PdfDestination_AddToDictionary(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDestination *arg1 = (PoDoFo::PdfDestination *) 0 ;
  PdfDictionary *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDestination::AddToDictionary",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDestination::AddToDictionary",1,"PoDoFo::PdfDestination const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDestination::AddToDictionary",2,"PdfDictionary &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("PdfDestination_AddToDictionary",1,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PdfDictionary,0))){
    SWIG_fail_ptr("PdfDestination_AddToDictionary",2,SWIGTYPE_p_PdfDictionary);
  }
  
  {
    try {
      ((PoDoFo::PdfDestination const *)arg1)->AddToDictionary(*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfDestination(void *obj) {
PoDoFo::PdfDestination *arg1 = (PoDoFo::PdfDestination *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfDestination(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfDestination);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfDestination_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfDestination_methods[]= {
    { "GetPage", _wrap_PdfDestination_GetPage},
    { "GetType", _wrap_PdfDestination_GetType},
    { "GetZoom", _wrap_PdfDestination_GetZoom},
    { "GetRect", _wrap_PdfDestination_GetRect},
    { "GetTop", _wrap_PdfDestination_GetTop},
    { "GetLeft", _wrap_PdfDestination_GetLeft},
    { "GetDValue", _wrap_PdfDestination_GetDValue},
    { "GetObject", _wrap_PdfDestination_GetObject},
    { "GetArray", _wrap_PdfDestination_GetArray},
    { "AddToDictionary", _wrap_PdfDestination_AddToDictionary},
    {0,0}
};
static swig_lua_method swig_PdfDestination_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfDestination_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfDestination_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfDestination_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfDestination_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfDestination_Sf_SwigStatic = {
    "PdfDestination",
    swig_PdfDestination_Sf_SwigStatic_methods,
    swig_PdfDestination_Sf_SwigStatic_attributes,
    swig_PdfDestination_Sf_SwigStatic_constants,
    swig_PdfDestination_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfDestination_bases[] = {0};
static const char *swig_PdfDestination_base_names[] = {0};
static swig_lua_class _wrap_class_PdfDestination = { "PdfDestination", "PdfDestination", &SWIGTYPE_p_PoDoFo__PdfDestination,_proxy__wrap_new_PdfDestination, swig_delete_PdfDestination, swig_PdfDestination_methods, swig_PdfDestination_attributes, &swig_PdfDestination_Sf_SwigStatic, swig_PdfDestination_meta, swig_PdfDestination_bases, swig_PdfDestination_base_names };

static int _wrap_new_PdfAnnotation__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::EPdfAnnotation arg2 ;
  PoDoFo::PdfRect *arg3 = 0 ;
  PoDoFo::PdfVecObjects *arg4 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfAnnotation *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::PdfAnnotation",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::PdfAnnotation",1,"PoDoFo::PdfPage *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfAnnotation::PdfAnnotation",2,"PoDoFo::EPdfAnnotation");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfAnnotation::PdfAnnotation",3,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfAnnotation::PdfAnnotation",4,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfAnnotation",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  arg2 = (PoDoFo::EPdfAnnotation)(int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfAnnotation",3,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfAnnotation",4,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfAnnotation *)new PoDoFo::PdfAnnotation(arg1,arg2,(PoDoFo::PdfRect const &)*arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAnnotation,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfAnnotation__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfPage *arg2 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfAnnotation *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::PdfAnnotation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::PdfAnnotation",1,"PoDoFo::PdfObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfAnnotation::PdfAnnotation",2,"PoDoFo::PdfPage *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfAnnotation",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfAnnotation",2,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  {
    try {
      result = (PoDoFo::PdfAnnotation *)new PoDoFo::PdfAnnotation(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAnnotation,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfAnnotation(lua_State* L) {
  int argc;
  int argv[5]={
    1,2,3,4,5
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfAnnotation__SWIG_1(L);
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_new_PdfAnnotation__SWIG_0(L);
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfAnnotation'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfAnnotation::PdfAnnotation(PoDoFo::PdfPage *,PoDoFo::EPdfAnnotation,PoDoFo::PdfRect const &,PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfAnnotation::PdfAnnotation(PoDoFo::PdfObject *,PoDoFo::PdfPage *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfAnnotation_SetAppearanceStream(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfXObject *arg2 = (PoDoFo::PdfXObject *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::SetAppearanceStream",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetAppearanceStream",1,"PoDoFo::PdfAnnotation *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetAppearanceStream",2,"PoDoFo::PdfXObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_SetAppearanceStream",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfAnnotation_SetAppearanceStream",2,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  {
    try {
      (arg1)->SetAppearanceStream(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_HasAppearanceStream(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::HasAppearanceStream",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::HasAppearanceStream",1,"PoDoFo::PdfAnnotation const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_HasAppearanceStream",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfAnnotation const *)arg1)->HasAppearanceStream();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_GetRect(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfRect result;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::GetRect",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::GetRect",1,"PoDoFo::PdfAnnotation const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_GetRect",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  {
    try {
      result = ((PoDoFo::PdfAnnotation const *)arg1)->GetRect();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfRect * resultptr = new PoDoFo::PdfRect((const PoDoFo::PdfRect &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_SetFlags(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  pdf_uint32 arg2 ;
  pdf_uint32 *argp2 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::SetFlags",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetFlags",1,"PoDoFo::PdfAnnotation *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetFlags",2,"pdf_uint32");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_SetFlags",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_uint32,0))){
    SWIG_fail_ptr("PdfAnnotation_SetFlags",2,SWIGTYPE_p_pdf_uint32);
  }
  arg2 = *argp2;
  
  {
    try {
      (arg1)->SetFlags(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_GetFlags(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  pdf_uint32 result;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::GetFlags",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::GetFlags",1,"PoDoFo::PdfAnnotation const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_GetFlags",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  {
    try {
      result = ((PoDoFo::PdfAnnotation const *)arg1)->GetFlags();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    pdf_uint32 * resultptr = new pdf_uint32((const pdf_uint32 &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_uint32,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_SetBorderStyle__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::SetBorderStyle",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetBorderStyle",1,"PoDoFo::PdfAnnotation *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetBorderStyle",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetBorderStyle",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetBorderStyle",4,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_SetBorderStyle",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  {
    try {
      (arg1)->SetBorderStyle(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_SetBorderStyle__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  PdfArray *arg5 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::SetBorderStyle",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetBorderStyle",1,"PoDoFo::PdfAnnotation *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetBorderStyle",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetBorderStyle",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetBorderStyle",4,"double");
  if(!lua_isuserdata(L,5)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetBorderStyle",5,"PdfArray const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_SetBorderStyle",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&arg5,SWIGTYPE_p_PdfArray,0))){
    SWIG_fail_ptr("PdfAnnotation_SetBorderStyle",5,SWIGTYPE_p_PdfArray);
  }
  
  {
    try {
      (arg1)->SetBorderStyle(arg2,arg3,arg4,(PdfArray const &)*arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_SetBorderStyle(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAnnotation, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_PdfAnnotation_SetBorderStyle__SWIG_0(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAnnotation, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              void *ptr;
              if (lua_isuserdata(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PdfArray, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              return _wrap_PdfAnnotation_SetBorderStyle__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfAnnotation_SetBorderStyle'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfAnnotation::SetBorderStyle(double,double,double)\n"
    "    PoDoFo::PdfAnnotation::SetBorderStyle(double,double,double,PdfArray const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfAnnotation_SetTitle(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::SetTitle",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetTitle",1,"PoDoFo::PdfAnnotation *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetTitle",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_SetTitle",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfAnnotation_SetTitle",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetTitle((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_GetTitle(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::GetTitle",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::GetTitle",1,"PoDoFo::PdfAnnotation const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_GetTitle",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  {
    try {
      result = ((PoDoFo::PdfAnnotation const *)arg1)->GetTitle();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_SetContents(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::SetContents",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetContents",1,"PoDoFo::PdfAnnotation *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetContents",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_SetContents",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfAnnotation_SetContents",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetContents((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_GetContents(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::GetContents",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::GetContents",1,"PoDoFo::PdfAnnotation const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_GetContents",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  {
    try {
      result = ((PoDoFo::PdfAnnotation const *)arg1)->GetContents();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_SetDestination(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfDestination *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::SetDestination",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetDestination",1,"PoDoFo::PdfAnnotation *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetDestination",2,"PoDoFo::PdfDestination const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_SetDestination",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("PdfAnnotation_SetDestination",2,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  {
    try {
      (arg1)->SetDestination((PoDoFo::PdfDestination const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_GetDestination(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfDocument *arg2 = (PoDoFo::PdfDocument *) 0 ;
  SwigValueWrapper< PoDoFo::PdfDestination > result;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::GetDestination",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::GetDestination",1,"PoDoFo::PdfAnnotation const *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfAnnotation::GetDestination",2,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_GetDestination",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfAnnotation_GetDestination",2,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = ((PoDoFo::PdfAnnotation const *)arg1)->GetDestination(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfDestination * resultptr = new PoDoFo::PdfDestination((const PoDoFo::PdfDestination &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfDestination,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_HasDestination(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::HasDestination",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::HasDestination",1,"PoDoFo::PdfAnnotation const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_HasDestination",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfAnnotation const *)arg1)->HasDestination();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_SetAction(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfAction *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::SetAction",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetAction",1,"PoDoFo::PdfAnnotation *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetAction",2,"PoDoFo::PdfAction const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_SetAction",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfAnnotation_SetAction",2,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      (arg1)->SetAction((PoDoFo::PdfAction const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_GetAction(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfAction *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::GetAction",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::GetAction",1,"PoDoFo::PdfAnnotation const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_GetAction",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  {
    try {
      result = (PoDoFo::PdfAction *)((PoDoFo::PdfAnnotation const *)arg1)->GetAction();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAction,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_HasAction(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::HasAction",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::HasAction",1,"PoDoFo::PdfAnnotation const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_HasAction",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfAnnotation const *)arg1)->HasAction();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_SetOpen(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::SetOpen",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetOpen",1,"PoDoFo::PdfAnnotation *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetOpen",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_SetOpen",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetOpen(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_GetOpen(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::GetOpen",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::GetOpen",1,"PoDoFo::PdfAnnotation const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_GetOpen",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfAnnotation const *)arg1)->GetOpen();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_HasFileAttachement(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::HasFileAttachement",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::HasFileAttachement",1,"PoDoFo::PdfAnnotation const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_HasFileAttachement",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfAnnotation const *)arg1)->HasFileAttachement();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_SetFileAttachement(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfFileSpec *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::SetFileAttachement",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetFileAttachement",1,"PoDoFo::PdfAnnotation *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetFileAttachement",2,"PoDoFo::PdfFileSpec const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_SetFileAttachement",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfFileSpec,0))){
    SWIG_fail_ptr("PdfAnnotation_SetFileAttachement",2,SWIGTYPE_p_PoDoFo__PdfFileSpec);
  }
  
  {
    try {
      (arg1)->SetFileAttachement((PoDoFo::PdfFileSpec const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_GetFileAttachement(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfFileSpec *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::GetFileAttachement",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::GetFileAttachement",1,"PoDoFo::PdfAnnotation const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_GetFileAttachement",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  {
    try {
      result = (PoDoFo::PdfFileSpec *)((PoDoFo::PdfAnnotation const *)arg1)->GetFileAttachement();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFileSpec,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_GetQuadPoints(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PdfArray result;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::GetQuadPoints",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::GetQuadPoints",1,"PoDoFo::PdfAnnotation const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_GetQuadPoints",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  {
    try {
      result = ((PoDoFo::PdfAnnotation const *)arg1)->GetQuadPoints();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PdfArray * resultptr = new PdfArray((const PdfArray &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PdfArray,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_SetQuadPoints(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PdfArray *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::SetQuadPoints",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetQuadPoints",1,"PoDoFo::PdfAnnotation *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetQuadPoints",2,"PdfArray const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_SetQuadPoints",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PdfArray,0))){
    SWIG_fail_ptr("PdfAnnotation_SetQuadPoints",2,SWIGTYPE_p_PdfArray);
  }
  
  {
    try {
      (arg1)->SetQuadPoints((PdfArray const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_GetColor(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PdfArray result;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::GetColor",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::GetColor",1,"PoDoFo::PdfAnnotation const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_GetColor",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  {
    try {
      result = ((PoDoFo::PdfAnnotation const *)arg1)->GetColor();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PdfArray * resultptr = new PdfArray((const PdfArray &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PdfArray,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_SetColor__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::SetColor",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetColor",1,"PoDoFo::PdfAnnotation *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetColor",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetColor",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetColor",4,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_SetColor",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  {
    try {
      (arg1)->SetColor(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_SetColor__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::SetColor",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetColor",1,"PoDoFo::PdfAnnotation *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetColor",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetColor",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetColor",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetColor",5,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_SetColor",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  {
    try {
      (arg1)->SetColor(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_SetColor__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::SetColor",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetColor",1,"PoDoFo::PdfAnnotation *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetColor",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_SetColor",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetColor(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_SetColor__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::SetColor",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::SetColor",1,"PoDoFo::PdfAnnotation *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_SetColor",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  {
    try {
      (arg1)->SetColor();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_SetColor(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAnnotation, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfAnnotation_SetColor__SWIG_3(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAnnotation, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfAnnotation_SetColor__SWIG_2(L);
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAnnotation, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_PdfAnnotation_SetColor__SWIG_0(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAnnotation, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfAnnotation_SetColor__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfAnnotation_SetColor'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfAnnotation::SetColor(double,double,double)\n"
    "    PoDoFo::PdfAnnotation::SetColor(double,double,double,double)\n"
    "    PoDoFo::PdfAnnotation::SetColor(double)\n"
    "    PoDoFo::PdfAnnotation::SetColor()\n");
  lua_error(L);return 0;
}


static int _wrap_PdfAnnotation_GetType(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::EPdfAnnotation result;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::GetType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::GetType",1,"PoDoFo::PdfAnnotation const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_GetType",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  {
    try {
      result = (PoDoFo::EPdfAnnotation)((PoDoFo::PdfAnnotation const *)arg1)->GetType();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfAnnotation_GetPage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfPage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAnnotation::GetPage",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfAnnotation::GetPage",1,"PoDoFo::PdfAnnotation const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("PdfAnnotation_GetPage",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  {
    try {
      result = (PoDoFo::PdfPage *)((PoDoFo::PdfAnnotation const *)arg1)->GetPage();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPage,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfAnnotation(void *obj) {
PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfAnnotation(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfAnnotation);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfAnnotation_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfAnnotation_methods[]= {
    { "SetAppearanceStream", _wrap_PdfAnnotation_SetAppearanceStream},
    { "HasAppearanceStream", _wrap_PdfAnnotation_HasAppearanceStream},
    { "GetRect", _wrap_PdfAnnotation_GetRect},
    { "SetFlags", _wrap_PdfAnnotation_SetFlags},
    { "GetFlags", _wrap_PdfAnnotation_GetFlags},
    { "SetBorderStyle", _wrap_PdfAnnotation_SetBorderStyle},
    { "SetTitle", _wrap_PdfAnnotation_SetTitle},
    { "GetTitle", _wrap_PdfAnnotation_GetTitle},
    { "SetContents", _wrap_PdfAnnotation_SetContents},
    { "GetContents", _wrap_PdfAnnotation_GetContents},
    { "SetDestination", _wrap_PdfAnnotation_SetDestination},
    { "GetDestination", _wrap_PdfAnnotation_GetDestination},
    { "HasDestination", _wrap_PdfAnnotation_HasDestination},
    { "SetAction", _wrap_PdfAnnotation_SetAction},
    { "GetAction", _wrap_PdfAnnotation_GetAction},
    { "HasAction", _wrap_PdfAnnotation_HasAction},
    { "SetOpen", _wrap_PdfAnnotation_SetOpen},
    { "GetOpen", _wrap_PdfAnnotation_GetOpen},
    { "HasFileAttachement", _wrap_PdfAnnotation_HasFileAttachement},
    { "SetFileAttachement", _wrap_PdfAnnotation_SetFileAttachement},
    { "GetFileAttachement", _wrap_PdfAnnotation_GetFileAttachement},
    { "GetQuadPoints", _wrap_PdfAnnotation_GetQuadPoints},
    { "SetQuadPoints", _wrap_PdfAnnotation_SetQuadPoints},
    { "GetColor", _wrap_PdfAnnotation_GetColor},
    { "SetColor", _wrap_PdfAnnotation_SetColor},
    { "GetType", _wrap_PdfAnnotation_GetType},
    { "GetPage", _wrap_PdfAnnotation_GetPage},
    {0,0}
};
static swig_lua_method swig_PdfAnnotation_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfAnnotation_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfAnnotation_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfAnnotation_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfAnnotation_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfAnnotation_Sf_SwigStatic = {
    "PdfAnnotation",
    swig_PdfAnnotation_Sf_SwigStatic_methods,
    swig_PdfAnnotation_Sf_SwigStatic_attributes,
    swig_PdfAnnotation_Sf_SwigStatic_constants,
    swig_PdfAnnotation_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfAnnotation_bases[] = {0,0};
static const char *swig_PdfAnnotation_base_names[] = {"PoDoFo::PdfElement *",0};
static swig_lua_class _wrap_class_PdfAnnotation = { "PdfAnnotation", "PdfAnnotation", &SWIGTYPE_p_PoDoFo__PdfAnnotation,_proxy__wrap_new_PdfAnnotation, swig_delete_PdfAnnotation, swig_PdfAnnotation_methods, swig_PdfAnnotation_attributes, &swig_PdfAnnotation_Sf_SwigStatic, swig_PdfAnnotation_meta, swig_PdfAnnotation_bases, swig_PdfAnnotation_base_names };

static int _wrap_PdfCanvas_GetContents(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfCanvas *arg1 = (PoDoFo::PdfCanvas *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfCanvas::GetContents",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCanvas::GetContents",1,"PoDoFo::PdfCanvas const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfCanvas,0))){
    SWIG_fail_ptr("PdfCanvas_GetContents",1,SWIGTYPE_p_PoDoFo__PdfCanvas);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfCanvas const *)arg1)->GetContents();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfCanvas_GetContentsForAppending(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfCanvas *arg1 = (PoDoFo::PdfCanvas *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfCanvas::GetContentsForAppending",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCanvas::GetContentsForAppending",1,"PoDoFo::PdfCanvas const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfCanvas,0))){
    SWIG_fail_ptr("PdfCanvas_GetContentsForAppending",1,SWIGTYPE_p_PoDoFo__PdfCanvas);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfCanvas const *)arg1)->GetContentsForAppending();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfCanvas_GetResources(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfCanvas *arg1 = (PoDoFo::PdfCanvas *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfCanvas::GetResources",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCanvas::GetResources",1,"PoDoFo::PdfCanvas const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfCanvas,0))){
    SWIG_fail_ptr("PdfCanvas_GetResources",1,SWIGTYPE_p_PoDoFo__PdfCanvas);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfCanvas const *)arg1)->GetResources();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfCanvas_GetPageSize(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfCanvas *arg1 = (PoDoFo::PdfCanvas *) 0 ;
  PoDoFo::PdfRect result;
  
  SWIG_check_num_args("PoDoFo::PdfCanvas::GetPageSize",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCanvas::GetPageSize",1,"PoDoFo::PdfCanvas const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfCanvas,0))){
    SWIG_fail_ptr("PdfCanvas_GetPageSize",1,SWIGTYPE_p_PoDoFo__PdfCanvas);
  }
  
  {
    try {
      result = ((PoDoFo::PdfCanvas const *)arg1)->GetPageSize();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfRect * resultptr = new PoDoFo::PdfRect((const PoDoFo::PdfRect &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfCanvas_GetProcSet(lua_State* L) {
  int SWIG_arg = 0;
  PdfArray *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfCanvas::GetProcSet",0,0)
  {
    try {
      result = (PdfArray *) &PoDoFo::PdfCanvas::GetProcSet();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PdfArray,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfCanvas_AddColorResource(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfCanvas *arg1 = (PoDoFo::PdfCanvas *) 0 ;
  PoDoFo::PdfColor *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfCanvas::AddColorResource",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCanvas::AddColorResource",1,"PoDoFo::PdfCanvas *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfCanvas::AddColorResource",2,"PoDoFo::PdfColor const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfCanvas,0))){
    SWIG_fail_ptr("PdfCanvas_AddColorResource",1,SWIGTYPE_p_PoDoFo__PdfCanvas);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("PdfCanvas_AddColorResource",2,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  {
    try {
      (arg1)->AddColorResource((PoDoFo::PdfColor const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfCanvas_AddResource(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfCanvas *arg1 = (PoDoFo::PdfCanvas *) 0 ;
  PoDoFo::PdfName *arg2 = 0 ;
  PoDoFo::PdfReference *arg3 = 0 ;
  PoDoFo::PdfName *arg4 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfCanvas::AddResource",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCanvas::AddResource",1,"PoDoFo::PdfCanvas *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfCanvas::AddResource",2,"PoDoFo::PdfName const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfCanvas::AddResource",3,"PoDoFo::PdfReference const &");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfCanvas::AddResource",4,"PoDoFo::PdfName const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfCanvas,0))){
    SWIG_fail_ptr("PdfCanvas_AddResource",1,SWIGTYPE_p_PoDoFo__PdfCanvas);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfName,0))){
    SWIG_fail_ptr("PdfCanvas_AddResource",2,SWIGTYPE_p_PoDoFo__PdfName);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfReference,0))){
    SWIG_fail_ptr("PdfCanvas_AddResource",3,SWIGTYPE_p_PoDoFo__PdfReference);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfName,0))){
    SWIG_fail_ptr("PdfCanvas_AddResource",4,SWIGTYPE_p_PoDoFo__PdfName);
  }
  
  {
    try {
      (arg1)->AddResource((PoDoFo::PdfName const &)*arg2,(PoDoFo::PdfReference const &)*arg3,(PoDoFo::PdfName const &)*arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfCanvas(void *obj) {
PoDoFo::PdfCanvas *arg1 = (PoDoFo::PdfCanvas *) obj;
delete arg1;
}
static swig_lua_attribute swig_PdfCanvas_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfCanvas_methods[]= {
    { "GetContents", _wrap_PdfCanvas_GetContents},
    { "GetContentsForAppending", _wrap_PdfCanvas_GetContentsForAppending},
    { "GetResources", _wrap_PdfCanvas_GetResources},
    { "GetPageSize", _wrap_PdfCanvas_GetPageSize},
    { "AddColorResource", _wrap_PdfCanvas_AddColorResource},
    { "AddResource", _wrap_PdfCanvas_AddResource},
    {0,0}
};
static swig_lua_method swig_PdfCanvas_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfCanvas_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfCanvas_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfCanvas_Sf_SwigStatic_methods[]= {
    { "GetProcSet", _wrap_PdfCanvas_GetProcSet},
    {0,0}
};
static swig_lua_class* swig_PdfCanvas_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfCanvas_Sf_SwigStatic = {
    "PdfCanvas",
    swig_PdfCanvas_Sf_SwigStatic_methods,
    swig_PdfCanvas_Sf_SwigStatic_attributes,
    swig_PdfCanvas_Sf_SwigStatic_constants,
    swig_PdfCanvas_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfCanvas_bases[] = {0};
static const char *swig_PdfCanvas_base_names[] = {0};
static swig_lua_class _wrap_class_PdfCanvas = { "PdfCanvas", "PdfCanvas", &SWIGTYPE_p_PoDoFo__PdfCanvas,0, swig_delete_PdfCanvas, swig_PdfCanvas_methods, swig_PdfCanvas_attributes, &swig_PdfCanvas_Sf_SwigStatic, swig_PdfCanvas_meta, swig_PdfCanvas_bases, swig_PdfCanvas_base_names };

static int _wrap_new_PdfRect__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfRect::PdfRect",0,0)
  {
    try {
      result = (PoDoFo::PdfRect *)new PoDoFo::PdfRect();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfRect__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  PoDoFo::PdfRect *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfRect::PdfRect",4,4)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfRect::PdfRect",1,"double");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfRect::PdfRect",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfRect::PdfRect",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfRect::PdfRect",4,"double");
  arg1 = (double)lua_tonumber(L, 1);
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  {
    try {
      result = (PoDoFo::PdfRect *)new PoDoFo::PdfRect(arg1,arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfRect__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfArray *arg1 = 0 ;
  PoDoFo::PdfRect *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfRect::PdfRect",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfRect::PdfRect",1,"PoDoFo::PdfArray const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfRect",1,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  {
    try {
      result = (PoDoFo::PdfRect *)new PoDoFo::PdfRect((PoDoFo::PdfArray const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfRect__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = 0 ;
  PoDoFo::PdfRect *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfRect::PdfRect",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfRect::PdfRect",1,"PoDoFo::PdfRect const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfRect",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  {
    try {
      result = (PoDoFo::PdfRect *)new PoDoFo::PdfRect((PoDoFo::PdfRect const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfRect(lua_State* L) {
  int argc;
  int argv[5]={
    1,2,3,4,5
  };
  
  argc = lua_gettop(L);
  if (argc == 0) {
    return _wrap_new_PdfRect__SWIG_0(L);
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfRect__SWIG_2(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfRect__SWIG_3(L);
    }
  }
  if (argc == 4) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_new_PdfRect__SWIG_1(L);
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfRect'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfRect::PdfRect()\n"
    "    PoDoFo::PdfRect::PdfRect(double,double,double,double)\n"
    "    PoDoFo::PdfRect::PdfRect(PoDoFo::PdfArray const &)\n"
    "    PoDoFo::PdfRect::PdfRect(PoDoFo::PdfRect const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfRect_ToVariant(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = (PoDoFo::PdfRect *) 0 ;
  PoDoFo::PdfVariant *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfRect::ToVariant",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfRect::ToVariant",1,"PoDoFo::PdfRect const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfRect::ToVariant",2,"PoDoFo::PdfVariant &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfRect_ToVariant",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfVariant,0))){
    SWIG_fail_ptr("PdfRect_ToVariant",2,SWIGTYPE_p_PoDoFo__PdfVariant);
  }
  
  {
    try {
      ((PoDoFo::PdfRect const *)arg1)->ToVariant(*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfRect_ToString(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = (PoDoFo::PdfRect *) 0 ;
  std::string result;
  
  SWIG_check_num_args("PoDoFo::PdfRect::ToString",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfRect::ToString",1,"PoDoFo::PdfRect const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfRect_ToString",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  {
    try {
      result = ((PoDoFo::PdfRect const *)arg1)->ToString();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    std::string * resultptr = new std::string((const std::string &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__string,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfRect_FromArray(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = (PoDoFo::PdfRect *) 0 ;
  PoDoFo::PdfArray *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfRect::FromArray",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfRect::FromArray",1,"PoDoFo::PdfRect *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfRect::FromArray",2,"PoDoFo::PdfArray const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfRect_FromArray",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("PdfRect_FromArray",2,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  {
    try {
      (arg1)->FromArray((PoDoFo::PdfArray const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfRect_Intersect(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = (PoDoFo::PdfRect *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfRect::Intersect",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfRect::Intersect",1,"PoDoFo::PdfRect *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfRect::Intersect",2,"PoDoFo::PdfRect const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfRect_Intersect",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfRect_Intersect",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  {
    try {
      (arg1)->Intersect((PoDoFo::PdfRect const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfRect_GetBottom(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = (PoDoFo::PdfRect *) 0 ;
  double result;
  
  SWIG_check_num_args("PoDoFo::PdfRect::GetBottom",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfRect::GetBottom",1,"PoDoFo::PdfRect const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfRect_GetBottom",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  {
    try {
      result = (double)((PoDoFo::PdfRect const *)arg1)->GetBottom();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfRect_SetBottom(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = (PoDoFo::PdfRect *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfRect::SetBottom",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfRect::SetBottom",1,"PoDoFo::PdfRect *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfRect::SetBottom",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfRect_SetBottom",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetBottom(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfRect_GetLeft(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = (PoDoFo::PdfRect *) 0 ;
  double result;
  
  SWIG_check_num_args("PoDoFo::PdfRect::GetLeft",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfRect::GetLeft",1,"PoDoFo::PdfRect const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfRect_GetLeft",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  {
    try {
      result = (double)((PoDoFo::PdfRect const *)arg1)->GetLeft();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfRect_SetLeft(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = (PoDoFo::PdfRect *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfRect::SetLeft",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfRect::SetLeft",1,"PoDoFo::PdfRect *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfRect::SetLeft",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfRect_SetLeft",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetLeft(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfRect_GetWidth(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = (PoDoFo::PdfRect *) 0 ;
  double result;
  
  SWIG_check_num_args("PoDoFo::PdfRect::GetWidth",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfRect::GetWidth",1,"PoDoFo::PdfRect const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfRect_GetWidth",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  {
    try {
      result = (double)((PoDoFo::PdfRect const *)arg1)->GetWidth();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfRect_SetWidth(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = (PoDoFo::PdfRect *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfRect::SetWidth",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfRect::SetWidth",1,"PoDoFo::PdfRect *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfRect::SetWidth",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfRect_SetWidth",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetWidth(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfRect_GetHeight(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = (PoDoFo::PdfRect *) 0 ;
  double result;
  
  SWIG_check_num_args("PoDoFo::PdfRect::GetHeight",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfRect::GetHeight",1,"PoDoFo::PdfRect const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfRect_GetHeight",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  {
    try {
      result = (double)((PoDoFo::PdfRect const *)arg1)->GetHeight();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfRect_SetHeight(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = (PoDoFo::PdfRect *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfRect::SetHeight",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfRect::SetHeight",1,"PoDoFo::PdfRect *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfRect::SetHeight",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfRect_SetHeight",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetHeight(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfRect(void *obj) {
PoDoFo::PdfRect *arg1 = (PoDoFo::PdfRect *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfRect(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfRect);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfRect_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfRect_methods[]= {
    { "ToVariant", _wrap_PdfRect_ToVariant},
    { "ToString", _wrap_PdfRect_ToString},
    { "FromArray", _wrap_PdfRect_FromArray},
    { "Intersect", _wrap_PdfRect_Intersect},
    { "GetBottom", _wrap_PdfRect_GetBottom},
    { "SetBottom", _wrap_PdfRect_SetBottom},
    { "GetLeft", _wrap_PdfRect_GetLeft},
    { "SetLeft", _wrap_PdfRect_SetLeft},
    { "GetWidth", _wrap_PdfRect_GetWidth},
    { "SetWidth", _wrap_PdfRect_SetWidth},
    { "GetHeight", _wrap_PdfRect_GetHeight},
    { "SetHeight", _wrap_PdfRect_SetHeight},
    {0,0}
};
static swig_lua_method swig_PdfRect_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfRect_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfRect_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfRect_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfRect_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfRect_Sf_SwigStatic = {
    "PdfRect",
    swig_PdfRect_Sf_SwigStatic_methods,
    swig_PdfRect_Sf_SwigStatic_attributes,
    swig_PdfRect_Sf_SwigStatic_constants,
    swig_PdfRect_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfRect_bases[] = {0};
static const char *swig_PdfRect_base_names[] = {0};
static swig_lua_class _wrap_class_PdfRect = { "PdfRect", "PdfRect", &SWIGTYPE_p_PoDoFo__PdfRect,_proxy__wrap_new_PdfRect, swig_delete_PdfRect, swig_PdfRect_methods, swig_PdfRect_attributes, &swig_PdfRect_Sf_SwigStatic, swig_PdfRect_meta, swig_PdfRect_bases, swig_PdfRect_base_names };

static int _wrap_new_PdfString__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::PdfString",0,0)
  {
    try {
      result = (PoDoFo::PdfString *)new PoDoFo::PdfString();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfString__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  std::string *arg1 = 0 ;
  PoDoFo::PdfEncoding *arg2 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::PdfString",2,2)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",1,"std::string const &");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",2,"PoDoFo::PdfEncoding const *const");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_std__string,0))){
    SWIG_fail_ptr("new_PdfString",1,SWIGTYPE_p_std__string);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("new_PdfString",2,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  {
    try {
      result = (PoDoFo::PdfString *)new PoDoFo::PdfString((std::string const &)*arg1,(PoDoFo::PdfEncoding const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfString__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  std::string *arg1 = 0 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::PdfString",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",1,"std::string const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_std__string,0))){
    SWIG_fail_ptr("new_PdfString",1,SWIGTYPE_p_std__string);
  }
  
  {
    try {
      result = (PoDoFo::PdfString *)new PoDoFo::PdfString((std::string const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfString__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  PoDoFo::PdfEncoding *arg2 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::PdfString",2,2)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",1,"char const *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",2,"PoDoFo::PdfEncoding const *const");
  arg1 = (char *)lua_tostring(L, 1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("new_PdfString",2,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  {
    try {
      result = (PoDoFo::PdfString *)new PoDoFo::PdfString((char const *)arg1,(PoDoFo::PdfEncoding const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfString__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::PdfString",1,1)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",1,"char const *");
  arg1 = (char *)lua_tostring(L, 1);
  {
    try {
      result = (PoDoFo::PdfString *)new PoDoFo::PdfString((char const *)arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfString__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  wchar_t *arg1 = (wchar_t *) 0 ;
  pdf_long arg2 ;
  pdf_long *argp2 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::PdfString",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",1,"wchar_t const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",2,"pdf_long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("new_PdfString",1,SWIGTYPE_p_wchar_t);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("new_PdfString",2,SWIGTYPE_p_pdf_long);
  }
  arg2 = *argp2;
  
  {
    try {
      result = (PoDoFo::PdfString *)new PoDoFo::PdfString((wchar_t const *)arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfString__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  wchar_t *arg1 = (wchar_t *) 0 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::PdfString",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",1,"wchar_t const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("new_PdfString",1,SWIGTYPE_p_wchar_t);
  }
  
  {
    try {
      result = (PoDoFo::PdfString *)new PoDoFo::PdfString((wchar_t const *)arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_setFromWchar_t__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  pdf_long arg3 ;
  pdf_long *argp3 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::setFromWchar_t",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::setFromWchar_t",1,"PoDoFo::PdfString *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfString::setFromWchar_t",2,"wchar_t const *");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfString::setFromWchar_t",3,"pdf_long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString_setFromWchar_t",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("PdfString_setFromWchar_t",2,SWIGTYPE_p_wchar_t);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("PdfString_setFromWchar_t",3,SWIGTYPE_p_pdf_long);
  }
  arg3 = *argp3;
  
  {
    try {
      (arg1)->setFromWchar_t((wchar_t const *)arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_setFromWchar_t__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::setFromWchar_t",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::setFromWchar_t",1,"PoDoFo::PdfString *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfString::setFromWchar_t",2,"wchar_t const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString_setFromWchar_t",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("PdfString_setFromWchar_t",2,SWIGTYPE_p_wchar_t);
  }
  
  {
    try {
      (arg1)->setFromWchar_t((wchar_t const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_setFromWchar_t(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_wchar_t, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfString_setFromWchar_t__SWIG_1(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_wchar_t, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_PdfString_setFromWchar_t__SWIG_0(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfString_setFromWchar_t'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfString::setFromWchar_t(wchar_t const *,pdf_long)\n"
    "    PoDoFo::PdfString::setFromWchar_t(wchar_t const *)\n");
  lua_error(L);return 0;
}


static int _wrap_new_PdfString__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  pdf_long arg2 ;
  bool arg3 ;
  PoDoFo::PdfEncoding *arg4 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  pdf_long *argp2 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::PdfString",4,4)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",1,"char const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",2,"pdf_long");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",3,"bool");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",4,"PoDoFo::PdfEncoding const *const");
  arg1 = (char *)lua_tostring(L, 1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("new_PdfString",2,SWIGTYPE_p_pdf_long);
  }
  arg2 = *argp2;
  
  arg3 = (lua_toboolean(L, 3)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("new_PdfString",4,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  {
    try {
      result = (PoDoFo::PdfString *)new PoDoFo::PdfString((char const *)arg1,arg2,arg3,(PoDoFo::PdfEncoding const *)arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfString__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  pdf_long arg2 ;
  bool arg3 ;
  pdf_long *argp2 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::PdfString",3,3)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",1,"char const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",2,"pdf_long");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",3,"bool");
  arg1 = (char *)lua_tostring(L, 1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("new_PdfString",2,SWIGTYPE_p_pdf_long);
  }
  arg2 = *argp2;
  
  arg3 = (lua_toboolean(L, 3)!=0);
  {
    try {
      result = (PoDoFo::PdfString *)new PoDoFo::PdfString((char const *)arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfString__SWIG_9(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  pdf_long arg2 ;
  pdf_long *argp2 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::PdfString",2,2)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",1,"char const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",2,"pdf_long");
  arg1 = (char *)lua_tostring(L, 1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("new_PdfString",2,SWIGTYPE_p_pdf_long);
  }
  arg2 = *argp2;
  
  {
    try {
      result = (PoDoFo::PdfString *)new PoDoFo::PdfString((char const *)arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfString__SWIG_10(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::pdf_utf8 *arg1 = (PoDoFo::pdf_utf8 *) 0 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::PdfString",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",1,"PoDoFo::pdf_utf8 const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_unsigned_char,0))){
    SWIG_fail_ptr("new_PdfString",1,SWIGTYPE_p_unsigned_char);
  }
  
  {
    try {
      result = (PoDoFo::PdfString *)new PoDoFo::PdfString((PoDoFo::pdf_utf8 const *)arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfString__SWIG_11(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::pdf_utf16be *arg1 = (PoDoFo::pdf_utf16be *) 0 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::PdfString",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",1,"PoDoFo::pdf_utf16be const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_pdf_uint16,0))){
    SWIG_fail_ptr("new_PdfString",1,SWIGTYPE_p_pdf_uint16);
  }
  
  {
    try {
      result = (PoDoFo::PdfString *)new PoDoFo::PdfString((PoDoFo::pdf_utf16be const *)arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfString__SWIG_12(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::pdf_utf8 *arg1 = (PoDoFo::pdf_utf8 *) 0 ;
  pdf_long arg2 ;
  pdf_long *argp2 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::PdfString",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",1,"PoDoFo::pdf_utf8 const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",2,"pdf_long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_unsigned_char,0))){
    SWIG_fail_ptr("new_PdfString",1,SWIGTYPE_p_unsigned_char);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("new_PdfString",2,SWIGTYPE_p_pdf_long);
  }
  arg2 = *argp2;
  
  {
    try {
      result = (PoDoFo::PdfString *)new PoDoFo::PdfString((PoDoFo::pdf_utf8 const *)arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfString__SWIG_13(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::pdf_utf16be *arg1 = (PoDoFo::pdf_utf16be *) 0 ;
  pdf_long arg2 ;
  pdf_long *argp2 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::PdfString",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",1,"PoDoFo::pdf_utf16be const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",2,"pdf_long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_pdf_uint16,0))){
    SWIG_fail_ptr("new_PdfString",1,SWIGTYPE_p_pdf_uint16);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("new_PdfString",2,SWIGTYPE_p_pdf_long);
  }
  arg2 = *argp2;
  
  {
    try {
      result = (PoDoFo::PdfString *)new PoDoFo::PdfString((PoDoFo::pdf_utf16be const *)arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfString__SWIG_14(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = 0 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::PdfString",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfString::PdfString",1,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("new_PdfString",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = (PoDoFo::PdfString *)new PoDoFo::PdfString((PoDoFo::PdfString const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfString(lua_State* L) {
  int argc;
  int argv[5]={
    1,2,3,4,5
  };
  
  argc = lua_gettop(L);
  if (argc == 0) {
    return _wrap_new_PdfString__SWIG_0(L);
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_std__string, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfString__SWIG_2(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_wchar_t, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfString__SWIG_6(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_unsigned_char, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfString__SWIG_10(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_pdf_uint16, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfString__SWIG_11(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfString__SWIG_14(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      return _wrap_new_PdfString__SWIG_4(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_std__string, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfString__SWIG_1(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_wchar_t, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfString__SWIG_5(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_unsigned_char, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfString__SWIG_12(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_pdf_uint16, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfString__SWIG_13(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfString__SWIG_9(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfString__SWIG_3(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          return _wrap_new_PdfString__SWIG_8(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_new_PdfString__SWIG_7(L);
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfString'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfString::PdfString()\n"
    "    PoDoFo::PdfString::PdfString(std::string const &,PoDoFo::PdfEncoding const *const)\n"
    "    PoDoFo::PdfString::PdfString(std::string const &)\n"
    "    PoDoFo::PdfString::PdfString(char const *,PoDoFo::PdfEncoding const *const)\n"
    "    PoDoFo::PdfString::PdfString(char const *)\n"
    "    PoDoFo::PdfString::PdfString(wchar_t const *,pdf_long)\n"
    "    PoDoFo::PdfString::PdfString(wchar_t const *)\n"
    "    PoDoFo::PdfString::PdfString(char const *,pdf_long,bool,PoDoFo::PdfEncoding const *const)\n"
    "    PoDoFo::PdfString::PdfString(char const *,pdf_long,bool)\n"
    "    PoDoFo::PdfString::PdfString(char const *,pdf_long)\n"
    "    PoDoFo::PdfString::PdfString(PoDoFo::pdf_utf8 const *)\n"
    "    PoDoFo::PdfString::PdfString(PoDoFo::pdf_utf16be const *)\n"
    "    PoDoFo::PdfString::PdfString(PoDoFo::pdf_utf8 const *,pdf_long)\n"
    "    PoDoFo::PdfString::PdfString(PoDoFo::pdf_utf16be const *,pdf_long)\n"
    "    PoDoFo::PdfString::PdfString(PoDoFo::PdfString const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfString_SetHexData__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  char *arg2 = (char *) 0 ;
  pdf_long arg3 ;
  PdfEncrypt *arg4 = (PdfEncrypt *) 0 ;
  pdf_long *argp3 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::SetHexData",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::SetHexData",1,"PoDoFo::PdfString *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfString::SetHexData",2,"char const *");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfString::SetHexData",3,"pdf_long");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfString::SetHexData",4,"PdfEncrypt *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString_SetHexData",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("PdfString_SetHexData",3,SWIGTYPE_p_pdf_long);
  }
  arg3 = *argp3;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PdfEncrypt,0))){
    SWIG_fail_ptr("PdfString_SetHexData",4,SWIGTYPE_p_PdfEncrypt);
  }
  
  {
    try {
      (arg1)->SetHexData((char const *)arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_SetHexData__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  char *arg2 = (char *) 0 ;
  pdf_long arg3 ;
  pdf_long *argp3 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::SetHexData",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::SetHexData",1,"PoDoFo::PdfString *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfString::SetHexData",2,"char const *");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfString::SetHexData",3,"pdf_long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString_SetHexData",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("PdfString_SetHexData",3,SWIGTYPE_p_pdf_long);
  }
  arg3 = *argp3;
  
  {
    try {
      (arg1)->SetHexData((char const *)arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_SetHexData__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::SetHexData",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::SetHexData",1,"PoDoFo::PdfString *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfString::SetHexData",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString_SetHexData",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  {
    try {
      (arg1)->SetHexData((char const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_SetHexData(lua_State* L) {
  int argc;
  int argv[5]={
    1,2,3,4,5
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfString_SetHexData__SWIG_2(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_PdfString_SetHexData__SWIG_1(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PdfEncrypt, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_PdfString_SetHexData__SWIG_0(L);
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfString_SetHexData'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfString::SetHexData(char const *,pdf_long,PdfEncrypt *)\n"
    "    PoDoFo::PdfString::SetHexData(char const *,pdf_long)\n"
    "    PoDoFo::PdfString::SetHexData(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfString_IsValid(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfString::IsValid",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::IsValid",1,"PoDoFo::PdfString const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString_IsValid",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfString const *)arg1)->IsValid();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_IsHex(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfString::IsHex",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::IsHex",1,"PoDoFo::PdfString const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString_IsHex",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfString const *)arg1)->IsHex();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_IsUnicode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfString::IsUnicode",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::IsUnicode",1,"PoDoFo::PdfString const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString_IsUnicode",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfString const *)arg1)->IsUnicode();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_GetString(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  char *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::GetString",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::GetString",1,"PoDoFo::PdfString const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString_GetString",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = (char *)((PoDoFo::PdfString const *)arg1)->GetString();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushstring(L,(const char *)result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_GetUnicode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  PoDoFo::pdf_utf16be *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::GetUnicode",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::GetUnicode",1,"PoDoFo::PdfString const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString_GetUnicode",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = (PoDoFo::pdf_utf16be *)((PoDoFo::PdfString const *)arg1)->GetUnicode();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_pdf_uint16,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_GetStringUtf8(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  std::string *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::GetStringUtf8",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::GetStringUtf8",1,"PoDoFo::PdfString const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString_GetStringUtf8",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = (std::string *) &((PoDoFo::PdfString const *)arg1)->GetStringUtf8();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_std__string,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_GetLength(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  pdf_long result;
  
  SWIG_check_num_args("PoDoFo::PdfString::GetLength",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::GetLength",1,"PoDoFo::PdfString const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString_GetLength",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = ((PoDoFo::PdfString const *)arg1)->GetLength();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    pdf_long * resultptr = new pdf_long((const pdf_long &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_long,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_GetUnicodeLength(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  pdf_long result;
  
  SWIG_check_num_args("PoDoFo::PdfString::GetUnicodeLength",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::GetUnicodeLength",1,"PoDoFo::PdfString const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString_GetUnicodeLength",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = ((PoDoFo::PdfString const *)arg1)->GetUnicodeLength();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    pdf_long * resultptr = new pdf_long((const pdf_long &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_long,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_GetCharacterLength(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  pdf_long result;
  
  SWIG_check_num_args("PoDoFo::PdfString::GetCharacterLength",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::GetCharacterLength",1,"PoDoFo::PdfString const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString_GetCharacterLength",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = ((PoDoFo::PdfString const *)arg1)->GetCharacterLength();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    pdf_long * resultptr = new pdf_long((const pdf_long &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_long,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_Write__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  PoDoFo::PdfOutputDevice *arg2 = (PoDoFo::PdfOutputDevice *) 0 ;
  PoDoFo::EPdfWriteMode arg3 ;
  PdfEncrypt *arg4 = (PdfEncrypt *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::Write",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::Write",1,"PoDoFo::PdfString const *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfString::Write",2,"PoDoFo::PdfOutputDevice *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfString::Write",3,"PoDoFo::EPdfWriteMode");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfString::Write",4,"PdfEncrypt const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString_Write",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfOutputDevice,0))){
    SWIG_fail_ptr("PdfString_Write",2,SWIGTYPE_p_PoDoFo__PdfOutputDevice);
  }
  
  arg3 = (PoDoFo::EPdfWriteMode)(int)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PdfEncrypt,0))){
    SWIG_fail_ptr("PdfString_Write",4,SWIGTYPE_p_PdfEncrypt);
  }
  
  {
    try {
      ((PoDoFo::PdfString const *)arg1)->Write(arg2,arg3,(PdfEncrypt const *)arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_Write__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  PoDoFo::PdfOutputDevice *arg2 = (PoDoFo::PdfOutputDevice *) 0 ;
  PoDoFo::EPdfWriteMode arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::Write",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::Write",1,"PoDoFo::PdfString const *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfString::Write",2,"PoDoFo::PdfOutputDevice *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfString::Write",3,"PoDoFo::EPdfWriteMode");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString_Write",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfOutputDevice,0))){
    SWIG_fail_ptr("PdfString_Write",2,SWIGTYPE_p_PoDoFo__PdfOutputDevice);
  }
  
  arg3 = (PoDoFo::EPdfWriteMode)(int)lua_tonumber(L, 3);
  {
    try {
      ((PoDoFo::PdfString const *)arg1)->Write(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_Write(lua_State* L) {
  int argc;
  int argv[5]={
    1,2,3,4,5
  };
  
  argc = lua_gettop(L);
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfOutputDevice, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_PdfString_Write__SWIG_1(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfOutputDevice, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PdfEncrypt, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_PdfString_Write__SWIG_0(L);
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfString_Write'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfString::Write(PoDoFo::PdfOutputDevice *,PoDoFo::EPdfWriteMode,PdfEncrypt const *) const\n"
    "    PoDoFo::PdfString::Write(PoDoFo::PdfOutputDevice *,PoDoFo::EPdfWriteMode) const\n");
  lua_error(L);return 0;
}


static int _wrap_PdfString___lt(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfString::operator <",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::operator <",1,"PoDoFo::PdfString const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfString::operator <",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString___lt",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString___lt",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfString const *)arg1)->operator <((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString___eq(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfString::operator ==",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::operator ==",1,"PoDoFo::PdfString const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfString::operator ==",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString___eq",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString___eq",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfString const *)arg1)->operator ==((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_ToUnicode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfString::ToUnicode",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::ToUnicode",1,"PoDoFo::PdfString const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString_ToUnicode",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = ((PoDoFo::PdfString const *)arg1)->ToUnicode();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_GetBuffer(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) 0 ;
  PdfRefCountedBuffer *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::GetBuffer",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::GetBuffer",1,"PoDoFo::PdfString *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfString_GetBuffer",1,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = (PdfRefCountedBuffer *) &(arg1)->GetBuffer();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PdfRefCountedBuffer,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_StringNull_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfString::StringNull",0,0)
  result = (PoDoFo::PdfString *)&PoDoFo::PdfString::StringNull;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_ConvertUTF8toUTF16__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::pdf_utf8 *arg1 = (PoDoFo::pdf_utf8 *) 0 ;
  PoDoFo::pdf_utf16be *arg2 = (PoDoFo::pdf_utf16be *) 0 ;
  pdf_long arg3 ;
  pdf_long *argp3 ;
  pdf_long result;
  
  SWIG_check_num_args("PoDoFo::PdfString::ConvertUTF8toUTF16",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF8toUTF16",1,"PoDoFo::pdf_utf8 const *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF8toUTF16",2,"PoDoFo::pdf_utf16be *");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF8toUTF16",3,"pdf_long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_unsigned_char,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF8toUTF16",1,SWIGTYPE_p_unsigned_char);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_pdf_uint16,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF8toUTF16",2,SWIGTYPE_p_pdf_uint16);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF8toUTF16",3,SWIGTYPE_p_pdf_long);
  }
  arg3 = *argp3;
  
  {
    try {
      result = PoDoFo::PdfString::ConvertUTF8toUTF16((unsigned char const *)arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    pdf_long * resultptr = new pdf_long((const pdf_long &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_long,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_ConvertUTF8toUTF16__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::pdf_utf8 *arg1 = (PoDoFo::pdf_utf8 *) 0 ;
  pdf_long arg2 ;
  PoDoFo::pdf_utf16be *arg3 = (PoDoFo::pdf_utf16be *) 0 ;
  pdf_long arg4 ;
  PoDoFo::EPdfStringConversion arg5 ;
  pdf_long *argp2 ;
  pdf_long *argp4 ;
  pdf_long result;
  
  SWIG_check_num_args("PoDoFo::PdfString::ConvertUTF8toUTF16",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF8toUTF16",1,"PoDoFo::pdf_utf8 const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF8toUTF16",2,"pdf_long");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF8toUTF16",3,"PoDoFo::pdf_utf16be *");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF8toUTF16",4,"pdf_long");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF8toUTF16",5,"PoDoFo::EPdfStringConversion");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_unsigned_char,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF8toUTF16",1,SWIGTYPE_p_unsigned_char);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF8toUTF16",2,SWIGTYPE_p_pdf_long);
  }
  arg2 = *argp2;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_pdf_uint16,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF8toUTF16",3,SWIGTYPE_p_pdf_uint16);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&argp4,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF8toUTF16",4,SWIGTYPE_p_pdf_long);
  }
  arg4 = *argp4;
  
  arg5 = (PoDoFo::EPdfStringConversion)(int)lua_tonumber(L, 5);
  {
    try {
      result = PoDoFo::PdfString::ConvertUTF8toUTF16((unsigned char const *)arg1,arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    pdf_long * resultptr = new pdf_long((const pdf_long &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_long,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_ConvertUTF8toUTF16__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::pdf_utf8 *arg1 = (PoDoFo::pdf_utf8 *) 0 ;
  pdf_long arg2 ;
  PoDoFo::pdf_utf16be *arg3 = (PoDoFo::pdf_utf16be *) 0 ;
  pdf_long arg4 ;
  pdf_long *argp2 ;
  pdf_long *argp4 ;
  pdf_long result;
  
  SWIG_check_num_args("PoDoFo::PdfString::ConvertUTF8toUTF16",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF8toUTF16",1,"PoDoFo::pdf_utf8 const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF8toUTF16",2,"pdf_long");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF8toUTF16",3,"PoDoFo::pdf_utf16be *");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF8toUTF16",4,"pdf_long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_unsigned_char,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF8toUTF16",1,SWIGTYPE_p_unsigned_char);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF8toUTF16",2,SWIGTYPE_p_pdf_long);
  }
  arg2 = *argp2;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_pdf_uint16,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF8toUTF16",3,SWIGTYPE_p_pdf_uint16);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&argp4,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF8toUTF16",4,SWIGTYPE_p_pdf_long);
  }
  arg4 = *argp4;
  
  {
    try {
      result = PoDoFo::PdfString::ConvertUTF8toUTF16((unsigned char const *)arg1,arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    pdf_long * resultptr = new pdf_long((const pdf_long &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_long,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_ConvertUTF8toUTF16(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_unsigned_char, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_pdf_uint16, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_PdfString_ConvertUTF8toUTF16__SWIG_0(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_unsigned_char, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_pdf_uint16, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (lua_isuserdata(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_PdfString_ConvertUTF8toUTF16__SWIG_2(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_unsigned_char, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_pdf_uint16, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (lua_isuserdata(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfString_ConvertUTF8toUTF16__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfString_ConvertUTF8toUTF16'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfString::ConvertUTF8toUTF16(PoDoFo::pdf_utf8 const *,PoDoFo::pdf_utf16be *,pdf_long)\n"
    "    PoDoFo::PdfString::ConvertUTF8toUTF16(PoDoFo::pdf_utf8 const *,pdf_long,PoDoFo::pdf_utf16be *,pdf_long,PoDoFo::EPdfStringConversion)\n"
    "    PoDoFo::PdfString::ConvertUTF8toUTF16(PoDoFo::pdf_utf8 const *,pdf_long,PoDoFo::pdf_utf16be *,pdf_long)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfString_ConvertUTF16toUTF8__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::pdf_utf16be *arg1 = (PoDoFo::pdf_utf16be *) 0 ;
  PoDoFo::pdf_utf8 *arg2 = (PoDoFo::pdf_utf8 *) 0 ;
  pdf_long arg3 ;
  pdf_long *argp3 ;
  pdf_long result;
  
  SWIG_check_num_args("PoDoFo::PdfString::ConvertUTF16toUTF8",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF16toUTF8",1,"PoDoFo::pdf_utf16be const *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF16toUTF8",2,"PoDoFo::pdf_utf8 *");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF16toUTF8",3,"pdf_long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_pdf_uint16,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF16toUTF8",1,SWIGTYPE_p_pdf_uint16);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_unsigned_char,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF16toUTF8",2,SWIGTYPE_p_unsigned_char);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF16toUTF8",3,SWIGTYPE_p_pdf_long);
  }
  arg3 = *argp3;
  
  {
    try {
      result = PoDoFo::PdfString::ConvertUTF16toUTF8((pdf_uint16 const *)arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    pdf_long * resultptr = new pdf_long((const pdf_long &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_long,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_ConvertUTF16toUTF8__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::pdf_utf16be *arg1 = (PoDoFo::pdf_utf16be *) 0 ;
  pdf_long arg2 ;
  PoDoFo::pdf_utf8 *arg3 = (PoDoFo::pdf_utf8 *) 0 ;
  pdf_long arg4 ;
  PoDoFo::EPdfStringConversion arg5 ;
  pdf_long *argp2 ;
  pdf_long *argp4 ;
  pdf_long result;
  
  SWIG_check_num_args("PoDoFo::PdfString::ConvertUTF16toUTF8",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF16toUTF8",1,"PoDoFo::pdf_utf16be const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF16toUTF8",2,"pdf_long");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF16toUTF8",3,"PoDoFo::pdf_utf8 *");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF16toUTF8",4,"pdf_long");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF16toUTF8",5,"PoDoFo::EPdfStringConversion");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_pdf_uint16,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF16toUTF8",1,SWIGTYPE_p_pdf_uint16);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF16toUTF8",2,SWIGTYPE_p_pdf_long);
  }
  arg2 = *argp2;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_unsigned_char,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF16toUTF8",3,SWIGTYPE_p_unsigned_char);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&argp4,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF16toUTF8",4,SWIGTYPE_p_pdf_long);
  }
  arg4 = *argp4;
  
  arg5 = (PoDoFo::EPdfStringConversion)(int)lua_tonumber(L, 5);
  {
    try {
      result = PoDoFo::PdfString::ConvertUTF16toUTF8((pdf_uint16 const *)arg1,arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    pdf_long * resultptr = new pdf_long((const pdf_long &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_long,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_ConvertUTF16toUTF8__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::pdf_utf16be *arg1 = (PoDoFo::pdf_utf16be *) 0 ;
  pdf_long arg2 ;
  PoDoFo::pdf_utf8 *arg3 = (PoDoFo::pdf_utf8 *) 0 ;
  pdf_long arg4 ;
  pdf_long *argp2 ;
  pdf_long *argp4 ;
  pdf_long result;
  
  SWIG_check_num_args("PoDoFo::PdfString::ConvertUTF16toUTF8",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF16toUTF8",1,"PoDoFo::pdf_utf16be const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF16toUTF8",2,"pdf_long");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF16toUTF8",3,"PoDoFo::pdf_utf8 *");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfString::ConvertUTF16toUTF8",4,"pdf_long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_pdf_uint16,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF16toUTF8",1,SWIGTYPE_p_pdf_uint16);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF16toUTF8",2,SWIGTYPE_p_pdf_long);
  }
  arg2 = *argp2;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_unsigned_char,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF16toUTF8",3,SWIGTYPE_p_unsigned_char);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&argp4,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("PdfString_ConvertUTF16toUTF8",4,SWIGTYPE_p_pdf_long);
  }
  arg4 = *argp4;
  
  {
    try {
      result = PoDoFo::PdfString::ConvertUTF16toUTF8((pdf_uint16 const *)arg1,arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    pdf_long * resultptr = new pdf_long((const pdf_long &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_long,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfString_ConvertUTF16toUTF8(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_pdf_uint16, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_unsigned_char, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_PdfString_ConvertUTF16toUTF8__SWIG_0(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_pdf_uint16, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_unsigned_char, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (lua_isuserdata(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_PdfString_ConvertUTF16toUTF8__SWIG_2(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_pdf_uint16, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_unsigned_char, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (lua_isuserdata(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfString_ConvertUTF16toUTF8__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfString_ConvertUTF16toUTF8'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfString::ConvertUTF16toUTF8(PoDoFo::pdf_utf16be const *,PoDoFo::pdf_utf8 *,pdf_long)\n"
    "    PoDoFo::PdfString::ConvertUTF16toUTF8(PoDoFo::pdf_utf16be const *,pdf_long,PoDoFo::pdf_utf8 *,pdf_long,PoDoFo::EPdfStringConversion)\n"
    "    PoDoFo::PdfString::ConvertUTF16toUTF8(PoDoFo::pdf_utf16be const *,pdf_long,PoDoFo::pdf_utf8 *,pdf_long)\n");
  lua_error(L);return 0;
}


static void swig_delete_PdfString(void *obj) {
PoDoFo::PdfString *arg1 = (PoDoFo::PdfString *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfString(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfString);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfString_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfString_methods[]= {
    { "setFromWchar_t", _wrap_PdfString_setFromWchar_t},
    { "SetHexData", _wrap_PdfString_SetHexData},
    { "IsValid", _wrap_PdfString_IsValid},
    { "IsHex", _wrap_PdfString_IsHex},
    { "IsUnicode", _wrap_PdfString_IsUnicode},
    { "GetString", _wrap_PdfString_GetString},
    { "GetUnicode", _wrap_PdfString_GetUnicode},
    { "GetStringUtf8", _wrap_PdfString_GetStringUtf8},
    { "GetLength", _wrap_PdfString_GetLength},
    { "GetUnicodeLength", _wrap_PdfString_GetUnicodeLength},
    { "GetCharacterLength", _wrap_PdfString_GetCharacterLength},
    { "Write", _wrap_PdfString_Write},
    { "__lt", _wrap_PdfString___lt},
    { "__eq", _wrap_PdfString___eq},
    { "ToUnicode", _wrap_PdfString_ToUnicode},
    { "GetBuffer", _wrap_PdfString_GetBuffer},
    {0,0}
};
static swig_lua_method swig_PdfString_meta[] = {
    { "__lt", _wrap_PdfString___lt},
    { "__eq", _wrap_PdfString___eq},
    {0,0}
};

static swig_lua_attribute swig_PdfString_Sf_SwigStatic_attributes[] = {
    { "StringNull", _wrap_PdfString_StringNull_get, SWIG_Lua_set_immutable },
    {0,0,0}
};
static swig_lua_const_info swig_PdfString_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfString_Sf_SwigStatic_methods[]= {
    { "ConvertUTF8toUTF16", _wrap_PdfString_ConvertUTF8toUTF16},
    { "ConvertUTF16toUTF8", _wrap_PdfString_ConvertUTF16toUTF8},
    {0,0}
};
static swig_lua_class* swig_PdfString_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfString_Sf_SwigStatic = {
    "PdfString",
    swig_PdfString_Sf_SwigStatic_methods,
    swig_PdfString_Sf_SwigStatic_attributes,
    swig_PdfString_Sf_SwigStatic_constants,
    swig_PdfString_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfString_bases[] = {0};
static const char *swig_PdfString_base_names[] = {0};
static swig_lua_class _wrap_class_PdfString = { "PdfString", "PdfString", &SWIGTYPE_p_PoDoFo__PdfString,_proxy__wrap_new_PdfString, swig_delete_PdfString, swig_PdfString_methods, swig_PdfString_attributes, &swig_PdfString_Sf_SwigStatic, swig_PdfString_meta, swig_PdfString_bases, swig_PdfString_base_names };

static int _wrap_new_PdfErrorInfo__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfErrorInfo *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfErrorInfo::PdfErrorInfo",0,0)
  {
    try {
      result = (PoDoFo::PdfErrorInfo *)new PoDoFo::PdfErrorInfo();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfErrorInfo,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfErrorInfo__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  int arg1 ;
  char *arg2 = (char *) 0 ;
  char *arg3 = (char *) 0 ;
  PoDoFo::PdfErrorInfo *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfErrorInfo::PdfErrorInfo",3,3)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfErrorInfo::PdfErrorInfo",1,"int");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfErrorInfo::PdfErrorInfo",2,"char const *");
  if(!SWIG_lua_isnilstring(L,3)) SWIG_fail_arg("PoDoFo::PdfErrorInfo::PdfErrorInfo",3,"char const *");
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (char *)lua_tostring(L, 3);
  {
    try {
      result = (PoDoFo::PdfErrorInfo *)new PoDoFo::PdfErrorInfo(arg1,(char const *)arg2,(char const *)arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfErrorInfo,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfErrorInfo__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  int arg1 ;
  char *arg2 = (char *) 0 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  PoDoFo::PdfErrorInfo *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfErrorInfo::PdfErrorInfo",3,3)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfErrorInfo::PdfErrorInfo",1,"int");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfErrorInfo::PdfErrorInfo",2,"char const *");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfErrorInfo::PdfErrorInfo",3,"wchar_t const *");
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (char *)lua_tostring(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("new_PdfErrorInfo",3,SWIGTYPE_p_wchar_t);
  }
  
  {
    try {
      result = (PoDoFo::PdfErrorInfo *)new PoDoFo::PdfErrorInfo(arg1,(char const *)arg2,(wchar_t const *)arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfErrorInfo,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfErrorInfo__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfErrorInfo *arg1 = 0 ;
  PoDoFo::PdfErrorInfo *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfErrorInfo::PdfErrorInfo",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfErrorInfo::PdfErrorInfo",1,"PoDoFo::PdfErrorInfo const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfErrorInfo,0))){
    SWIG_fail_ptr("new_PdfErrorInfo",1,SWIGTYPE_p_PoDoFo__PdfErrorInfo);
  }
  
  {
    try {
      result = (PoDoFo::PdfErrorInfo *)new PoDoFo::PdfErrorInfo((PoDoFo::PdfErrorInfo const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfErrorInfo,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfErrorInfo(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 0) {
    return _wrap_new_PdfErrorInfo__SWIG_0(L);
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfErrorInfo, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfErrorInfo__SWIG_3(L);
    }
  }
  if (argc == 3) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_wchar_t, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfErrorInfo__SWIG_2(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = SWIG_lua_isnilstring(L,argv[2]);
        }
        if (_v) {
          return _wrap_new_PdfErrorInfo__SWIG_1(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfErrorInfo'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfErrorInfo::PdfErrorInfo()\n"
    "    PoDoFo::PdfErrorInfo::PdfErrorInfo(int,char const *,char const *)\n"
    "    PoDoFo::PdfErrorInfo::PdfErrorInfo(int,char const *,wchar_t const *)\n"
    "    PoDoFo::PdfErrorInfo::PdfErrorInfo(PoDoFo::PdfErrorInfo const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfErrorInfo_GetLine(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfErrorInfo *arg1 = (PoDoFo::PdfErrorInfo *) 0 ;
  int result;
  
  SWIG_check_num_args("PoDoFo::PdfErrorInfo::GetLine",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfErrorInfo::GetLine",1,"PoDoFo::PdfErrorInfo const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfErrorInfo,0))){
    SWIG_fail_ptr("PdfErrorInfo_GetLine",1,SWIGTYPE_p_PoDoFo__PdfErrorInfo);
  }
  
  {
    try {
      result = (int)((PoDoFo::PdfErrorInfo const *)arg1)->GetLine();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfErrorInfo_GetFilename(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfErrorInfo *arg1 = (PoDoFo::PdfErrorInfo *) 0 ;
  std::string *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfErrorInfo::GetFilename",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfErrorInfo::GetFilename",1,"PoDoFo::PdfErrorInfo const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfErrorInfo,0))){
    SWIG_fail_ptr("PdfErrorInfo_GetFilename",1,SWIGTYPE_p_PoDoFo__PdfErrorInfo);
  }
  
  {
    try {
      result = (std::string *) &((PoDoFo::PdfErrorInfo const *)arg1)->GetFilename();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_std__string,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfErrorInfo_GetInformation(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfErrorInfo *arg1 = (PoDoFo::PdfErrorInfo *) 0 ;
  std::string *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfErrorInfo::GetInformation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfErrorInfo::GetInformation",1,"PoDoFo::PdfErrorInfo const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfErrorInfo,0))){
    SWIG_fail_ptr("PdfErrorInfo_GetInformation",1,SWIGTYPE_p_PoDoFo__PdfErrorInfo);
  }
  
  {
    try {
      result = (std::string *) &((PoDoFo::PdfErrorInfo const *)arg1)->GetInformation();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_std__string,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfErrorInfo_GetInformationW(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfErrorInfo *arg1 = (PoDoFo::PdfErrorInfo *) 0 ;
  std::wstring *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfErrorInfo::GetInformationW",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfErrorInfo::GetInformationW",1,"PoDoFo::PdfErrorInfo const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfErrorInfo,0))){
    SWIG_fail_ptr("PdfErrorInfo_GetInformationW",1,SWIGTYPE_p_PoDoFo__PdfErrorInfo);
  }
  
  {
    try {
      result = (std::wstring *) &((PoDoFo::PdfErrorInfo const *)arg1)->GetInformationW();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_std__wstring,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfErrorInfo_SetInformation__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfErrorInfo *arg1 = (PoDoFo::PdfErrorInfo *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfErrorInfo::SetInformation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfErrorInfo::SetInformation",1,"PoDoFo::PdfErrorInfo *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfErrorInfo::SetInformation",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfErrorInfo,0))){
    SWIG_fail_ptr("PdfErrorInfo_SetInformation",1,SWIGTYPE_p_PoDoFo__PdfErrorInfo);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  {
    try {
      (arg1)->SetInformation((char const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfErrorInfo_SetInformation__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfErrorInfo *arg1 = (PoDoFo::PdfErrorInfo *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfErrorInfo::SetInformation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfErrorInfo::SetInformation",1,"PoDoFo::PdfErrorInfo *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfErrorInfo::SetInformation",2,"wchar_t const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfErrorInfo,0))){
    SWIG_fail_ptr("PdfErrorInfo_SetInformation",1,SWIGTYPE_p_PoDoFo__PdfErrorInfo);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("PdfErrorInfo_SetInformation",2,SWIGTYPE_p_wchar_t);
  }
  
  {
    try {
      (arg1)->SetInformation((wchar_t const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfErrorInfo_SetInformation(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfErrorInfo, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_wchar_t, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfErrorInfo_SetInformation__SWIG_1(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfErrorInfo, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfErrorInfo_SetInformation__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfErrorInfo_SetInformation'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfErrorInfo::SetInformation(char const *)\n"
    "    PoDoFo::PdfErrorInfo::SetInformation(wchar_t const *)\n");
  lua_error(L);return 0;
}


static void swig_delete_PdfErrorInfo(void *obj) {
PoDoFo::PdfErrorInfo *arg1 = (PoDoFo::PdfErrorInfo *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfErrorInfo(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfErrorInfo);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfErrorInfo_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfErrorInfo_methods[]= {
    { "GetLine", _wrap_PdfErrorInfo_GetLine},
    { "GetFilename", _wrap_PdfErrorInfo_GetFilename},
    { "GetInformation", _wrap_PdfErrorInfo_GetInformation},
    { "GetInformationW", _wrap_PdfErrorInfo_GetInformationW},
    { "SetInformation", _wrap_PdfErrorInfo_SetInformation},
    {0,0}
};
static swig_lua_method swig_PdfErrorInfo_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfErrorInfo_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfErrorInfo_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfErrorInfo_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfErrorInfo_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfErrorInfo_Sf_SwigStatic = {
    "PdfErrorInfo",
    swig_PdfErrorInfo_Sf_SwigStatic_methods,
    swig_PdfErrorInfo_Sf_SwigStatic_attributes,
    swig_PdfErrorInfo_Sf_SwigStatic_constants,
    swig_PdfErrorInfo_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfErrorInfo_bases[] = {0};
static const char *swig_PdfErrorInfo_base_names[] = {0};
static swig_lua_class _wrap_class_PdfErrorInfo = { "PdfErrorInfo", "PdfErrorInfo", &SWIGTYPE_p_PoDoFo__PdfErrorInfo,_proxy__wrap_new_PdfErrorInfo, swig_delete_PdfErrorInfo, swig_PdfErrorInfo_methods, swig_PdfErrorInfo_attributes, &swig_PdfErrorInfo_Sf_SwigStatic, swig_PdfErrorInfo_meta, swig_PdfErrorInfo_bases, swig_PdfErrorInfo_base_names };

static int _wrap_PdfError_SetLogMessageCallback(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError::LogMessageCallback *arg1 = (PoDoFo::PdfError::LogMessageCallback *) 0 ;
  PoDoFo::PdfError::LogMessageCallback *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::SetLogMessageCallback",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfError::SetLogMessageCallback",1,"PoDoFo::PdfError::LogMessageCallback *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError__LogMessageCallback,0))){
    SWIG_fail_ptr("PdfError_SetLogMessageCallback",1,SWIGTYPE_p_PoDoFo__PdfError__LogMessageCallback);
  }
  
  {
    try {
      result = (PoDoFo::PdfError::LogMessageCallback *)PoDoFo::PdfError::SetLogMessageCallback(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfError__LogMessageCallback,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfError__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::PdfError",0,0)
  {
    try {
      result = (PoDoFo::PdfError *)new PoDoFo::PdfError();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfError,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfError__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::EPdfError *arg1 = 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  PoDoFo::EPdfError temp1 ;
  PoDoFo::PdfError *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::PdfError",4,4)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfError::PdfError",1,"PoDoFo::EPdfError const &");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfError::PdfError",2,"char const *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfError::PdfError",3,"int");
  if(!SWIG_lua_isnilstring(L,4)) SWIG_fail_arg("PoDoFo::PdfError::PdfError",4,"char const *");
  temp1=(PoDoFo::EPdfError)(int)lua_tonumber(L,1); arg1=&temp1;
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (char *)lua_tostring(L, 4);
  {
    try {
      result = (PoDoFo::PdfError *)new PoDoFo::PdfError((PoDoFo::EPdfError const &)*arg1,(char const *)arg2,arg3,(char const *)arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfError,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfError__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::EPdfError *arg1 = 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  PoDoFo::EPdfError temp1 ;
  PoDoFo::PdfError *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::PdfError",3,3)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfError::PdfError",1,"PoDoFo::EPdfError const &");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfError::PdfError",2,"char const *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfError::PdfError",3,"int");
  temp1=(PoDoFo::EPdfError)(int)lua_tonumber(L,1); arg1=&temp1;
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = (PoDoFo::PdfError *)new PoDoFo::PdfError((PoDoFo::EPdfError const &)*arg1,(char const *)arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfError,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfError__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::EPdfError *arg1 = 0 ;
  char *arg2 = (char *) 0 ;
  PoDoFo::EPdfError temp1 ;
  PoDoFo::PdfError *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::PdfError",2,2)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfError::PdfError",1,"PoDoFo::EPdfError const &");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfError::PdfError",2,"char const *");
  temp1=(PoDoFo::EPdfError)(int)lua_tonumber(L,1); arg1=&temp1;
  arg2 = (char *)lua_tostring(L, 2);
  {
    try {
      result = (PoDoFo::PdfError *)new PoDoFo::PdfError((PoDoFo::EPdfError const &)*arg1,(char const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfError,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfError__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::EPdfError *arg1 = 0 ;
  PoDoFo::EPdfError temp1 ;
  PoDoFo::PdfError *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::PdfError",1,1)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfError::PdfError",1,"PoDoFo::EPdfError const &");
  temp1=(PoDoFo::EPdfError)(int)lua_tonumber(L,1); arg1=&temp1;
  {
    try {
      result = (PoDoFo::PdfError *)new PoDoFo::PdfError((PoDoFo::EPdfError const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfError,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfError__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *arg1 = 0 ;
  PoDoFo::PdfError *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::PdfError",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfError::PdfError",1,"PoDoFo::PdfError const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("new_PdfError",1,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  {
    try {
      result = (PoDoFo::PdfError *)new PoDoFo::PdfError((PoDoFo::PdfError const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfError,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfError(lua_State* L) {
  int argc;
  int argv[5]={
    1,2,3,4,5
  };
  
  argc = lua_gettop(L);
  if (argc == 0) {
    return _wrap_new_PdfError__SWIG_0(L);
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfError, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfError__SWIG_5(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      return _wrap_new_PdfError__SWIG_4(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_new_PdfError__SWIG_3(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_new_PdfError__SWIG_2(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = SWIG_lua_isnilstring(L,argv[3]);
          }
          if (_v) {
            return _wrap_new_PdfError__SWIG_1(L);
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfError'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfError::PdfError()\n"
    "    PoDoFo::PdfError::PdfError(PoDoFo::EPdfError const &,char const *,int,char const *)\n"
    "    PoDoFo::PdfError::PdfError(PoDoFo::EPdfError const &,char const *,int)\n"
    "    PoDoFo::PdfError::PdfError(PoDoFo::EPdfError const &,char const *)\n"
    "    PoDoFo::PdfError::PdfError(PoDoFo::EPdfError const &)\n"
    "    PoDoFo::PdfError::PdfError(PoDoFo::PdfError const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfError___eq__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *arg1 = (PoDoFo::PdfError *) 0 ;
  PoDoFo::PdfError *arg2 = 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfError::operator ==",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfError::operator ==",1,"PoDoFo::PdfError *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfError::operator ==",2,"PoDoFo::PdfError const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("PdfError___eq",1,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("PdfError___eq",2,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  {
    try {
      result = (bool)(arg1)->operator ==((PoDoFo::PdfError const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError___eq__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *arg1 = (PoDoFo::PdfError *) 0 ;
  PoDoFo::EPdfError *arg2 = 0 ;
  PoDoFo::EPdfError temp2 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfError::operator ==",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfError::operator ==",1,"PoDoFo::PdfError *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfError::operator ==",2,"PoDoFo::EPdfError const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("PdfError___eq",1,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  temp2=(PoDoFo::EPdfError)(int)lua_tonumber(L,2); arg2=&temp2;
  {
    try {
      result = (bool)(arg1)->operator ==((PoDoFo::EPdfError const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError___eq(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfError, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfError, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfError___eq__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfError, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfError___eq__SWIG_1(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfError___eq'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfError::operator ==(PoDoFo::PdfError const &)\n"
    "    PoDoFo::PdfError::operator ==(PoDoFo::EPdfError const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfError_GetError(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *arg1 = (PoDoFo::PdfError *) 0 ;
  PoDoFo::EPdfError result;
  
  SWIG_check_num_args("PoDoFo::PdfError::GetError",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfError::GetError",1,"PoDoFo::PdfError const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("PdfError_GetError",1,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  {
    try {
      result = (PoDoFo::EPdfError)((PoDoFo::PdfError const *)arg1)->GetError();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_GetCallstack(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *arg1 = (PoDoFo::PdfError *) 0 ;
  PoDoFo::TDequeErrorInfo *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::GetCallstack",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfError::GetCallstack",1,"PoDoFo::PdfError const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("PdfError_GetCallstack",1,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  {
    try {
      result = (PoDoFo::TDequeErrorInfo *) &((PoDoFo::PdfError const *)arg1)->GetCallstack();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_std__dequeT_PoDoFo__PdfErrorInfo_t,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_SetError__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *arg1 = (PoDoFo::PdfError *) 0 ;
  PoDoFo::EPdfError *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  char *arg5 = (char *) 0 ;
  PoDoFo::EPdfError temp2 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::SetError",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfError::SetError",1,"PoDoFo::PdfError *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfError::SetError",2,"PoDoFo::EPdfError const &");
  if(!SWIG_lua_isnilstring(L,3)) SWIG_fail_arg("PoDoFo::PdfError::SetError",3,"char const *");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfError::SetError",4,"int");
  if(!SWIG_lua_isnilstring(L,5)) SWIG_fail_arg("PoDoFo::PdfError::SetError",5,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("PdfError_SetError",1,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  temp2=(PoDoFo::EPdfError)(int)lua_tonumber(L,2); arg2=&temp2;
  arg3 = (char *)lua_tostring(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (char *)lua_tostring(L, 5);
  {
    try {
      (arg1)->SetError((PoDoFo::EPdfError const &)*arg2,(char const *)arg3,arg4,(char const *)arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_SetError__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *arg1 = (PoDoFo::PdfError *) 0 ;
  PoDoFo::EPdfError *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  int arg4 ;
  PoDoFo::EPdfError temp2 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::SetError",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfError::SetError",1,"PoDoFo::PdfError *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfError::SetError",2,"PoDoFo::EPdfError const &");
  if(!SWIG_lua_isnilstring(L,3)) SWIG_fail_arg("PoDoFo::PdfError::SetError",3,"char const *");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfError::SetError",4,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("PdfError_SetError",1,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  temp2=(PoDoFo::EPdfError)(int)lua_tonumber(L,2); arg2=&temp2;
  arg3 = (char *)lua_tostring(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  {
    try {
      (arg1)->SetError((PoDoFo::EPdfError const &)*arg2,(char const *)arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_SetError__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *arg1 = (PoDoFo::PdfError *) 0 ;
  PoDoFo::EPdfError *arg2 = 0 ;
  char *arg3 = (char *) 0 ;
  PoDoFo::EPdfError temp2 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::SetError",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfError::SetError",1,"PoDoFo::PdfError *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfError::SetError",2,"PoDoFo::EPdfError const &");
  if(!SWIG_lua_isnilstring(L,3)) SWIG_fail_arg("PoDoFo::PdfError::SetError",3,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("PdfError_SetError",1,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  temp2=(PoDoFo::EPdfError)(int)lua_tonumber(L,2); arg2=&temp2;
  arg3 = (char *)lua_tostring(L, 3);
  {
    try {
      (arg1)->SetError((PoDoFo::EPdfError const &)*arg2,(char const *)arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_SetError__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *arg1 = (PoDoFo::PdfError *) 0 ;
  PoDoFo::EPdfError *arg2 = 0 ;
  PoDoFo::EPdfError temp2 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::SetError",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfError::SetError",1,"PoDoFo::PdfError *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfError::SetError",2,"PoDoFo::EPdfError const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("PdfError_SetError",1,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  temp2=(PoDoFo::EPdfError)(int)lua_tonumber(L,2); arg2=&temp2;
  {
    try {
      (arg1)->SetError((PoDoFo::EPdfError const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_SetError(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfError, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfError_SetError__SWIG_3(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfError, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = SWIG_lua_isnilstring(L,argv[2]);
        }
        if (_v) {
          return _wrap_PdfError_SetError__SWIG_2(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfError, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = SWIG_lua_isnilstring(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_PdfError_SetError__SWIG_1(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfError, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = SWIG_lua_isnilstring(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = SWIG_lua_isnilstring(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfError_SetError__SWIG_0(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfError_SetError'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfError::SetError(PoDoFo::EPdfError const &,char const *,int,char const *)\n"
    "    PoDoFo::PdfError::SetError(PoDoFo::EPdfError const &,char const *,int)\n"
    "    PoDoFo::PdfError::SetError(PoDoFo::EPdfError const &,char const *)\n"
    "    PoDoFo::PdfError::SetError(PoDoFo::EPdfError const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfError_SetErrorInformation__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *arg1 = (PoDoFo::PdfError *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::SetErrorInformation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfError::SetErrorInformation",1,"PoDoFo::PdfError *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfError::SetErrorInformation",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("PdfError_SetErrorInformation",1,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  {
    try {
      (arg1)->SetErrorInformation((char const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_SetErrorInformation__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *arg1 = (PoDoFo::PdfError *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::SetErrorInformation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfError::SetErrorInformation",1,"PoDoFo::PdfError *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfError::SetErrorInformation",2,"wchar_t const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("PdfError_SetErrorInformation",1,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("PdfError_SetErrorInformation",2,SWIGTYPE_p_wchar_t);
  }
  
  {
    try {
      (arg1)->SetErrorInformation((wchar_t const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_SetErrorInformation(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfError, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_wchar_t, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfError_SetErrorInformation__SWIG_1(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfError, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfError_SetErrorInformation__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfError_SetErrorInformation'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfError::SetErrorInformation(char const *)\n"
    "    PoDoFo::PdfError::SetErrorInformation(wchar_t const *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfError_AddToCallstack__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *arg1 = (PoDoFo::PdfError *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::AddToCallstack",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfError::AddToCallstack",1,"PoDoFo::PdfError *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfError::AddToCallstack",2,"char const *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfError::AddToCallstack",3,"int");
  if(!SWIG_lua_isnilstring(L,4)) SWIG_fail_arg("PoDoFo::PdfError::AddToCallstack",4,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("PdfError_AddToCallstack",1,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (char *)lua_tostring(L, 4);
  {
    try {
      (arg1)->AddToCallstack((char const *)arg2,arg3,(char const *)arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_AddToCallstack__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *arg1 = (PoDoFo::PdfError *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::AddToCallstack",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfError::AddToCallstack",1,"PoDoFo::PdfError *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfError::AddToCallstack",2,"char const *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfError::AddToCallstack",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("PdfError_AddToCallstack",1,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      (arg1)->AddToCallstack((char const *)arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_AddToCallstack__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *arg1 = (PoDoFo::PdfError *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::AddToCallstack",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfError::AddToCallstack",1,"PoDoFo::PdfError *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfError::AddToCallstack",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("PdfError_AddToCallstack",1,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  {
    try {
      (arg1)->AddToCallstack((char const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_AddToCallstack__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *arg1 = (PoDoFo::PdfError *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::AddToCallstack",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfError::AddToCallstack",1,"PoDoFo::PdfError *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("PdfError_AddToCallstack",1,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  {
    try {
      (arg1)->AddToCallstack();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_AddToCallstack(lua_State* L) {
  int argc;
  int argv[5]={
    1,2,3,4,5
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfError, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfError_AddToCallstack__SWIG_3(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfError, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfError_AddToCallstack__SWIG_2(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfError, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_PdfError_AddToCallstack__SWIG_1(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfError, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = SWIG_lua_isnilstring(L,argv[3]);
          }
          if (_v) {
            return _wrap_PdfError_AddToCallstack__SWIG_0(L);
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfError_AddToCallstack'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfError::AddToCallstack(char const *,int,char const *)\n"
    "    PoDoFo::PdfError::AddToCallstack(char const *,int)\n"
    "    PoDoFo::PdfError::AddToCallstack(char const *)\n"
    "    PoDoFo::PdfError::AddToCallstack()\n");
  lua_error(L);return 0;
}


static int _wrap_PdfError_IsError(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *arg1 = (PoDoFo::PdfError *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfError::IsError",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfError::IsError",1,"PoDoFo::PdfError const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("PdfError_IsError",1,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfError const *)arg1)->IsError();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_PrintErrorMsg(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *arg1 = (PoDoFo::PdfError *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::PrintErrorMsg",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfError::PrintErrorMsg",1,"PoDoFo::PdfError const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("PdfError_PrintErrorMsg",1,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  {
    try {
      ((PoDoFo::PdfError const *)arg1)->PrintErrorMsg();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_what(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfError *arg1 = (PoDoFo::PdfError *) 0 ;
  char *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::what",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfError::what",1,"PoDoFo::PdfError const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfError,0))){
    SWIG_fail_ptr("PdfError_what",1,SWIGTYPE_p_PoDoFo__PdfError);
  }
  
  {
    try {
      result = (char *)((PoDoFo::PdfError const *)arg1)->what();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushstring(L,(const char *)result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_ErrorName(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::EPdfError arg1 ;
  char *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::ErrorName",1,1)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfError::ErrorName",1,"PoDoFo::EPdfError");
  arg1 = (PoDoFo::EPdfError)(int)lua_tonumber(L, 1);
  {
    try {
      result = (char *)PoDoFo::PdfError::ErrorName(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushstring(L,(const char *)result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_ErrorMessage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::EPdfError arg1 ;
  char *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::ErrorMessage",1,1)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfError::ErrorMessage",1,"PoDoFo::EPdfError");
  arg1 = (PoDoFo::EPdfError)(int)lua_tonumber(L, 1);
  {
    try {
      result = (char *)PoDoFo::PdfError::ErrorMessage(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushstring(L,(const char *)result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_LogMessage__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::ELogSeverity arg1 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::LogMessage",2,2)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfError::LogMessage",1,"PoDoFo::ELogSeverity");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfError::LogMessage",2,"char const *");
  arg1 = (PoDoFo::ELogSeverity)(int)lua_tonumber(L, 1);
  arg2 = (char *)lua_tostring(L, 2);
  {
    try {
      PoDoFo::PdfError::LogMessage(arg1,(char const *)arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_LogMessage__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::ELogSeverity arg1 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  void *arg3 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::LogMessage",2,2)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfError::LogMessage",1,"PoDoFo::ELogSeverity");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfError::LogMessage",2,"wchar_t const *");
  arg1 = (PoDoFo::ELogSeverity)(int)lua_tonumber(L, 1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_wchar_t,0))){
    SWIG_fail_ptr("PdfError_LogMessage",2,SWIGTYPE_p_wchar_t);
  }
  
  {
    try {
      PoDoFo::PdfError::LogMessage(arg1,(wchar_t const *)arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_LogMessage(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_wchar_t, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        if (argc <= 2) {
          return _wrap_PdfError_LogMessage__SWIG_1(L);
        }
        return _wrap_PdfError_LogMessage__SWIG_1(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        if (argc <= 2) {
          return _wrap_PdfError_LogMessage__SWIG_0(L);
        }
        return _wrap_PdfError_LogMessage__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfError_LogMessage'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfError::LogMessage(PoDoFo::ELogSeverity,char const *,...)\n"
    "    PoDoFo::PdfError::LogMessage(PoDoFo::ELogSeverity,wchar_t const *,...)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfError_EnableLogging(lua_State* L) {
  int SWIG_arg = 0;
  bool arg1 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::EnableLogging",1,1)
  if(!lua_isboolean(L,1)) SWIG_fail_arg("PoDoFo::PdfError::EnableLogging",1,"bool");
  arg1 = (lua_toboolean(L, 1)!=0);
  {
    try {
      PoDoFo::PdfError::EnableLogging(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_LoggingEnabled(lua_State* L) {
  int SWIG_arg = 0;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfError::LoggingEnabled",0,0)
  {
    try {
      result = (bool)PoDoFo::PdfError::LoggingEnabled();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_DebugMessage(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::DebugMessage",1,1)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfError::DebugMessage",1,"char const *");
  arg1 = (char *)lua_tostring(L, 1);
  {
    try {
      PoDoFo::PdfError::DebugMessage((char const *)arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_EnableDebug(lua_State* L) {
  int SWIG_arg = 0;
  bool arg1 ;
  
  SWIG_check_num_args("PoDoFo::PdfError::EnableDebug",1,1)
  if(!lua_isboolean(L,1)) SWIG_fail_arg("PoDoFo::PdfError::EnableDebug",1,"bool");
  arg1 = (lua_toboolean(L, 1)!=0);
  {
    try {
      PoDoFo::PdfError::EnableDebug(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfError_DebugEnabled(lua_State* L) {
  int SWIG_arg = 0;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfError::DebugEnabled",0,0)
  {
    try {
      result = (bool)PoDoFo::PdfError::DebugEnabled();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfError(void *obj) {
PoDoFo::PdfError *arg1 = (PoDoFo::PdfError *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfError(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfError);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfError_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfError_methods[]= {
    { "__eq", _wrap_PdfError___eq},
    { "GetError", _wrap_PdfError_GetError},
    { "GetCallstack", _wrap_PdfError_GetCallstack},
    { "SetError", _wrap_PdfError_SetError},
    { "SetErrorInformation", _wrap_PdfError_SetErrorInformation},
    { "AddToCallstack", _wrap_PdfError_AddToCallstack},
    { "IsError", _wrap_PdfError_IsError},
    { "PrintErrorMsg", _wrap_PdfError_PrintErrorMsg},
    { "what", _wrap_PdfError_what},
    {0,0}
};
static swig_lua_method swig_PdfError_meta[] = {
    { "__eq", _wrap_PdfError___eq},
    {0,0}
};

static swig_lua_attribute swig_PdfError_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfError_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfError_Sf_SwigStatic_methods[]= {
    { "SetLogMessageCallback", _wrap_PdfError_SetLogMessageCallback},
    { "ErrorName", _wrap_PdfError_ErrorName},
    { "ErrorMessage", _wrap_PdfError_ErrorMessage},
    { "LogMessage", _wrap_PdfError_LogMessage},
    { "EnableLogging", _wrap_PdfError_EnableLogging},
    { "LoggingEnabled", _wrap_PdfError_LoggingEnabled},
    { "DebugMessage", _wrap_PdfError_DebugMessage},
    { "EnableDebug", _wrap_PdfError_EnableDebug},
    { "DebugEnabled", _wrap_PdfError_DebugEnabled},
    {0,0}
};
static swig_lua_class* swig_PdfError_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfError_Sf_SwigStatic = {
    "PdfError",
    swig_PdfError_Sf_SwigStatic_methods,
    swig_PdfError_Sf_SwigStatic_attributes,
    swig_PdfError_Sf_SwigStatic_constants,
    swig_PdfError_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfError_bases[] = {0};
static const char *swig_PdfError_base_names[] = {0};
static swig_lua_class _wrap_class_PdfError = { "PdfError", "PdfError", &SWIGTYPE_p_PoDoFo__PdfError,_proxy__wrap_new_PdfError, swig_delete_PdfError, swig_PdfError_methods, swig_PdfError_attributes, &swig_PdfError_Sf_SwigStatic, swig_PdfError_meta, swig_PdfError_bases, swig_PdfError_base_names };

static int _wrap_new_PdfCMapEncoding__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfObject *arg2 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfCMapEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfCMapEncoding::PdfCMapEncoding",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCMapEncoding::PdfCMapEncoding",1,"PoDoFo::PdfObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfCMapEncoding::PdfCMapEncoding",2,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfCMapEncoding",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfCMapEncoding",2,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfCMapEncoding *)new PoDoFo::PdfCMapEncoding(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfCMapEncoding,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfCMapEncoding__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfCMapEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfCMapEncoding::PdfCMapEncoding",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCMapEncoding::PdfCMapEncoding",1,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfCMapEncoding",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfCMapEncoding *)new PoDoFo::PdfCMapEncoding(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfCMapEncoding,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfCMapEncoding(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfCMapEncoding__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfCMapEncoding__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfCMapEncoding'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfCMapEncoding::PdfCMapEncoding(PoDoFo::PdfObject *,PoDoFo::PdfObject *)\n"
    "    PoDoFo::PdfCMapEncoding::PdfCMapEncoding(PoDoFo::PdfObject *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfCMapEncoding_ConvertToUnicode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfCMapEncoding *arg1 = (PoDoFo::PdfCMapEncoding *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  PdfFont *arg3 = (PdfFont *) 0 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfCMapEncoding::ConvertToUnicode",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCMapEncoding::ConvertToUnicode",1,"PoDoFo::PdfCMapEncoding const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfCMapEncoding::ConvertToUnicode",2,"PoDoFo::PdfString const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfCMapEncoding::ConvertToUnicode",3,"PdfFont const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfCMapEncoding,0))){
    SWIG_fail_ptr("PdfCMapEncoding_ConvertToUnicode",1,SWIGTYPE_p_PoDoFo__PdfCMapEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfCMapEncoding_ConvertToUnicode",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PdfFont,0))){
    SWIG_fail_ptr("PdfCMapEncoding_ConvertToUnicode",3,SWIGTYPE_p_PdfFont);
  }
  
  {
    try {
      result = ((PoDoFo::PdfCMapEncoding const *)arg1)->ConvertToUnicode((PoDoFo::PdfString const &)*arg2,(PdfFont const *)arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfCMapEncoding_AddToDictionary(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfCMapEncoding *arg1 = (PoDoFo::PdfCMapEncoding *) 0 ;
  PoDoFo::PdfDictionary *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfCMapEncoding::AddToDictionary",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCMapEncoding::AddToDictionary",1,"PoDoFo::PdfCMapEncoding const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfCMapEncoding::AddToDictionary",2,"PoDoFo::PdfDictionary &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfCMapEncoding,0))){
    SWIG_fail_ptr("PdfCMapEncoding_AddToDictionary",1,SWIGTYPE_p_PoDoFo__PdfCMapEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfDictionary,0))){
    SWIG_fail_ptr("PdfCMapEncoding_AddToDictionary",2,SWIGTYPE_p_PoDoFo__PdfDictionary);
  }
  
  {
    try {
      ((PoDoFo::PdfCMapEncoding const *)arg1)->AddToDictionary(*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfCMapEncoding_ConvertToEncoding(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfCMapEncoding *arg1 = (PoDoFo::PdfCMapEncoding *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  PdfFont *arg3 = (PdfFont *) 0 ;
  PdfRefCountedBuffer result;
  
  SWIG_check_num_args("PoDoFo::PdfCMapEncoding::ConvertToEncoding",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCMapEncoding::ConvertToEncoding",1,"PoDoFo::PdfCMapEncoding const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfCMapEncoding::ConvertToEncoding",2,"PoDoFo::PdfString const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfCMapEncoding::ConvertToEncoding",3,"PdfFont const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfCMapEncoding,0))){
    SWIG_fail_ptr("PdfCMapEncoding_ConvertToEncoding",1,SWIGTYPE_p_PoDoFo__PdfCMapEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfCMapEncoding_ConvertToEncoding",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PdfFont,0))){
    SWIG_fail_ptr("PdfCMapEncoding_ConvertToEncoding",3,SWIGTYPE_p_PdfFont);
  }
  
  {
    try {
      result = ((PoDoFo::PdfCMapEncoding const *)arg1)->ConvertToEncoding((PoDoFo::PdfString const &)*arg2,(PdfFont const *)arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PdfRefCountedBuffer * resultptr = new PdfRefCountedBuffer((const PdfRefCountedBuffer &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PdfRefCountedBuffer,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfCMapEncoding_IsAutoDelete(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfCMapEncoding *arg1 = (PoDoFo::PdfCMapEncoding *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfCMapEncoding::IsAutoDelete",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCMapEncoding::IsAutoDelete",1,"PoDoFo::PdfCMapEncoding const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfCMapEncoding,0))){
    SWIG_fail_ptr("PdfCMapEncoding_IsAutoDelete",1,SWIGTYPE_p_PoDoFo__PdfCMapEncoding);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfCMapEncoding const *)arg1)->IsAutoDelete();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfCMapEncoding_IsSingleByteEncoding(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfCMapEncoding *arg1 = (PoDoFo::PdfCMapEncoding *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfCMapEncoding::IsSingleByteEncoding",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCMapEncoding::IsSingleByteEncoding",1,"PoDoFo::PdfCMapEncoding const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfCMapEncoding,0))){
    SWIG_fail_ptr("PdfCMapEncoding_IsSingleByteEncoding",1,SWIGTYPE_p_PoDoFo__PdfCMapEncoding);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfCMapEncoding const *)arg1)->IsSingleByteEncoding();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfCMapEncoding_GetCharCode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfCMapEncoding *arg1 = (PoDoFo::PdfCMapEncoding *) 0 ;
  int arg2 ;
  PoDoFo::pdf_utf16be result;
  
  SWIG_check_num_args("PoDoFo::PdfCMapEncoding::GetCharCode",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCMapEncoding::GetCharCode",1,"PoDoFo::PdfCMapEncoding const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfCMapEncoding::GetCharCode",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfCMapEncoding,0))){
    SWIG_fail_ptr("PdfCMapEncoding_GetCharCode",1,SWIGTYPE_p_PoDoFo__PdfCMapEncoding);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = ((PoDoFo::PdfCMapEncoding const *)arg1)->GetCharCode(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::pdf_utf16be * resultptr = new PoDoFo::pdf_utf16be((const PoDoFo::pdf_utf16be &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_uint16,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfCMapEncoding_GetID(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfCMapEncoding *arg1 = (PoDoFo::PdfCMapEncoding *) 0 ;
  PoDoFo::PdfName *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfCMapEncoding::GetID",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCMapEncoding::GetID",1,"PoDoFo::PdfCMapEncoding const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfCMapEncoding,0))){
    SWIG_fail_ptr("PdfCMapEncoding_GetID",1,SWIGTYPE_p_PoDoFo__PdfCMapEncoding);
  }
  
  {
    try {
      result = (PoDoFo::PdfName *) &((PoDoFo::PdfCMapEncoding const *)arg1)->GetID();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfName,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfCMapEncoding_GetBaseEncoding(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfCMapEncoding *arg1 = (PoDoFo::PdfCMapEncoding *) 0 ;
  PoDoFo::PdfEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfCMapEncoding::GetBaseEncoding",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCMapEncoding::GetBaseEncoding",1,"PoDoFo::PdfCMapEncoding const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfCMapEncoding,0))){
    SWIG_fail_ptr("PdfCMapEncoding_GetBaseEncoding",1,SWIGTYPE_p_PoDoFo__PdfCMapEncoding);
  }
  
  {
    try {
      result = (PoDoFo::PdfEncoding *)((PoDoFo::PdfCMapEncoding const *)arg1)->GetBaseEncoding();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfEncoding,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfCMapEncoding(void *obj) {
PoDoFo::PdfCMapEncoding *arg1 = (PoDoFo::PdfCMapEncoding *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfCMapEncoding(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfCMapEncoding);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfCMapEncoding_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfCMapEncoding_methods[]= {
    { "ConvertToUnicode", _wrap_PdfCMapEncoding_ConvertToUnicode},
    { "AddToDictionary", _wrap_PdfCMapEncoding_AddToDictionary},
    { "ConvertToEncoding", _wrap_PdfCMapEncoding_ConvertToEncoding},
    { "IsAutoDelete", _wrap_PdfCMapEncoding_IsAutoDelete},
    { "IsSingleByteEncoding", _wrap_PdfCMapEncoding_IsSingleByteEncoding},
    { "GetCharCode", _wrap_PdfCMapEncoding_GetCharCode},
    { "GetID", _wrap_PdfCMapEncoding_GetID},
    { "GetBaseEncoding", _wrap_PdfCMapEncoding_GetBaseEncoding},
    {0,0}
};
static swig_lua_method swig_PdfCMapEncoding_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfCMapEncoding_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfCMapEncoding_Sf_SwigStatic_constants[]= {
    {SWIG_LUA_CONSTTAB_INT("eBaseEncoding_Font", PoDoFo::PdfCMapEncoding::eBaseEncoding_Font)},
    {SWIG_LUA_CONSTTAB_INT("eBaseEncoding_WinAnsi", PoDoFo::PdfCMapEncoding::eBaseEncoding_WinAnsi)},
    {SWIG_LUA_CONSTTAB_INT("eBaseEncoding_MacRoman", PoDoFo::PdfCMapEncoding::eBaseEncoding_MacRoman)},
    {SWIG_LUA_CONSTTAB_INT("eBaseEncoding_MacExpert", PoDoFo::PdfCMapEncoding::eBaseEncoding_MacExpert)},
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfCMapEncoding_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfCMapEncoding_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfCMapEncoding_Sf_SwigStatic = {
    "PdfCMapEncoding",
    swig_PdfCMapEncoding_Sf_SwigStatic_methods,
    swig_PdfCMapEncoding_Sf_SwigStatic_attributes,
    swig_PdfCMapEncoding_Sf_SwigStatic_constants,
    swig_PdfCMapEncoding_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfCMapEncoding_bases[] = {0};
static const char *swig_PdfCMapEncoding_base_names[] = {0};
static swig_lua_class _wrap_class_PdfCMapEncoding = { "PdfCMapEncoding", "PdfCMapEncoding", &SWIGTYPE_p_PoDoFo__PdfCMapEncoding,_proxy__wrap_new_PdfCMapEncoding, swig_delete_PdfCMapEncoding, swig_PdfCMapEncoding_methods, swig_PdfCMapEncoding_attributes, &swig_PdfCMapEncoding_Sf_SwigStatic, swig_PdfCMapEncoding_meta, swig_PdfCMapEncoding_bases, swig_PdfCMapEncoding_base_names };

static int _wrap_new_PdfContents__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfContents *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfContents::PdfContents",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfContents::PdfContents",1,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfContents",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfContents *)new PoDoFo::PdfContents(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfContents,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfContents__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfVecObjects *arg1 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfContents *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfContents::PdfContents",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfContents::PdfContents",1,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfContents",1,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfContents *)new PoDoFo::PdfContents(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfContents,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfContents__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfContents *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfContents::PdfContents",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfContents::PdfContents",1,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfContents",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfContents *)new PoDoFo::PdfContents(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfContents,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfContents__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfContents *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfContents::PdfContents",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfContents::PdfContents",1,"PoDoFo::PdfPage *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfContents",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  {
    try {
      result = (PoDoFo::PdfContents *)new PoDoFo::PdfContents(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfContents,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfContents(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfContents__SWIG_0(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfContents__SWIG_1(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfContents__SWIG_2(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfContents__SWIG_3(L);
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfContents'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfContents::PdfContents(PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfContents::PdfContents(PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfContents::PdfContents(PoDoFo::PdfObject *)\n"
    "    PoDoFo::PdfContents::PdfContents(PoDoFo::PdfPage *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfContents_GetContents(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfContents *arg1 = (PoDoFo::PdfContents *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfContents::GetContents",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfContents::GetContents",1,"PoDoFo::PdfContents const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfContents,0))){
    SWIG_fail_ptr("PdfContents_GetContents",1,SWIGTYPE_p_PoDoFo__PdfContents);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfContents const *)arg1)->GetContents();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfContents_GetContentsForAppending(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfContents *arg1 = (PoDoFo::PdfContents *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfContents::GetContentsForAppending",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfContents::GetContentsForAppending",1,"PoDoFo::PdfContents const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfContents,0))){
    SWIG_fail_ptr("PdfContents_GetContentsForAppending",1,SWIGTYPE_p_PoDoFo__PdfContents);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfContents const *)arg1)->GetContentsForAppending();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfContents(void *obj) {
PoDoFo::PdfContents *arg1 = (PoDoFo::PdfContents *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfContents(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfContents);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfContents_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfContents_methods[]= {
    { "GetContents", _wrap_PdfContents_GetContents},
    { "GetContentsForAppending", _wrap_PdfContents_GetContentsForAppending},
    {0,0}
};
static swig_lua_method swig_PdfContents_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfContents_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfContents_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfContents_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfContents_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfContents_Sf_SwigStatic = {
    "PdfContents",
    swig_PdfContents_Sf_SwigStatic_methods,
    swig_PdfContents_Sf_SwigStatic_attributes,
    swig_PdfContents_Sf_SwigStatic_constants,
    swig_PdfContents_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfContents_bases[] = {0};
static const char *swig_PdfContents_base_names[] = {0};
static swig_lua_class _wrap_class_PdfContents = { "PdfContents", "PdfContents", &SWIGTYPE_p_PoDoFo__PdfContents,_proxy__wrap_new_PdfContents, swig_delete_PdfContents, swig_PdfContents_methods, swig_PdfContents_attributes, &swig_PdfContents_Sf_SwigStatic, swig_PdfContents_meta, swig_PdfContents_bases, swig_PdfContents_base_names };

static int _wrap_new_PdfEncodingDifference__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfEncodingDifference *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfEncodingDifference::PdfEncodingDifference",0,0)
  {
    try {
      result = (PoDoFo::PdfEncodingDifference *)new PoDoFo::PdfEncodingDifference();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfEncodingDifference__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfEncodingDifference *arg1 = 0 ;
  PoDoFo::PdfEncodingDifference *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfEncodingDifference::PdfEncodingDifference",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::PdfEncodingDifference",1,"PoDoFo::PdfEncodingDifference const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,0))){
    SWIG_fail_ptr("new_PdfEncodingDifference",1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference);
  }
  
  {
    try {
      result = (PoDoFo::PdfEncodingDifference *)new PoDoFo::PdfEncodingDifference((PoDoFo::PdfEncodingDifference const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfEncodingDifference(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 0) {
    return _wrap_new_PdfEncodingDifference__SWIG_0(L);
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncodingDifference, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfEncodingDifference__SWIG_1(L);
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfEncodingDifference'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfEncodingDifference::PdfEncodingDifference()\n"
    "    PoDoFo::PdfEncodingDifference::PdfEncodingDifference(PoDoFo::PdfEncodingDifference const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfEncodingDifference_AddDifference__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfEncodingDifference *arg1 = (PoDoFo::PdfEncodingDifference *) 0 ;
  int arg2 ;
  PoDoFo::pdf_utf16be arg3 ;
  PoDoFo::pdf_utf16be *argp3 ;
  
  SWIG_check_num_args("PoDoFo::PdfEncodingDifference::AddDifference",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::AddDifference",1,"PoDoFo::PdfEncodingDifference *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::AddDifference",2,"int");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::AddDifference",3,"PoDoFo::pdf_utf16be");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,0))){
    SWIG_fail_ptr("PdfEncodingDifference_AddDifference",1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_pdf_uint16,0))){
    SWIG_fail_ptr("PdfEncodingDifference_AddDifference",3,SWIGTYPE_p_pdf_uint16);
  }
  arg3 = *argp3;
  
  {
    try {
      (arg1)->AddDifference(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfEncodingDifference_AddDifference__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfEncodingDifference *arg1 = (PoDoFo::PdfEncodingDifference *) 0 ;
  int arg2 ;
  PoDoFo::pdf_utf16be arg3 ;
  PoDoFo::PdfName *arg4 = 0 ;
  bool arg5 ;
  PoDoFo::pdf_utf16be *argp3 ;
  
  SWIG_check_num_args("PoDoFo::PdfEncodingDifference::AddDifference",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::AddDifference",1,"PoDoFo::PdfEncodingDifference *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::AddDifference",2,"int");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::AddDifference",3,"PoDoFo::pdf_utf16be");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::AddDifference",4,"PoDoFo::PdfName const &");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::AddDifference",5,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,0))){
    SWIG_fail_ptr("PdfEncodingDifference_AddDifference",1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_pdf_uint16,0))){
    SWIG_fail_ptr("PdfEncodingDifference_AddDifference",3,SWIGTYPE_p_pdf_uint16);
  }
  arg3 = *argp3;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfName,0))){
    SWIG_fail_ptr("PdfEncodingDifference_AddDifference",4,SWIGTYPE_p_PoDoFo__PdfName);
  }
  
  arg5 = (lua_toboolean(L, 5)!=0);
  {
    try {
      (arg1)->AddDifference(arg2,arg3,(PoDoFo::PdfName const &)*arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfEncodingDifference_AddDifference__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfEncodingDifference *arg1 = (PoDoFo::PdfEncodingDifference *) 0 ;
  int arg2 ;
  PoDoFo::pdf_utf16be arg3 ;
  PoDoFo::PdfName *arg4 = 0 ;
  PoDoFo::pdf_utf16be *argp3 ;
  
  SWIG_check_num_args("PoDoFo::PdfEncodingDifference::AddDifference",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::AddDifference",1,"PoDoFo::PdfEncodingDifference *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::AddDifference",2,"int");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::AddDifference",3,"PoDoFo::pdf_utf16be");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::AddDifference",4,"PoDoFo::PdfName const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,0))){
    SWIG_fail_ptr("PdfEncodingDifference_AddDifference",1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_pdf_uint16,0))){
    SWIG_fail_ptr("PdfEncodingDifference_AddDifference",3,SWIGTYPE_p_pdf_uint16);
  }
  arg3 = *argp3;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfName,0))){
    SWIG_fail_ptr("PdfEncodingDifference_AddDifference",4,SWIGTYPE_p_PoDoFo__PdfName);
  }
  
  {
    try {
      (arg1)->AddDifference(arg2,arg3,(PoDoFo::PdfName const &)*arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfEncodingDifference_AddDifference(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncodingDifference, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_pdf_uint16, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_PdfEncodingDifference_AddDifference__SWIG_0(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncodingDifference, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_pdf_uint16, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (lua_isuserdata(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfName, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_PdfEncodingDifference_AddDifference__SWIG_2(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncodingDifference, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_pdf_uint16, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (lua_isuserdata(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfName, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfEncodingDifference_AddDifference__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfEncodingDifference_AddDifference'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfEncodingDifference::AddDifference(int,PoDoFo::pdf_utf16be)\n"
    "    PoDoFo::PdfEncodingDifference::AddDifference(int,PoDoFo::pdf_utf16be,PoDoFo::PdfName const &,bool)\n"
    "    PoDoFo::PdfEncodingDifference::AddDifference(int,PoDoFo::pdf_utf16be,PoDoFo::PdfName const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfEncodingDifference_Contains(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfEncodingDifference *arg1 = (PoDoFo::PdfEncodingDifference *) 0 ;
  int arg2 ;
  PoDoFo::PdfName *arg3 = 0 ;
  PoDoFo::pdf_utf16be *arg4 = 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfEncodingDifference::Contains",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::Contains",1,"PoDoFo::PdfEncodingDifference const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::Contains",2,"int");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::Contains",3,"PoDoFo::PdfName &");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::Contains",4,"PoDoFo::pdf_utf16be &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,0))){
    SWIG_fail_ptr("PdfEncodingDifference_Contains",1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfName,0))){
    SWIG_fail_ptr("PdfEncodingDifference_Contains",3,SWIGTYPE_p_PoDoFo__PdfName);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_pdf_uint16,0))){
    SWIG_fail_ptr("PdfEncodingDifference_Contains",4,SWIGTYPE_p_pdf_uint16);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfEncodingDifference const *)arg1)->Contains(arg2,*arg3,*arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfEncodingDifference_ContainsUnicodeValue(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfEncodingDifference *arg1 = (PoDoFo::PdfEncodingDifference *) 0 ;
  PoDoFo::pdf_utf16be arg2 ;
  char *arg3 = 0 ;
  PoDoFo::pdf_utf16be *argp2 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfEncodingDifference::ContainsUnicodeValue",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::ContainsUnicodeValue",1,"PoDoFo::PdfEncodingDifference const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::ContainsUnicodeValue",2,"PoDoFo::pdf_utf16be");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::ContainsUnicodeValue",3,"char &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,0))){
    SWIG_fail_ptr("PdfEncodingDifference_ContainsUnicodeValue",1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_uint16,0))){
    SWIG_fail_ptr("PdfEncodingDifference_ContainsUnicodeValue",2,SWIGTYPE_p_pdf_uint16);
  }
  arg2 = *argp2;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_char,0))){
    SWIG_fail_ptr("PdfEncodingDifference_ContainsUnicodeValue",3,SWIGTYPE_p_char);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfEncodingDifference const *)arg1)->ContainsUnicodeValue(arg2,*arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfEncodingDifference_ToArray(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfEncodingDifference *arg1 = (PoDoFo::PdfEncodingDifference *) 0 ;
  PoDoFo::PdfArray *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfEncodingDifference::ToArray",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::ToArray",1,"PoDoFo::PdfEncodingDifference *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::ToArray",2,"PoDoFo::PdfArray &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,0))){
    SWIG_fail_ptr("PdfEncodingDifference_ToArray",1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("PdfEncodingDifference_ToArray",2,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  {
    try {
      (arg1)->ToArray(*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfEncodingDifference_GetCount(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfEncodingDifference *arg1 = (PoDoFo::PdfEncodingDifference *) 0 ;
  size_t result;
  
  SWIG_check_num_args("PoDoFo::PdfEncodingDifference::GetCount",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfEncodingDifference::GetCount",1,"PoDoFo::PdfEncodingDifference const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,0))){
    SWIG_fail_ptr("PdfEncodingDifference_GetCount",1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference);
  }
  
  {
    try {
      result = ((PoDoFo::PdfEncodingDifference const *)arg1)->GetCount();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfEncodingDifference(void *obj) {
PoDoFo::PdfEncodingDifference *arg1 = (PoDoFo::PdfEncodingDifference *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfEncodingDifference(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfEncodingDifference);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfEncodingDifference_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfEncodingDifference_methods[]= {
    { "AddDifference", _wrap_PdfEncodingDifference_AddDifference},
    { "Contains", _wrap_PdfEncodingDifference_Contains},
    { "ContainsUnicodeValue", _wrap_PdfEncodingDifference_ContainsUnicodeValue},
    { "ToArray", _wrap_PdfEncodingDifference_ToArray},
    { "GetCount", _wrap_PdfEncodingDifference_GetCount},
    {0,0}
};
static swig_lua_method swig_PdfEncodingDifference_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfEncodingDifference_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfEncodingDifference_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfEncodingDifference_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfEncodingDifference_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfEncodingDifference_Sf_SwigStatic = {
    "PdfEncodingDifference",
    swig_PdfEncodingDifference_Sf_SwigStatic_methods,
    swig_PdfEncodingDifference_Sf_SwigStatic_attributes,
    swig_PdfEncodingDifference_Sf_SwigStatic_constants,
    swig_PdfEncodingDifference_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfEncodingDifference_bases[] = {0};
static const char *swig_PdfEncodingDifference_base_names[] = {0};
static swig_lua_class _wrap_class_PdfEncodingDifference = { "PdfEncodingDifference", "PdfEncodingDifference", &SWIGTYPE_p_PoDoFo__PdfEncodingDifference,_proxy__wrap_new_PdfEncodingDifference, swig_delete_PdfEncodingDifference, swig_PdfEncodingDifference_methods, swig_PdfEncodingDifference_attributes, &swig_PdfEncodingDifference_Sf_SwigStatic, swig_PdfEncodingDifference_meta, swig_PdfEncodingDifference_bases, swig_PdfEncodingDifference_base_names };

static int _wrap_new_PdfDifferenceEncoding__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfEncodingDifference *arg1 = 0 ;
  PoDoFo::PdfDocument *arg2 = (PoDoFo::PdfDocument *) 0 ;
  bool arg3 ;
  PoDoFo::PdfDifferenceEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",3,3)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",1,"PoDoFo::PdfEncodingDifference const &");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",2,"PoDoFo::PdfDocument *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",3,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",2,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg3 = (lua_toboolean(L, 3)!=0);
  {
    try {
      result = (PoDoFo::PdfDifferenceEncoding *)new PoDoFo::PdfDifferenceEncoding((PoDoFo::PdfEncodingDifference const &)*arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDifferenceEncoding__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfEncodingDifference *arg1 = 0 ;
  PoDoFo::PdfDocument *arg2 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfDifferenceEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",2,2)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",1,"PoDoFo::PdfEncodingDifference const &");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",2,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",2,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfDifferenceEncoding *)new PoDoFo::PdfDifferenceEncoding((PoDoFo::PdfEncodingDifference const &)*arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDifferenceEncoding__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfEncodingDifference *arg1 = 0 ;
  PoDoFo::PdfVecObjects *arg2 = (PoDoFo::PdfVecObjects *) 0 ;
  bool arg3 ;
  PoDoFo::PdfDifferenceEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",3,3)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",1,"PoDoFo::PdfEncodingDifference const &");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",2,"PoDoFo::PdfVecObjects *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",3,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",2,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  arg3 = (lua_toboolean(L, 3)!=0);
  {
    try {
      result = (PoDoFo::PdfDifferenceEncoding *)new PoDoFo::PdfDifferenceEncoding((PoDoFo::PdfEncodingDifference const &)*arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDifferenceEncoding__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfEncodingDifference *arg1 = 0 ;
  PoDoFo::PdfVecObjects *arg2 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfDifferenceEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",2,2)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",1,"PoDoFo::PdfEncodingDifference const &");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",2,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",2,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfDifferenceEncoding *)new PoDoFo::PdfDifferenceEncoding((PoDoFo::PdfEncodingDifference const &)*arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDifferenceEncoding__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfEncodingDifference *arg1 = 0 ;
  PoDoFo::PdfDifferenceEncoding::EBaseEncoding arg2 ;
  PoDoFo::PdfDocument *arg3 = (PoDoFo::PdfDocument *) 0 ;
  bool arg4 ;
  PoDoFo::PdfDifferenceEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",4,4)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",1,"PoDoFo::PdfEncodingDifference const &");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",2,"PoDoFo::PdfDifferenceEncoding::EBaseEncoding");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",3,"PoDoFo::PdfDocument *");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",4,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference);
  }
  
  arg2 = (PoDoFo::PdfDifferenceEncoding::EBaseEncoding)(int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",3,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg4 = (lua_toboolean(L, 4)!=0);
  {
    try {
      result = (PoDoFo::PdfDifferenceEncoding *)new PoDoFo::PdfDifferenceEncoding((PoDoFo::PdfEncodingDifference const &)*arg1,arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDifferenceEncoding__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfEncodingDifference *arg1 = 0 ;
  PoDoFo::PdfDifferenceEncoding::EBaseEncoding arg2 ;
  PoDoFo::PdfDocument *arg3 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfDifferenceEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",3,3)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",1,"PoDoFo::PdfEncodingDifference const &");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",2,"PoDoFo::PdfDifferenceEncoding::EBaseEncoding");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",3,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference);
  }
  
  arg2 = (PoDoFo::PdfDifferenceEncoding::EBaseEncoding)(int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",3,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfDifferenceEncoding *)new PoDoFo::PdfDifferenceEncoding((PoDoFo::PdfEncodingDifference const &)*arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDifferenceEncoding__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfEncodingDifference *arg1 = 0 ;
  PoDoFo::PdfDifferenceEncoding::EBaseEncoding arg2 ;
  PoDoFo::PdfVecObjects *arg3 = (PoDoFo::PdfVecObjects *) 0 ;
  bool arg4 ;
  PoDoFo::PdfDifferenceEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",4,4)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",1,"PoDoFo::PdfEncodingDifference const &");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",2,"PoDoFo::PdfDifferenceEncoding::EBaseEncoding");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",3,"PoDoFo::PdfVecObjects *");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",4,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference);
  }
  
  arg2 = (PoDoFo::PdfDifferenceEncoding::EBaseEncoding)(int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",3,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  arg4 = (lua_toboolean(L, 4)!=0);
  {
    try {
      result = (PoDoFo::PdfDifferenceEncoding *)new PoDoFo::PdfDifferenceEncoding((PoDoFo::PdfEncodingDifference const &)*arg1,arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDifferenceEncoding__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfEncodingDifference *arg1 = 0 ;
  PoDoFo::PdfDifferenceEncoding::EBaseEncoding arg2 ;
  PoDoFo::PdfVecObjects *arg3 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfDifferenceEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",3,3)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",1,"PoDoFo::PdfEncodingDifference const &");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",2,"PoDoFo::PdfDifferenceEncoding::EBaseEncoding");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",3,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",1,SWIGTYPE_p_PoDoFo__PdfEncodingDifference);
  }
  
  arg2 = (PoDoFo::PdfDifferenceEncoding::EBaseEncoding)(int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",3,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfDifferenceEncoding *)new PoDoFo::PdfDifferenceEncoding((PoDoFo::PdfEncodingDifference const &)*arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDifferenceEncoding__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  bool arg2 ;
  bool arg3 ;
  PoDoFo::PdfDifferenceEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",1,"PoDoFo::PdfObject *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",2,"bool");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",3,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  arg3 = (lua_toboolean(L, 3)!=0);
  {
    try {
      result = (PoDoFo::PdfDifferenceEncoding *)new PoDoFo::PdfDifferenceEncoding(arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDifferenceEncoding__SWIG_9(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  bool arg2 ;
  PoDoFo::PdfDifferenceEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",1,"PoDoFo::PdfObject *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      result = (PoDoFo::PdfDifferenceEncoding *)new PoDoFo::PdfDifferenceEncoding(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDifferenceEncoding__SWIG_10(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfDifferenceEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding",1,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfDifferenceEncoding",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfDifferenceEncoding *)new PoDoFo::PdfDifferenceEncoding(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfDifferenceEncoding(lua_State* L) {
  int argc;
  int argv[5]={
    1,2,3,4,5
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfDifferenceEncoding__SWIG_10(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncodingDifference, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfDifferenceEncoding__SWIG_3(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_new_PdfDifferenceEncoding__SWIG_9(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncodingDifference, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfDifferenceEncoding__SWIG_1(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncodingDifference, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          return _wrap_new_PdfDifferenceEncoding__SWIG_2(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncodingDifference, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          return _wrap_new_PdfDifferenceEncoding__SWIG_0(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          return _wrap_new_PdfDifferenceEncoding__SWIG_8(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncodingDifference, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfDifferenceEncoding__SWIG_5(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncodingDifference, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfDifferenceEncoding__SWIG_7(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncodingDifference, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            return _wrap_new_PdfDifferenceEncoding__SWIG_4(L);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncodingDifference, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            return _wrap_new_PdfDifferenceEncoding__SWIG_6(L);
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfDifferenceEncoding'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding(PoDoFo::PdfEncodingDifference const &,PoDoFo::PdfDocument *,bool)\n"
    "    PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding(PoDoFo::PdfEncodingDifference const &,PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding(PoDoFo::PdfEncodingDifference const &,PoDoFo::PdfVecObjects *,bool)\n"
    "    PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding(PoDoFo::PdfEncodingDifference const &,PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding(PoDoFo::PdfEncodingDifference const &,PoDoFo::PdfDifferenceEncoding::EBaseEncoding,PoDoFo::PdfDocument *,bool)\n"
    "    PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding(PoDoFo::PdfEncodingDifference const &,PoDoFo::PdfDifferenceEncoding::EBaseEncoding,PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding(PoDoFo::PdfEncodingDifference const &,PoDoFo::PdfDifferenceEncoding::EBaseEncoding,PoDoFo::PdfVecObjects *,bool)\n"
    "    PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding(PoDoFo::PdfEncodingDifference const &,PoDoFo::PdfDifferenceEncoding::EBaseEncoding,PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding(PoDoFo::PdfObject *,bool,bool)\n"
    "    PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding(PoDoFo::PdfObject *,bool)\n"
    "    PoDoFo::PdfDifferenceEncoding::PdfDifferenceEncoding(PoDoFo::PdfObject *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfDifferenceEncoding_NameToUnicodeID(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfName *arg1 = 0 ;
  PoDoFo::pdf_utf16be result;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::NameToUnicodeID",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::NameToUnicodeID",1,"PoDoFo::PdfName const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfName,0))){
    SWIG_fail_ptr("PdfDifferenceEncoding_NameToUnicodeID",1,SWIGTYPE_p_PoDoFo__PdfName);
  }
  
  {
    try {
      result = PoDoFo::PdfDifferenceEncoding::NameToUnicodeID((PoDoFo::PdfName const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::pdf_utf16be * resultptr = new PoDoFo::pdf_utf16be((const PoDoFo::pdf_utf16be &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_uint16,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDifferenceEncoding_UnicodeIDToName(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::pdf_utf16be arg1 ;
  PoDoFo::pdf_utf16be *argp1 ;
  PoDoFo::PdfName result;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::UnicodeIDToName",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::UnicodeIDToName",1,"PoDoFo::pdf_utf16be");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&argp1,SWIGTYPE_p_pdf_uint16,0))){
    SWIG_fail_ptr("PdfDifferenceEncoding_UnicodeIDToName",1,SWIGTYPE_p_pdf_uint16);
  }
  arg1 = *argp1;
  
  {
    try {
      result = PoDoFo::PdfDifferenceEncoding::UnicodeIDToName(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfName * resultptr = new PoDoFo::PdfName((const PoDoFo::PdfName &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfName,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDifferenceEncoding_AddToDictionary(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDifferenceEncoding *arg1 = (PoDoFo::PdfDifferenceEncoding *) 0 ;
  PoDoFo::PdfDictionary *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::AddToDictionary",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::AddToDictionary",1,"PoDoFo::PdfDifferenceEncoding const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::AddToDictionary",2,"PoDoFo::PdfDictionary &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,0))){
    SWIG_fail_ptr("PdfDifferenceEncoding_AddToDictionary",1,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfDictionary,0))){
    SWIG_fail_ptr("PdfDifferenceEncoding_AddToDictionary",2,SWIGTYPE_p_PoDoFo__PdfDictionary);
  }
  
  {
    try {
      ((PoDoFo::PdfDifferenceEncoding const *)arg1)->AddToDictionary(*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDifferenceEncoding_ConvertToUnicode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDifferenceEncoding *arg1 = (PoDoFo::PdfDifferenceEncoding *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  PdfFont *arg3 = (PdfFont *) 0 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::ConvertToUnicode",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::ConvertToUnicode",1,"PoDoFo::PdfDifferenceEncoding const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::ConvertToUnicode",2,"PoDoFo::PdfString const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::ConvertToUnicode",3,"PdfFont const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,0))){
    SWIG_fail_ptr("PdfDifferenceEncoding_ConvertToUnicode",1,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfDifferenceEncoding_ConvertToUnicode",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PdfFont,0))){
    SWIG_fail_ptr("PdfDifferenceEncoding_ConvertToUnicode",3,SWIGTYPE_p_PdfFont);
  }
  
  {
    try {
      result = ((PoDoFo::PdfDifferenceEncoding const *)arg1)->ConvertToUnicode((PoDoFo::PdfString const &)*arg2,(PdfFont const *)arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDifferenceEncoding_ConvertToEncoding(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDifferenceEncoding *arg1 = (PoDoFo::PdfDifferenceEncoding *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  PdfFont *arg3 = (PdfFont *) 0 ;
  PdfRefCountedBuffer result;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::ConvertToEncoding",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::ConvertToEncoding",1,"PoDoFo::PdfDifferenceEncoding const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::ConvertToEncoding",2,"PoDoFo::PdfString const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::ConvertToEncoding",3,"PdfFont const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,0))){
    SWIG_fail_ptr("PdfDifferenceEncoding_ConvertToEncoding",1,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfDifferenceEncoding_ConvertToEncoding",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PdfFont,0))){
    SWIG_fail_ptr("PdfDifferenceEncoding_ConvertToEncoding",3,SWIGTYPE_p_PdfFont);
  }
  
  {
    try {
      result = ((PoDoFo::PdfDifferenceEncoding const *)arg1)->ConvertToEncoding((PoDoFo::PdfString const &)*arg2,(PdfFont const *)arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PdfRefCountedBuffer * resultptr = new PdfRefCountedBuffer((const PdfRefCountedBuffer &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PdfRefCountedBuffer,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDifferenceEncoding_IsAutoDelete(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDifferenceEncoding *arg1 = (PoDoFo::PdfDifferenceEncoding *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::IsAutoDelete",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::IsAutoDelete",1,"PoDoFo::PdfDifferenceEncoding const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,0))){
    SWIG_fail_ptr("PdfDifferenceEncoding_IsAutoDelete",1,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfDifferenceEncoding const *)arg1)->IsAutoDelete();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDifferenceEncoding_IsSingleByteEncoding(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDifferenceEncoding *arg1 = (PoDoFo::PdfDifferenceEncoding *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::IsSingleByteEncoding",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::IsSingleByteEncoding",1,"PoDoFo::PdfDifferenceEncoding const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,0))){
    SWIG_fail_ptr("PdfDifferenceEncoding_IsSingleByteEncoding",1,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfDifferenceEncoding const *)arg1)->IsSingleByteEncoding();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDifferenceEncoding_GetDifferences(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDifferenceEncoding *arg1 = (PoDoFo::PdfDifferenceEncoding *) 0 ;
  PoDoFo::PdfEncodingDifference *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::GetDifferences",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::GetDifferences",1,"PoDoFo::PdfDifferenceEncoding const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,0))){
    SWIG_fail_ptr("PdfDifferenceEncoding_GetDifferences",1,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding);
  }
  
  {
    try {
      result = (PoDoFo::PdfEncodingDifference *) &((PoDoFo::PdfDifferenceEncoding const *)arg1)->GetDifferences();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfEncodingDifference,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDifferenceEncoding_GetCharCode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDifferenceEncoding *arg1 = (PoDoFo::PdfDifferenceEncoding *) 0 ;
  int arg2 ;
  PoDoFo::pdf_utf16be result;
  
  SWIG_check_num_args("PoDoFo::PdfDifferenceEncoding::GetCharCode",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::GetCharCode",1,"PoDoFo::PdfDifferenceEncoding const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfDifferenceEncoding::GetCharCode",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,0))){
    SWIG_fail_ptr("PdfDifferenceEncoding_GetCharCode",1,SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = ((PoDoFo::PdfDifferenceEncoding const *)arg1)->GetCharCode(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::pdf_utf16be * resultptr = new PoDoFo::pdf_utf16be((const PoDoFo::pdf_utf16be &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_uint16,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfDifferenceEncoding(void *obj) {
PoDoFo::PdfDifferenceEncoding *arg1 = (PoDoFo::PdfDifferenceEncoding *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfDifferenceEncoding(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfDifferenceEncoding);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfDifferenceEncoding_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfDifferenceEncoding_methods[]= {
    { "AddToDictionary", _wrap_PdfDifferenceEncoding_AddToDictionary},
    { "ConvertToUnicode", _wrap_PdfDifferenceEncoding_ConvertToUnicode},
    { "ConvertToEncoding", _wrap_PdfDifferenceEncoding_ConvertToEncoding},
    { "IsAutoDelete", _wrap_PdfDifferenceEncoding_IsAutoDelete},
    { "IsSingleByteEncoding", _wrap_PdfDifferenceEncoding_IsSingleByteEncoding},
    { "GetDifferences", _wrap_PdfDifferenceEncoding_GetDifferences},
    { "GetCharCode", _wrap_PdfDifferenceEncoding_GetCharCode},
    {0,0}
};
static swig_lua_method swig_PdfDifferenceEncoding_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfDifferenceEncoding_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfDifferenceEncoding_Sf_SwigStatic_constants[]= {
    {SWIG_LUA_CONSTTAB_INT("eBaseEncoding_Font", PoDoFo::PdfDifferenceEncoding::eBaseEncoding_Font)},
    {SWIG_LUA_CONSTTAB_INT("eBaseEncoding_WinAnsi", PoDoFo::PdfDifferenceEncoding::eBaseEncoding_WinAnsi)},
    {SWIG_LUA_CONSTTAB_INT("eBaseEncoding_MacRoman", PoDoFo::PdfDifferenceEncoding::eBaseEncoding_MacRoman)},
    {SWIG_LUA_CONSTTAB_INT("eBaseEncoding_MacExpert", PoDoFo::PdfDifferenceEncoding::eBaseEncoding_MacExpert)},
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfDifferenceEncoding_Sf_SwigStatic_methods[]= {
    { "NameToUnicodeID", _wrap_PdfDifferenceEncoding_NameToUnicodeID},
    { "UnicodeIDToName", _wrap_PdfDifferenceEncoding_UnicodeIDToName},
    {0,0}
};
static swig_lua_class* swig_PdfDifferenceEncoding_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfDifferenceEncoding_Sf_SwigStatic = {
    "PdfDifferenceEncoding",
    swig_PdfDifferenceEncoding_Sf_SwigStatic_methods,
    swig_PdfDifferenceEncoding_Sf_SwigStatic_attributes,
    swig_PdfDifferenceEncoding_Sf_SwigStatic_constants,
    swig_PdfDifferenceEncoding_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfDifferenceEncoding_bases[] = {0};
static const char *swig_PdfDifferenceEncoding_base_names[] = {0};
static swig_lua_class _wrap_class_PdfDifferenceEncoding = { "PdfDifferenceEncoding", "PdfDifferenceEncoding", &SWIGTYPE_p_PoDoFo__PdfDifferenceEncoding,_proxy__wrap_new_PdfDifferenceEncoding, swig_delete_PdfDifferenceEncoding, swig_PdfDifferenceEncoding_methods, swig_PdfDifferenceEncoding_attributes, &swig_PdfDifferenceEncoding_Sf_SwigStatic, swig_PdfDifferenceEncoding_meta, swig_PdfDifferenceEncoding_bases, swig_PdfDifferenceEncoding_base_names };

static int _wrap_PdfDocument_GetWriteMode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::EPdfWriteMode result;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::GetWriteMode",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::GetWriteMode",1,"PoDoFo::PdfDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_GetWriteMode",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::EPdfWriteMode)((PoDoFo::PdfDocument const *)arg1)->GetWriteMode();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_GetPdfVersion(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::EPdfVersion result;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::GetPdfVersion",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::GetPdfVersion",1,"PoDoFo::PdfDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_GetPdfVersion",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::EPdfVersion)((PoDoFo::PdfDocument const *)arg1)->GetPdfVersion();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_IsLinearized(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::IsLinearized",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::IsLinearized",1,"PoDoFo::PdfDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_IsLinearized",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfDocument const *)arg1)->IsLinearized();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_GetInfo(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfInfo *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::GetInfo",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::GetInfo",1,"PoDoFo::PdfDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_GetInfo",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfInfo *)((PoDoFo::PdfDocument const *)arg1)->GetInfo();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfInfo,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_GetOutlines__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  bool arg2 ;
  PoDoFo::PdfOutlines *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::GetOutlines",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::GetOutlines",1,"PoDoFo::PdfDocument *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::GetOutlines",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_GetOutlines",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      result = (PoDoFo::PdfOutlines *)(arg1)->GetOutlines(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfOutlines,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_GetOutlines__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfOutlines *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::GetOutlines",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::GetOutlines",1,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_GetOutlines",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfOutlines *)(arg1)->GetOutlines();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfOutlines,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_GetOutlines(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfDocument_GetOutlines__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfDocument_GetOutlines__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfDocument_GetOutlines'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfDocument::GetOutlines(bool)\n"
    "    PoDoFo::PdfDocument::GetOutlines()\n");
  lua_error(L);return 0;
}


static int _wrap_PdfDocument_GetNamesTree__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  bool arg2 ;
  PoDoFo::PdfNamesTree *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::GetNamesTree",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::GetNamesTree",1,"PoDoFo::PdfDocument *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::GetNamesTree",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_GetNamesTree",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      result = (PoDoFo::PdfNamesTree *)(arg1)->GetNamesTree(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfNamesTree,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_GetNamesTree__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfNamesTree *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::GetNamesTree",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::GetNamesTree",1,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_GetNamesTree",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfNamesTree *)(arg1)->GetNamesTree();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfNamesTree,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_GetNamesTree(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfDocument_GetNamesTree__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfDocument_GetNamesTree__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfDocument_GetNamesTree'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfDocument::GetNamesTree(bool)\n"
    "    PoDoFo::PdfDocument::GetNamesTree()\n");
  lua_error(L);return 0;
}


static int _wrap_PdfDocument_GetAcroForm__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  bool arg2 ;
  PoDoFo::EPdfAcroFormDefaulAppearance arg3 ;
  PoDoFo::PdfAcroForm *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::GetAcroForm",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::GetAcroForm",1,"PoDoFo::PdfDocument *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::GetAcroForm",2,"bool");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::GetAcroForm",3,"PoDoFo::EPdfAcroFormDefaulAppearance");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_GetAcroForm",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  arg3 = (PoDoFo::EPdfAcroFormDefaulAppearance)(int)lua_tonumber(L, 3);
  {
    try {
      result = (PoDoFo::PdfAcroForm *)(arg1)->GetAcroForm(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAcroForm,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_GetAcroForm__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  bool arg2 ;
  PoDoFo::PdfAcroForm *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::GetAcroForm",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::GetAcroForm",1,"PoDoFo::PdfDocument *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::GetAcroForm",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_GetAcroForm",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      result = (PoDoFo::PdfAcroForm *)(arg1)->GetAcroForm(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAcroForm,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_GetAcroForm__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfAcroForm *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::GetAcroForm",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::GetAcroForm",1,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_GetAcroForm",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfAcroForm *)(arg1)->GetAcroForm();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAcroForm,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_GetAcroForm(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfDocument_GetAcroForm__SWIG_2(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfDocument_GetAcroForm__SWIG_1(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_PdfDocument_GetAcroForm__SWIG_0(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfDocument_GetAcroForm'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfDocument::GetAcroForm(bool,PoDoFo::EPdfAcroFormDefaulAppearance)\n"
    "    PoDoFo::PdfDocument::GetAcroForm(bool)\n"
    "    PoDoFo::PdfDocument::GetAcroForm()\n");
  lua_error(L);return 0;
}


static int _wrap_PdfDocument_GetPagesTree(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfPagesTree *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::GetPagesTree",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::GetPagesTree",1,"PoDoFo::PdfDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_GetPagesTree",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfPagesTree *)((PoDoFo::PdfDocument const *)arg1)->GetPagesTree();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPagesTree,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_GetPageCount(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  int result;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::GetPageCount",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::GetPageCount",1,"PoDoFo::PdfDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_GetPageCount",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (int)((PoDoFo::PdfDocument const *)arg1)->GetPageCount();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_GetPage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  int arg2 ;
  PoDoFo::PdfPage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::GetPage",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::GetPage",1,"PoDoFo::PdfDocument const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::GetPage",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_GetPage",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = (PoDoFo::PdfPage *)((PoDoFo::PdfDocument const *)arg1)->GetPage(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPage,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFont__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  PoDoFo::PdfEncoding *arg4 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PdfFontCache::EFontCreationFlags arg5 ;
  bool arg6 ;
  PdfFontCache::EFontCreationFlags *argp5 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFont",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",1,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",3,"bool");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",4,"PoDoFo::PdfEncoding const *const");
  if(!lua_isuserdata(L,5)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",5,"PdfFontCache::EFontCreationFlags");
  if(!lua_isboolean(L,6)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",6,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",4,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&argp5,SWIGTYPE_p_PdfFontCache__EFontCreationFlags,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",5,SWIGTYPE_p_PdfFontCache__EFontCreationFlags);
  }
  arg5 = *argp5;
  
  arg6 = (lua_toboolean(L, 6)!=0);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFont((char const *)arg2,arg3,(PoDoFo::PdfEncoding const *)arg4,arg5,arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFont__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  PoDoFo::PdfEncoding *arg4 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PdfFontCache::EFontCreationFlags arg5 ;
  PdfFontCache::EFontCreationFlags *argp5 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFont",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",1,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",3,"bool");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",4,"PoDoFo::PdfEncoding const *const");
  if(!lua_isuserdata(L,5)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",5,"PdfFontCache::EFontCreationFlags");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",4,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&argp5,SWIGTYPE_p_PdfFontCache__EFontCreationFlags,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",5,SWIGTYPE_p_PdfFontCache__EFontCreationFlags);
  }
  arg5 = *argp5;
  
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFont((char const *)arg2,arg3,(PoDoFo::PdfEncoding const *)arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFont__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  PoDoFo::PdfEncoding *arg4 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFont",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",1,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",3,"bool");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",4,"PoDoFo::PdfEncoding const *const");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",4,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFont((char const *)arg2,arg3,(PoDoFo::PdfEncoding const *)arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFont__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFont",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",1,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",3,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFont((char const *)arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFont__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFont",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",1,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFont((char const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFont__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  PoDoFo::PdfEncoding *arg6 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PdfFontCache::EFontCreationFlags arg7 ;
  bool arg8 ;
  char *arg9 = (char *) 0 ;
  PdfFontCache::EFontCreationFlags *argp7 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFont",9,9)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",1,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",4,"bool");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",5,"bool");
  if(!SWIG_isptrtype(L,6)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",6,"PoDoFo::PdfEncoding const *const");
  if(!lua_isuserdata(L,7)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",7,"PdfFontCache::EFontCreationFlags");
  if(!lua_isboolean(L,8)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",8,"bool");
  if(!SWIG_lua_isnilstring(L,9)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",9,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  arg5 = (lua_toboolean(L, 5)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",6,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,7,(void**)&argp7,SWIGTYPE_p_PdfFontCache__EFontCreationFlags,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",7,SWIGTYPE_p_PdfFontCache__EFontCreationFlags);
  }
  arg7 = *argp7;
  
  arg8 = (lua_toboolean(L, 8)!=0);
  arg9 = (char *)lua_tostring(L, 9);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFont((char const *)arg2,arg3,arg4,arg5,(PoDoFo::PdfEncoding const *)arg6,arg7,arg8,(char const *)arg9);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFont__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  PoDoFo::PdfEncoding *arg6 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PdfFontCache::EFontCreationFlags arg7 ;
  bool arg8 ;
  PdfFontCache::EFontCreationFlags *argp7 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFont",8,8)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",1,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",4,"bool");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",5,"bool");
  if(!SWIG_isptrtype(L,6)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",6,"PoDoFo::PdfEncoding const *const");
  if(!lua_isuserdata(L,7)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",7,"PdfFontCache::EFontCreationFlags");
  if(!lua_isboolean(L,8)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",8,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  arg5 = (lua_toboolean(L, 5)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",6,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,7,(void**)&argp7,SWIGTYPE_p_PdfFontCache__EFontCreationFlags,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",7,SWIGTYPE_p_PdfFontCache__EFontCreationFlags);
  }
  arg7 = *argp7;
  
  arg8 = (lua_toboolean(L, 8)!=0);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFont((char const *)arg2,arg3,arg4,arg5,(PoDoFo::PdfEncoding const *)arg6,arg7,arg8);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFont__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  PoDoFo::PdfEncoding *arg6 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PdfFontCache::EFontCreationFlags arg7 ;
  PdfFontCache::EFontCreationFlags *argp7 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFont",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",1,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",4,"bool");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",5,"bool");
  if(!SWIG_isptrtype(L,6)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",6,"PoDoFo::PdfEncoding const *const");
  if(!lua_isuserdata(L,7)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",7,"PdfFontCache::EFontCreationFlags");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  arg5 = (lua_toboolean(L, 5)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",6,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,7,(void**)&argp7,SWIGTYPE_p_PdfFontCache__EFontCreationFlags,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",7,SWIGTYPE_p_PdfFontCache__EFontCreationFlags);
  }
  arg7 = *argp7;
  
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFont((char const *)arg2,arg3,arg4,arg5,(PoDoFo::PdfEncoding const *)arg6,arg7);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFont__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  PoDoFo::PdfEncoding *arg6 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFont",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",1,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",4,"bool");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",5,"bool");
  if(!SWIG_isptrtype(L,6)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",6,"PoDoFo::PdfEncoding const *const");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  arg5 = (lua_toboolean(L, 5)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",6,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFont((char const *)arg2,arg3,arg4,arg5,(PoDoFo::PdfEncoding const *)arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFont__SWIG_9(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFont",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",1,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",4,"bool");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",5,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  arg5 = (lua_toboolean(L, 5)!=0);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFont((char const *)arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFont__SWIG_10(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFont",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",1,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",4,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFont((char const *)arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFont__SWIG_11(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  FT_Face arg2 ;
  bool arg3 ;
  PoDoFo::PdfEncoding *arg4 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  bool arg5 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFont",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",1,"PoDoFo::PdfDocument *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",3,"bool");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",4,"PoDoFo::PdfEncoding const *const");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",5,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    arg2 = (FT_Face)lua_touserdata(L,2);
  }
  arg3 = (lua_toboolean(L, 3)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",4,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  arg5 = (lua_toboolean(L, 5)!=0);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFont(arg2,arg3,(PoDoFo::PdfEncoding const *)arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFont__SWIG_12(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  FT_Face arg2 ;
  bool arg3 ;
  PoDoFo::PdfEncoding *arg4 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFont",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",1,"PoDoFo::PdfDocument *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",3,"bool");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",4,"PoDoFo::PdfEncoding const *const");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    arg2 = (FT_Face)lua_touserdata(L,2);
  }
  arg3 = (lua_toboolean(L, 3)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",4,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFont(arg2,arg3,(PoDoFo::PdfEncoding const *)arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFont__SWIG_13(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  FT_Face arg2 ;
  bool arg3 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFont",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",1,"PoDoFo::PdfDocument *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",3,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    arg2 = (FT_Face)lua_touserdata(L,2);
  }
  arg3 = (lua_toboolean(L, 3)!=0);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFont(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFont__SWIG_14(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  FT_Face arg2 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFont",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFont",1,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFont",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    arg2 = (FT_Face)lua_touserdata(L,2);
  }
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFont(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFont(lua_State* L) {
  int argc;
  int argv[10]={
    1,2,3,4,5,6,7,8,9,10
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, 0, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfDocument_CreateFont__SWIG_14(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfDocument_CreateFont__SWIG_4(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, 0, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          return _wrap_PdfDocument_CreateFont__SWIG_13(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          return _wrap_PdfDocument_CreateFont__SWIG_3(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, 0, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_PdfDocument_CreateFont__SWIG_12(L);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_PdfDocument_CreateFont__SWIG_2(L);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            return _wrap_PdfDocument_CreateFont__SWIG_10(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, 0, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfDocument_CreateFont__SWIG_11(L);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              void *ptr;
              if (lua_isuserdata(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PdfFontCache__EFontCreationFlags, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              return _wrap_PdfDocument_CreateFont__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfDocument_CreateFont__SWIG_9(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              void *ptr;
              if (lua_isuserdata(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PdfFontCache__EFontCreationFlags, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              {
                _v = lua_isboolean(L,argv[5]);
              }
              if (_v) {
                return _wrap_PdfDocument_CreateFont__SWIG_0(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              {
                void *ptr;
                if (SWIG_isptrtype(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                return _wrap_PdfDocument_CreateFont__SWIG_8(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              {
                void *ptr;
                if (SWIG_isptrtype(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                {
                  void *ptr;
                  if (lua_isuserdata(L,argv[6])==0 || SWIG_ConvertPtr(L,argv[6], (void **) &ptr, SWIGTYPE_p_PdfFontCache__EFontCreationFlags, 0)) {
                    _v = 0;
                  } else {
                    _v = 1;
                  }
                }
                if (_v) {
                  return _wrap_PdfDocument_CreateFont__SWIG_7(L);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              {
                void *ptr;
                if (SWIG_isptrtype(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                {
                  void *ptr;
                  if (lua_isuserdata(L,argv[6])==0 || SWIG_ConvertPtr(L,argv[6], (void **) &ptr, SWIGTYPE_p_PdfFontCache__EFontCreationFlags, 0)) {
                    _v = 0;
                  } else {
                    _v = 1;
                  }
                }
                if (_v) {
                  {
                    _v = lua_isboolean(L,argv[7]);
                  }
                  if (_v) {
                    return _wrap_PdfDocument_CreateFont__SWIG_6(L);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              {
                void *ptr;
                if (SWIG_isptrtype(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                {
                  void *ptr;
                  if (lua_isuserdata(L,argv[6])==0 || SWIG_ConvertPtr(L,argv[6], (void **) &ptr, SWIGTYPE_p_PdfFontCache__EFontCreationFlags, 0)) {
                    _v = 0;
                  } else {
                    _v = 1;
                  }
                }
                if (_v) {
                  {
                    _v = lua_isboolean(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = SWIG_lua_isnilstring(L,argv[8]);
                    }
                    if (_v) {
                      return _wrap_PdfDocument_CreateFont__SWIG_5(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfDocument_CreateFont'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfDocument::CreateFont(char const *,bool,PoDoFo::PdfEncoding const *const,PdfFontCache::EFontCreationFlags,bool)\n"
    "    PoDoFo::PdfDocument::CreateFont(char const *,bool,PoDoFo::PdfEncoding const *const,PdfFontCache::EFontCreationFlags)\n"
    "    PoDoFo::PdfDocument::CreateFont(char const *,bool,PoDoFo::PdfEncoding const *const)\n"
    "    PoDoFo::PdfDocument::CreateFont(char const *,bool)\n"
    "    PoDoFo::PdfDocument::CreateFont(char const *)\n"
    "    PoDoFo::PdfDocument::CreateFont(char const *,bool,bool,bool,PoDoFo::PdfEncoding const *const,PdfFontCache::EFontCreationFlags,bool,char const *)\n"
    "    PoDoFo::PdfDocument::CreateFont(char const *,bool,bool,bool,PoDoFo::PdfEncoding const *const,PdfFontCache::EFontCreationFlags,bool)\n"
    "    PoDoFo::PdfDocument::CreateFont(char const *,bool,bool,bool,PoDoFo::PdfEncoding const *const,PdfFontCache::EFontCreationFlags)\n"
    "    PoDoFo::PdfDocument::CreateFont(char const *,bool,bool,bool,PoDoFo::PdfEncoding const *const)\n"
    "    PoDoFo::PdfDocument::CreateFont(char const *,bool,bool,bool)\n"
    "    PoDoFo::PdfDocument::CreateFont(char const *,bool,bool)\n"
    "    PoDoFo::PdfDocument::CreateFont(FT_Face,bool,PoDoFo::PdfEncoding const *const,bool)\n"
    "    PoDoFo::PdfDocument::CreateFont(FT_Face,bool,PoDoFo::PdfEncoding const *const)\n"
    "    PoDoFo::PdfDocument::CreateFont(FT_Face,bool)\n"
    "    PoDoFo::PdfDocument::CreateFont(FT_Face)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfDocument_CreateDuplicateFontType1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfFont *arg2 = (PoDoFo::PdfFont *) 0 ;
  char *arg3 = (char *) 0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateDuplicateFontType1",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateDuplicateFontType1",1,"PoDoFo::PdfDocument *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateDuplicateFontType1",2,"PoDoFo::PdfFont *");
  if(!SWIG_lua_isnilstring(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateDuplicateFontType1",3,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateDuplicateFontType1",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfDocument_CreateDuplicateFontType1",2,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  arg3 = (char *)lua_tostring(L, 3);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateDuplicateFontType1(arg2,(char const *)arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFontSubset__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  PoDoFo::PdfEncoding *arg6 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  char *arg7 = (char *) 0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFontSubset",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",1,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",4,"bool");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",5,"bool");
  if(!SWIG_isptrtype(L,6)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",6,"PoDoFo::PdfEncoding const *const");
  if(!SWIG_lua_isnilstring(L,7)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",7,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFontSubset",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  arg5 = (lua_toboolean(L, 5)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("PdfDocument_CreateFontSubset",6,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  arg7 = (char *)lua_tostring(L, 7);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFontSubset((char const *)arg2,arg3,arg4,arg5,(PoDoFo::PdfEncoding const *)arg6,(char const *)arg7);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFontSubset__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  PoDoFo::PdfEncoding *arg6 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFontSubset",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",1,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",4,"bool");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",5,"bool");
  if(!SWIG_isptrtype(L,6)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",6,"PoDoFo::PdfEncoding const *const");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFontSubset",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  arg5 = (lua_toboolean(L, 5)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("PdfDocument_CreateFontSubset",6,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFontSubset((char const *)arg2,arg3,arg4,arg5,(PoDoFo::PdfEncoding const *)arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFontSubset__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFontSubset",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",1,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",4,"bool");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",5,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFontSubset",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  arg5 = (lua_toboolean(L, 5)!=0);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFontSubset((char const *)arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFontSubset__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreateFontSubset",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",1,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::CreateFontSubset",4,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreateFontSubset",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->CreateFontSubset((char const *)arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreateFontSubset(lua_State* L) {
  int argc;
  int argv[8]={
    1,2,3,4,5,6,7,8
  };
  
  argc = lua_gettop(L);
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            return _wrap_PdfDocument_CreateFontSubset__SWIG_3(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfDocument_CreateFontSubset__SWIG_2(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              {
                void *ptr;
                if (SWIG_isptrtype(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                return _wrap_PdfDocument_CreateFontSubset__SWIG_1(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              {
                void *ptr;
                if (SWIG_isptrtype(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                {
                  _v = SWIG_lua_isnilstring(L,argv[6]);
                }
                if (_v) {
                  return _wrap_PdfDocument_CreateFontSubset__SWIG_0(L);
                }
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfDocument_CreateFontSubset'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfDocument::CreateFontSubset(char const *,bool,bool,bool,PoDoFo::PdfEncoding const *const,char const *)\n"
    "    PoDoFo::PdfDocument::CreateFontSubset(char const *,bool,bool,bool,PoDoFo::PdfEncoding const *const)\n"
    "    PoDoFo::PdfDocument::CreateFontSubset(char const *,bool,bool,bool)\n"
    "    PoDoFo::PdfDocument::CreateFontSubset(char const *,bool,bool)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfDocument_GetFontLibrary(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  FT_Library result;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::GetFontLibrary",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::GetFontLibrary",1,"PoDoFo::PdfDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_GetFontLibrary",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = ((PoDoFo::PdfDocument const *)arg1)->GetFontLibrary();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    FT_Library * resultptr = new FT_Library((const FT_Library &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_FT_Library,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_EmbedSubsetFonts(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::EmbedSubsetFonts",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::EmbedSubsetFonts",1,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_EmbedSubsetFonts",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      (arg1)->EmbedSubsetFonts();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreatePage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfPage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreatePage",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreatePage",1,"PoDoFo::PdfDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::CreatePage",2,"PoDoFo::PdfRect const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreatePage",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfDocument_CreatePage",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  {
    try {
      result = (PoDoFo::PdfPage *)(arg1)->CreatePage((PoDoFo::PdfRect const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPage,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_CreatePages(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  std::vector< PoDoFo::PdfRect > *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::CreatePages",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::CreatePages",1,"PoDoFo::PdfDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::CreatePages",2,"std::vector< PoDoFo::PdfRect > const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_CreatePages",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_std__vectorT_PoDoFo__PdfRect_t,0))){
    SWIG_fail_ptr("PdfDocument_CreatePages",2,SWIGTYPE_p_std__vectorT_PoDoFo__PdfRect_t);
  }
  
  {
    try {
      (arg1)->CreatePages((std::vector< PoDoFo::PdfRect > const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_InsertPage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  int arg3 ;
  PoDoFo::PdfPage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::InsertPage",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::InsertPage",1,"PoDoFo::PdfDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::InsertPage",2,"PoDoFo::PdfRect const &");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::InsertPage",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_InsertPage",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfDocument_InsertPage",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = (PoDoFo::PdfPage *)(arg1)->InsertPage((PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPage,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_Append__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfMemDocument *arg2 = 0 ;
  bool arg3 ;
  PoDoFo::PdfDocument *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::Append",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::Append",1,"PoDoFo::PdfDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::Append",2,"PoDoFo::PdfMemDocument const &");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::Append",3,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_Append",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfDocument_Append",2,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  arg3 = (lua_toboolean(L, 3)!=0);
  {
    try {
      result = (PoDoFo::PdfDocument *) &(arg1)->Append((PoDoFo::PdfMemDocument const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDocument,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_Append__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfMemDocument *arg2 = 0 ;
  PoDoFo::PdfDocument *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::Append",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::Append",1,"PoDoFo::PdfDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::Append",2,"PoDoFo::PdfMemDocument const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_Append",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfDocument_Append",2,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfDocument *) &(arg1)->Append((PoDoFo::PdfMemDocument const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDocument,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_Append(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfDocument_Append__SWIG_1(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          return _wrap_PdfDocument_Append__SWIG_0(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfDocument_Append'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfDocument::Append(PoDoFo::PdfMemDocument const &,bool)\n"
    "    PoDoFo::PdfDocument::Append(PoDoFo::PdfMemDocument const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfDocument_InsertExistingPageAt(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfMemDocument *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  PoDoFo::PdfDocument *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::InsertExistingPageAt",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::InsertExistingPageAt",1,"PoDoFo::PdfDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::InsertExistingPageAt",2,"PoDoFo::PdfMemDocument const &");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::InsertExistingPageAt",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::InsertExistingPageAt",4,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_InsertExistingPageAt",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfDocument_InsertExistingPageAt",2,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  {
    try {
      result = (PoDoFo::PdfDocument *) &(arg1)->InsertExistingPageAt((PoDoFo::PdfMemDocument const &)*arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDocument,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_FillXObjectFromDocumentPage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfXObject *arg2 = (PoDoFo::PdfXObject *) 0 ;
  PoDoFo::PdfMemDocument *arg3 = 0 ;
  int arg4 ;
  bool arg5 ;
  PoDoFo::PdfRect result;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::FillXObjectFromDocumentPage",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::FillXObjectFromDocumentPage",1,"PoDoFo::PdfDocument *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::FillXObjectFromDocumentPage",2,"PoDoFo::PdfXObject *");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::FillXObjectFromDocumentPage",3,"PoDoFo::PdfMemDocument const &");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::FillXObjectFromDocumentPage",4,"int");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfDocument::FillXObjectFromDocumentPage",5,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_FillXObjectFromDocumentPage",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfDocument_FillXObjectFromDocumentPage",2,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfDocument_FillXObjectFromDocumentPage",3,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  arg4 = (int)lua_tonumber(L, 4);
  arg5 = (lua_toboolean(L, 5)!=0);
  {
    try {
      result = (arg1)->FillXObjectFromDocumentPage(arg2,(PoDoFo::PdfMemDocument const &)*arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfRect * resultptr = new PoDoFo::PdfRect((const PoDoFo::PdfRect &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_FillXObjectFromExistingPage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfXObject *arg2 = (PoDoFo::PdfXObject *) 0 ;
  int arg3 ;
  bool arg4 ;
  PoDoFo::PdfRect result;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::FillXObjectFromExistingPage",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::FillXObjectFromExistingPage",1,"PoDoFo::PdfDocument *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::FillXObjectFromExistingPage",2,"PoDoFo::PdfXObject *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::FillXObjectFromExistingPage",3,"int");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::FillXObjectFromExistingPage",4,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_FillXObjectFromExistingPage",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfDocument_FillXObjectFromExistingPage",2,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (lua_toboolean(L, 4)!=0);
  {
    try {
      result = (arg1)->FillXObjectFromExistingPage(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfRect * resultptr = new PoDoFo::PdfRect((const PoDoFo::PdfRect &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_FillXObjectFromPage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfXObject *arg2 = (PoDoFo::PdfXObject *) 0 ;
  PoDoFo::PdfPage *arg3 = (PoDoFo::PdfPage *) 0 ;
  bool arg4 ;
  unsigned int arg5 ;
  PoDoFo::PdfRect result;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::FillXObjectFromPage",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::FillXObjectFromPage",1,"PoDoFo::PdfDocument *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::FillXObjectFromPage",2,"PoDoFo::PdfXObject *");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::FillXObjectFromPage",3,"PoDoFo::PdfPage const *");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfDocument::FillXObjectFromPage",4,"bool");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfDocument::FillXObjectFromPage",5,"unsigned int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_FillXObjectFromPage",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfDocument_FillXObjectFromPage",2,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfDocument_FillXObjectFromPage",3,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  arg4 = (lua_toboolean(L, 4)!=0);
  SWIG_contract_assert((lua_tonumber(L,5)>=0),"number must not be negative")
  arg5 = (unsigned int)lua_tonumber(L, 5);
  {
    try {
      result = (arg1)->FillXObjectFromPage(arg2,(PoDoFo::PdfPage const *)arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfRect * resultptr = new PoDoFo::PdfRect((const PoDoFo::PdfRect &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_AttachFile(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfFileSpec *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::AttachFile",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::AttachFile",1,"PoDoFo::PdfDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::AttachFile",2,"PoDoFo::PdfFileSpec const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_AttachFile",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfFileSpec,0))){
    SWIG_fail_ptr("PdfDocument_AttachFile",2,SWIGTYPE_p_PoDoFo__PdfFileSpec);
  }
  
  {
    try {
      (arg1)->AttachFile((PoDoFo::PdfFileSpec const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_GetAttachment(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  PoDoFo::PdfFileSpec *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::GetAttachment",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::GetAttachment",1,"PoDoFo::PdfDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::GetAttachment",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_GetAttachment",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfDocument_GetAttachment",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = (PoDoFo::PdfFileSpec *)(arg1)->GetAttachment((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFileSpec,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_AddNamedDestination(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfDestination *arg2 = 0 ;
  PoDoFo::PdfString *arg3 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::AddNamedDestination",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::AddNamedDestination",1,"PoDoFo::PdfDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::AddNamedDestination",2,"PoDoFo::PdfDestination const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfDocument::AddNamedDestination",3,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_AddNamedDestination",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("PdfDocument_AddNamedDestination",2,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfDocument_AddNamedDestination",3,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->AddNamedDestination((PoDoFo::PdfDestination const &)*arg2,(PoDoFo::PdfString const &)*arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_SetPageMode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::EPdfPageMode arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::SetPageMode",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::SetPageMode",1,"PoDoFo::PdfDocument *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::SetPageMode",2,"PoDoFo::EPdfPageMode");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_SetPageMode",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (PoDoFo::EPdfPageMode)(int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetPageMode(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_GetPageMode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::EPdfPageMode result;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::GetPageMode",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::GetPageMode",1,"PoDoFo::PdfDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_GetPageMode",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::EPdfPageMode)((PoDoFo::PdfDocument const *)arg1)->GetPageMode();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_SetUseFullScreen(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::SetUseFullScreen",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::SetUseFullScreen",1,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_SetUseFullScreen",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      (arg1)->SetUseFullScreen();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_SetPageLayout(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::EPdfPageLayout arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::SetPageLayout",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::SetPageLayout",1,"PoDoFo::PdfDocument *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::SetPageLayout",2,"PoDoFo::EPdfPageLayout");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_SetPageLayout",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (PoDoFo::EPdfPageLayout)(int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetPageLayout(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_SetHideToolbar(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::SetHideToolbar",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::SetHideToolbar",1,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_SetHideToolbar",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      (arg1)->SetHideToolbar();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_SetHideMenubar(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::SetHideMenubar",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::SetHideMenubar",1,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_SetHideMenubar",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      (arg1)->SetHideMenubar();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_SetHideWindowUI(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::SetHideWindowUI",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::SetHideWindowUI",1,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_SetHideWindowUI",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      (arg1)->SetHideWindowUI();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_SetFitWindow(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::SetFitWindow",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::SetFitWindow",1,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_SetFitWindow",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      (arg1)->SetFitWindow();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_SetCenterWindow(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::SetCenterWindow",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::SetCenterWindow",1,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_SetCenterWindow",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      (arg1)->SetCenterWindow();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_SetDisplayDocTitle(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::SetDisplayDocTitle",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::SetDisplayDocTitle",1,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_SetDisplayDocTitle",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      (arg1)->SetDisplayDocTitle();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_SetPrintScaling(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfName *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::SetPrintScaling",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::SetPrintScaling",1,"PoDoFo::PdfDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::SetPrintScaling",2,"PoDoFo::PdfName &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_SetPrintScaling",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfName,0))){
    SWIG_fail_ptr("PdfDocument_SetPrintScaling",2,SWIGTYPE_p_PoDoFo__PdfName);
  }
  
  {
    try {
      (arg1)->SetPrintScaling(*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_SetBaseURI(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  std::string *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::SetBaseURI",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::SetBaseURI",1,"PoDoFo::PdfDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::SetBaseURI",2,"std::string const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_SetBaseURI",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_std__string,0))){
    SWIG_fail_ptr("PdfDocument_SetBaseURI",2,SWIGTYPE_p_std__string);
  }
  
  {
    try {
      (arg1)->SetBaseURI((std::string const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_SetLanguage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  std::string *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::SetLanguage",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::SetLanguage",1,"PoDoFo::PdfDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::SetLanguage",2,"std::string const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_SetLanguage",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_std__string,0))){
    SWIG_fail_ptr("PdfDocument_SetLanguage",2,SWIGTYPE_p_std__string);
  }
  
  {
    try {
      (arg1)->SetLanguage((std::string const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_SetBindingDirection(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfName *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::SetBindingDirection",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::SetBindingDirection",1,"PoDoFo::PdfDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::SetBindingDirection",2,"PoDoFo::PdfName &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_SetBindingDirection",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfName,0))){
    SWIG_fail_ptr("PdfDocument_SetBindingDirection",2,SWIGTYPE_p_PoDoFo__PdfName);
  }
  
  {
    try {
      (arg1)->SetBindingDirection(*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_IsPrintAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::IsPrintAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::IsPrintAllowed",1,"PoDoFo::PdfDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_IsPrintAllowed",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfDocument const *)arg1)->IsPrintAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_IsEditAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::IsEditAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::IsEditAllowed",1,"PoDoFo::PdfDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_IsEditAllowed",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfDocument const *)arg1)->IsEditAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_IsCopyAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::IsCopyAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::IsCopyAllowed",1,"PoDoFo::PdfDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_IsCopyAllowed",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfDocument const *)arg1)->IsCopyAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_IsEditNotesAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::IsEditNotesAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::IsEditNotesAllowed",1,"PoDoFo::PdfDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_IsEditNotesAllowed",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfDocument const *)arg1)->IsEditNotesAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_IsFillAndSignAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::IsFillAndSignAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::IsFillAndSignAllowed",1,"PoDoFo::PdfDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_IsFillAndSignAllowed",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfDocument const *)arg1)->IsFillAndSignAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_IsAccessibilityAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::IsAccessibilityAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::IsAccessibilityAllowed",1,"PoDoFo::PdfDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_IsAccessibilityAllowed",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfDocument const *)arg1)->IsAccessibilityAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_IsDocAssemblyAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::IsDocAssemblyAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::IsDocAssemblyAllowed",1,"PoDoFo::PdfDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_IsDocAssemblyAllowed",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfDocument const *)arg1)->IsDocAssemblyAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_IsHighPrintAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::IsHighPrintAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::IsHighPrintAllowed",1,"PoDoFo::PdfDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_IsHighPrintAllowed",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfDocument const *)arg1)->IsHighPrintAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_GetObjects__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfVecObjects *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::GetObjects",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::GetObjects",1,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_GetObjects",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfVecObjects *)(arg1)->GetObjects();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfVecObjects,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_GetObjects__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfVecObjects *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::GetObjects",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::GetObjects",1,"PoDoFo::PdfDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_GetObjects",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfVecObjects *)((PoDoFo::PdfDocument const *)arg1)->GetObjects();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfVecObjects,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfDocument_GetObjects(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfDocument_GetObjects__SWIG_0(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfDocument_GetObjects__SWIG_1(L);
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfDocument_GetObjects'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfDocument::GetObjects()\n"
    "    PoDoFo::PdfDocument::GetObjects() const\n");
  lua_error(L);return 0;
}


static int _wrap_PdfDocument_SetFontConfigWrapper(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfFontConfigWrapper *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfDocument::SetFontConfigWrapper",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfDocument::SetFontConfigWrapper",1,"PoDoFo::PdfDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfDocument::SetFontConfigWrapper",2,"PoDoFo::PdfFontConfigWrapper const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfDocument_SetFontConfigWrapper",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfFontConfigWrapper,0))){
    SWIG_fail_ptr("PdfDocument_SetFontConfigWrapper",2,SWIGTYPE_p_PoDoFo__PdfFontConfigWrapper);
  }
  
  {
    try {
      (arg1)->SetFontConfigWrapper((PoDoFo::PdfFontConfigWrapper const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfDocument(void *obj) {
PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) obj;
delete arg1;
}
static swig_lua_attribute swig_PdfDocument_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfDocument_methods[]= {
    { "GetWriteMode", _wrap_PdfDocument_GetWriteMode},
    { "GetPdfVersion", _wrap_PdfDocument_GetPdfVersion},
    { "IsLinearized", _wrap_PdfDocument_IsLinearized},
    { "GetInfo", _wrap_PdfDocument_GetInfo},
    { "GetOutlines", _wrap_PdfDocument_GetOutlines},
    { "GetNamesTree", _wrap_PdfDocument_GetNamesTree},
    { "GetAcroForm", _wrap_PdfDocument_GetAcroForm},
    { "GetPagesTree", _wrap_PdfDocument_GetPagesTree},
    { "GetPageCount", _wrap_PdfDocument_GetPageCount},
    { "GetPage", _wrap_PdfDocument_GetPage},
    { "CreateFont", _wrap_PdfDocument_CreateFont},
    { "CreateDuplicateFontType1", _wrap_PdfDocument_CreateDuplicateFontType1},
    { "CreateFontSubset", _wrap_PdfDocument_CreateFontSubset},
    { "GetFontLibrary", _wrap_PdfDocument_GetFontLibrary},
    { "EmbedSubsetFonts", _wrap_PdfDocument_EmbedSubsetFonts},
    { "CreatePage", _wrap_PdfDocument_CreatePage},
    { "CreatePages", _wrap_PdfDocument_CreatePages},
    { "InsertPage", _wrap_PdfDocument_InsertPage},
    { "Append", _wrap_PdfDocument_Append},
    { "InsertExistingPageAt", _wrap_PdfDocument_InsertExistingPageAt},
    { "FillXObjectFromDocumentPage", _wrap_PdfDocument_FillXObjectFromDocumentPage},
    { "FillXObjectFromExistingPage", _wrap_PdfDocument_FillXObjectFromExistingPage},
    { "FillXObjectFromPage", _wrap_PdfDocument_FillXObjectFromPage},
    { "AttachFile", _wrap_PdfDocument_AttachFile},
    { "GetAttachment", _wrap_PdfDocument_GetAttachment},
    { "AddNamedDestination", _wrap_PdfDocument_AddNamedDestination},
    { "SetPageMode", _wrap_PdfDocument_SetPageMode},
    { "GetPageMode", _wrap_PdfDocument_GetPageMode},
    { "SetUseFullScreen", _wrap_PdfDocument_SetUseFullScreen},
    { "SetPageLayout", _wrap_PdfDocument_SetPageLayout},
    { "SetHideToolbar", _wrap_PdfDocument_SetHideToolbar},
    { "SetHideMenubar", _wrap_PdfDocument_SetHideMenubar},
    { "SetHideWindowUI", _wrap_PdfDocument_SetHideWindowUI},
    { "SetFitWindow", _wrap_PdfDocument_SetFitWindow},
    { "SetCenterWindow", _wrap_PdfDocument_SetCenterWindow},
    { "SetDisplayDocTitle", _wrap_PdfDocument_SetDisplayDocTitle},
    { "SetPrintScaling", _wrap_PdfDocument_SetPrintScaling},
    { "SetBaseURI", _wrap_PdfDocument_SetBaseURI},
    { "SetLanguage", _wrap_PdfDocument_SetLanguage},
    { "SetBindingDirection", _wrap_PdfDocument_SetBindingDirection},
    { "IsPrintAllowed", _wrap_PdfDocument_IsPrintAllowed},
    { "IsEditAllowed", _wrap_PdfDocument_IsEditAllowed},
    { "IsCopyAllowed", _wrap_PdfDocument_IsCopyAllowed},
    { "IsEditNotesAllowed", _wrap_PdfDocument_IsEditNotesAllowed},
    { "IsFillAndSignAllowed", _wrap_PdfDocument_IsFillAndSignAllowed},
    { "IsAccessibilityAllowed", _wrap_PdfDocument_IsAccessibilityAllowed},
    { "IsDocAssemblyAllowed", _wrap_PdfDocument_IsDocAssemblyAllowed},
    { "IsHighPrintAllowed", _wrap_PdfDocument_IsHighPrintAllowed},
    { "GetObjects", _wrap_PdfDocument_GetObjects},
    { "SetFontConfigWrapper", _wrap_PdfDocument_SetFontConfigWrapper},
    {0,0}
};
static swig_lua_method swig_PdfDocument_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfDocument_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfDocument_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfDocument_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfDocument_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfDocument_Sf_SwigStatic = {
    "PdfDocument",
    swig_PdfDocument_Sf_SwigStatic_methods,
    swig_PdfDocument_Sf_SwigStatic_attributes,
    swig_PdfDocument_Sf_SwigStatic_constants,
    swig_PdfDocument_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfDocument_bases[] = {0};
static const char *swig_PdfDocument_base_names[] = {0};
static swig_lua_class _wrap_class_PdfDocument = { "PdfDocument", "PdfDocument", &SWIGTYPE_p_PoDoFo__PdfDocument,0, swig_delete_PdfDocument, swig_PdfDocument_methods, swig_PdfDocument_attributes, &swig_PdfDocument_Sf_SwigStatic, swig_PdfDocument_meta, swig_PdfDocument_bases, swig_PdfDocument_base_names };

static int _wrap_PdfEncodingObjectFactory_CreateEncoding__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfObject *arg2 = (PoDoFo::PdfObject *) 0 ;
  bool arg3 ;
  PoDoFo::PdfEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfEncodingObjectFactory::CreateEncoding",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfEncodingObjectFactory::CreateEncoding",1,"PoDoFo::PdfObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfEncodingObjectFactory::CreateEncoding",2,"PoDoFo::PdfObject *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfEncodingObjectFactory::CreateEncoding",3,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("PdfEncodingObjectFactory_CreateEncoding",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("PdfEncodingObjectFactory_CreateEncoding",2,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  arg3 = (lua_toboolean(L, 3)!=0);
  {
    try {
      result = (PoDoFo::PdfEncoding *)PoDoFo::PdfEncodingObjectFactory::CreateEncoding(arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfEncoding,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfEncodingObjectFactory_CreateEncoding__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfObject *arg2 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfEncodingObjectFactory::CreateEncoding",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfEncodingObjectFactory::CreateEncoding",1,"PoDoFo::PdfObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfEncodingObjectFactory::CreateEncoding",2,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("PdfEncodingObjectFactory_CreateEncoding",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("PdfEncodingObjectFactory_CreateEncoding",2,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfEncoding *)PoDoFo::PdfEncodingObjectFactory::CreateEncoding(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfEncoding,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfEncodingObjectFactory_CreateEncoding__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfEncodingObjectFactory::CreateEncoding",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfEncodingObjectFactory::CreateEncoding",1,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("PdfEncodingObjectFactory_CreateEncoding",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfEncoding *)PoDoFo::PdfEncodingObjectFactory::CreateEncoding(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfEncoding,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfEncodingObjectFactory_CreateEncoding(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfEncodingObjectFactory_CreateEncoding__SWIG_2(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfEncodingObjectFactory_CreateEncoding__SWIG_1(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          return _wrap_PdfEncodingObjectFactory_CreateEncoding__SWIG_0(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfEncodingObjectFactory_CreateEncoding'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfEncodingObjectFactory::CreateEncoding(PoDoFo::PdfObject *,PoDoFo::PdfObject *,bool)\n"
    "    PoDoFo::PdfEncodingObjectFactory::CreateEncoding(PoDoFo::PdfObject *,PoDoFo::PdfObject *)\n"
    "    PoDoFo::PdfEncodingObjectFactory::CreateEncoding(PoDoFo::PdfObject *)\n");
  lua_error(L);return 0;
}


static void swig_delete_PdfEncodingObjectFactory(void *obj) {
PoDoFo::PdfEncodingObjectFactory *arg1 = (PoDoFo::PdfEncodingObjectFactory *) obj;
delete arg1;
}
static swig_lua_attribute swig_PdfEncodingObjectFactory_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfEncodingObjectFactory_methods[]= {
    {0,0}
};
static swig_lua_method swig_PdfEncodingObjectFactory_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfEncodingObjectFactory_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfEncodingObjectFactory_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfEncodingObjectFactory_Sf_SwigStatic_methods[]= {
    { "CreateEncoding", _wrap_PdfEncodingObjectFactory_CreateEncoding},
    {0,0}
};
static swig_lua_class* swig_PdfEncodingObjectFactory_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfEncodingObjectFactory_Sf_SwigStatic = {
    "PdfEncodingObjectFactory",
    swig_PdfEncodingObjectFactory_Sf_SwigStatic_methods,
    swig_PdfEncodingObjectFactory_Sf_SwigStatic_attributes,
    swig_PdfEncodingObjectFactory_Sf_SwigStatic_constants,
    swig_PdfEncodingObjectFactory_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfEncodingObjectFactory_bases[] = {0};
static const char *swig_PdfEncodingObjectFactory_base_names[] = {0};
static swig_lua_class _wrap_class_PdfEncodingObjectFactory = { "PdfEncodingObjectFactory", "PdfEncodingObjectFactory", &SWIGTYPE_p_PoDoFo__PdfEncodingObjectFactory,0, swig_delete_PdfEncodingObjectFactory, swig_PdfEncodingObjectFactory_methods, swig_PdfEncodingObjectFactory_attributes, &swig_PdfEncodingObjectFactory_Sf_SwigStatic, swig_PdfEncodingObjectFactory_meta, swig_PdfEncodingObjectFactory_bases, swig_PdfEncodingObjectFactory_base_names };

static int _wrap_new_PdfExtGState__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfVecObjects *arg1 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfExtGState *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfExtGState::PdfExtGState",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfExtGState::PdfExtGState",1,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfExtGState",1,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfExtGState *)new PoDoFo::PdfExtGState(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfExtGState,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfExtGState__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfExtGState *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfExtGState::PdfExtGState",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfExtGState::PdfExtGState",1,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfExtGState",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfExtGState *)new PoDoFo::PdfExtGState(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfExtGState,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfExtGState(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfExtGState__SWIG_0(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfExtGState__SWIG_1(L);
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfExtGState'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfExtGState::PdfExtGState(PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfExtGState::PdfExtGState(PoDoFo::PdfDocument *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfExtGState_GetIdentifier(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfExtGState *arg1 = (PoDoFo::PdfExtGState *) 0 ;
  PoDoFo::PdfName *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfExtGState::GetIdentifier",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfExtGState::GetIdentifier",1,"PoDoFo::PdfExtGState const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfExtGState,0))){
    SWIG_fail_ptr("PdfExtGState_GetIdentifier",1,SWIGTYPE_p_PoDoFo__PdfExtGState);
  }
  
  {
    try {
      result = (PoDoFo::PdfName *) &((PoDoFo::PdfExtGState const *)arg1)->GetIdentifier();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfName,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfExtGState_SetFillOpacity(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfExtGState *arg1 = (PoDoFo::PdfExtGState *) 0 ;
  float arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfExtGState::SetFillOpacity",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetFillOpacity",1,"PoDoFo::PdfExtGState *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetFillOpacity",2,"float");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfExtGState,0))){
    SWIG_fail_ptr("PdfExtGState_SetFillOpacity",1,SWIGTYPE_p_PoDoFo__PdfExtGState);
  }
  
  arg2 = (float)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetFillOpacity(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfExtGState_SetStrokeOpacity(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfExtGState *arg1 = (PoDoFo::PdfExtGState *) 0 ;
  float arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfExtGState::SetStrokeOpacity",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetStrokeOpacity",1,"PoDoFo::PdfExtGState *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetStrokeOpacity",2,"float");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfExtGState,0))){
    SWIG_fail_ptr("PdfExtGState_SetStrokeOpacity",1,SWIGTYPE_p_PoDoFo__PdfExtGState);
  }
  
  arg2 = (float)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetStrokeOpacity(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfExtGState_SetBlendMode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfExtGState *arg1 = (PoDoFo::PdfExtGState *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfExtGState::SetBlendMode",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetBlendMode",1,"PoDoFo::PdfExtGState *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetBlendMode",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfExtGState,0))){
    SWIG_fail_ptr("PdfExtGState_SetBlendMode",1,SWIGTYPE_p_PoDoFo__PdfExtGState);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  {
    try {
      (arg1)->SetBlendMode((char const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfExtGState_SetOverprint__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfExtGState *arg1 = (PoDoFo::PdfExtGState *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfExtGState::SetOverprint",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetOverprint",1,"PoDoFo::PdfExtGState *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetOverprint",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfExtGState,0))){
    SWIG_fail_ptr("PdfExtGState_SetOverprint",1,SWIGTYPE_p_PoDoFo__PdfExtGState);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetOverprint(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfExtGState_SetOverprint__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfExtGState *arg1 = (PoDoFo::PdfExtGState *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfExtGState::SetOverprint",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetOverprint",1,"PoDoFo::PdfExtGState *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfExtGState,0))){
    SWIG_fail_ptr("PdfExtGState_SetOverprint",1,SWIGTYPE_p_PoDoFo__PdfExtGState);
  }
  
  {
    try {
      (arg1)->SetOverprint();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfExtGState_SetOverprint(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfExtGState, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfExtGState_SetOverprint__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfExtGState, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfExtGState_SetOverprint__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfExtGState_SetOverprint'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfExtGState::SetOverprint(bool)\n"
    "    PoDoFo::PdfExtGState::SetOverprint()\n");
  lua_error(L);return 0;
}


static int _wrap_PdfExtGState_SetFillOverprint__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfExtGState *arg1 = (PoDoFo::PdfExtGState *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfExtGState::SetFillOverprint",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetFillOverprint",1,"PoDoFo::PdfExtGState *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetFillOverprint",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfExtGState,0))){
    SWIG_fail_ptr("PdfExtGState_SetFillOverprint",1,SWIGTYPE_p_PoDoFo__PdfExtGState);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetFillOverprint(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfExtGState_SetFillOverprint__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfExtGState *arg1 = (PoDoFo::PdfExtGState *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfExtGState::SetFillOverprint",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetFillOverprint",1,"PoDoFo::PdfExtGState *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfExtGState,0))){
    SWIG_fail_ptr("PdfExtGState_SetFillOverprint",1,SWIGTYPE_p_PoDoFo__PdfExtGState);
  }
  
  {
    try {
      (arg1)->SetFillOverprint();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfExtGState_SetFillOverprint(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfExtGState, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfExtGState_SetFillOverprint__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfExtGState, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfExtGState_SetFillOverprint__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfExtGState_SetFillOverprint'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfExtGState::SetFillOverprint(bool)\n"
    "    PoDoFo::PdfExtGState::SetFillOverprint()\n");
  lua_error(L);return 0;
}


static int _wrap_PdfExtGState_SetStrokeOverprint__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfExtGState *arg1 = (PoDoFo::PdfExtGState *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfExtGState::SetStrokeOverprint",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetStrokeOverprint",1,"PoDoFo::PdfExtGState *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetStrokeOverprint",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfExtGState,0))){
    SWIG_fail_ptr("PdfExtGState_SetStrokeOverprint",1,SWIGTYPE_p_PoDoFo__PdfExtGState);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetStrokeOverprint(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfExtGState_SetStrokeOverprint__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfExtGState *arg1 = (PoDoFo::PdfExtGState *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfExtGState::SetStrokeOverprint",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetStrokeOverprint",1,"PoDoFo::PdfExtGState *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfExtGState,0))){
    SWIG_fail_ptr("PdfExtGState_SetStrokeOverprint",1,SWIGTYPE_p_PoDoFo__PdfExtGState);
  }
  
  {
    try {
      (arg1)->SetStrokeOverprint();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfExtGState_SetStrokeOverprint(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfExtGState, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfExtGState_SetStrokeOverprint__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfExtGState, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfExtGState_SetStrokeOverprint__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfExtGState_SetStrokeOverprint'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfExtGState::SetStrokeOverprint(bool)\n"
    "    PoDoFo::PdfExtGState::SetStrokeOverprint()\n");
  lua_error(L);return 0;
}


static int _wrap_PdfExtGState_SetNonZeroOverprint__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfExtGState *arg1 = (PoDoFo::PdfExtGState *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfExtGState::SetNonZeroOverprint",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetNonZeroOverprint",1,"PoDoFo::PdfExtGState *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetNonZeroOverprint",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfExtGState,0))){
    SWIG_fail_ptr("PdfExtGState_SetNonZeroOverprint",1,SWIGTYPE_p_PoDoFo__PdfExtGState);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetNonZeroOverprint(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfExtGState_SetNonZeroOverprint__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfExtGState *arg1 = (PoDoFo::PdfExtGState *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfExtGState::SetNonZeroOverprint",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetNonZeroOverprint",1,"PoDoFo::PdfExtGState *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfExtGState,0))){
    SWIG_fail_ptr("PdfExtGState_SetNonZeroOverprint",1,SWIGTYPE_p_PoDoFo__PdfExtGState);
  }
  
  {
    try {
      (arg1)->SetNonZeroOverprint();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfExtGState_SetNonZeroOverprint(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfExtGState, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfExtGState_SetNonZeroOverprint__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfExtGState, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfExtGState_SetNonZeroOverprint__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfExtGState_SetNonZeroOverprint'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfExtGState::SetNonZeroOverprint(bool)\n"
    "    PoDoFo::PdfExtGState::SetNonZeroOverprint()\n");
  lua_error(L);return 0;
}


static int _wrap_PdfExtGState_SetRenderingIntent(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfExtGState *arg1 = (PoDoFo::PdfExtGState *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfExtGState::SetRenderingIntent",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetRenderingIntent",1,"PoDoFo::PdfExtGState *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetRenderingIntent",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfExtGState,0))){
    SWIG_fail_ptr("PdfExtGState_SetRenderingIntent",1,SWIGTYPE_p_PoDoFo__PdfExtGState);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  {
    try {
      (arg1)->SetRenderingIntent((char const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfExtGState_SetFrequency(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfExtGState *arg1 = (PoDoFo::PdfExtGState *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfExtGState::SetFrequency",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetFrequency",1,"PoDoFo::PdfExtGState *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfExtGState::SetFrequency",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfExtGState,0))){
    SWIG_fail_ptr("PdfExtGState_SetFrequency",1,SWIGTYPE_p_PoDoFo__PdfExtGState);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetFrequency(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfExtGState(void *obj) {
PoDoFo::PdfExtGState *arg1 = (PoDoFo::PdfExtGState *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfExtGState(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfExtGState);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfExtGState_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfExtGState_methods[]= {
    { "GetIdentifier", _wrap_PdfExtGState_GetIdentifier},
    { "SetFillOpacity", _wrap_PdfExtGState_SetFillOpacity},
    { "SetStrokeOpacity", _wrap_PdfExtGState_SetStrokeOpacity},
    { "SetBlendMode", _wrap_PdfExtGState_SetBlendMode},
    { "SetOverprint", _wrap_PdfExtGState_SetOverprint},
    { "SetFillOverprint", _wrap_PdfExtGState_SetFillOverprint},
    { "SetStrokeOverprint", _wrap_PdfExtGState_SetStrokeOverprint},
    { "SetNonZeroOverprint", _wrap_PdfExtGState_SetNonZeroOverprint},
    { "SetRenderingIntent", _wrap_PdfExtGState_SetRenderingIntent},
    { "SetFrequency", _wrap_PdfExtGState_SetFrequency},
    {0,0}
};
static swig_lua_method swig_PdfExtGState_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfExtGState_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfExtGState_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfExtGState_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfExtGState_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfExtGState_Sf_SwigStatic = {
    "PdfExtGState",
    swig_PdfExtGState_Sf_SwigStatic_methods,
    swig_PdfExtGState_Sf_SwigStatic_attributes,
    swig_PdfExtGState_Sf_SwigStatic_constants,
    swig_PdfExtGState_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfExtGState_bases[] = {0,0};
static const char *swig_PdfExtGState_base_names[] = {"PoDoFo::PdfElement *",0};
static swig_lua_class _wrap_class_PdfExtGState = { "PdfExtGState", "PdfExtGState", &SWIGTYPE_p_PoDoFo__PdfExtGState,_proxy__wrap_new_PdfExtGState, swig_delete_PdfExtGState, swig_PdfExtGState_methods, swig_PdfExtGState_attributes, &swig_PdfExtGState_Sf_SwigStatic, swig_PdfExtGState_meta, swig_PdfExtGState_bases, swig_PdfExtGState_base_names };

static int _wrap_new_PdfField__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfAnnotation *arg2 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfField *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::PdfField",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::PdfField",1,"PoDoFo::PdfObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfField::PdfField",2,"PoDoFo::PdfAnnotation *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfField",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("new_PdfField",2,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  {
    try {
      result = (PoDoFo::PdfField *)new PoDoFo::PdfField(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfField,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfField__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = 0 ;
  PoDoFo::PdfField *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::PdfField",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfField::PdfField",1,"PoDoFo::PdfField const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("new_PdfField",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = (PoDoFo::PdfField *)new PoDoFo::PdfField((PoDoFo::PdfField const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfField,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfField(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfField, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfField__SWIG_7(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAnnotation, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfField__SWIG_6(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfField'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfField::PdfField(PoDoFo::PdfObject *,PoDoFo::PdfAnnotation *)\n"
    "    PoDoFo::PdfField::PdfField(PoDoFo::PdfField const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfField_GetPage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfPage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::GetPage",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::GetPage",1,"PoDoFo::PdfField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_GetPage",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = (PoDoFo::PdfPage *)((PoDoFo::PdfField const *)arg1)->GetPage();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPage,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetHighlightingMode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::EPdfHighlightingMode arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetHighlightingMode",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetHighlightingMode",1,"PoDoFo::PdfField *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetHighlightingMode",2,"PoDoFo::EPdfHighlightingMode");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetHighlightingMode",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  arg2 = (PoDoFo::EPdfHighlightingMode)(int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetHighlightingMode(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_GetHighlightingMode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::EPdfHighlightingMode result;
  
  SWIG_check_num_args("PoDoFo::PdfField::GetHighlightingMode",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::GetHighlightingMode",1,"PoDoFo::PdfField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_GetHighlightingMode",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = (PoDoFo::EPdfHighlightingMode)((PoDoFo::PdfField const *)arg1)->GetHighlightingMode();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetBorderColorTransparent(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetBorderColorTransparent",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetBorderColorTransparent",1,"PoDoFo::PdfField *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetBorderColorTransparent",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      (arg1)->SetBorderColorTransparent();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetBorderColor__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetBorderColor",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetBorderColor",1,"PoDoFo::PdfField *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetBorderColor",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetBorderColor",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetBorderColor(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetBorderColor__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetBorderColor",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetBorderColor",1,"PoDoFo::PdfField *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetBorderColor",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfField::SetBorderColor",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfField::SetBorderColor",4,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetBorderColor",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  {
    try {
      (arg1)->SetBorderColor(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetBorderColor__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetBorderColor",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetBorderColor",1,"PoDoFo::PdfField *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetBorderColor",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfField::SetBorderColor",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfField::SetBorderColor",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfField::SetBorderColor",5,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetBorderColor",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  {
    try {
      (arg1)->SetBorderColor(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetBorderColor(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfField, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfField_SetBorderColor__SWIG_0(L);
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfField, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_PdfField_SetBorderColor__SWIG_1(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfField, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfField_SetBorderColor__SWIG_2(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfField_SetBorderColor'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfField::SetBorderColor(double)\n"
    "    PoDoFo::PdfField::SetBorderColor(double,double,double)\n"
    "    PoDoFo::PdfField::SetBorderColor(double,double,double,double)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfField_SetBackgroundColorTransparent(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetBackgroundColorTransparent",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetBackgroundColorTransparent",1,"PoDoFo::PdfField *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetBackgroundColorTransparent",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      (arg1)->SetBackgroundColorTransparent();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetBackgroundColor__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetBackgroundColor",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetBackgroundColor",1,"PoDoFo::PdfField *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetBackgroundColor",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetBackgroundColor",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetBackgroundColor(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetBackgroundColor__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetBackgroundColor",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetBackgroundColor",1,"PoDoFo::PdfField *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetBackgroundColor",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfField::SetBackgroundColor",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfField::SetBackgroundColor",4,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetBackgroundColor",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  {
    try {
      (arg1)->SetBackgroundColor(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetBackgroundColor__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetBackgroundColor",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetBackgroundColor",1,"PoDoFo::PdfField *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetBackgroundColor",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfField::SetBackgroundColor",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfField::SetBackgroundColor",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfField::SetBackgroundColor",5,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetBackgroundColor",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  {
    try {
      (arg1)->SetBackgroundColor(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetBackgroundColor(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfField, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfField_SetBackgroundColor__SWIG_0(L);
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfField, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_PdfField_SetBackgroundColor__SWIG_1(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfField, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfField_SetBackgroundColor__SWIG_2(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfField_SetBackgroundColor'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfField::SetBackgroundColor(double)\n"
    "    PoDoFo::PdfField::SetBackgroundColor(double,double,double)\n"
    "    PoDoFo::PdfField::SetBackgroundColor(double,double,double,double)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfField_SetFieldName(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetFieldName",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetFieldName",1,"PoDoFo::PdfField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetFieldName",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetFieldName",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfField_SetFieldName",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetFieldName((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_GetFieldName(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfField::GetFieldName",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::GetFieldName",1,"PoDoFo::PdfField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_GetFieldName",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = ((PoDoFo::PdfField const *)arg1)->GetFieldName();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetAlternateName(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetAlternateName",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetAlternateName",1,"PoDoFo::PdfField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetAlternateName",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetAlternateName",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfField_SetAlternateName",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetAlternateName((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_GetAlternateName(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfField::GetAlternateName",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::GetAlternateName",1,"PoDoFo::PdfField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_GetAlternateName",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = ((PoDoFo::PdfField const *)arg1)->GetAlternateName();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetMappingName(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetMappingName",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetMappingName",1,"PoDoFo::PdfField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetMappingName",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetMappingName",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfField_SetMappingName",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetMappingName((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_GetMappingName(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfField::GetMappingName",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::GetMappingName",1,"PoDoFo::PdfField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_GetMappingName",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = ((PoDoFo::PdfField const *)arg1)->GetMappingName();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetReadOnly(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetReadOnly",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetReadOnly",1,"PoDoFo::PdfField *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetReadOnly",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetReadOnly",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetReadOnly(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_IsReadOnly(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfField::IsReadOnly",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::IsReadOnly",1,"PoDoFo::PdfField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_IsReadOnly",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfField const *)arg1)->IsReadOnly();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetRequired(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetRequired",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetRequired",1,"PoDoFo::PdfField *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetRequired",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetRequired",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetRequired(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_IsRequired(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfField::IsRequired",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::IsRequired",1,"PoDoFo::PdfField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_IsRequired",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfField const *)arg1)->IsRequired();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetExport(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetExport",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetExport",1,"PoDoFo::PdfField *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetExport",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetExport",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetExport(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_IsExport(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfField::IsExport",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::IsExport",1,"PoDoFo::PdfField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_IsExport",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfField const *)arg1)->IsExport();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetMouseEnterAction(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfAction *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetMouseEnterAction",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetMouseEnterAction",1,"PoDoFo::PdfField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetMouseEnterAction",2,"PoDoFo::PdfAction const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetMouseEnterAction",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfField_SetMouseEnterAction",2,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      (arg1)->SetMouseEnterAction((PoDoFo::PdfAction const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetMouseLeaveAction(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfAction *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetMouseLeaveAction",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetMouseLeaveAction",1,"PoDoFo::PdfField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetMouseLeaveAction",2,"PoDoFo::PdfAction const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetMouseLeaveAction",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfField_SetMouseLeaveAction",2,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      (arg1)->SetMouseLeaveAction((PoDoFo::PdfAction const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetMouseDownAction(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfAction *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetMouseDownAction",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetMouseDownAction",1,"PoDoFo::PdfField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetMouseDownAction",2,"PoDoFo::PdfAction const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetMouseDownAction",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfField_SetMouseDownAction",2,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      (arg1)->SetMouseDownAction((PoDoFo::PdfAction const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetMouseUpAction(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfAction *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetMouseUpAction",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetMouseUpAction",1,"PoDoFo::PdfField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetMouseUpAction",2,"PoDoFo::PdfAction const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetMouseUpAction",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfField_SetMouseUpAction",2,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      (arg1)->SetMouseUpAction((PoDoFo::PdfAction const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetFocusEnterAction(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfAction *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetFocusEnterAction",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetFocusEnterAction",1,"PoDoFo::PdfField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetFocusEnterAction",2,"PoDoFo::PdfAction const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetFocusEnterAction",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfField_SetFocusEnterAction",2,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      (arg1)->SetFocusEnterAction((PoDoFo::PdfAction const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetFocusLeaveAction(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfAction *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetFocusLeaveAction",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetFocusLeaveAction",1,"PoDoFo::PdfField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetFocusLeaveAction",2,"PoDoFo::PdfAction const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetFocusLeaveAction",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfField_SetFocusLeaveAction",2,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      (arg1)->SetFocusLeaveAction((PoDoFo::PdfAction const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetPageOpenAction(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfAction *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetPageOpenAction",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetPageOpenAction",1,"PoDoFo::PdfField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetPageOpenAction",2,"PoDoFo::PdfAction const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetPageOpenAction",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfField_SetPageOpenAction",2,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      (arg1)->SetPageOpenAction((PoDoFo::PdfAction const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetPageCloseAction(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfAction *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetPageCloseAction",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetPageCloseAction",1,"PoDoFo::PdfField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetPageCloseAction",2,"PoDoFo::PdfAction const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetPageCloseAction",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfField_SetPageCloseAction",2,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      (arg1)->SetPageCloseAction((PoDoFo::PdfAction const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetPageVisibleAction(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfAction *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetPageVisibleAction",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetPageVisibleAction",1,"PoDoFo::PdfField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetPageVisibleAction",2,"PoDoFo::PdfAction const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetPageVisibleAction",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfField_SetPageVisibleAction",2,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      (arg1)->SetPageVisibleAction((PoDoFo::PdfAction const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetPageInvisibleAction(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfAction *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetPageInvisibleAction",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetPageInvisibleAction",1,"PoDoFo::PdfField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetPageInvisibleAction",2,"PoDoFo::PdfAction const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetPageInvisibleAction",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfField_SetPageInvisibleAction",2,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      (arg1)->SetPageInvisibleAction((PoDoFo::PdfAction const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetKeystrokeAction(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfAction *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetKeystrokeAction",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetKeystrokeAction",1,"PoDoFo::PdfField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetKeystrokeAction",2,"PoDoFo::PdfAction const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetKeystrokeAction",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfField_SetKeystrokeAction",2,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      (arg1)->SetKeystrokeAction((PoDoFo::PdfAction const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_SetValidateAction(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfAction *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::SetValidateAction",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::SetValidateAction",1,"PoDoFo::PdfField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfField::SetValidateAction",2,"PoDoFo::PdfAction const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_SetValidateAction",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfField_SetValidateAction",2,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      (arg1)->SetValidateAction((PoDoFo::PdfAction const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_GetType(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::EPdfField result;
  
  SWIG_check_num_args("PoDoFo::PdfField::GetType",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::GetType",1,"PoDoFo::PdfField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_GetType",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = (PoDoFo::EPdfField)((PoDoFo::PdfField const *)arg1)->GetType();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_GetWidgetAnnotation(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfAnnotation *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::GetWidgetAnnotation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::GetWidgetAnnotation",1,"PoDoFo::PdfField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_GetWidgetAnnotation",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = (PoDoFo::PdfAnnotation *)((PoDoFo::PdfField const *)arg1)->GetWidgetAnnotation();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAnnotation,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfField_GetFieldObject(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfField::GetFieldObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfField::GetFieldObject",1,"PoDoFo::PdfField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("PdfField_GetFieldObject",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfField const *)arg1)->GetFieldObject();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfField(void *obj) {
PoDoFo::PdfField *arg1 = (PoDoFo::PdfField *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfField(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfField);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfField_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfField_methods[]= {
    { "GetPage", _wrap_PdfField_GetPage},
    { "SetHighlightingMode", _wrap_PdfField_SetHighlightingMode},
    { "GetHighlightingMode", _wrap_PdfField_GetHighlightingMode},
    { "SetBorderColorTransparent", _wrap_PdfField_SetBorderColorTransparent},
    { "SetBorderColor", _wrap_PdfField_SetBorderColor},
    { "SetBackgroundColorTransparent", _wrap_PdfField_SetBackgroundColorTransparent},
    { "SetBackgroundColor", _wrap_PdfField_SetBackgroundColor},
    { "SetFieldName", _wrap_PdfField_SetFieldName},
    { "GetFieldName", _wrap_PdfField_GetFieldName},
    { "SetAlternateName", _wrap_PdfField_SetAlternateName},
    { "GetAlternateName", _wrap_PdfField_GetAlternateName},
    { "SetMappingName", _wrap_PdfField_SetMappingName},
    { "GetMappingName", _wrap_PdfField_GetMappingName},
    { "SetReadOnly", _wrap_PdfField_SetReadOnly},
    { "IsReadOnly", _wrap_PdfField_IsReadOnly},
    { "SetRequired", _wrap_PdfField_SetRequired},
    { "IsRequired", _wrap_PdfField_IsRequired},
    { "SetExport", _wrap_PdfField_SetExport},
    { "IsExport", _wrap_PdfField_IsExport},
    { "SetMouseEnterAction", _wrap_PdfField_SetMouseEnterAction},
    { "SetMouseLeaveAction", _wrap_PdfField_SetMouseLeaveAction},
    { "SetMouseDownAction", _wrap_PdfField_SetMouseDownAction},
    { "SetMouseUpAction", _wrap_PdfField_SetMouseUpAction},
    { "SetFocusEnterAction", _wrap_PdfField_SetFocusEnterAction},
    { "SetFocusLeaveAction", _wrap_PdfField_SetFocusLeaveAction},
    { "SetPageOpenAction", _wrap_PdfField_SetPageOpenAction},
    { "SetPageCloseAction", _wrap_PdfField_SetPageCloseAction},
    { "SetPageVisibleAction", _wrap_PdfField_SetPageVisibleAction},
    { "SetPageInvisibleAction", _wrap_PdfField_SetPageInvisibleAction},
    { "SetKeystrokeAction", _wrap_PdfField_SetKeystrokeAction},
    { "SetValidateAction", _wrap_PdfField_SetValidateAction},
    { "GetType", _wrap_PdfField_GetType},
    { "GetWidgetAnnotation", _wrap_PdfField_GetWidgetAnnotation},
    { "GetFieldObject", _wrap_PdfField_GetFieldObject},
    {0,0}
};
static swig_lua_method swig_PdfField_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfField_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfField_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfField_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfField_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfField_Sf_SwigStatic = {
    "PdfField",
    swig_PdfField_Sf_SwigStatic_methods,
    swig_PdfField_Sf_SwigStatic_attributes,
    swig_PdfField_Sf_SwigStatic_constants,
    swig_PdfField_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfField_bases[] = {0};
static const char *swig_PdfField_base_names[] = {0};
static swig_lua_class _wrap_class_PdfField = { "PdfField", "PdfField", &SWIGTYPE_p_PoDoFo__PdfField,_proxy__wrap_new_PdfField, swig_delete_PdfField, swig_PdfField_methods, swig_PdfField_attributes, &swig_PdfField_Sf_SwigStatic, swig_PdfField_meta, swig_PdfField_bases, swig_PdfField_base_names };

static int _wrap_new_PdfButton__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = 0 ;
  PoDoFo::PdfButton *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfButton::PdfButton",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfButton::PdfButton",1,"PoDoFo::PdfField const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("new_PdfButton",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = (PoDoFo::PdfButton *)new PoDoFo::PdfButton((PoDoFo::PdfField const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfButton,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfButton(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfField, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfButton__SWIG_4(L);
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfButton'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfButton::PdfButton(PoDoFo::PdfField const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfButton_IsPushButton(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfButton *arg1 = (PoDoFo::PdfButton *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfButton::IsPushButton",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfButton::IsPushButton",1,"PoDoFo::PdfButton const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfButton,0))){
    SWIG_fail_ptr("PdfButton_IsPushButton",1,SWIGTYPE_p_PoDoFo__PdfButton);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfButton const *)arg1)->IsPushButton();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfButton_IsCheckBox(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfButton *arg1 = (PoDoFo::PdfButton *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfButton::IsCheckBox",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfButton::IsCheckBox",1,"PoDoFo::PdfButton const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfButton,0))){
    SWIG_fail_ptr("PdfButton_IsCheckBox",1,SWIGTYPE_p_PoDoFo__PdfButton);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfButton const *)arg1)->IsCheckBox();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfButton_IsRadioButton(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfButton *arg1 = (PoDoFo::PdfButton *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfButton::IsRadioButton",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfButton::IsRadioButton",1,"PoDoFo::PdfButton const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfButton,0))){
    SWIG_fail_ptr("PdfButton_IsRadioButton",1,SWIGTYPE_p_PoDoFo__PdfButton);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfButton const *)arg1)->IsRadioButton();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfButton_SetCaption(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfButton *arg1 = (PoDoFo::PdfButton *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfButton::SetCaption",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfButton::SetCaption",1,"PoDoFo::PdfButton *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfButton::SetCaption",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfButton,0))){
    SWIG_fail_ptr("PdfButton_SetCaption",1,SWIGTYPE_p_PoDoFo__PdfButton);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfButton_SetCaption",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetCaption((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfButton_GetCaption(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfButton *arg1 = (PoDoFo::PdfButton *) 0 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfButton::GetCaption",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfButton::GetCaption",1,"PoDoFo::PdfButton const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfButton,0))){
    SWIG_fail_ptr("PdfButton_GetCaption",1,SWIGTYPE_p_PoDoFo__PdfButton);
  }
  
  {
    try {
      result = ((PoDoFo::PdfButton const *)arg1)->GetCaption();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfButton(void *obj) {
PoDoFo::PdfButton *arg1 = (PoDoFo::PdfButton *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfButton(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfButton);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfButton_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfButton_methods[]= {
    { "IsPushButton", _wrap_PdfButton_IsPushButton},
    { "IsCheckBox", _wrap_PdfButton_IsCheckBox},
    { "IsRadioButton", _wrap_PdfButton_IsRadioButton},
    { "SetCaption", _wrap_PdfButton_SetCaption},
    { "GetCaption", _wrap_PdfButton_GetCaption},
    {0,0}
};
static swig_lua_method swig_PdfButton_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfButton_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfButton_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfButton_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfButton_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfButton_Sf_SwigStatic = {
    "PdfButton",
    swig_PdfButton_Sf_SwigStatic_methods,
    swig_PdfButton_Sf_SwigStatic_attributes,
    swig_PdfButton_Sf_SwigStatic_constants,
    swig_PdfButton_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfButton_bases[] = {0,0};
static const char *swig_PdfButton_base_names[] = {"PoDoFo::PdfField *",0};
static swig_lua_class _wrap_class_PdfButton = { "PdfButton", "PdfButton", &SWIGTYPE_p_PoDoFo__PdfButton,_proxy__wrap_new_PdfButton, swig_delete_PdfButton, swig_PdfButton_methods, swig_PdfButton_attributes, &swig_PdfButton_Sf_SwigStatic, swig_PdfButton_meta, swig_PdfButton_bases, swig_PdfButton_base_names };

static int _wrap_new_PdfPushButton__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfAcroForm *arg2 = (PoDoFo::PdfAcroForm *) 0 ;
  PoDoFo::PdfPushButton *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPushButton::PdfPushButton",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPushButton::PdfPushButton",1,"PoDoFo::PdfAnnotation *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfPushButton::PdfPushButton",2,"PoDoFo::PdfAcroForm *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("new_PdfPushButton",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAcroForm,0))){
    SWIG_fail_ptr("new_PdfPushButton",2,SWIGTYPE_p_PoDoFo__PdfAcroForm);
  }
  
  {
    try {
      result = (PoDoFo::PdfPushButton *)new PoDoFo::PdfPushButton(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPushButton,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfPushButton__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfAcroForm *arg3 = (PoDoFo::PdfAcroForm *) 0 ;
  PoDoFo::PdfPushButton *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPushButton::PdfPushButton",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPushButton::PdfPushButton",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPushButton::PdfPushButton",2,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfPushButton::PdfPushButton",3,"PoDoFo::PdfAcroForm *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfPushButton",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfPushButton",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfAcroForm,0))){
    SWIG_fail_ptr("new_PdfPushButton",3,SWIGTYPE_p_PoDoFo__PdfAcroForm);
  }
  
  {
    try {
      result = (PoDoFo::PdfPushButton *)new PoDoFo::PdfPushButton(arg1,(PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPushButton,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfPushButton__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfDocument *arg3 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfPushButton *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPushButton::PdfPushButton",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPushButton::PdfPushButton",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPushButton::PdfPushButton",2,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfPushButton::PdfPushButton",3,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfPushButton",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfPushButton",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfPushButton",3,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfPushButton *)new PoDoFo::PdfPushButton(arg1,(PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPushButton,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfPushButton__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfStreamedDocument *arg3 = (PoDoFo::PdfStreamedDocument *) 0 ;
  PoDoFo::PdfPushButton *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPushButton::PdfPushButton",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPushButton::PdfPushButton",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPushButton::PdfPushButton",2,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfPushButton::PdfPushButton",3,"PoDoFo::PdfStreamedDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfPushButton",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfPushButton",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,0))){
    SWIG_fail_ptr("new_PdfPushButton",3,SWIGTYPE_p_PoDoFo__PdfStreamedDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfPushButton *)new PoDoFo::PdfPushButton(arg1,(PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPushButton,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfPushButton__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = 0 ;
  PoDoFo::PdfPushButton *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPushButton::PdfPushButton",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfPushButton::PdfPushButton",1,"PoDoFo::PdfField const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("new_PdfPushButton",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = (PoDoFo::PdfPushButton *)new PoDoFo::PdfPushButton((PoDoFo::PdfField const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPushButton,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfPushButton(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfField, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfPushButton__SWIG_4(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAnnotation, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAcroForm, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfPushButton__SWIG_0(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfStreamedDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfPushButton__SWIG_3(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfPushButton__SWIG_2(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAcroForm, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfPushButton__SWIG_1(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfPushButton'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPushButton::PdfPushButton(PoDoFo::PdfAnnotation *,PoDoFo::PdfAcroForm *)\n"
    "    PoDoFo::PdfPushButton::PdfPushButton(PoDoFo::PdfPage *,PoDoFo::PdfRect const &,PoDoFo::PdfAcroForm *)\n"
    "    PoDoFo::PdfPushButton::PdfPushButton(PoDoFo::PdfPage *,PoDoFo::PdfRect const &,PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfPushButton::PdfPushButton(PoDoFo::PdfPage *,PoDoFo::PdfRect const &,PoDoFo::PdfStreamedDocument *)\n"
    "    PoDoFo::PdfPushButton::PdfPushButton(PoDoFo::PdfField const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPushButton_SetRolloverCaption(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPushButton *arg1 = (PoDoFo::PdfPushButton *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPushButton::SetRolloverCaption",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPushButton::SetRolloverCaption",1,"PoDoFo::PdfPushButton *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPushButton::SetRolloverCaption",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPushButton,0))){
    SWIG_fail_ptr("PdfPushButton_SetRolloverCaption",1,SWIGTYPE_p_PoDoFo__PdfPushButton);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfPushButton_SetRolloverCaption",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetRolloverCaption((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPushButton_GetRolloverCaption(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPushButton *arg1 = (PoDoFo::PdfPushButton *) 0 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfPushButton::GetRolloverCaption",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPushButton::GetRolloverCaption",1,"PoDoFo::PdfPushButton const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPushButton,0))){
    SWIG_fail_ptr("PdfPushButton_GetRolloverCaption",1,SWIGTYPE_p_PoDoFo__PdfPushButton);
  }
  
  {
    try {
      result = ((PoDoFo::PdfPushButton const *)arg1)->GetRolloverCaption();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPushButton_SetAlternateCaption(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPushButton *arg1 = (PoDoFo::PdfPushButton *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPushButton::SetAlternateCaption",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPushButton::SetAlternateCaption",1,"PoDoFo::PdfPushButton *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPushButton::SetAlternateCaption",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPushButton,0))){
    SWIG_fail_ptr("PdfPushButton_SetAlternateCaption",1,SWIGTYPE_p_PoDoFo__PdfPushButton);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfPushButton_SetAlternateCaption",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetAlternateCaption((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPushButton_GetAlternateCaption(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPushButton *arg1 = (PoDoFo::PdfPushButton *) 0 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfPushButton::GetAlternateCaption",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPushButton::GetAlternateCaption",1,"PoDoFo::PdfPushButton const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPushButton,0))){
    SWIG_fail_ptr("PdfPushButton_GetAlternateCaption",1,SWIGTYPE_p_PoDoFo__PdfPushButton);
  }
  
  {
    try {
      result = ((PoDoFo::PdfPushButton const *)arg1)->GetAlternateCaption();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfPushButton(void *obj) {
PoDoFo::PdfPushButton *arg1 = (PoDoFo::PdfPushButton *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfPushButton(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfPushButton);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfPushButton_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfPushButton_methods[]= {
    { "SetRolloverCaption", _wrap_PdfPushButton_SetRolloverCaption},
    { "GetRolloverCaption", _wrap_PdfPushButton_GetRolloverCaption},
    { "SetAlternateCaption", _wrap_PdfPushButton_SetAlternateCaption},
    { "GetAlternateCaption", _wrap_PdfPushButton_GetAlternateCaption},
    {0,0}
};
static swig_lua_method swig_PdfPushButton_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfPushButton_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfPushButton_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfPushButton_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfPushButton_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfPushButton_Sf_SwigStatic = {
    "PdfPushButton",
    swig_PdfPushButton_Sf_SwigStatic_methods,
    swig_PdfPushButton_Sf_SwigStatic_attributes,
    swig_PdfPushButton_Sf_SwigStatic_constants,
    swig_PdfPushButton_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfPushButton_bases[] = {0,0};
static const char *swig_PdfPushButton_base_names[] = {"PoDoFo::PdfButton *",0};
static swig_lua_class _wrap_class_PdfPushButton = { "PdfPushButton", "PdfPushButton", &SWIGTYPE_p_PoDoFo__PdfPushButton,_proxy__wrap_new_PdfPushButton, swig_delete_PdfPushButton, swig_PdfPushButton_methods, swig_PdfPushButton_attributes, &swig_PdfPushButton_Sf_SwigStatic, swig_PdfPushButton_meta, swig_PdfPushButton_bases, swig_PdfPushButton_base_names };

static int _wrap_new_PdfCheckBox__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfAcroForm *arg2 = (PoDoFo::PdfAcroForm *) 0 ;
  PoDoFo::PdfCheckBox *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfCheckBox::PdfCheckBox",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCheckBox::PdfCheckBox",1,"PoDoFo::PdfAnnotation *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfCheckBox::PdfCheckBox",2,"PoDoFo::PdfAcroForm *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("new_PdfCheckBox",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAcroForm,0))){
    SWIG_fail_ptr("new_PdfCheckBox",2,SWIGTYPE_p_PoDoFo__PdfAcroForm);
  }
  
  {
    try {
      result = (PoDoFo::PdfCheckBox *)new PoDoFo::PdfCheckBox(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfCheckBox,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfCheckBox__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfAcroForm *arg3 = (PoDoFo::PdfAcroForm *) 0 ;
  PoDoFo::PdfCheckBox *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfCheckBox::PdfCheckBox",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCheckBox::PdfCheckBox",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfCheckBox::PdfCheckBox",2,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfCheckBox::PdfCheckBox",3,"PoDoFo::PdfAcroForm *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfCheckBox",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfCheckBox",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfAcroForm,0))){
    SWIG_fail_ptr("new_PdfCheckBox",3,SWIGTYPE_p_PoDoFo__PdfAcroForm);
  }
  
  {
    try {
      result = (PoDoFo::PdfCheckBox *)new PoDoFo::PdfCheckBox(arg1,(PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfCheckBox,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfCheckBox__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfDocument *arg3 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfCheckBox *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfCheckBox::PdfCheckBox",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCheckBox::PdfCheckBox",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfCheckBox::PdfCheckBox",2,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfCheckBox::PdfCheckBox",3,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfCheckBox",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfCheckBox",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfCheckBox",3,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfCheckBox *)new PoDoFo::PdfCheckBox(arg1,(PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfCheckBox,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfCheckBox__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfStreamedDocument *arg3 = (PoDoFo::PdfStreamedDocument *) 0 ;
  PoDoFo::PdfCheckBox *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfCheckBox::PdfCheckBox",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCheckBox::PdfCheckBox",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfCheckBox::PdfCheckBox",2,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfCheckBox::PdfCheckBox",3,"PoDoFo::PdfStreamedDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfCheckBox",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfCheckBox",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,0))){
    SWIG_fail_ptr("new_PdfCheckBox",3,SWIGTYPE_p_PoDoFo__PdfStreamedDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfCheckBox *)new PoDoFo::PdfCheckBox(arg1,(PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfCheckBox,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfCheckBox__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = 0 ;
  PoDoFo::PdfCheckBox *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfCheckBox::PdfCheckBox",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfCheckBox::PdfCheckBox",1,"PoDoFo::PdfField const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("new_PdfCheckBox",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = (PoDoFo::PdfCheckBox *)new PoDoFo::PdfCheckBox((PoDoFo::PdfField const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfCheckBox,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfCheckBox(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfField, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfCheckBox__SWIG_4(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAnnotation, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAcroForm, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfCheckBox__SWIG_0(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfStreamedDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfCheckBox__SWIG_3(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfCheckBox__SWIG_2(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAcroForm, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfCheckBox__SWIG_1(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfCheckBox'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfCheckBox::PdfCheckBox(PoDoFo::PdfAnnotation *,PoDoFo::PdfAcroForm *)\n"
    "    PoDoFo::PdfCheckBox::PdfCheckBox(PoDoFo::PdfPage *,PoDoFo::PdfRect const &,PoDoFo::PdfAcroForm *)\n"
    "    PoDoFo::PdfCheckBox::PdfCheckBox(PoDoFo::PdfPage *,PoDoFo::PdfRect const &,PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfCheckBox::PdfCheckBox(PoDoFo::PdfPage *,PoDoFo::PdfRect const &,PoDoFo::PdfStreamedDocument *)\n"
    "    PoDoFo::PdfCheckBox::PdfCheckBox(PoDoFo::PdfField const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfCheckBox_SetAppearanceChecked(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfCheckBox *arg1 = (PoDoFo::PdfCheckBox *) 0 ;
  PoDoFo::PdfXObject *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfCheckBox::SetAppearanceChecked",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCheckBox::SetAppearanceChecked",1,"PoDoFo::PdfCheckBox *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfCheckBox::SetAppearanceChecked",2,"PoDoFo::PdfXObject const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfCheckBox,0))){
    SWIG_fail_ptr("PdfCheckBox_SetAppearanceChecked",1,SWIGTYPE_p_PoDoFo__PdfCheckBox);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfCheckBox_SetAppearanceChecked",2,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  {
    try {
      (arg1)->SetAppearanceChecked((PoDoFo::PdfXObject const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfCheckBox_SetAppearanceUnchecked(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfCheckBox *arg1 = (PoDoFo::PdfCheckBox *) 0 ;
  PoDoFo::PdfXObject *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfCheckBox::SetAppearanceUnchecked",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCheckBox::SetAppearanceUnchecked",1,"PoDoFo::PdfCheckBox *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfCheckBox::SetAppearanceUnchecked",2,"PoDoFo::PdfXObject const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfCheckBox,0))){
    SWIG_fail_ptr("PdfCheckBox_SetAppearanceUnchecked",1,SWIGTYPE_p_PoDoFo__PdfCheckBox);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfCheckBox_SetAppearanceUnchecked",2,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  {
    try {
      (arg1)->SetAppearanceUnchecked((PoDoFo::PdfXObject const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfCheckBox_SetChecked(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfCheckBox *arg1 = (PoDoFo::PdfCheckBox *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfCheckBox::SetChecked",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCheckBox::SetChecked",1,"PoDoFo::PdfCheckBox *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfCheckBox::SetChecked",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfCheckBox,0))){
    SWIG_fail_ptr("PdfCheckBox_SetChecked",1,SWIGTYPE_p_PoDoFo__PdfCheckBox);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetChecked(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfCheckBox_IsChecked(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfCheckBox *arg1 = (PoDoFo::PdfCheckBox *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfCheckBox::IsChecked",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfCheckBox::IsChecked",1,"PoDoFo::PdfCheckBox const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfCheckBox,0))){
    SWIG_fail_ptr("PdfCheckBox_IsChecked",1,SWIGTYPE_p_PoDoFo__PdfCheckBox);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfCheckBox const *)arg1)->IsChecked();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfCheckBox(void *obj) {
PoDoFo::PdfCheckBox *arg1 = (PoDoFo::PdfCheckBox *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfCheckBox(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfCheckBox);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfCheckBox_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfCheckBox_methods[]= {
    { "SetAppearanceChecked", _wrap_PdfCheckBox_SetAppearanceChecked},
    { "SetAppearanceUnchecked", _wrap_PdfCheckBox_SetAppearanceUnchecked},
    { "SetChecked", _wrap_PdfCheckBox_SetChecked},
    { "IsChecked", _wrap_PdfCheckBox_IsChecked},
    {0,0}
};
static swig_lua_method swig_PdfCheckBox_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfCheckBox_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfCheckBox_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfCheckBox_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfCheckBox_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfCheckBox_Sf_SwigStatic = {
    "PdfCheckBox",
    swig_PdfCheckBox_Sf_SwigStatic_methods,
    swig_PdfCheckBox_Sf_SwigStatic_attributes,
    swig_PdfCheckBox_Sf_SwigStatic_constants,
    swig_PdfCheckBox_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfCheckBox_bases[] = {0,0};
static const char *swig_PdfCheckBox_base_names[] = {"PoDoFo::PdfButton *",0};
static swig_lua_class _wrap_class_PdfCheckBox = { "PdfCheckBox", "PdfCheckBox", &SWIGTYPE_p_PoDoFo__PdfCheckBox,_proxy__wrap_new_PdfCheckBox, swig_delete_PdfCheckBox, swig_PdfCheckBox_methods, swig_PdfCheckBox_attributes, &swig_PdfCheckBox_Sf_SwigStatic, swig_PdfCheckBox_meta, swig_PdfCheckBox_bases, swig_PdfCheckBox_base_names };

static int _wrap_new_PdfTextField__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfAcroForm *arg2 = (PoDoFo::PdfAcroForm *) 0 ;
  PoDoFo::PdfTextField *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::PdfTextField",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::PdfTextField",1,"PoDoFo::PdfAnnotation *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfTextField::PdfTextField",2,"PoDoFo::PdfAcroForm *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("new_PdfTextField",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAcroForm,0))){
    SWIG_fail_ptr("new_PdfTextField",2,SWIGTYPE_p_PoDoFo__PdfAcroForm);
  }
  
  {
    try {
      result = (PoDoFo::PdfTextField *)new PoDoFo::PdfTextField(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfTextField,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfTextField__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfAcroForm *arg3 = (PoDoFo::PdfAcroForm *) 0 ;
  PoDoFo::PdfTextField *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::PdfTextField",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::PdfTextField",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfTextField::PdfTextField",2,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfTextField::PdfTextField",3,"PoDoFo::PdfAcroForm *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfTextField",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfTextField",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfAcroForm,0))){
    SWIG_fail_ptr("new_PdfTextField",3,SWIGTYPE_p_PoDoFo__PdfAcroForm);
  }
  
  {
    try {
      result = (PoDoFo::PdfTextField *)new PoDoFo::PdfTextField(arg1,(PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfTextField,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfTextField__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfDocument *arg3 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfTextField *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::PdfTextField",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::PdfTextField",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfTextField::PdfTextField",2,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfTextField::PdfTextField",3,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfTextField",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfTextField",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfTextField",3,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfTextField *)new PoDoFo::PdfTextField(arg1,(PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfTextField,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfTextField__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfStreamedDocument *arg3 = (PoDoFo::PdfStreamedDocument *) 0 ;
  PoDoFo::PdfTextField *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::PdfTextField",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::PdfTextField",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfTextField::PdfTextField",2,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfTextField::PdfTextField",3,"PoDoFo::PdfStreamedDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfTextField",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfTextField",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,0))){
    SWIG_fail_ptr("new_PdfTextField",3,SWIGTYPE_p_PoDoFo__PdfStreamedDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfTextField *)new PoDoFo::PdfTextField(arg1,(PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfTextField,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfTextField__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = 0 ;
  PoDoFo::PdfTextField *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::PdfTextField",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::PdfTextField",1,"PoDoFo::PdfField const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("new_PdfTextField",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = (PoDoFo::PdfTextField *)new PoDoFo::PdfTextField((PoDoFo::PdfField const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfTextField,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfTextField(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfField, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfTextField__SWIG_4(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAnnotation, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAcroForm, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfTextField__SWIG_0(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfStreamedDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfTextField__SWIG_3(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfTextField__SWIG_2(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAcroForm, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfTextField__SWIG_1(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfTextField'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfTextField::PdfTextField(PoDoFo::PdfAnnotation *,PoDoFo::PdfAcroForm *)\n"
    "    PoDoFo::PdfTextField::PdfTextField(PoDoFo::PdfPage *,PoDoFo::PdfRect const &,PoDoFo::PdfAcroForm *)\n"
    "    PoDoFo::PdfTextField::PdfTextField(PoDoFo::PdfPage *,PoDoFo::PdfRect const &,PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfTextField::PdfTextField(PoDoFo::PdfPage *,PoDoFo::PdfRect const &,PoDoFo::PdfStreamedDocument *)\n"
    "    PoDoFo::PdfTextField::PdfTextField(PoDoFo::PdfField const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfTextField_SetText(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::SetText",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::SetText",1,"PoDoFo::PdfTextField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfTextField::SetText",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTextField,0))){
    SWIG_fail_ptr("PdfTextField_SetText",1,SWIGTYPE_p_PoDoFo__PdfTextField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfTextField_SetText",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetText((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTextField_GetText(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) 0 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::GetText",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::GetText",1,"PoDoFo::PdfTextField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTextField,0))){
    SWIG_fail_ptr("PdfTextField_GetText",1,SWIGTYPE_p_PoDoFo__PdfTextField);
  }
  
  {
    try {
      result = ((PoDoFo::PdfTextField const *)arg1)->GetText();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTextField_SetMaxLen(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) 0 ;
  pdf_long arg2 ;
  pdf_long *argp2 ;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::SetMaxLen",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::SetMaxLen",1,"PoDoFo::PdfTextField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfTextField::SetMaxLen",2,"pdf_long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTextField,0))){
    SWIG_fail_ptr("PdfTextField_SetMaxLen",1,SWIGTYPE_p_PoDoFo__PdfTextField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("PdfTextField_SetMaxLen",2,SWIGTYPE_p_pdf_long);
  }
  arg2 = *argp2;
  
  {
    try {
      (arg1)->SetMaxLen(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTextField_GetMaxLen(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) 0 ;
  pdf_long result;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::GetMaxLen",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::GetMaxLen",1,"PoDoFo::PdfTextField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTextField,0))){
    SWIG_fail_ptr("PdfTextField_GetMaxLen",1,SWIGTYPE_p_PoDoFo__PdfTextField);
  }
  
  {
    try {
      result = ((PoDoFo::PdfTextField const *)arg1)->GetMaxLen();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    pdf_long * resultptr = new pdf_long((const pdf_long &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_long,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTextField_SetMultiLine(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::SetMultiLine",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::SetMultiLine",1,"PoDoFo::PdfTextField *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfTextField::SetMultiLine",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTextField,0))){
    SWIG_fail_ptr("PdfTextField_SetMultiLine",1,SWIGTYPE_p_PoDoFo__PdfTextField);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetMultiLine(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTextField_IsMultiLine(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::IsMultiLine",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::IsMultiLine",1,"PoDoFo::PdfTextField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTextField,0))){
    SWIG_fail_ptr("PdfTextField_IsMultiLine",1,SWIGTYPE_p_PoDoFo__PdfTextField);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfTextField const *)arg1)->IsMultiLine();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTextField_SetPasswordField(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::SetPasswordField",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::SetPasswordField",1,"PoDoFo::PdfTextField *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfTextField::SetPasswordField",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTextField,0))){
    SWIG_fail_ptr("PdfTextField_SetPasswordField",1,SWIGTYPE_p_PoDoFo__PdfTextField);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetPasswordField(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTextField_IsPasswordField(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::IsPasswordField",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::IsPasswordField",1,"PoDoFo::PdfTextField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTextField,0))){
    SWIG_fail_ptr("PdfTextField_IsPasswordField",1,SWIGTYPE_p_PoDoFo__PdfTextField);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfTextField const *)arg1)->IsPasswordField();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTextField_SetFileField(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::SetFileField",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::SetFileField",1,"PoDoFo::PdfTextField *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfTextField::SetFileField",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTextField,0))){
    SWIG_fail_ptr("PdfTextField_SetFileField",1,SWIGTYPE_p_PoDoFo__PdfTextField);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetFileField(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTextField_IsFileField(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::IsFileField",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::IsFileField",1,"PoDoFo::PdfTextField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTextField,0))){
    SWIG_fail_ptr("PdfTextField_IsFileField",1,SWIGTYPE_p_PoDoFo__PdfTextField);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfTextField const *)arg1)->IsFileField();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTextField_SetSpellcheckingEnabled(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::SetSpellcheckingEnabled",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::SetSpellcheckingEnabled",1,"PoDoFo::PdfTextField *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfTextField::SetSpellcheckingEnabled",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTextField,0))){
    SWIG_fail_ptr("PdfTextField_SetSpellcheckingEnabled",1,SWIGTYPE_p_PoDoFo__PdfTextField);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetSpellcheckingEnabled(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTextField_IsSpellcheckingEnabled(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::IsSpellcheckingEnabled",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::IsSpellcheckingEnabled",1,"PoDoFo::PdfTextField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTextField,0))){
    SWIG_fail_ptr("PdfTextField_IsSpellcheckingEnabled",1,SWIGTYPE_p_PoDoFo__PdfTextField);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfTextField const *)arg1)->IsSpellcheckingEnabled();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTextField_SetScrollBarsEnabled(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::SetScrollBarsEnabled",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::SetScrollBarsEnabled",1,"PoDoFo::PdfTextField *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfTextField::SetScrollBarsEnabled",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTextField,0))){
    SWIG_fail_ptr("PdfTextField_SetScrollBarsEnabled",1,SWIGTYPE_p_PoDoFo__PdfTextField);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetScrollBarsEnabled(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTextField_IsScrollBarsEnabled(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::IsScrollBarsEnabled",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::IsScrollBarsEnabled",1,"PoDoFo::PdfTextField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTextField,0))){
    SWIG_fail_ptr("PdfTextField_IsScrollBarsEnabled",1,SWIGTYPE_p_PoDoFo__PdfTextField);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfTextField const *)arg1)->IsScrollBarsEnabled();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTextField_SetCombs(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::SetCombs",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::SetCombs",1,"PoDoFo::PdfTextField *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfTextField::SetCombs",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTextField,0))){
    SWIG_fail_ptr("PdfTextField_SetCombs",1,SWIGTYPE_p_PoDoFo__PdfTextField);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetCombs(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTextField_IsCombs(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::IsCombs",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::IsCombs",1,"PoDoFo::PdfTextField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTextField,0))){
    SWIG_fail_ptr("PdfTextField_IsCombs",1,SWIGTYPE_p_PoDoFo__PdfTextField);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfTextField const *)arg1)->IsCombs();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTextField_SetRichText(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::SetRichText",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::SetRichText",1,"PoDoFo::PdfTextField *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfTextField::SetRichText",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTextField,0))){
    SWIG_fail_ptr("PdfTextField_SetRichText",1,SWIGTYPE_p_PoDoFo__PdfTextField);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetRichText(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTextField_IsRichText(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfTextField::IsRichText",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTextField::IsRichText",1,"PoDoFo::PdfTextField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTextField,0))){
    SWIG_fail_ptr("PdfTextField_IsRichText",1,SWIGTYPE_p_PoDoFo__PdfTextField);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfTextField const *)arg1)->IsRichText();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfTextField(void *obj) {
PoDoFo::PdfTextField *arg1 = (PoDoFo::PdfTextField *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfTextField(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfTextField);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfTextField_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfTextField_methods[]= {
    { "SetText", _wrap_PdfTextField_SetText},
    { "GetText", _wrap_PdfTextField_GetText},
    { "SetMaxLen", _wrap_PdfTextField_SetMaxLen},
    { "GetMaxLen", _wrap_PdfTextField_GetMaxLen},
    { "SetMultiLine", _wrap_PdfTextField_SetMultiLine},
    { "IsMultiLine", _wrap_PdfTextField_IsMultiLine},
    { "SetPasswordField", _wrap_PdfTextField_SetPasswordField},
    { "IsPasswordField", _wrap_PdfTextField_IsPasswordField},
    { "SetFileField", _wrap_PdfTextField_SetFileField},
    { "IsFileField", _wrap_PdfTextField_IsFileField},
    { "SetSpellcheckingEnabled", _wrap_PdfTextField_SetSpellcheckingEnabled},
    { "IsSpellcheckingEnabled", _wrap_PdfTextField_IsSpellcheckingEnabled},
    { "SetScrollBarsEnabled", _wrap_PdfTextField_SetScrollBarsEnabled},
    { "IsScrollBarsEnabled", _wrap_PdfTextField_IsScrollBarsEnabled},
    { "SetCombs", _wrap_PdfTextField_SetCombs},
    { "IsCombs", _wrap_PdfTextField_IsCombs},
    { "SetRichText", _wrap_PdfTextField_SetRichText},
    { "IsRichText", _wrap_PdfTextField_IsRichText},
    {0,0}
};
static swig_lua_method swig_PdfTextField_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfTextField_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfTextField_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfTextField_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfTextField_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfTextField_Sf_SwigStatic = {
    "PdfTextField",
    swig_PdfTextField_Sf_SwigStatic_methods,
    swig_PdfTextField_Sf_SwigStatic_attributes,
    swig_PdfTextField_Sf_SwigStatic_constants,
    swig_PdfTextField_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfTextField_bases[] = {0,0};
static const char *swig_PdfTextField_base_names[] = {"PoDoFo::PdfField *",0};
static swig_lua_class _wrap_class_PdfTextField = { "PdfTextField", "PdfTextField", &SWIGTYPE_p_PoDoFo__PdfTextField,_proxy__wrap_new_PdfTextField, swig_delete_PdfTextField, swig_PdfTextField_methods, swig_PdfTextField_attributes, &swig_PdfTextField_Sf_SwigStatic, swig_PdfTextField_meta, swig_PdfTextField_bases, swig_PdfTextField_base_names };

static int _wrap_new_PdfListField__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = 0 ;
  PoDoFo::PdfListField *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfListField::PdfListField",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfListField::PdfListField",1,"PoDoFo::PdfField const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("new_PdfListField",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = (PoDoFo::PdfListField *)new PoDoFo::PdfListField((PoDoFo::PdfField const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfListField,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfListField(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfField, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfListField__SWIG_4(L);
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfListField'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfListField::PdfListField(PoDoFo::PdfField const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfListField_InsertItem__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfListField *arg1 = (PoDoFo::PdfListField *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  PoDoFo::PdfString *arg3 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfListField::InsertItem",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListField::InsertItem",1,"PoDoFo::PdfListField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfListField::InsertItem",2,"PoDoFo::PdfString const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfListField::InsertItem",3,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfListField,0))){
    SWIG_fail_ptr("PdfListField_InsertItem",1,SWIGTYPE_p_PoDoFo__PdfListField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfListField_InsertItem",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfListField_InsertItem",3,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->InsertItem((PoDoFo::PdfString const &)*arg2,(PoDoFo::PdfString const &)*arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfListField_InsertItem__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfListField *arg1 = (PoDoFo::PdfListField *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfListField::InsertItem",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListField::InsertItem",1,"PoDoFo::PdfListField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfListField::InsertItem",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfListField,0))){
    SWIG_fail_ptr("PdfListField_InsertItem",1,SWIGTYPE_p_PoDoFo__PdfListField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfListField_InsertItem",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->InsertItem((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfListField_InsertItem(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfListField, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfListField_InsertItem__SWIG_1(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfListField, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_PdfListField_InsertItem__SWIG_0(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfListField_InsertItem'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfListField::InsertItem(PoDoFo::PdfString const &,PoDoFo::PdfString const &)\n"
    "    PoDoFo::PdfListField::InsertItem(PoDoFo::PdfString const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfListField_RemoveItem(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfListField *arg1 = (PoDoFo::PdfListField *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfListField::RemoveItem",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListField::RemoveItem",1,"PoDoFo::PdfListField *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfListField::RemoveItem",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfListField,0))){
    SWIG_fail_ptr("PdfListField_RemoveItem",1,SWIGTYPE_p_PoDoFo__PdfListField);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->RemoveItem(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfListField_GetItem(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfListField *arg1 = (PoDoFo::PdfListField *) 0 ;
  int arg2 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfListField::GetItem",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListField::GetItem",1,"PoDoFo::PdfListField const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfListField::GetItem",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfListField,0))){
    SWIG_fail_ptr("PdfListField_GetItem",1,SWIGTYPE_p_PoDoFo__PdfListField);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = ((PoDoFo::PdfListField const *)arg1)->GetItem(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfListField_GetItemDisplayText(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfListField *arg1 = (PoDoFo::PdfListField *) 0 ;
  int arg2 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfListField::GetItemDisplayText",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListField::GetItemDisplayText",1,"PoDoFo::PdfListField const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfListField::GetItemDisplayText",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfListField,0))){
    SWIG_fail_ptr("PdfListField_GetItemDisplayText",1,SWIGTYPE_p_PoDoFo__PdfListField);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = ((PoDoFo::PdfListField const *)arg1)->GetItemDisplayText(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfListField_GetItemCount(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfListField *arg1 = (PoDoFo::PdfListField *) 0 ;
  size_t result;
  
  SWIG_check_num_args("PoDoFo::PdfListField::GetItemCount",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListField::GetItemCount",1,"PoDoFo::PdfListField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfListField,0))){
    SWIG_fail_ptr("PdfListField_GetItemCount",1,SWIGTYPE_p_PoDoFo__PdfListField);
  }
  
  {
    try {
      result = ((PoDoFo::PdfListField const *)arg1)->GetItemCount();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfListField_SetSelectedItem(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfListField *arg1 = (PoDoFo::PdfListField *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfListField::SetSelectedItem",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListField::SetSelectedItem",1,"PoDoFo::PdfListField *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfListField::SetSelectedItem",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfListField,0))){
    SWIG_fail_ptr("PdfListField_SetSelectedItem",1,SWIGTYPE_p_PoDoFo__PdfListField);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetSelectedItem(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfListField_GetSelectedItem(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfListField *arg1 = (PoDoFo::PdfListField *) 0 ;
  int result;
  
  SWIG_check_num_args("PoDoFo::PdfListField::GetSelectedItem",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListField::GetSelectedItem",1,"PoDoFo::PdfListField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfListField,0))){
    SWIG_fail_ptr("PdfListField_GetSelectedItem",1,SWIGTYPE_p_PoDoFo__PdfListField);
  }
  
  {
    try {
      result = (int)((PoDoFo::PdfListField const *)arg1)->GetSelectedItem();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfListField_IsComboBox(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfListField *arg1 = (PoDoFo::PdfListField *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfListField::IsComboBox",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListField::IsComboBox",1,"PoDoFo::PdfListField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfListField,0))){
    SWIG_fail_ptr("PdfListField_IsComboBox",1,SWIGTYPE_p_PoDoFo__PdfListField);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfListField const *)arg1)->IsComboBox();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfListField_SetSpellcheckingEnabled(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfListField *arg1 = (PoDoFo::PdfListField *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfListField::SetSpellcheckingEnabled",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListField::SetSpellcheckingEnabled",1,"PoDoFo::PdfListField *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfListField::SetSpellcheckingEnabled",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfListField,0))){
    SWIG_fail_ptr("PdfListField_SetSpellcheckingEnabled",1,SWIGTYPE_p_PoDoFo__PdfListField);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetSpellcheckingEnabled(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfListField_IsSpellcheckingEnabled(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfListField *arg1 = (PoDoFo::PdfListField *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfListField::IsSpellcheckingEnabled",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListField::IsSpellcheckingEnabled",1,"PoDoFo::PdfListField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfListField,0))){
    SWIG_fail_ptr("PdfListField_IsSpellcheckingEnabled",1,SWIGTYPE_p_PoDoFo__PdfListField);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfListField const *)arg1)->IsSpellcheckingEnabled();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfListField_SetSorted(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfListField *arg1 = (PoDoFo::PdfListField *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfListField::SetSorted",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListField::SetSorted",1,"PoDoFo::PdfListField *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfListField::SetSorted",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfListField,0))){
    SWIG_fail_ptr("PdfListField_SetSorted",1,SWIGTYPE_p_PoDoFo__PdfListField);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetSorted(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfListField_IsSorted(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfListField *arg1 = (PoDoFo::PdfListField *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfListField::IsSorted",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListField::IsSorted",1,"PoDoFo::PdfListField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfListField,0))){
    SWIG_fail_ptr("PdfListField_IsSorted",1,SWIGTYPE_p_PoDoFo__PdfListField);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfListField const *)arg1)->IsSorted();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfListField_SetMultiSelect(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfListField *arg1 = (PoDoFo::PdfListField *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfListField::SetMultiSelect",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListField::SetMultiSelect",1,"PoDoFo::PdfListField *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfListField::SetMultiSelect",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfListField,0))){
    SWIG_fail_ptr("PdfListField_SetMultiSelect",1,SWIGTYPE_p_PoDoFo__PdfListField);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetMultiSelect(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfListField_IsMultiSelect(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfListField *arg1 = (PoDoFo::PdfListField *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfListField::IsMultiSelect",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListField::IsMultiSelect",1,"PoDoFo::PdfListField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfListField,0))){
    SWIG_fail_ptr("PdfListField_IsMultiSelect",1,SWIGTYPE_p_PoDoFo__PdfListField);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfListField const *)arg1)->IsMultiSelect();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfListField_SetCommitOnSelectionChange(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfListField *arg1 = (PoDoFo::PdfListField *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfListField::SetCommitOnSelectionChange",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListField::SetCommitOnSelectionChange",1,"PoDoFo::PdfListField *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfListField::SetCommitOnSelectionChange",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfListField,0))){
    SWIG_fail_ptr("PdfListField_SetCommitOnSelectionChange",1,SWIGTYPE_p_PoDoFo__PdfListField);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetCommitOnSelectionChange(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfListField_IsCommitOnSelectionChange(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfListField *arg1 = (PoDoFo::PdfListField *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfListField::IsCommitOnSelectionChange",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListField::IsCommitOnSelectionChange",1,"PoDoFo::PdfListField const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfListField,0))){
    SWIG_fail_ptr("PdfListField_IsCommitOnSelectionChange",1,SWIGTYPE_p_PoDoFo__PdfListField);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfListField const *)arg1)->IsCommitOnSelectionChange();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfListField(void *obj) {
PoDoFo::PdfListField *arg1 = (PoDoFo::PdfListField *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfListField(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfListField);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfListField_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfListField_methods[]= {
    { "InsertItem", _wrap_PdfListField_InsertItem},
    { "RemoveItem", _wrap_PdfListField_RemoveItem},
    { "GetItem", _wrap_PdfListField_GetItem},
    { "GetItemDisplayText", _wrap_PdfListField_GetItemDisplayText},
    { "GetItemCount", _wrap_PdfListField_GetItemCount},
    { "SetSelectedItem", _wrap_PdfListField_SetSelectedItem},
    { "GetSelectedItem", _wrap_PdfListField_GetSelectedItem},
    { "IsComboBox", _wrap_PdfListField_IsComboBox},
    { "SetSpellcheckingEnabled", _wrap_PdfListField_SetSpellcheckingEnabled},
    { "IsSpellcheckingEnabled", _wrap_PdfListField_IsSpellcheckingEnabled},
    { "SetSorted", _wrap_PdfListField_SetSorted},
    { "IsSorted", _wrap_PdfListField_IsSorted},
    { "SetMultiSelect", _wrap_PdfListField_SetMultiSelect},
    { "IsMultiSelect", _wrap_PdfListField_IsMultiSelect},
    { "SetCommitOnSelectionChange", _wrap_PdfListField_SetCommitOnSelectionChange},
    { "IsCommitOnSelectionChange", _wrap_PdfListField_IsCommitOnSelectionChange},
    {0,0}
};
static swig_lua_method swig_PdfListField_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfListField_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfListField_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfListField_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfListField_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfListField_Sf_SwigStatic = {
    "PdfListField",
    swig_PdfListField_Sf_SwigStatic_methods,
    swig_PdfListField_Sf_SwigStatic_attributes,
    swig_PdfListField_Sf_SwigStatic_constants,
    swig_PdfListField_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfListField_bases[] = {0,0};
static const char *swig_PdfListField_base_names[] = {"PoDoFo::PdfField *",0};
static swig_lua_class _wrap_class_PdfListField = { "PdfListField", "PdfListField", &SWIGTYPE_p_PoDoFo__PdfListField,_proxy__wrap_new_PdfListField, swig_delete_PdfListField, swig_PdfListField_methods, swig_PdfListField_attributes, &swig_PdfListField_Sf_SwigStatic, swig_PdfListField_meta, swig_PdfListField_bases, swig_PdfListField_base_names };

static int _wrap_new_PdfComboBox__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfAcroForm *arg2 = (PoDoFo::PdfAcroForm *) 0 ;
  PoDoFo::PdfComboBox *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfComboBox::PdfComboBox",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfComboBox::PdfComboBox",1,"PoDoFo::PdfAnnotation *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfComboBox::PdfComboBox",2,"PoDoFo::PdfAcroForm *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("new_PdfComboBox",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAcroForm,0))){
    SWIG_fail_ptr("new_PdfComboBox",2,SWIGTYPE_p_PoDoFo__PdfAcroForm);
  }
  
  {
    try {
      result = (PoDoFo::PdfComboBox *)new PoDoFo::PdfComboBox(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfComboBox,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfComboBox__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfAcroForm *arg3 = (PoDoFo::PdfAcroForm *) 0 ;
  PoDoFo::PdfComboBox *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfComboBox::PdfComboBox",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfComboBox::PdfComboBox",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfComboBox::PdfComboBox",2,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfComboBox::PdfComboBox",3,"PoDoFo::PdfAcroForm *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfComboBox",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfComboBox",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfAcroForm,0))){
    SWIG_fail_ptr("new_PdfComboBox",3,SWIGTYPE_p_PoDoFo__PdfAcroForm);
  }
  
  {
    try {
      result = (PoDoFo::PdfComboBox *)new PoDoFo::PdfComboBox(arg1,(PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfComboBox,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfComboBox__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfDocument *arg3 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfComboBox *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfComboBox::PdfComboBox",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfComboBox::PdfComboBox",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfComboBox::PdfComboBox",2,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfComboBox::PdfComboBox",3,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfComboBox",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfComboBox",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfComboBox",3,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfComboBox *)new PoDoFo::PdfComboBox(arg1,(PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfComboBox,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfComboBox__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfStreamedDocument *arg3 = (PoDoFo::PdfStreamedDocument *) 0 ;
  PoDoFo::PdfComboBox *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfComboBox::PdfComboBox",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfComboBox::PdfComboBox",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfComboBox::PdfComboBox",2,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfComboBox::PdfComboBox",3,"PoDoFo::PdfStreamedDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfComboBox",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfComboBox",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,0))){
    SWIG_fail_ptr("new_PdfComboBox",3,SWIGTYPE_p_PoDoFo__PdfStreamedDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfComboBox *)new PoDoFo::PdfComboBox(arg1,(PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfComboBox,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfComboBox__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = 0 ;
  PoDoFo::PdfComboBox *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfComboBox::PdfComboBox",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfComboBox::PdfComboBox",1,"PoDoFo::PdfField const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("new_PdfComboBox",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = (PoDoFo::PdfComboBox *)new PoDoFo::PdfComboBox((PoDoFo::PdfField const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfComboBox,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfComboBox(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfField, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfComboBox__SWIG_4(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAnnotation, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAcroForm, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfComboBox__SWIG_0(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfStreamedDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfComboBox__SWIG_3(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfComboBox__SWIG_2(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAcroForm, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfComboBox__SWIG_1(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfComboBox'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfComboBox::PdfComboBox(PoDoFo::PdfAnnotation *,PoDoFo::PdfAcroForm *)\n"
    "    PoDoFo::PdfComboBox::PdfComboBox(PoDoFo::PdfPage *,PoDoFo::PdfRect const &,PoDoFo::PdfAcroForm *)\n"
    "    PoDoFo::PdfComboBox::PdfComboBox(PoDoFo::PdfPage *,PoDoFo::PdfRect const &,PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfComboBox::PdfComboBox(PoDoFo::PdfPage *,PoDoFo::PdfRect const &,PoDoFo::PdfStreamedDocument *)\n"
    "    PoDoFo::PdfComboBox::PdfComboBox(PoDoFo::PdfField const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfComboBox_SetEditable(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfComboBox *arg1 = (PoDoFo::PdfComboBox *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfComboBox::SetEditable",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfComboBox::SetEditable",1,"PoDoFo::PdfComboBox *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfComboBox::SetEditable",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfComboBox,0))){
    SWIG_fail_ptr("PdfComboBox_SetEditable",1,SWIGTYPE_p_PoDoFo__PdfComboBox);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetEditable(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfComboBox_IsEditable(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfComboBox *arg1 = (PoDoFo::PdfComboBox *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfComboBox::IsEditable",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfComboBox::IsEditable",1,"PoDoFo::PdfComboBox const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfComboBox,0))){
    SWIG_fail_ptr("PdfComboBox_IsEditable",1,SWIGTYPE_p_PoDoFo__PdfComboBox);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfComboBox const *)arg1)->IsEditable();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfComboBox(void *obj) {
PoDoFo::PdfComboBox *arg1 = (PoDoFo::PdfComboBox *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfComboBox(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfComboBox);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfComboBox_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfComboBox_methods[]= {
    { "SetEditable", _wrap_PdfComboBox_SetEditable},
    { "IsEditable", _wrap_PdfComboBox_IsEditable},
    {0,0}
};
static swig_lua_method swig_PdfComboBox_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfComboBox_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfComboBox_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfComboBox_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfComboBox_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfComboBox_Sf_SwigStatic = {
    "PdfComboBox",
    swig_PdfComboBox_Sf_SwigStatic_methods,
    swig_PdfComboBox_Sf_SwigStatic_attributes,
    swig_PdfComboBox_Sf_SwigStatic_constants,
    swig_PdfComboBox_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfComboBox_bases[] = {0,0};
static const char *swig_PdfComboBox_base_names[] = {"PoDoFo::PdfListField *",0};
static swig_lua_class _wrap_class_PdfComboBox = { "PdfComboBox", "PdfComboBox", &SWIGTYPE_p_PoDoFo__PdfComboBox,_proxy__wrap_new_PdfComboBox, swig_delete_PdfComboBox, swig_PdfComboBox_methods, swig_PdfComboBox_attributes, &swig_PdfComboBox_Sf_SwigStatic, swig_PdfComboBox_meta, swig_PdfComboBox_bases, swig_PdfComboBox_base_names };

static int _wrap_new_PdfListBox__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfAcroForm *arg2 = (PoDoFo::PdfAcroForm *) 0 ;
  PoDoFo::PdfListBox *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfListBox::PdfListBox",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListBox::PdfListBox",1,"PoDoFo::PdfAnnotation *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfListBox::PdfListBox",2,"PoDoFo::PdfAcroForm *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("new_PdfListBox",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAcroForm,0))){
    SWIG_fail_ptr("new_PdfListBox",2,SWIGTYPE_p_PoDoFo__PdfAcroForm);
  }
  
  {
    try {
      result = (PoDoFo::PdfListBox *)new PoDoFo::PdfListBox(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfListBox,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfListBox__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfAcroForm *arg3 = (PoDoFo::PdfAcroForm *) 0 ;
  PoDoFo::PdfListBox *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfListBox::PdfListBox",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListBox::PdfListBox",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfListBox::PdfListBox",2,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfListBox::PdfListBox",3,"PoDoFo::PdfAcroForm *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfListBox",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfListBox",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfAcroForm,0))){
    SWIG_fail_ptr("new_PdfListBox",3,SWIGTYPE_p_PoDoFo__PdfAcroForm);
  }
  
  {
    try {
      result = (PoDoFo::PdfListBox *)new PoDoFo::PdfListBox(arg1,(PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfListBox,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfListBox__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfDocument *arg3 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfListBox *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfListBox::PdfListBox",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListBox::PdfListBox",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfListBox::PdfListBox",2,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfListBox::PdfListBox",3,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfListBox",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfListBox",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfListBox",3,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfListBox *)new PoDoFo::PdfListBox(arg1,(PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfListBox,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfListBox__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfStreamedDocument *arg3 = (PoDoFo::PdfStreamedDocument *) 0 ;
  PoDoFo::PdfListBox *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfListBox::PdfListBox",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfListBox::PdfListBox",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfListBox::PdfListBox",2,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfListBox::PdfListBox",3,"PoDoFo::PdfStreamedDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfListBox",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfListBox",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,0))){
    SWIG_fail_ptr("new_PdfListBox",3,SWIGTYPE_p_PoDoFo__PdfStreamedDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfListBox *)new PoDoFo::PdfListBox(arg1,(PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfListBox,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfListBox__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfField *arg1 = 0 ;
  PoDoFo::PdfListBox *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfListBox::PdfListBox",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfListBox::PdfListBox",1,"PoDoFo::PdfField const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfField,0))){
    SWIG_fail_ptr("new_PdfListBox",1,SWIGTYPE_p_PoDoFo__PdfField);
  }
  
  {
    try {
      result = (PoDoFo::PdfListBox *)new PoDoFo::PdfListBox((PoDoFo::PdfField const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfListBox,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfListBox(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfField, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfListBox__SWIG_4(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAnnotation, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAcroForm, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfListBox__SWIG_0(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfStreamedDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfListBox__SWIG_3(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfListBox__SWIG_2(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAcroForm, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfListBox__SWIG_1(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfListBox'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfListBox::PdfListBox(PoDoFo::PdfAnnotation *,PoDoFo::PdfAcroForm *)\n"
    "    PoDoFo::PdfListBox::PdfListBox(PoDoFo::PdfPage *,PoDoFo::PdfRect const &,PoDoFo::PdfAcroForm *)\n"
    "    PoDoFo::PdfListBox::PdfListBox(PoDoFo::PdfPage *,PoDoFo::PdfRect const &,PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfListBox::PdfListBox(PoDoFo::PdfPage *,PoDoFo::PdfRect const &,PoDoFo::PdfStreamedDocument *)\n"
    "    PoDoFo::PdfListBox::PdfListBox(PoDoFo::PdfField const &)\n");
  lua_error(L);return 0;
}


static void swig_delete_PdfListBox(void *obj) {
PoDoFo::PdfListBox *arg1 = (PoDoFo::PdfListBox *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfListBox(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfListBox);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfListBox_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfListBox_methods[]= {
    {0,0}
};
static swig_lua_method swig_PdfListBox_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfListBox_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfListBox_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfListBox_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfListBox_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfListBox_Sf_SwigStatic = {
    "PdfListBox",
    swig_PdfListBox_Sf_SwigStatic_methods,
    swig_PdfListBox_Sf_SwigStatic_attributes,
    swig_PdfListBox_Sf_SwigStatic_constants,
    swig_PdfListBox_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfListBox_bases[] = {0,0};
static const char *swig_PdfListBox_base_names[] = {"PoDoFo::PdfListField *",0};
static swig_lua_class _wrap_class_PdfListBox = { "PdfListBox", "PdfListBox", &SWIGTYPE_p_PoDoFo__PdfListBox,_proxy__wrap_new_PdfListBox, swig_delete_PdfListBox, swig_PdfListBox_methods, swig_PdfListBox_attributes, &swig_PdfListBox_Sf_SwigStatic, swig_PdfListBox_meta, swig_PdfListBox_bases, swig_PdfListBox_base_names };

static int _wrap_new_PdfFileSpec__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  PoDoFo::PdfDocument *arg3 = (PoDoFo::PdfDocument *) 0 ;
  bool arg4 ;
  PoDoFo::PdfFileSpec *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFileSpec::PdfFileSpec",4,4)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",1,"char const *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",2,"bool");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",3,"PoDoFo::PdfDocument *");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",4,"bool");
  arg1 = (char *)lua_tostring(L, 1);
  arg2 = (lua_toboolean(L, 2)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfFileSpec",3,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg4 = (lua_toboolean(L, 4)!=0);
  {
    try {
      result = (PoDoFo::PdfFileSpec *)new PoDoFo::PdfFileSpec((char const *)arg1,arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFileSpec,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFileSpec__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  PoDoFo::PdfDocument *arg3 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfFileSpec *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFileSpec::PdfFileSpec",3,3)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",1,"char const *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",2,"bool");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",3,"PoDoFo::PdfDocument *");
  arg1 = (char *)lua_tostring(L, 1);
  arg2 = (lua_toboolean(L, 2)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfFileSpec",3,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfFileSpec *)new PoDoFo::PdfFileSpec((char const *)arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFileSpec,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFileSpec__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  PoDoFo::PdfVecObjects *arg3 = (PoDoFo::PdfVecObjects *) 0 ;
  bool arg4 ;
  PoDoFo::PdfFileSpec *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFileSpec::PdfFileSpec",4,4)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",1,"char const *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",2,"bool");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",3,"PoDoFo::PdfVecObjects *");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",4,"bool");
  arg1 = (char *)lua_tostring(L, 1);
  arg2 = (lua_toboolean(L, 2)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfFileSpec",3,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  arg4 = (lua_toboolean(L, 4)!=0);
  {
    try {
      result = (PoDoFo::PdfFileSpec *)new PoDoFo::PdfFileSpec((char const *)arg1,arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFileSpec,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFileSpec__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  PoDoFo::PdfVecObjects *arg3 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfFileSpec *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFileSpec::PdfFileSpec",3,3)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",1,"char const *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",2,"bool");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",3,"PoDoFo::PdfVecObjects *");
  arg1 = (char *)lua_tostring(L, 1);
  arg2 = (lua_toboolean(L, 2)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfFileSpec",3,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfFileSpec *)new PoDoFo::PdfFileSpec((char const *)arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFileSpec,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFileSpec__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  ptrdiff_t arg3 ;
  PoDoFo::PdfVecObjects *arg4 = (PoDoFo::PdfVecObjects *) 0 ;
  bool arg5 ;
  ptrdiff_t *argp3 ;
  PoDoFo::PdfFileSpec *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFileSpec::PdfFileSpec",5,5)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",1,"char const *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",2,"unsigned char const *");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",3,"ptrdiff_t");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",4,"PoDoFo::PdfVecObjects *");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",5,"bool");
  arg1 = (char *)lua_tostring(L, 1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_unsigned_char,0))){
    SWIG_fail_ptr("new_PdfFileSpec",2,SWIGTYPE_p_unsigned_char);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_ptrdiff_t,0))){
    SWIG_fail_ptr("new_PdfFileSpec",3,SWIGTYPE_p_ptrdiff_t);
  }
  arg3 = *argp3;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfFileSpec",4,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  arg5 = (lua_toboolean(L, 5)!=0);
  {
    try {
      result = (PoDoFo::PdfFileSpec *)new PoDoFo::PdfFileSpec((char const *)arg1,(unsigned char const *)arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFileSpec,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFileSpec__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  ptrdiff_t arg3 ;
  PoDoFo::PdfVecObjects *arg4 = (PoDoFo::PdfVecObjects *) 0 ;
  ptrdiff_t *argp3 ;
  PoDoFo::PdfFileSpec *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFileSpec::PdfFileSpec",4,4)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",1,"char const *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",2,"unsigned char const *");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",3,"ptrdiff_t");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",4,"PoDoFo::PdfVecObjects *");
  arg1 = (char *)lua_tostring(L, 1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_unsigned_char,0))){
    SWIG_fail_ptr("new_PdfFileSpec",2,SWIGTYPE_p_unsigned_char);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_ptrdiff_t,0))){
    SWIG_fail_ptr("new_PdfFileSpec",3,SWIGTYPE_p_ptrdiff_t);
  }
  arg3 = *argp3;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfFileSpec",4,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfFileSpec *)new PoDoFo::PdfFileSpec((char const *)arg1,(unsigned char const *)arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFileSpec,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFileSpec__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  ptrdiff_t arg3 ;
  PoDoFo::PdfDocument *arg4 = (PoDoFo::PdfDocument *) 0 ;
  bool arg5 ;
  ptrdiff_t *argp3 ;
  PoDoFo::PdfFileSpec *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFileSpec::PdfFileSpec",5,5)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",1,"char const *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",2,"unsigned char const *");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",3,"ptrdiff_t");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",4,"PoDoFo::PdfDocument *");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",5,"bool");
  arg1 = (char *)lua_tostring(L, 1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_unsigned_char,0))){
    SWIG_fail_ptr("new_PdfFileSpec",2,SWIGTYPE_p_unsigned_char);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_ptrdiff_t,0))){
    SWIG_fail_ptr("new_PdfFileSpec",3,SWIGTYPE_p_ptrdiff_t);
  }
  arg3 = *argp3;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfFileSpec",4,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg5 = (lua_toboolean(L, 5)!=0);
  {
    try {
      result = (PoDoFo::PdfFileSpec *)new PoDoFo::PdfFileSpec((char const *)arg1,(unsigned char const *)arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFileSpec,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFileSpec__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  ptrdiff_t arg3 ;
  PoDoFo::PdfDocument *arg4 = (PoDoFo::PdfDocument *) 0 ;
  ptrdiff_t *argp3 ;
  PoDoFo::PdfFileSpec *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFileSpec::PdfFileSpec",4,4)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",1,"char const *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",2,"unsigned char const *");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",3,"ptrdiff_t");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",4,"PoDoFo::PdfDocument *");
  arg1 = (char *)lua_tostring(L, 1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_unsigned_char,0))){
    SWIG_fail_ptr("new_PdfFileSpec",2,SWIGTYPE_p_unsigned_char);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_ptrdiff_t,0))){
    SWIG_fail_ptr("new_PdfFileSpec",3,SWIGTYPE_p_ptrdiff_t);
  }
  arg3 = *argp3;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfFileSpec",4,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfFileSpec *)new PoDoFo::PdfFileSpec((char const *)arg1,(unsigned char const *)arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFileSpec,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFileSpec__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfFileSpec *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFileSpec::PdfFileSpec",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFileSpec::PdfFileSpec",1,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfFileSpec",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfFileSpec *)new PoDoFo::PdfFileSpec(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFileSpec,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFileSpec(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfFileSpec__SWIG_8(L);
    }
  }
  if (argc == 3) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfFileSpec__SWIG_3(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfFileSpec__SWIG_1(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_unsigned_char, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_ptrdiff_t, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_new_PdfFileSpec__SWIG_5(L);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_unsigned_char, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_ptrdiff_t, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_new_PdfFileSpec__SWIG_7(L);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            return _wrap_new_PdfFileSpec__SWIG_0(L);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            return _wrap_new_PdfFileSpec__SWIG_2(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_unsigned_char, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_ptrdiff_t, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              return _wrap_new_PdfFileSpec__SWIG_4(L);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_unsigned_char, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_ptrdiff_t, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              return _wrap_new_PdfFileSpec__SWIG_6(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfFileSpec'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfFileSpec::PdfFileSpec(char const *,bool,PoDoFo::PdfDocument *,bool)\n"
    "    PoDoFo::PdfFileSpec::PdfFileSpec(char const *,bool,PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfFileSpec::PdfFileSpec(char const *,bool,PoDoFo::PdfVecObjects *,bool)\n"
    "    PoDoFo::PdfFileSpec::PdfFileSpec(char const *,bool,PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfFileSpec::PdfFileSpec(char const *,unsigned char const *,ptrdiff_t,PoDoFo::PdfVecObjects *,bool)\n"
    "    PoDoFo::PdfFileSpec::PdfFileSpec(char const *,unsigned char const *,ptrdiff_t,PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfFileSpec::PdfFileSpec(char const *,unsigned char const *,ptrdiff_t,PoDoFo::PdfDocument *,bool)\n"
    "    PoDoFo::PdfFileSpec::PdfFileSpec(char const *,unsigned char const *,ptrdiff_t,PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfFileSpec::PdfFileSpec(PoDoFo::PdfObject *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfFileSpec_GetFilename(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFileSpec *arg1 = (PoDoFo::PdfFileSpec *) 0 ;
  bool arg2 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFileSpec::GetFilename",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFileSpec::GetFilename",1,"PoDoFo::PdfFileSpec const *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfFileSpec::GetFilename",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFileSpec,0))){
    SWIG_fail_ptr("PdfFileSpec_GetFilename",1,SWIGTYPE_p_PoDoFo__PdfFileSpec);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      result = (PoDoFo::PdfString *) &((PoDoFo::PdfFileSpec const *)arg1)->GetFilename(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfFileSpec(void *obj) {
PoDoFo::PdfFileSpec *arg1 = (PoDoFo::PdfFileSpec *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfFileSpec(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfFileSpec);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfFileSpec_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfFileSpec_methods[]= {
    { "GetFilename", _wrap_PdfFileSpec_GetFilename},
    {0,0}
};
static swig_lua_method swig_PdfFileSpec_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfFileSpec_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfFileSpec_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfFileSpec_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfFileSpec_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfFileSpec_Sf_SwigStatic = {
    "PdfFileSpec",
    swig_PdfFileSpec_Sf_SwigStatic_methods,
    swig_PdfFileSpec_Sf_SwigStatic_attributes,
    swig_PdfFileSpec_Sf_SwigStatic_constants,
    swig_PdfFileSpec_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfFileSpec_bases[] = {0,0};
static const char *swig_PdfFileSpec_base_names[] = {"PoDoFo::PdfElement *",0};
static swig_lua_class _wrap_class_PdfFileSpec = { "PdfFileSpec", "PdfFileSpec", &SWIGTYPE_p_PoDoFo__PdfFileSpec,_proxy__wrap_new_PdfFileSpec, swig_delete_PdfFileSpec, swig_PdfFileSpec_methods, swig_PdfFileSpec_attributes, &swig_PdfFileSpec_Sf_SwigStatic, swig_PdfFileSpec_meta, swig_PdfFileSpec_bases, swig_PdfFileSpec_base_names };

static int _wrap_new_PdfFont__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PdfFontMetrics *arg1 = (PdfFontMetrics *) 0 ;
  PoDoFo::PdfEncoding *arg2 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PoDoFo::PdfVecObjects *arg3 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFont::PdfFont",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::PdfFont",1,"PdfFontMetrics *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfFont::PdfFont",2,"PoDoFo::PdfEncoding const *const");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfFont::PdfFont",3,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PdfFontMetrics,0))){
    SWIG_fail_ptr("new_PdfFont",1,SWIGTYPE_p_PdfFontMetrics);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("new_PdfFont",2,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfFont",3,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfFont *)new PoDoFo::PdfFont(arg1,(PoDoFo::PdfEncoding const *)arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFont__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PdfFontMetrics *arg1 = (PdfFontMetrics *) 0 ;
  PoDoFo::PdfEncoding *arg2 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PoDoFo::PdfObject *arg3 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFont::PdfFont",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::PdfFont",1,"PdfFontMetrics *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfFont::PdfFont",2,"PoDoFo::PdfEncoding const *const");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfFont::PdfFont",3,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PdfFontMetrics,0))){
    SWIG_fail_ptr("new_PdfFont",1,SWIGTYPE_p_PdfFontMetrics);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("new_PdfFont",2,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfFont",3,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfFont *)new PoDoFo::PdfFont(arg1,(PoDoFo::PdfEncoding const *)arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFont(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PdfFontMetrics, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfFont__SWIG_0(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PdfFontMetrics, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfFont__SWIG_1(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfFont'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfFont::PdfFont(PdfFontMetrics *,PoDoFo::PdfEncoding const *const,PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfFont::PdfFont(PdfFontMetrics *,PoDoFo::PdfEncoding const *const,PoDoFo::PdfObject *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfFont_SetFontSize(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  float arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfFont::SetFontSize",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::SetFontSize",1,"PoDoFo::PdfFont *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfFont::SetFontSize",2,"float");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_SetFontSize",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  arg2 = (float)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetFontSize(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_GetFontSize(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  float result;
  
  SWIG_check_num_args("PoDoFo::PdfFont::GetFontSize",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::GetFontSize",1,"PoDoFo::PdfFont const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_GetFontSize",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      result = (float)((PoDoFo::PdfFont const *)arg1)->GetFontSize();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_SetFontScale(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  float arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfFont::SetFontScale",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::SetFontScale",1,"PoDoFo::PdfFont *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfFont::SetFontScale",2,"float");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_SetFontScale",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  arg2 = (float)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetFontScale(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_GetFontScale(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  float result;
  
  SWIG_check_num_args("PoDoFo::PdfFont::GetFontScale",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::GetFontScale",1,"PoDoFo::PdfFont const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_GetFontScale",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      result = (float)((PoDoFo::PdfFont const *)arg1)->GetFontScale();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_SetFontCharSpace(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  float arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfFont::SetFontCharSpace",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::SetFontCharSpace",1,"PoDoFo::PdfFont *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfFont::SetFontCharSpace",2,"float");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_SetFontCharSpace",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  arg2 = (float)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetFontCharSpace(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_GetFontCharSpace(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  float result;
  
  SWIG_check_num_args("PoDoFo::PdfFont::GetFontCharSpace",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::GetFontCharSpace",1,"PoDoFo::PdfFont const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_GetFontCharSpace",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      result = (float)((PoDoFo::PdfFont const *)arg1)->GetFontCharSpace();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_SetWordSpace(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  float arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfFont::SetWordSpace",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::SetWordSpace",1,"PoDoFo::PdfFont *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfFont::SetWordSpace",2,"float");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_SetWordSpace",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  arg2 = (float)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetWordSpace(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_GetWordSpace(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  float result;
  
  SWIG_check_num_args("PoDoFo::PdfFont::GetWordSpace",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::GetWordSpace",1,"PoDoFo::PdfFont const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_GetWordSpace",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      result = (float)((PoDoFo::PdfFont const *)arg1)->GetWordSpace();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_SetUnderlined(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfFont::SetUnderlined",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::SetUnderlined",1,"PoDoFo::PdfFont *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfFont::SetUnderlined",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_SetUnderlined",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetUnderlined(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_IsUnderlined(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfFont::IsUnderlined",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::IsUnderlined",1,"PoDoFo::PdfFont const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_IsUnderlined",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfFont const *)arg1)->IsUnderlined();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_IsBold(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfFont::IsBold",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::IsBold",1,"PoDoFo::PdfFont const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_IsBold",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfFont const *)arg1)->IsBold();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_IsItalic(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfFont::IsItalic",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::IsItalic",1,"PoDoFo::PdfFont const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_IsItalic",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfFont const *)arg1)->IsItalic();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_SetStrikeOut(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfFont::SetStrikeOut",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::SetStrikeOut",1,"PoDoFo::PdfFont *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfFont::SetStrikeOut",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_SetStrikeOut",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetStrikeOut(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_IsStrikeOut(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfFont::IsStrikeOut",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::IsStrikeOut",1,"PoDoFo::PdfFont const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_IsStrikeOut",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfFont const *)arg1)->IsStrikeOut();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_GetIdentifier(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  PoDoFo::PdfName *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFont::GetIdentifier",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::GetIdentifier",1,"PoDoFo::PdfFont const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_GetIdentifier",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      result = (PoDoFo::PdfName *) &((PoDoFo::PdfFont const *)arg1)->GetIdentifier();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfName,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_GetEncoding(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  PoDoFo::PdfEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFont::GetEncoding",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::GetEncoding",1,"PoDoFo::PdfFont const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_GetEncoding",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      result = (PoDoFo::PdfEncoding *)((PoDoFo::PdfFont const *)arg1)->GetEncoding();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfEncoding,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_GetFontMetrics(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  PdfFontMetrics *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFont::GetFontMetrics",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::GetFontMetrics",1,"PoDoFo::PdfFont const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_GetFontMetrics",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      result = (PdfFontMetrics *)((PoDoFo::PdfFont const *)arg1)->GetFontMetrics();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PdfFontMetrics,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_GetFontMetrics2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  PdfFontMetrics *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFont::GetFontMetrics2",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::GetFontMetrics2",1,"PoDoFo::PdfFont *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_GetFontMetrics2",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      result = (PdfFontMetrics *)(arg1)->GetFontMetrics2();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PdfFontMetrics,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_WriteStringToStream(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  PdfStream *arg3 = (PdfStream *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFont::WriteStringToStream",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::WriteStringToStream",1,"PoDoFo::PdfFont *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfFont::WriteStringToStream",2,"PoDoFo::PdfString const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfFont::WriteStringToStream",3,"PdfStream *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_WriteStringToStream",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfFont_WriteStringToStream",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PdfStream,0))){
    SWIG_fail_ptr("PdfFont_WriteStringToStream",3,SWIGTYPE_p_PdfStream);
  }
  
  {
    try {
      (arg1)->WriteStringToStream((PoDoFo::PdfString const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_EmbedFont(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFont::EmbedFont",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::EmbedFont",1,"PoDoFo::PdfFont *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_EmbedFont",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      (arg1)->EmbedFont();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_AddUsedSubsettingGlyphs(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  long arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfFont::AddUsedSubsettingGlyphs",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::AddUsedSubsettingGlyphs",1,"PoDoFo::PdfFont *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfFont::AddUsedSubsettingGlyphs",2,"PoDoFo::PdfString const &");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfFont::AddUsedSubsettingGlyphs",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_AddUsedSubsettingGlyphs",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfFont_AddUsedSubsettingGlyphs",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  {
    try {
      (arg1)->AddUsedSubsettingGlyphs((PoDoFo::PdfString const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_AddUsedGlyphname(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFont::AddUsedGlyphname",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::AddUsedGlyphname",1,"PoDoFo::PdfFont *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfFont::AddUsedGlyphname",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_AddUsedGlyphname",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  {
    try {
      (arg1)->AddUsedGlyphname((char const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_EmbedSubsetFont(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFont::EmbedSubsetFont",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::EmbedSubsetFont",1,"PoDoFo::PdfFont *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_EmbedSubsetFont",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      (arg1)->EmbedSubsetFont();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFont_IsSubsetting(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfFont::IsSubsetting",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFont::IsSubsetting",1,"PoDoFo::PdfFont const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFont_IsSubsetting",1,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfFont const *)arg1)->IsSubsetting();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfFont(void *obj) {
PoDoFo::PdfFont *arg1 = (PoDoFo::PdfFont *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfFont(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfFont);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfFont_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfFont_methods[]= {
    { "SetFontSize", _wrap_PdfFont_SetFontSize},
    { "GetFontSize", _wrap_PdfFont_GetFontSize},
    { "SetFontScale", _wrap_PdfFont_SetFontScale},
    { "GetFontScale", _wrap_PdfFont_GetFontScale},
    { "SetFontCharSpace", _wrap_PdfFont_SetFontCharSpace},
    { "GetFontCharSpace", _wrap_PdfFont_GetFontCharSpace},
    { "SetWordSpace", _wrap_PdfFont_SetWordSpace},
    { "GetWordSpace", _wrap_PdfFont_GetWordSpace},
    { "SetUnderlined", _wrap_PdfFont_SetUnderlined},
    { "IsUnderlined", _wrap_PdfFont_IsUnderlined},
    { "IsBold", _wrap_PdfFont_IsBold},
    { "IsItalic", _wrap_PdfFont_IsItalic},
    { "SetStrikeOut", _wrap_PdfFont_SetStrikeOut},
    { "IsStrikeOut", _wrap_PdfFont_IsStrikeOut},
    { "GetIdentifier", _wrap_PdfFont_GetIdentifier},
    { "GetEncoding", _wrap_PdfFont_GetEncoding},
    { "GetFontMetrics", _wrap_PdfFont_GetFontMetrics},
    { "GetFontMetrics2", _wrap_PdfFont_GetFontMetrics2},
    { "WriteStringToStream", _wrap_PdfFont_WriteStringToStream},
    { "EmbedFont", _wrap_PdfFont_EmbedFont},
    { "AddUsedSubsettingGlyphs", _wrap_PdfFont_AddUsedSubsettingGlyphs},
    { "AddUsedGlyphname", _wrap_PdfFont_AddUsedGlyphname},
    { "EmbedSubsetFont", _wrap_PdfFont_EmbedSubsetFont},
    { "IsSubsetting", _wrap_PdfFont_IsSubsetting},
    {0,0}
};
static swig_lua_method swig_PdfFont_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfFont_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfFont_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfFont_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfFont_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfFont_Sf_SwigStatic = {
    "PdfFont",
    swig_PdfFont_Sf_SwigStatic_methods,
    swig_PdfFont_Sf_SwigStatic_attributes,
    swig_PdfFont_Sf_SwigStatic_constants,
    swig_PdfFont_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfFont_bases[] = {0,0};
static const char *swig_PdfFont_base_names[] = {"PoDoFo::PdfElement *",0};
static swig_lua_class _wrap_class_PdfFont = { "PdfFont", "PdfFont", &SWIGTYPE_p_PoDoFo__PdfFont,_proxy__wrap_new_PdfFont, swig_delete_PdfFont, swig_PdfFont_methods, swig_PdfFont_attributes, &swig_PdfFont_Sf_SwigStatic, swig_PdfFont_meta, swig_PdfFont_bases, swig_PdfFont_base_names };

static int _wrap_new_PdfFontCID__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PdfFontMetrics *arg1 = (PdfFontMetrics *) 0 ;
  PoDoFo::PdfEncoding *arg2 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PoDoFo::PdfVecObjects *arg3 = (PoDoFo::PdfVecObjects *) 0 ;
  bool arg4 ;
  bool arg5 ;
  PoDoFo::PdfFontCID *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCID::PdfFontCID",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCID::PdfFontCID",1,"PdfFontMetrics *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfFontCID::PdfFontCID",2,"PoDoFo::PdfEncoding const *const");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfFontCID::PdfFontCID",3,"PoDoFo::PdfVecObjects *");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfFontCID::PdfFontCID",4,"bool");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfFontCID::PdfFontCID",5,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PdfFontMetrics,0))){
    SWIG_fail_ptr("new_PdfFontCID",1,SWIGTYPE_p_PdfFontMetrics);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("new_PdfFontCID",2,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfFontCID",3,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  arg4 = (lua_toboolean(L, 4)!=0);
  arg5 = (lua_toboolean(L, 5)!=0);
  {
    try {
      result = (PoDoFo::PdfFontCID *)new PoDoFo::PdfFontCID(arg1,(PoDoFo::PdfEncoding const *)arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFontCID,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFontCID__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PdfFontMetrics *arg1 = (PdfFontMetrics *) 0 ;
  PoDoFo::PdfEncoding *arg2 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PoDoFo::PdfObject *arg3 = (PoDoFo::PdfObject *) 0 ;
  bool arg4 ;
  PoDoFo::PdfFontCID *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCID::PdfFontCID",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCID::PdfFontCID",1,"PdfFontMetrics *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfFontCID::PdfFontCID",2,"PoDoFo::PdfEncoding const *const");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfFontCID::PdfFontCID",3,"PoDoFo::PdfObject *");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfFontCID::PdfFontCID",4,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PdfFontMetrics,0))){
    SWIG_fail_ptr("new_PdfFontCID",1,SWIGTYPE_p_PdfFontMetrics);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("new_PdfFontCID",2,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfFontCID",3,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  arg4 = (lua_toboolean(L, 4)!=0);
  {
    try {
      result = (PoDoFo::PdfFontCID *)new PoDoFo::PdfFontCID(arg1,(PoDoFo::PdfEncoding const *)arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFontCID,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFontCID(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PdfFontMetrics, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            return _wrap_new_PdfFontCID__SWIG_1(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PdfFontMetrics, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              return _wrap_new_PdfFontCID__SWIG_0(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfFontCID'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfFontCID::PdfFontCID(PdfFontMetrics *,PoDoFo::PdfEncoding const *const,PoDoFo::PdfVecObjects *,bool,bool)\n"
    "    PoDoFo::PdfFontCID::PdfFontCID(PdfFontMetrics *,PoDoFo::PdfEncoding const *const,PoDoFo::PdfObject *,bool)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfFontCID_EmbedFont(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontCID *arg1 = (PoDoFo::PdfFontCID *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCID::EmbedFont",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCID::EmbedFont",1,"PoDoFo::PdfFontCID *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontCID,0))){
    SWIG_fail_ptr("PdfFontCID_EmbedFont",1,SWIGTYPE_p_PoDoFo__PdfFontCID);
  }
  
  {
    try {
      (arg1)->EmbedFont();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontCID_EmbedSubsetFont(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontCID *arg1 = (PoDoFo::PdfFontCID *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCID::EmbedSubsetFont",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCID::EmbedSubsetFont",1,"PoDoFo::PdfFontCID *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontCID,0))){
    SWIG_fail_ptr("PdfFontCID_EmbedSubsetFont",1,SWIGTYPE_p_PoDoFo__PdfFontCID);
  }
  
  {
    try {
      (arg1)->EmbedSubsetFont();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontCID_AddUsedSubsettingGlyphs(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontCID *arg1 = (PoDoFo::PdfFontCID *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  long arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCID::AddUsedSubsettingGlyphs",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCID::AddUsedSubsettingGlyphs",1,"PoDoFo::PdfFontCID *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfFontCID::AddUsedSubsettingGlyphs",2,"PoDoFo::PdfString const &");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfFontCID::AddUsedSubsettingGlyphs",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontCID,0))){
    SWIG_fail_ptr("PdfFontCID_AddUsedSubsettingGlyphs",1,SWIGTYPE_p_PoDoFo__PdfFontCID);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfFontCID_AddUsedSubsettingGlyphs",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  {
    try {
      (arg1)->AddUsedSubsettingGlyphs((PoDoFo::PdfString const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfFontCID(void *obj) {
PoDoFo::PdfFontCID *arg1 = (PoDoFo::PdfFontCID *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfFontCID(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfFontCID);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfFontCID_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfFontCID_methods[]= {
    { "EmbedFont", _wrap_PdfFontCID_EmbedFont},
    { "EmbedSubsetFont", _wrap_PdfFontCID_EmbedSubsetFont},
    { "AddUsedSubsettingGlyphs", _wrap_PdfFontCID_AddUsedSubsettingGlyphs},
    {0,0}
};
static swig_lua_method swig_PdfFontCID_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfFontCID_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfFontCID_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfFontCID_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfFontCID_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfFontCID_Sf_SwigStatic = {
    "PdfFontCID",
    swig_PdfFontCID_Sf_SwigStatic_methods,
    swig_PdfFontCID_Sf_SwigStatic_attributes,
    swig_PdfFontCID_Sf_SwigStatic_constants,
    swig_PdfFontCID_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfFontCID_bases[] = {0,0};
static const char *swig_PdfFontCID_base_names[] = {"PoDoFo::PdfFont *",0};
static swig_lua_class _wrap_class_PdfFontCID = { "PdfFontCID", "PdfFontCID", &SWIGTYPE_p_PoDoFo__PdfFontCID,_proxy__wrap_new_PdfFontCID, swig_delete_PdfFontCID, swig_PdfFontCID_methods, swig_PdfFontCID_attributes, &swig_PdfFontCID_Sf_SwigStatic, swig_PdfFontCID_meta, swig_PdfFontCID_bases, swig_PdfFontCID_base_names };

static int _wrap_new_TFontCacheElement__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TFontCacheElement *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::TFontCacheElement::TFontCacheElement",0,0)
  {
    try {
      result = (PoDoFo::TFontCacheElement *)new PoDoFo::TFontCacheElement();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__TFontCacheElement,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_TFontCacheElement__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  bool arg2 ;
  bool arg3 ;
  bool arg4 ;
  PoDoFo::PdfEncoding *arg5 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PoDoFo::TFontCacheElement *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::TFontCacheElement::TFontCacheElement",5,5)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::TFontCacheElement::TFontCacheElement",1,"char const *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::TFontCacheElement::TFontCacheElement",2,"bool");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::TFontCacheElement::TFontCacheElement",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::TFontCacheElement::TFontCacheElement",4,"bool");
  if(!SWIG_isptrtype(L,5)) SWIG_fail_arg("PoDoFo::TFontCacheElement::TFontCacheElement",5,"PoDoFo::PdfEncoding const *const");
  arg1 = (char *)lua_tostring(L, 1);
  arg2 = (lua_toboolean(L, 2)!=0);
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&arg5,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("new_TFontCacheElement",5,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  {
    try {
      result = (PoDoFo::TFontCacheElement *)new PoDoFo::TFontCacheElement((char const *)arg1,arg2,arg3,arg4,(PoDoFo::PdfEncoding const *)arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__TFontCacheElement,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_TFontCacheElement__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TFontCacheElement *arg1 = 0 ;
  PoDoFo::TFontCacheElement *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::TFontCacheElement::TFontCacheElement",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::TFontCacheElement::TFontCacheElement",1,"PoDoFo::TFontCacheElement const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TFontCacheElement,0))){
    SWIG_fail_ptr("new_TFontCacheElement",1,SWIGTYPE_p_PoDoFo__TFontCacheElement);
  }
  
  {
    try {
      result = (PoDoFo::TFontCacheElement *)new PoDoFo::TFontCacheElement((PoDoFo::TFontCacheElement const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__TFontCacheElement,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_TFontCacheElement(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 0) {
    return _wrap_new_TFontCacheElement__SWIG_0(L);
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__TFontCacheElement, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_TFontCacheElement__SWIG_2(L);
    }
  }
  if (argc == 5) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              void *ptr;
              if (SWIG_isptrtype(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              return _wrap_new_TFontCacheElement__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_TFontCacheElement'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::TFontCacheElement::TFontCacheElement()\n"
    "    PoDoFo::TFontCacheElement::TFontCacheElement(char const *,bool,bool,bool,PoDoFo::PdfEncoding const *const)\n"
    "    PoDoFo::TFontCacheElement::TFontCacheElement(PoDoFo::TFontCacheElement const &)\n");
  lua_error(L);return 0;
}


static int _wrap_TFontCacheElement___lt(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TFontCacheElement *arg1 = (PoDoFo::TFontCacheElement *) 0 ;
  PoDoFo::TFontCacheElement *arg2 = 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::TFontCacheElement::operator <",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::TFontCacheElement::operator <",1,"PoDoFo::TFontCacheElement const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::TFontCacheElement::operator <",2,"PoDoFo::TFontCacheElement const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TFontCacheElement,0))){
    SWIG_fail_ptr("TFontCacheElement___lt",1,SWIGTYPE_p_PoDoFo__TFontCacheElement);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__TFontCacheElement,0))){
    SWIG_fail_ptr("TFontCacheElement___lt",2,SWIGTYPE_p_PoDoFo__TFontCacheElement);
  }
  
  {
    try {
      result = (bool)((PoDoFo::TFontCacheElement const *)arg1)->operator <((PoDoFo::TFontCacheElement const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TFontCacheElement___call(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TFontCacheElement *arg1 = (PoDoFo::TFontCacheElement *) 0 ;
  PoDoFo::TFontCacheElement *arg2 = 0 ;
  PoDoFo::TFontCacheElement *arg3 = 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::TFontCacheElement::operator ()",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::TFontCacheElement::operator ()",1,"PoDoFo::TFontCacheElement const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::TFontCacheElement::operator ()",2,"PoDoFo::TFontCacheElement const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::TFontCacheElement::operator ()",3,"PoDoFo::TFontCacheElement const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TFontCacheElement,0))){
    SWIG_fail_ptr("TFontCacheElement___call",1,SWIGTYPE_p_PoDoFo__TFontCacheElement);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__TFontCacheElement,0))){
    SWIG_fail_ptr("TFontCacheElement___call",2,SWIGTYPE_p_PoDoFo__TFontCacheElement);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__TFontCacheElement,0))){
    SWIG_fail_ptr("TFontCacheElement___call",3,SWIGTYPE_p_PoDoFo__TFontCacheElement);
  }
  
  {
    try {
      result = (bool)((PoDoFo::TFontCacheElement const *)arg1)->operator ()((PoDoFo::TFontCacheElement const &)*arg2,(PoDoFo::TFontCacheElement const &)*arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TFontCacheElement_m_pFont_set(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TFontCacheElement *arg1 = (PoDoFo::TFontCacheElement *) 0 ;
  PoDoFo::PdfFont *arg2 = (PoDoFo::PdfFont *) 0 ;
  
  SWIG_check_num_args("PoDoFo::TFontCacheElement::m_pFont",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::TFontCacheElement::m_pFont",1,"PoDoFo::TFontCacheElement *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::TFontCacheElement::m_pFont",2,"PoDoFo::PdfFont *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TFontCacheElement,0))){
    SWIG_fail_ptr("TFontCacheElement_m_pFont_set",1,SWIGTYPE_p_PoDoFo__TFontCacheElement);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfFont,SWIG_POINTER_DISOWN))){
    SWIG_fail_ptr("TFontCacheElement_m_pFont_set",2,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  if (arg1) (arg1)->m_pFont = arg2;
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TFontCacheElement_m_pFont_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TFontCacheElement *arg1 = (PoDoFo::TFontCacheElement *) 0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::TFontCacheElement::m_pFont",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::TFontCacheElement::m_pFont",1,"PoDoFo::TFontCacheElement *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TFontCacheElement,0))){
    SWIG_fail_ptr("TFontCacheElement_m_pFont_get",1,SWIGTYPE_p_PoDoFo__TFontCacheElement);
  }
  
  result = (PoDoFo::PdfFont *) ((arg1)->m_pFont);
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TFontCacheElement_m_pEncoding_set(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TFontCacheElement *arg1 = (PoDoFo::TFontCacheElement *) 0 ;
  PoDoFo::PdfEncoding *arg2 = (PoDoFo::PdfEncoding *) 0 ;
  
  SWIG_check_num_args("PoDoFo::TFontCacheElement::m_pEncoding",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::TFontCacheElement::m_pEncoding",1,"PoDoFo::TFontCacheElement *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::TFontCacheElement::m_pEncoding",2,"PoDoFo::PdfEncoding const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TFontCacheElement,0))){
    SWIG_fail_ptr("TFontCacheElement_m_pEncoding_set",1,SWIGTYPE_p_PoDoFo__TFontCacheElement);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfEncoding,SWIG_POINTER_DISOWN))){
    SWIG_fail_ptr("TFontCacheElement_m_pEncoding_set",2,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  if (arg1) (arg1)->m_pEncoding = (PoDoFo::PdfEncoding const *)arg2;
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TFontCacheElement_m_pEncoding_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TFontCacheElement *arg1 = (PoDoFo::TFontCacheElement *) 0 ;
  PoDoFo::PdfEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::TFontCacheElement::m_pEncoding",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::TFontCacheElement::m_pEncoding",1,"PoDoFo::TFontCacheElement *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TFontCacheElement,0))){
    SWIG_fail_ptr("TFontCacheElement_m_pEncoding_get",1,SWIGTYPE_p_PoDoFo__TFontCacheElement);
  }
  
  result = (PoDoFo::PdfEncoding *) ((arg1)->m_pEncoding);
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfEncoding,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TFontCacheElement_m_bBold_set(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TFontCacheElement *arg1 = (PoDoFo::TFontCacheElement *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::TFontCacheElement::m_bBold",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::TFontCacheElement::m_bBold",1,"PoDoFo::TFontCacheElement *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::TFontCacheElement::m_bBold",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TFontCacheElement,0))){
    SWIG_fail_ptr("TFontCacheElement_m_bBold_set",1,SWIGTYPE_p_PoDoFo__TFontCacheElement);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  if (arg1) (arg1)->m_bBold = arg2;
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TFontCacheElement_m_bBold_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TFontCacheElement *arg1 = (PoDoFo::TFontCacheElement *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::TFontCacheElement::m_bBold",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::TFontCacheElement::m_bBold",1,"PoDoFo::TFontCacheElement *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TFontCacheElement,0))){
    SWIG_fail_ptr("TFontCacheElement_m_bBold_get",1,SWIGTYPE_p_PoDoFo__TFontCacheElement);
  }
  
  result = (bool) ((arg1)->m_bBold);
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TFontCacheElement_m_bItalic_set(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TFontCacheElement *arg1 = (PoDoFo::TFontCacheElement *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::TFontCacheElement::m_bItalic",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::TFontCacheElement::m_bItalic",1,"PoDoFo::TFontCacheElement *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::TFontCacheElement::m_bItalic",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TFontCacheElement,0))){
    SWIG_fail_ptr("TFontCacheElement_m_bItalic_set",1,SWIGTYPE_p_PoDoFo__TFontCacheElement);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  if (arg1) (arg1)->m_bItalic = arg2;
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TFontCacheElement_m_bItalic_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TFontCacheElement *arg1 = (PoDoFo::TFontCacheElement *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::TFontCacheElement::m_bItalic",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::TFontCacheElement::m_bItalic",1,"PoDoFo::TFontCacheElement *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TFontCacheElement,0))){
    SWIG_fail_ptr("TFontCacheElement_m_bItalic_get",1,SWIGTYPE_p_PoDoFo__TFontCacheElement);
  }
  
  result = (bool) ((arg1)->m_bItalic);
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TFontCacheElement_m_sFontName_set(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TFontCacheElement *arg1 = (PoDoFo::TFontCacheElement *) 0 ;
  PoDoFo::PdfString *arg2 = (PoDoFo::PdfString *) 0 ;
  
  SWIG_check_num_args("PoDoFo::TFontCacheElement::m_sFontName",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::TFontCacheElement::m_sFontName",1,"PoDoFo::TFontCacheElement *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::TFontCacheElement::m_sFontName",2,"PoDoFo::PdfString *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TFontCacheElement,0))){
    SWIG_fail_ptr("TFontCacheElement_m_sFontName_set",1,SWIGTYPE_p_PoDoFo__TFontCacheElement);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("TFontCacheElement_m_sFontName_set",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  if (arg1) (arg1)->m_sFontName = *arg2;
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TFontCacheElement_m_sFontName_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TFontCacheElement *arg1 = (PoDoFo::TFontCacheElement *) 0 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::TFontCacheElement::m_sFontName",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::TFontCacheElement::m_sFontName",1,"PoDoFo::TFontCacheElement *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TFontCacheElement,0))){
    SWIG_fail_ptr("TFontCacheElement_m_sFontName_get",1,SWIGTYPE_p_PoDoFo__TFontCacheElement);
  }
  
  result = (PoDoFo::PdfString *)& ((arg1)->m_sFontName);
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TFontCacheElement_m_bIsSymbolCharset_set(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TFontCacheElement *arg1 = (PoDoFo::TFontCacheElement *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::TFontCacheElement::m_bIsSymbolCharset",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::TFontCacheElement::m_bIsSymbolCharset",1,"PoDoFo::TFontCacheElement *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::TFontCacheElement::m_bIsSymbolCharset",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TFontCacheElement,0))){
    SWIG_fail_ptr("TFontCacheElement_m_bIsSymbolCharset_set",1,SWIGTYPE_p_PoDoFo__TFontCacheElement);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  if (arg1) (arg1)->m_bIsSymbolCharset = arg2;
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TFontCacheElement_m_bIsSymbolCharset_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TFontCacheElement *arg1 = (PoDoFo::TFontCacheElement *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::TFontCacheElement::m_bIsSymbolCharset",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::TFontCacheElement::m_bIsSymbolCharset",1,"PoDoFo::TFontCacheElement *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TFontCacheElement,0))){
    SWIG_fail_ptr("TFontCacheElement_m_bIsSymbolCharset_get",1,SWIGTYPE_p_PoDoFo__TFontCacheElement);
  }
  
  result = (bool) ((arg1)->m_bIsSymbolCharset);
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_TFontCacheElement(void *obj) {
PoDoFo::TFontCacheElement *arg1 = (PoDoFo::TFontCacheElement *) obj;
delete arg1;
}
static int _proxy__wrap_new_TFontCacheElement(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_TFontCacheElement);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_TFontCacheElement_attributes[] = {
    { "m_pFont", _wrap_TFontCacheElement_m_pFont_get, _wrap_TFontCacheElement_m_pFont_set },
    { "m_pEncoding", _wrap_TFontCacheElement_m_pEncoding_get, _wrap_TFontCacheElement_m_pEncoding_set },
    { "m_bBold", _wrap_TFontCacheElement_m_bBold_get, _wrap_TFontCacheElement_m_bBold_set },
    { "m_bItalic", _wrap_TFontCacheElement_m_bItalic_get, _wrap_TFontCacheElement_m_bItalic_set },
    { "m_sFontName", _wrap_TFontCacheElement_m_sFontName_get, _wrap_TFontCacheElement_m_sFontName_set },
    { "m_bIsSymbolCharset", _wrap_TFontCacheElement_m_bIsSymbolCharset_get, _wrap_TFontCacheElement_m_bIsSymbolCharset_set },
    {0,0,0}
};
static swig_lua_method swig_TFontCacheElement_methods[]= {
    { "__lt", _wrap_TFontCacheElement___lt},
    { "__call", _wrap_TFontCacheElement___call},
    {0,0}
};
static swig_lua_method swig_TFontCacheElement_meta[] = {
    { "__lt", _wrap_TFontCacheElement___lt},
    { "__call", _wrap_TFontCacheElement___call},
    {0,0}
};

static swig_lua_attribute swig_TFontCacheElement_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_TFontCacheElement_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_TFontCacheElement_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_TFontCacheElement_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_TFontCacheElement_Sf_SwigStatic = {
    "TFontCacheElement",
    swig_TFontCacheElement_Sf_SwigStatic_methods,
    swig_TFontCacheElement_Sf_SwigStatic_attributes,
    swig_TFontCacheElement_Sf_SwigStatic_constants,
    swig_TFontCacheElement_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_TFontCacheElement_bases[] = {0};
static const char *swig_TFontCacheElement_base_names[] = {0};
static swig_lua_class _wrap_class_TFontCacheElement = { "TFontCacheElement", "TFontCacheElement", &SWIGTYPE_p_PoDoFo__TFontCacheElement,_proxy__wrap_new_TFontCacheElement, swig_delete_TFontCacheElement, swig_TFontCacheElement_methods, swig_TFontCacheElement_attributes, &swig_TFontCacheElement_Sf_SwigStatic, swig_TFontCacheElement_meta, swig_TFontCacheElement_bases, swig_TFontCacheElement_base_names };

static int _wrap_new_PdfFontCache__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfVecObjects *arg1 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfFontCache *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCache::PdfFontCache",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCache::PdfFontCache",1,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfFontCache",1,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfFontCache *)new PoDoFo::PdfFontCache(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFontCache,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFontCache__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontConfigWrapper *arg1 = 0 ;
  PoDoFo::PdfVecObjects *arg2 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfFontCache *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCache::PdfFontCache",2,2)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCache::PdfFontCache",1,"PoDoFo::PdfFontConfigWrapper const &");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfFontCache::PdfFontCache",2,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontConfigWrapper,0))){
    SWIG_fail_ptr("new_PdfFontCache",1,SWIGTYPE_p_PoDoFo__PdfFontConfigWrapper);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfFontCache",2,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfFontCache *)new PoDoFo::PdfFontCache((PoDoFo::PdfFontConfigWrapper const &)*arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFontCache,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFontCache(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfFontCache__SWIG_0(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfFontConfigWrapper, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfFontCache__SWIG_1(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfFontCache'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfFontCache::PdfFontCache(PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfFontCache::PdfFontCache(PoDoFo::PdfFontConfigWrapper const &,PoDoFo::PdfVecObjects *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfFontCache_EmptyCache(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontCache *arg1 = (PoDoFo::PdfFontCache *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCache::EmptyCache",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCache::EmptyCache",1,"PoDoFo::PdfFontCache *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontCache,0))){
    SWIG_fail_ptr("PdfFontCache_EmptyCache",1,SWIGTYPE_p_PoDoFo__PdfFontCache);
  }
  
  {
    try {
      (arg1)->EmptyCache();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontCache_GetFont__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontCache *arg1 = (PoDoFo::PdfFontCache *) 0 ;
  PoDoFo::PdfObject *arg2 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCache::GetFont",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",1,"PoDoFo::PdfFontCache *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",2,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontCache,0))){
    SWIG_fail_ptr("PdfFontCache_GetFont",1,SWIGTYPE_p_PoDoFo__PdfFontCache);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("PdfFontCache_GetFont",2,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->GetFont(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontCache_GetFont__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontCache *arg1 = (PoDoFo::PdfFontCache *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  bool arg6 ;
  PoDoFo::PdfFontCache::EFontCreationFlags arg7 ;
  PoDoFo::PdfEncoding *arg8 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  char *arg9 = (char *) 0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCache::GetFont",9,9)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",1,"PoDoFo::PdfFontCache *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",4,"bool");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",5,"bool");
  if(!lua_isboolean(L,6)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",6,"bool");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",7,"PoDoFo::PdfFontCache::EFontCreationFlags");
  if(!SWIG_isptrtype(L,8)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",8,"PoDoFo::PdfEncoding const *const");
  if(!SWIG_lua_isnilstring(L,9)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",9,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontCache,0))){
    SWIG_fail_ptr("PdfFontCache_GetFont",1,SWIGTYPE_p_PoDoFo__PdfFontCache);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  arg5 = (lua_toboolean(L, 5)!=0);
  arg6 = (lua_toboolean(L, 6)!=0);
  arg7 = (PoDoFo::PdfFontCache::EFontCreationFlags)(int)lua_tonumber(L, 7);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,8,(void**)&arg8,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("PdfFontCache_GetFont",8,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  arg9 = (char *)lua_tostring(L, 9);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->GetFont((char const *)arg2,arg3,arg4,arg5,arg6,arg7,(PoDoFo::PdfEncoding const *)arg8,(char const *)arg9);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontCache_GetFont__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontCache *arg1 = (PoDoFo::PdfFontCache *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  bool arg6 ;
  PoDoFo::PdfFontCache::EFontCreationFlags arg7 ;
  PoDoFo::PdfEncoding *arg8 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCache::GetFont",8,8)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",1,"PoDoFo::PdfFontCache *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",4,"bool");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",5,"bool");
  if(!lua_isboolean(L,6)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",6,"bool");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",7,"PoDoFo::PdfFontCache::EFontCreationFlags");
  if(!SWIG_isptrtype(L,8)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",8,"PoDoFo::PdfEncoding const *const");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontCache,0))){
    SWIG_fail_ptr("PdfFontCache_GetFont",1,SWIGTYPE_p_PoDoFo__PdfFontCache);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  arg5 = (lua_toboolean(L, 5)!=0);
  arg6 = (lua_toboolean(L, 6)!=0);
  arg7 = (PoDoFo::PdfFontCache::EFontCreationFlags)(int)lua_tonumber(L, 7);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,8,(void**)&arg8,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("PdfFontCache_GetFont",8,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->GetFont((char const *)arg2,arg3,arg4,arg5,arg6,arg7,(PoDoFo::PdfEncoding const *)arg8);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontCache_GetFont__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontCache *arg1 = (PoDoFo::PdfFontCache *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  bool arg6 ;
  PoDoFo::PdfFontCache::EFontCreationFlags arg7 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCache::GetFont",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",1,"PoDoFo::PdfFontCache *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",4,"bool");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",5,"bool");
  if(!lua_isboolean(L,6)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",6,"bool");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",7,"PoDoFo::PdfFontCache::EFontCreationFlags");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontCache,0))){
    SWIG_fail_ptr("PdfFontCache_GetFont",1,SWIGTYPE_p_PoDoFo__PdfFontCache);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  arg5 = (lua_toboolean(L, 5)!=0);
  arg6 = (lua_toboolean(L, 6)!=0);
  arg7 = (PoDoFo::PdfFontCache::EFontCreationFlags)(int)lua_tonumber(L, 7);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->GetFont((char const *)arg2,arg3,arg4,arg5,arg6,arg7);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontCache_GetFont__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontCache *arg1 = (PoDoFo::PdfFontCache *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  bool arg6 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCache::GetFont",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",1,"PoDoFo::PdfFontCache *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",4,"bool");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",5,"bool");
  if(!lua_isboolean(L,6)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",6,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontCache,0))){
    SWIG_fail_ptr("PdfFontCache_GetFont",1,SWIGTYPE_p_PoDoFo__PdfFontCache);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  arg5 = (lua_toboolean(L, 5)!=0);
  arg6 = (lua_toboolean(L, 6)!=0);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->GetFont((char const *)arg2,arg3,arg4,arg5,arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontCache_GetFont__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontCache *arg1 = (PoDoFo::PdfFontCache *) 0 ;
  FT_Face arg2 ;
  bool arg3 ;
  bool arg4 ;
  PoDoFo::PdfEncoding *arg5 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCache::GetFont",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",1,"PoDoFo::PdfFontCache *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",4,"bool");
  if(!SWIG_isptrtype(L,5)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",5,"PoDoFo::PdfEncoding const *const");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontCache,0))){
    SWIG_fail_ptr("PdfFontCache_GetFont",1,SWIGTYPE_p_PoDoFo__PdfFontCache);
  }
  
  {
    arg2 = (FT_Face)lua_touserdata(L,2);
  }
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&arg5,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("PdfFontCache_GetFont",5,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->GetFont(arg2,arg3,arg4,(PoDoFo::PdfEncoding const *)arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontCache_GetFont__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontCache *arg1 = (PoDoFo::PdfFontCache *) 0 ;
  FT_Face arg2 ;
  bool arg3 ;
  bool arg4 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCache::GetFont",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",1,"PoDoFo::PdfFontCache *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFont",4,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontCache,0))){
    SWIG_fail_ptr("PdfFontCache_GetFont",1,SWIGTYPE_p_PoDoFo__PdfFontCache);
  }
  
  {
    arg2 = (FT_Face)lua_touserdata(L,2);
  }
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->GetFont(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontCache_GetFont(lua_State* L) {
  int argc;
  int argv[10]={
    1,2,3,4,5,6,7,8,9,10
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfFontCache, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfFontCache_GetFont__SWIG_0(L);
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfFontCache, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, 0, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            return _wrap_PdfFontCache_GetFont__SWIG_6(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfFontCache, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, 0, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              void *ptr;
              if (SWIG_isptrtype(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              return _wrap_PdfFontCache_GetFont__SWIG_5(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfFontCache, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isboolean(L,argv[5]);
              }
              if (_v) {
                return _wrap_PdfFontCache_GetFont__SWIG_4(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfFontCache, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isboolean(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  return _wrap_PdfFontCache_GetFont__SWIG_3(L);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfFontCache, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isboolean(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    void *ptr;
                    if (SWIG_isptrtype(L,argv[7])==0 || SWIG_ConvertPtr(L,argv[7], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
                      _v = 0;
                    } else {
                      _v = 1;
                    }
                  }
                  if (_v) {
                    return _wrap_PdfFontCache_GetFont__SWIG_2(L);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfFontCache, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isboolean(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    void *ptr;
                    if (SWIG_isptrtype(L,argv[7])==0 || SWIG_ConvertPtr(L,argv[7], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
                      _v = 0;
                    } else {
                      _v = 1;
                    }
                  }
                  if (_v) {
                    {
                      _v = SWIG_lua_isnilstring(L,argv[8]);
                    }
                    if (_v) {
                      return _wrap_PdfFontCache_GetFont__SWIG_1(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfFontCache_GetFont'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfFontCache::GetFont(PoDoFo::PdfObject *)\n"
    "    PoDoFo::PdfFontCache::GetFont(char const *,bool,bool,bool,bool,PoDoFo::PdfFontCache::EFontCreationFlags,PoDoFo::PdfEncoding const *const,char const *)\n"
    "    PoDoFo::PdfFontCache::GetFont(char const *,bool,bool,bool,bool,PoDoFo::PdfFontCache::EFontCreationFlags,PoDoFo::PdfEncoding const *const)\n"
    "    PoDoFo::PdfFontCache::GetFont(char const *,bool,bool,bool,bool,PoDoFo::PdfFontCache::EFontCreationFlags)\n"
    "    PoDoFo::PdfFontCache::GetFont(char const *,bool,bool,bool,bool)\n"
    "    PoDoFo::PdfFontCache::GetFont(FT_Face,bool,bool,PoDoFo::PdfEncoding const *const)\n"
    "    PoDoFo::PdfFontCache::GetFont(FT_Face,bool,bool)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfFontCache_GetDuplicateFontType1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontCache *arg1 = (PoDoFo::PdfFontCache *) 0 ;
  PoDoFo::PdfFont *arg2 = (PoDoFo::PdfFont *) 0 ;
  char *arg3 = (char *) 0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCache::GetDuplicateFontType1",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetDuplicateFontType1",1,"PoDoFo::PdfFontCache *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetDuplicateFontType1",2,"PoDoFo::PdfFont *");
  if(!SWIG_lua_isnilstring(L,3)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetDuplicateFontType1",3,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontCache,0))){
    SWIG_fail_ptr("PdfFontCache_GetDuplicateFontType1",1,SWIGTYPE_p_PoDoFo__PdfFontCache);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfFontCache_GetDuplicateFontType1",2,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  arg3 = (char *)lua_tostring(L, 3);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->GetDuplicateFontType1(arg2,(char const *)arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontCache_GetFontSubset__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontCache *arg1 = (PoDoFo::PdfFontCache *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  PoDoFo::PdfEncoding *arg6 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  char *arg7 = (char *) 0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCache::GetFontSubset",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontSubset",1,"PoDoFo::PdfFontCache *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontSubset",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontSubset",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontSubset",4,"bool");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontSubset",5,"bool");
  if(!SWIG_isptrtype(L,6)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontSubset",6,"PoDoFo::PdfEncoding const *const");
  if(!SWIG_lua_isnilstring(L,7)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontSubset",7,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontCache,0))){
    SWIG_fail_ptr("PdfFontCache_GetFontSubset",1,SWIGTYPE_p_PoDoFo__PdfFontCache);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  arg5 = (lua_toboolean(L, 5)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("PdfFontCache_GetFontSubset",6,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  arg7 = (char *)lua_tostring(L, 7);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->GetFontSubset((char const *)arg2,arg3,arg4,arg5,(PoDoFo::PdfEncoding const *)arg6,(char const *)arg7);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontCache_GetFontSubset__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontCache *arg1 = (PoDoFo::PdfFontCache *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  PoDoFo::PdfEncoding *arg6 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCache::GetFontSubset",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontSubset",1,"PoDoFo::PdfFontCache *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontSubset",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontSubset",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontSubset",4,"bool");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontSubset",5,"bool");
  if(!SWIG_isptrtype(L,6)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontSubset",6,"PoDoFo::PdfEncoding const *const");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontCache,0))){
    SWIG_fail_ptr("PdfFontCache_GetFontSubset",1,SWIGTYPE_p_PoDoFo__PdfFontCache);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  arg5 = (lua_toboolean(L, 5)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("PdfFontCache_GetFontSubset",6,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->GetFontSubset((char const *)arg2,arg3,arg4,arg5,(PoDoFo::PdfEncoding const *)arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontCache_GetFontSubset__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontCache *arg1 = (PoDoFo::PdfFontCache *) 0 ;
  char *arg2 = (char *) 0 ;
  bool arg3 ;
  bool arg4 ;
  bool arg5 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCache::GetFontSubset",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontSubset",1,"PoDoFo::PdfFontCache *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontSubset",2,"char const *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontSubset",3,"bool");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontSubset",4,"bool");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontSubset",5,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontCache,0))){
    SWIG_fail_ptr("PdfFontCache_GetFontSubset",1,SWIGTYPE_p_PoDoFo__PdfFontCache);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  arg4 = (lua_toboolean(L, 4)!=0);
  arg5 = (lua_toboolean(L, 5)!=0);
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->GetFontSubset((char const *)arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontCache_GetFontSubset(lua_State* L) {
  int argc;
  int argv[8]={
    1,2,3,4,5,6,7,8
  };
  
  argc = lua_gettop(L);
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfFontCache, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfFontCache_GetFontSubset__SWIG_2(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfFontCache, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              {
                void *ptr;
                if (SWIG_isptrtype(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                return _wrap_PdfFontCache_GetFontSubset__SWIG_1(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfFontCache, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              {
                void *ptr;
                if (SWIG_isptrtype(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncoding, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                {
                  _v = SWIG_lua_isnilstring(L,argv[6]);
                }
                if (_v) {
                  return _wrap_PdfFontCache_GetFontSubset__SWIG_0(L);
                }
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfFontCache_GetFontSubset'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfFontCache::GetFontSubset(char const *,bool,bool,bool,PoDoFo::PdfEncoding const *const,char const *)\n"
    "    PoDoFo::PdfFontCache::GetFontSubset(char const *,bool,bool,bool,PoDoFo::PdfEncoding const *const)\n"
    "    PoDoFo::PdfFontCache::GetFontSubset(char const *,bool,bool,bool)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfFontCache_EmbedSubsetFonts(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontCache *arg1 = (PoDoFo::PdfFontCache *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCache::EmbedSubsetFonts",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCache::EmbedSubsetFonts",1,"PoDoFo::PdfFontCache *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontCache,0))){
    SWIG_fail_ptr("PdfFontCache_EmbedSubsetFonts",1,SWIGTYPE_p_PoDoFo__PdfFontCache);
  }
  
  {
    try {
      (arg1)->EmbedSubsetFonts();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontCache_GetFontLibrary(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontCache *arg1 = (PoDoFo::PdfFontCache *) 0 ;
  FT_Library result;
  
  SWIG_check_num_args("PoDoFo::PdfFontCache::GetFontLibrary",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCache::GetFontLibrary",1,"PoDoFo::PdfFontCache const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontCache,0))){
    SWIG_fail_ptr("PdfFontCache_GetFontLibrary",1,SWIGTYPE_p_PoDoFo__PdfFontCache);
  }
  
  {
    try {
      result = ((PoDoFo::PdfFontCache const *)arg1)->GetFontLibrary();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    FT_Library * resultptr = new FT_Library((const FT_Library &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_FT_Library,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontCache_SetFontConfigWrapper(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontCache *arg1 = (PoDoFo::PdfFontCache *) 0 ;
  PoDoFo::PdfFontConfigWrapper *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontCache::SetFontConfigWrapper",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontCache::SetFontConfigWrapper",1,"PoDoFo::PdfFontCache *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfFontCache::SetFontConfigWrapper",2,"PoDoFo::PdfFontConfigWrapper const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontCache,0))){
    SWIG_fail_ptr("PdfFontCache_SetFontConfigWrapper",1,SWIGTYPE_p_PoDoFo__PdfFontCache);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfFontConfigWrapper,0))){
    SWIG_fail_ptr("PdfFontCache_SetFontConfigWrapper",2,SWIGTYPE_p_PoDoFo__PdfFontConfigWrapper);
  }
  
  {
    try {
      (arg1)->SetFontConfigWrapper((PoDoFo::PdfFontConfigWrapper const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfFontCache(void *obj) {
PoDoFo::PdfFontCache *arg1 = (PoDoFo::PdfFontCache *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfFontCache(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfFontCache);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfFontCache_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfFontCache_methods[]= {
    { "EmptyCache", _wrap_PdfFontCache_EmptyCache},
    { "GetFont", _wrap_PdfFontCache_GetFont},
    { "GetDuplicateFontType1", _wrap_PdfFontCache_GetDuplicateFontType1},
    { "GetFontSubset", _wrap_PdfFontCache_GetFontSubset},
    { "EmbedSubsetFonts", _wrap_PdfFontCache_EmbedSubsetFonts},
    { "GetFontLibrary", _wrap_PdfFontCache_GetFontLibrary},
    { "SetFontConfigWrapper", _wrap_PdfFontCache_SetFontConfigWrapper},
    {0,0}
};
static swig_lua_method swig_PdfFontCache_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfFontCache_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfFontCache_Sf_SwigStatic_constants[]= {
    {SWIG_LUA_CONSTTAB_INT("eFontCreationFlags_None", PoDoFo::PdfFontCache::eFontCreationFlags_None)},
    {SWIG_LUA_CONSTTAB_INT("eFontCreationFlags_AutoSelectBase14", PoDoFo::PdfFontCache::eFontCreationFlags_AutoSelectBase14)},
    {SWIG_LUA_CONSTTAB_INT("eFontCreationFlags_Type1Subsetting", PoDoFo::PdfFontCache::eFontCreationFlags_Type1Subsetting)},
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfFontCache_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfFontCache_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfFontCache_Sf_SwigStatic = {
    "PdfFontCache",
    swig_PdfFontCache_Sf_SwigStatic_methods,
    swig_PdfFontCache_Sf_SwigStatic_attributes,
    swig_PdfFontCache_Sf_SwigStatic_constants,
    swig_PdfFontCache_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfFontCache_bases[] = {0};
static const char *swig_PdfFontCache_base_names[] = {0};
static swig_lua_class _wrap_class_PdfFontCache = { "PdfFontCache", "PdfFontCache", &SWIGTYPE_p_PoDoFo__PdfFontCache,_proxy__wrap_new_PdfFontCache, swig_delete_PdfFontCache, swig_PdfFontCache_methods, swig_PdfFontCache_attributes, &swig_PdfFontCache_Sf_SwigStatic, swig_PdfFontCache_meta, swig_PdfFontCache_bases, swig_PdfFontCache_base_names };

static int _wrap_new_PdfFontConfigWrapper__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontConfigWrapper *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontConfigWrapper::PdfFontConfigWrapper",0,0)
  {
    try {
      result = (PoDoFo::PdfFontConfigWrapper *)new PoDoFo::PdfFontConfigWrapper();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFontConfigWrapper,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFontConfigWrapper__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontConfigWrapper *arg1 = 0 ;
  PoDoFo::PdfFontConfigWrapper *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontConfigWrapper::PdfFontConfigWrapper",1,1)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfFontConfigWrapper::PdfFontConfigWrapper",1,"PoDoFo::PdfFontConfigWrapper const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontConfigWrapper,0))){
    SWIG_fail_ptr("new_PdfFontConfigWrapper",1,SWIGTYPE_p_PoDoFo__PdfFontConfigWrapper);
  }
  
  {
    try {
      result = (PoDoFo::PdfFontConfigWrapper *)new PoDoFo::PdfFontConfigWrapper((PoDoFo::PdfFontConfigWrapper const &)*arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFontConfigWrapper,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFontConfigWrapper(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 0) {
    return _wrap_new_PdfFontConfigWrapper__SWIG_0(L);
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfFontConfigWrapper, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfFontConfigWrapper__SWIG_1(L);
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfFontConfigWrapper'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfFontConfigWrapper::PdfFontConfigWrapper()\n"
    "    PoDoFo::PdfFontConfigWrapper::PdfFontConfigWrapper(PoDoFo::PdfFontConfigWrapper const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfFontConfigWrapper_GetFontConfig(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontConfigWrapper *arg1 = (PoDoFo::PdfFontConfigWrapper *) 0 ;
  void *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontConfigWrapper::GetFontConfig",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontConfigWrapper::GetFontConfig",1,"PoDoFo::PdfFontConfigWrapper *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontConfigWrapper,0))){
    SWIG_fail_ptr("PdfFontConfigWrapper_GetFontConfig",1,SWIGTYPE_p_PoDoFo__PdfFontConfigWrapper);
  }
  
  {
    try {
      result = (void *)(arg1)->GetFontConfig();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_void,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfFontConfigWrapper(void *obj) {
PoDoFo::PdfFontConfigWrapper *arg1 = (PoDoFo::PdfFontConfigWrapper *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfFontConfigWrapper(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfFontConfigWrapper);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfFontConfigWrapper_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfFontConfigWrapper_methods[]= {
    { "GetFontConfig", _wrap_PdfFontConfigWrapper_GetFontConfig},
    {0,0}
};
static swig_lua_method swig_PdfFontConfigWrapper_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfFontConfigWrapper_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfFontConfigWrapper_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfFontConfigWrapper_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfFontConfigWrapper_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfFontConfigWrapper_Sf_SwigStatic = {
    "PdfFontConfigWrapper",
    swig_PdfFontConfigWrapper_Sf_SwigStatic_methods,
    swig_PdfFontConfigWrapper_Sf_SwigStatic_attributes,
    swig_PdfFontConfigWrapper_Sf_SwigStatic_constants,
    swig_PdfFontConfigWrapper_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfFontConfigWrapper_bases[] = {0};
static const char *swig_PdfFontConfigWrapper_base_names[] = {0};
static swig_lua_class _wrap_class_PdfFontConfigWrapper = { "PdfFontConfigWrapper", "PdfFontConfigWrapper", &SWIGTYPE_p_PoDoFo__PdfFontConfigWrapper,_proxy__wrap_new_PdfFontConfigWrapper, swig_delete_PdfFontConfigWrapper, swig_PdfFontConfigWrapper_methods, swig_PdfFontConfigWrapper_attributes, &swig_PdfFontConfigWrapper_Sf_SwigStatic, swig_PdfFontConfigWrapper_meta, swig_PdfFontConfigWrapper_bases, swig_PdfFontConfigWrapper_base_names };

static int _wrap_PdfFontFactory_CreateFontObject(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontMetrics *arg1 = (PoDoFo::PdfFontMetrics *) 0 ;
  int arg2 ;
  PoDoFo::PdfEncoding *arg3 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PoDoFo::PdfVecObjects *arg4 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontFactory::CreateFontObject",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontFactory::CreateFontObject",1,"PoDoFo::PdfFontMetrics *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfFontFactory::CreateFontObject",2,"int");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfFontFactory::CreateFontObject",3,"PoDoFo::PdfEncoding const *const");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfFontFactory::CreateFontObject",4,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontMetrics,0))){
    SWIG_fail_ptr("PdfFontFactory_CreateFontObject",1,SWIGTYPE_p_PoDoFo__PdfFontMetrics);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("PdfFontFactory_CreateFontObject",3,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("PdfFontFactory_CreateFontObject",4,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfFont *)PoDoFo::PdfFontFactory::CreateFontObject(arg1,arg2,(PoDoFo::PdfEncoding const *)arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontFactory_CreateFont(lua_State* L) {
  int SWIG_arg = 0;
  FT_Library *arg1 = (FT_Library *) 0 ;
  PoDoFo::PdfObject *arg2 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontFactory::CreateFont",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontFactory::CreateFont",1,"FT_Library *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfFontFactory::CreateFont",2,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_FT_Library,0))){
    SWIG_fail_ptr("PdfFontFactory_CreateFont",1,SWIGTYPE_p_FT_Library);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("PdfFontFactory_CreateFont",2,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfFont *)PoDoFo::PdfFontFactory::CreateFont(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontFactory_CreateBase14Font(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  PoDoFo::PdfEncoding *arg3 = (PoDoFo::PdfEncoding *) (PoDoFo::PdfEncoding *)0 ;
  PoDoFo::PdfVecObjects *arg4 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontFactory::CreateBase14Font",4,4)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfFontFactory::CreateBase14Font",1,"char const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfFontFactory::CreateBase14Font",2,"int");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfFontFactory::CreateBase14Font",3,"PoDoFo::PdfEncoding const *const");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfFontFactory::CreateBase14Font",4,"PoDoFo::PdfVecObjects *");
  arg1 = (char *)lua_tostring(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfEncoding,0))){
    SWIG_fail_ptr("PdfFontFactory_CreateBase14Font",3,SWIGTYPE_p_PoDoFo__PdfEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("PdfFontFactory_CreateBase14Font",4,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfFont *)PoDoFo::PdfFontFactory::CreateBase14Font((char const *)arg1,arg2,(PoDoFo::PdfEncoding const *)arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontFactory_GetFontType(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  PoDoFo::EPdfFontType result;
  
  SWIG_check_num_args("PoDoFo::PdfFontFactory::GetFontType",1,1)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfFontFactory::GetFontType",1,"char const *");
  arg1 = (char *)lua_tostring(L, 1);
  {
    try {
      result = (PoDoFo::EPdfFontType)PoDoFo::PdfFontFactory::GetFontType((char const *)arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFontFactory(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontFactory *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontFactory::PdfFontFactory",0,0)
  {
    try {
      result = (PoDoFo::PdfFontFactory *)new PoDoFo::PdfFontFactory();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFontFactory,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfFontFactory(void *obj) {
PoDoFo::PdfFontFactory *arg1 = (PoDoFo::PdfFontFactory *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfFontFactory(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfFontFactory);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfFontFactory_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfFontFactory_methods[]= {
    {0,0}
};
static swig_lua_method swig_PdfFontFactory_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfFontFactory_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfFontFactory_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfFontFactory_Sf_SwigStatic_methods[]= {
    { "CreateFontObject", _wrap_PdfFontFactory_CreateFontObject},
    { "CreateFont", _wrap_PdfFontFactory_CreateFont},
    { "CreateBase14Font", _wrap_PdfFontFactory_CreateBase14Font},
    { "GetFontType", _wrap_PdfFontFactory_GetFontType},
    {0,0}
};
static swig_lua_class* swig_PdfFontFactory_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfFontFactory_Sf_SwigStatic = {
    "PdfFontFactory",
    swig_PdfFontFactory_Sf_SwigStatic_methods,
    swig_PdfFontFactory_Sf_SwigStatic_attributes,
    swig_PdfFontFactory_Sf_SwigStatic_constants,
    swig_PdfFontFactory_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfFontFactory_bases[] = {0};
static const char *swig_PdfFontFactory_base_names[] = {0};
static swig_lua_class _wrap_class_PdfFontFactory = { "PdfFontFactory", "PdfFontFactory", &SWIGTYPE_p_PoDoFo__PdfFontFactory,_proxy__wrap_new_PdfFontFactory, swig_delete_PdfFontFactory, swig_PdfFontFactory_methods, swig_PdfFontFactory_attributes, &swig_PdfFontFactory_Sf_SwigStatic, swig_PdfFontFactory_meta, swig_PdfFontFactory_bases, swig_PdfFontFactory_base_names };

static int _wrap_PODOFO_CharData_char_cd_set(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *arg1 = (PoDoFo::PODOFO_CharData *) 0 ;
  pdf_int16 arg2 ;
  pdf_int16 *argp2 ;
  
  SWIG_check_num_args("PoDoFo::PODOFO_CharData::char_cd",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PODOFO_CharData::char_cd",1,"PoDoFo::PODOFO_CharData *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PODOFO_CharData::char_cd",2,"pdf_int16");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0))){
    SWIG_fail_ptr("PODOFO_CharData_char_cd_set",1,SWIGTYPE_p_PoDoFo__PODOFO_CharData);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_int16,0))){
    SWIG_fail_ptr("PODOFO_CharData_char_cd_set",2,SWIGTYPE_p_pdf_int16);
  }
  arg2 = *argp2;
  
  if (arg1) (arg1)->char_cd = arg2;
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PODOFO_CharData_char_cd_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *arg1 = (PoDoFo::PODOFO_CharData *) 0 ;
  pdf_int16 result;
  
  SWIG_check_num_args("PoDoFo::PODOFO_CharData::char_cd",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PODOFO_CharData::char_cd",1,"PoDoFo::PODOFO_CharData *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0))){
    SWIG_fail_ptr("PODOFO_CharData_char_cd_get",1,SWIGTYPE_p_PoDoFo__PODOFO_CharData);
  }
  
  result =  ((arg1)->char_cd);
  {
    pdf_int16 * resultptr = new pdf_int16((const pdf_int16 &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_int16,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PODOFO_CharData_unicode_set(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *arg1 = (PoDoFo::PODOFO_CharData *) 0 ;
  pdf_uint16 arg2 ;
  pdf_uint16 *argp2 ;
  
  SWIG_check_num_args("PoDoFo::PODOFO_CharData::unicode",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PODOFO_CharData::unicode",1,"PoDoFo::PODOFO_CharData *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PODOFO_CharData::unicode",2,"pdf_uint16");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0))){
    SWIG_fail_ptr("PODOFO_CharData_unicode_set",1,SWIGTYPE_p_PoDoFo__PODOFO_CharData);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_uint16,0))){
    SWIG_fail_ptr("PODOFO_CharData_unicode_set",2,SWIGTYPE_p_pdf_uint16);
  }
  arg2 = *argp2;
  
  if (arg1) (arg1)->unicode = arg2;
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PODOFO_CharData_unicode_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *arg1 = (PoDoFo::PODOFO_CharData *) 0 ;
  pdf_uint16 result;
  
  SWIG_check_num_args("PoDoFo::PODOFO_CharData::unicode",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PODOFO_CharData::unicode",1,"PoDoFo::PODOFO_CharData *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0))){
    SWIG_fail_ptr("PODOFO_CharData_unicode_get",1,SWIGTYPE_p_PoDoFo__PODOFO_CharData);
  }
  
  result =  ((arg1)->unicode);
  {
    pdf_uint16 * resultptr = new pdf_uint16((const pdf_uint16 &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_uint16,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PODOFO_CharData_width_set(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *arg1 = (PoDoFo::PODOFO_CharData *) 0 ;
  pdf_int16 arg2 ;
  pdf_int16 *argp2 ;
  
  SWIG_check_num_args("PoDoFo::PODOFO_CharData::width",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PODOFO_CharData::width",1,"PoDoFo::PODOFO_CharData *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PODOFO_CharData::width",2,"pdf_int16");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0))){
    SWIG_fail_ptr("PODOFO_CharData_width_set",1,SWIGTYPE_p_PoDoFo__PODOFO_CharData);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_int16,0))){
    SWIG_fail_ptr("PODOFO_CharData_width_set",2,SWIGTYPE_p_pdf_int16);
  }
  arg2 = *argp2;
  
  if (arg1) (arg1)->width = arg2;
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PODOFO_CharData_width_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *arg1 = (PoDoFo::PODOFO_CharData *) 0 ;
  pdf_int16 result;
  
  SWIG_check_num_args("PoDoFo::PODOFO_CharData::width",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PODOFO_CharData::width",1,"PoDoFo::PODOFO_CharData *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0))){
    SWIG_fail_ptr("PODOFO_CharData_width_get",1,SWIGTYPE_p_PoDoFo__PODOFO_CharData);
  }
  
  result =  ((arg1)->width);
  {
    pdf_int16 * resultptr = new pdf_int16((const pdf_int16 &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_int16,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PODOFO_CharData(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PODOFO_CharData::PODOFO_CharData",0,0)
  {
    try {
      result = (PoDoFo::PODOFO_CharData *)new PoDoFo::PODOFO_CharData();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PODOFO_CharData,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PODOFO_CharData(void *obj) {
PoDoFo::PODOFO_CharData *arg1 = (PoDoFo::PODOFO_CharData *) obj;
delete arg1;
}
static int _proxy__wrap_new_PODOFO_CharData(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PODOFO_CharData);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PODOFO_CharData_attributes[] = {
    { "char_cd", _wrap_PODOFO_CharData_char_cd_get, _wrap_PODOFO_CharData_char_cd_set },
    { "unicode", _wrap_PODOFO_CharData_unicode_get, _wrap_PODOFO_CharData_unicode_set },
    { "width", _wrap_PODOFO_CharData_width_get, _wrap_PODOFO_CharData_width_set },
    {0,0,0}
};
static swig_lua_method swig_PODOFO_CharData_methods[]= {
    {0,0}
};
static swig_lua_method swig_PODOFO_CharData_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PODOFO_CharData_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PODOFO_CharData_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PODOFO_CharData_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PODOFO_CharData_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PODOFO_CharData_Sf_SwigStatic = {
    "PODOFO_CharData",
    swig_PODOFO_CharData_Sf_SwigStatic_methods,
    swig_PODOFO_CharData_Sf_SwigStatic_attributes,
    swig_PODOFO_CharData_Sf_SwigStatic_constants,
    swig_PODOFO_CharData_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PODOFO_CharData_bases[] = {0};
static const char *swig_PODOFO_CharData_base_names[] = {0};
static swig_lua_class _wrap_class_PODOFO_CharData = { "PODOFO_CharData", "PODOFO_CharData", &SWIGTYPE_p_PoDoFo__PODOFO_CharData,_proxy__wrap_new_PODOFO_CharData, swig_delete_PODOFO_CharData, swig_PODOFO_CharData_methods, swig_PODOFO_CharData_attributes, &swig_PODOFO_CharData_Sf_SwigStatic, swig_PODOFO_CharData_meta, swig_PODOFO_CharData_bases, swig_PODOFO_CharData_base_names };

static int _wrap_CHAR_DATA_COURIER_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::CHAR_DATA_COURIER",0,0)
  result = (PoDoFo::PODOFO_CharData *)(PoDoFo::PODOFO_CharData *)PoDoFo::CHAR_DATA_COURIER;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CHAR_DATA_COURIER_BOLD_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::CHAR_DATA_COURIER_BOLD",0,0)
  result = (PoDoFo::PODOFO_CharData *)(PoDoFo::PODOFO_CharData *)PoDoFo::CHAR_DATA_COURIER_BOLD;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CHAR_DATA_COURIER_BOLD_OBLIQUE_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::CHAR_DATA_COURIER_BOLD_OBLIQUE",0,0)
  result = (PoDoFo::PODOFO_CharData *)(PoDoFo::PODOFO_CharData *)PoDoFo::CHAR_DATA_COURIER_BOLD_OBLIQUE;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CHAR_DATA_COURIER_OBLIQUE_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::CHAR_DATA_COURIER_OBLIQUE",0,0)
  result = (PoDoFo::PODOFO_CharData *)(PoDoFo::PODOFO_CharData *)PoDoFo::CHAR_DATA_COURIER_OBLIQUE;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CHAR_DATA_HELVETICA_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::CHAR_DATA_HELVETICA",0,0)
  result = (PoDoFo::PODOFO_CharData *)(PoDoFo::PODOFO_CharData *)PoDoFo::CHAR_DATA_HELVETICA;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CHAR_DATA_HELVETICA_BOLD_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::CHAR_DATA_HELVETICA_BOLD",0,0)
  result = (PoDoFo::PODOFO_CharData *)(PoDoFo::PODOFO_CharData *)PoDoFo::CHAR_DATA_HELVETICA_BOLD;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CHAR_DATA_HELVETICA_BOLD_OBLIQUE_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::CHAR_DATA_HELVETICA_BOLD_OBLIQUE",0,0)
  result = (PoDoFo::PODOFO_CharData *)(PoDoFo::PODOFO_CharData *)PoDoFo::CHAR_DATA_HELVETICA_BOLD_OBLIQUE;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CHAR_DATA_HELVETICA_OBLIQUE_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::CHAR_DATA_HELVETICA_OBLIQUE",0,0)
  result = (PoDoFo::PODOFO_CharData *)(PoDoFo::PODOFO_CharData *)PoDoFo::CHAR_DATA_HELVETICA_OBLIQUE;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CHAR_DATA_TIMES_ROMAN_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::CHAR_DATA_TIMES_ROMAN",0,0)
  result = (PoDoFo::PODOFO_CharData *)(PoDoFo::PODOFO_CharData *)PoDoFo::CHAR_DATA_TIMES_ROMAN;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CHAR_DATA_TIMES_BOLD_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::CHAR_DATA_TIMES_BOLD",0,0)
  result = (PoDoFo::PODOFO_CharData *)(PoDoFo::PODOFO_CharData *)PoDoFo::CHAR_DATA_TIMES_BOLD;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CHAR_DATA_TIMES_BOLD_ITALIC_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::CHAR_DATA_TIMES_BOLD_ITALIC",0,0)
  result = (PoDoFo::PODOFO_CharData *)(PoDoFo::PODOFO_CharData *)PoDoFo::CHAR_DATA_TIMES_BOLD_ITALIC;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CHAR_DATA_TIMES_ITALIC_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::CHAR_DATA_TIMES_ITALIC",0,0)
  result = (PoDoFo::PODOFO_CharData *)(PoDoFo::PODOFO_CharData *)PoDoFo::CHAR_DATA_TIMES_ITALIC;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CHAR_DATA_ZAPF_DINGBATS_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::CHAR_DATA_ZAPF_DINGBATS",0,0)
  result = (PoDoFo::PODOFO_CharData *)(PoDoFo::PODOFO_CharData *)PoDoFo::CHAR_DATA_ZAPF_DINGBATS;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_CHAR_DATA_SYMBOL_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PODOFO_CharData *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::CHAR_DATA_SYMBOL",0,0)
  result = (PoDoFo::PODOFO_CharData *)(PoDoFo::PODOFO_CharData *)PoDoFo::CHAR_DATA_SYMBOL;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PODOFO_CharData,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PODOFO_TRUE_get(lua_State* L) {
  int SWIG_arg = 0;
  int result;
  
  SWIG_check_num_args("PoDoFo::PODOFO_TRUE",0,0)
  result = (int)(int)PoDoFo::PODOFO_TRUE;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PODOFO_FALSE_get(lua_State* L) {
  int SWIG_arg = 0;
  int result;
  
  SWIG_check_num_args("PoDoFo::PODOFO_FALSE",0,0)
  result = (int)(int)PoDoFo::PODOFO_FALSE;
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PODOFO_BUILTIN_FONTS_get(lua_State* L) {
  int SWIG_arg = 0;
  PdfFontMetricsBase14 *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PODOFO_BUILTIN_FONTS",0,0)
  result = (PdfFontMetricsBase14 *)(PdfFontMetricsBase14 *)PoDoFo::PODOFO_BUILTIN_FONTS;
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PdfFontMetricsBase14,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontSimple_EmbedFont(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontSimple *arg1 = (PoDoFo::PdfFontSimple *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontSimple::EmbedFont",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontSimple::EmbedFont",1,"PoDoFo::PdfFontSimple *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontSimple,0))){
    SWIG_fail_ptr("PdfFontSimple_EmbedFont",1,SWIGTYPE_p_PoDoFo__PdfFontSimple);
  }
  
  {
    try {
      (arg1)->EmbedFont();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfFontSimple(void *obj) {
PoDoFo::PdfFontSimple *arg1 = (PoDoFo::PdfFontSimple *) obj;
delete arg1;
}
static swig_lua_attribute swig_PdfFontSimple_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfFontSimple_methods[]= {
    { "EmbedFont", _wrap_PdfFontSimple_EmbedFont},
    {0,0}
};
static swig_lua_method swig_PdfFontSimple_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfFontSimple_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfFontSimple_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfFontSimple_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfFontSimple_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfFontSimple_Sf_SwigStatic = {
    "PdfFontSimple",
    swig_PdfFontSimple_Sf_SwigStatic_methods,
    swig_PdfFontSimple_Sf_SwigStatic_attributes,
    swig_PdfFontSimple_Sf_SwigStatic_constants,
    swig_PdfFontSimple_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfFontSimple_bases[] = {0,0};
static const char *swig_PdfFontSimple_base_names[] = {"PoDoFo::PdfFont *",0};
static swig_lua_class _wrap_class_PdfFontSimple = { "PdfFontSimple", "PdfFontSimple", &SWIGTYPE_p_PoDoFo__PdfFontSimple,0, swig_delete_PdfFontSimple, swig_PdfFontSimple_methods, swig_PdfFontSimple_attributes, &swig_PdfFontSimple_Sf_SwigStatic, swig_PdfFontSimple_meta, swig_PdfFontSimple_bases, swig_PdfFontSimple_base_names };

static int _wrap_new_PdfFontTTFSubset__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  PoDoFo::PdfFontMetrics *arg2 = (PoDoFo::PdfFontMetrics *) 0 ;
  unsigned short arg3 ;
  PoDoFo::PdfFontTTFSubset *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset",3,3)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset",1,"char const *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset",2,"PoDoFo::PdfFontMetrics *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset",3,"unsigned short");
  arg1 = (char *)lua_tostring(L, 1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfFontMetrics,0))){
    SWIG_fail_ptr("new_PdfFontTTFSubset",2,SWIGTYPE_p_PoDoFo__PdfFontMetrics);
  }
  
  SWIG_contract_assert((lua_tonumber(L,3)>=0),"number must not be negative")
  arg3 = (unsigned short)lua_tonumber(L, 3);
  {
    try {
      result = (PoDoFo::PdfFontTTFSubset *)new PoDoFo::PdfFontTTFSubset((char const *)arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFontTTFSubset,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFontTTFSubset__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  PoDoFo::PdfFontMetrics *arg2 = (PoDoFo::PdfFontMetrics *) 0 ;
  PoDoFo::PdfFontTTFSubset *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset",2,2)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset",1,"char const *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset",2,"PoDoFo::PdfFontMetrics *");
  arg1 = (char *)lua_tostring(L, 1);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfFontMetrics,0))){
    SWIG_fail_ptr("new_PdfFontTTFSubset",2,SWIGTYPE_p_PoDoFo__PdfFontMetrics);
  }
  
  {
    try {
      result = (PoDoFo::PdfFontTTFSubset *)new PoDoFo::PdfFontTTFSubset((char const *)arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFontTTFSubset,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFontTTFSubset__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInputDevice *arg1 = (PoDoFo::PdfInputDevice *) 0 ;
  PoDoFo::PdfFontMetrics *arg2 = (PoDoFo::PdfFontMetrics *) 0 ;
  PoDoFo::PdfFontTTFSubset::EFontFileType arg3 ;
  unsigned short arg4 ;
  PoDoFo::PdfFontTTFSubset *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset",1,"PoDoFo::PdfInputDevice *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset",2,"PoDoFo::PdfFontMetrics *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset",3,"PoDoFo::PdfFontTTFSubset::EFontFileType");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset",4,"unsigned short");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInputDevice,0))){
    SWIG_fail_ptr("new_PdfFontTTFSubset",1,SWIGTYPE_p_PoDoFo__PdfInputDevice);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfFontMetrics,0))){
    SWIG_fail_ptr("new_PdfFontTTFSubset",2,SWIGTYPE_p_PoDoFo__PdfFontMetrics);
  }
  
  arg3 = (PoDoFo::PdfFontTTFSubset::EFontFileType)(int)lua_tonumber(L, 3);
  SWIG_contract_assert((lua_tonumber(L,4)>=0),"number must not be negative")
  arg4 = (unsigned short)lua_tonumber(L, 4);
  {
    try {
      result = (PoDoFo::PdfFontTTFSubset *)new PoDoFo::PdfFontTTFSubset(arg1,arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFontTTFSubset,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFontTTFSubset__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInputDevice *arg1 = (PoDoFo::PdfInputDevice *) 0 ;
  PoDoFo::PdfFontMetrics *arg2 = (PoDoFo::PdfFontMetrics *) 0 ;
  PoDoFo::PdfFontTTFSubset::EFontFileType arg3 ;
  PoDoFo::PdfFontTTFSubset *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset",1,"PoDoFo::PdfInputDevice *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset",2,"PoDoFo::PdfFontMetrics *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset",3,"PoDoFo::PdfFontTTFSubset::EFontFileType");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInputDevice,0))){
    SWIG_fail_ptr("new_PdfFontTTFSubset",1,SWIGTYPE_p_PoDoFo__PdfInputDevice);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfFontMetrics,0))){
    SWIG_fail_ptr("new_PdfFontTTFSubset",2,SWIGTYPE_p_PoDoFo__PdfFontMetrics);
  }
  
  arg3 = (PoDoFo::PdfFontTTFSubset::EFontFileType)(int)lua_tonumber(L, 3);
  {
    try {
      result = (PoDoFo::PdfFontTTFSubset *)new PoDoFo::PdfFontTTFSubset(arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFontTTFSubset,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFontTTFSubset(lua_State* L) {
  int argc;
  int argv[5]={
    1,2,3,4,5
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfFontMetrics, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfFontTTFSubset__SWIG_1(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfInputDevice, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfFontMetrics, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_new_PdfFontTTFSubset__SWIG_3(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfFontMetrics, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_new_PdfFontTTFSubset__SWIG_0(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfInputDevice, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfFontMetrics, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_new_PdfFontTTFSubset__SWIG_2(L);
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfFontTTFSubset'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset(char const *,PoDoFo::PdfFontMetrics *,unsigned short)\n"
    "    PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset(char const *,PoDoFo::PdfFontMetrics *)\n"
    "    PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset(PoDoFo::PdfInputDevice *,PoDoFo::PdfFontMetrics *,PoDoFo::PdfFontTTFSubset::EFontFileType,unsigned short)\n"
    "    PoDoFo::PdfFontTTFSubset::PdfFontTTFSubset(PoDoFo::PdfInputDevice *,PoDoFo::PdfFontMetrics *,PoDoFo::PdfFontTTFSubset::EFontFileType)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfFontTTFSubset_BuildFont(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontTTFSubset *arg1 = (PoDoFo::PdfFontTTFSubset *) 0 ;
  PoDoFo::PdfOutputDevice *arg2 = (PoDoFo::PdfOutputDevice *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontTTFSubset::BuildFont",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::BuildFont",1,"PoDoFo::PdfFontTTFSubset *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::BuildFont",2,"PoDoFo::PdfOutputDevice *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontTTFSubset,0))){
    SWIG_fail_ptr("PdfFontTTFSubset_BuildFont",1,SWIGTYPE_p_PoDoFo__PdfFontTTFSubset);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfOutputDevice,0))){
    SWIG_fail_ptr("PdfFontTTFSubset_BuildFont",2,SWIGTYPE_p_PoDoFo__PdfOutputDevice);
  }
  
  {
    try {
      (arg1)->BuildFont(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontTTFSubset_AddGlyph(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontTTFSubset *arg1 = (PoDoFo::PdfFontTTFSubset *) 0 ;
  unsigned short arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontTTFSubset::AddGlyph",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::AddGlyph",1,"PoDoFo::PdfFontTTFSubset *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::AddGlyph",2,"unsigned short");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontTTFSubset,0))){
    SWIG_fail_ptr("PdfFontTTFSubset_AddGlyph",1,SWIGTYPE_p_PoDoFo__PdfFontTTFSubset);
  }
  
  SWIG_contract_assert((lua_tonumber(L,2)>=0),"number must not be negative")
  arg2 = (unsigned short)lua_tonumber(L, 2);
  {
    try {
      (arg1)->AddGlyph(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontTTFSubset_AddCharacter(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontTTFSubset *arg1 = (PoDoFo::PdfFontTTFSubset *) 0 ;
  PoDoFo::pdf_utf16be arg2 ;
  PoDoFo::pdf_utf16be *argp2 ;
  
  SWIG_check_num_args("PoDoFo::PdfFontTTFSubset::AddCharacter",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::AddCharacter",1,"PoDoFo::PdfFontTTFSubset *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::AddCharacter",2,"PoDoFo::pdf_utf16be");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontTTFSubset,0))){
    SWIG_fail_ptr("PdfFontTTFSubset_AddCharacter",1,SWIGTYPE_p_PoDoFo__PdfFontTTFSubset);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_uint16,0))){
    SWIG_fail_ptr("PdfFontTTFSubset_AddCharacter",2,SWIGTYPE_p_pdf_uint16);
  }
  arg2 = *argp2;
  
  {
    try {
      (arg1)->AddCharacter(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfFontTTFSubset_GetSize(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFontTTFSubset *arg1 = (PoDoFo::PdfFontTTFSubset *) 0 ;
  size_t result;
  
  SWIG_check_num_args("PoDoFo::PdfFontTTFSubset::GetSize",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfFontTTFSubset::GetSize",1,"PoDoFo::PdfFontTTFSubset const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfFontTTFSubset,0))){
    SWIG_fail_ptr("PdfFontTTFSubset_GetSize",1,SWIGTYPE_p_PoDoFo__PdfFontTTFSubset);
  }
  
  {
    try {
      result = ((PoDoFo::PdfFontTTFSubset const *)arg1)->GetSize();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfFontTTFSubset(void *obj) {
PoDoFo::PdfFontTTFSubset *arg1 = (PoDoFo::PdfFontTTFSubset *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfFontTTFSubset(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfFontTTFSubset);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfFontTTFSubset_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfFontTTFSubset_methods[]= {
    { "BuildFont", _wrap_PdfFontTTFSubset_BuildFont},
    { "AddGlyph", _wrap_PdfFontTTFSubset_AddGlyph},
    { "AddCharacter", _wrap_PdfFontTTFSubset_AddCharacter},
    { "GetSize", _wrap_PdfFontTTFSubset_GetSize},
    {0,0}
};
static swig_lua_method swig_PdfFontTTFSubset_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfFontTTFSubset_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfFontTTFSubset_Sf_SwigStatic_constants[]= {
    {SWIG_LUA_CONSTTAB_INT("eFontFileType_TTF", PoDoFo::PdfFontTTFSubset::eFontFileType_TTF)},
    {SWIG_LUA_CONSTTAB_INT("eFontFileType_TTC", PoDoFo::PdfFontTTFSubset::eFontFileType_TTC)},
    {SWIG_LUA_CONSTTAB_INT("eFontFileType_OTF", PoDoFo::PdfFontTTFSubset::eFontFileType_OTF)},
    {SWIG_LUA_CONSTTAB_INT("eFontFileType_Unknown", PoDoFo::PdfFontTTFSubset::eFontFileType_Unknown)},
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfFontTTFSubset_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfFontTTFSubset_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfFontTTFSubset_Sf_SwigStatic = {
    "PdfFontTTFSubset",
    swig_PdfFontTTFSubset_Sf_SwigStatic_methods,
    swig_PdfFontTTFSubset_Sf_SwigStatic_attributes,
    swig_PdfFontTTFSubset_Sf_SwigStatic_constants,
    swig_PdfFontTTFSubset_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfFontTTFSubset_bases[] = {0};
static const char *swig_PdfFontTTFSubset_base_names[] = {0};
static swig_lua_class _wrap_class_PdfFontTTFSubset = { "PdfFontTTFSubset", "PdfFontTTFSubset", &SWIGTYPE_p_PoDoFo__PdfFontTTFSubset,_proxy__wrap_new_PdfFontTTFSubset, swig_delete_PdfFontTTFSubset, swig_PdfFontTTFSubset_methods, swig_PdfFontTTFSubset_attributes, &swig_PdfFontTTFSubset_Sf_SwigStatic, swig_PdfFontTTFSubset_meta, swig_PdfFontTTFSubset_bases, swig_PdfFontTTFSubset_base_names };

static void swig_delete_PdfFunction(void *obj) {
PoDoFo::PdfFunction *arg1 = (PoDoFo::PdfFunction *) obj;
delete arg1;
}
static swig_lua_attribute swig_PdfFunction_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfFunction_methods[]= {
    {0,0}
};
static swig_lua_method swig_PdfFunction_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfFunction_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfFunction_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfFunction_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfFunction_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfFunction_Sf_SwigStatic = {
    "PdfFunction",
    swig_PdfFunction_Sf_SwigStatic_methods,
    swig_PdfFunction_Sf_SwigStatic_attributes,
    swig_PdfFunction_Sf_SwigStatic_constants,
    swig_PdfFunction_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfFunction_bases[] = {0,0};
static const char *swig_PdfFunction_base_names[] = {"PoDoFo::PdfElement *",0};
static swig_lua_class _wrap_class_PdfFunction = { "PdfFunction", "PdfFunction", &SWIGTYPE_p_PoDoFo__PdfFunction,0, swig_delete_PdfFunction, swig_PdfFunction_methods, swig_PdfFunction_attributes, &swig_PdfFunction_Sf_SwigStatic, swig_PdfFunction_meta, swig_PdfFunction_bases, swig_PdfFunction_base_names };

static int _wrap_new_PdfSampledFunction__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfArray *arg1 = 0 ;
  PoDoFo::PdfArray *arg2 = 0 ;
  PoDoFo::PdfFunction::Sample *arg3 = 0 ;
  PoDoFo::PdfVecObjects *arg4 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfSampledFunction *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSampledFunction::PdfSampledFunction",4,4)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfSampledFunction::PdfSampledFunction",1,"PoDoFo::PdfArray const &");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfSampledFunction::PdfSampledFunction",2,"PoDoFo::PdfArray const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfSampledFunction::PdfSampledFunction",3,"PoDoFo::PdfFunction::Sample const &");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfSampledFunction::PdfSampledFunction",4,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfSampledFunction",1,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfSampledFunction",2,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_std__listT_char_t,0))){
    SWIG_fail_ptr("new_PdfSampledFunction",3,SWIGTYPE_p_std__listT_char_t);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfSampledFunction",4,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfSampledFunction *)new PoDoFo::PdfSampledFunction((PoDoFo::PdfArray const &)*arg1,(PoDoFo::PdfArray const &)*arg2,(PoDoFo::PdfFunction::Sample const &)*arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfSampledFunction,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfSampledFunction__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfArray *arg1 = 0 ;
  PoDoFo::PdfArray *arg2 = 0 ;
  PoDoFo::PdfFunction::Sample *arg3 = 0 ;
  PoDoFo::PdfDocument *arg4 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfSampledFunction *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSampledFunction::PdfSampledFunction",4,4)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfSampledFunction::PdfSampledFunction",1,"PoDoFo::PdfArray const &");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfSampledFunction::PdfSampledFunction",2,"PoDoFo::PdfArray const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfSampledFunction::PdfSampledFunction",3,"PoDoFo::PdfFunction::Sample const &");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfSampledFunction::PdfSampledFunction",4,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfSampledFunction",1,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfSampledFunction",2,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_std__listT_char_t,0))){
    SWIG_fail_ptr("new_PdfSampledFunction",3,SWIGTYPE_p_std__listT_char_t);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfSampledFunction",4,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfSampledFunction *)new PoDoFo::PdfSampledFunction((PoDoFo::PdfArray const &)*arg1,(PoDoFo::PdfArray const &)*arg2,(PoDoFo::PdfFunction::Sample const &)*arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfSampledFunction,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfSampledFunction(lua_State* L) {
  int argc;
  int argv[5]={
    1,2,3,4,5
  };
  
  argc = lua_gettop(L);
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_std__listT_char_t, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_new_PdfSampledFunction__SWIG_0(L);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_std__listT_char_t, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_new_PdfSampledFunction__SWIG_1(L);
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfSampledFunction'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfSampledFunction::PdfSampledFunction(PoDoFo::PdfArray const &,PoDoFo::PdfArray const &,PoDoFo::PdfFunction::Sample const &,PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfSampledFunction::PdfSampledFunction(PoDoFo::PdfArray const &,PoDoFo::PdfArray const &,PoDoFo::PdfFunction::Sample const &,PoDoFo::PdfDocument *)\n");
  lua_error(L);return 0;
}


static void swig_delete_PdfSampledFunction(void *obj) {
PoDoFo::PdfSampledFunction *arg1 = (PoDoFo::PdfSampledFunction *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfSampledFunction(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfSampledFunction);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfSampledFunction_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfSampledFunction_methods[]= {
    {0,0}
};
static swig_lua_method swig_PdfSampledFunction_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfSampledFunction_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfSampledFunction_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfSampledFunction_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfSampledFunction_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfSampledFunction_Sf_SwigStatic = {
    "PdfSampledFunction",
    swig_PdfSampledFunction_Sf_SwigStatic_methods,
    swig_PdfSampledFunction_Sf_SwigStatic_attributes,
    swig_PdfSampledFunction_Sf_SwigStatic_constants,
    swig_PdfSampledFunction_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfSampledFunction_bases[] = {0,0};
static const char *swig_PdfSampledFunction_base_names[] = {"PoDoFo::PdfFunction *",0};
static swig_lua_class _wrap_class_PdfSampledFunction = { "PdfSampledFunction", "PdfSampledFunction", &SWIGTYPE_p_PoDoFo__PdfSampledFunction,_proxy__wrap_new_PdfSampledFunction, swig_delete_PdfSampledFunction, swig_PdfSampledFunction_methods, swig_PdfSampledFunction_attributes, &swig_PdfSampledFunction_Sf_SwigStatic, swig_PdfSampledFunction_meta, swig_PdfSampledFunction_bases, swig_PdfSampledFunction_base_names };

static int _wrap_new_PdfExponentialFunction__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfArray *arg1 = 0 ;
  PoDoFo::PdfArray *arg2 = 0 ;
  PoDoFo::PdfArray *arg3 = 0 ;
  double arg4 ;
  PoDoFo::PdfVecObjects *arg5 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfExponentialFunction *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfExponentialFunction::PdfExponentialFunction",5,5)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfExponentialFunction::PdfExponentialFunction",1,"PoDoFo::PdfArray const &");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfExponentialFunction::PdfExponentialFunction",2,"PoDoFo::PdfArray const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfExponentialFunction::PdfExponentialFunction",3,"PoDoFo::PdfArray const &");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfExponentialFunction::PdfExponentialFunction",4,"double");
  if(!SWIG_isptrtype(L,5)) SWIG_fail_arg("PoDoFo::PdfExponentialFunction::PdfExponentialFunction",5,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfExponentialFunction",1,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfExponentialFunction",2,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfExponentialFunction",3,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  arg4 = (double)lua_tonumber(L, 4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&arg5,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfExponentialFunction",5,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfExponentialFunction *)new PoDoFo::PdfExponentialFunction((PoDoFo::PdfArray const &)*arg1,(PoDoFo::PdfArray const &)*arg2,(PoDoFo::PdfArray const &)*arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfExponentialFunction,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfExponentialFunction__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfArray *arg1 = 0 ;
  PoDoFo::PdfArray *arg2 = 0 ;
  PoDoFo::PdfArray *arg3 = 0 ;
  double arg4 ;
  PoDoFo::PdfDocument *arg5 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfExponentialFunction *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfExponentialFunction::PdfExponentialFunction",5,5)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfExponentialFunction::PdfExponentialFunction",1,"PoDoFo::PdfArray const &");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfExponentialFunction::PdfExponentialFunction",2,"PoDoFo::PdfArray const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfExponentialFunction::PdfExponentialFunction",3,"PoDoFo::PdfArray const &");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfExponentialFunction::PdfExponentialFunction",4,"double");
  if(!SWIG_isptrtype(L,5)) SWIG_fail_arg("PoDoFo::PdfExponentialFunction::PdfExponentialFunction",5,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfExponentialFunction",1,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfExponentialFunction",2,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfExponentialFunction",3,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  arg4 = (double)lua_tonumber(L, 4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&arg5,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfExponentialFunction",5,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfExponentialFunction *)new PoDoFo::PdfExponentialFunction((PoDoFo::PdfArray const &)*arg1,(PoDoFo::PdfArray const &)*arg2,(PoDoFo::PdfArray const &)*arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfExponentialFunction,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfExponentialFunction(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              void *ptr;
              if (SWIG_isptrtype(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              return _wrap_new_PdfExponentialFunction__SWIG_0(L);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              void *ptr;
              if (SWIG_isptrtype(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              return _wrap_new_PdfExponentialFunction__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfExponentialFunction'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfExponentialFunction::PdfExponentialFunction(PoDoFo::PdfArray const &,PoDoFo::PdfArray const &,PoDoFo::PdfArray const &,double,PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfExponentialFunction::PdfExponentialFunction(PoDoFo::PdfArray const &,PoDoFo::PdfArray const &,PoDoFo::PdfArray const &,double,PoDoFo::PdfDocument *)\n");
  lua_error(L);return 0;
}


static void swig_delete_PdfExponentialFunction(void *obj) {
PoDoFo::PdfExponentialFunction *arg1 = (PoDoFo::PdfExponentialFunction *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfExponentialFunction(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfExponentialFunction);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfExponentialFunction_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfExponentialFunction_methods[]= {
    {0,0}
};
static swig_lua_method swig_PdfExponentialFunction_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfExponentialFunction_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfExponentialFunction_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfExponentialFunction_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfExponentialFunction_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfExponentialFunction_Sf_SwigStatic = {
    "PdfExponentialFunction",
    swig_PdfExponentialFunction_Sf_SwigStatic_methods,
    swig_PdfExponentialFunction_Sf_SwigStatic_attributes,
    swig_PdfExponentialFunction_Sf_SwigStatic_constants,
    swig_PdfExponentialFunction_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfExponentialFunction_bases[] = {0,0};
static const char *swig_PdfExponentialFunction_base_names[] = {"PoDoFo::PdfFunction *",0};
static swig_lua_class _wrap_class_PdfExponentialFunction = { "PdfExponentialFunction", "PdfExponentialFunction", &SWIGTYPE_p_PoDoFo__PdfExponentialFunction,_proxy__wrap_new_PdfExponentialFunction, swig_delete_PdfExponentialFunction, swig_PdfExponentialFunction_methods, swig_PdfExponentialFunction_attributes, &swig_PdfExponentialFunction_Sf_SwigStatic, swig_PdfExponentialFunction_meta, swig_PdfExponentialFunction_bases, swig_PdfExponentialFunction_base_names };

static int _wrap_new_PdfStitchingFunction__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFunction::List *arg1 = 0 ;
  PoDoFo::PdfArray *arg2 = 0 ;
  PoDoFo::PdfArray *arg3 = 0 ;
  PoDoFo::PdfArray *arg4 = 0 ;
  PoDoFo::PdfVecObjects *arg5 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfStitchingFunction *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfStitchingFunction::PdfStitchingFunction",5,5)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfStitchingFunction::PdfStitchingFunction",1,"PoDoFo::PdfFunction::List const &");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfStitchingFunction::PdfStitchingFunction",2,"PoDoFo::PdfArray const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfStitchingFunction::PdfStitchingFunction",3,"PoDoFo::PdfArray const &");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfStitchingFunction::PdfStitchingFunction",4,"PoDoFo::PdfArray const &");
  if(!SWIG_isptrtype(L,5)) SWIG_fail_arg("PoDoFo::PdfStitchingFunction::PdfStitchingFunction",5,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_std__listT_PoDoFo__PdfFunction_t,0))){
    SWIG_fail_ptr("new_PdfStitchingFunction",1,SWIGTYPE_p_std__listT_PoDoFo__PdfFunction_t);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfStitchingFunction",2,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfStitchingFunction",3,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfStitchingFunction",4,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&arg5,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfStitchingFunction",5,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfStitchingFunction *)new PoDoFo::PdfStitchingFunction((PoDoFo::PdfFunction::List const &)*arg1,(PoDoFo::PdfArray const &)*arg2,(PoDoFo::PdfArray const &)*arg3,(PoDoFo::PdfArray const &)*arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfStitchingFunction,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfStitchingFunction__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfFunction::List *arg1 = 0 ;
  PoDoFo::PdfArray *arg2 = 0 ;
  PoDoFo::PdfArray *arg3 = 0 ;
  PoDoFo::PdfArray *arg4 = 0 ;
  PoDoFo::PdfDocument *arg5 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfStitchingFunction *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfStitchingFunction::PdfStitchingFunction",5,5)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfStitchingFunction::PdfStitchingFunction",1,"PoDoFo::PdfFunction::List const &");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfStitchingFunction::PdfStitchingFunction",2,"PoDoFo::PdfArray const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfStitchingFunction::PdfStitchingFunction",3,"PoDoFo::PdfArray const &");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfStitchingFunction::PdfStitchingFunction",4,"PoDoFo::PdfArray const &");
  if(!SWIG_isptrtype(L,5)) SWIG_fail_arg("PoDoFo::PdfStitchingFunction::PdfStitchingFunction",5,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_std__listT_PoDoFo__PdfFunction_t,0))){
    SWIG_fail_ptr("new_PdfStitchingFunction",1,SWIGTYPE_p_std__listT_PoDoFo__PdfFunction_t);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfStitchingFunction",2,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfStitchingFunction",3,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfStitchingFunction",4,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&arg5,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfStitchingFunction",5,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfStitchingFunction *)new PoDoFo::PdfStitchingFunction((PoDoFo::PdfFunction::List const &)*arg1,(PoDoFo::PdfArray const &)*arg2,(PoDoFo::PdfArray const &)*arg3,(PoDoFo::PdfArray const &)*arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfStitchingFunction,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfStitchingFunction(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_std__listT_PoDoFo__PdfFunction_t, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (lua_isuserdata(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              void *ptr;
              if (SWIG_isptrtype(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              return _wrap_new_PdfStitchingFunction__SWIG_0(L);
            }
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_std__listT_PoDoFo__PdfFunction_t, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (lua_isuserdata(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              void *ptr;
              if (SWIG_isptrtype(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              return _wrap_new_PdfStitchingFunction__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfStitchingFunction'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfStitchingFunction::PdfStitchingFunction(PoDoFo::PdfFunction::List const &,PoDoFo::PdfArray const &,PoDoFo::PdfArray const &,PoDoFo::PdfArray const &,PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfStitchingFunction::PdfStitchingFunction(PoDoFo::PdfFunction::List const &,PoDoFo::PdfArray const &,PoDoFo::PdfArray const &,PoDoFo::PdfArray const &,PoDoFo::PdfDocument *)\n");
  lua_error(L);return 0;
}


static void swig_delete_PdfStitchingFunction(void *obj) {
PoDoFo::PdfStitchingFunction *arg1 = (PoDoFo::PdfStitchingFunction *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfStitchingFunction(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfStitchingFunction);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfStitchingFunction_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfStitchingFunction_methods[]= {
    {0,0}
};
static swig_lua_method swig_PdfStitchingFunction_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfStitchingFunction_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfStitchingFunction_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfStitchingFunction_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfStitchingFunction_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfStitchingFunction_Sf_SwigStatic = {
    "PdfStitchingFunction",
    swig_PdfStitchingFunction_Sf_SwigStatic_methods,
    swig_PdfStitchingFunction_Sf_SwigStatic_attributes,
    swig_PdfStitchingFunction_Sf_SwigStatic_constants,
    swig_PdfStitchingFunction_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfStitchingFunction_bases[] = {0,0};
static const char *swig_PdfStitchingFunction_base_names[] = {"PoDoFo::PdfFunction *",0};
static swig_lua_class _wrap_class_PdfStitchingFunction = { "PdfStitchingFunction", "PdfStitchingFunction", &SWIGTYPE_p_PoDoFo__PdfStitchingFunction,_proxy__wrap_new_PdfStitchingFunction, swig_delete_PdfStitchingFunction, swig_PdfStitchingFunction_methods, swig_PdfStitchingFunction_attributes, &swig_PdfStitchingFunction_Sf_SwigStatic, swig_PdfStitchingFunction_meta, swig_PdfStitchingFunction_bases, swig_PdfStitchingFunction_base_names };

static int _wrap_new_PdfHintStream(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfVecObjects *arg1 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfPagesTree *arg2 = (PoDoFo::PdfPagesTree *) 0 ;
  PoDoFo::NonPublic::PdfHintStream *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::NonPublic::PdfHintStream::PdfHintStream",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::NonPublic::PdfHintStream::PdfHintStream",1,"PoDoFo::PdfVecObjects *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::NonPublic::PdfHintStream::PdfHintStream",2,"PoDoFo::PdfPagesTree *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfHintStream",1,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfPagesTree,0))){
    SWIG_fail_ptr("new_PdfHintStream",2,SWIGTYPE_p_PoDoFo__PdfPagesTree);
  }
  
  {
    try {
      result = (PoDoFo::NonPublic::PdfHintStream *)new PoDoFo::NonPublic::PdfHintStream(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__NonPublic__PdfHintStream,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfHintStream_WriteUInt16(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::NonPublic::PdfHintStream *arg1 = (PoDoFo::NonPublic::PdfHintStream *) 0 ;
  pdf_uint16 arg2 ;
  pdf_uint16 *argp2 ;
  
  SWIG_check_num_args("PoDoFo::NonPublic::PdfHintStream::WriteUInt16",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::NonPublic::PdfHintStream::WriteUInt16",1,"PoDoFo::NonPublic::PdfHintStream *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::NonPublic::PdfHintStream::WriteUInt16",2,"pdf_uint16");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__NonPublic__PdfHintStream,0))){
    SWIG_fail_ptr("PdfHintStream_WriteUInt16",1,SWIGTYPE_p_PoDoFo__NonPublic__PdfHintStream);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_uint16,0))){
    SWIG_fail_ptr("PdfHintStream_WriteUInt16",2,SWIGTYPE_p_pdf_uint16);
  }
  arg2 = *argp2;
  
  {
    try {
      (arg1)->WriteUInt16(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfHintStream_WriteUInt32(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::NonPublic::PdfHintStream *arg1 = (PoDoFo::NonPublic::PdfHintStream *) 0 ;
  pdf_uint32 arg2 ;
  pdf_uint32 *argp2 ;
  
  SWIG_check_num_args("PoDoFo::NonPublic::PdfHintStream::WriteUInt32",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::NonPublic::PdfHintStream::WriteUInt32",1,"PoDoFo::NonPublic::PdfHintStream *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::NonPublic::PdfHintStream::WriteUInt32",2,"pdf_uint32");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__NonPublic__PdfHintStream,0))){
    SWIG_fail_ptr("PdfHintStream_WriteUInt32",1,SWIGTYPE_p_PoDoFo__NonPublic__PdfHintStream);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_uint32,0))){
    SWIG_fail_ptr("PdfHintStream_WriteUInt32",2,SWIGTYPE_p_pdf_uint32);
  }
  arg2 = *argp2;
  
  {
    try {
      (arg1)->WriteUInt32(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfHintStream(void *obj) {
PoDoFo::NonPublic::PdfHintStream *arg1 = (PoDoFo::NonPublic::PdfHintStream *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfHintStream(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfHintStream);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfHintStream_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfHintStream_methods[]= {
    { "WriteUInt16", _wrap_PdfHintStream_WriteUInt16},
    { "WriteUInt32", _wrap_PdfHintStream_WriteUInt32},
    {0,0}
};
static swig_lua_method swig_PdfHintStream_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfHintStream_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfHintStream_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfHintStream_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfHintStream_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfHintStream_Sf_SwigStatic = {
    "PdfHintStream",
    swig_PdfHintStream_Sf_SwigStatic_methods,
    swig_PdfHintStream_Sf_SwigStatic_attributes,
    swig_PdfHintStream_Sf_SwigStatic_constants,
    swig_PdfHintStream_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfHintStream_bases[] = {0,0};
static const char *swig_PdfHintStream_base_names[] = {"PoDoFo::PdfElement *",0};
static swig_lua_class _wrap_class_PdfHintStream = { "PdfHintStream", "PdfHintStream", &SWIGTYPE_p_PoDoFo__NonPublic__PdfHintStream,_proxy__wrap_new_PdfHintStream, swig_delete_PdfHintStream, swig_PdfHintStream_methods, swig_PdfHintStream_attributes, &swig_PdfHintStream_Sf_SwigStatic, swig_PdfHintStream_meta, swig_PdfHintStream_bases, swig_PdfHintStream_base_names };

static int _wrap_new_PdfIdentityEncoding__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  int arg1 ;
  int arg2 ;
  bool arg3 ;
  PoDoFo::PdfObject *arg4 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfIdentityEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding",4,4)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding",1,"int");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding",2,"int");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding",3,"bool");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding",4,"PoDoFo::PdfObject *");
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfIdentityEncoding",4,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfIdentityEncoding *)new PoDoFo::PdfIdentityEncoding(arg1,arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfIdentityEncoding,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfIdentityEncoding__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  int arg1 ;
  int arg2 ;
  bool arg3 ;
  PoDoFo::PdfIdentityEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding",3,3)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding",1,"int");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding",2,"int");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding",3,"bool");
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (lua_toboolean(L, 3)!=0);
  {
    try {
      result = (PoDoFo::PdfIdentityEncoding *)new PoDoFo::PdfIdentityEncoding(arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfIdentityEncoding,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfIdentityEncoding__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  int arg1 ;
  int arg2 ;
  PoDoFo::PdfIdentityEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding",2,2)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding",1,"int");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding",2,"int");
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = (PoDoFo::PdfIdentityEncoding *)new PoDoFo::PdfIdentityEncoding(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfIdentityEncoding,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfIdentityEncoding__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  int arg1 ;
  PoDoFo::PdfIdentityEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding",1,1)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding",1,"int");
  arg1 = (int)lua_tonumber(L, 1);
  {
    try {
      result = (PoDoFo::PdfIdentityEncoding *)new PoDoFo::PdfIdentityEncoding(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfIdentityEncoding,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfIdentityEncoding__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfIdentityEncoding *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding",0,0)
  {
    try {
      result = (PoDoFo::PdfIdentityEncoding *)new PoDoFo::PdfIdentityEncoding();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfIdentityEncoding,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfIdentityEncoding(lua_State* L) {
  int argc;
  int argv[5]={
    1,2,3,4,5
  };
  
  argc = lua_gettop(L);
  if (argc == 0) {
    return _wrap_new_PdfIdentityEncoding__SWIG_4(L);
  }
  if (argc == 1) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      return _wrap_new_PdfIdentityEncoding__SWIG_3(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_new_PdfIdentityEncoding__SWIG_2(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          return _wrap_new_PdfIdentityEncoding__SWIG_1(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_new_PdfIdentityEncoding__SWIG_0(L);
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfIdentityEncoding'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding(int,int,bool,PoDoFo::PdfObject *)\n"
    "    PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding(int,int,bool)\n"
    "    PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding(int,int)\n"
    "    PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding(int)\n"
    "    PoDoFo::PdfIdentityEncoding::PdfIdentityEncoding()\n");
  lua_error(L);return 0;
}


static int _wrap_PdfIdentityEncoding_AddToDictionary(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfIdentityEncoding *arg1 = (PoDoFo::PdfIdentityEncoding *) 0 ;
  PoDoFo::PdfDictionary *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfIdentityEncoding::AddToDictionary",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::AddToDictionary",1,"PoDoFo::PdfIdentityEncoding const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::AddToDictionary",2,"PoDoFo::PdfDictionary &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfIdentityEncoding,0))){
    SWIG_fail_ptr("PdfIdentityEncoding_AddToDictionary",1,SWIGTYPE_p_PoDoFo__PdfIdentityEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfDictionary,0))){
    SWIG_fail_ptr("PdfIdentityEncoding_AddToDictionary",2,SWIGTYPE_p_PoDoFo__PdfDictionary);
  }
  
  {
    try {
      ((PoDoFo::PdfIdentityEncoding const *)arg1)->AddToDictionary(*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfIdentityEncoding_ConvertToUnicode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfIdentityEncoding *arg1 = (PoDoFo::PdfIdentityEncoding *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  PoDoFo::PdfFont *arg3 = (PoDoFo::PdfFont *) 0 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfIdentityEncoding::ConvertToUnicode",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::ConvertToUnicode",1,"PoDoFo::PdfIdentityEncoding const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::ConvertToUnicode",2,"PoDoFo::PdfString const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::ConvertToUnicode",3,"PoDoFo::PdfFont const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfIdentityEncoding,0))){
    SWIG_fail_ptr("PdfIdentityEncoding_ConvertToUnicode",1,SWIGTYPE_p_PoDoFo__PdfIdentityEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfIdentityEncoding_ConvertToUnicode",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfIdentityEncoding_ConvertToUnicode",3,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      result = ((PoDoFo::PdfIdentityEncoding const *)arg1)->ConvertToUnicode((PoDoFo::PdfString const &)*arg2,(PoDoFo::PdfFont const *)arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfIdentityEncoding_ConvertToEncoding(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfIdentityEncoding *arg1 = (PoDoFo::PdfIdentityEncoding *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  PoDoFo::PdfFont *arg3 = (PoDoFo::PdfFont *) 0 ;
  PdfRefCountedBuffer result;
  
  SWIG_check_num_args("PoDoFo::PdfIdentityEncoding::ConvertToEncoding",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::ConvertToEncoding",1,"PoDoFo::PdfIdentityEncoding const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::ConvertToEncoding",2,"PoDoFo::PdfString const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::ConvertToEncoding",3,"PoDoFo::PdfFont const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfIdentityEncoding,0))){
    SWIG_fail_ptr("PdfIdentityEncoding_ConvertToEncoding",1,SWIGTYPE_p_PoDoFo__PdfIdentityEncoding);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfIdentityEncoding_ConvertToEncoding",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfIdentityEncoding_ConvertToEncoding",3,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      result = ((PoDoFo::PdfIdentityEncoding const *)arg1)->ConvertToEncoding((PoDoFo::PdfString const &)*arg2,(PoDoFo::PdfFont const *)arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PdfRefCountedBuffer * resultptr = new PdfRefCountedBuffer((const PdfRefCountedBuffer &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PdfRefCountedBuffer,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfIdentityEncoding_IsAutoDelete(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfIdentityEncoding *arg1 = (PoDoFo::PdfIdentityEncoding *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfIdentityEncoding::IsAutoDelete",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::IsAutoDelete",1,"PoDoFo::PdfIdentityEncoding const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfIdentityEncoding,0))){
    SWIG_fail_ptr("PdfIdentityEncoding_IsAutoDelete",1,SWIGTYPE_p_PoDoFo__PdfIdentityEncoding);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfIdentityEncoding const *)arg1)->IsAutoDelete();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfIdentityEncoding_IsSingleByteEncoding(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfIdentityEncoding *arg1 = (PoDoFo::PdfIdentityEncoding *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfIdentityEncoding::IsSingleByteEncoding",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::IsSingleByteEncoding",1,"PoDoFo::PdfIdentityEncoding const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfIdentityEncoding,0))){
    SWIG_fail_ptr("PdfIdentityEncoding_IsSingleByteEncoding",1,SWIGTYPE_p_PoDoFo__PdfIdentityEncoding);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfIdentityEncoding const *)arg1)->IsSingleByteEncoding();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfIdentityEncoding_GetCharCode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfIdentityEncoding *arg1 = (PoDoFo::PdfIdentityEncoding *) 0 ;
  int arg2 ;
  PoDoFo::pdf_utf16be result;
  
  SWIG_check_num_args("PoDoFo::PdfIdentityEncoding::GetCharCode",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::GetCharCode",1,"PoDoFo::PdfIdentityEncoding const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfIdentityEncoding::GetCharCode",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfIdentityEncoding,0))){
    SWIG_fail_ptr("PdfIdentityEncoding_GetCharCode",1,SWIGTYPE_p_PoDoFo__PdfIdentityEncoding);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = ((PoDoFo::PdfIdentityEncoding const *)arg1)->GetCharCode(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::pdf_utf16be * resultptr = new PoDoFo::pdf_utf16be((const PoDoFo::pdf_utf16be &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_uint16,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfIdentityEncoding(void *obj) {
PoDoFo::PdfIdentityEncoding *arg1 = (PoDoFo::PdfIdentityEncoding *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfIdentityEncoding(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfIdentityEncoding);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfIdentityEncoding_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfIdentityEncoding_methods[]= {
    { "AddToDictionary", _wrap_PdfIdentityEncoding_AddToDictionary},
    { "ConvertToUnicode", _wrap_PdfIdentityEncoding_ConvertToUnicode},
    { "ConvertToEncoding", _wrap_PdfIdentityEncoding_ConvertToEncoding},
    { "IsAutoDelete", _wrap_PdfIdentityEncoding_IsAutoDelete},
    { "IsSingleByteEncoding", _wrap_PdfIdentityEncoding_IsSingleByteEncoding},
    { "GetCharCode", _wrap_PdfIdentityEncoding_GetCharCode},
    {0,0}
};
static swig_lua_method swig_PdfIdentityEncoding_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfIdentityEncoding_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfIdentityEncoding_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfIdentityEncoding_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfIdentityEncoding_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfIdentityEncoding_Sf_SwigStatic = {
    "PdfIdentityEncoding",
    swig_PdfIdentityEncoding_Sf_SwigStatic_methods,
    swig_PdfIdentityEncoding_Sf_SwigStatic_attributes,
    swig_PdfIdentityEncoding_Sf_SwigStatic_constants,
    swig_PdfIdentityEncoding_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfIdentityEncoding_bases[] = {0};
static const char *swig_PdfIdentityEncoding_base_names[] = {0};
static swig_lua_class _wrap_class_PdfIdentityEncoding = { "PdfIdentityEncoding", "PdfIdentityEncoding", &SWIGTYPE_p_PoDoFo__PdfIdentityEncoding,_proxy__wrap_new_PdfIdentityEncoding, swig_delete_PdfIdentityEncoding, swig_PdfIdentityEncoding_methods, swig_PdfIdentityEncoding_attributes, &swig_PdfIdentityEncoding_Sf_SwigStatic, swig_PdfIdentityEncoding_meta, swig_PdfIdentityEncoding_bases, swig_PdfIdentityEncoding_base_names };

static int _wrap_new_PdfXObject__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = 0 ;
  PoDoFo::PdfDocument *arg2 = (PoDoFo::PdfDocument *) 0 ;
  char *arg3 = (char *) 0 ;
  bool arg4 ;
  PoDoFo::PdfXObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfXObject::PdfXObject",4,4)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",1,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",2,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,3)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",3,"char const *");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",4,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfXObject",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfXObject",2,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg3 = (char *)lua_tostring(L, 3);
  arg4 = (lua_toboolean(L, 4)!=0);
  {
    try {
      result = (PoDoFo::PdfXObject *)new PoDoFo::PdfXObject((PoDoFo::PdfRect const &)*arg1,arg2,(char const *)arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfXObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfXObject__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = 0 ;
  PoDoFo::PdfDocument *arg2 = (PoDoFo::PdfDocument *) 0 ;
  char *arg3 = (char *) 0 ;
  PoDoFo::PdfXObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfXObject::PdfXObject",3,3)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",1,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",2,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,3)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",3,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfXObject",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfXObject",2,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg3 = (char *)lua_tostring(L, 3);
  {
    try {
      result = (PoDoFo::PdfXObject *)new PoDoFo::PdfXObject((PoDoFo::PdfRect const &)*arg1,arg2,(char const *)arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfXObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfXObject__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = 0 ;
  PoDoFo::PdfDocument *arg2 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfXObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfXObject::PdfXObject",2,2)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",1,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",2,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfXObject",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfXObject",2,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfXObject *)new PoDoFo::PdfXObject((PoDoFo::PdfRect const &)*arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfXObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfXObject__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = 0 ;
  PoDoFo::PdfVecObjects *arg2 = (PoDoFo::PdfVecObjects *) 0 ;
  char *arg3 = (char *) 0 ;
  PoDoFo::PdfXObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfXObject::PdfXObject",3,3)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",1,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",2,"PoDoFo::PdfVecObjects *");
  if(!SWIG_lua_isnilstring(L,3)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",3,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfXObject",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfXObject",2,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  arg3 = (char *)lua_tostring(L, 3);
  {
    try {
      result = (PoDoFo::PdfXObject *)new PoDoFo::PdfXObject((PoDoFo::PdfRect const &)*arg1,arg2,(char const *)arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfXObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfXObject__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = 0 ;
  PoDoFo::PdfVecObjects *arg2 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfXObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfXObject::PdfXObject",2,2)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",1,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",2,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfXObject",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfXObject",2,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfXObject *)new PoDoFo::PdfXObject((PoDoFo::PdfRect const &)*arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfXObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfXObject__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = 0 ;
  int arg2 ;
  PoDoFo::PdfDocument *arg3 = (PoDoFo::PdfDocument *) 0 ;
  char *arg4 = (char *) 0 ;
  bool arg5 ;
  PoDoFo::PdfXObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfXObject::PdfXObject",5,5)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",1,"PoDoFo::PdfMemDocument const &");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",2,"int");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",3,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,4)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",4,"char const *");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",5,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("new_PdfXObject",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfXObject",3,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg4 = (char *)lua_tostring(L, 4);
  arg5 = (lua_toboolean(L, 5)!=0);
  {
    try {
      result = (PoDoFo::PdfXObject *)new PoDoFo::PdfXObject((PoDoFo::PdfMemDocument const &)*arg1,arg2,arg3,(char const *)arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfXObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfXObject__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = 0 ;
  int arg2 ;
  PoDoFo::PdfDocument *arg3 = (PoDoFo::PdfDocument *) 0 ;
  char *arg4 = (char *) 0 ;
  PoDoFo::PdfXObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfXObject::PdfXObject",4,4)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",1,"PoDoFo::PdfMemDocument const &");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",2,"int");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",3,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,4)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",4,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("new_PdfXObject",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfXObject",3,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg4 = (char *)lua_tostring(L, 4);
  {
    try {
      result = (PoDoFo::PdfXObject *)new PoDoFo::PdfXObject((PoDoFo::PdfMemDocument const &)*arg1,arg2,arg3,(char const *)arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfXObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfXObject__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = 0 ;
  int arg2 ;
  PoDoFo::PdfDocument *arg3 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfXObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfXObject::PdfXObject",3,3)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",1,"PoDoFo::PdfMemDocument const &");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",2,"int");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",3,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("new_PdfXObject",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfXObject",3,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfXObject *)new PoDoFo::PdfXObject((PoDoFo::PdfMemDocument const &)*arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfXObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfXObject__SWIG_8(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  bool arg4 ;
  PoDoFo::PdfXObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfXObject::PdfXObject",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",1,"PoDoFo::PdfDocument *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",2,"int");
  if(!SWIG_lua_isnilstring(L,3)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",3,"char const *");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",4,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfXObject",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (char *)lua_tostring(L, 3);
  arg4 = (lua_toboolean(L, 4)!=0);
  {
    try {
      result = (PoDoFo::PdfXObject *)new PoDoFo::PdfXObject(arg1,arg2,(char const *)arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfXObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfXObject__SWIG_9(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  PoDoFo::PdfXObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfXObject::PdfXObject",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",1,"PoDoFo::PdfDocument *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",2,"int");
  if(!SWIG_lua_isnilstring(L,3)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",3,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfXObject",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (char *)lua_tostring(L, 3);
  {
    try {
      result = (PoDoFo::PdfXObject *)new PoDoFo::PdfXObject(arg1,arg2,(char const *)arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfXObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfXObject__SWIG_10(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  int arg2 ;
  PoDoFo::PdfXObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfXObject::PdfXObject",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",1,"PoDoFo::PdfDocument *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfXObject",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = (PoDoFo::PdfXObject *)new PoDoFo::PdfXObject(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfXObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfXObject__SWIG_11(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfXObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfXObject::PdfXObject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfXObject::PdfXObject",1,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfXObject",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfXObject *)new PoDoFo::PdfXObject(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfXObject,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfXObject(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfXObject__SWIG_11(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfXObject__SWIG_4(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_new_PdfXObject__SWIG_10(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfXObject__SWIG_2(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfXObject__SWIG_7(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = SWIG_lua_isnilstring(L,argv[2]);
        }
        if (_v) {
          return _wrap_new_PdfXObject__SWIG_9(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = SWIG_lua_isnilstring(L,argv[2]);
        }
        if (_v) {
          return _wrap_new_PdfXObject__SWIG_3(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = SWIG_lua_isnilstring(L,argv[2]);
        }
        if (_v) {
          return _wrap_new_PdfXObject__SWIG_1(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = SWIG_lua_isnilstring(L,argv[3]);
          }
          if (_v) {
            return _wrap_new_PdfXObject__SWIG_6(L);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = SWIG_lua_isnilstring(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            return _wrap_new_PdfXObject__SWIG_0(L);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = SWIG_lua_isnilstring(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            return _wrap_new_PdfXObject__SWIG_8(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = SWIG_lua_isnilstring(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              return _wrap_new_PdfXObject__SWIG_5(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfXObject'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfXObject::PdfXObject(PoDoFo::PdfRect const &,PoDoFo::PdfDocument *,char const *,bool)\n"
    "    PoDoFo::PdfXObject::PdfXObject(PoDoFo::PdfRect const &,PoDoFo::PdfDocument *,char const *)\n"
    "    PoDoFo::PdfXObject::PdfXObject(PoDoFo::PdfRect const &,PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfXObject::PdfXObject(PoDoFo::PdfRect const &,PoDoFo::PdfVecObjects *,char const *)\n"
    "    PoDoFo::PdfXObject::PdfXObject(PoDoFo::PdfRect const &,PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfXObject::PdfXObject(PoDoFo::PdfMemDocument const &,int,PoDoFo::PdfDocument *,char const *,bool)\n"
    "    PoDoFo::PdfXObject::PdfXObject(PoDoFo::PdfMemDocument const &,int,PoDoFo::PdfDocument *,char const *)\n"
    "    PoDoFo::PdfXObject::PdfXObject(PoDoFo::PdfMemDocument const &,int,PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfXObject::PdfXObject(PoDoFo::PdfDocument *,int,char const *,bool)\n"
    "    PoDoFo::PdfXObject::PdfXObject(PoDoFo::PdfDocument *,int,char const *)\n"
    "    PoDoFo::PdfXObject::PdfXObject(PoDoFo::PdfDocument *,int)\n"
    "    PoDoFo::PdfXObject::PdfXObject(PoDoFo::PdfObject *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfXObject_GetContents(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfXObject *arg1 = (PoDoFo::PdfXObject *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfXObject::GetContents",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfXObject::GetContents",1,"PoDoFo::PdfXObject const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfXObject_GetContents",1,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfXObject const *)arg1)->GetContents();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfXObject_GetContentsForAppending(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfXObject *arg1 = (PoDoFo::PdfXObject *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfXObject::GetContentsForAppending",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfXObject::GetContentsForAppending",1,"PoDoFo::PdfXObject const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfXObject_GetContentsForAppending",1,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfXObject const *)arg1)->GetContentsForAppending();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfXObject_GetResources(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfXObject *arg1 = (PoDoFo::PdfXObject *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfXObject::GetResources",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfXObject::GetResources",1,"PoDoFo::PdfXObject const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfXObject_GetResources",1,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfXObject const *)arg1)->GetResources();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfXObject_GetPageSize(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfXObject *arg1 = (PoDoFo::PdfXObject *) 0 ;
  PoDoFo::PdfRect result;
  
  SWIG_check_num_args("PoDoFo::PdfXObject::GetPageSize",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfXObject::GetPageSize",1,"PoDoFo::PdfXObject const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfXObject_GetPageSize",1,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  {
    try {
      result = ((PoDoFo::PdfXObject const *)arg1)->GetPageSize();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfRect * resultptr = new PoDoFo::PdfRect((const PoDoFo::PdfRect &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfXObject_GetIdentifier(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfXObject *arg1 = (PoDoFo::PdfXObject *) 0 ;
  PoDoFo::PdfName *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfXObject::GetIdentifier",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfXObject::GetIdentifier",1,"PoDoFo::PdfXObject const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfXObject_GetIdentifier",1,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfName *) &((PoDoFo::PdfXObject const *)arg1)->GetIdentifier();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfName,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfXObject_GetObjectReference(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfXObject *arg1 = (PoDoFo::PdfXObject *) 0 ;
  PoDoFo::PdfReference *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfXObject::GetObjectReference",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfXObject::GetObjectReference",1,"PoDoFo::PdfXObject const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfXObject_GetObjectReference",1,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfReference *) &((PoDoFo::PdfXObject const *)arg1)->GetObjectReference();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfReference,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfXObject(void *obj) {
PoDoFo::PdfXObject *arg1 = (PoDoFo::PdfXObject *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfXObject(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfXObject);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfXObject_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfXObject_methods[]= {
    { "GetContents", _wrap_PdfXObject_GetContents},
    { "GetContentsForAppending", _wrap_PdfXObject_GetContentsForAppending},
    { "GetResources", _wrap_PdfXObject_GetResources},
    { "GetPageSize", _wrap_PdfXObject_GetPageSize},
    { "GetIdentifier", _wrap_PdfXObject_GetIdentifier},
    { "GetObjectReference", _wrap_PdfXObject_GetObjectReference},
    {0,0}
};
static swig_lua_method swig_PdfXObject_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfXObject_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfXObject_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfXObject_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfXObject_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfXObject_Sf_SwigStatic = {
    "PdfXObject",
    swig_PdfXObject_Sf_SwigStatic_methods,
    swig_PdfXObject_Sf_SwigStatic_attributes,
    swig_PdfXObject_Sf_SwigStatic_constants,
    swig_PdfXObject_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfXObject_bases[] = {0,0,0};
static const char *swig_PdfXObject_base_names[] = {"PoDoFo::PdfElement *","PoDoFo::PdfCanvas *",0};
static swig_lua_class _wrap_class_PdfXObject = { "PdfXObject", "PdfXObject", &SWIGTYPE_p_PoDoFo__PdfXObject,_proxy__wrap_new_PdfXObject, swig_delete_PdfXObject, swig_PdfXObject_methods, swig_PdfXObject_attributes, &swig_PdfXObject_Sf_SwigStatic, swig_PdfXObject_meta, swig_PdfXObject_bases, swig_PdfXObject_base_names };

static int _wrap_new_PdfImage__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfVecObjects *arg1 = (PoDoFo::PdfVecObjects *) 0 ;
  char *arg2 = (char *) 0 ;
  PoDoFo::PdfImage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfImage::PdfImage",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::PdfImage",1,"PoDoFo::PdfVecObjects *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfImage::PdfImage",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfImage",1,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  {
    try {
      result = (PoDoFo::PdfImage *)new PoDoFo::PdfImage(arg1,(char const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfImage,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfImage__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfVecObjects *arg1 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfImage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfImage::PdfImage",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::PdfImage",1,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfImage",1,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfImage *)new PoDoFo::PdfImage(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfImage,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfImage__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  PoDoFo::PdfImage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfImage::PdfImage",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::PdfImage",1,"PoDoFo::PdfDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfImage::PdfImage",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfImage",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  {
    try {
      result = (PoDoFo::PdfImage *)new PoDoFo::PdfImage(arg1,(char const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfImage,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfImage__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfImage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfImage::PdfImage",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::PdfImage",1,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfImage",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfImage *)new PoDoFo::PdfImage(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfImage,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfImage__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfImage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfImage::PdfImage",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::PdfImage",1,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfImage",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfImage *)new PoDoFo::PdfImage(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfImage,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfImage(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfImage__SWIG_1(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfImage__SWIG_3(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfImage__SWIG_4(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_new_PdfImage__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_new_PdfImage__SWIG_2(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfImage'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfImage::PdfImage(PoDoFo::PdfVecObjects *,char const *)\n"
    "    PoDoFo::PdfImage::PdfImage(PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfImage::PdfImage(PoDoFo::PdfDocument *,char const *)\n"
    "    PoDoFo::PdfImage::PdfImage(PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfImage::PdfImage(PoDoFo::PdfObject *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfImage_GetSupportedFormats(lua_State* L) {
  int SWIG_arg = 0;
  char **result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfImage::GetSupportedFormats",0,0)
  {
    try {
      result = (char **)PoDoFo::PdfImage::GetSupportedFormats();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_p_char,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfImage_SetImageColorSpace__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfImage *arg1 = (PoDoFo::PdfImage *) 0 ;
  PoDoFo::EPdfColorSpace arg2 ;
  PoDoFo::PdfArray *arg3 = (PoDoFo::PdfArray *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfImage::SetImageColorSpace",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageColorSpace",1,"PoDoFo::PdfImage *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageColorSpace",2,"PoDoFo::EPdfColorSpace");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageColorSpace",3,"PoDoFo::PdfArray const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfImage_SetImageColorSpace",1,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  arg2 = (PoDoFo::EPdfColorSpace)(int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("PdfImage_SetImageColorSpace",3,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  {
    try {
      (arg1)->SetImageColorSpace(arg2,(PoDoFo::PdfArray const *)arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfImage_SetImageColorSpace__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfImage *arg1 = (PoDoFo::PdfImage *) 0 ;
  PoDoFo::EPdfColorSpace arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfImage::SetImageColorSpace",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageColorSpace",1,"PoDoFo::PdfImage *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageColorSpace",2,"PoDoFo::EPdfColorSpace");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfImage_SetImageColorSpace",1,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  arg2 = (PoDoFo::EPdfColorSpace)(int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetImageColorSpace(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfImage_SetImageColorSpace(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfImage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfImage_SetImageColorSpace__SWIG_1(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfImage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_PdfImage_SetImageColorSpace__SWIG_0(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfImage_SetImageColorSpace'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfImage::SetImageColorSpace(PoDoFo::EPdfColorSpace,PoDoFo::PdfArray const *)\n"
    "    PoDoFo::PdfImage::SetImageColorSpace(PoDoFo::EPdfColorSpace)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfImage_SetImageICCProfile__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfImage *arg1 = (PoDoFo::PdfImage *) 0 ;
  PoDoFo::PdfInputStream *arg2 = (PoDoFo::PdfInputStream *) 0 ;
  long arg3 ;
  PoDoFo::EPdfColorSpace arg4 ;
  
  SWIG_check_num_args("PoDoFo::PdfImage::SetImageICCProfile",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageICCProfile",1,"PoDoFo::PdfImage *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageICCProfile",2,"PoDoFo::PdfInputStream *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageICCProfile",3,"long");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageICCProfile",4,"PoDoFo::EPdfColorSpace");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfImage_SetImageICCProfile",1,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfInputStream,0))){
    SWIG_fail_ptr("PdfImage_SetImageICCProfile",2,SWIGTYPE_p_PoDoFo__PdfInputStream);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  arg4 = (PoDoFo::EPdfColorSpace)(int)lua_tonumber(L, 4);
  {
    try {
      (arg1)->SetImageICCProfile(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfImage_SetImageICCProfile__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfImage *arg1 = (PoDoFo::PdfImage *) 0 ;
  PoDoFo::PdfInputStream *arg2 = (PoDoFo::PdfInputStream *) 0 ;
  long arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfImage::SetImageICCProfile",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageICCProfile",1,"PoDoFo::PdfImage *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageICCProfile",2,"PoDoFo::PdfInputStream *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageICCProfile",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfImage_SetImageICCProfile",1,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfInputStream,0))){
    SWIG_fail_ptr("PdfImage_SetImageICCProfile",2,SWIGTYPE_p_PoDoFo__PdfInputStream);
  }
  
  arg3 = (long)lua_tonumber(L, 3);
  {
    try {
      (arg1)->SetImageICCProfile(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfImage_SetImageICCProfile(lua_State* L) {
  int argc;
  int argv[5]={
    1,2,3,4,5
  };
  
  argc = lua_gettop(L);
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfImage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfInputStream, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_PdfImage_SetImageICCProfile__SWIG_1(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfImage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfInputStream, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_PdfImage_SetImageICCProfile__SWIG_0(L);
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfImage_SetImageICCProfile'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfImage::SetImageICCProfile(PoDoFo::PdfInputStream *,long,PoDoFo::EPdfColorSpace)\n"
    "    PoDoFo::PdfImage::SetImageICCProfile(PoDoFo::PdfInputStream *,long)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfImage_SetImageSoftmask(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfImage *arg1 = (PoDoFo::PdfImage *) 0 ;
  PoDoFo::PdfImage *arg2 = (PoDoFo::PdfImage *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfImage::SetImageSoftmask",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageSoftmask",1,"PoDoFo::PdfImage *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageSoftmask",2,"PoDoFo::PdfImage const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfImage_SetImageSoftmask",1,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfImage_SetImageSoftmask",2,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  {
    try {
      (arg1)->SetImageSoftmask((PoDoFo::PdfImage const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfImage_GetWidth(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfImage *arg1 = (PoDoFo::PdfImage *) 0 ;
  double result;
  
  SWIG_check_num_args("PoDoFo::PdfImage::GetWidth",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::GetWidth",1,"PoDoFo::PdfImage const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfImage_GetWidth",1,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  {
    try {
      result = (double)((PoDoFo::PdfImage const *)arg1)->GetWidth();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfImage_GetHeight(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfImage *arg1 = (PoDoFo::PdfImage *) 0 ;
  double result;
  
  SWIG_check_num_args("PoDoFo::PdfImage::GetHeight",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::GetHeight",1,"PoDoFo::PdfImage const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfImage_GetHeight",1,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  {
    try {
      result = (double)((PoDoFo::PdfImage const *)arg1)->GetHeight();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfImage_SetImageData__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfImage *arg1 = (PoDoFo::PdfImage *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  PoDoFo::PdfInputStream *arg5 = (PoDoFo::PdfInputStream *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfImage::SetImageData",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageData",1,"PoDoFo::PdfImage *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageData",2,"unsigned int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageData",3,"unsigned int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageData",4,"unsigned int");
  if(!SWIG_isptrtype(L,5)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageData",5,"PoDoFo::PdfInputStream *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfImage_SetImageData",1,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  SWIG_contract_assert((lua_tonumber(L,2)>=0),"number must not be negative")
  arg2 = (unsigned int)lua_tonumber(L, 2);
  SWIG_contract_assert((lua_tonumber(L,3)>=0),"number must not be negative")
  arg3 = (unsigned int)lua_tonumber(L, 3);
  SWIG_contract_assert((lua_tonumber(L,4)>=0),"number must not be negative")
  arg4 = (unsigned int)lua_tonumber(L, 4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&arg5,SWIGTYPE_p_PoDoFo__PdfInputStream,0))){
    SWIG_fail_ptr("PdfImage_SetImageData",5,SWIGTYPE_p_PoDoFo__PdfInputStream);
  }
  
  {
    try {
      (arg1)->SetImageData(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfImage_SetImageData__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfImage *arg1 = (PoDoFo::PdfImage *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  PoDoFo::PdfInputStream *arg5 = (PoDoFo::PdfInputStream *) 0 ;
  TVecFilters *arg6 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfImage::SetImageData",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageData",1,"PoDoFo::PdfImage *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageData",2,"unsigned int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageData",3,"unsigned int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageData",4,"unsigned int");
  if(!SWIG_isptrtype(L,5)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageData",5,"PoDoFo::PdfInputStream *");
  if(!lua_isuserdata(L,6)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageData",6,"TVecFilters const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfImage_SetImageData",1,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  SWIG_contract_assert((lua_tonumber(L,2)>=0),"number must not be negative")
  arg2 = (unsigned int)lua_tonumber(L, 2);
  SWIG_contract_assert((lua_tonumber(L,3)>=0),"number must not be negative")
  arg3 = (unsigned int)lua_tonumber(L, 3);
  SWIG_contract_assert((lua_tonumber(L,4)>=0),"number must not be negative")
  arg4 = (unsigned int)lua_tonumber(L, 4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&arg5,SWIGTYPE_p_PoDoFo__PdfInputStream,0))){
    SWIG_fail_ptr("PdfImage_SetImageData",5,SWIGTYPE_p_PoDoFo__PdfInputStream);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_TVecFilters,0))){
    SWIG_fail_ptr("PdfImage_SetImageData",6,SWIGTYPE_p_TVecFilters);
  }
  
  {
    try {
      (arg1)->SetImageData(arg2,arg3,arg4,arg5,(TVecFilters const &)*arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfImage_SetImageData(lua_State* L) {
  int argc;
  int argv[7]={
    1,2,3,4,5,6,7
  };
  
  argc = lua_gettop(L);
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfImage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              void *ptr;
              if (SWIG_isptrtype(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfInputStream, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              return _wrap_PdfImage_SetImageData__SWIG_0(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfImage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              void *ptr;
              if (SWIG_isptrtype(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfInputStream, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              {
                void *ptr;
                if (lua_isuserdata(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_TVecFilters, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                return _wrap_PdfImage_SetImageData__SWIG_1(L);
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfImage_SetImageData'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfImage::SetImageData(unsigned int,unsigned int,unsigned int,PoDoFo::PdfInputStream *)\n"
    "    PoDoFo::PdfImage::SetImageData(unsigned int,unsigned int,unsigned int,PoDoFo::PdfInputStream *,TVecFilters const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfImage_SetImageDataRaw(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfImage *arg1 = (PoDoFo::PdfImage *) 0 ;
  unsigned int arg2 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  PoDoFo::PdfInputStream *arg5 = (PoDoFo::PdfInputStream *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfImage::SetImageDataRaw",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageDataRaw",1,"PoDoFo::PdfImage *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageDataRaw",2,"unsigned int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageDataRaw",3,"unsigned int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageDataRaw",4,"unsigned int");
  if(!SWIG_isptrtype(L,5)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageDataRaw",5,"PoDoFo::PdfInputStream *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfImage_SetImageDataRaw",1,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  SWIG_contract_assert((lua_tonumber(L,2)>=0),"number must not be negative")
  arg2 = (unsigned int)lua_tonumber(L, 2);
  SWIG_contract_assert((lua_tonumber(L,3)>=0),"number must not be negative")
  arg3 = (unsigned int)lua_tonumber(L, 3);
  SWIG_contract_assert((lua_tonumber(L,4)>=0),"number must not be negative")
  arg4 = (unsigned int)lua_tonumber(L, 4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&arg5,SWIGTYPE_p_PoDoFo__PdfInputStream,0))){
    SWIG_fail_ptr("PdfImage_SetImageDataRaw",5,SWIGTYPE_p_PoDoFo__PdfInputStream);
  }
  
  {
    try {
      (arg1)->SetImageDataRaw(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfImage_LoadFromFile(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfImage *arg1 = (PoDoFo::PdfImage *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfImage::LoadFromFile",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::LoadFromFile",1,"PoDoFo::PdfImage *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfImage::LoadFromFile",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfImage_LoadFromFile",1,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  {
    try {
      (arg1)->LoadFromFile((char const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfImage_SetImageChromaKeyMask__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfImage *arg1 = (PoDoFo::PdfImage *) 0 ;
  pdf_int64 arg2 ;
  pdf_int64 arg3 ;
  pdf_int64 arg4 ;
  pdf_int64 arg5 ;
  pdf_int64 *argp2 ;
  pdf_int64 *argp3 ;
  pdf_int64 *argp4 ;
  pdf_int64 *argp5 ;
  
  SWIG_check_num_args("PoDoFo::PdfImage::SetImageChromaKeyMask",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageChromaKeyMask",1,"PoDoFo::PdfImage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageChromaKeyMask",2,"pdf_int64");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageChromaKeyMask",3,"pdf_int64");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageChromaKeyMask",4,"pdf_int64");
  if(!lua_isuserdata(L,5)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageChromaKeyMask",5,"pdf_int64");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfImage_SetImageChromaKeyMask",1,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_int64,0))){
    SWIG_fail_ptr("PdfImage_SetImageChromaKeyMask",2,SWIGTYPE_p_pdf_int64);
  }
  arg2 = *argp2;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_pdf_int64,0))){
    SWIG_fail_ptr("PdfImage_SetImageChromaKeyMask",3,SWIGTYPE_p_pdf_int64);
  }
  arg3 = *argp3;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&argp4,SWIGTYPE_p_pdf_int64,0))){
    SWIG_fail_ptr("PdfImage_SetImageChromaKeyMask",4,SWIGTYPE_p_pdf_int64);
  }
  arg4 = *argp4;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&argp5,SWIGTYPE_p_pdf_int64,0))){
    SWIG_fail_ptr("PdfImage_SetImageChromaKeyMask",5,SWIGTYPE_p_pdf_int64);
  }
  arg5 = *argp5;
  
  {
    try {
      (arg1)->SetImageChromaKeyMask(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfImage_SetImageChromaKeyMask__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfImage *arg1 = (PoDoFo::PdfImage *) 0 ;
  pdf_int64 arg2 ;
  pdf_int64 arg3 ;
  pdf_int64 arg4 ;
  pdf_int64 *argp2 ;
  pdf_int64 *argp3 ;
  pdf_int64 *argp4 ;
  
  SWIG_check_num_args("PoDoFo::PdfImage::SetImageChromaKeyMask",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageChromaKeyMask",1,"PoDoFo::PdfImage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageChromaKeyMask",2,"pdf_int64");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageChromaKeyMask",3,"pdf_int64");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfImage::SetImageChromaKeyMask",4,"pdf_int64");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfImage_SetImageChromaKeyMask",1,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_int64,0))){
    SWIG_fail_ptr("PdfImage_SetImageChromaKeyMask",2,SWIGTYPE_p_pdf_int64);
  }
  arg2 = *argp2;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_pdf_int64,0))){
    SWIG_fail_ptr("PdfImage_SetImageChromaKeyMask",3,SWIGTYPE_p_pdf_int64);
  }
  arg3 = *argp3;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&argp4,SWIGTYPE_p_pdf_int64,0))){
    SWIG_fail_ptr("PdfImage_SetImageChromaKeyMask",4,SWIGTYPE_p_pdf_int64);
  }
  arg4 = *argp4;
  
  {
    try {
      (arg1)->SetImageChromaKeyMask(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfImage_SetImageChromaKeyMask(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfImage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_pdf_int64, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_pdf_int64, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (lua_isuserdata(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_pdf_int64, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_PdfImage_SetImageChromaKeyMask__SWIG_1(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfImage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_pdf_int64, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_pdf_int64, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (lua_isuserdata(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_pdf_int64, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              void *ptr;
              if (lua_isuserdata(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_pdf_int64, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              return _wrap_PdfImage_SetImageChromaKeyMask__SWIG_0(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfImage_SetImageChromaKeyMask'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfImage::SetImageChromaKeyMask(pdf_int64,pdf_int64,pdf_int64,pdf_int64)\n"
    "    PoDoFo::PdfImage::SetImageChromaKeyMask(pdf_int64,pdf_int64,pdf_int64)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfImage_SetInterpolate(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfImage *arg1 = (PoDoFo::PdfImage *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfImage::SetInterpolate",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfImage::SetInterpolate",1,"PoDoFo::PdfImage *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfImage::SetInterpolate",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfImage_SetInterpolate",1,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetInterpolate(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfImage(void *obj) {
PoDoFo::PdfImage *arg1 = (PoDoFo::PdfImage *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfImage(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfImage);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfImage_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfImage_methods[]= {
    { "SetImageColorSpace", _wrap_PdfImage_SetImageColorSpace},
    { "SetImageICCProfile", _wrap_PdfImage_SetImageICCProfile},
    { "SetImageSoftmask", _wrap_PdfImage_SetImageSoftmask},
    { "GetWidth", _wrap_PdfImage_GetWidth},
    { "GetHeight", _wrap_PdfImage_GetHeight},
    { "SetImageData", _wrap_PdfImage_SetImageData},
    { "SetImageDataRaw", _wrap_PdfImage_SetImageDataRaw},
    { "LoadFromFile", _wrap_PdfImage_LoadFromFile},
    { "SetImageChromaKeyMask", _wrap_PdfImage_SetImageChromaKeyMask},
    { "SetInterpolate", _wrap_PdfImage_SetInterpolate},
    {0,0}
};
static swig_lua_method swig_PdfImage_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfImage_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfImage_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfImage_Sf_SwigStatic_methods[]= {
    { "GetSupportedFormats", _wrap_PdfImage_GetSupportedFormats},
    {0,0}
};
static swig_lua_class* swig_PdfImage_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfImage_Sf_SwigStatic = {
    "PdfImage",
    swig_PdfImage_Sf_SwigStatic_methods,
    swig_PdfImage_Sf_SwigStatic_attributes,
    swig_PdfImage_Sf_SwigStatic_constants,
    swig_PdfImage_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfImage_bases[] = {0,0};
static const char *swig_PdfImage_base_names[] = {"PoDoFo::PdfXObject *",0};
static swig_lua_class _wrap_class_PdfImage = { "PdfImage", "PdfImage", &SWIGTYPE_p_PoDoFo__PdfImage,_proxy__wrap_new_PdfImage, swig_delete_PdfImage, swig_PdfImage_methods, swig_PdfImage_attributes, &swig_PdfImage_Sf_SwigStatic, swig_PdfImage_meta, swig_PdfImage_bases, swig_PdfImage_base_names };

static int _wrap_new_PdfInfo__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfVecObjects *arg1 = (PoDoFo::PdfVecObjects *) 0 ;
  int arg2 ;
  PoDoFo::PdfInfo *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::PdfInfo",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::PdfInfo",1,"PoDoFo::PdfVecObjects *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfInfo::PdfInfo",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfInfo",1,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = (PoDoFo::PdfInfo *)new PoDoFo::PdfInfo(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfInfo,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfInfo__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfVecObjects *arg1 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfInfo *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::PdfInfo",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::PdfInfo",1,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfInfo",1,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfInfo *)new PoDoFo::PdfInfo(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfInfo,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfInfo__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  int arg2 ;
  PoDoFo::PdfInfo *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::PdfInfo",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::PdfInfo",1,"PoDoFo::PdfObject *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfInfo::PdfInfo",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfInfo",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = (PoDoFo::PdfInfo *)new PoDoFo::PdfInfo(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfInfo,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfInfo__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfInfo *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::PdfInfo",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::PdfInfo",1,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfInfo",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfInfo *)new PoDoFo::PdfInfo(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfInfo,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfInfo(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfInfo__SWIG_1(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfInfo__SWIG_3(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_new_PdfInfo__SWIG_2(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_new_PdfInfo__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfInfo'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfInfo::PdfInfo(PoDoFo::PdfVecObjects *,int)\n"
    "    PoDoFo::PdfInfo::PdfInfo(PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfInfo::PdfInfo(PoDoFo::PdfObject *,int)\n"
    "    PoDoFo::PdfInfo::PdfInfo(PoDoFo::PdfObject *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfInfo_SetAuthor(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInfo *arg1 = (PoDoFo::PdfInfo *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::SetAuthor",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::SetAuthor",1,"PoDoFo::PdfInfo *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfInfo::SetAuthor",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInfo,0))){
    SWIG_fail_ptr("PdfInfo_SetAuthor",1,SWIGTYPE_p_PoDoFo__PdfInfo);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfInfo_SetAuthor",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetAuthor((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfInfo_GetAuthor(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInfo *arg1 = (PoDoFo::PdfInfo *) 0 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::GetAuthor",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::GetAuthor",1,"PoDoFo::PdfInfo const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInfo,0))){
    SWIG_fail_ptr("PdfInfo_GetAuthor",1,SWIGTYPE_p_PoDoFo__PdfInfo);
  }
  
  {
    try {
      result = (PoDoFo::PdfString *) &((PoDoFo::PdfInfo const *)arg1)->GetAuthor();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfInfo_SetCreator(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInfo *arg1 = (PoDoFo::PdfInfo *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::SetCreator",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::SetCreator",1,"PoDoFo::PdfInfo *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfInfo::SetCreator",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInfo,0))){
    SWIG_fail_ptr("PdfInfo_SetCreator",1,SWIGTYPE_p_PoDoFo__PdfInfo);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfInfo_SetCreator",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetCreator((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfInfo_GetCreator(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInfo *arg1 = (PoDoFo::PdfInfo *) 0 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::GetCreator",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::GetCreator",1,"PoDoFo::PdfInfo const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInfo,0))){
    SWIG_fail_ptr("PdfInfo_GetCreator",1,SWIGTYPE_p_PoDoFo__PdfInfo);
  }
  
  {
    try {
      result = (PoDoFo::PdfString *) &((PoDoFo::PdfInfo const *)arg1)->GetCreator();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfInfo_SetKeywords(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInfo *arg1 = (PoDoFo::PdfInfo *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::SetKeywords",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::SetKeywords",1,"PoDoFo::PdfInfo *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfInfo::SetKeywords",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInfo,0))){
    SWIG_fail_ptr("PdfInfo_SetKeywords",1,SWIGTYPE_p_PoDoFo__PdfInfo);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfInfo_SetKeywords",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetKeywords((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfInfo_GetKeywords(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInfo *arg1 = (PoDoFo::PdfInfo *) 0 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::GetKeywords",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::GetKeywords",1,"PoDoFo::PdfInfo const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInfo,0))){
    SWIG_fail_ptr("PdfInfo_GetKeywords",1,SWIGTYPE_p_PoDoFo__PdfInfo);
  }
  
  {
    try {
      result = (PoDoFo::PdfString *) &((PoDoFo::PdfInfo const *)arg1)->GetKeywords();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfInfo_SetSubject(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInfo *arg1 = (PoDoFo::PdfInfo *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::SetSubject",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::SetSubject",1,"PoDoFo::PdfInfo *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfInfo::SetSubject",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInfo,0))){
    SWIG_fail_ptr("PdfInfo_SetSubject",1,SWIGTYPE_p_PoDoFo__PdfInfo);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfInfo_SetSubject",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetSubject((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfInfo_GetSubject(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInfo *arg1 = (PoDoFo::PdfInfo *) 0 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::GetSubject",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::GetSubject",1,"PoDoFo::PdfInfo const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInfo,0))){
    SWIG_fail_ptr("PdfInfo_GetSubject",1,SWIGTYPE_p_PoDoFo__PdfInfo);
  }
  
  {
    try {
      result = (PoDoFo::PdfString *) &((PoDoFo::PdfInfo const *)arg1)->GetSubject();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfInfo_SetTitle(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInfo *arg1 = (PoDoFo::PdfInfo *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::SetTitle",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::SetTitle",1,"PoDoFo::PdfInfo *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfInfo::SetTitle",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInfo,0))){
    SWIG_fail_ptr("PdfInfo_SetTitle",1,SWIGTYPE_p_PoDoFo__PdfInfo);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfInfo_SetTitle",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetTitle((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfInfo_GetTitle(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInfo *arg1 = (PoDoFo::PdfInfo *) 0 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::GetTitle",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::GetTitle",1,"PoDoFo::PdfInfo const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInfo,0))){
    SWIG_fail_ptr("PdfInfo_GetTitle",1,SWIGTYPE_p_PoDoFo__PdfInfo);
  }
  
  {
    try {
      result = (PoDoFo::PdfString *) &((PoDoFo::PdfInfo const *)arg1)->GetTitle();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfInfo_SetProducer(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInfo *arg1 = (PoDoFo::PdfInfo *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::SetProducer",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::SetProducer",1,"PoDoFo::PdfInfo *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfInfo::SetProducer",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInfo,0))){
    SWIG_fail_ptr("PdfInfo_SetProducer",1,SWIGTYPE_p_PoDoFo__PdfInfo);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfInfo_SetProducer",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetProducer((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfInfo_GetProducer(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInfo *arg1 = (PoDoFo::PdfInfo *) 0 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::GetProducer",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::GetProducer",1,"PoDoFo::PdfInfo const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInfo,0))){
    SWIG_fail_ptr("PdfInfo_GetProducer",1,SWIGTYPE_p_PoDoFo__PdfInfo);
  }
  
  {
    try {
      result = (PoDoFo::PdfString *) &((PoDoFo::PdfInfo const *)arg1)->GetProducer();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfInfo_SetTrapped(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInfo *arg1 = (PoDoFo::PdfInfo *) 0 ;
  PoDoFo::PdfName *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::SetTrapped",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::SetTrapped",1,"PoDoFo::PdfInfo *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfInfo::SetTrapped",2,"PoDoFo::PdfName const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInfo,0))){
    SWIG_fail_ptr("PdfInfo_SetTrapped",1,SWIGTYPE_p_PoDoFo__PdfInfo);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfName,0))){
    SWIG_fail_ptr("PdfInfo_SetTrapped",2,SWIGTYPE_p_PoDoFo__PdfName);
  }
  
  {
    try {
      (arg1)->SetTrapped((PoDoFo::PdfName const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfInfo_GetTrapped(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInfo *arg1 = (PoDoFo::PdfInfo *) 0 ;
  PoDoFo::PdfName *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::GetTrapped",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::GetTrapped",1,"PoDoFo::PdfInfo const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInfo,0))){
    SWIG_fail_ptr("PdfInfo_GetTrapped",1,SWIGTYPE_p_PoDoFo__PdfInfo);
  }
  
  {
    try {
      result = (PoDoFo::PdfName *) &((PoDoFo::PdfInfo const *)arg1)->GetTrapped();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfName,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfInfo_GetCreationDate(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInfo *arg1 = (PoDoFo::PdfInfo *) 0 ;
  PdfDate result;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::GetCreationDate",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::GetCreationDate",1,"PoDoFo::PdfInfo const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInfo,0))){
    SWIG_fail_ptr("PdfInfo_GetCreationDate",1,SWIGTYPE_p_PoDoFo__PdfInfo);
  }
  
  {
    try {
      result = ((PoDoFo::PdfInfo const *)arg1)->GetCreationDate();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PdfDate * resultptr = new PdfDate((const PdfDate &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PdfDate,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfInfo_GetModDate(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInfo *arg1 = (PoDoFo::PdfInfo *) 0 ;
  PdfDate result;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::GetModDate",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::GetModDate",1,"PoDoFo::PdfInfo const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInfo,0))){
    SWIG_fail_ptr("PdfInfo_GetModDate",1,SWIGTYPE_p_PoDoFo__PdfInfo);
  }
  
  {
    try {
      result = ((PoDoFo::PdfInfo const *)arg1)->GetModDate();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PdfDate * resultptr = new PdfDate((const PdfDate &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PdfDate,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfInfo_SetCustomKey(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfInfo *arg1 = (PoDoFo::PdfInfo *) 0 ;
  PoDoFo::PdfName *arg2 = 0 ;
  PoDoFo::PdfString *arg3 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfInfo::SetCustomKey",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfInfo::SetCustomKey",1,"PoDoFo::PdfInfo *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfInfo::SetCustomKey",2,"PoDoFo::PdfName const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfInfo::SetCustomKey",3,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfInfo,0))){
    SWIG_fail_ptr("PdfInfo_SetCustomKey",1,SWIGTYPE_p_PoDoFo__PdfInfo);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfName,0))){
    SWIG_fail_ptr("PdfInfo_SetCustomKey",2,SWIGTYPE_p_PoDoFo__PdfName);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfInfo_SetCustomKey",3,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetCustomKey((PoDoFo::PdfName const &)*arg2,(PoDoFo::PdfString const &)*arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfInfo(void *obj) {
PoDoFo::PdfInfo *arg1 = (PoDoFo::PdfInfo *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfInfo(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfInfo);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfInfo_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfInfo_methods[]= {
    { "SetAuthor", _wrap_PdfInfo_SetAuthor},
    { "GetAuthor", _wrap_PdfInfo_GetAuthor},
    { "SetCreator", _wrap_PdfInfo_SetCreator},
    { "GetCreator", _wrap_PdfInfo_GetCreator},
    { "SetKeywords", _wrap_PdfInfo_SetKeywords},
    { "GetKeywords", _wrap_PdfInfo_GetKeywords},
    { "SetSubject", _wrap_PdfInfo_SetSubject},
    { "GetSubject", _wrap_PdfInfo_GetSubject},
    { "SetTitle", _wrap_PdfInfo_SetTitle},
    { "GetTitle", _wrap_PdfInfo_GetTitle},
    { "SetProducer", _wrap_PdfInfo_SetProducer},
    { "GetProducer", _wrap_PdfInfo_GetProducer},
    { "SetTrapped", _wrap_PdfInfo_SetTrapped},
    { "GetTrapped", _wrap_PdfInfo_GetTrapped},
    { "GetCreationDate", _wrap_PdfInfo_GetCreationDate},
    { "GetModDate", _wrap_PdfInfo_GetModDate},
    { "SetCustomKey", _wrap_PdfInfo_SetCustomKey},
    {0,0}
};
static swig_lua_method swig_PdfInfo_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfInfo_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfInfo_Sf_SwigStatic_constants[]= {
    {SWIG_LUA_CONSTTAB_INT("ePdfInfoInitial_WriteCreationTime", PoDoFo::PdfInfo::ePdfInfoInitial_WriteCreationTime)},
    {SWIG_LUA_CONSTTAB_INT("ePdfInfoInitial_WriteModificationTime", PoDoFo::PdfInfo::ePdfInfoInitial_WriteModificationTime)},
    {SWIG_LUA_CONSTTAB_INT("ePdfInfoInitial_WriteProducer", PoDoFo::PdfInfo::ePdfInfoInitial_WriteProducer)},
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfInfo_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfInfo_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfInfo_Sf_SwigStatic = {
    "PdfInfo",
    swig_PdfInfo_Sf_SwigStatic_methods,
    swig_PdfInfo_Sf_SwigStatic_attributes,
    swig_PdfInfo_Sf_SwigStatic_constants,
    swig_PdfInfo_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfInfo_bases[] = {0,0};
static const char *swig_PdfInfo_base_names[] = {"PoDoFo::PdfElement *",0};
static swig_lua_class _wrap_class_PdfInfo = { "PdfInfo", "PdfInfo", &SWIGTYPE_p_PoDoFo__PdfInfo,_proxy__wrap_new_PdfInfo, swig_delete_PdfInfo, swig_PdfInfo_methods, swig_PdfInfo_attributes, &swig_PdfInfo_Sf_SwigStatic, swig_PdfInfo_meta, swig_PdfInfo_bases, swig_PdfInfo_base_names };

static int _wrap_new_PdfStreamedDocument__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutputDevice *arg1 = (PoDoFo::PdfOutputDevice *) 0 ;
  PoDoFo::EPdfVersion arg2 ;
  PdfEncrypt *arg3 = (PdfEncrypt *) 0 ;
  PoDoFo::EPdfWriteMode arg4 ;
  PoDoFo::PdfStreamedDocument *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",1,"PoDoFo::PdfOutputDevice *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",2,"PoDoFo::EPdfVersion");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",3,"PdfEncrypt *");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",4,"PoDoFo::EPdfWriteMode");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutputDevice,0))){
    SWIG_fail_ptr("new_PdfStreamedDocument",1,SWIGTYPE_p_PoDoFo__PdfOutputDevice);
  }
  
  arg2 = (PoDoFo::EPdfVersion)(int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PdfEncrypt,0))){
    SWIG_fail_ptr("new_PdfStreamedDocument",3,SWIGTYPE_p_PdfEncrypt);
  }
  
  arg4 = (PoDoFo::EPdfWriteMode)(int)lua_tonumber(L, 4);
  {
    try {
      result = (PoDoFo::PdfStreamedDocument *)new PoDoFo::PdfStreamedDocument(arg1,arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfStreamedDocument__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutputDevice *arg1 = (PoDoFo::PdfOutputDevice *) 0 ;
  PoDoFo::EPdfVersion arg2 ;
  PdfEncrypt *arg3 = (PdfEncrypt *) 0 ;
  PoDoFo::PdfStreamedDocument *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",1,"PoDoFo::PdfOutputDevice *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",2,"PoDoFo::EPdfVersion");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",3,"PdfEncrypt *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutputDevice,0))){
    SWIG_fail_ptr("new_PdfStreamedDocument",1,SWIGTYPE_p_PoDoFo__PdfOutputDevice);
  }
  
  arg2 = (PoDoFo::EPdfVersion)(int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PdfEncrypt,0))){
    SWIG_fail_ptr("new_PdfStreamedDocument",3,SWIGTYPE_p_PdfEncrypt);
  }
  
  {
    try {
      result = (PoDoFo::PdfStreamedDocument *)new PoDoFo::PdfStreamedDocument(arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfStreamedDocument__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutputDevice *arg1 = (PoDoFo::PdfOutputDevice *) 0 ;
  PoDoFo::EPdfVersion arg2 ;
  PoDoFo::PdfStreamedDocument *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",1,"PoDoFo::PdfOutputDevice *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",2,"PoDoFo::EPdfVersion");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutputDevice,0))){
    SWIG_fail_ptr("new_PdfStreamedDocument",1,SWIGTYPE_p_PoDoFo__PdfOutputDevice);
  }
  
  arg2 = (PoDoFo::EPdfVersion)(int)lua_tonumber(L, 2);
  {
    try {
      result = (PoDoFo::PdfStreamedDocument *)new PoDoFo::PdfStreamedDocument(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfStreamedDocument__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutputDevice *arg1 = (PoDoFo::PdfOutputDevice *) 0 ;
  PoDoFo::PdfStreamedDocument *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",1,"PoDoFo::PdfOutputDevice *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutputDevice,0))){
    SWIG_fail_ptr("new_PdfStreamedDocument",1,SWIGTYPE_p_PoDoFo__PdfOutputDevice);
  }
  
  {
    try {
      result = (PoDoFo::PdfStreamedDocument *)new PoDoFo::PdfStreamedDocument(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfStreamedDocument__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  PoDoFo::EPdfVersion arg2 ;
  PdfEncrypt *arg3 = (PdfEncrypt *) 0 ;
  PoDoFo::EPdfWriteMode arg4 ;
  PoDoFo::PdfStreamedDocument *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",4,4)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",1,"char const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",2,"PoDoFo::EPdfVersion");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",3,"PdfEncrypt *");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",4,"PoDoFo::EPdfWriteMode");
  arg1 = (char *)lua_tostring(L, 1);
  arg2 = (PoDoFo::EPdfVersion)(int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PdfEncrypt,0))){
    SWIG_fail_ptr("new_PdfStreamedDocument",3,SWIGTYPE_p_PdfEncrypt);
  }
  
  arg4 = (PoDoFo::EPdfWriteMode)(int)lua_tonumber(L, 4);
  {
    try {
      result = (PoDoFo::PdfStreamedDocument *)new PoDoFo::PdfStreamedDocument((char const *)arg1,arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfStreamedDocument__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  PoDoFo::EPdfVersion arg2 ;
  PdfEncrypt *arg3 = (PdfEncrypt *) 0 ;
  PoDoFo::PdfStreamedDocument *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",3,3)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",1,"char const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",2,"PoDoFo::EPdfVersion");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",3,"PdfEncrypt *");
  arg1 = (char *)lua_tostring(L, 1);
  arg2 = (PoDoFo::EPdfVersion)(int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PdfEncrypt,0))){
    SWIG_fail_ptr("new_PdfStreamedDocument",3,SWIGTYPE_p_PdfEncrypt);
  }
  
  {
    try {
      result = (PoDoFo::PdfStreamedDocument *)new PoDoFo::PdfStreamedDocument((char const *)arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfStreamedDocument__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  PoDoFo::EPdfVersion arg2 ;
  PoDoFo::PdfStreamedDocument *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",2,2)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",1,"char const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",2,"PoDoFo::EPdfVersion");
  arg1 = (char *)lua_tostring(L, 1);
  arg2 = (PoDoFo::EPdfVersion)(int)lua_tonumber(L, 2);
  {
    try {
      result = (PoDoFo::PdfStreamedDocument *)new PoDoFo::PdfStreamedDocument((char const *)arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfStreamedDocument__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  PoDoFo::PdfStreamedDocument *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",1,1)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::PdfStreamedDocument",1,"char const *");
  arg1 = (char *)lua_tostring(L, 1);
  {
    try {
      result = (PoDoFo::PdfStreamedDocument *)new PoDoFo::PdfStreamedDocument((char const *)arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfStreamedDocument(lua_State* L) {
  int argc;
  int argv[5]={
    1,2,3,4,5
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfOutputDevice, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfStreamedDocument__SWIG_3(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      return _wrap_new_PdfStreamedDocument__SWIG_7(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfOutputDevice, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_new_PdfStreamedDocument__SWIG_2(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_new_PdfStreamedDocument__SWIG_6(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfOutputDevice, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PdfEncrypt, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfStreamedDocument__SWIG_1(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PdfEncrypt, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfStreamedDocument__SWIG_5(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfOutputDevice, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PdfEncrypt, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_new_PdfStreamedDocument__SWIG_0(L);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PdfEncrypt, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_new_PdfStreamedDocument__SWIG_4(L);
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfStreamedDocument'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfStreamedDocument::PdfStreamedDocument(PoDoFo::PdfOutputDevice *,PoDoFo::EPdfVersion,PdfEncrypt *,PoDoFo::EPdfWriteMode)\n"
    "    PoDoFo::PdfStreamedDocument::PdfStreamedDocument(PoDoFo::PdfOutputDevice *,PoDoFo::EPdfVersion,PdfEncrypt *)\n"
    "    PoDoFo::PdfStreamedDocument::PdfStreamedDocument(PoDoFo::PdfOutputDevice *,PoDoFo::EPdfVersion)\n"
    "    PoDoFo::PdfStreamedDocument::PdfStreamedDocument(PoDoFo::PdfOutputDevice *)\n"
    "    PoDoFo::PdfStreamedDocument::PdfStreamedDocument(char const *,PoDoFo::EPdfVersion,PdfEncrypt *,PoDoFo::EPdfWriteMode)\n"
    "    PoDoFo::PdfStreamedDocument::PdfStreamedDocument(char const *,PoDoFo::EPdfVersion,PdfEncrypt *)\n"
    "    PoDoFo::PdfStreamedDocument::PdfStreamedDocument(char const *,PoDoFo::EPdfVersion)\n"
    "    PoDoFo::PdfStreamedDocument::PdfStreamedDocument(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfStreamedDocument_Close(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfStreamedDocument *arg1 = (PoDoFo::PdfStreamedDocument *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::Close",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::Close",1,"PoDoFo::PdfStreamedDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,0))){
    SWIG_fail_ptr("PdfStreamedDocument_Close",1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument);
  }
  
  {
    try {
      (arg1)->Close();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfStreamedDocument_GetWriteMode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfStreamedDocument *arg1 = (PoDoFo::PdfStreamedDocument *) 0 ;
  PoDoFo::EPdfWriteMode result;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::GetWriteMode",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::GetWriteMode",1,"PoDoFo::PdfStreamedDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,0))){
    SWIG_fail_ptr("PdfStreamedDocument_GetWriteMode",1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument);
  }
  
  {
    try {
      result = (PoDoFo::EPdfWriteMode)((PoDoFo::PdfStreamedDocument const *)arg1)->GetWriteMode();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfStreamedDocument_GetPdfVersion(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfStreamedDocument *arg1 = (PoDoFo::PdfStreamedDocument *) 0 ;
  PoDoFo::EPdfVersion result;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::GetPdfVersion",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::GetPdfVersion",1,"PoDoFo::PdfStreamedDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,0))){
    SWIG_fail_ptr("PdfStreamedDocument_GetPdfVersion",1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument);
  }
  
  {
    try {
      result = (PoDoFo::EPdfVersion)((PoDoFo::PdfStreamedDocument const *)arg1)->GetPdfVersion();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfStreamedDocument_IsLinearized(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfStreamedDocument *arg1 = (PoDoFo::PdfStreamedDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::IsLinearized",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::IsLinearized",1,"PoDoFo::PdfStreamedDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,0))){
    SWIG_fail_ptr("PdfStreamedDocument_IsLinearized",1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfStreamedDocument const *)arg1)->IsLinearized();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfStreamedDocument_IsPrintAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfStreamedDocument *arg1 = (PoDoFo::PdfStreamedDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::IsPrintAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::IsPrintAllowed",1,"PoDoFo::PdfStreamedDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,0))){
    SWIG_fail_ptr("PdfStreamedDocument_IsPrintAllowed",1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfStreamedDocument const *)arg1)->IsPrintAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfStreamedDocument_IsEditAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfStreamedDocument *arg1 = (PoDoFo::PdfStreamedDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::IsEditAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::IsEditAllowed",1,"PoDoFo::PdfStreamedDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,0))){
    SWIG_fail_ptr("PdfStreamedDocument_IsEditAllowed",1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfStreamedDocument const *)arg1)->IsEditAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfStreamedDocument_IsCopyAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfStreamedDocument *arg1 = (PoDoFo::PdfStreamedDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::IsCopyAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::IsCopyAllowed",1,"PoDoFo::PdfStreamedDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,0))){
    SWIG_fail_ptr("PdfStreamedDocument_IsCopyAllowed",1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfStreamedDocument const *)arg1)->IsCopyAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfStreamedDocument_IsEditNotesAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfStreamedDocument *arg1 = (PoDoFo::PdfStreamedDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::IsEditNotesAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::IsEditNotesAllowed",1,"PoDoFo::PdfStreamedDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,0))){
    SWIG_fail_ptr("PdfStreamedDocument_IsEditNotesAllowed",1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfStreamedDocument const *)arg1)->IsEditNotesAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfStreamedDocument_IsFillAndSignAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfStreamedDocument *arg1 = (PoDoFo::PdfStreamedDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::IsFillAndSignAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::IsFillAndSignAllowed",1,"PoDoFo::PdfStreamedDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,0))){
    SWIG_fail_ptr("PdfStreamedDocument_IsFillAndSignAllowed",1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfStreamedDocument const *)arg1)->IsFillAndSignAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfStreamedDocument_IsAccessibilityAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfStreamedDocument *arg1 = (PoDoFo::PdfStreamedDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::IsAccessibilityAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::IsAccessibilityAllowed",1,"PoDoFo::PdfStreamedDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,0))){
    SWIG_fail_ptr("PdfStreamedDocument_IsAccessibilityAllowed",1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfStreamedDocument const *)arg1)->IsAccessibilityAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfStreamedDocument_IsDocAssemblyAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfStreamedDocument *arg1 = (PoDoFo::PdfStreamedDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::IsDocAssemblyAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::IsDocAssemblyAllowed",1,"PoDoFo::PdfStreamedDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,0))){
    SWIG_fail_ptr("PdfStreamedDocument_IsDocAssemblyAllowed",1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfStreamedDocument const *)arg1)->IsDocAssemblyAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfStreamedDocument_IsHighPrintAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfStreamedDocument *arg1 = (PoDoFo::PdfStreamedDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfStreamedDocument::IsHighPrintAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfStreamedDocument::IsHighPrintAllowed",1,"PoDoFo::PdfStreamedDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument,0))){
    SWIG_fail_ptr("PdfStreamedDocument_IsHighPrintAllowed",1,SWIGTYPE_p_PoDoFo__PdfStreamedDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfStreamedDocument const *)arg1)->IsHighPrintAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfStreamedDocument(void *obj) {
PoDoFo::PdfStreamedDocument *arg1 = (PoDoFo::PdfStreamedDocument *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfStreamedDocument(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfStreamedDocument);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfStreamedDocument_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfStreamedDocument_methods[]= {
    { "Close", _wrap_PdfStreamedDocument_Close},
    { "GetWriteMode", _wrap_PdfStreamedDocument_GetWriteMode},
    { "GetPdfVersion", _wrap_PdfStreamedDocument_GetPdfVersion},
    { "IsLinearized", _wrap_PdfStreamedDocument_IsLinearized},
    { "IsPrintAllowed", _wrap_PdfStreamedDocument_IsPrintAllowed},
    { "IsEditAllowed", _wrap_PdfStreamedDocument_IsEditAllowed},
    { "IsCopyAllowed", _wrap_PdfStreamedDocument_IsCopyAllowed},
    { "IsEditNotesAllowed", _wrap_PdfStreamedDocument_IsEditNotesAllowed},
    { "IsFillAndSignAllowed", _wrap_PdfStreamedDocument_IsFillAndSignAllowed},
    { "IsAccessibilityAllowed", _wrap_PdfStreamedDocument_IsAccessibilityAllowed},
    { "IsDocAssemblyAllowed", _wrap_PdfStreamedDocument_IsDocAssemblyAllowed},
    { "IsHighPrintAllowed", _wrap_PdfStreamedDocument_IsHighPrintAllowed},
    {0,0}
};
static swig_lua_method swig_PdfStreamedDocument_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfStreamedDocument_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfStreamedDocument_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfStreamedDocument_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfStreamedDocument_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfStreamedDocument_Sf_SwigStatic = {
    "PdfStreamedDocument",
    swig_PdfStreamedDocument_Sf_SwigStatic_methods,
    swig_PdfStreamedDocument_Sf_SwigStatic_attributes,
    swig_PdfStreamedDocument_Sf_SwigStatic_constants,
    swig_PdfStreamedDocument_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfStreamedDocument_bases[] = {0,0};
static const char *swig_PdfStreamedDocument_base_names[] = {"PoDoFo::PdfDocument *",0};
static swig_lua_class _wrap_class_PdfStreamedDocument = { "PdfStreamedDocument", "PdfStreamedDocument", &SWIGTYPE_p_PoDoFo__PdfStreamedDocument,_proxy__wrap_new_PdfStreamedDocument, swig_delete_PdfStreamedDocument, swig_PdfStreamedDocument_methods, swig_PdfStreamedDocument_attributes, &swig_PdfStreamedDocument_Sf_SwigStatic, swig_PdfStreamedDocument_meta, swig_PdfStreamedDocument_bases, swig_PdfStreamedDocument_base_names };

static int _wrap_new_PdfMemDocument__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::PdfMemDocument",0,0)
  {
    try {
      result = (PoDoFo::PdfMemDocument *)new PoDoFo::PdfMemDocument();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfMemDocument,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfMemDocument__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  bool arg1 ;
  PoDoFo::PdfMemDocument *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::PdfMemDocument",1,1)
  if(!lua_isboolean(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::PdfMemDocument",1,"bool");
  arg1 = (lua_toboolean(L, 1)!=0);
  {
    try {
      result = (PoDoFo::PdfMemDocument *)new PoDoFo::PdfMemDocument(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfMemDocument,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfMemDocument__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  PoDoFo::PdfMemDocument *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::PdfMemDocument",1,1)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::PdfMemDocument",1,"char const *");
  arg1 = (char *)lua_tostring(L, 1);
  {
    try {
      result = (PoDoFo::PdfMemDocument *)new PoDoFo::PdfMemDocument((char const *)arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfMemDocument,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfMemDocument(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 0) {
    return _wrap_new_PdfMemDocument__SWIG_0(L);
  }
  if (argc == 1) {
    int _v;
    {
      _v = lua_isboolean(L,argv[0]);
    }
    if (_v) {
      return _wrap_new_PdfMemDocument__SWIG_1(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      return _wrap_new_PdfMemDocument__SWIG_2(L);
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfMemDocument'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfMemDocument::PdfMemDocument()\n"
    "    PoDoFo::PdfMemDocument::PdfMemDocument(bool)\n"
    "    PoDoFo::PdfMemDocument::PdfMemDocument(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfMemDocument_Load__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::Load",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::Load",1,"PoDoFo::PdfMemDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::Load",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_Load",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  {
    try {
      (arg1)->Load((char const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_Load__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  long arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::Load",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::Load",1,"PoDoFo::PdfMemDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::Load",2,"char const *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfMemDocument::Load",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_Load",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  arg3 = (long)lua_tonumber(L, 3);
  {
    try {
      (arg1)->Load((char const *)arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_Load__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PdfRefCountedInputDevice *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::Load",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::Load",1,"PoDoFo::PdfMemDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::Load",2,"PdfRefCountedInputDevice const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_Load",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PdfRefCountedInputDevice,0))){
    SWIG_fail_ptr("PdfMemDocument_Load",2,SWIGTYPE_p_PdfRefCountedInputDevice);
  }
  
  {
    try {
      (arg1)->Load((PdfRefCountedInputDevice const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_Load(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PdfRefCountedInputDevice, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfMemDocument_Load__SWIG_2(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfMemDocument_Load__SWIG_0(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_PdfMemDocument_Load__SWIG_1(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfMemDocument_Load'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfMemDocument::Load(char const *)\n"
    "    PoDoFo::PdfMemDocument::Load(char const *,long)\n"
    "    PoDoFo::PdfMemDocument::Load(PdfRefCountedInputDevice const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfMemDocument_Write__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::Write",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::Write",1,"PoDoFo::PdfMemDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::Write",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_Write",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  {
    try {
      (arg1)->Write((char const *)arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_Write__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::PdfOutputDevice *arg2 = (PoDoFo::PdfOutputDevice *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::Write",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::Write",1,"PoDoFo::PdfMemDocument *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::Write",2,"PoDoFo::PdfOutputDevice *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_Write",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfOutputDevice,0))){
    SWIG_fail_ptr("PdfMemDocument_Write",2,SWIGTYPE_p_PoDoFo__PdfOutputDevice);
  }
  
  {
    try {
      (arg1)->Write(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_Write(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfOutputDevice, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfMemDocument_Write__SWIG_1(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = SWIG_lua_isnilstring(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfMemDocument_Write__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfMemDocument_Write'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfMemDocument::Write(char const *)\n"
    "    PoDoFo::PdfMemDocument::Write(PoDoFo::PdfOutputDevice *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfMemDocument_SetWriteMode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::EPdfWriteMode arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::SetWriteMode",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetWriteMode",1,"PoDoFo::PdfMemDocument *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetWriteMode",2,"PoDoFo::EPdfWriteMode");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_SetWriteMode",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  arg2 = (PoDoFo::EPdfWriteMode)(int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetWriteMode(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_GetWriteMode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::EPdfWriteMode result;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::GetWriteMode",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::GetWriteMode",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_GetWriteMode",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (PoDoFo::EPdfWriteMode)((PoDoFo::PdfMemDocument const *)arg1)->GetWriteMode();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_SetPdfVersion(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::EPdfVersion arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::SetPdfVersion",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetPdfVersion",1,"PoDoFo::PdfMemDocument *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetPdfVersion",2,"PoDoFo::EPdfVersion");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_SetPdfVersion",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  arg2 = (PoDoFo::EPdfVersion)(int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetPdfVersion(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_GetPdfVersion(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::EPdfVersion result;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::GetPdfVersion",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::GetPdfVersion",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_GetPdfVersion",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (PoDoFo::EPdfVersion)((PoDoFo::PdfMemDocument const *)arg1)->GetPdfVersion();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_AddPdfExtension(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  pdf_int64 arg3 ;
  pdf_int64 *argp3 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::AddPdfExtension",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::AddPdfExtension",1,"PoDoFo::PdfMemDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::AddPdfExtension",2,"char const *");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfMemDocument::AddPdfExtension",3,"pdf_int64");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_AddPdfExtension",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_pdf_int64,0))){
    SWIG_fail_ptr("PdfMemDocument_AddPdfExtension",3,SWIGTYPE_p_pdf_int64);
  }
  arg3 = *argp3;
  
  {
    try {
      (arg1)->AddPdfExtension((char const *)arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_HasPdfExtension(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  pdf_int64 arg3 ;
  pdf_int64 *argp3 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::HasPdfExtension",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::HasPdfExtension",1,"PoDoFo::PdfMemDocument const *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::HasPdfExtension",2,"char const *");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfMemDocument::HasPdfExtension",3,"pdf_int64");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_HasPdfExtension",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_pdf_int64,0))){
    SWIG_fail_ptr("PdfMemDocument_HasPdfExtension",3,SWIGTYPE_p_pdf_int64);
  }
  arg3 = *argp3;
  
  {
    try {
      result = (bool)((PoDoFo::PdfMemDocument const *)arg1)->HasPdfExtension((char const *)arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_RemovePdfExtension(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  char *arg2 = (char *) 0 ;
  pdf_int64 arg3 ;
  pdf_int64 *argp3 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::RemovePdfExtension",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::RemovePdfExtension",1,"PoDoFo::PdfMemDocument *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::RemovePdfExtension",2,"char const *");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfMemDocument::RemovePdfExtension",3,"pdf_int64");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_RemovePdfExtension",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_pdf_int64,0))){
    SWIG_fail_ptr("PdfMemDocument_RemovePdfExtension",3,SWIGTYPE_p_pdf_int64);
  }
  arg3 = *argp3;
  
  {
    try {
      (arg1)->RemovePdfExtension((char const *)arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_GetPdfExtensions(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  std::vector< PdfExtension > result;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::GetPdfExtensions",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::GetPdfExtensions",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_GetPdfExtensions",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = ((PoDoFo::PdfMemDocument const *)arg1)->GetPdfExtensions();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    std::vector< PdfExtension > * resultptr = new std::vector< PdfExtension >((const std::vector< PdfExtension > &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__vectorT_PdfExtension_t,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_SetPassword(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  std::string *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::SetPassword",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetPassword",1,"PoDoFo::PdfMemDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetPassword",2,"std::string const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_SetPassword",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_std__string,0))){
    SWIG_fail_ptr("PdfMemDocument_SetPassword",2,SWIGTYPE_p_std__string);
  }
  
  {
    try {
      (arg1)->SetPassword((std::string const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_SetEncrypted__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  int arg4 ;
  PoDoFo::PdfEncrypt::EPdfEncryptAlgorithm arg5 ;
  PoDoFo::PdfEncrypt::EPdfKeyLength arg6 ;
  PoDoFo::PdfEncrypt::EPdfEncryptAlgorithm *argp5 ;
  PoDoFo::PdfEncrypt::EPdfKeyLength *argp6 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::SetEncrypted",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",1,"PoDoFo::PdfMemDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",2,"std::string const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",3,"std::string const &");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",4,"int");
  if(!lua_isuserdata(L,5)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",5,"PoDoFo::PdfEncrypt::EPdfEncryptAlgorithm");
  if(!lua_isuserdata(L,6)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",6,"PoDoFo::PdfEncrypt::EPdfKeyLength");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_SetEncrypted",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_std__string,0))){
    SWIG_fail_ptr("PdfMemDocument_SetEncrypted",2,SWIGTYPE_p_std__string);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_std__string,0))){
    SWIG_fail_ptr("PdfMemDocument_SetEncrypted",3,SWIGTYPE_p_std__string);
  }
  
  arg4 = (int)lua_tonumber(L, 4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&argp5,SWIGTYPE_p_PoDoFo__PdfEncrypt__EPdfEncryptAlgorithm,0))){
    SWIG_fail_ptr("PdfMemDocument_SetEncrypted",5,SWIGTYPE_p_PoDoFo__PdfEncrypt__EPdfEncryptAlgorithm);
  }
  arg5 = *argp5;
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&argp6,SWIGTYPE_p_PoDoFo__PdfEncrypt__EPdfKeyLength,0))){
    SWIG_fail_ptr("PdfMemDocument_SetEncrypted",6,SWIGTYPE_p_PoDoFo__PdfEncrypt__EPdfKeyLength);
  }
  arg6 = *argp6;
  
  {
    try {
      (arg1)->SetEncrypted((std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5,arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_SetEncrypted__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  int arg4 ;
  PoDoFo::PdfEncrypt::EPdfEncryptAlgorithm arg5 ;
  PoDoFo::PdfEncrypt::EPdfEncryptAlgorithm *argp5 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::SetEncrypted",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",1,"PoDoFo::PdfMemDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",2,"std::string const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",3,"std::string const &");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",4,"int");
  if(!lua_isuserdata(L,5)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",5,"PoDoFo::PdfEncrypt::EPdfEncryptAlgorithm");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_SetEncrypted",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_std__string,0))){
    SWIG_fail_ptr("PdfMemDocument_SetEncrypted",2,SWIGTYPE_p_std__string);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_std__string,0))){
    SWIG_fail_ptr("PdfMemDocument_SetEncrypted",3,SWIGTYPE_p_std__string);
  }
  
  arg4 = (int)lua_tonumber(L, 4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&argp5,SWIGTYPE_p_PoDoFo__PdfEncrypt__EPdfEncryptAlgorithm,0))){
    SWIG_fail_ptr("PdfMemDocument_SetEncrypted",5,SWIGTYPE_p_PoDoFo__PdfEncrypt__EPdfEncryptAlgorithm);
  }
  arg5 = *argp5;
  
  {
    try {
      (arg1)->SetEncrypted((std::string const &)*arg2,(std::string const &)*arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_SetEncrypted__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  int arg4 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::SetEncrypted",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",1,"PoDoFo::PdfMemDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",2,"std::string const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",3,"std::string const &");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",4,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_SetEncrypted",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_std__string,0))){
    SWIG_fail_ptr("PdfMemDocument_SetEncrypted",2,SWIGTYPE_p_std__string);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_std__string,0))){
    SWIG_fail_ptr("PdfMemDocument_SetEncrypted",3,SWIGTYPE_p_std__string);
  }
  
  arg4 = (int)lua_tonumber(L, 4);
  {
    try {
      (arg1)->SetEncrypted((std::string const &)*arg2,(std::string const &)*arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_SetEncrypted__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  std::string *arg2 = 0 ;
  std::string *arg3 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::SetEncrypted",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",1,"PoDoFo::PdfMemDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",2,"std::string const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",3,"std::string const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_SetEncrypted",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_std__string,0))){
    SWIG_fail_ptr("PdfMemDocument_SetEncrypted",2,SWIGTYPE_p_std__string);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_std__string,0))){
    SWIG_fail_ptr("PdfMemDocument_SetEncrypted",3,SWIGTYPE_p_std__string);
  }
  
  {
    try {
      (arg1)->SetEncrypted((std::string const &)*arg2,(std::string const &)*arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_SetEncrypted__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::PdfEncrypt *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::SetEncrypted",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",1,"PoDoFo::PdfMemDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::SetEncrypted",2,"PoDoFo::PdfEncrypt const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_SetEncrypted",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfEncrypt,0))){
    SWIG_fail_ptr("PdfMemDocument_SetEncrypted",2,SWIGTYPE_p_PoDoFo__PdfEncrypt);
  }
  
  {
    try {
      (arg1)->SetEncrypted((PoDoFo::PdfEncrypt const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_SetEncrypted(lua_State* L) {
  int argc;
  int argv[7]={
    1,2,3,4,5,6,7
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncrypt, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfMemDocument_SetEncrypted__SWIG_4(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_std__string, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_std__string, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_PdfMemDocument_SetEncrypted__SWIG_3(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_std__string, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_std__string, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_PdfMemDocument_SetEncrypted__SWIG_2(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_std__string, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_std__string, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              void *ptr;
              if (lua_isuserdata(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncrypt__EPdfEncryptAlgorithm, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              return _wrap_PdfMemDocument_SetEncrypted__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_std__string, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_std__string, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              void *ptr;
              if (lua_isuserdata(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncrypt__EPdfEncryptAlgorithm, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              {
                void *ptr;
                if (lua_isuserdata(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfEncrypt__EPdfKeyLength, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                return _wrap_PdfMemDocument_SetEncrypted__SWIG_0(L);
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfMemDocument_SetEncrypted'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfMemDocument::SetEncrypted(std::string const &,std::string const &,int,PoDoFo::PdfEncrypt::EPdfEncryptAlgorithm,PoDoFo::PdfEncrypt::EPdfKeyLength)\n"
    "    PoDoFo::PdfMemDocument::SetEncrypted(std::string const &,std::string const &,int,PoDoFo::PdfEncrypt::EPdfEncryptAlgorithm)\n"
    "    PoDoFo::PdfMemDocument::SetEncrypted(std::string const &,std::string const &,int)\n"
    "    PoDoFo::PdfMemDocument::SetEncrypted(std::string const &,std::string const &)\n"
    "    PoDoFo::PdfMemDocument::SetEncrypted(PoDoFo::PdfEncrypt const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfMemDocument_GetEncrypted(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::GetEncrypted",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::GetEncrypted",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_GetEncrypted",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfMemDocument const *)arg1)->GetEncrypted();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_IsLinearized(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::IsLinearized",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::IsLinearized",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_IsLinearized",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfMemDocument const *)arg1)->IsLinearized();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_GetObjects__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::PdfVecObjects *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::GetObjects",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::GetObjects",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_GetObjects",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfVecObjects *) &((PoDoFo::PdfMemDocument const *)arg1)->GetObjects();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfVecObjects,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_GetObjects__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::PdfVecObjects *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::GetObjects",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::GetObjects",1,"PoDoFo::PdfMemDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_GetObjects",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfVecObjects *) &(arg1)->GetObjects();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfVecObjects,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_GetObjects(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfMemDocument_GetObjects__SWIG_1(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfMemDocument_GetObjects__SWIG_0(L);
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfMemDocument_GetObjects'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfMemDocument::GetObjects() const\n"
    "    PoDoFo::PdfMemDocument::GetObjects()\n");
  lua_error(L);return 0;
}


static int _wrap_PdfMemDocument_GetCatalog__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::GetCatalog",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::GetCatalog",1,"PoDoFo::PdfMemDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_GetCatalog",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)(arg1)->GetCatalog();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_GetCatalog__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::GetCatalog",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::GetCatalog",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_GetCatalog",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfMemDocument const *)arg1)->GetCatalog();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_GetCatalog(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfMemDocument_GetCatalog__SWIG_0(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfMemDocument_GetCatalog__SWIG_1(L);
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfMemDocument_GetCatalog'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfMemDocument::GetCatalog()\n"
    "    PoDoFo::PdfMemDocument::GetCatalog() const\n");
  lua_error(L);return 0;
}


static int _wrap_PdfMemDocument_GetTrailer(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::GetTrailer",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::GetTrailer",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_GetTrailer",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfMemDocument const *)arg1)->GetTrailer();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_GetStructTreeRoot(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::GetStructTreeRoot",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::GetStructTreeRoot",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_GetStructTreeRoot",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfMemDocument const *)arg1)->GetStructTreeRoot();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_GetMetadata(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::GetMetadata",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::GetMetadata",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_GetMetadata",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfMemDocument const *)arg1)->GetMetadata();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_GetMarkInfo(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::GetMarkInfo",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::GetMarkInfo",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_GetMarkInfo",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfMemDocument const *)arg1)->GetMarkInfo();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_GetLanguage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::GetLanguage",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::GetLanguage",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_GetLanguage",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfMemDocument const *)arg1)->GetLanguage();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_GetFont(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::PdfObject *arg2 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::GetFont",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::GetFont",1,"PoDoFo::PdfMemDocument *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::GetFont",2,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_GetFont",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("PdfMemDocument_GetFont",2,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfFont *)(arg1)->GetFont(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_InsertPages(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::PdfMemDocument *arg2 = 0 ;
  int arg3 ;
  int arg4 ;
  PoDoFo::PdfMemDocument *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::InsertPages",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::InsertPages",1,"PoDoFo::PdfMemDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::InsertPages",2,"PoDoFo::PdfMemDocument const &");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfMemDocument::InsertPages",3,"int");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfMemDocument::InsertPages",4,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_InsertPages",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_InsertPages",2,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  arg3 = (int)lua_tonumber(L, 3);
  arg4 = (int)lua_tonumber(L, 4);
  {
    try {
      result = (PoDoFo::PdfMemDocument *) &(arg1)->InsertPages((PoDoFo::PdfMemDocument const &)*arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfMemDocument,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_DeletePages(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::DeletePages",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::DeletePages",1,"PoDoFo::PdfMemDocument *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::DeletePages",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfMemDocument::DeletePages",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_DeletePages",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      (arg1)->DeletePages(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_IsPrintAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::IsPrintAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::IsPrintAllowed",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_IsPrintAllowed",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfMemDocument const *)arg1)->IsPrintAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_IsEditAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::IsEditAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::IsEditAllowed",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_IsEditAllowed",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfMemDocument const *)arg1)->IsEditAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_IsCopyAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::IsCopyAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::IsCopyAllowed",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_IsCopyAllowed",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfMemDocument const *)arg1)->IsCopyAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_IsEditNotesAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::IsEditNotesAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::IsEditNotesAllowed",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_IsEditNotesAllowed",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfMemDocument const *)arg1)->IsEditNotesAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_IsFillAndSignAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::IsFillAndSignAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::IsFillAndSignAllowed",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_IsFillAndSignAllowed",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfMemDocument const *)arg1)->IsFillAndSignAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_IsAccessibilityAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::IsAccessibilityAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::IsAccessibilityAllowed",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_IsAccessibilityAllowed",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfMemDocument const *)arg1)->IsAccessibilityAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_IsDocAssemblyAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::IsDocAssemblyAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::IsDocAssemblyAllowed",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_IsDocAssemblyAllowed",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfMemDocument const *)arg1)->IsDocAssemblyAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_IsHighPrintAllowed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::IsHighPrintAllowed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::IsHighPrintAllowed",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_IsHighPrintAllowed",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfMemDocument const *)arg1)->IsHighPrintAllowed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_FreeObjectMemory__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::PdfReference *arg2 = 0 ;
  bool arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::FreeObjectMemory",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::FreeObjectMemory",1,"PoDoFo::PdfMemDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::FreeObjectMemory",2,"PoDoFo::PdfReference const &");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfMemDocument::FreeObjectMemory",3,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_FreeObjectMemory",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfReference,0))){
    SWIG_fail_ptr("PdfMemDocument_FreeObjectMemory",2,SWIGTYPE_p_PoDoFo__PdfReference);
  }
  
  arg3 = (lua_toboolean(L, 3)!=0);
  {
    try {
      (arg1)->FreeObjectMemory((PoDoFo::PdfReference const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_FreeObjectMemory__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::PdfReference *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::FreeObjectMemory",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::FreeObjectMemory",1,"PoDoFo::PdfMemDocument *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::FreeObjectMemory",2,"PoDoFo::PdfReference const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_FreeObjectMemory",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfReference,0))){
    SWIG_fail_ptr("PdfMemDocument_FreeObjectMemory",2,SWIGTYPE_p_PoDoFo__PdfReference);
  }
  
  {
    try {
      (arg1)->FreeObjectMemory((PoDoFo::PdfReference const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_FreeObjectMemory__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::PdfObject *arg2 = (PoDoFo::PdfObject *) 0 ;
  bool arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::FreeObjectMemory",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::FreeObjectMemory",1,"PoDoFo::PdfMemDocument *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::FreeObjectMemory",2,"PoDoFo::PdfObject *");
  if(!lua_isboolean(L,3)) SWIG_fail_arg("PoDoFo::PdfMemDocument::FreeObjectMemory",3,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_FreeObjectMemory",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("PdfMemDocument_FreeObjectMemory",2,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  arg3 = (lua_toboolean(L, 3)!=0);
  {
    try {
      (arg1)->FreeObjectMemory(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_FreeObjectMemory__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::PdfObject *arg2 = (PoDoFo::PdfObject *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::FreeObjectMemory",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::FreeObjectMemory",1,"PoDoFo::PdfMemDocument *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfMemDocument::FreeObjectMemory",2,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_FreeObjectMemory",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("PdfMemDocument_FreeObjectMemory",2,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      (arg1)->FreeObjectMemory(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfMemDocument_FreeObjectMemory(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfReference, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfMemDocument_FreeObjectMemory__SWIG_1(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfMemDocument_FreeObjectMemory__SWIG_3(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          return _wrap_PdfMemDocument_FreeObjectMemory__SWIG_2(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfMemDocument, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfReference, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isboolean(L,argv[2]);
        }
        if (_v) {
          return _wrap_PdfMemDocument_FreeObjectMemory__SWIG_0(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfMemDocument_FreeObjectMemory'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfMemDocument::FreeObjectMemory(PoDoFo::PdfReference const &,bool)\n"
    "    PoDoFo::PdfMemDocument::FreeObjectMemory(PoDoFo::PdfReference const &)\n"
    "    PoDoFo::PdfMemDocument::FreeObjectMemory(PoDoFo::PdfObject *,bool)\n"
    "    PoDoFo::PdfMemDocument::FreeObjectMemory(PoDoFo::PdfObject *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfMemDocument_GetEncrypt(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) 0 ;
  PoDoFo::PdfEncrypt *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfMemDocument::GetEncrypt",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfMemDocument::GetEncrypt",1,"PoDoFo::PdfMemDocument const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfMemDocument_GetEncrypt",1,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfEncrypt *)((PoDoFo::PdfMemDocument const *)arg1)->GetEncrypt();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfEncrypt,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfMemDocument(void *obj) {
PoDoFo::PdfMemDocument *arg1 = (PoDoFo::PdfMemDocument *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfMemDocument(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfMemDocument);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfMemDocument_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfMemDocument_methods[]= {
    { "Load", _wrap_PdfMemDocument_Load},
    { "Write", _wrap_PdfMemDocument_Write},
    { "SetWriteMode", _wrap_PdfMemDocument_SetWriteMode},
    { "GetWriteMode", _wrap_PdfMemDocument_GetWriteMode},
    { "SetPdfVersion", _wrap_PdfMemDocument_SetPdfVersion},
    { "GetPdfVersion", _wrap_PdfMemDocument_GetPdfVersion},
    { "AddPdfExtension", _wrap_PdfMemDocument_AddPdfExtension},
    { "HasPdfExtension", _wrap_PdfMemDocument_HasPdfExtension},
    { "RemovePdfExtension", _wrap_PdfMemDocument_RemovePdfExtension},
    { "GetPdfExtensions", _wrap_PdfMemDocument_GetPdfExtensions},
    { "SetPassword", _wrap_PdfMemDocument_SetPassword},
    { "SetEncrypted", _wrap_PdfMemDocument_SetEncrypted},
    { "GetEncrypted", _wrap_PdfMemDocument_GetEncrypted},
    { "IsLinearized", _wrap_PdfMemDocument_IsLinearized},
    { "GetObjects", _wrap_PdfMemDocument_GetObjects},
    { "GetCatalog", _wrap_PdfMemDocument_GetCatalog},
    { "GetTrailer", _wrap_PdfMemDocument_GetTrailer},
    { "GetStructTreeRoot", _wrap_PdfMemDocument_GetStructTreeRoot},
    { "GetMetadata", _wrap_PdfMemDocument_GetMetadata},
    { "GetMarkInfo", _wrap_PdfMemDocument_GetMarkInfo},
    { "GetLanguage", _wrap_PdfMemDocument_GetLanguage},
    { "GetFont", _wrap_PdfMemDocument_GetFont},
    { "InsertPages", _wrap_PdfMemDocument_InsertPages},
    { "DeletePages", _wrap_PdfMemDocument_DeletePages},
    { "IsPrintAllowed", _wrap_PdfMemDocument_IsPrintAllowed},
    { "IsEditAllowed", _wrap_PdfMemDocument_IsEditAllowed},
    { "IsCopyAllowed", _wrap_PdfMemDocument_IsCopyAllowed},
    { "IsEditNotesAllowed", _wrap_PdfMemDocument_IsEditNotesAllowed},
    { "IsFillAndSignAllowed", _wrap_PdfMemDocument_IsFillAndSignAllowed},
    { "IsAccessibilityAllowed", _wrap_PdfMemDocument_IsAccessibilityAllowed},
    { "IsDocAssemblyAllowed", _wrap_PdfMemDocument_IsDocAssemblyAllowed},
    { "IsHighPrintAllowed", _wrap_PdfMemDocument_IsHighPrintAllowed},
    { "FreeObjectMemory", _wrap_PdfMemDocument_FreeObjectMemory},
    { "GetEncrypt", _wrap_PdfMemDocument_GetEncrypt},
    {0,0}
};
static swig_lua_method swig_PdfMemDocument_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfMemDocument_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfMemDocument_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfMemDocument_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfMemDocument_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfMemDocument_Sf_SwigStatic = {
    "PdfMemDocument",
    swig_PdfMemDocument_Sf_SwigStatic_methods,
    swig_PdfMemDocument_Sf_SwigStatic_attributes,
    swig_PdfMemDocument_Sf_SwigStatic_constants,
    swig_PdfMemDocument_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfMemDocument_bases[] = {0,0};
static const char *swig_PdfMemDocument_base_names[] = {"PoDoFo::PdfDocument *",0};
static swig_lua_class _wrap_class_PdfMemDocument = { "PdfMemDocument", "PdfMemDocument", &SWIGTYPE_p_PoDoFo__PdfMemDocument,_proxy__wrap_new_PdfMemDocument, swig_delete_PdfMemDocument, swig_PdfMemDocument_methods, swig_PdfMemDocument_attributes, &swig_PdfMemDocument_Sf_SwigStatic, swig_PdfMemDocument_meta, swig_PdfMemDocument_bases, swig_PdfMemDocument_base_names };

static int _wrap_new_PdfNamesTree__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfVecObjects *arg1 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfNamesTree *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfNamesTree::PdfNamesTree",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfNamesTree::PdfNamesTree",1,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfNamesTree",1,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfNamesTree *)new PoDoFo::PdfNamesTree(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfNamesTree,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfNamesTree__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfObject *arg2 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfNamesTree *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfNamesTree::PdfNamesTree",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfNamesTree::PdfNamesTree",1,"PoDoFo::PdfObject *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfNamesTree::PdfNamesTree",2,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfNamesTree",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfNamesTree",2,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfNamesTree *)new PoDoFo::PdfNamesTree(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfNamesTree,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfNamesTree(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfNamesTree__SWIG_0(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfNamesTree__SWIG_1(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfNamesTree'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfNamesTree::PdfNamesTree(PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfNamesTree::PdfNamesTree(PoDoFo::PdfObject *,PoDoFo::PdfObject *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfNamesTree_AddValue(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfNamesTree *arg1 = (PoDoFo::PdfNamesTree *) 0 ;
  PoDoFo::PdfName *arg2 = 0 ;
  PoDoFo::PdfString *arg3 = 0 ;
  PoDoFo::PdfObject *arg4 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfNamesTree::AddValue",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfNamesTree::AddValue",1,"PoDoFo::PdfNamesTree *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfNamesTree::AddValue",2,"PoDoFo::PdfName const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfNamesTree::AddValue",3,"PoDoFo::PdfString const &");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfNamesTree::AddValue",4,"PoDoFo::PdfObject const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfNamesTree,0))){
    SWIG_fail_ptr("PdfNamesTree_AddValue",1,SWIGTYPE_p_PoDoFo__PdfNamesTree);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfName,0))){
    SWIG_fail_ptr("PdfNamesTree_AddValue",2,SWIGTYPE_p_PoDoFo__PdfName);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfNamesTree_AddValue",3,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("PdfNamesTree_AddValue",4,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      (arg1)->AddValue((PoDoFo::PdfName const &)*arg2,(PoDoFo::PdfString const &)*arg3,(PoDoFo::PdfObject const &)*arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfNamesTree_GetValue(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfNamesTree *arg1 = (PoDoFo::PdfNamesTree *) 0 ;
  PoDoFo::PdfName *arg2 = 0 ;
  PoDoFo::PdfString *arg3 = 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfNamesTree::GetValue",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfNamesTree::GetValue",1,"PoDoFo::PdfNamesTree const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfNamesTree::GetValue",2,"PoDoFo::PdfName const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfNamesTree::GetValue",3,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfNamesTree,0))){
    SWIG_fail_ptr("PdfNamesTree_GetValue",1,SWIGTYPE_p_PoDoFo__PdfNamesTree);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfName,0))){
    SWIG_fail_ptr("PdfNamesTree_GetValue",2,SWIGTYPE_p_PoDoFo__PdfName);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfNamesTree_GetValue",3,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfNamesTree const *)arg1)->GetValue((PoDoFo::PdfName const &)*arg2,(PoDoFo::PdfString const &)*arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfNamesTree_HasValue(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfNamesTree *arg1 = (PoDoFo::PdfNamesTree *) 0 ;
  PoDoFo::PdfName *arg2 = 0 ;
  PoDoFo::PdfString *arg3 = 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfNamesTree::HasValue",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfNamesTree::HasValue",1,"PoDoFo::PdfNamesTree const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfNamesTree::HasValue",2,"PoDoFo::PdfName const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfNamesTree::HasValue",3,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfNamesTree,0))){
    SWIG_fail_ptr("PdfNamesTree_HasValue",1,SWIGTYPE_p_PoDoFo__PdfNamesTree);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfName,0))){
    SWIG_fail_ptr("PdfNamesTree_HasValue",2,SWIGTYPE_p_PoDoFo__PdfName);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfNamesTree_HasValue",3,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfNamesTree const *)arg1)->HasValue((PoDoFo::PdfName const &)*arg2,(PoDoFo::PdfString const &)*arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfNamesTree_CheckLimits(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  PoDoFo::EPdfNameLimits result;
  
  SWIG_check_num_args("PoDoFo::PdfNamesTree::CheckLimits",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfNamesTree::CheckLimits",1,"PoDoFo::PdfObject const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfNamesTree::CheckLimits",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("PdfNamesTree_CheckLimits",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfNamesTree_CheckLimits",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = (PoDoFo::EPdfNameLimits)PoDoFo::PdfNamesTree::CheckLimits((PoDoFo::PdfObject const *)arg1,(PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfNamesTree_ToDictionary(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfNamesTree *arg1 = (PoDoFo::PdfNamesTree *) 0 ;
  PoDoFo::PdfName *arg2 = 0 ;
  PoDoFo::PdfDictionary *arg3 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfNamesTree::ToDictionary",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfNamesTree::ToDictionary",1,"PoDoFo::PdfNamesTree *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfNamesTree::ToDictionary",2,"PoDoFo::PdfName const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfNamesTree::ToDictionary",3,"PoDoFo::PdfDictionary &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfNamesTree,0))){
    SWIG_fail_ptr("PdfNamesTree_ToDictionary",1,SWIGTYPE_p_PoDoFo__PdfNamesTree);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfName,0))){
    SWIG_fail_ptr("PdfNamesTree_ToDictionary",2,SWIGTYPE_p_PoDoFo__PdfName);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfDictionary,0))){
    SWIG_fail_ptr("PdfNamesTree_ToDictionary",3,SWIGTYPE_p_PoDoFo__PdfDictionary);
  }
  
  {
    try {
      (arg1)->ToDictionary((PoDoFo::PdfName const &)*arg2,*arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfNamesTree_GetJavaScriptNode__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfNamesTree *arg1 = (PoDoFo::PdfNamesTree *) 0 ;
  bool arg2 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfNamesTree::GetJavaScriptNode",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfNamesTree::GetJavaScriptNode",1,"PoDoFo::PdfNamesTree const *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfNamesTree::GetJavaScriptNode",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfNamesTree,0))){
    SWIG_fail_ptr("PdfNamesTree_GetJavaScriptNode",1,SWIGTYPE_p_PoDoFo__PdfNamesTree);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfNamesTree const *)arg1)->GetJavaScriptNode(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfNamesTree_GetJavaScriptNode__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfNamesTree *arg1 = (PoDoFo::PdfNamesTree *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfNamesTree::GetJavaScriptNode",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfNamesTree::GetJavaScriptNode",1,"PoDoFo::PdfNamesTree const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfNamesTree,0))){
    SWIG_fail_ptr("PdfNamesTree_GetJavaScriptNode",1,SWIGTYPE_p_PoDoFo__PdfNamesTree);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfNamesTree const *)arg1)->GetJavaScriptNode();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfNamesTree_GetJavaScriptNode(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfNamesTree, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfNamesTree_GetJavaScriptNode__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfNamesTree, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfNamesTree_GetJavaScriptNode__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfNamesTree_GetJavaScriptNode'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfNamesTree::GetJavaScriptNode(bool) const\n"
    "    PoDoFo::PdfNamesTree::GetJavaScriptNode() const\n");
  lua_error(L);return 0;
}


static int _wrap_PdfNamesTree_GetDestsNode__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfNamesTree *arg1 = (PoDoFo::PdfNamesTree *) 0 ;
  bool arg2 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfNamesTree::GetDestsNode",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfNamesTree::GetDestsNode",1,"PoDoFo::PdfNamesTree const *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfNamesTree::GetDestsNode",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfNamesTree,0))){
    SWIG_fail_ptr("PdfNamesTree_GetDestsNode",1,SWIGTYPE_p_PoDoFo__PdfNamesTree);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfNamesTree const *)arg1)->GetDestsNode(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfNamesTree_GetDestsNode__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfNamesTree *arg1 = (PoDoFo::PdfNamesTree *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfNamesTree::GetDestsNode",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfNamesTree::GetDestsNode",1,"PoDoFo::PdfNamesTree const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfNamesTree,0))){
    SWIG_fail_ptr("PdfNamesTree_GetDestsNode",1,SWIGTYPE_p_PoDoFo__PdfNamesTree);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfNamesTree const *)arg1)->GetDestsNode();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfNamesTree_GetDestsNode(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfNamesTree, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfNamesTree_GetDestsNode__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfNamesTree, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfNamesTree_GetDestsNode__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfNamesTree_GetDestsNode'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfNamesTree::GetDestsNode(bool) const\n"
    "    PoDoFo::PdfNamesTree::GetDestsNode() const\n");
  lua_error(L);return 0;
}


static void swig_delete_PdfNamesTree(void *obj) {
PoDoFo::PdfNamesTree *arg1 = (PoDoFo::PdfNamesTree *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfNamesTree(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfNamesTree);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfNamesTree_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfNamesTree_methods[]= {
    { "AddValue", _wrap_PdfNamesTree_AddValue},
    { "GetValue", _wrap_PdfNamesTree_GetValue},
    { "HasValue", _wrap_PdfNamesTree_HasValue},
    { "ToDictionary", _wrap_PdfNamesTree_ToDictionary},
    { "GetJavaScriptNode", _wrap_PdfNamesTree_GetJavaScriptNode},
    { "GetDestsNode", _wrap_PdfNamesTree_GetDestsNode},
    {0,0}
};
static swig_lua_method swig_PdfNamesTree_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfNamesTree_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfNamesTree_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfNamesTree_Sf_SwigStatic_methods[]= {
    { "CheckLimits", _wrap_PdfNamesTree_CheckLimits},
    {0,0}
};
static swig_lua_class* swig_PdfNamesTree_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfNamesTree_Sf_SwigStatic = {
    "PdfNamesTree",
    swig_PdfNamesTree_Sf_SwigStatic_methods,
    swig_PdfNamesTree_Sf_SwigStatic_attributes,
    swig_PdfNamesTree_Sf_SwigStatic_constants,
    swig_PdfNamesTree_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfNamesTree_bases[] = {0,0};
static const char *swig_PdfNamesTree_base_names[] = {"PoDoFo::PdfElement *",0};
static swig_lua_class _wrap_class_PdfNamesTree = { "PdfNamesTree", "PdfNamesTree", &SWIGTYPE_p_PoDoFo__PdfNamesTree,_proxy__wrap_new_PdfNamesTree, swig_delete_PdfNamesTree, swig_PdfNamesTree_methods, swig_PdfNamesTree_attributes, &swig_PdfNamesTree_Sf_SwigStatic, swig_PdfNamesTree_meta, swig_PdfNamesTree_bases, swig_PdfNamesTree_base_names };

static int _wrap_PdfOutlineItem_CreateChild(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  PoDoFo::PdfDestination *arg3 = 0 ;
  PoDoFo::PdfOutlineItem *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::CreateChild",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::CreateChild",1,"PoDoFo::PdfOutlineItem *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::CreateChild",2,"PoDoFo::PdfString const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::CreateChild",3,"PoDoFo::PdfDestination const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_CreateChild",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfOutlineItem_CreateChild",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("PdfOutlineItem_CreateChild",3,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  {
    try {
      result = (PoDoFo::PdfOutlineItem *)(arg1)->CreateChild((PoDoFo::PdfString const &)*arg2,(PoDoFo::PdfDestination const &)*arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_CreateNext__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  PoDoFo::PdfDestination *arg3 = 0 ;
  PoDoFo::PdfOutlineItem *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::CreateNext",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::CreateNext",1,"PoDoFo::PdfOutlineItem *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::CreateNext",2,"PoDoFo::PdfString const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::CreateNext",3,"PoDoFo::PdfDestination const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_CreateNext",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfOutlineItem_CreateNext",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("PdfOutlineItem_CreateNext",3,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  {
    try {
      result = (PoDoFo::PdfOutlineItem *)(arg1)->CreateNext((PoDoFo::PdfString const &)*arg2,(PoDoFo::PdfDestination const &)*arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_CreateNext__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  PoDoFo::PdfAction *arg3 = 0 ;
  PoDoFo::PdfOutlineItem *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::CreateNext",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::CreateNext",1,"PoDoFo::PdfOutlineItem *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::CreateNext",2,"PoDoFo::PdfString const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::CreateNext",3,"PoDoFo::PdfAction const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_CreateNext",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfOutlineItem_CreateNext",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfOutlineItem_CreateNext",3,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      result = (PoDoFo::PdfOutlineItem *)(arg1)->CreateNext((PoDoFo::PdfString const &)*arg2,(PoDoFo::PdfAction const &)*arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_CreateNext(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfOutlineItem, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDestination, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_PdfOutlineItem_CreateNext__SWIG_0(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfOutlineItem, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAction, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_PdfOutlineItem_CreateNext__SWIG_1(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfOutlineItem_CreateNext'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfOutlineItem::CreateNext(PoDoFo::PdfString const &,PoDoFo::PdfDestination const &)\n"
    "    PoDoFo::PdfOutlineItem::CreateNext(PoDoFo::PdfString const &,PoDoFo::PdfAction const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfOutlineItem_InsertChild(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  PoDoFo::PdfOutlineItem *arg2 = (PoDoFo::PdfOutlineItem *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::InsertChild",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::InsertChild",1,"PoDoFo::PdfOutlineItem *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::InsertChild",2,"PoDoFo::PdfOutlineItem *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_InsertChild",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_InsertChild",2,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  {
    try {
      (arg1)->InsertChild(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_Prev(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  PoDoFo::PdfOutlineItem *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::Prev",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::Prev",1,"PoDoFo::PdfOutlineItem const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_Prev",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  {
    try {
      result = (PoDoFo::PdfOutlineItem *)((PoDoFo::PdfOutlineItem const *)arg1)->Prev();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_Next(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  PoDoFo::PdfOutlineItem *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::Next",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::Next",1,"PoDoFo::PdfOutlineItem const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_Next",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  {
    try {
      result = (PoDoFo::PdfOutlineItem *)((PoDoFo::PdfOutlineItem const *)arg1)->Next();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_First(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  PoDoFo::PdfOutlineItem *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::First",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::First",1,"PoDoFo::PdfOutlineItem const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_First",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  {
    try {
      result = (PoDoFo::PdfOutlineItem *)((PoDoFo::PdfOutlineItem const *)arg1)->First();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_Last(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  PoDoFo::PdfOutlineItem *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::Last",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::Last",1,"PoDoFo::PdfOutlineItem const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_Last",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  {
    try {
      result = (PoDoFo::PdfOutlineItem *)((PoDoFo::PdfOutlineItem const *)arg1)->Last();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_GetParentOutline(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  PoDoFo::PdfOutlineItem *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::GetParentOutline",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::GetParentOutline",1,"PoDoFo::PdfOutlineItem const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_GetParentOutline",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  {
    try {
      result = (PoDoFo::PdfOutlineItem *)((PoDoFo::PdfOutlineItem const *)arg1)->GetParentOutline();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_Erase(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::Erase",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::Erase",1,"PoDoFo::PdfOutlineItem *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_Erase",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  {
    try {
      (arg1)->Erase();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_SetDestination(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  PoDoFo::PdfDestination *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::SetDestination",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::SetDestination",1,"PoDoFo::PdfOutlineItem *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::SetDestination",2,"PoDoFo::PdfDestination const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_SetDestination",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfDestination,0))){
    SWIG_fail_ptr("PdfOutlineItem_SetDestination",2,SWIGTYPE_p_PoDoFo__PdfDestination);
  }
  
  {
    try {
      (arg1)->SetDestination((PoDoFo::PdfDestination const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_GetDestination(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  PoDoFo::PdfDocument *arg2 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfDestination *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::GetDestination",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::GetDestination",1,"PoDoFo::PdfOutlineItem *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::GetDestination",2,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_GetDestination",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfOutlineItem_GetDestination",2,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfDestination *)(arg1)->GetDestination(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfDestination,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_SetAction(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  PoDoFo::PdfAction *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::SetAction",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::SetAction",1,"PoDoFo::PdfOutlineItem *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::SetAction",2,"PoDoFo::PdfAction const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_SetAction",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAction,0))){
    SWIG_fail_ptr("PdfOutlineItem_SetAction",2,SWIGTYPE_p_PoDoFo__PdfAction);
  }
  
  {
    try {
      (arg1)->SetAction((PoDoFo::PdfAction const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_GetAction(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  PoDoFo::PdfAction *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::GetAction",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::GetAction",1,"PoDoFo::PdfOutlineItem *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_GetAction",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  {
    try {
      result = (PoDoFo::PdfAction *)(arg1)->GetAction();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAction,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_SetTitle(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::SetTitle",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::SetTitle",1,"PoDoFo::PdfOutlineItem *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::SetTitle",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_SetTitle",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfOutlineItem_SetTitle",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetTitle((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_GetTitle(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  PoDoFo::PdfString *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::GetTitle",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::GetTitle",1,"PoDoFo::PdfOutlineItem const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_GetTitle",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  {
    try {
      result = (PoDoFo::PdfString *) &((PoDoFo::PdfOutlineItem const *)arg1)->GetTitle();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfString,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_SetTextFormat(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  PoDoFo::EPdfOutlineFormat arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::SetTextFormat",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::SetTextFormat",1,"PoDoFo::PdfOutlineItem *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::SetTextFormat",2,"PoDoFo::EPdfOutlineFormat");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_SetTextFormat",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  arg2 = (PoDoFo::EPdfOutlineFormat)(int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetTextFormat(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_GetTextFormat(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  PoDoFo::EPdfOutlineFormat result;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::GetTextFormat",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::GetTextFormat",1,"PoDoFo::PdfOutlineItem const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_GetTextFormat",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  {
    try {
      result = (PoDoFo::EPdfOutlineFormat)((PoDoFo::PdfOutlineItem const *)arg1)->GetTextFormat();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_SetTextColor(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::SetTextColor",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::SetTextColor",1,"PoDoFo::PdfOutlineItem *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::SetTextColor",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::SetTextColor",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::SetTextColor",4,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_SetTextColor",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  {
    try {
      (arg1)->SetTextColor(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_GetTextColorRed(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  double result;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::GetTextColorRed",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::GetTextColorRed",1,"PoDoFo::PdfOutlineItem const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_GetTextColorRed",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  {
    try {
      result = (double)((PoDoFo::PdfOutlineItem const *)arg1)->GetTextColorRed();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_GetTextColorBlue(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  double result;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::GetTextColorBlue",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::GetTextColorBlue",1,"PoDoFo::PdfOutlineItem const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_GetTextColorBlue",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  {
    try {
      result = (double)((PoDoFo::PdfOutlineItem const *)arg1)->GetTextColorBlue();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfOutlineItem_GetTextColorGreen(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) 0 ;
  double result;
  
  SWIG_check_num_args("PoDoFo::PdfOutlineItem::GetTextColorGreen",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlineItem::GetTextColorGreen",1,"PoDoFo::PdfOutlineItem const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0))){
    SWIG_fail_ptr("PdfOutlineItem_GetTextColorGreen",1,SWIGTYPE_p_PoDoFo__PdfOutlineItem);
  }
  
  {
    try {
      result = (double)((PoDoFo::PdfOutlineItem const *)arg1)->GetTextColorGreen();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfOutlineItem(void *obj) {
PoDoFo::PdfOutlineItem *arg1 = (PoDoFo::PdfOutlineItem *) obj;
delete arg1;
}
static swig_lua_attribute swig_PdfOutlineItem_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfOutlineItem_methods[]= {
    { "CreateChild", _wrap_PdfOutlineItem_CreateChild},
    { "CreateNext", _wrap_PdfOutlineItem_CreateNext},
    { "InsertChild", _wrap_PdfOutlineItem_InsertChild},
    { "Prev", _wrap_PdfOutlineItem_Prev},
    { "Next", _wrap_PdfOutlineItem_Next},
    { "First", _wrap_PdfOutlineItem_First},
    { "Last", _wrap_PdfOutlineItem_Last},
    { "GetParentOutline", _wrap_PdfOutlineItem_GetParentOutline},
    { "Erase", _wrap_PdfOutlineItem_Erase},
    { "SetDestination", _wrap_PdfOutlineItem_SetDestination},
    { "GetDestination", _wrap_PdfOutlineItem_GetDestination},
    { "SetAction", _wrap_PdfOutlineItem_SetAction},
    { "GetAction", _wrap_PdfOutlineItem_GetAction},
    { "SetTitle", _wrap_PdfOutlineItem_SetTitle},
    { "GetTitle", _wrap_PdfOutlineItem_GetTitle},
    { "SetTextFormat", _wrap_PdfOutlineItem_SetTextFormat},
    { "GetTextFormat", _wrap_PdfOutlineItem_GetTextFormat},
    { "SetTextColor", _wrap_PdfOutlineItem_SetTextColor},
    { "GetTextColorRed", _wrap_PdfOutlineItem_GetTextColorRed},
    { "GetTextColorBlue", _wrap_PdfOutlineItem_GetTextColorBlue},
    { "GetTextColorGreen", _wrap_PdfOutlineItem_GetTextColorGreen},
    {0,0}
};
static swig_lua_method swig_PdfOutlineItem_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfOutlineItem_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfOutlineItem_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfOutlineItem_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfOutlineItem_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfOutlineItem_Sf_SwigStatic = {
    "PdfOutlineItem",
    swig_PdfOutlineItem_Sf_SwigStatic_methods,
    swig_PdfOutlineItem_Sf_SwigStatic_attributes,
    swig_PdfOutlineItem_Sf_SwigStatic_constants,
    swig_PdfOutlineItem_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfOutlineItem_bases[] = {0,0};
static const char *swig_PdfOutlineItem_base_names[] = {"PoDoFo::PdfElement *",0};
static swig_lua_class _wrap_class_PdfOutlineItem = { "PdfOutlineItem", "PdfOutlineItem", &SWIGTYPE_p_PoDoFo__PdfOutlineItem,0, swig_delete_PdfOutlineItem, swig_PdfOutlineItem_methods, swig_PdfOutlineItem_attributes, &swig_PdfOutlineItem_Sf_SwigStatic, swig_PdfOutlineItem_meta, swig_PdfOutlineItem_bases, swig_PdfOutlineItem_base_names };

static int _wrap_new_PdfOutlines__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfVecObjects *arg1 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfOutlines *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlines::PdfOutlines",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlines::PdfOutlines",1,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfOutlines",1,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfOutlines *)new PoDoFo::PdfOutlines(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfOutlines,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfOutlines__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfOutlines *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlines::PdfOutlines",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlines::PdfOutlines",1,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfOutlines",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfOutlines *)new PoDoFo::PdfOutlines(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfOutlines,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfOutlines(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfOutlines__SWIG_0(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfOutlines__SWIG_1(L);
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfOutlines'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfOutlines::PdfOutlines(PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfOutlines::PdfOutlines(PoDoFo::PdfObject *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfOutlines_CreateRoot(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutlines *arg1 = (PoDoFo::PdfOutlines *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  PoDoFo::PdfOutlineItem *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfOutlines::CreateRoot",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfOutlines::CreateRoot",1,"PoDoFo::PdfOutlines *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfOutlines::CreateRoot",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutlines,0))){
    SWIG_fail_ptr("PdfOutlines_CreateRoot",1,SWIGTYPE_p_PoDoFo__PdfOutlines);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfOutlines_CreateRoot",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = (PoDoFo::PdfOutlineItem *)(arg1)->CreateRoot((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfOutlineItem,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfOutlines(void *obj) {
PoDoFo::PdfOutlines *arg1 = (PoDoFo::PdfOutlines *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfOutlines(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfOutlines);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfOutlines_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfOutlines_methods[]= {
    { "CreateRoot", _wrap_PdfOutlines_CreateRoot},
    {0,0}
};
static swig_lua_method swig_PdfOutlines_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfOutlines_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfOutlines_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfOutlines_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfOutlines_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfOutlines_Sf_SwigStatic = {
    "PdfOutlines",
    swig_PdfOutlines_Sf_SwigStatic_methods,
    swig_PdfOutlines_Sf_SwigStatic_attributes,
    swig_PdfOutlines_Sf_SwigStatic_constants,
    swig_PdfOutlines_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfOutlines_bases[] = {0,0};
static const char *swig_PdfOutlines_base_names[] = {"PoDoFo::PdfOutlineItem *",0};
static swig_lua_class _wrap_class_PdfOutlines = { "PdfOutlines", "PdfOutlines", &SWIGTYPE_p_PoDoFo__PdfOutlines,_proxy__wrap_new_PdfOutlines, swig_delete_PdfOutlines, swig_PdfOutlines_methods, swig_PdfOutlines_attributes, &swig_PdfOutlines_Sf_SwigStatic, swig_PdfOutlines_meta, swig_PdfOutlines_bases, swig_PdfOutlines_base_names };

static int _wrap_new_PdfPage__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = 0 ;
  PoDoFo::PdfDocument *arg2 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfPage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPage::PdfPage",2,2)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::PdfPage",1,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfPage::PdfPage",2,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfPage",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfPage",2,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfPage *)new PoDoFo::PdfPage((PoDoFo::PdfRect const &)*arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPage,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfPage__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfRect *arg1 = 0 ;
  PoDoFo::PdfVecObjects *arg2 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfPage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPage::PdfPage",2,2)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::PdfPage",1,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfPage::PdfPage",2,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfPage",1,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfPage",2,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfPage *)new PoDoFo::PdfPage((PoDoFo::PdfRect const &)*arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPage,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfPage__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  std::deque< PoDoFo::PdfObject * > *arg2 = 0 ;
  PoDoFo::PdfPage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPage::PdfPage",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::PdfPage",1,"PoDoFo::PdfObject *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPage::PdfPage",2,"std::deque< PoDoFo::PdfObject * > const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfPage",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_std__dequeT_PoDoFo__PdfObject_p_t,0))){
    SWIG_fail_ptr("new_PdfPage",2,SWIGTYPE_p_std__dequeT_PoDoFo__PdfObject_p_t);
  }
  
  {
    try {
      result = (PoDoFo::PdfPage *)new PoDoFo::PdfPage(arg1,(std::deque< PoDoFo::PdfObject * > const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPage,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfPage(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfPage__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfPage__SWIG_1(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_std__dequeT_PoDoFo__PdfObject_p_t, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_new_PdfPage__SWIG_2(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfPage'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPage::PdfPage(PoDoFo::PdfRect const &,PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfPage::PdfPage(PoDoFo::PdfRect const &,PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfPage::PdfPage(PoDoFo::PdfObject *,std::deque< PoDoFo::PdfObject * > const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPage_GetPageSize(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect result;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetPageSize",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetPageSize",1,"PoDoFo::PdfPage const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetPageSize",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  {
    try {
      result = ((PoDoFo::PdfPage const *)arg1)->GetPageSize();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfRect * resultptr = new PoDoFo::PdfRect((const PoDoFo::PdfRect &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_SetPageWidth(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  int arg2 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfPage::SetPageWidth",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::SetPageWidth",1,"PoDoFo::PdfPage *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPage::SetPageWidth",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_SetPageWidth",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = (bool)(arg1)->SetPageWidth(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_SetPageHeight(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  int arg2 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfPage::SetPageHeight",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::SetPageHeight",1,"PoDoFo::PdfPage *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPage::SetPageHeight",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_SetPageHeight",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = (bool)(arg1)->SetPageHeight(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_SetTrimBox(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPage::SetTrimBox",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::SetTrimBox",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPage::SetTrimBox",2,"PoDoFo::PdfRect const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_SetTrimBox",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfPage_SetTrimBox",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  {
    try {
      (arg1)->SetTrimBox((PoDoFo::PdfRect const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_GetPageNumber(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  unsigned int result;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetPageNumber",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetPageNumber",1,"PoDoFo::PdfPage const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetPageNumber",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  {
    try {
      result = (unsigned int)((PoDoFo::PdfPage const *)arg1)->GetPageNumber();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_CreateStandardPageSize__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::EPdfPageSize arg1 ;
  bool arg2 ;
  PoDoFo::PdfRect result;
  
  SWIG_check_num_args("PoDoFo::PdfPage::CreateStandardPageSize",2,2)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::CreateStandardPageSize",1,"PoDoFo::EPdfPageSize const");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfPage::CreateStandardPageSize",2,"bool");
  arg1 = (PoDoFo::EPdfPageSize const)(int)lua_tonumber(L, 1);
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      result = PoDoFo::PdfPage::CreateStandardPageSize(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfRect * resultptr = new PoDoFo::PdfRect((const PoDoFo::PdfRect &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_CreateStandardPageSize__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::EPdfPageSize arg1 ;
  PoDoFo::PdfRect result;
  
  SWIG_check_num_args("PoDoFo::PdfPage::CreateStandardPageSize",1,1)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::CreateStandardPageSize",1,"PoDoFo::EPdfPageSize const");
  arg1 = (PoDoFo::EPdfPageSize const)(int)lua_tonumber(L, 1);
  {
    try {
      result = PoDoFo::PdfPage::CreateStandardPageSize(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfRect * resultptr = new PoDoFo::PdfRect((const PoDoFo::PdfRect &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_CreateStandardPageSize(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      return _wrap_PdfPage_CreateStandardPageSize__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfPage_CreateStandardPageSize__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPage_CreateStandardPageSize'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPage::CreateStandardPageSize(PoDoFo::EPdfPageSize const,bool)\n"
    "    PoDoFo::PdfPage::CreateStandardPageSize(PoDoFo::EPdfPageSize const)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPage_GetContents(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetContents",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetContents",1,"PoDoFo::PdfPage const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetContents",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfPage const *)arg1)->GetContents();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_GetContentsForAppending(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetContentsForAppending",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetContentsForAppending",1,"PoDoFo::PdfPage const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetContentsForAppending",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfPage const *)arg1)->GetContentsForAppending();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_GetResources(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetResources",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetResources",1,"PoDoFo::PdfPage const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetResources",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfPage const *)arg1)->GetResources();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_GetMediaBox(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect result;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetMediaBox",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetMediaBox",1,"PoDoFo::PdfPage const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetMediaBox",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  {
    try {
      result = ((PoDoFo::PdfPage const *)arg1)->GetMediaBox();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfRect * resultptr = new PoDoFo::PdfRect((const PoDoFo::PdfRect &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_GetCropBox(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect result;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetCropBox",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetCropBox",1,"PoDoFo::PdfPage const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetCropBox",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  {
    try {
      result = ((PoDoFo::PdfPage const *)arg1)->GetCropBox();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfRect * resultptr = new PoDoFo::PdfRect((const PoDoFo::PdfRect &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_GetTrimBox(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect result;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetTrimBox",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetTrimBox",1,"PoDoFo::PdfPage const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetTrimBox",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  {
    try {
      result = ((PoDoFo::PdfPage const *)arg1)->GetTrimBox();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfRect * resultptr = new PoDoFo::PdfRect((const PoDoFo::PdfRect &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_GetBleedBox(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect result;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetBleedBox",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetBleedBox",1,"PoDoFo::PdfPage const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetBleedBox",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  {
    try {
      result = ((PoDoFo::PdfPage const *)arg1)->GetBleedBox();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfRect * resultptr = new PoDoFo::PdfRect((const PoDoFo::PdfRect &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_GetArtBox(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect result;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetArtBox",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetArtBox",1,"PoDoFo::PdfPage const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetArtBox",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  {
    try {
      result = ((PoDoFo::PdfPage const *)arg1)->GetArtBox();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfRect * resultptr = new PoDoFo::PdfRect((const PoDoFo::PdfRect &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfRect,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_GetRotation(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  int result;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetRotation",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetRotation",1,"PoDoFo::PdfPage const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetRotation",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  {
    try {
      result = (int)((PoDoFo::PdfPage const *)arg1)->GetRotation();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_SetRotation(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPage::SetRotation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::SetRotation",1,"PoDoFo::PdfPage *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPage::SetRotation",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_SetRotation",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetRotation(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_GetNumAnnots(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  int result;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetNumAnnots",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetNumAnnots",1,"PoDoFo::PdfPage const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetNumAnnots",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  {
    try {
      result = (int)((PoDoFo::PdfPage const *)arg1)->GetNumAnnots();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_CreateAnnotation(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::EPdfAnnotation arg2 ;
  PoDoFo::PdfRect *arg3 = 0 ;
  PoDoFo::PdfAnnotation *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPage::CreateAnnotation",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::CreateAnnotation",1,"PoDoFo::PdfPage *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPage::CreateAnnotation",2,"PoDoFo::EPdfAnnotation");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfPage::CreateAnnotation",3,"PoDoFo::PdfRect const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_CreateAnnotation",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  arg2 = (PoDoFo::EPdfAnnotation)(int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfPage_CreateAnnotation",3,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  {
    try {
      result = (PoDoFo::PdfAnnotation *)(arg1)->CreateAnnotation(arg2,(PoDoFo::PdfRect const &)*arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAnnotation,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_GetAnnotation(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  int arg2 ;
  PoDoFo::PdfAnnotation *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetAnnotation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetAnnotation",1,"PoDoFo::PdfPage *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPage::GetAnnotation",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetAnnotation",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = (PoDoFo::PdfAnnotation *)(arg1)->GetAnnotation(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAnnotation,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_DeleteAnnotation__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPage::DeleteAnnotation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::DeleteAnnotation",1,"PoDoFo::PdfPage *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPage::DeleteAnnotation",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_DeleteAnnotation",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->DeleteAnnotation(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_DeleteAnnotation__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfReference *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPage::DeleteAnnotation",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::DeleteAnnotation",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPage::DeleteAnnotation",2,"PoDoFo::PdfReference const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_DeleteAnnotation",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfReference,0))){
    SWIG_fail_ptr("PdfPage_DeleteAnnotation",2,SWIGTYPE_p_PoDoFo__PdfReference);
  }
  
  {
    try {
      (arg1)->DeleteAnnotation((PoDoFo::PdfReference const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_DeleteAnnotation(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfReference, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfPage_DeleteAnnotation__SWIG_1(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfPage_DeleteAnnotation__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPage_DeleteAnnotation'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPage::DeleteAnnotation(int)\n"
    "    PoDoFo::PdfPage::DeleteAnnotation(PoDoFo::PdfReference const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPage_GetNumFields(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  int result;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetNumFields",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetNumFields",1,"PoDoFo::PdfPage const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetNumFields",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  {
    try {
      result = (int)((PoDoFo::PdfPage const *)arg1)->GetNumFields();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_GetField__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  int arg2 ;
  SwigValueWrapper< PoDoFo::PdfField > result;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetField",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetField",1,"PoDoFo::PdfPage *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPage::GetField",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetField",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = (arg1)->GetField(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfField * resultptr = new PoDoFo::PdfField((const PoDoFo::PdfField &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfField,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_GetField__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  int arg2 ;
  SwigValueWrapper< PoDoFo::PdfField > result;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetField",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetField",1,"PoDoFo::PdfPage const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPage::GetField",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetField",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = ((PoDoFo::PdfPage const *)arg1)->GetField(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfField * resultptr = new PoDoFo::PdfField((const PoDoFo::PdfField &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfField,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_GetField(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfPage_GetField__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfPage_GetField__SWIG_1(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPage_GetField'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPage::GetField(int)\n"
    "    PoDoFo::PdfPage::GetField(int) const\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPage_GetFromResources(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfName *arg2 = 0 ;
  PoDoFo::PdfName *arg3 = 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetFromResources",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetFromResources",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPage::GetFromResources",2,"PoDoFo::PdfName const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfPage::GetFromResources",3,"PoDoFo::PdfName const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetFromResources",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfName,0))){
    SWIG_fail_ptr("PdfPage_GetFromResources",2,SWIGTYPE_p_PoDoFo__PdfName);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfName,0))){
    SWIG_fail_ptr("PdfPage_GetFromResources",3,SWIGTYPE_p_PoDoFo__PdfName);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)(arg1)->GetFromResources((PoDoFo::PdfName const &)*arg2,(PoDoFo::PdfName const &)*arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_GetInheritedKey(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfName *arg2 = 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetInheritedKey",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetInheritedKey",1,"PoDoFo::PdfPage const *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPage::GetInheritedKey",2,"PoDoFo::PdfName const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetInheritedKey",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfName,0))){
    SWIG_fail_ptr("PdfPage_GetInheritedKey",2,SWIGTYPE_p_PoDoFo__PdfName);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)((PoDoFo::PdfPage const *)arg1)->GetInheritedKey((PoDoFo::PdfName const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPage_GetOwnAnnotationsArray(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  bool arg2 ;
  PoDoFo::PdfDocument *arg3 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfObject *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPage::GetOwnAnnotationsArray",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPage::GetOwnAnnotationsArray",1,"PoDoFo::PdfPage *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfPage::GetOwnAnnotationsArray",2,"bool");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfPage::GetOwnAnnotationsArray",3,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPage_GetOwnAnnotationsArray",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("PdfPage_GetOwnAnnotationsArray",3,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfObject *)(arg1)->GetOwnAnnotationsArray(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfObject,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfPage(void *obj) {
PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfPage(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfPage);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfPage_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfPage_methods[]= {
    { "GetPageSize", _wrap_PdfPage_GetPageSize},
    { "SetPageWidth", _wrap_PdfPage_SetPageWidth},
    { "SetPageHeight", _wrap_PdfPage_SetPageHeight},
    { "SetTrimBox", _wrap_PdfPage_SetTrimBox},
    { "GetPageNumber", _wrap_PdfPage_GetPageNumber},
    { "GetContents", _wrap_PdfPage_GetContents},
    { "GetContentsForAppending", _wrap_PdfPage_GetContentsForAppending},
    { "GetResources", _wrap_PdfPage_GetResources},
    { "GetMediaBox", _wrap_PdfPage_GetMediaBox},
    { "GetCropBox", _wrap_PdfPage_GetCropBox},
    { "GetTrimBox", _wrap_PdfPage_GetTrimBox},
    { "GetBleedBox", _wrap_PdfPage_GetBleedBox},
    { "GetArtBox", _wrap_PdfPage_GetArtBox},
    { "GetRotation", _wrap_PdfPage_GetRotation},
    { "SetRotation", _wrap_PdfPage_SetRotation},
    { "GetNumAnnots", _wrap_PdfPage_GetNumAnnots},
    { "CreateAnnotation", _wrap_PdfPage_CreateAnnotation},
    { "GetAnnotation", _wrap_PdfPage_GetAnnotation},
    { "DeleteAnnotation", _wrap_PdfPage_DeleteAnnotation},
    { "GetNumFields", _wrap_PdfPage_GetNumFields},
    { "GetField", _wrap_PdfPage_GetField},
    { "GetFromResources", _wrap_PdfPage_GetFromResources},
    { "GetInheritedKey", _wrap_PdfPage_GetInheritedKey},
    { "GetOwnAnnotationsArray", _wrap_PdfPage_GetOwnAnnotationsArray},
    {0,0}
};
static swig_lua_method swig_PdfPage_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfPage_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfPage_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfPage_Sf_SwigStatic_methods[]= {
    { "CreateStandardPageSize", _wrap_PdfPage_CreateStandardPageSize},
    {0,0}
};
static swig_lua_class* swig_PdfPage_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfPage_Sf_SwigStatic = {
    "PdfPage",
    swig_PdfPage_Sf_SwigStatic_methods,
    swig_PdfPage_Sf_SwigStatic_attributes,
    swig_PdfPage_Sf_SwigStatic_constants,
    swig_PdfPage_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfPage_bases[] = {0,0,0};
static const char *swig_PdfPage_base_names[] = {"PoDoFo::PdfElement *","PoDoFo::PdfCanvas *",0};
static swig_lua_class _wrap_class_PdfPage = { "PdfPage", "PdfPage", &SWIGTYPE_p_PoDoFo__PdfPage,_proxy__wrap_new_PdfPage, swig_delete_PdfPage, swig_PdfPage_methods, swig_PdfPage_attributes, &swig_PdfPage_Sf_SwigStatic, swig_PdfPage_meta, swig_PdfPage_bases, swig_PdfPage_base_names };

static int _wrap_new_PdfPagesTree__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfVecObjects *arg1 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfPagesTree *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTree::PdfPagesTree",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTree::PdfPagesTree",1,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfPagesTree",1,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfPagesTree *)new PoDoFo::PdfPagesTree(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPagesTree,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfPagesTree__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfObject *arg1 = (PoDoFo::PdfObject *) 0 ;
  PoDoFo::PdfPagesTree *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTree::PdfPagesTree",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTree::PdfPagesTree",1,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("new_PdfPagesTree",1,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      result = (PoDoFo::PdfPagesTree *)new PoDoFo::PdfPagesTree(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPagesTree,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfPagesTree(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfPagesTree__SWIG_0(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfPagesTree__SWIG_1(L);
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfPagesTree'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPagesTree::PdfPagesTree(PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfPagesTree::PdfPagesTree(PoDoFo::PdfObject *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPagesTree_GetTotalNumberOfPages(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPagesTree *arg1 = (PoDoFo::PdfPagesTree *) 0 ;
  int result;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTree::GetTotalNumberOfPages",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTree::GetTotalNumberOfPages",1,"PoDoFo::PdfPagesTree const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPagesTree,0))){
    SWIG_fail_ptr("PdfPagesTree_GetTotalNumberOfPages",1,SWIGTYPE_p_PoDoFo__PdfPagesTree);
  }
  
  {
    try {
      result = (int)((PoDoFo::PdfPagesTree const *)arg1)->GetTotalNumberOfPages();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPagesTree_GetPage__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPagesTree *arg1 = (PoDoFo::PdfPagesTree *) 0 ;
  int arg2 ;
  PoDoFo::PdfPage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTree::GetPage",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTree::GetPage",1,"PoDoFo::PdfPagesTree *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPagesTree::GetPage",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPagesTree,0))){
    SWIG_fail_ptr("PdfPagesTree_GetPage",1,SWIGTYPE_p_PoDoFo__PdfPagesTree);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = (PoDoFo::PdfPage *)(arg1)->GetPage(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPage,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPagesTree_GetPage__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPagesTree *arg1 = (PoDoFo::PdfPagesTree *) 0 ;
  PoDoFo::PdfReference *arg2 = 0 ;
  PoDoFo::PdfPage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTree::GetPage",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTree::GetPage",1,"PoDoFo::PdfPagesTree *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPagesTree::GetPage",2,"PoDoFo::PdfReference const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPagesTree,0))){
    SWIG_fail_ptr("PdfPagesTree_GetPage",1,SWIGTYPE_p_PoDoFo__PdfPagesTree);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfReference,0))){
    SWIG_fail_ptr("PdfPagesTree_GetPage",2,SWIGTYPE_p_PoDoFo__PdfReference);
  }
  
  {
    try {
      result = (PoDoFo::PdfPage *)(arg1)->GetPage((PoDoFo::PdfReference const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPage,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPagesTree_GetPage(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPagesTree, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfReference, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfPagesTree_GetPage__SWIG_1(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPagesTree, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfPagesTree_GetPage__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPagesTree_GetPage'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPagesTree::GetPage(int)\n"
    "    PoDoFo::PdfPagesTree::GetPage(PoDoFo::PdfReference const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPagesTree_InsertPage__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPagesTree *arg1 = (PoDoFo::PdfPagesTree *) 0 ;
  int arg2 ;
  PoDoFo::PdfObject *arg3 = (PoDoFo::PdfObject *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTree::InsertPage",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTree::InsertPage",1,"PoDoFo::PdfPagesTree *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPagesTree::InsertPage",2,"int");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfPagesTree::InsertPage",3,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPagesTree,0))){
    SWIG_fail_ptr("PdfPagesTree_InsertPage",1,SWIGTYPE_p_PoDoFo__PdfPagesTree);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("PdfPagesTree_InsertPage",3,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      (arg1)->InsertPage(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPagesTree_InsertPage__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPagesTree *arg1 = (PoDoFo::PdfPagesTree *) 0 ;
  int arg2 ;
  PoDoFo::PdfPage *arg3 = (PoDoFo::PdfPage *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTree::InsertPage",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTree::InsertPage",1,"PoDoFo::PdfPagesTree *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPagesTree::InsertPage",2,"int");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfPagesTree::InsertPage",3,"PoDoFo::PdfPage *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPagesTree,0))){
    SWIG_fail_ptr("PdfPagesTree_InsertPage",1,SWIGTYPE_p_PoDoFo__PdfPagesTree);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPagesTree_InsertPage",3,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  {
    try {
      (arg1)->InsertPage(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPagesTree_InsertPages(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPagesTree *arg1 = (PoDoFo::PdfPagesTree *) 0 ;
  int arg2 ;
  std::vector< PoDoFo::PdfObject * > *arg3 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTree::InsertPages",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTree::InsertPages",1,"PoDoFo::PdfPagesTree *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPagesTree::InsertPages",2,"int");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfPagesTree::InsertPages",3,"std::vector< PoDoFo::PdfObject * > const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPagesTree,0))){
    SWIG_fail_ptr("PdfPagesTree_InsertPages",1,SWIGTYPE_p_PoDoFo__PdfPagesTree);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_std__vectorT_PoDoFo__PdfObject_p_t,0))){
    SWIG_fail_ptr("PdfPagesTree_InsertPages",3,SWIGTYPE_p_std__vectorT_PoDoFo__PdfObject_p_t);
  }
  
  {
    try {
      (arg1)->InsertPages(arg2,(std::vector< PoDoFo::PdfObject * > const &)*arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPagesTree_CreatePage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPagesTree *arg1 = (PoDoFo::PdfPagesTree *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfPage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTree::CreatePage",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTree::CreatePage",1,"PoDoFo::PdfPagesTree *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPagesTree::CreatePage",2,"PoDoFo::PdfRect const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPagesTree,0))){
    SWIG_fail_ptr("PdfPagesTree_CreatePage",1,SWIGTYPE_p_PoDoFo__PdfPagesTree);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfPagesTree_CreatePage",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  {
    try {
      result = (PoDoFo::PdfPage *)(arg1)->CreatePage((PoDoFo::PdfRect const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPage,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPagesTree_CreatePages(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPagesTree *arg1 = (PoDoFo::PdfPagesTree *) 0 ;
  std::vector< PoDoFo::PdfRect > *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTree::CreatePages",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTree::CreatePages",1,"PoDoFo::PdfPagesTree *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPagesTree::CreatePages",2,"std::vector< PoDoFo::PdfRect > const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPagesTree,0))){
    SWIG_fail_ptr("PdfPagesTree_CreatePages",1,SWIGTYPE_p_PoDoFo__PdfPagesTree);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_std__vectorT_PoDoFo__PdfRect_t,0))){
    SWIG_fail_ptr("PdfPagesTree_CreatePages",2,SWIGTYPE_p_std__vectorT_PoDoFo__PdfRect_t);
  }
  
  {
    try {
      (arg1)->CreatePages((std::vector< PoDoFo::PdfRect > const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPagesTree_InsertPage__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPagesTree *arg1 = (PoDoFo::PdfPagesTree *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  int arg3 ;
  PoDoFo::PdfPage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTree::InsertPage",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTree::InsertPage",1,"PoDoFo::PdfPagesTree *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPagesTree::InsertPage",2,"PoDoFo::PdfRect const &");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPagesTree::InsertPage",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPagesTree,0))){
    SWIG_fail_ptr("PdfPagesTree_InsertPage",1,SWIGTYPE_p_PoDoFo__PdfPagesTree);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfPagesTree_InsertPage",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = (PoDoFo::PdfPage *)(arg1)->InsertPage((PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPage,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPagesTree_InsertPage(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPagesTree, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_PdfPagesTree_InsertPage__SWIG_2(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPagesTree, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_PdfPagesTree_InsertPage__SWIG_1(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPagesTree, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfObject, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_PdfPagesTree_InsertPage__SWIG_0(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPagesTree_InsertPage'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPagesTree::InsertPage(int,PoDoFo::PdfObject *)\n"
    "    PoDoFo::PdfPagesTree::InsertPage(int,PoDoFo::PdfPage *)\n"
    "    PoDoFo::PdfPagesTree::InsertPage(PoDoFo::PdfRect const &,int)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPagesTree_DeletePage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPagesTree *arg1 = (PoDoFo::PdfPagesTree *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTree::DeletePage",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTree::DeletePage",1,"PoDoFo::PdfPagesTree *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPagesTree::DeletePage",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPagesTree,0))){
    SWIG_fail_ptr("PdfPagesTree_DeletePage",1,SWIGTYPE_p_PoDoFo__PdfPagesTree);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->DeletePage(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPagesTree_ClearCache(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPagesTree *arg1 = (PoDoFo::PdfPagesTree *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTree::ClearCache",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTree::ClearCache",1,"PoDoFo::PdfPagesTree *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPagesTree,0))){
    SWIG_fail_ptr("PdfPagesTree_ClearCache",1,SWIGTYPE_p_PoDoFo__PdfPagesTree);
  }
  
  {
    try {
      (arg1)->ClearCache();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfPagesTree(void *obj) {
PoDoFo::PdfPagesTree *arg1 = (PoDoFo::PdfPagesTree *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfPagesTree(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfPagesTree);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfPagesTree_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfPagesTree_methods[]= {
    { "GetTotalNumberOfPages", _wrap_PdfPagesTree_GetTotalNumberOfPages},
    { "GetPage", _wrap_PdfPagesTree_GetPage},
    { "InsertPages", _wrap_PdfPagesTree_InsertPages},
    { "CreatePage", _wrap_PdfPagesTree_CreatePage},
    { "CreatePages", _wrap_PdfPagesTree_CreatePages},
    { "InsertPage", _wrap_PdfPagesTree_InsertPage},
    { "DeletePage", _wrap_PdfPagesTree_DeletePage},
    { "ClearCache", _wrap_PdfPagesTree_ClearCache},
    {0,0}
};
static swig_lua_method swig_PdfPagesTree_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfPagesTree_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfPagesTree_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfPagesTree_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfPagesTree_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfPagesTree_Sf_SwigStatic = {
    "PdfPagesTree",
    swig_PdfPagesTree_Sf_SwigStatic_methods,
    swig_PdfPagesTree_Sf_SwigStatic_attributes,
    swig_PdfPagesTree_Sf_SwigStatic_constants,
    swig_PdfPagesTree_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfPagesTree_bases[] = {0,0};
static const char *swig_PdfPagesTree_base_names[] = {"PoDoFo::PdfElement *",0};
static swig_lua_class _wrap_class_PdfPagesTree = { "PdfPagesTree", "PdfPagesTree", &SWIGTYPE_p_PoDoFo__PdfPagesTree,_proxy__wrap_new_PdfPagesTree, swig_delete_PdfPagesTree, swig_PdfPagesTree_methods, swig_PdfPagesTree_attributes, &swig_PdfPagesTree_Sf_SwigStatic, swig_PdfPagesTree_meta, swig_PdfPagesTree_bases, swig_PdfPagesTree_base_names };

static int _wrap_new_PdfPagesTreeCache(lua_State* L) {
  int SWIG_arg = 0;
  int arg1 ;
  PoDoFo::PdfPagesTreeCache *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTreeCache::PdfPagesTreeCache",1,1)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTreeCache::PdfPagesTreeCache",1,"int");
  arg1 = (int)lua_tonumber(L, 1);
  {
    try {
      result = (PoDoFo::PdfPagesTreeCache *)new PoDoFo::PdfPagesTreeCache(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPagesTreeCache,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPagesTreeCache_GetPage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPagesTreeCache *arg1 = (PoDoFo::PdfPagesTreeCache *) 0 ;
  int arg2 ;
  PoDoFo::PdfPage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTreeCache::GetPage",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTreeCache::GetPage",1,"PoDoFo::PdfPagesTreeCache *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPagesTreeCache::GetPage",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPagesTreeCache,0))){
    SWIG_fail_ptr("PdfPagesTreeCache_GetPage",1,SWIGTYPE_p_PoDoFo__PdfPagesTreeCache);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = (PoDoFo::PdfPage *)(arg1)->GetPage(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPage,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPagesTreeCache_AddPageObject(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPagesTreeCache *arg1 = (PoDoFo::PdfPagesTreeCache *) 0 ;
  int arg2 ;
  PoDoFo::PdfPage *arg3 = (PoDoFo::PdfPage *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTreeCache::AddPageObject",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTreeCache::AddPageObject",1,"PoDoFo::PdfPagesTreeCache *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPagesTreeCache::AddPageObject",2,"int");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfPagesTreeCache::AddPageObject",3,"PoDoFo::PdfPage *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPagesTreeCache,0))){
    SWIG_fail_ptr("PdfPagesTreeCache_AddPageObject",1,SWIGTYPE_p_PoDoFo__PdfPagesTreeCache);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfPagesTreeCache_AddPageObject",3,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  {
    try {
      (arg1)->AddPageObject(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPagesTreeCache_AddPageObjects(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPagesTreeCache *arg1 = (PoDoFo::PdfPagesTreeCache *) 0 ;
  int arg2 ;
  SwigValueWrapper< std::vector< PoDoFo::PdfPage * > > arg3 ;
  std::vector< PoDoFo::PdfPage * > *argp3 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTreeCache::AddPageObjects",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTreeCache::AddPageObjects",1,"PoDoFo::PdfPagesTreeCache *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPagesTreeCache::AddPageObjects",2,"int");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfPagesTreeCache::AddPageObjects",3,"std::vector< PoDoFo::PdfPage * >");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPagesTreeCache,0))){
    SWIG_fail_ptr("PdfPagesTreeCache_AddPageObjects",1,SWIGTYPE_p_PoDoFo__PdfPagesTreeCache);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_std__vectorT_PoDoFo__PdfPage_p_t,0))){
    SWIG_fail_ptr("PdfPagesTreeCache_AddPageObjects",3,SWIGTYPE_p_std__vectorT_PoDoFo__PdfPage_p_t);
  }
  arg3 = *argp3;
  
  {
    try {
      (arg1)->AddPageObjects(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPagesTreeCache_InsertPage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPagesTreeCache *arg1 = (PoDoFo::PdfPagesTreeCache *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTreeCache::InsertPage",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTreeCache::InsertPage",1,"PoDoFo::PdfPagesTreeCache *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPagesTreeCache::InsertPage",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPagesTreeCache,0))){
    SWIG_fail_ptr("PdfPagesTreeCache_InsertPage",1,SWIGTYPE_p_PoDoFo__PdfPagesTreeCache);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->InsertPage(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPagesTreeCache_InsertPages(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPagesTreeCache *arg1 = (PoDoFo::PdfPagesTreeCache *) 0 ;
  int arg2 ;
  int arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTreeCache::InsertPages",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTreeCache::InsertPages",1,"PoDoFo::PdfPagesTreeCache *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPagesTreeCache::InsertPages",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPagesTreeCache::InsertPages",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPagesTreeCache,0))){
    SWIG_fail_ptr("PdfPagesTreeCache_InsertPages",1,SWIGTYPE_p_PoDoFo__PdfPagesTreeCache);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      (arg1)->InsertPages(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPagesTreeCache_DeletePage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPagesTreeCache *arg1 = (PoDoFo::PdfPagesTreeCache *) 0 ;
  int arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTreeCache::DeletePage",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTreeCache::DeletePage",1,"PoDoFo::PdfPagesTreeCache *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPagesTreeCache::DeletePage",2,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPagesTreeCache,0))){
    SWIG_fail_ptr("PdfPagesTreeCache_DeletePage",1,SWIGTYPE_p_PoDoFo__PdfPagesTreeCache);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->DeletePage(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPagesTreeCache_ClearCache(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPagesTreeCache *arg1 = (PoDoFo::PdfPagesTreeCache *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPagesTreeCache::ClearCache",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPagesTreeCache::ClearCache",1,"PoDoFo::PdfPagesTreeCache *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPagesTreeCache,0))){
    SWIG_fail_ptr("PdfPagesTreeCache_ClearCache",1,SWIGTYPE_p_PoDoFo__PdfPagesTreeCache);
  }
  
  {
    try {
      (arg1)->ClearCache();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfPagesTreeCache(void *obj) {
PoDoFo::PdfPagesTreeCache *arg1 = (PoDoFo::PdfPagesTreeCache *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfPagesTreeCache(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfPagesTreeCache);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfPagesTreeCache_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfPagesTreeCache_methods[]= {
    { "GetPage", _wrap_PdfPagesTreeCache_GetPage},
    { "AddPageObject", _wrap_PdfPagesTreeCache_AddPageObject},
    { "AddPageObjects", _wrap_PdfPagesTreeCache_AddPageObjects},
    { "InsertPage", _wrap_PdfPagesTreeCache_InsertPage},
    { "InsertPages", _wrap_PdfPagesTreeCache_InsertPages},
    { "DeletePage", _wrap_PdfPagesTreeCache_DeletePage},
    { "ClearCache", _wrap_PdfPagesTreeCache_ClearCache},
    {0,0}
};
static swig_lua_method swig_PdfPagesTreeCache_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfPagesTreeCache_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfPagesTreeCache_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfPagesTreeCache_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfPagesTreeCache_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfPagesTreeCache_Sf_SwigStatic = {
    "PdfPagesTreeCache",
    swig_PdfPagesTreeCache_Sf_SwigStatic_methods,
    swig_PdfPagesTreeCache_Sf_SwigStatic_attributes,
    swig_PdfPagesTreeCache_Sf_SwigStatic_constants,
    swig_PdfPagesTreeCache_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfPagesTreeCache_bases[] = {0};
static const char *swig_PdfPagesTreeCache_base_names[] = {0};
static swig_lua_class _wrap_class_PdfPagesTreeCache = { "PdfPagesTreeCache", "PdfPagesTreeCache", &SWIGTYPE_p_PoDoFo__PdfPagesTreeCache,_proxy__wrap_new_PdfPagesTreeCache, swig_delete_PdfPagesTreeCache, swig_PdfPagesTreeCache_methods, swig_PdfPagesTreeCache_attributes, &swig_PdfPagesTreeCache_Sf_SwigStatic, swig_PdfPagesTreeCache_meta, swig_PdfPagesTreeCache_bases, swig_PdfPagesTreeCache_base_names };

static int _wrap_new_TLineElement(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TLineElement *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::TLineElement::TLineElement",0,0)
  {
    try {
      result = (PoDoFo::TLineElement *)new PoDoFo::TLineElement();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__TLineElement,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TLineElement_pszStart_set(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TLineElement *arg1 = (PoDoFo::TLineElement *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("PoDoFo::TLineElement::pszStart",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::TLineElement::pszStart",1,"PoDoFo::TLineElement *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::TLineElement::pszStart",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TLineElement,0))){
    SWIG_fail_ptr("TLineElement_pszStart_set",1,SWIGTYPE_p_PoDoFo__TLineElement);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  {
    if (arg2) {
      arg1->pszStart = (char const *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->pszStart, (const char *)arg2);
    } else {
      arg1->pszStart = 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TLineElement_pszStart_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TLineElement *arg1 = (PoDoFo::TLineElement *) 0 ;
  char *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::TLineElement::pszStart",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::TLineElement::pszStart",1,"PoDoFo::TLineElement *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TLineElement,0))){
    SWIG_fail_ptr("TLineElement_pszStart_get",1,SWIGTYPE_p_PoDoFo__TLineElement);
  }
  
  result = (char *) ((arg1)->pszStart);
  lua_pushstring(L,(const char *)result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TLineElement_lLen_set(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TLineElement *arg1 = (PoDoFo::TLineElement *) 0 ;
  pdf_long arg2 ;
  pdf_long *argp2 ;
  
  SWIG_check_num_args("PoDoFo::TLineElement::lLen",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::TLineElement::lLen",1,"PoDoFo::TLineElement *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::TLineElement::lLen",2,"pdf_long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TLineElement,0))){
    SWIG_fail_ptr("TLineElement_lLen_set",1,SWIGTYPE_p_PoDoFo__TLineElement);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&argp2,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("TLineElement_lLen_set",2,SWIGTYPE_p_pdf_long);
  }
  arg2 = *argp2;
  
  if (arg1) (arg1)->lLen = arg2;
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_TLineElement_lLen_get(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::TLineElement *arg1 = (PoDoFo::TLineElement *) 0 ;
  pdf_long result;
  
  SWIG_check_num_args("PoDoFo::TLineElement::lLen",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::TLineElement::lLen",1,"PoDoFo::TLineElement *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__TLineElement,0))){
    SWIG_fail_ptr("TLineElement_lLen_get",1,SWIGTYPE_p_PoDoFo__TLineElement);
  }
  
  result =  ((arg1)->lLen);
  {
    pdf_long * resultptr = new pdf_long((const pdf_long &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_pdf_long,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_TLineElement(void *obj) {
PoDoFo::TLineElement *arg1 = (PoDoFo::TLineElement *) obj;
delete arg1;
}
static int _proxy__wrap_new_TLineElement(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_TLineElement);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_TLineElement_attributes[] = {
    { "pszStart", _wrap_TLineElement_pszStart_get, _wrap_TLineElement_pszStart_set },
    { "lLen", _wrap_TLineElement_lLen_get, _wrap_TLineElement_lLen_set },
    {0,0,0}
};
static swig_lua_method swig_TLineElement_methods[]= {
    {0,0}
};
static swig_lua_method swig_TLineElement_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_TLineElement_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_TLineElement_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_TLineElement_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_TLineElement_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_TLineElement_Sf_SwigStatic = {
    "TLineElement",
    swig_TLineElement_Sf_SwigStatic_methods,
    swig_TLineElement_Sf_SwigStatic_attributes,
    swig_TLineElement_Sf_SwigStatic_constants,
    swig_TLineElement_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_TLineElement_bases[] = {0};
static const char *swig_TLineElement_base_names[] = {0};
static swig_lua_class _wrap_class_TLineElement = { "TLineElement", "TLineElement", &SWIGTYPE_p_PoDoFo__TLineElement,_proxy__wrap_new_TLineElement, swig_delete_TLineElement, swig_TLineElement_methods, swig_TLineElement_attributes, &swig_TLineElement_Sf_SwigStatic, swig_TLineElement_meta, swig_TLineElement_bases, swig_TLineElement_base_names };

static int _wrap_new_PdfPainter(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::PdfPainter",0,0)
  {
    try {
      result = (PoDoFo::PdfPainter *)new PoDoFo::PdfPainter();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPainter,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetPage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfCanvas *arg2 = (PoDoFo::PdfCanvas *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetPage",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetPage",1,"PoDoFo::PdfPainter *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetPage",2,"PoDoFo::PdfCanvas *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetPage",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfCanvas,0))){
    SWIG_fail_ptr("PdfPainter_SetPage",2,SWIGTYPE_p_PoDoFo__PdfCanvas);
  }
  
  {
    try {
      (arg1)->SetPage(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_GetPage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfCanvas *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::GetPage",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::GetPage",1,"PoDoFo::PdfPainter const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_GetPage",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      result = (PoDoFo::PdfCanvas *)((PoDoFo::PdfPainter const *)arg1)->GetPage();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfCanvas,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_GetCanvas(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfStream *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::GetCanvas",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::GetCanvas",1,"PoDoFo::PdfPainter const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_GetCanvas",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      result = (PoDoFo::PdfStream *)((PoDoFo::PdfPainter const *)arg1)->GetCanvas();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfStream,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_FinishPage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::FinishPage",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::FinishPage",1,"PoDoFo::PdfPainter *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_FinishPage",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      (arg1)->FinishPage();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetStrokingGray(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetStrokingGray",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingGray",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingGray",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetStrokingGray",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetStrokingGray(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetGray(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetGray",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetGray",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetGray",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetGray",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetGray(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetStrokingColor__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetStrokingColor",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingColor",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingColor",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingColor",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingColor",4,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetStrokingColor",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  {
    try {
      (arg1)->SetStrokingColor(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetColor__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetColor",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetColor",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetColor",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::SetColor",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::SetColor",4,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetColor",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  {
    try {
      (arg1)->SetColor(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetStrokingColorCMYK(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetStrokingColorCMYK",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingColorCMYK",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingColorCMYK",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingColorCMYK",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingColorCMYK",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingColorCMYK",5,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetStrokingColorCMYK",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  {
    try {
      (arg1)->SetStrokingColorCMYK(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetColorCMYK(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetColorCMYK",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetColorCMYK",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetColorCMYK",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::SetColorCMYK",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::SetColorCMYK",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::SetColorCMYK",5,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetColorCMYK",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  {
    try {
      (arg1)->SetColorCMYK(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetStrokingShadingPattern(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfShadingPattern *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetStrokingShadingPattern",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingShadingPattern",1,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingShadingPattern",2,"PoDoFo::PdfShadingPattern const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetStrokingShadingPattern",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfShadingPattern,0))){
    SWIG_fail_ptr("PdfPainter_SetStrokingShadingPattern",2,SWIGTYPE_p_PoDoFo__PdfShadingPattern);
  }
  
  {
    try {
      (arg1)->SetStrokingShadingPattern((PoDoFo::PdfShadingPattern const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetShadingPattern(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfShadingPattern *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetShadingPattern",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetShadingPattern",1,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetShadingPattern",2,"PoDoFo::PdfShadingPattern const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetShadingPattern",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfShadingPattern,0))){
    SWIG_fail_ptr("PdfPainter_SetShadingPattern",2,SWIGTYPE_p_PoDoFo__PdfShadingPattern);
  }
  
  {
    try {
      (arg1)->SetShadingPattern((PoDoFo::PdfShadingPattern const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetStrokingTilingPattern__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfTilingPattern *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetStrokingTilingPattern",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingTilingPattern",1,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingTilingPattern",2,"PoDoFo::PdfTilingPattern const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetStrokingTilingPattern",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfTilingPattern,0))){
    SWIG_fail_ptr("PdfPainter_SetStrokingTilingPattern",2,SWIGTYPE_p_PoDoFo__PdfTilingPattern);
  }
  
  {
    try {
      (arg1)->SetStrokingTilingPattern((PoDoFo::PdfTilingPattern const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetStrokingTilingPattern__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  std::string *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetStrokingTilingPattern",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingTilingPattern",1,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingTilingPattern",2,"std::string const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetStrokingTilingPattern",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_std__string,0))){
    SWIG_fail_ptr("PdfPainter_SetStrokingTilingPattern",2,SWIGTYPE_p_std__string);
  }
  
  {
    try {
      (arg1)->SetStrokingTilingPattern((std::string const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetStrokingTilingPattern(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfTilingPattern, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfPainter_SetStrokingTilingPattern__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_std__string, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfPainter_SetStrokingTilingPattern__SWIG_1(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPainter_SetStrokingTilingPattern'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPainter::SetStrokingTilingPattern(PoDoFo::PdfTilingPattern const &)\n"
    "    PoDoFo::PdfPainter::SetStrokingTilingPattern(std::string const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPainter_SetTilingPattern__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfTilingPattern *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetTilingPattern",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetTilingPattern",1,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetTilingPattern",2,"PoDoFo::PdfTilingPattern const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetTilingPattern",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfTilingPattern,0))){
    SWIG_fail_ptr("PdfPainter_SetTilingPattern",2,SWIGTYPE_p_PoDoFo__PdfTilingPattern);
  }
  
  {
    try {
      (arg1)->SetTilingPattern((PoDoFo::PdfTilingPattern const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetTilingPattern__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  std::string *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetTilingPattern",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetTilingPattern",1,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetTilingPattern",2,"std::string const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetTilingPattern",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_std__string,0))){
    SWIG_fail_ptr("PdfPainter_SetTilingPattern",2,SWIGTYPE_p_std__string);
  }
  
  {
    try {
      (arg1)->SetTilingPattern((std::string const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetTilingPattern(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfTilingPattern, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfPainter_SetTilingPattern__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_std__string, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfPainter_SetTilingPattern__SWIG_1(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPainter_SetTilingPattern'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPainter::SetTilingPattern(PoDoFo::PdfTilingPattern const &)\n"
    "    PoDoFo::PdfPainter::SetTilingPattern(std::string const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPainter_SetStrokingColor__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfColor *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetStrokingColor",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingColor",1,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokingColor",2,"PoDoFo::PdfColor const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetStrokingColor",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("PdfPainter_SetStrokingColor",2,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  {
    try {
      (arg1)->SetStrokingColor((PoDoFo::PdfColor const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetStrokingColor(lua_State* L) {
  int argc;
  int argv[5]={
    1,2,3,4,5
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfPainter_SetStrokingColor__SWIG_1(L);
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_PdfPainter_SetStrokingColor__SWIG_0(L);
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPainter_SetStrokingColor'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPainter::SetStrokingColor(double,double,double)\n"
    "    PoDoFo::PdfPainter::SetStrokingColor(PoDoFo::PdfColor const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPainter_SetColor__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfColor *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetColor",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetColor",1,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetColor",2,"PoDoFo::PdfColor const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetColor",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("PdfPainter_SetColor",2,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  {
    try {
      (arg1)->SetColor((PoDoFo::PdfColor const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetColor(lua_State* L) {
  int argc;
  int argv[5]={
    1,2,3,4,5
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfPainter_SetColor__SWIG_1(L);
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_PdfPainter_SetColor__SWIG_0(L);
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPainter_SetColor'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPainter::SetColor(double,double,double)\n"
    "    PoDoFo::PdfPainter::SetColor(PoDoFo::PdfColor const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPainter_SetStrokeWidth(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetStrokeWidth",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeWidth",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeWidth",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetStrokeWidth",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetStrokeWidth(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetStrokeStyle__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::EPdfStrokeStyle arg2 ;
  char *arg3 = (char *) 0 ;
  bool arg4 ;
  double arg5 ;
  bool arg6 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetStrokeStyle",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",2,"PoDoFo::EPdfStrokeStyle");
  if(!SWIG_lua_isnilstring(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",3,"char const *");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",4,"bool");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",5,"double");
  if(!lua_isboolean(L,6)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",6,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetStrokeStyle",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (PoDoFo::EPdfStrokeStyle)(int)lua_tonumber(L, 2);
  arg3 = (char *)lua_tostring(L, 3);
  arg4 = (lua_toboolean(L, 4)!=0);
  arg5 = (double)lua_tonumber(L, 5);
  arg6 = (lua_toboolean(L, 6)!=0);
  {
    try {
      (arg1)->SetStrokeStyle(arg2,(char const *)arg3,arg4,arg5,arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetStrokeStyle__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::EPdfStrokeStyle arg2 ;
  char *arg3 = (char *) 0 ;
  bool arg4 ;
  double arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetStrokeStyle",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",2,"PoDoFo::EPdfStrokeStyle");
  if(!SWIG_lua_isnilstring(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",3,"char const *");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",4,"bool");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",5,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetStrokeStyle",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (PoDoFo::EPdfStrokeStyle)(int)lua_tonumber(L, 2);
  arg3 = (char *)lua_tostring(L, 3);
  arg4 = (lua_toboolean(L, 4)!=0);
  arg5 = (double)lua_tonumber(L, 5);
  {
    try {
      (arg1)->SetStrokeStyle(arg2,(char const *)arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetStrokeStyle__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::EPdfStrokeStyle arg2 ;
  char *arg3 = (char *) 0 ;
  bool arg4 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetStrokeStyle",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",2,"PoDoFo::EPdfStrokeStyle");
  if(!SWIG_lua_isnilstring(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",3,"char const *");
  if(!lua_isboolean(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",4,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetStrokeStyle",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (PoDoFo::EPdfStrokeStyle)(int)lua_tonumber(L, 2);
  arg3 = (char *)lua_tostring(L, 3);
  arg4 = (lua_toboolean(L, 4)!=0);
  {
    try {
      (arg1)->SetStrokeStyle(arg2,(char const *)arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetStrokeStyle__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::EPdfStrokeStyle arg2 ;
  char *arg3 = (char *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetStrokeStyle",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",2,"PoDoFo::EPdfStrokeStyle");
  if(!SWIG_lua_isnilstring(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",3,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetStrokeStyle",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (PoDoFo::EPdfStrokeStyle)(int)lua_tonumber(L, 2);
  arg3 = (char *)lua_tostring(L, 3);
  {
    try {
      (arg1)->SetStrokeStyle(arg2,(char const *)arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetStrokeStyle__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::EPdfStrokeStyle arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetStrokeStyle",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetStrokeStyle",2,"PoDoFo::EPdfStrokeStyle");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetStrokeStyle",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (PoDoFo::EPdfStrokeStyle)(int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetStrokeStyle(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetStrokeStyle(lua_State* L) {
  int argc;
  int argv[7]={
    1,2,3,4,5,6,7
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfPainter_SetStrokeStyle__SWIG_4(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = SWIG_lua_isnilstring(L,argv[2]);
        }
        if (_v) {
          return _wrap_PdfPainter_SetStrokeStyle__SWIG_3(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = SWIG_lua_isnilstring(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            return _wrap_PdfPainter_SetStrokeStyle__SWIG_2(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = SWIG_lua_isnilstring(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfPainter_SetStrokeStyle__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = SWIG_lua_isnilstring(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isboolean(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isboolean(L,argv[5]);
              }
              if (_v) {
                return _wrap_PdfPainter_SetStrokeStyle__SWIG_0(L);
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPainter_SetStrokeStyle'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPainter::SetStrokeStyle(PoDoFo::EPdfStrokeStyle,char const *,bool,double,bool)\n"
    "    PoDoFo::PdfPainter::SetStrokeStyle(PoDoFo::EPdfStrokeStyle,char const *,bool,double)\n"
    "    PoDoFo::PdfPainter::SetStrokeStyle(PoDoFo::EPdfStrokeStyle,char const *,bool)\n"
    "    PoDoFo::PdfPainter::SetStrokeStyle(PoDoFo::EPdfStrokeStyle,char const *)\n"
    "    PoDoFo::PdfPainter::SetStrokeStyle(PoDoFo::EPdfStrokeStyle)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPainter_SetLineCapStyle(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::EPdfLineCapStyle arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetLineCapStyle",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetLineCapStyle",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetLineCapStyle",2,"PoDoFo::EPdfLineCapStyle");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetLineCapStyle",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (PoDoFo::EPdfLineCapStyle)(int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetLineCapStyle(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetLineJoinStyle(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::EPdfLineJoinStyle arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetLineJoinStyle",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetLineJoinStyle",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetLineJoinStyle",2,"PoDoFo::EPdfLineJoinStyle");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetLineJoinStyle",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (PoDoFo::EPdfLineJoinStyle)(int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetLineJoinStyle(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetFont(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfFont *arg2 = (PoDoFo::PdfFont *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetFont",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetFont",1,"PoDoFo::PdfPainter *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetFont",2,"PoDoFo::PdfFont *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetFont",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfPainter_SetFont",2,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      (arg1)->SetFont(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetTextRenderingMode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::EPdfTextRenderingMode arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetTextRenderingMode",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetTextRenderingMode",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetTextRenderingMode",2,"PoDoFo::EPdfTextRenderingMode");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetTextRenderingMode",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (PoDoFo::EPdfTextRenderingMode)(int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetTextRenderingMode(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_GetTextRenderingMode(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::EPdfTextRenderingMode result;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::GetTextRenderingMode",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::GetTextRenderingMode",1,"PoDoFo::PdfPainter const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_GetTextRenderingMode",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      result = (PoDoFo::EPdfTextRenderingMode)((PoDoFo::PdfPainter const *)arg1)->GetTextRenderingMode();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_GetFont(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::GetFont",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::GetFont",1,"PoDoFo::PdfPainter const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_GetFont",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      result = (PoDoFo::PdfFont *)((PoDoFo::PdfPainter const *)arg1)->GetFont();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetClipRect__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetClipRect",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetClipRect",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetClipRect",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::SetClipRect",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::SetClipRect",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::SetClipRect",5,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetClipRect",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  {
    try {
      (arg1)->SetClipRect(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetClipRect__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetClipRect",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetClipRect",1,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetClipRect",2,"PoDoFo::PdfRect const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetClipRect",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfPainter_SetClipRect",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  {
    try {
      (arg1)->SetClipRect((PoDoFo::PdfRect const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetClipRect(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfPainter_SetClipRect__SWIG_1(L);
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfPainter_SetClipRect__SWIG_0(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPainter_SetClipRect'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPainter::SetClipRect(double,double,double,double)\n"
    "    PoDoFo::PdfPainter::SetClipRect(PoDoFo::PdfRect const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPainter_SetMiterLimit(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetMiterLimit",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetMiterLimit",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetMiterLimit",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetMiterLimit",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetMiterLimit(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawLine(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawLine",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawLine",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawLine",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawLine",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawLine",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawLine",5,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawLine",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  {
    try {
      (arg1)->DrawLine(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_Rectangle__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::Rectangle",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",5,"double");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",6,"double");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",7,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_Rectangle",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  arg6 = (double)lua_tonumber(L, 6);
  arg7 = (double)lua_tonumber(L, 7);
  {
    try {
      (arg1)->Rectangle(arg2,arg3,arg4,arg5,arg6,arg7);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_Rectangle__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::Rectangle",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",5,"double");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",6,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_Rectangle",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  arg6 = (double)lua_tonumber(L, 6);
  {
    try {
      (arg1)->Rectangle(arg2,arg3,arg4,arg5,arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_Rectangle__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::Rectangle",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",5,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_Rectangle",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  {
    try {
      (arg1)->Rectangle(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_Rectangle__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  double arg3 ;
  double arg4 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::Rectangle",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",1,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",2,"PoDoFo::PdfRect const &");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",4,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_Rectangle",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfPainter_Rectangle",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  {
    try {
      (arg1)->Rectangle((PoDoFo::PdfRect const &)*arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_Rectangle__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  double arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::Rectangle",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",1,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",2,"PoDoFo::PdfRect const &");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",3,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_Rectangle",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfPainter_Rectangle",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  arg3 = (double)lua_tonumber(L, 3);
  {
    try {
      (arg1)->Rectangle((PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_Rectangle__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::Rectangle",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",1,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::Rectangle",2,"PoDoFo::PdfRect const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_Rectangle",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfPainter_Rectangle",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  {
    try {
      (arg1)->Rectangle((PoDoFo::PdfRect const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_Rectangle(lua_State* L) {
  int argc;
  int argv[8]={
    1,2,3,4,5,6,7,8
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfPainter_Rectangle__SWIG_5(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          return _wrap_PdfPainter_Rectangle__SWIG_4(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_PdfPainter_Rectangle__SWIG_3(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfPainter_Rectangle__SWIG_2(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_PdfPainter_Rectangle__SWIG_1(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  return _wrap_PdfPainter_Rectangle__SWIG_0(L);
                }
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPainter_Rectangle'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPainter::Rectangle(double,double,double,double,double,double)\n"
    "    PoDoFo::PdfPainter::Rectangle(double,double,double,double,double)\n"
    "    PoDoFo::PdfPainter::Rectangle(double,double,double,double)\n"
    "    PoDoFo::PdfPainter::Rectangle(PoDoFo::PdfRect const &,double,double)\n"
    "    PoDoFo::PdfPainter::Rectangle(PoDoFo::PdfRect const &,double)\n"
    "    PoDoFo::PdfPainter::Rectangle(PoDoFo::PdfRect const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPainter_Ellipse(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::Ellipse",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::Ellipse",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::Ellipse",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::Ellipse",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::Ellipse",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::Ellipse",5,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_Ellipse",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  {
    try {
      (arg1)->Ellipse(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_Circle(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::Circle",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::Circle",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::Circle",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::Circle",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::Circle",4,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_Circle",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  {
    try {
      (arg1)->Circle(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawText__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  PoDoFo::PdfString *arg4 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawText",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawText",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawText",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawText",3,"double");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawText",4,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawText",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfPainter_DrawText",4,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->DrawText(arg2,arg3,(PoDoFo::PdfString const &)*arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawText__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  PoDoFo::PdfString *arg4 = 0 ;
  long arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawText",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawText",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawText",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawText",3,"double");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawText",4,"PoDoFo::PdfString const &");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawText",5,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawText",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfPainter_DrawText",4,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  arg5 = (long)lua_tonumber(L, 5);
  {
    try {
      (arg1)->DrawText(arg2,arg3,(PoDoFo::PdfString const &)*arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawText(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (lua_isuserdata(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_PdfPainter_DrawText__SWIG_0(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (lua_isuserdata(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfPainter_DrawText__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPainter_DrawText'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPainter::DrawText(double,double,PoDoFo::PdfString const &)\n"
    "    PoDoFo::PdfPainter::DrawText(double,double,PoDoFo::PdfString const &,long)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPainter_DrawMultiLineText__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  PoDoFo::PdfString *arg6 = 0 ;
  PoDoFo::EPdfAlignment arg7 ;
  PoDoFo::EPdfVerticalAlignment arg8 ;
  bool arg9 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawMultiLineText",9,9)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",5,"double");
  if(!lua_isuserdata(L,6)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",6,"PoDoFo::PdfString const &");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",7,"PoDoFo::EPdfAlignment");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",8,"PoDoFo::EPdfVerticalAlignment");
  if(!lua_isboolean(L,9)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",9,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",6,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  arg7 = (PoDoFo::EPdfAlignment)(int)lua_tonumber(L, 7);
  arg8 = (PoDoFo::EPdfVerticalAlignment)(int)lua_tonumber(L, 8);
  arg9 = (lua_toboolean(L, 9)!=0);
  {
    try {
      (arg1)->DrawMultiLineText(arg2,arg3,arg4,arg5,(PoDoFo::PdfString const &)*arg6,arg7,arg8,arg9);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawMultiLineText__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  PoDoFo::PdfString *arg6 = 0 ;
  PoDoFo::EPdfAlignment arg7 ;
  PoDoFo::EPdfVerticalAlignment arg8 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawMultiLineText",8,8)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",5,"double");
  if(!lua_isuserdata(L,6)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",6,"PoDoFo::PdfString const &");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",7,"PoDoFo::EPdfAlignment");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",8,"PoDoFo::EPdfVerticalAlignment");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",6,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  arg7 = (PoDoFo::EPdfAlignment)(int)lua_tonumber(L, 7);
  arg8 = (PoDoFo::EPdfVerticalAlignment)(int)lua_tonumber(L, 8);
  {
    try {
      (arg1)->DrawMultiLineText(arg2,arg3,arg4,arg5,(PoDoFo::PdfString const &)*arg6,arg7,arg8);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawMultiLineText__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  PoDoFo::PdfString *arg6 = 0 ;
  PoDoFo::EPdfAlignment arg7 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawMultiLineText",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",5,"double");
  if(!lua_isuserdata(L,6)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",6,"PoDoFo::PdfString const &");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",7,"PoDoFo::EPdfAlignment");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",6,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  arg7 = (PoDoFo::EPdfAlignment)(int)lua_tonumber(L, 7);
  {
    try {
      (arg1)->DrawMultiLineText(arg2,arg3,arg4,arg5,(PoDoFo::PdfString const &)*arg6,arg7);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawMultiLineText__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  PoDoFo::PdfString *arg6 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawMultiLineText",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",5,"double");
  if(!lua_isuserdata(L,6)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",6,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",6,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->DrawMultiLineText(arg2,arg3,arg4,arg5,(PoDoFo::PdfString const &)*arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawMultiLineText__SWIG_4(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfString *arg3 = 0 ;
  PoDoFo::EPdfAlignment arg4 ;
  PoDoFo::EPdfVerticalAlignment arg5 ;
  bool arg6 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawMultiLineText",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",1,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",2,"PoDoFo::PdfRect const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",3,"PoDoFo::PdfString const &");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",4,"PoDoFo::EPdfAlignment");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",5,"PoDoFo::EPdfVerticalAlignment");
  if(!lua_isboolean(L,6)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",6,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",3,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  arg4 = (PoDoFo::EPdfAlignment)(int)lua_tonumber(L, 4);
  arg5 = (PoDoFo::EPdfVerticalAlignment)(int)lua_tonumber(L, 5);
  arg6 = (lua_toboolean(L, 6)!=0);
  {
    try {
      (arg1)->DrawMultiLineText((PoDoFo::PdfRect const &)*arg2,(PoDoFo::PdfString const &)*arg3,arg4,arg5,arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawMultiLineText__SWIG_5(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfString *arg3 = 0 ;
  PoDoFo::EPdfAlignment arg4 ;
  PoDoFo::EPdfVerticalAlignment arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawMultiLineText",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",1,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",2,"PoDoFo::PdfRect const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",3,"PoDoFo::PdfString const &");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",4,"PoDoFo::EPdfAlignment");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",5,"PoDoFo::EPdfVerticalAlignment");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",3,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  arg4 = (PoDoFo::EPdfAlignment)(int)lua_tonumber(L, 4);
  arg5 = (PoDoFo::EPdfVerticalAlignment)(int)lua_tonumber(L, 5);
  {
    try {
      (arg1)->DrawMultiLineText((PoDoFo::PdfRect const &)*arg2,(PoDoFo::PdfString const &)*arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawMultiLineText__SWIG_6(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfString *arg3 = 0 ;
  PoDoFo::EPdfAlignment arg4 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawMultiLineText",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",1,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",2,"PoDoFo::PdfRect const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",3,"PoDoFo::PdfString const &");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",4,"PoDoFo::EPdfAlignment");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",3,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  arg4 = (PoDoFo::EPdfAlignment)(int)lua_tonumber(L, 4);
  {
    try {
      (arg1)->DrawMultiLineText((PoDoFo::PdfRect const &)*arg2,(PoDoFo::PdfString const &)*arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawMultiLineText__SWIG_7(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfString *arg3 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawMultiLineText",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",1,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",2,"PoDoFo::PdfRect const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawMultiLineText",3,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfPainter_DrawMultiLineText",3,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->DrawMultiLineText((PoDoFo::PdfRect const &)*arg2,(PoDoFo::PdfString const &)*arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawMultiLineText(lua_State* L) {
  int argc;
  int argv[10]={
    1,2,3,4,5,6,7,8,9,10
  };
  
  argc = lua_gettop(L);
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_PdfPainter_DrawMultiLineText__SWIG_7(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_PdfPainter_DrawMultiLineText__SWIG_6(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfPainter_DrawMultiLineText__SWIG_5(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isboolean(L,argv[5]);
              }
              if (_v) {
                return _wrap_PdfPainter_DrawMultiLineText__SWIG_4(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                void *ptr;
                if (lua_isuserdata(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                return _wrap_PdfPainter_DrawMultiLineText__SWIG_3(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                void *ptr;
                if (lua_isuserdata(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  return _wrap_PdfPainter_DrawMultiLineText__SWIG_2(L);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 8) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                void *ptr;
                if (lua_isuserdata(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    return _wrap_PdfPainter_DrawMultiLineText__SWIG_1(L);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                void *ptr;
                if (lua_isuserdata(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isboolean(L,argv[8]);
                    }
                    if (_v) {
                      return _wrap_PdfPainter_DrawMultiLineText__SWIG_0(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPainter_DrawMultiLineText'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPainter::DrawMultiLineText(double,double,double,double,PoDoFo::PdfString const &,PoDoFo::EPdfAlignment,PoDoFo::EPdfVerticalAlignment,bool)\n"
    "    PoDoFo::PdfPainter::DrawMultiLineText(double,double,double,double,PoDoFo::PdfString const &,PoDoFo::EPdfAlignment,PoDoFo::EPdfVerticalAlignment)\n"
    "    PoDoFo::PdfPainter::DrawMultiLineText(double,double,double,double,PoDoFo::PdfString const &,PoDoFo::EPdfAlignment)\n"
    "    PoDoFo::PdfPainter::DrawMultiLineText(double,double,double,double,PoDoFo::PdfString const &)\n"
    "    PoDoFo::PdfPainter::DrawMultiLineText(PoDoFo::PdfRect const &,PoDoFo::PdfString const &,PoDoFo::EPdfAlignment,PoDoFo::EPdfVerticalAlignment,bool)\n"
    "    PoDoFo::PdfPainter::DrawMultiLineText(PoDoFo::PdfRect const &,PoDoFo::PdfString const &,PoDoFo::EPdfAlignment,PoDoFo::EPdfVerticalAlignment)\n"
    "    PoDoFo::PdfPainter::DrawMultiLineText(PoDoFo::PdfRect const &,PoDoFo::PdfString const &,PoDoFo::EPdfAlignment)\n"
    "    PoDoFo::PdfPainter::DrawMultiLineText(PoDoFo::PdfRect const &,PoDoFo::PdfString const &)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPainter_GetMultiLineTextAsLines(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  PoDoFo::PdfString *arg3 = 0 ;
  SwigValueWrapper< std::vector< PoDoFo::PdfString > > result;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::GetMultiLineTextAsLines",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::GetMultiLineTextAsLines",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::GetMultiLineTextAsLines",2,"double");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::GetMultiLineTextAsLines",3,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_GetMultiLineTextAsLines",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfPainter_GetMultiLineTextAsLines",3,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      result = (arg1)->GetMultiLineTextAsLines(arg2,(PoDoFo::PdfString const &)*arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    std::vector< PoDoFo::PdfString > * resultptr = new std::vector< PoDoFo::PdfString >((const std::vector< PoDoFo::PdfString > &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_std__vectorT_PoDoFo__PdfString_t,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawTextAligned(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  PoDoFo::PdfString *arg5 = 0 ;
  PoDoFo::EPdfAlignment arg6 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawTextAligned",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawTextAligned",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawTextAligned",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawTextAligned",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawTextAligned",4,"double");
  if(!lua_isuserdata(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawTextAligned",5,"PoDoFo::PdfString const &");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawTextAligned",6,"PoDoFo::EPdfAlignment");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawTextAligned",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&arg5,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfPainter_DrawTextAligned",5,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  arg6 = (PoDoFo::EPdfAlignment)(int)lua_tonumber(L, 6);
  {
    try {
      (arg1)->DrawTextAligned(arg2,arg3,arg4,(PoDoFo::PdfString const &)*arg5,arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_BeginText(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::BeginText",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::BeginText",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::BeginText",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::BeginText",3,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_BeginText",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  {
    try {
      (arg1)->BeginText(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_AddText__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::AddText",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::AddText",1,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::AddText",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_AddText",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfPainter_AddText",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->AddText((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_AddText__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  pdf_long arg3 ;
  pdf_long *argp3 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::AddText",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::AddText",1,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::AddText",2,"PoDoFo::PdfString const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::AddText",3,"pdf_long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_AddText",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfPainter_AddText",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&argp3,SWIGTYPE_p_pdf_long,0))){
    SWIG_fail_ptr("PdfPainter_AddText",3,SWIGTYPE_p_pdf_long);
  }
  arg3 = *argp3;
  
  {
    try {
      (arg1)->AddText((PoDoFo::PdfString const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_AddText(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        return _wrap_PdfPainter_AddText__SWIG_0(L);
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_pdf_long, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_PdfPainter_AddText__SWIG_1(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPainter_AddText'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPainter::AddText(PoDoFo::PdfString const &)\n"
    "    PoDoFo::PdfPainter::AddText(PoDoFo::PdfString const &,pdf_long)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPainter_MoveTextPos(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::MoveTextPos",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::MoveTextPos",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::MoveTextPos",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::MoveTextPos",3,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_MoveTextPos",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  {
    try {
      (arg1)->MoveTextPos(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_EndText(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::EndText",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::EndText",1,"PoDoFo::PdfPainter *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_EndText",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      (arg1)->EndText();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawGlyph(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfMemDocument *arg2 = (PoDoFo::PdfMemDocument *) 0 ;
  double arg3 ;
  double arg4 ;
  char *arg5 = (char *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawGlyph",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawGlyph",1,"PoDoFo::PdfPainter *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawGlyph",2,"PoDoFo::PdfMemDocument *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawGlyph",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawGlyph",4,"double");
  if(!SWIG_lua_isnilstring(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawGlyph",5,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawGlyph",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfMemDocument,0))){
    SWIG_fail_ptr("PdfPainter_DrawGlyph",2,SWIGTYPE_p_PoDoFo__PdfMemDocument);
  }
  
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (char *)lua_tostring(L, 5);
  {
    try {
      (arg1)->DrawGlyph(arg2,arg3,arg4,(char const *)arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawImage__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  PoDoFo::PdfImage *arg4 = (PoDoFo::PdfImage *) 0 ;
  double arg5 ;
  double arg6 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawImage",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawImage",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawImage",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawImage",3,"double");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawImage",4,"PoDoFo::PdfImage *");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawImage",5,"double");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawImage",6,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawImage",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfPainter_DrawImage",4,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  arg5 = (double)lua_tonumber(L, 5);
  arg6 = (double)lua_tonumber(L, 6);
  {
    try {
      (arg1)->DrawImage(arg2,arg3,arg4,arg5,arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawImage__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  PoDoFo::PdfImage *arg4 = (PoDoFo::PdfImage *) 0 ;
  double arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawImage",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawImage",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawImage",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawImage",3,"double");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawImage",4,"PoDoFo::PdfImage *");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawImage",5,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawImage",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfPainter_DrawImage",4,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  arg5 = (double)lua_tonumber(L, 5);
  {
    try {
      (arg1)->DrawImage(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawImage__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  PoDoFo::PdfImage *arg4 = (PoDoFo::PdfImage *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawImage",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawImage",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawImage",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawImage",3,"double");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawImage",4,"PoDoFo::PdfImage *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawImage",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfPainter_DrawImage",4,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  {
    try {
      (arg1)->DrawImage(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawImage(lua_State* L) {
  int argc;
  int argv[7]={
    1,2,3,4,5,6,7
  };
  
  argc = lua_gettop(L);
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfImage, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_PdfPainter_DrawImage__SWIG_2(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfImage, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfPainter_DrawImage__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfImage, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_PdfPainter_DrawImage__SWIG_0(L);
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPainter_DrawImage'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPainter::DrawImage(double,double,PoDoFo::PdfImage *,double,double)\n"
    "    PoDoFo::PdfPainter::DrawImage(double,double,PoDoFo::PdfImage *,double)\n"
    "    PoDoFo::PdfPainter::DrawImage(double,double,PoDoFo::PdfImage *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPainter_DrawXObject__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  PoDoFo::PdfXObject *arg4 = (PoDoFo::PdfXObject *) 0 ;
  double arg5 ;
  double arg6 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawXObject",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawXObject",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawXObject",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawXObject",3,"double");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawXObject",4,"PoDoFo::PdfXObject *");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawXObject",5,"double");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawXObject",6,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawXObject",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfPainter_DrawXObject",4,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  arg5 = (double)lua_tonumber(L, 5);
  arg6 = (double)lua_tonumber(L, 6);
  {
    try {
      (arg1)->DrawXObject(arg2,arg3,arg4,arg5,arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawXObject__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  PoDoFo::PdfXObject *arg4 = (PoDoFo::PdfXObject *) 0 ;
  double arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawXObject",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawXObject",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawXObject",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawXObject",3,"double");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawXObject",4,"PoDoFo::PdfXObject *");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawXObject",5,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawXObject",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfPainter_DrawXObject",4,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  arg5 = (double)lua_tonumber(L, 5);
  {
    try {
      (arg1)->DrawXObject(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawXObject__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  PoDoFo::PdfXObject *arg4 = (PoDoFo::PdfXObject *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::DrawXObject",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawXObject",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawXObject",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawXObject",3,"double");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::DrawXObject",4,"PoDoFo::PdfXObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_DrawXObject",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfPainter_DrawXObject",4,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  {
    try {
      (arg1)->DrawXObject(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_DrawXObject(lua_State* L) {
  int argc;
  int argv[7]={
    1,2,3,4,5,6,7
  };
  
  argc = lua_gettop(L);
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfXObject, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_PdfPainter_DrawXObject__SWIG_2(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfXObject, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfPainter_DrawXObject__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfXObject, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_PdfPainter_DrawXObject__SWIG_0(L);
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPainter_DrawXObject'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPainter::DrawXObject(double,double,PoDoFo::PdfXObject *,double,double)\n"
    "    PoDoFo::PdfPainter::DrawXObject(double,double,PoDoFo::PdfXObject *,double)\n"
    "    PoDoFo::PdfPainter::DrawXObject(double,double,PoDoFo::PdfXObject *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPainter_ClosePath(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::ClosePath",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::ClosePath",1,"PoDoFo::PdfPainter *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_ClosePath",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      (arg1)->ClosePath();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_LineTo(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::LineTo",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::LineTo",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::LineTo",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::LineTo",3,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_LineTo",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  {
    try {
      (arg1)->LineTo(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_MoveTo(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::MoveTo",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::MoveTo",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::MoveTo",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::MoveTo",3,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_MoveTo",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  {
    try {
      (arg1)->MoveTo(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_CubicBezierTo(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::CubicBezierTo",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::CubicBezierTo",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::CubicBezierTo",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::CubicBezierTo",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::CubicBezierTo",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::CubicBezierTo",5,"double");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("PoDoFo::PdfPainter::CubicBezierTo",6,"double");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("PoDoFo::PdfPainter::CubicBezierTo",7,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_CubicBezierTo",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  arg6 = (double)lua_tonumber(L, 6);
  arg7 = (double)lua_tonumber(L, 7);
  {
    try {
      (arg1)->CubicBezierTo(arg2,arg3,arg4,arg5,arg6,arg7);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_HorizontalLineTo(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::HorizontalLineTo",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::HorizontalLineTo",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::HorizontalLineTo",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_HorizontalLineTo",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->HorizontalLineTo(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_VerticalLineTo(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::VerticalLineTo",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::VerticalLineTo",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::VerticalLineTo",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_VerticalLineTo",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->VerticalLineTo(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SmoothCurveTo(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SmoothCurveTo",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SmoothCurveTo",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SmoothCurveTo",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::SmoothCurveTo",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::SmoothCurveTo",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::SmoothCurveTo",5,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SmoothCurveTo",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  {
    try {
      (arg1)->SmoothCurveTo(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_QuadCurveTo(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::QuadCurveTo",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::QuadCurveTo",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::QuadCurveTo",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::QuadCurveTo",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::QuadCurveTo",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::QuadCurveTo",5,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_QuadCurveTo",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  {
    try {
      (arg1)->QuadCurveTo(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SmoothQuadCurveTo(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SmoothQuadCurveTo",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SmoothQuadCurveTo",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SmoothQuadCurveTo",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::SmoothQuadCurveTo",3,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SmoothQuadCurveTo",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  {
    try {
      (arg1)->SmoothQuadCurveTo(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_ArcTo(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  bool arg7 ;
  bool arg8 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::ArcTo",8,8)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::ArcTo",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::ArcTo",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::ArcTo",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::ArcTo",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::ArcTo",5,"double");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("PoDoFo::PdfPainter::ArcTo",6,"double");
  if(!lua_isboolean(L,7)) SWIG_fail_arg("PoDoFo::PdfPainter::ArcTo",7,"bool");
  if(!lua_isboolean(L,8)) SWIG_fail_arg("PoDoFo::PdfPainter::ArcTo",8,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_ArcTo",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  arg6 = (double)lua_tonumber(L, 6);
  arg7 = (lua_toboolean(L, 7)!=0);
  arg8 = (lua_toboolean(L, 8)!=0);
  {
    try {
      (arg1)->ArcTo(arg2,arg3,arg4,arg5,arg6,arg7,arg8);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_Arc(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::Arc",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::Arc",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::Arc",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::Arc",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::Arc",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::Arc",5,"double");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("PoDoFo::PdfPainter::Arc",6,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_Arc",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  arg6 = (double)lua_tonumber(L, 6);
  {
    try {
      result = (bool)(arg1)->Arc(arg2,arg3,arg4,arg5,arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_Close(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::Close",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::Close",1,"PoDoFo::PdfPainter *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_Close",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      (arg1)->Close();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_Stroke(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::Stroke",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::Stroke",1,"PoDoFo::PdfPainter *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_Stroke",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      (arg1)->Stroke();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_Fill__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::Fill",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::Fill",1,"PoDoFo::PdfPainter *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::Fill",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_Fill",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->Fill(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_Fill__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::Fill",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::Fill",1,"PoDoFo::PdfPainter *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_Fill",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      (arg1)->Fill();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_Fill(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfPainter_Fill__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfPainter_Fill__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPainter_Fill'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPainter::Fill(bool)\n"
    "    PoDoFo::PdfPainter::Fill()\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPainter_FillAndStroke__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::FillAndStroke",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::FillAndStroke",1,"PoDoFo::PdfPainter *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::FillAndStroke",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_FillAndStroke",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->FillAndStroke(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_FillAndStroke__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::FillAndStroke",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::FillAndStroke",1,"PoDoFo::PdfPainter *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_FillAndStroke",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      (arg1)->FillAndStroke();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_FillAndStroke(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfPainter_FillAndStroke__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfPainter_FillAndStroke__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPainter_FillAndStroke'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPainter::FillAndStroke(bool)\n"
    "    PoDoFo::PdfPainter::FillAndStroke()\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPainter_Clip__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::Clip",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::Clip",1,"PoDoFo::PdfPainter *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::Clip",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_Clip",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->Clip(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_Clip__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::Clip",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::Clip",1,"PoDoFo::PdfPainter *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_Clip",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      (arg1)->Clip();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_Clip(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_PdfPainter_Clip__SWIG_1(L);
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfPainter_Clip__SWIG_0(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPainter_Clip'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPainter::Clip(bool)\n"
    "    PoDoFo::PdfPainter::Clip()\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPainter_EndPath(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::EndPath",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::EndPath",1,"PoDoFo::PdfPainter *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_EndPath",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      (arg1)->EndPath();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_Save(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::Save",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::Save",1,"PoDoFo::PdfPainter *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_Save",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      (arg1)->Save();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_Restore(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::Restore",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::Restore",1,"PoDoFo::PdfPainter *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_Restore",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      (arg1)->Restore();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetTransformationMatrix(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  double arg7 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetTransformationMatrix",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetTransformationMatrix",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetTransformationMatrix",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainter::SetTransformationMatrix",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainter::SetTransformationMatrix",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainter::SetTransformationMatrix",5,"double");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("PoDoFo::PdfPainter::SetTransformationMatrix",6,"double");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("PoDoFo::PdfPainter::SetTransformationMatrix",7,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetTransformationMatrix",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  arg6 = (double)lua_tonumber(L, 6);
  arg7 = (double)lua_tonumber(L, 7);
  {
    try {
      (arg1)->SetTransformationMatrix(arg2,arg3,arg4,arg5,arg6,arg7);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetExtGState(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfExtGState *arg2 = (PoDoFo::PdfExtGState *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetExtGState",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetExtGState",1,"PoDoFo::PdfPainter *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetExtGState",2,"PoDoFo::PdfExtGState *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetExtGState",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfExtGState,0))){
    SWIG_fail_ptr("PdfPainter_SetExtGState",2,SWIGTYPE_p_PoDoFo__PdfExtGState);
  }
  
  {
    try {
      (arg1)->SetExtGState(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetRenderingIntent(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  char *arg2 = (char *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetRenderingIntent",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetRenderingIntent",1,"PoDoFo::PdfPainter *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetRenderingIntent",2,"char *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetRenderingIntent",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  {
    try {
      (arg1)->SetRenderingIntent(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetTabWidth(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  unsigned short arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetTabWidth",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetTabWidth",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetTabWidth",2,"unsigned short");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetTabWidth",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  SWIG_contract_assert((lua_tonumber(L,2)>=0),"number must not be negative")
  arg2 = (unsigned short)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetTabWidth(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_GetTabWidth(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  unsigned short result;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::GetTabWidth",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::GetTabWidth",1,"PoDoFo::PdfPainter const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_GetTabWidth",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      result = (unsigned short)((PoDoFo::PdfPainter const *)arg1)->GetTabWidth();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_SetPrecision(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  unsigned short arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::SetPrecision",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::SetPrecision",1,"PoDoFo::PdfPainter *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainter::SetPrecision",2,"unsigned short");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_SetPrecision",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  SWIG_contract_assert((lua_tonumber(L,2)>=0),"number must not be negative")
  arg2 = (unsigned short)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetPrecision(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_GetPrecision(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  unsigned short result;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::GetPrecision",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::GetPrecision",1,"PoDoFo::PdfPainter const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_GetPrecision",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      result = (unsigned short)((PoDoFo::PdfPainter const *)arg1)->GetPrecision();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainter_GetCurrentPath(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) 0 ;
  std::ostringstream *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainter::GetCurrentPath",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainter::GetCurrentPath",1,"PoDoFo::PdfPainter *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfPainter_GetCurrentPath",1,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      result = (std::ostringstream *) &(arg1)->GetCurrentPath();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_std__ostringstream,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfPainter(void *obj) {
PoDoFo::PdfPainter *arg1 = (PoDoFo::PdfPainter *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfPainter(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfPainter);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfPainter_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfPainter_methods[]= {
    { "SetPage", _wrap_PdfPainter_SetPage},
    { "GetPage", _wrap_PdfPainter_GetPage},
    { "GetCanvas", _wrap_PdfPainter_GetCanvas},
    { "FinishPage", _wrap_PdfPainter_FinishPage},
    { "SetStrokingGray", _wrap_PdfPainter_SetStrokingGray},
    { "SetGray", _wrap_PdfPainter_SetGray},
    { "SetStrokingColorCMYK", _wrap_PdfPainter_SetStrokingColorCMYK},
    { "SetColorCMYK", _wrap_PdfPainter_SetColorCMYK},
    { "SetStrokingShadingPattern", _wrap_PdfPainter_SetStrokingShadingPattern},
    { "SetShadingPattern", _wrap_PdfPainter_SetShadingPattern},
    { "SetStrokingTilingPattern", _wrap_PdfPainter_SetStrokingTilingPattern},
    { "SetTilingPattern", _wrap_PdfPainter_SetTilingPattern},
    { "SetStrokingColor", _wrap_PdfPainter_SetStrokingColor},
    { "SetColor", _wrap_PdfPainter_SetColor},
    { "SetStrokeWidth", _wrap_PdfPainter_SetStrokeWidth},
    { "SetStrokeStyle", _wrap_PdfPainter_SetStrokeStyle},
    { "SetLineCapStyle", _wrap_PdfPainter_SetLineCapStyle},
    { "SetLineJoinStyle", _wrap_PdfPainter_SetLineJoinStyle},
    { "SetFont", _wrap_PdfPainter_SetFont},
    { "SetTextRenderingMode", _wrap_PdfPainter_SetTextRenderingMode},
    { "GetTextRenderingMode", _wrap_PdfPainter_GetTextRenderingMode},
    { "GetFont", _wrap_PdfPainter_GetFont},
    { "SetClipRect", _wrap_PdfPainter_SetClipRect},
    { "SetMiterLimit", _wrap_PdfPainter_SetMiterLimit},
    { "DrawLine", _wrap_PdfPainter_DrawLine},
    { "Rectangle", _wrap_PdfPainter_Rectangle},
    { "Ellipse", _wrap_PdfPainter_Ellipse},
    { "Circle", _wrap_PdfPainter_Circle},
    { "DrawText", _wrap_PdfPainter_DrawText},
    { "DrawMultiLineText", _wrap_PdfPainter_DrawMultiLineText},
    { "GetMultiLineTextAsLines", _wrap_PdfPainter_GetMultiLineTextAsLines},
    { "DrawTextAligned", _wrap_PdfPainter_DrawTextAligned},
    { "BeginText", _wrap_PdfPainter_BeginText},
    { "AddText", _wrap_PdfPainter_AddText},
    { "MoveTextPos", _wrap_PdfPainter_MoveTextPos},
    { "EndText", _wrap_PdfPainter_EndText},
    { "DrawGlyph", _wrap_PdfPainter_DrawGlyph},
    { "DrawImage", _wrap_PdfPainter_DrawImage},
    { "DrawXObject", _wrap_PdfPainter_DrawXObject},
    { "ClosePath", _wrap_PdfPainter_ClosePath},
    { "LineTo", _wrap_PdfPainter_LineTo},
    { "MoveTo", _wrap_PdfPainter_MoveTo},
    { "CubicBezierTo", _wrap_PdfPainter_CubicBezierTo},
    { "HorizontalLineTo", _wrap_PdfPainter_HorizontalLineTo},
    { "VerticalLineTo", _wrap_PdfPainter_VerticalLineTo},
    { "SmoothCurveTo", _wrap_PdfPainter_SmoothCurveTo},
    { "QuadCurveTo", _wrap_PdfPainter_QuadCurveTo},
    { "SmoothQuadCurveTo", _wrap_PdfPainter_SmoothQuadCurveTo},
    { "ArcTo", _wrap_PdfPainter_ArcTo},
    { "Arc", _wrap_PdfPainter_Arc},
    { "Close", _wrap_PdfPainter_Close},
    { "Stroke", _wrap_PdfPainter_Stroke},
    { "Fill", _wrap_PdfPainter_Fill},
    { "FillAndStroke", _wrap_PdfPainter_FillAndStroke},
    { "Clip", _wrap_PdfPainter_Clip},
    { "EndPath", _wrap_PdfPainter_EndPath},
    { "Save", _wrap_PdfPainter_Save},
    { "Restore", _wrap_PdfPainter_Restore},
    { "SetTransformationMatrix", _wrap_PdfPainter_SetTransformationMatrix},
    { "SetExtGState", _wrap_PdfPainter_SetExtGState},
    { "SetRenderingIntent", _wrap_PdfPainter_SetRenderingIntent},
    { "SetTabWidth", _wrap_PdfPainter_SetTabWidth},
    { "GetTabWidth", _wrap_PdfPainter_GetTabWidth},
    { "SetPrecision", _wrap_PdfPainter_SetPrecision},
    { "GetPrecision", _wrap_PdfPainter_GetPrecision},
    { "GetCurrentPath", _wrap_PdfPainter_GetCurrentPath},
    {0,0}
};
static swig_lua_method swig_PdfPainter_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfPainter_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfPainter_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfPainter_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfPainter_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfPainter_Sf_SwigStatic = {
    "PdfPainter",
    swig_PdfPainter_Sf_SwigStatic_methods,
    swig_PdfPainter_Sf_SwigStatic_attributes,
    swig_PdfPainter_Sf_SwigStatic_constants,
    swig_PdfPainter_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfPainter_bases[] = {0};
static const char *swig_PdfPainter_base_names[] = {0};
static swig_lua_class _wrap_class_PdfPainter = { "PdfPainter", "PdfPainter", &SWIGTYPE_p_PoDoFo__PdfPainter,_proxy__wrap_new_PdfPainter, swig_delete_PdfPainter, swig_PdfPainter_methods, swig_PdfPainter_attributes, &swig_PdfPainter_Sf_SwigStatic, swig_PdfPainter_meta, swig_PdfPainter_bases, swig_PdfPainter_base_names };

static int _wrap_new_PdfPainterMM(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainterMM *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainterMM::PdfPainterMM",0,0)
  {
    try {
      result = (PoDoFo::PdfPainterMM *)new PoDoFo::PdfPainterMM();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfPainterMM,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainterMM_SetStrokeWidthMM(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainterMM *arg1 = (PoDoFo::PdfPainterMM *) 0 ;
  long arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainterMM::SetStrokeWidthMM",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainterMM::SetStrokeWidthMM",1,"PoDoFo::PdfPainterMM *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainterMM::SetStrokeWidthMM",2,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainterMM,0))){
    SWIG_fail_ptr("PdfPainterMM_SetStrokeWidthMM",1,SWIGTYPE_p_PoDoFo__PdfPainterMM);
  }
  
  arg2 = (long)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetStrokeWidthMM(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainterMM_DrawLineMM(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainterMM *arg1 = (PoDoFo::PdfPainterMM *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainterMM::DrawLineMM",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawLineMM",1,"PoDoFo::PdfPainterMM *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawLineMM",2,"long");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawLineMM",3,"long");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawLineMM",4,"long");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawLineMM",5,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainterMM,0))){
    SWIG_fail_ptr("PdfPainterMM_DrawLineMM",1,SWIGTYPE_p_PoDoFo__PdfPainterMM);
  }
  
  arg2 = (long)lua_tonumber(L, 2);
  arg3 = (long)lua_tonumber(L, 3);
  arg4 = (long)lua_tonumber(L, 4);
  arg5 = (long)lua_tonumber(L, 5);
  {
    try {
      (arg1)->DrawLineMM(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainterMM_RectangleMM(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainterMM *arg1 = (PoDoFo::PdfPainterMM *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainterMM::RectangleMM",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainterMM::RectangleMM",1,"PoDoFo::PdfPainterMM *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainterMM::RectangleMM",2,"long");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainterMM::RectangleMM",3,"long");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainterMM::RectangleMM",4,"long");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainterMM::RectangleMM",5,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainterMM,0))){
    SWIG_fail_ptr("PdfPainterMM_RectangleMM",1,SWIGTYPE_p_PoDoFo__PdfPainterMM);
  }
  
  arg2 = (long)lua_tonumber(L, 2);
  arg3 = (long)lua_tonumber(L, 3);
  arg4 = (long)lua_tonumber(L, 4);
  arg5 = (long)lua_tonumber(L, 5);
  {
    try {
      (arg1)->RectangleMM(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainterMM_EllipseMM(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainterMM *arg1 = (PoDoFo::PdfPainterMM *) 0 ;
  long arg2 ;
  long arg3 ;
  long arg4 ;
  long arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainterMM::EllipseMM",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainterMM::EllipseMM",1,"PoDoFo::PdfPainterMM *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainterMM::EllipseMM",2,"long");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainterMM::EllipseMM",3,"long");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfPainterMM::EllipseMM",4,"long");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainterMM::EllipseMM",5,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainterMM,0))){
    SWIG_fail_ptr("PdfPainterMM_EllipseMM",1,SWIGTYPE_p_PoDoFo__PdfPainterMM);
  }
  
  arg2 = (long)lua_tonumber(L, 2);
  arg3 = (long)lua_tonumber(L, 3);
  arg4 = (long)lua_tonumber(L, 4);
  arg5 = (long)lua_tonumber(L, 5);
  {
    try {
      (arg1)->EllipseMM(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainterMM_DrawTextMM__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainterMM *arg1 = (PoDoFo::PdfPainterMM *) 0 ;
  long arg2 ;
  long arg3 ;
  PoDoFo::PdfString *arg4 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainterMM::DrawTextMM",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawTextMM",1,"PoDoFo::PdfPainterMM *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawTextMM",2,"long");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawTextMM",3,"long");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawTextMM",4,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainterMM,0))){
    SWIG_fail_ptr("PdfPainterMM_DrawTextMM",1,SWIGTYPE_p_PoDoFo__PdfPainterMM);
  }
  
  arg2 = (long)lua_tonumber(L, 2);
  arg3 = (long)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfPainterMM_DrawTextMM",4,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->DrawTextMM(arg2,arg3,(PoDoFo::PdfString const &)*arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainterMM_DrawTextMM__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainterMM *arg1 = (PoDoFo::PdfPainterMM *) 0 ;
  long arg2 ;
  long arg3 ;
  PoDoFo::PdfString *arg4 = 0 ;
  long arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainterMM::DrawTextMM",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawTextMM",1,"PoDoFo::PdfPainterMM *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawTextMM",2,"long");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawTextMM",3,"long");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawTextMM",4,"PoDoFo::PdfString const &");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawTextMM",5,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainterMM,0))){
    SWIG_fail_ptr("PdfPainterMM_DrawTextMM",1,SWIGTYPE_p_PoDoFo__PdfPainterMM);
  }
  
  arg2 = (long)lua_tonumber(L, 2);
  arg3 = (long)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfPainterMM_DrawTextMM",4,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  arg5 = (long)lua_tonumber(L, 5);
  {
    try {
      (arg1)->DrawTextMM(arg2,arg3,(PoDoFo::PdfString const &)*arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainterMM_DrawTextMM(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainterMM, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (lua_isuserdata(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_PdfPainterMM_DrawTextMM__SWIG_0(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainterMM, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (lua_isuserdata(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfPainterMM_DrawTextMM__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPainterMM_DrawTextMM'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPainterMM::DrawTextMM(long,long,PoDoFo::PdfString const &)\n"
    "    PoDoFo::PdfPainterMM::DrawTextMM(long,long,PoDoFo::PdfString const &,long)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPainterMM_DrawImageMM__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainterMM *arg1 = (PoDoFo::PdfPainterMM *) 0 ;
  long arg2 ;
  long arg3 ;
  PoDoFo::PdfImage *arg4 = (PoDoFo::PdfImage *) 0 ;
  double arg5 ;
  double arg6 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainterMM::DrawImageMM",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawImageMM",1,"PoDoFo::PdfPainterMM *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawImageMM",2,"long");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawImageMM",3,"long");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawImageMM",4,"PoDoFo::PdfImage *");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawImageMM",5,"double");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawImageMM",6,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainterMM,0))){
    SWIG_fail_ptr("PdfPainterMM_DrawImageMM",1,SWIGTYPE_p_PoDoFo__PdfPainterMM);
  }
  
  arg2 = (long)lua_tonumber(L, 2);
  arg3 = (long)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfPainterMM_DrawImageMM",4,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  arg5 = (double)lua_tonumber(L, 5);
  arg6 = (double)lua_tonumber(L, 6);
  {
    try {
      (arg1)->DrawImageMM(arg2,arg3,arg4,arg5,arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainterMM_DrawImageMM__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainterMM *arg1 = (PoDoFo::PdfPainterMM *) 0 ;
  long arg2 ;
  long arg3 ;
  PoDoFo::PdfImage *arg4 = (PoDoFo::PdfImage *) 0 ;
  double arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainterMM::DrawImageMM",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawImageMM",1,"PoDoFo::PdfPainterMM *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawImageMM",2,"long");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawImageMM",3,"long");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawImageMM",4,"PoDoFo::PdfImage *");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawImageMM",5,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainterMM,0))){
    SWIG_fail_ptr("PdfPainterMM_DrawImageMM",1,SWIGTYPE_p_PoDoFo__PdfPainterMM);
  }
  
  arg2 = (long)lua_tonumber(L, 2);
  arg3 = (long)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfPainterMM_DrawImageMM",4,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  arg5 = (double)lua_tonumber(L, 5);
  {
    try {
      (arg1)->DrawImageMM(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainterMM_DrawImageMM__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainterMM *arg1 = (PoDoFo::PdfPainterMM *) 0 ;
  long arg2 ;
  long arg3 ;
  PoDoFo::PdfImage *arg4 = (PoDoFo::PdfImage *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainterMM::DrawImageMM",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawImageMM",1,"PoDoFo::PdfPainterMM *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawImageMM",2,"long");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawImageMM",3,"long");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawImageMM",4,"PoDoFo::PdfImage *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainterMM,0))){
    SWIG_fail_ptr("PdfPainterMM_DrawImageMM",1,SWIGTYPE_p_PoDoFo__PdfPainterMM);
  }
  
  arg2 = (long)lua_tonumber(L, 2);
  arg3 = (long)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("PdfPainterMM_DrawImageMM",4,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  {
    try {
      (arg1)->DrawImageMM(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainterMM_DrawImageMM(lua_State* L) {
  int argc;
  int argv[7]={
    1,2,3,4,5,6,7
  };
  
  argc = lua_gettop(L);
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainterMM, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfImage, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_PdfPainterMM_DrawImageMM__SWIG_2(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainterMM, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfImage, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfPainterMM_DrawImageMM__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainterMM, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfImage, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_PdfPainterMM_DrawImageMM__SWIG_0(L);
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPainterMM_DrawImageMM'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPainterMM::DrawImageMM(long,long,PoDoFo::PdfImage *,double,double)\n"
    "    PoDoFo::PdfPainterMM::DrawImageMM(long,long,PoDoFo::PdfImage *,double)\n"
    "    PoDoFo::PdfPainterMM::DrawImageMM(long,long,PoDoFo::PdfImage *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPainterMM_DrawXObjectMM__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainterMM *arg1 = (PoDoFo::PdfPainterMM *) 0 ;
  long arg2 ;
  long arg3 ;
  PoDoFo::PdfXObject *arg4 = (PoDoFo::PdfXObject *) 0 ;
  double arg5 ;
  double arg6 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainterMM::DrawXObjectMM",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawXObjectMM",1,"PoDoFo::PdfPainterMM *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawXObjectMM",2,"long");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawXObjectMM",3,"long");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawXObjectMM",4,"PoDoFo::PdfXObject *");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawXObjectMM",5,"double");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawXObjectMM",6,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainterMM,0))){
    SWIG_fail_ptr("PdfPainterMM_DrawXObjectMM",1,SWIGTYPE_p_PoDoFo__PdfPainterMM);
  }
  
  arg2 = (long)lua_tonumber(L, 2);
  arg3 = (long)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfPainterMM_DrawXObjectMM",4,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  arg5 = (double)lua_tonumber(L, 5);
  arg6 = (double)lua_tonumber(L, 6);
  {
    try {
      (arg1)->DrawXObjectMM(arg2,arg3,arg4,arg5,arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainterMM_DrawXObjectMM__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainterMM *arg1 = (PoDoFo::PdfPainterMM *) 0 ;
  long arg2 ;
  long arg3 ;
  PoDoFo::PdfXObject *arg4 = (PoDoFo::PdfXObject *) 0 ;
  double arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainterMM::DrawXObjectMM",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawXObjectMM",1,"PoDoFo::PdfPainterMM *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawXObjectMM",2,"long");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawXObjectMM",3,"long");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawXObjectMM",4,"PoDoFo::PdfXObject *");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawXObjectMM",5,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainterMM,0))){
    SWIG_fail_ptr("PdfPainterMM_DrawXObjectMM",1,SWIGTYPE_p_PoDoFo__PdfPainterMM);
  }
  
  arg2 = (long)lua_tonumber(L, 2);
  arg3 = (long)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfPainterMM_DrawXObjectMM",4,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  arg5 = (double)lua_tonumber(L, 5);
  {
    try {
      (arg1)->DrawXObjectMM(arg2,arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainterMM_DrawXObjectMM__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainterMM *arg1 = (PoDoFo::PdfPainterMM *) 0 ;
  long arg2 ;
  long arg3 ;
  PoDoFo::PdfXObject *arg4 = (PoDoFo::PdfXObject *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainterMM::DrawXObjectMM",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawXObjectMM",1,"PoDoFo::PdfPainterMM *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawXObjectMM",2,"long");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawXObjectMM",3,"long");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfPainterMM::DrawXObjectMM",4,"PoDoFo::PdfXObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainterMM,0))){
    SWIG_fail_ptr("PdfPainterMM_DrawXObjectMM",1,SWIGTYPE_p_PoDoFo__PdfPainterMM);
  }
  
  arg2 = (long)lua_tonumber(L, 2);
  arg3 = (long)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfPainterMM_DrawXObjectMM",4,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  {
    try {
      (arg1)->DrawXObjectMM(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainterMM_DrawXObjectMM(lua_State* L) {
  int argc;
  int argv[7]={
    1,2,3,4,5,6,7
  };
  
  argc = lua_gettop(L);
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainterMM, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfXObject, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_PdfPainterMM_DrawXObjectMM__SWIG_2(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainterMM, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfXObject, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfPainterMM_DrawXObjectMM__SWIG_1(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainterMM, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfXObject, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                return _wrap_PdfPainterMM_DrawXObjectMM__SWIG_0(L);
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfPainterMM_DrawXObjectMM'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfPainterMM::DrawXObjectMM(long,long,PoDoFo::PdfXObject *,double,double)\n"
    "    PoDoFo::PdfPainterMM::DrawXObjectMM(long,long,PoDoFo::PdfXObject *,double)\n"
    "    PoDoFo::PdfPainterMM::DrawXObjectMM(long,long,PoDoFo::PdfXObject *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfPainterMM_LineToMM(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainterMM *arg1 = (PoDoFo::PdfPainterMM *) 0 ;
  long arg2 ;
  long arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainterMM::LineToMM",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainterMM::LineToMM",1,"PoDoFo::PdfPainterMM *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainterMM::LineToMM",2,"long");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainterMM::LineToMM",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainterMM,0))){
    SWIG_fail_ptr("PdfPainterMM_LineToMM",1,SWIGTYPE_p_PoDoFo__PdfPainterMM);
  }
  
  arg2 = (long)lua_tonumber(L, 2);
  arg3 = (long)lua_tonumber(L, 3);
  {
    try {
      (arg1)->LineToMM(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfPainterMM_MoveToMM(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPainterMM *arg1 = (PoDoFo::PdfPainterMM *) 0 ;
  long arg2 ;
  long arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfPainterMM::MoveToMM",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfPainterMM::MoveToMM",1,"PoDoFo::PdfPainterMM *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfPainterMM::MoveToMM",2,"long");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfPainterMM::MoveToMM",3,"long");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPainterMM,0))){
    SWIG_fail_ptr("PdfPainterMM_MoveToMM",1,SWIGTYPE_p_PoDoFo__PdfPainterMM);
  }
  
  arg2 = (long)lua_tonumber(L, 2);
  arg3 = (long)lua_tonumber(L, 3);
  {
    try {
      (arg1)->MoveToMM(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfPainterMM(void *obj) {
PoDoFo::PdfPainterMM *arg1 = (PoDoFo::PdfPainterMM *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfPainterMM(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfPainterMM);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfPainterMM_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfPainterMM_methods[]= {
    { "SetStrokeWidthMM", _wrap_PdfPainterMM_SetStrokeWidthMM},
    { "DrawLineMM", _wrap_PdfPainterMM_DrawLineMM},
    { "RectangleMM", _wrap_PdfPainterMM_RectangleMM},
    { "EllipseMM", _wrap_PdfPainterMM_EllipseMM},
    { "DrawTextMM", _wrap_PdfPainterMM_DrawTextMM},
    { "DrawImageMM", _wrap_PdfPainterMM_DrawImageMM},
    { "DrawXObjectMM", _wrap_PdfPainterMM_DrawXObjectMM},
    { "LineToMM", _wrap_PdfPainterMM_LineToMM},
    { "MoveToMM", _wrap_PdfPainterMM_MoveToMM},
    {0,0}
};
static swig_lua_method swig_PdfPainterMM_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfPainterMM_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfPainterMM_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfPainterMM_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfPainterMM_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfPainterMM_Sf_SwigStatic = {
    "PdfPainterMM",
    swig_PdfPainterMM_Sf_SwigStatic_methods,
    swig_PdfPainterMM_Sf_SwigStatic_attributes,
    swig_PdfPainterMM_Sf_SwigStatic_constants,
    swig_PdfPainterMM_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfPainterMM_bases[] = {0,0};
static const char *swig_PdfPainterMM_base_names[] = {"PoDoFo::PdfPainter *",0};
static swig_lua_class _wrap_class_PdfPainterMM = { "PdfPainterMM", "PdfPainterMM", &SWIGTYPE_p_PoDoFo__PdfPainterMM,_proxy__wrap_new_PdfPainterMM, swig_delete_PdfPainterMM, swig_PdfPainterMM_methods, swig_PdfPainterMM_attributes, &swig_PdfPainterMM_Sf_SwigStatic, swig_PdfPainterMM_meta, swig_PdfPainterMM_bases, swig_PdfPainterMM_base_names };

static int _wrap_PdfShadingPattern_GetIdentifier(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfShadingPattern *arg1 = (PoDoFo::PdfShadingPattern *) 0 ;
  PoDoFo::PdfName *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfShadingPattern::GetIdentifier",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfShadingPattern::GetIdentifier",1,"PoDoFo::PdfShadingPattern const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfShadingPattern,0))){
    SWIG_fail_ptr("PdfShadingPattern_GetIdentifier",1,SWIGTYPE_p_PoDoFo__PdfShadingPattern);
  }
  
  {
    try {
      result = (PoDoFo::PdfName *) &((PoDoFo::PdfShadingPattern const *)arg1)->GetIdentifier();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfName,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfShadingPattern(void *obj) {
PoDoFo::PdfShadingPattern *arg1 = (PoDoFo::PdfShadingPattern *) obj;
delete arg1;
}
static swig_lua_attribute swig_PdfShadingPattern_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfShadingPattern_methods[]= {
    { "GetIdentifier", _wrap_PdfShadingPattern_GetIdentifier},
    {0,0}
};
static swig_lua_method swig_PdfShadingPattern_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfShadingPattern_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfShadingPattern_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfShadingPattern_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfShadingPattern_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfShadingPattern_Sf_SwigStatic = {
    "PdfShadingPattern",
    swig_PdfShadingPattern_Sf_SwigStatic_methods,
    swig_PdfShadingPattern_Sf_SwigStatic_attributes,
    swig_PdfShadingPattern_Sf_SwigStatic_constants,
    swig_PdfShadingPattern_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfShadingPattern_bases[] = {0,0};
static const char *swig_PdfShadingPattern_base_names[] = {"PoDoFo::PdfElement *",0};
static swig_lua_class _wrap_class_PdfShadingPattern = { "PdfShadingPattern", "PdfShadingPattern", &SWIGTYPE_p_PoDoFo__PdfShadingPattern,0, swig_delete_PdfShadingPattern, swig_PdfShadingPattern_methods, swig_PdfShadingPattern_attributes, &swig_PdfShadingPattern_Sf_SwigStatic, swig_PdfShadingPattern_meta, swig_PdfShadingPattern_bases, swig_PdfShadingPattern_base_names };

static int _wrap_new_PdfAxialShadingPattern__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  PoDoFo::PdfColor *arg5 = 0 ;
  PoDoFo::PdfColor *arg6 = 0 ;
  PoDoFo::PdfVecObjects *arg7 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfAxialShadingPattern *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAxialShadingPattern::PdfAxialShadingPattern",7,7)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfAxialShadingPattern::PdfAxialShadingPattern",1,"double");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfAxialShadingPattern::PdfAxialShadingPattern",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfAxialShadingPattern::PdfAxialShadingPattern",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfAxialShadingPattern::PdfAxialShadingPattern",4,"double");
  if(!lua_isuserdata(L,5)) SWIG_fail_arg("PoDoFo::PdfAxialShadingPattern::PdfAxialShadingPattern",5,"PoDoFo::PdfColor const &");
  if(!lua_isuserdata(L,6)) SWIG_fail_arg("PoDoFo::PdfAxialShadingPattern::PdfAxialShadingPattern",6,"PoDoFo::PdfColor const &");
  if(!SWIG_isptrtype(L,7)) SWIG_fail_arg("PoDoFo::PdfAxialShadingPattern::PdfAxialShadingPattern",7,"PoDoFo::PdfVecObjects *");
  arg1 = (double)lua_tonumber(L, 1);
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&arg5,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfAxialShadingPattern",5,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfAxialShadingPattern",6,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,7,(void**)&arg7,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfAxialShadingPattern",7,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfAxialShadingPattern *)new PoDoFo::PdfAxialShadingPattern(arg1,arg2,arg3,arg4,(PoDoFo::PdfColor const &)*arg5,(PoDoFo::PdfColor const &)*arg6,arg7);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAxialShadingPattern,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfAxialShadingPattern__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  PoDoFo::PdfColor *arg5 = 0 ;
  PoDoFo::PdfColor *arg6 = 0 ;
  PoDoFo::PdfDocument *arg7 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfAxialShadingPattern *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfAxialShadingPattern::PdfAxialShadingPattern",7,7)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfAxialShadingPattern::PdfAxialShadingPattern",1,"double");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfAxialShadingPattern::PdfAxialShadingPattern",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfAxialShadingPattern::PdfAxialShadingPattern",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfAxialShadingPattern::PdfAxialShadingPattern",4,"double");
  if(!lua_isuserdata(L,5)) SWIG_fail_arg("PoDoFo::PdfAxialShadingPattern::PdfAxialShadingPattern",5,"PoDoFo::PdfColor const &");
  if(!lua_isuserdata(L,6)) SWIG_fail_arg("PoDoFo::PdfAxialShadingPattern::PdfAxialShadingPattern",6,"PoDoFo::PdfColor const &");
  if(!SWIG_isptrtype(L,7)) SWIG_fail_arg("PoDoFo::PdfAxialShadingPattern::PdfAxialShadingPattern",7,"PoDoFo::PdfDocument *");
  arg1 = (double)lua_tonumber(L, 1);
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&arg5,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfAxialShadingPattern",5,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfAxialShadingPattern",6,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,7,(void**)&arg7,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfAxialShadingPattern",7,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfAxialShadingPattern *)new PoDoFo::PdfAxialShadingPattern(arg1,arg2,arg3,arg4,(PoDoFo::PdfColor const &)*arg5,(PoDoFo::PdfColor const &)*arg6,arg7);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfAxialShadingPattern,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfAxialShadingPattern(lua_State* L) {
  int argc;
  int argv[8]={
    1,2,3,4,5,6,7,8
  };
  
  argc = lua_gettop(L);
  if (argc == 7) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              void *ptr;
              if (lua_isuserdata(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              {
                void *ptr;
                if (lua_isuserdata(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                {
                  void *ptr;
                  if (SWIG_isptrtype(L,argv[6])==0 || SWIG_ConvertPtr(L,argv[6], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
                    _v = 0;
                  } else {
                    _v = 1;
                  }
                }
                if (_v) {
                  return _wrap_new_PdfAxialShadingPattern__SWIG_0(L);
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              void *ptr;
              if (lua_isuserdata(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              {
                void *ptr;
                if (lua_isuserdata(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                {
                  void *ptr;
                  if (SWIG_isptrtype(L,argv[6])==0 || SWIG_ConvertPtr(L,argv[6], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
                    _v = 0;
                  } else {
                    _v = 1;
                  }
                }
                if (_v) {
                  return _wrap_new_PdfAxialShadingPattern__SWIG_1(L);
                }
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfAxialShadingPattern'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfAxialShadingPattern::PdfAxialShadingPattern(double,double,double,double,PoDoFo::PdfColor const &,PoDoFo::PdfColor const &,PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfAxialShadingPattern::PdfAxialShadingPattern(double,double,double,double,PoDoFo::PdfColor const &,PoDoFo::PdfColor const &,PoDoFo::PdfDocument *)\n");
  lua_error(L);return 0;
}


static void swig_delete_PdfAxialShadingPattern(void *obj) {
PoDoFo::PdfAxialShadingPattern *arg1 = (PoDoFo::PdfAxialShadingPattern *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfAxialShadingPattern(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfAxialShadingPattern);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfAxialShadingPattern_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfAxialShadingPattern_methods[]= {
    {0,0}
};
static swig_lua_method swig_PdfAxialShadingPattern_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfAxialShadingPattern_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfAxialShadingPattern_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfAxialShadingPattern_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfAxialShadingPattern_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfAxialShadingPattern_Sf_SwigStatic = {
    "PdfAxialShadingPattern",
    swig_PdfAxialShadingPattern_Sf_SwigStatic_methods,
    swig_PdfAxialShadingPattern_Sf_SwigStatic_attributes,
    swig_PdfAxialShadingPattern_Sf_SwigStatic_constants,
    swig_PdfAxialShadingPattern_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfAxialShadingPattern_bases[] = {0,0};
static const char *swig_PdfAxialShadingPattern_base_names[] = {"PoDoFo::PdfShadingPattern *",0};
static swig_lua_class _wrap_class_PdfAxialShadingPattern = { "PdfAxialShadingPattern", "PdfAxialShadingPattern", &SWIGTYPE_p_PoDoFo__PdfAxialShadingPattern,_proxy__wrap_new_PdfAxialShadingPattern, swig_delete_PdfAxialShadingPattern, swig_PdfAxialShadingPattern_methods, swig_PdfAxialShadingPattern_attributes, &swig_PdfAxialShadingPattern_Sf_SwigStatic, swig_PdfAxialShadingPattern_meta, swig_PdfAxialShadingPattern_bases, swig_PdfAxialShadingPattern_base_names };

static int _wrap_new_PdfFunctionBaseShadingPattern__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfColor *arg1 = 0 ;
  PoDoFo::PdfColor *arg2 = 0 ;
  PoDoFo::PdfColor *arg3 = 0 ;
  PoDoFo::PdfColor *arg4 = 0 ;
  PoDoFo::PdfArray *arg5 = 0 ;
  PoDoFo::PdfVecObjects *arg6 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfFunctionBaseShadingPattern *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFunctionBaseShadingPattern::PdfFunctionBaseShadingPattern",6,6)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfFunctionBaseShadingPattern::PdfFunctionBaseShadingPattern",1,"PoDoFo::PdfColor const &");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfFunctionBaseShadingPattern::PdfFunctionBaseShadingPattern",2,"PoDoFo::PdfColor const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfFunctionBaseShadingPattern::PdfFunctionBaseShadingPattern",3,"PoDoFo::PdfColor const &");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfFunctionBaseShadingPattern::PdfFunctionBaseShadingPattern",4,"PoDoFo::PdfColor const &");
  if(!lua_isuserdata(L,5)) SWIG_fail_arg("PoDoFo::PdfFunctionBaseShadingPattern::PdfFunctionBaseShadingPattern",5,"PoDoFo::PdfArray const &");
  if(!SWIG_isptrtype(L,6)) SWIG_fail_arg("PoDoFo::PdfFunctionBaseShadingPattern::PdfFunctionBaseShadingPattern",6,"PoDoFo::PdfVecObjects *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfFunctionBaseShadingPattern",1,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfFunctionBaseShadingPattern",2,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfFunctionBaseShadingPattern",3,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfFunctionBaseShadingPattern",4,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&arg5,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfFunctionBaseShadingPattern",5,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfFunctionBaseShadingPattern",6,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfFunctionBaseShadingPattern *)new PoDoFo::PdfFunctionBaseShadingPattern((PoDoFo::PdfColor const &)*arg1,(PoDoFo::PdfColor const &)*arg2,(PoDoFo::PdfColor const &)*arg3,(PoDoFo::PdfColor const &)*arg4,(PoDoFo::PdfArray const &)*arg5,arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFunctionBaseShadingPattern,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFunctionBaseShadingPattern__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfColor *arg1 = 0 ;
  PoDoFo::PdfColor *arg2 = 0 ;
  PoDoFo::PdfColor *arg3 = 0 ;
  PoDoFo::PdfColor *arg4 = 0 ;
  PoDoFo::PdfArray *arg5 = 0 ;
  PoDoFo::PdfDocument *arg6 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfFunctionBaseShadingPattern *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfFunctionBaseShadingPattern::PdfFunctionBaseShadingPattern",6,6)
  if(!lua_isuserdata(L,1)) SWIG_fail_arg("PoDoFo::PdfFunctionBaseShadingPattern::PdfFunctionBaseShadingPattern",1,"PoDoFo::PdfColor const &");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfFunctionBaseShadingPattern::PdfFunctionBaseShadingPattern",2,"PoDoFo::PdfColor const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfFunctionBaseShadingPattern::PdfFunctionBaseShadingPattern",3,"PoDoFo::PdfColor const &");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfFunctionBaseShadingPattern::PdfFunctionBaseShadingPattern",4,"PoDoFo::PdfColor const &");
  if(!lua_isuserdata(L,5)) SWIG_fail_arg("PoDoFo::PdfFunctionBaseShadingPattern::PdfFunctionBaseShadingPattern",5,"PoDoFo::PdfArray const &");
  if(!SWIG_isptrtype(L,6)) SWIG_fail_arg("PoDoFo::PdfFunctionBaseShadingPattern::PdfFunctionBaseShadingPattern",6,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfFunctionBaseShadingPattern",1,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfFunctionBaseShadingPattern",2,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfFunctionBaseShadingPattern",3,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfFunctionBaseShadingPattern",4,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&arg5,SWIGTYPE_p_PoDoFo__PdfArray,0))){
    SWIG_fail_ptr("new_PdfFunctionBaseShadingPattern",5,SWIGTYPE_p_PoDoFo__PdfArray);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfFunctionBaseShadingPattern",6,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfFunctionBaseShadingPattern *)new PoDoFo::PdfFunctionBaseShadingPattern((PoDoFo::PdfColor const &)*arg1,(PoDoFo::PdfColor const &)*arg2,(PoDoFo::PdfColor const &)*arg3,(PoDoFo::PdfColor const &)*arg4,(PoDoFo::PdfArray const &)*arg5,arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFunctionBaseShadingPattern,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfFunctionBaseShadingPattern(lua_State* L) {
  int argc;
  int argv[7]={
    1,2,3,4,5,6,7
  };
  
  argc = lua_gettop(L);
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (lua_isuserdata(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              void *ptr;
              if (lua_isuserdata(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              {
                void *ptr;
                if (SWIG_isptrtype(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                return _wrap_new_PdfFunctionBaseShadingPattern__SWIG_0(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (lua_isuserdata(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (lua_isuserdata(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              void *ptr;
              if (lua_isuserdata(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfArray, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              {
                void *ptr;
                if (SWIG_isptrtype(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                return _wrap_new_PdfFunctionBaseShadingPattern__SWIG_1(L);
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfFunctionBaseShadingPattern'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfFunctionBaseShadingPattern::PdfFunctionBaseShadingPattern(PoDoFo::PdfColor const &,PoDoFo::PdfColor const &,PoDoFo::PdfColor const &,PoDoFo::PdfColor const &,PoDoFo::PdfArray const &,PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfFunctionBaseShadingPattern::PdfFunctionBaseShadingPattern(PoDoFo::PdfColor const &,PoDoFo::PdfColor const &,PoDoFo::PdfColor const &,PoDoFo::PdfColor const &,PoDoFo::PdfArray const &,PoDoFo::PdfDocument *)\n");
  lua_error(L);return 0;
}


static void swig_delete_PdfFunctionBaseShadingPattern(void *obj) {
PoDoFo::PdfFunctionBaseShadingPattern *arg1 = (PoDoFo::PdfFunctionBaseShadingPattern *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfFunctionBaseShadingPattern(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfFunctionBaseShadingPattern);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfFunctionBaseShadingPattern_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfFunctionBaseShadingPattern_methods[]= {
    {0,0}
};
static swig_lua_method swig_PdfFunctionBaseShadingPattern_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfFunctionBaseShadingPattern_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfFunctionBaseShadingPattern_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfFunctionBaseShadingPattern_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfFunctionBaseShadingPattern_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfFunctionBaseShadingPattern_Sf_SwigStatic = {
    "PdfFunctionBaseShadingPattern",
    swig_PdfFunctionBaseShadingPattern_Sf_SwigStatic_methods,
    swig_PdfFunctionBaseShadingPattern_Sf_SwigStatic_attributes,
    swig_PdfFunctionBaseShadingPattern_Sf_SwigStatic_constants,
    swig_PdfFunctionBaseShadingPattern_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfFunctionBaseShadingPattern_bases[] = {0,0};
static const char *swig_PdfFunctionBaseShadingPattern_base_names[] = {"PoDoFo::PdfShadingPattern *",0};
static swig_lua_class _wrap_class_PdfFunctionBaseShadingPattern = { "PdfFunctionBaseShadingPattern", "PdfFunctionBaseShadingPattern", &SWIGTYPE_p_PoDoFo__PdfFunctionBaseShadingPattern,_proxy__wrap_new_PdfFunctionBaseShadingPattern, swig_delete_PdfFunctionBaseShadingPattern, swig_PdfFunctionBaseShadingPattern_methods, swig_PdfFunctionBaseShadingPattern_attributes, &swig_PdfFunctionBaseShadingPattern_Sf_SwigStatic, swig_PdfFunctionBaseShadingPattern_meta, swig_PdfFunctionBaseShadingPattern_bases, swig_PdfFunctionBaseShadingPattern_base_names };

static int _wrap_new_PdfRadialShadingPattern__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  PoDoFo::PdfColor *arg7 = 0 ;
  PoDoFo::PdfColor *arg8 = 0 ;
  PoDoFo::PdfVecObjects *arg9 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfRadialShadingPattern *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",9,9)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",1,"double");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",5,"double");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",6,"double");
  if(!lua_isuserdata(L,7)) SWIG_fail_arg("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",7,"PoDoFo::PdfColor const &");
  if(!lua_isuserdata(L,8)) SWIG_fail_arg("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",8,"PoDoFo::PdfColor const &");
  if(!SWIG_isptrtype(L,9)) SWIG_fail_arg("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",9,"PoDoFo::PdfVecObjects *");
  arg1 = (double)lua_tonumber(L, 1);
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  arg6 = (double)lua_tonumber(L, 6);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,7,(void**)&arg7,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfRadialShadingPattern",7,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,8,(void**)&arg8,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfRadialShadingPattern",8,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,9,(void**)&arg9,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfRadialShadingPattern",9,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfRadialShadingPattern *)new PoDoFo::PdfRadialShadingPattern(arg1,arg2,arg3,arg4,arg5,arg6,(PoDoFo::PdfColor const &)*arg7,(PoDoFo::PdfColor const &)*arg8,arg9);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfRadialShadingPattern,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfRadialShadingPattern__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double arg5 ;
  double arg6 ;
  PoDoFo::PdfColor *arg7 = 0 ;
  PoDoFo::PdfColor *arg8 = 0 ;
  PoDoFo::PdfDocument *arg9 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfRadialShadingPattern *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",9,9)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",1,"double");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",5,"double");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",6,"double");
  if(!lua_isuserdata(L,7)) SWIG_fail_arg("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",7,"PoDoFo::PdfColor const &");
  if(!lua_isuserdata(L,8)) SWIG_fail_arg("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",8,"PoDoFo::PdfColor const &");
  if(!SWIG_isptrtype(L,9)) SWIG_fail_arg("PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern",9,"PoDoFo::PdfDocument *");
  arg1 = (double)lua_tonumber(L, 1);
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  arg6 = (double)lua_tonumber(L, 6);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,7,(void**)&arg7,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfRadialShadingPattern",7,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,8,(void**)&arg8,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfRadialShadingPattern",8,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,9,(void**)&arg9,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfRadialShadingPattern",9,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfRadialShadingPattern *)new PoDoFo::PdfRadialShadingPattern(arg1,arg2,arg3,arg4,arg5,arg6,(PoDoFo::PdfColor const &)*arg7,(PoDoFo::PdfColor const &)*arg8,arg9);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfRadialShadingPattern,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfRadialShadingPattern(lua_State* L) {
  int argc;
  int argv[10]={
    1,2,3,4,5,6,7,8,9,10
  };
  
  argc = lua_gettop(L);
  if (argc == 9) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  void *ptr;
                  if (lua_isuserdata(L,argv[6])==0 || SWIG_ConvertPtr(L,argv[6], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
                    _v = 0;
                  } else {
                    _v = 1;
                  }
                }
                if (_v) {
                  {
                    void *ptr;
                    if (lua_isuserdata(L,argv[7])==0 || SWIG_ConvertPtr(L,argv[7], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
                      _v = 0;
                    } else {
                      _v = 1;
                    }
                  }
                  if (_v) {
                    {
                      void *ptr;
                      if (SWIG_isptrtype(L,argv[8])==0 || SWIG_ConvertPtr(L,argv[8], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
                        _v = 0;
                      } else {
                        _v = 1;
                      }
                    }
                    if (_v) {
                      return _wrap_new_PdfRadialShadingPattern__SWIG_0(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 9) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  void *ptr;
                  if (lua_isuserdata(L,argv[6])==0 || SWIG_ConvertPtr(L,argv[6], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
                    _v = 0;
                  } else {
                    _v = 1;
                  }
                }
                if (_v) {
                  {
                    void *ptr;
                    if (lua_isuserdata(L,argv[7])==0 || SWIG_ConvertPtr(L,argv[7], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
                      _v = 0;
                    } else {
                      _v = 1;
                    }
                  }
                  if (_v) {
                    {
                      void *ptr;
                      if (SWIG_isptrtype(L,argv[8])==0 || SWIG_ConvertPtr(L,argv[8], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
                        _v = 0;
                      } else {
                        _v = 1;
                      }
                    }
                    if (_v) {
                      return _wrap_new_PdfRadialShadingPattern__SWIG_1(L);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfRadialShadingPattern'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern(double,double,double,double,double,double,PoDoFo::PdfColor const &,PoDoFo::PdfColor const &,PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfRadialShadingPattern::PdfRadialShadingPattern(double,double,double,double,double,double,PoDoFo::PdfColor const &,PoDoFo::PdfColor const &,PoDoFo::PdfDocument *)\n");
  lua_error(L);return 0;
}


static void swig_delete_PdfRadialShadingPattern(void *obj) {
PoDoFo::PdfRadialShadingPattern *arg1 = (PoDoFo::PdfRadialShadingPattern *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfRadialShadingPattern(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfRadialShadingPattern);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfRadialShadingPattern_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfRadialShadingPattern_methods[]= {
    {0,0}
};
static swig_lua_method swig_PdfRadialShadingPattern_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfRadialShadingPattern_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfRadialShadingPattern_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfRadialShadingPattern_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfRadialShadingPattern_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfRadialShadingPattern_Sf_SwigStatic = {
    "PdfRadialShadingPattern",
    swig_PdfRadialShadingPattern_Sf_SwigStatic_methods,
    swig_PdfRadialShadingPattern_Sf_SwigStatic_attributes,
    swig_PdfRadialShadingPattern_Sf_SwigStatic_constants,
    swig_PdfRadialShadingPattern_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfRadialShadingPattern_bases[] = {0,0};
static const char *swig_PdfRadialShadingPattern_base_names[] = {"PoDoFo::PdfShadingPattern *",0};
static swig_lua_class _wrap_class_PdfRadialShadingPattern = { "PdfRadialShadingPattern", "PdfRadialShadingPattern", &SWIGTYPE_p_PoDoFo__PdfRadialShadingPattern,_proxy__wrap_new_PdfRadialShadingPattern, swig_delete_PdfRadialShadingPattern, swig_PdfRadialShadingPattern_methods, swig_PdfRadialShadingPattern_attributes, &swig_PdfRadialShadingPattern_Sf_SwigStatic, swig_PdfRadialShadingPattern_meta, swig_PdfRadialShadingPattern_bases, swig_PdfRadialShadingPattern_base_names };

static int _wrap_new_PdfTriangleShadingPattern__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  double arg1 ;
  double arg2 ;
  PoDoFo::PdfColor *arg3 = 0 ;
  double arg4 ;
  double arg5 ;
  PoDoFo::PdfColor *arg6 = 0 ;
  double arg7 ;
  double arg8 ;
  PoDoFo::PdfColor *arg9 = 0 ;
  PoDoFo::PdfVecObjects *arg10 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfTriangleShadingPattern *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",10,10)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",1,"double");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",2,"double");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",3,"PoDoFo::PdfColor const &");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",5,"double");
  if(!lua_isuserdata(L,6)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",6,"PoDoFo::PdfColor const &");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",7,"double");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",8,"double");
  if(!lua_isuserdata(L,9)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",9,"PoDoFo::PdfColor const &");
  if(!SWIG_isptrtype(L,10)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",10,"PoDoFo::PdfVecObjects *");
  arg1 = (double)lua_tonumber(L, 1);
  arg2 = (double)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfTriangleShadingPattern",3,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfTriangleShadingPattern",6,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  arg7 = (double)lua_tonumber(L, 7);
  arg8 = (double)lua_tonumber(L, 8);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,9,(void**)&arg9,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfTriangleShadingPattern",9,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,10,(void**)&arg10,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfTriangleShadingPattern",10,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfTriangleShadingPattern *)new PoDoFo::PdfTriangleShadingPattern(arg1,arg2,(PoDoFo::PdfColor const &)*arg3,arg4,arg5,(PoDoFo::PdfColor const &)*arg6,arg7,arg8,(PoDoFo::PdfColor const &)*arg9,arg10);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfTriangleShadingPattern,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfTriangleShadingPattern__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  double arg1 ;
  double arg2 ;
  PoDoFo::PdfColor *arg3 = 0 ;
  double arg4 ;
  double arg5 ;
  PoDoFo::PdfColor *arg6 = 0 ;
  double arg7 ;
  double arg8 ;
  PoDoFo::PdfColor *arg9 = 0 ;
  PoDoFo::PdfDocument *arg10 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfTriangleShadingPattern *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",10,10)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",1,"double");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",2,"double");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",3,"PoDoFo::PdfColor const &");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",4,"double");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",5,"double");
  if(!lua_isuserdata(L,6)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",6,"PoDoFo::PdfColor const &");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",7,"double");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",8,"double");
  if(!lua_isuserdata(L,9)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",9,"PoDoFo::PdfColor const &");
  if(!SWIG_isptrtype(L,10)) SWIG_fail_arg("PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern",10,"PoDoFo::PdfDocument *");
  arg1 = (double)lua_tonumber(L, 1);
  arg2 = (double)lua_tonumber(L, 2);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfTriangleShadingPattern",3,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (double)lua_tonumber(L, 5);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfTriangleShadingPattern",6,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  arg7 = (double)lua_tonumber(L, 7);
  arg8 = (double)lua_tonumber(L, 8);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,9,(void**)&arg9,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("new_PdfTriangleShadingPattern",9,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,10,(void**)&arg10,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfTriangleShadingPattern",10,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfTriangleShadingPattern *)new PoDoFo::PdfTriangleShadingPattern(arg1,arg2,(PoDoFo::PdfColor const &)*arg3,arg4,arg5,(PoDoFo::PdfColor const &)*arg6,arg7,arg8,(PoDoFo::PdfColor const &)*arg9,arg10);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfTriangleShadingPattern,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfTriangleShadingPattern(lua_State* L) {
  int argc;
  int argv[11]={
    1,2,3,4,5,6,7,8,9,10,11
  };
  
  argc = lua_gettop(L);
  if (argc == 10) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                void *ptr;
                if (lua_isuserdata(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      void *ptr;
                      if (lua_isuserdata(L,argv[8])==0 || SWIG_ConvertPtr(L,argv[8], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
                        _v = 0;
                      } else {
                        _v = 1;
                      }
                    }
                    if (_v) {
                      {
                        void *ptr;
                        if (SWIG_isptrtype(L,argv[9])==0 || SWIG_ConvertPtr(L,argv[9], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
                          _v = 0;
                        } else {
                          _v = 1;
                        }
                      }
                      if (_v) {
                        return _wrap_new_PdfTriangleShadingPattern__SWIG_0(L);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 10) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              {
                void *ptr;
                if (lua_isuserdata(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      void *ptr;
                      if (lua_isuserdata(L,argv[8])==0 || SWIG_ConvertPtr(L,argv[8], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfColor, 0)) {
                        _v = 0;
                      } else {
                        _v = 1;
                      }
                    }
                    if (_v) {
                      {
                        void *ptr;
                        if (SWIG_isptrtype(L,argv[9])==0 || SWIG_ConvertPtr(L,argv[9], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
                          _v = 0;
                        } else {
                          _v = 1;
                        }
                      }
                      if (_v) {
                        return _wrap_new_PdfTriangleShadingPattern__SWIG_1(L);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfTriangleShadingPattern'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern(double,double,PoDoFo::PdfColor const &,double,double,PoDoFo::PdfColor const &,double,double,PoDoFo::PdfColor const &,PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfTriangleShadingPattern::PdfTriangleShadingPattern(double,double,PoDoFo::PdfColor const &,double,double,PoDoFo::PdfColor const &,double,double,PoDoFo::PdfColor const &,PoDoFo::PdfDocument *)\n");
  lua_error(L);return 0;
}


static void swig_delete_PdfTriangleShadingPattern(void *obj) {
PoDoFo::PdfTriangleShadingPattern *arg1 = (PoDoFo::PdfTriangleShadingPattern *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfTriangleShadingPattern(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfTriangleShadingPattern);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfTriangleShadingPattern_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfTriangleShadingPattern_methods[]= {
    {0,0}
};
static swig_lua_method swig_PdfTriangleShadingPattern_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfTriangleShadingPattern_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfTriangleShadingPattern_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfTriangleShadingPattern_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfTriangleShadingPattern_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfTriangleShadingPattern_Sf_SwigStatic = {
    "PdfTriangleShadingPattern",
    swig_PdfTriangleShadingPattern_Sf_SwigStatic_methods,
    swig_PdfTriangleShadingPattern_Sf_SwigStatic_attributes,
    swig_PdfTriangleShadingPattern_Sf_SwigStatic_constants,
    swig_PdfTriangleShadingPattern_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfTriangleShadingPattern_bases[] = {0,0};
static const char *swig_PdfTriangleShadingPattern_base_names[] = {"PoDoFo::PdfShadingPattern *",0};
static swig_lua_class _wrap_class_PdfTriangleShadingPattern = { "PdfTriangleShadingPattern", "PdfTriangleShadingPattern", &SWIGTYPE_p_PoDoFo__PdfTriangleShadingPattern,_proxy__wrap_new_PdfTriangleShadingPattern, swig_delete_PdfTriangleShadingPattern, swig_PdfTriangleShadingPattern_methods, swig_PdfTriangleShadingPattern_attributes, &swig_PdfTriangleShadingPattern_Sf_SwigStatic, swig_PdfTriangleShadingPattern_meta, swig_PdfTriangleShadingPattern_bases, swig_PdfTriangleShadingPattern_base_names };

static int _wrap_new_PdfSigIncPainter(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfDocument *arg1 = (PoDoFo::PdfDocument *) 0 ;
  bool arg2 ;
  PoDoFo::PdfSigIncPainter *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSigIncPainter::PdfSigIncPainter",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSigIncPainter::PdfSigIncPainter",1,"PoDoFo::PdfDocument *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfSigIncPainter::PdfSigIncPainter",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfSigIncPainter",1,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      result = (PoDoFo::PdfSigIncPainter *)new PoDoFo::PdfSigIncPainter(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfSigIncPainter,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSigIncPainter_SetPageCanvas(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSigIncPainter *arg1 = (PoDoFo::PdfSigIncPainter *) 0 ;
  PoDoFo::PdfCanvas *arg2 = (PoDoFo::PdfCanvas *) 0 ;
  PoDoFo::PdfObject *arg3 = (PoDoFo::PdfObject *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSigIncPainter::SetPageCanvas",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSigIncPainter::SetPageCanvas",1,"PoDoFo::PdfSigIncPainter *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfSigIncPainter::SetPageCanvas",2,"PoDoFo::PdfCanvas *");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfSigIncPainter::SetPageCanvas",3,"PoDoFo::PdfObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSigIncPainter,0))){
    SWIG_fail_ptr("PdfSigIncPainter_SetPageCanvas",1,SWIGTYPE_p_PoDoFo__PdfSigIncPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfCanvas,0))){
    SWIG_fail_ptr("PdfSigIncPainter_SetPageCanvas",2,SWIGTYPE_p_PoDoFo__PdfCanvas);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfObject,0))){
    SWIG_fail_ptr("PdfSigIncPainter_SetPageCanvas",3,SWIGTYPE_p_PoDoFo__PdfObject);
  }
  
  {
    try {
      (arg1)->SetPageCanvas(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSigIncPainter_EndCanvas(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSigIncPainter *arg1 = (PoDoFo::PdfSigIncPainter *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSigIncPainter::EndCanvas",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSigIncPainter::EndCanvas",1,"PoDoFo::PdfSigIncPainter *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSigIncPainter,0))){
    SWIG_fail_ptr("PdfSigIncPainter_EndCanvas",1,SWIGTYPE_p_PoDoFo__PdfSigIncPainter);
  }
  
  {
    try {
      (arg1)->EndCanvas();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSigIncPainter_DrawMultiLineText__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSigIncPainter *arg1 = (PoDoFo::PdfSigIncPainter *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfString *arg3 = 0 ;
  PoDoFo::EPdfAlignment arg4 ;
  PoDoFo::EPdfVerticalAlignment arg5 ;
  
  SWIG_check_num_args("PoDoFo::PdfSigIncPainter::DrawMultiLineText",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSigIncPainter::DrawMultiLineText",1,"PoDoFo::PdfSigIncPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfSigIncPainter::DrawMultiLineText",2,"PoDoFo::PdfRect const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfSigIncPainter::DrawMultiLineText",3,"PoDoFo::PdfString const &");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfSigIncPainter::DrawMultiLineText",4,"PoDoFo::EPdfAlignment");
  if(!lua_isnumber(L,5)) SWIG_fail_arg("PoDoFo::PdfSigIncPainter::DrawMultiLineText",5,"PoDoFo::EPdfVerticalAlignment");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSigIncPainter,0))){
    SWIG_fail_ptr("PdfSigIncPainter_DrawMultiLineText",1,SWIGTYPE_p_PoDoFo__PdfSigIncPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfSigIncPainter_DrawMultiLineText",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfSigIncPainter_DrawMultiLineText",3,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  arg4 = (PoDoFo::EPdfAlignment)(int)lua_tonumber(L, 4);
  arg5 = (PoDoFo::EPdfVerticalAlignment)(int)lua_tonumber(L, 5);
  {
    try {
      (arg1)->DrawMultiLineText((PoDoFo::PdfRect const &)*arg2,(PoDoFo::PdfString const &)*arg3,arg4,arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSigIncPainter_DrawMultiLineText__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSigIncPainter *arg1 = (PoDoFo::PdfSigIncPainter *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfString *arg3 = 0 ;
  PoDoFo::EPdfAlignment arg4 ;
  
  SWIG_check_num_args("PoDoFo::PdfSigIncPainter::DrawMultiLineText",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSigIncPainter::DrawMultiLineText",1,"PoDoFo::PdfSigIncPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfSigIncPainter::DrawMultiLineText",2,"PoDoFo::PdfRect const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfSigIncPainter::DrawMultiLineText",3,"PoDoFo::PdfString const &");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfSigIncPainter::DrawMultiLineText",4,"PoDoFo::EPdfAlignment");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSigIncPainter,0))){
    SWIG_fail_ptr("PdfSigIncPainter_DrawMultiLineText",1,SWIGTYPE_p_PoDoFo__PdfSigIncPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfSigIncPainter_DrawMultiLineText",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfSigIncPainter_DrawMultiLineText",3,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  arg4 = (PoDoFo::EPdfAlignment)(int)lua_tonumber(L, 4);
  {
    try {
      (arg1)->DrawMultiLineText((PoDoFo::PdfRect const &)*arg2,(PoDoFo::PdfString const &)*arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSigIncPainter_DrawMultiLineText__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSigIncPainter *arg1 = (PoDoFo::PdfSigIncPainter *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfString *arg3 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSigIncPainter::DrawMultiLineText",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSigIncPainter::DrawMultiLineText",1,"PoDoFo::PdfSigIncPainter *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfSigIncPainter::DrawMultiLineText",2,"PoDoFo::PdfRect const &");
  if(!lua_isuserdata(L,3)) SWIG_fail_arg("PoDoFo::PdfSigIncPainter::DrawMultiLineText",3,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSigIncPainter,0))){
    SWIG_fail_ptr("PdfSigIncPainter_DrawMultiLineText",1,SWIGTYPE_p_PoDoFo__PdfSigIncPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfSigIncPainter_DrawMultiLineText",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfSigIncPainter_DrawMultiLineText",3,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->DrawMultiLineText((PoDoFo::PdfRect const &)*arg2,(PoDoFo::PdfString const &)*arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSigIncPainter_DrawMultiLineText(lua_State* L) {
  int argc;
  int argv[6]={
    1,2,3,4,5,6
  };
  
  argc = lua_gettop(L);
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfSigIncPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_PdfSigIncPainter_DrawMultiLineText__SWIG_2(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfSigIncPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            return _wrap_PdfSigIncPainter_DrawMultiLineText__SWIG_1(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfSigIncPainter, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (lua_isuserdata(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfString, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isnumber(L,argv[4]);
            }
            if (_v) {
              return _wrap_PdfSigIncPainter_DrawMultiLineText__SWIG_0(L);
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfSigIncPainter_DrawMultiLineText'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfSigIncPainter::DrawMultiLineText(PoDoFo::PdfRect const &,PoDoFo::PdfString const &,PoDoFo::EPdfAlignment,PoDoFo::EPdfVerticalAlignment)\n"
    "    PoDoFo::PdfSigIncPainter::DrawMultiLineText(PoDoFo::PdfRect const &,PoDoFo::PdfString const &,PoDoFo::EPdfAlignment)\n"
    "    PoDoFo::PdfSigIncPainter::DrawMultiLineText(PoDoFo::PdfRect const &,PoDoFo::PdfString const &)\n");
  lua_error(L);return 0;
}


static void swig_delete_PdfSigIncPainter(void *obj) {
PoDoFo::PdfSigIncPainter *arg1 = (PoDoFo::PdfSigIncPainter *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfSigIncPainter(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfSigIncPainter);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfSigIncPainter_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfSigIncPainter_methods[]= {
    { "SetPageCanvas", _wrap_PdfSigIncPainter_SetPageCanvas},
    { "EndCanvas", _wrap_PdfSigIncPainter_EndCanvas},
    { "DrawMultiLineText", _wrap_PdfSigIncPainter_DrawMultiLineText},
    {0,0}
};
static swig_lua_method swig_PdfSigIncPainter_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfSigIncPainter_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfSigIncPainter_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfSigIncPainter_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfSigIncPainter_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfSigIncPainter_Sf_SwigStatic = {
    "PdfSigIncPainter",
    swig_PdfSigIncPainter_Sf_SwigStatic_methods,
    swig_PdfSigIncPainter_Sf_SwigStatic_attributes,
    swig_PdfSigIncPainter_Sf_SwigStatic_constants,
    swig_PdfSigIncPainter_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfSigIncPainter_bases[] = {0,0};
static const char *swig_PdfSigIncPainter_base_names[] = {"PoDoFo::PdfPainter *",0};
static swig_lua_class _wrap_class_PdfSigIncPainter = { "PdfSigIncPainter", "PdfSigIncPainter", &SWIGTYPE_p_PoDoFo__PdfSigIncPainter,_proxy__wrap_new_PdfSigIncPainter, swig_delete_PdfSigIncPainter, swig_PdfSigIncPainter_methods, swig_PdfSigIncPainter_attributes, &swig_PdfSigIncPainter_Sf_SwigStatic, swig_PdfSigIncPainter_meta, swig_PdfSigIncPainter_bases, swig_PdfSigIncPainter_base_names };

static int _wrap_new_PdfSignOutputDevice__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfOutputDevice *arg1 = (PoDoFo::PdfOutputDevice *) 0 ;
  PoDoFo::PdfSignOutputDevice *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSignOutputDevice::PdfSignOutputDevice",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::PdfSignOutputDevice",1,"PoDoFo::PdfOutputDevice *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfOutputDevice,0))){
    SWIG_fail_ptr("new_PdfSignOutputDevice",1,SWIGTYPE_p_PoDoFo__PdfOutputDevice);
  }
  
  {
    try {
      result = (PoDoFo::PdfSignOutputDevice *)new PoDoFo::PdfSignOutputDevice(arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfSignOutputDevice__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  char *arg1 = (char *) 0 ;
  PoDoFo::PdfSignOutputDevice *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSignOutputDevice::PdfSignOutputDevice",1,1)
  if(!SWIG_lua_isnilstring(L,1)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::PdfSignOutputDevice",1,"char const *");
  arg1 = (char *)lua_tostring(L, 1);
  {
    try {
      result = (PoDoFo::PdfSignOutputDevice *)new PoDoFo::PdfSignOutputDevice((char const *)arg1);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfSignOutputDevice(lua_State* L) {
  int argc;
  int argv[2]={
    1,2
  };
  
  argc = lua_gettop(L);
  if (argc == 1) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfOutputDevice, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      return _wrap_new_PdfSignOutputDevice__SWIG_0(L);
    }
  }
  if (argc == 1) {
    int _v;
    {
      _v = SWIG_lua_isnilstring(L,argv[0]);
    }
    if (_v) {
      return _wrap_new_PdfSignOutputDevice__SWIG_1(L);
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfSignOutputDevice'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfSignOutputDevice::PdfSignOutputDevice(PoDoFo::PdfOutputDevice *)\n"
    "    PoDoFo::PdfSignOutputDevice::PdfSignOutputDevice(char const *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfSignOutputDevice_SetSignatureSize(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSignOutputDevice *arg1 = (PoDoFo::PdfSignOutputDevice *) 0 ;
  size_t arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfSignOutputDevice::SetSignatureSize",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::SetSignatureSize",1,"PoDoFo::PdfSignOutputDevice *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::SetSignatureSize",2,"size_t");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice,0))){
    SWIG_fail_ptr("PdfSignOutputDevice_SetSignatureSize",1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice);
  }
  
  SWIG_contract_assert((lua_tonumber(L,2)>=0),"number must not be negative")
  arg2 = (size_t)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetSignatureSize(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSignOutputDevice_GetSignatureSize(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSignOutputDevice *arg1 = (PoDoFo::PdfSignOutputDevice *) 0 ;
  size_t result;
  
  SWIG_check_num_args("PoDoFo::PdfSignOutputDevice::GetSignatureSize",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::GetSignatureSize",1,"PoDoFo::PdfSignOutputDevice const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice,0))){
    SWIG_fail_ptr("PdfSignOutputDevice_GetSignatureSize",1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice);
  }
  
  {
    try {
      result = ((PoDoFo::PdfSignOutputDevice const *)arg1)->GetSignatureSize();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSignOutputDevice_GetSignatureBeacon(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSignOutputDevice *arg1 = (PoDoFo::PdfSignOutputDevice *) 0 ;
  PdfData *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSignOutputDevice::GetSignatureBeacon",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::GetSignatureBeacon",1,"PoDoFo::PdfSignOutputDevice const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice,0))){
    SWIG_fail_ptr("PdfSignOutputDevice_GetSignatureBeacon",1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice);
  }
  
  {
    try {
      result = (PdfData *)((PoDoFo::PdfSignOutputDevice const *)arg1)->GetSignatureBeacon();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PdfData,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSignOutputDevice_HasSignaturePosition(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSignOutputDevice *arg1 = (PoDoFo::PdfSignOutputDevice *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfSignOutputDevice::HasSignaturePosition",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::HasSignaturePosition",1,"PoDoFo::PdfSignOutputDevice const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice,0))){
    SWIG_fail_ptr("PdfSignOutputDevice_HasSignaturePosition",1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfSignOutputDevice const *)arg1)->HasSignaturePosition();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSignOutputDevice_AdjustByteRange(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSignOutputDevice *arg1 = (PoDoFo::PdfSignOutputDevice *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSignOutputDevice::AdjustByteRange",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::AdjustByteRange",1,"PoDoFo::PdfSignOutputDevice *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice,0))){
    SWIG_fail_ptr("PdfSignOutputDevice_AdjustByteRange",1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice);
  }
  
  {
    try {
      (arg1)->AdjustByteRange();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSignOutputDevice_ReadForSignature(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSignOutputDevice *arg1 = (PoDoFo::PdfSignOutputDevice *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  size_t result;
  
  SWIG_check_num_args("PoDoFo::PdfSignOutputDevice::ReadForSignature",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::ReadForSignature",1,"PoDoFo::PdfSignOutputDevice *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::ReadForSignature",2,"char *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::ReadForSignature",3,"size_t");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice,0))){
    SWIG_fail_ptr("PdfSignOutputDevice_ReadForSignature",1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  SWIG_contract_assert((lua_tonumber(L,3)>=0),"number must not be negative")
  arg3 = (size_t)lua_tonumber(L, 3);
  {
    try {
      result = (arg1)->ReadForSignature(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSignOutputDevice_SetSignature(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSignOutputDevice *arg1 = (PoDoFo::PdfSignOutputDevice *) 0 ;
  PdfData *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSignOutputDevice::SetSignature",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::SetSignature",1,"PoDoFo::PdfSignOutputDevice *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::SetSignature",2,"PdfData const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice,0))){
    SWIG_fail_ptr("PdfSignOutputDevice_SetSignature",1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PdfData,0))){
    SWIG_fail_ptr("PdfSignOutputDevice_SetSignature",2,SWIGTYPE_p_PdfData);
  }
  
  {
    try {
      (arg1)->SetSignature((PdfData const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSignOutputDevice_GetLength(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSignOutputDevice *arg1 = (PoDoFo::PdfSignOutputDevice *) 0 ;
  size_t result;
  
  SWIG_check_num_args("PoDoFo::PdfSignOutputDevice::GetLength",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::GetLength",1,"PoDoFo::PdfSignOutputDevice const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice,0))){
    SWIG_fail_ptr("PdfSignOutputDevice_GetLength",1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice);
  }
  
  {
    try {
      result = ((PoDoFo::PdfSignOutputDevice const *)arg1)->GetLength();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSignOutputDevice_Print(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSignOutputDevice *arg1 = (PoDoFo::PdfSignOutputDevice *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSignOutputDevice::Print",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::Print",1,"PoDoFo::PdfSignOutputDevice *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::Print",2,"char const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice,0))){
    SWIG_fail_ptr("PdfSignOutputDevice_Print",1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  {
    try {
      (arg1)->Print((char const *)arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSignOutputDevice_Write(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSignOutputDevice *arg1 = (PoDoFo::PdfSignOutputDevice *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  
  SWIG_check_num_args("PoDoFo::PdfSignOutputDevice::Write",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::Write",1,"PoDoFo::PdfSignOutputDevice *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::Write",2,"char const *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::Write",3,"size_t");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice,0))){
    SWIG_fail_ptr("PdfSignOutputDevice_Write",1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  SWIG_contract_assert((lua_tonumber(L,3)>=0),"number must not be negative")
  arg3 = (size_t)lua_tonumber(L, 3);
  {
    try {
      (arg1)->Write((char const *)arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSignOutputDevice_Read(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSignOutputDevice *arg1 = (PoDoFo::PdfSignOutputDevice *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  size_t result;
  
  SWIG_check_num_args("PoDoFo::PdfSignOutputDevice::Read",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::Read",1,"PoDoFo::PdfSignOutputDevice *");
  if(!SWIG_lua_isnilstring(L,2)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::Read",2,"char *");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::Read",3,"size_t");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice,0))){
    SWIG_fail_ptr("PdfSignOutputDevice_Read",1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice);
  }
  
  arg2 = (char *)lua_tostring(L, 2);
  SWIG_contract_assert((lua_tonumber(L,3)>=0),"number must not be negative")
  arg3 = (size_t)lua_tonumber(L, 3);
  {
    try {
      result = (arg1)->Read(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSignOutputDevice_Seek(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSignOutputDevice *arg1 = (PoDoFo::PdfSignOutputDevice *) 0 ;
  size_t arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfSignOutputDevice::Seek",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::Seek",1,"PoDoFo::PdfSignOutputDevice *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::Seek",2,"size_t");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice,0))){
    SWIG_fail_ptr("PdfSignOutputDevice_Seek",1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice);
  }
  
  SWIG_contract_assert((lua_tonumber(L,2)>=0),"number must not be negative")
  arg2 = (size_t)lua_tonumber(L, 2);
  {
    try {
      (arg1)->Seek(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSignOutputDevice_Tell(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSignOutputDevice *arg1 = (PoDoFo::PdfSignOutputDevice *) 0 ;
  size_t result;
  
  SWIG_check_num_args("PoDoFo::PdfSignOutputDevice::Tell",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::Tell",1,"PoDoFo::PdfSignOutputDevice const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice,0))){
    SWIG_fail_ptr("PdfSignOutputDevice_Tell",1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice);
  }
  
  {
    try {
      result = ((PoDoFo::PdfSignOutputDevice const *)arg1)->Tell();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSignOutputDevice_Flush(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSignOutputDevice *arg1 = (PoDoFo::PdfSignOutputDevice *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSignOutputDevice::Flush",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignOutputDevice::Flush",1,"PoDoFo::PdfSignOutputDevice *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice,0))){
    SWIG_fail_ptr("PdfSignOutputDevice_Flush",1,SWIGTYPE_p_PoDoFo__PdfSignOutputDevice);
  }
  
  {
    try {
      (arg1)->Flush();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfSignOutputDevice(void *obj) {
PoDoFo::PdfSignOutputDevice *arg1 = (PoDoFo::PdfSignOutputDevice *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfSignOutputDevice(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfSignOutputDevice);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfSignOutputDevice_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfSignOutputDevice_methods[]= {
    { "SetSignatureSize", _wrap_PdfSignOutputDevice_SetSignatureSize},
    { "GetSignatureSize", _wrap_PdfSignOutputDevice_GetSignatureSize},
    { "GetSignatureBeacon", _wrap_PdfSignOutputDevice_GetSignatureBeacon},
    { "HasSignaturePosition", _wrap_PdfSignOutputDevice_HasSignaturePosition},
    { "AdjustByteRange", _wrap_PdfSignOutputDevice_AdjustByteRange},
    { "ReadForSignature", _wrap_PdfSignOutputDevice_ReadForSignature},
    { "SetSignature", _wrap_PdfSignOutputDevice_SetSignature},
    { "GetLength", _wrap_PdfSignOutputDevice_GetLength},
    { "Print", _wrap_PdfSignOutputDevice_Print},
    { "Write", _wrap_PdfSignOutputDevice_Write},
    { "Read", _wrap_PdfSignOutputDevice_Read},
    { "Seek", _wrap_PdfSignOutputDevice_Seek},
    { "Tell", _wrap_PdfSignOutputDevice_Tell},
    { "Flush", _wrap_PdfSignOutputDevice_Flush},
    {0,0}
};
static swig_lua_method swig_PdfSignOutputDevice_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfSignOutputDevice_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfSignOutputDevice_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfSignOutputDevice_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfSignOutputDevice_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfSignOutputDevice_Sf_SwigStatic = {
    "PdfSignOutputDevice",
    swig_PdfSignOutputDevice_Sf_SwigStatic_methods,
    swig_PdfSignOutputDevice_Sf_SwigStatic_attributes,
    swig_PdfSignOutputDevice_Sf_SwigStatic_constants,
    swig_PdfSignOutputDevice_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfSignOutputDevice_bases[] = {0};
static const char *swig_PdfSignOutputDevice_base_names[] = {0};
static swig_lua_class _wrap_class_PdfSignOutputDevice = { "PdfSignOutputDevice", "PdfSignOutputDevice", &SWIGTYPE_p_PoDoFo__PdfSignOutputDevice,_proxy__wrap_new_PdfSignOutputDevice, swig_delete_PdfSignOutputDevice, swig_PdfSignOutputDevice_methods, swig_PdfSignOutputDevice_attributes, &swig_PdfSignOutputDevice_Sf_SwigStatic, swig_PdfSignOutputDevice_meta, swig_PdfSignOutputDevice_bases, swig_PdfSignOutputDevice_base_names };

static int _wrap_new_PdfSignatureField__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfPage *arg1 = (PoDoFo::PdfPage *) 0 ;
  PoDoFo::PdfRect *arg2 = 0 ;
  PoDoFo::PdfDocument *arg3 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfSignatureField *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSignatureField::PdfSignatureField",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignatureField::PdfSignatureField",1,"PoDoFo::PdfPage *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfSignatureField::PdfSignatureField",2,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfSignatureField::PdfSignatureField",3,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("new_PdfSignatureField",1,SWIGTYPE_p_PoDoFo__PdfPage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("new_PdfSignatureField",2,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfSignatureField",3,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfSignatureField *)new PoDoFo::PdfSignatureField(arg1,(PoDoFo::PdfRect const &)*arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfSignatureField,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfSignatureField__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfAnnotation *arg1 = (PoDoFo::PdfAnnotation *) 0 ;
  PoDoFo::PdfAcroForm *arg2 = (PoDoFo::PdfAcroForm *) 0 ;
  PoDoFo::PdfDocument *arg3 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfSignatureField *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSignatureField::PdfSignatureField",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignatureField::PdfSignatureField",1,"PoDoFo::PdfAnnotation *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfSignatureField::PdfSignatureField",2,"PoDoFo::PdfAcroForm *");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfSignatureField::PdfSignatureField",3,"PoDoFo::PdfDocument *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfAnnotation,0))){
    SWIG_fail_ptr("new_PdfSignatureField",1,SWIGTYPE_p_PoDoFo__PdfAnnotation);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfAcroForm,0))){
    SWIG_fail_ptr("new_PdfSignatureField",2,SWIGTYPE_p_PoDoFo__PdfAcroForm);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfSignatureField",3,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfSignatureField *)new PoDoFo::PdfSignatureField(arg1,arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfSignatureField,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfSignatureField(lua_State* L) {
  int argc;
  int argv[4]={
    1,2,3,4
  };
  
  argc = lua_gettop(L);
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPage, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (lua_isuserdata(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfSignatureField__SWIG_0(L);
        }
      }
    }
  }
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAnnotation, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        void *ptr;
        if (SWIG_isptrtype(L,argv[1])==0 || SWIG_ConvertPtr(L,argv[1], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfAcroForm, 0)) {
          _v = 0;
        } else {
          _v = 1;
        }
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_new_PdfSignatureField__SWIG_1(L);
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfSignatureField'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfSignatureField::PdfSignatureField(PoDoFo::PdfPage *,PoDoFo::PdfRect const &,PoDoFo::PdfDocument *)\n"
    "    PoDoFo::PdfSignatureField::PdfSignatureField(PoDoFo::PdfAnnotation *,PoDoFo::PdfAcroForm *,PoDoFo::PdfDocument *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfSignatureField_SetAppearanceStream(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSignatureField *arg1 = (PoDoFo::PdfSignatureField *) 0 ;
  PoDoFo::PdfXObject *arg2 = (PoDoFo::PdfXObject *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSignatureField::SetAppearanceStream",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignatureField::SetAppearanceStream",1,"PoDoFo::PdfSignatureField *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfSignatureField::SetAppearanceStream",2,"PoDoFo::PdfXObject *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSignatureField,0))){
    SWIG_fail_ptr("PdfSignatureField_SetAppearanceStream",1,SWIGTYPE_p_PoDoFo__PdfSignatureField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfXObject,0))){
    SWIG_fail_ptr("PdfSignatureField_SetAppearanceStream",2,SWIGTYPE_p_PoDoFo__PdfXObject);
  }
  
  {
    try {
      (arg1)->SetAppearanceStream(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSignatureField_SetSignature(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSignatureField *arg1 = (PoDoFo::PdfSignatureField *) 0 ;
  PdfData *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSignatureField::SetSignature",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignatureField::SetSignature",1,"PoDoFo::PdfSignatureField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfSignatureField::SetSignature",2,"PdfData const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSignatureField,0))){
    SWIG_fail_ptr("PdfSignatureField_SetSignature",1,SWIGTYPE_p_PoDoFo__PdfSignatureField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PdfData,0))){
    SWIG_fail_ptr("PdfSignatureField_SetSignature",2,SWIGTYPE_p_PdfData);
  }
  
  {
    try {
      (arg1)->SetSignature((PdfData const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSignatureField_SetSignatureReason(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSignatureField *arg1 = (PoDoFo::PdfSignatureField *) 0 ;
  PoDoFo::PdfString *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSignatureField::SetSignatureReason",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignatureField::SetSignatureReason",1,"PoDoFo::PdfSignatureField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfSignatureField::SetSignatureReason",2,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSignatureField,0))){
    SWIG_fail_ptr("PdfSignatureField_SetSignatureReason",1,SWIGTYPE_p_PoDoFo__PdfSignatureField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfSignatureField_SetSignatureReason",2,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetSignatureReason((PoDoFo::PdfString const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSignatureField_SetSignatureDate(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSignatureField *arg1 = (PoDoFo::PdfSignatureField *) 0 ;
  PdfDate *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSignatureField::SetSignatureDate",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSignatureField::SetSignatureDate",1,"PoDoFo::PdfSignatureField *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfSignatureField::SetSignatureDate",2,"PdfDate const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSignatureField,0))){
    SWIG_fail_ptr("PdfSignatureField_SetSignatureDate",1,SWIGTYPE_p_PoDoFo__PdfSignatureField);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PdfDate,0))){
    SWIG_fail_ptr("PdfSignatureField_SetSignatureDate",2,SWIGTYPE_p_PdfDate);
  }
  
  {
    try {
      (arg1)->SetSignatureDate((PdfDate const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfSignatureField(void *obj) {
PoDoFo::PdfSignatureField *arg1 = (PoDoFo::PdfSignatureField *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfSignatureField(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfSignatureField);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfSignatureField_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfSignatureField_methods[]= {
    { "SetAppearanceStream", _wrap_PdfSignatureField_SetAppearanceStream},
    { "SetSignature", _wrap_PdfSignatureField_SetSignature},
    { "SetSignatureReason", _wrap_PdfSignatureField_SetSignatureReason},
    { "SetSignatureDate", _wrap_PdfSignatureField_SetSignatureDate},
    {0,0}
};
static swig_lua_method swig_PdfSignatureField_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfSignatureField_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfSignatureField_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfSignatureField_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfSignatureField_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfSignatureField_Sf_SwigStatic = {
    "PdfSignatureField",
    swig_PdfSignatureField_Sf_SwigStatic_methods,
    swig_PdfSignatureField_Sf_SwigStatic_attributes,
    swig_PdfSignatureField_Sf_SwigStatic_constants,
    swig_PdfSignatureField_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfSignatureField_bases[] = {0,0};
static const char *swig_PdfSignatureField_base_names[] = {"PoDoFo::PdfField *",0};
static swig_lua_class _wrap_class_PdfSignatureField = { "PdfSignatureField", "PdfSignatureField", &SWIGTYPE_p_PoDoFo__PdfSignatureField,_proxy__wrap_new_PdfSignatureField, swig_delete_PdfSignatureField, swig_PdfSignatureField_methods, swig_PdfSignatureField_attributes, &swig_PdfSignatureField_Sf_SwigStatic, swig_PdfSignatureField_meta, swig_PdfSignatureField_bases, swig_PdfSignatureField_base_names };

static int _wrap_PdfTableModel_GetText(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTableModel *arg1 = (PoDoFo::PdfTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfTableModel::GetText",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetText",1,"PoDoFo::PdfTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetText",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetText",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTableModel,0))){
    SWIG_fail_ptr("PdfTableModel_GetText",1,SWIGTYPE_p_PoDoFo__PdfTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = ((PoDoFo::PdfTableModel const *)arg1)->GetText(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTableModel_GetAlignment(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTableModel *arg1 = (PoDoFo::PdfTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  PoDoFo::EPdfAlignment result;
  
  SWIG_check_num_args("PoDoFo::PdfTableModel::GetAlignment",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetAlignment",1,"PoDoFo::PdfTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetAlignment",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetAlignment",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTableModel,0))){
    SWIG_fail_ptr("PdfTableModel_GetAlignment",1,SWIGTYPE_p_PoDoFo__PdfTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = (PoDoFo::EPdfAlignment)((PoDoFo::PdfTableModel const *)arg1)->GetAlignment(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTableModel_GetVerticalAlignment(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTableModel *arg1 = (PoDoFo::PdfTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  PoDoFo::EPdfVerticalAlignment result;
  
  SWIG_check_num_args("PoDoFo::PdfTableModel::GetVerticalAlignment",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetVerticalAlignment",1,"PoDoFo::PdfTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetVerticalAlignment",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetVerticalAlignment",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTableModel,0))){
    SWIG_fail_ptr("PdfTableModel_GetVerticalAlignment",1,SWIGTYPE_p_PoDoFo__PdfTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = (PoDoFo::EPdfVerticalAlignment)((PoDoFo::PdfTableModel const *)arg1)->GetVerticalAlignment(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTableModel_GetFont(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTableModel *arg1 = (PoDoFo::PdfTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTableModel::GetFont",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetFont",1,"PoDoFo::PdfTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetFont",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetFont",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTableModel,0))){
    SWIG_fail_ptr("PdfTableModel_GetFont",1,SWIGTYPE_p_PoDoFo__PdfTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = (PoDoFo::PdfFont *)((PoDoFo::PdfTableModel const *)arg1)->GetFont(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTableModel_HasBackgroundColor(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTableModel *arg1 = (PoDoFo::PdfTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfTableModel::HasBackgroundColor",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTableModel::HasBackgroundColor",1,"PoDoFo::PdfTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTableModel::HasBackgroundColor",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTableModel::HasBackgroundColor",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTableModel,0))){
    SWIG_fail_ptr("PdfTableModel_HasBackgroundColor",1,SWIGTYPE_p_PoDoFo__PdfTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = (bool)((PoDoFo::PdfTableModel const *)arg1)->HasBackgroundColor(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTableModel_GetBackgroundColor(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTableModel *arg1 = (PoDoFo::PdfTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  PoDoFo::PdfColor result;
  
  SWIG_check_num_args("PoDoFo::PdfTableModel::GetBackgroundColor",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetBackgroundColor",1,"PoDoFo::PdfTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetBackgroundColor",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetBackgroundColor",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTableModel,0))){
    SWIG_fail_ptr("PdfTableModel_GetBackgroundColor",1,SWIGTYPE_p_PoDoFo__PdfTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = ((PoDoFo::PdfTableModel const *)arg1)->GetBackgroundColor(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfColor * resultptr = new PoDoFo::PdfColor((const PoDoFo::PdfColor &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfColor,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTableModel_GetForegroundColor(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTableModel *arg1 = (PoDoFo::PdfTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  PoDoFo::PdfColor result;
  
  SWIG_check_num_args("PoDoFo::PdfTableModel::GetForegroundColor",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetForegroundColor",1,"PoDoFo::PdfTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetForegroundColor",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetForegroundColor",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTableModel,0))){
    SWIG_fail_ptr("PdfTableModel_GetForegroundColor",1,SWIGTYPE_p_PoDoFo__PdfTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = ((PoDoFo::PdfTableModel const *)arg1)->GetForegroundColor(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfColor * resultptr = new PoDoFo::PdfColor((const PoDoFo::PdfColor &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfColor,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTableModel_HasWordWrap(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTableModel *arg1 = (PoDoFo::PdfTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfTableModel::HasWordWrap",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTableModel::HasWordWrap",1,"PoDoFo::PdfTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTableModel::HasWordWrap",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTableModel::HasWordWrap",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTableModel,0))){
    SWIG_fail_ptr("PdfTableModel_HasWordWrap",1,SWIGTYPE_p_PoDoFo__PdfTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = (bool)((PoDoFo::PdfTableModel const *)arg1)->HasWordWrap(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTableModel_HasBorders(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTableModel *arg1 = (PoDoFo::PdfTableModel *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfTableModel::HasBorders",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTableModel::HasBorders",1,"PoDoFo::PdfTableModel const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTableModel,0))){
    SWIG_fail_ptr("PdfTableModel_HasBorders",1,SWIGTYPE_p_PoDoFo__PdfTableModel);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfTableModel const *)arg1)->HasBorders();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTableModel_GetBorderWidth(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTableModel *arg1 = (PoDoFo::PdfTableModel *) 0 ;
  double result;
  
  SWIG_check_num_args("PoDoFo::PdfTableModel::GetBorderWidth",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetBorderWidth",1,"PoDoFo::PdfTableModel const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTableModel,0))){
    SWIG_fail_ptr("PdfTableModel_GetBorderWidth",1,SWIGTYPE_p_PoDoFo__PdfTableModel);
  }
  
  {
    try {
      result = (double)((PoDoFo::PdfTableModel const *)arg1)->GetBorderWidth();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTableModel_GetBorderColor(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTableModel *arg1 = (PoDoFo::PdfTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  PoDoFo::PdfColor result;
  
  SWIG_check_num_args("PoDoFo::PdfTableModel::GetBorderColor",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetBorderColor",1,"PoDoFo::PdfTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetBorderColor",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetBorderColor",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTableModel,0))){
    SWIG_fail_ptr("PdfTableModel_GetBorderColor",1,SWIGTYPE_p_PoDoFo__PdfTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = ((PoDoFo::PdfTableModel const *)arg1)->GetBorderColor(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfColor * resultptr = new PoDoFo::PdfColor((const PoDoFo::PdfColor &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfColor,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTableModel_HasImage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTableModel *arg1 = (PoDoFo::PdfTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfTableModel::HasImage",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTableModel::HasImage",1,"PoDoFo::PdfTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTableModel::HasImage",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTableModel::HasImage",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTableModel,0))){
    SWIG_fail_ptr("PdfTableModel_HasImage",1,SWIGTYPE_p_PoDoFo__PdfTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = (bool)((PoDoFo::PdfTableModel const *)arg1)->HasImage(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTableModel_GetImage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTableModel *arg1 = (PoDoFo::PdfTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  PoDoFo::PdfImage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTableModel::GetImage",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetImage",1,"PoDoFo::PdfTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetImage",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTableModel::GetImage",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTableModel,0))){
    SWIG_fail_ptr("PdfTableModel_GetImage",1,SWIGTYPE_p_PoDoFo__PdfTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = (PoDoFo::PdfImage *)((PoDoFo::PdfTableModel const *)arg1)->GetImage(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfImage,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfTableModel(void *obj) {
PoDoFo::PdfTableModel *arg1 = (PoDoFo::PdfTableModel *) obj;
delete arg1;
}
static swig_lua_attribute swig_PdfTableModel_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfTableModel_methods[]= {
    { "GetText", _wrap_PdfTableModel_GetText},
    { "GetAlignment", _wrap_PdfTableModel_GetAlignment},
    { "GetVerticalAlignment", _wrap_PdfTableModel_GetVerticalAlignment},
    { "GetFont", _wrap_PdfTableModel_GetFont},
    { "HasBackgroundColor", _wrap_PdfTableModel_HasBackgroundColor},
    { "GetBackgroundColor", _wrap_PdfTableModel_GetBackgroundColor},
    { "GetForegroundColor", _wrap_PdfTableModel_GetForegroundColor},
    { "HasWordWrap", _wrap_PdfTableModel_HasWordWrap},
    { "HasBorders", _wrap_PdfTableModel_HasBorders},
    { "GetBorderWidth", _wrap_PdfTableModel_GetBorderWidth},
    { "GetBorderColor", _wrap_PdfTableModel_GetBorderColor},
    { "HasImage", _wrap_PdfTableModel_HasImage},
    { "GetImage", _wrap_PdfTableModel_GetImage},
    {0,0}
};
static swig_lua_method swig_PdfTableModel_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfTableModel_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfTableModel_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfTableModel_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfTableModel_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfTableModel_Sf_SwigStatic = {
    "PdfTableModel",
    swig_PdfTableModel_Sf_SwigStatic_methods,
    swig_PdfTableModel_Sf_SwigStatic_attributes,
    swig_PdfTableModel_Sf_SwigStatic_constants,
    swig_PdfTableModel_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfTableModel_bases[] = {0};
static const char *swig_PdfTableModel_base_names[] = {0};
static swig_lua_class _wrap_class_PdfTableModel = { "PdfTableModel", "PdfTableModel", &SWIGTYPE_p_PoDoFo__PdfTableModel,0, swig_delete_PdfTableModel, swig_PdfTableModel_methods, swig_PdfTableModel_attributes, &swig_PdfTableModel_Sf_SwigStatic, swig_PdfTableModel_meta, swig_PdfTableModel_bases, swig_PdfTableModel_base_names };

static int _wrap_new_PdfSimpleTableModel__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::PdfSimpleTableModel",0,0)
  {
    try {
      result = (PoDoFo::PdfSimpleTableModel *)new PoDoFo::PdfSimpleTableModel();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfSimpleTableModel__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  int arg1 ;
  int arg2 ;
  PoDoFo::PdfSimpleTableModel *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::PdfSimpleTableModel",2,2)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::PdfSimpleTableModel",1,"int");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::PdfSimpleTableModel",2,"int");
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = (PoDoFo::PdfSimpleTableModel *)new PoDoFo::PdfSimpleTableModel(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfSimpleTableModel(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 0) {
    return _wrap_new_PdfSimpleTableModel__SWIG_0(L);
  }
  if (argc == 2) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_new_PdfSimpleTableModel__SWIG_1(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfSimpleTableModel'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfSimpleTableModel::PdfSimpleTableModel()\n"
    "    PoDoFo::PdfSimpleTableModel::PdfSimpleTableModel(int,int)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfSimpleTableModel_SetFont(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  PoDoFo::PdfFont *arg2 = (PoDoFo::PdfFont *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::SetFont",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetFont",1,"PoDoFo::PdfSimpleTableModel *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetFont",2,"PoDoFo::PdfFont *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_SetFont",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfFont,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_SetFont",2,SWIGTYPE_p_PoDoFo__PdfFont);
  }
  
  {
    try {
      (arg1)->SetFont(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_SetAlignment__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  PoDoFo::EPdfAlignment arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::SetAlignment",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetAlignment",1,"PoDoFo::PdfSimpleTableModel *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetAlignment",2,"PoDoFo::EPdfAlignment");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_SetAlignment",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  arg2 = (PoDoFo::EPdfAlignment)(int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetAlignment(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_SetAlignment__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  PoDoFo::EPdfVerticalAlignment arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::SetAlignment",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetAlignment",1,"PoDoFo::PdfSimpleTableModel *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetAlignment",2,"PoDoFo::EPdfVerticalAlignment");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_SetAlignment",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  arg2 = (PoDoFo::EPdfVerticalAlignment)(int)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetAlignment(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_SetAlignment(lua_State* L) {
  int argc;
  int argv[3]={
    1,2,3
  };
  
  argc = lua_gettop(L);
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfSimpleTableModel, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfSimpleTableModel_SetAlignment__SWIG_0(L);
      }
    }
  }
  if (argc == 2) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfSimpleTableModel, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        return _wrap_PdfSimpleTableModel_SetAlignment__SWIG_1(L);
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfSimpleTableModel_SetAlignment'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfSimpleTableModel::SetAlignment(PoDoFo::EPdfAlignment)\n"
    "    PoDoFo::PdfSimpleTableModel::SetAlignment(PoDoFo::EPdfVerticalAlignment)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfSimpleTableModel_SetBackgroundColor(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  PoDoFo::PdfColor *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::SetBackgroundColor",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetBackgroundColor",1,"PoDoFo::PdfSimpleTableModel *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetBackgroundColor",2,"PoDoFo::PdfColor const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_SetBackgroundColor",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_SetBackgroundColor",2,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  {
    try {
      (arg1)->SetBackgroundColor((PoDoFo::PdfColor const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_SetForegroundColor(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  PoDoFo::PdfColor *arg2 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::SetForegroundColor",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetForegroundColor",1,"PoDoFo::PdfSimpleTableModel *");
  if(!lua_isuserdata(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetForegroundColor",2,"PoDoFo::PdfColor const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_SetForegroundColor",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfColor,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_SetForegroundColor",2,SWIGTYPE_p_PoDoFo__PdfColor);
  }
  
  {
    try {
      (arg1)->SetForegroundColor((PoDoFo::PdfColor const &)*arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_SetBackgroundEnabled(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::SetBackgroundEnabled",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetBackgroundEnabled",1,"PoDoFo::PdfSimpleTableModel *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetBackgroundEnabled",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_SetBackgroundEnabled",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetBackgroundEnabled(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_SetWordWrapEnabled(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::SetWordWrapEnabled",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetWordWrapEnabled",1,"PoDoFo::PdfSimpleTableModel *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetWordWrapEnabled",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_SetWordWrapEnabled",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetWordWrapEnabled(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_SetBorderEnabled(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  bool arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::SetBorderEnabled",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetBorderEnabled",1,"PoDoFo::PdfSimpleTableModel *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetBorderEnabled",2,"bool");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_SetBorderEnabled",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  {
    try {
      (arg1)->SetBorderEnabled(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_SetBorderWidth(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::SetBorderWidth",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetBorderWidth",1,"PoDoFo::PdfSimpleTableModel *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetBorderWidth",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_SetBorderWidth",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetBorderWidth(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_SetText(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  PoDoFo::PdfString *arg4 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::SetText",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetText",1,"PoDoFo::PdfSimpleTableModel *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetText",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetText",3,"int");
  if(!lua_isuserdata(L,4)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::SetText",4,"PoDoFo::PdfString const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_SetText",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfString,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_SetText",4,SWIGTYPE_p_PoDoFo__PdfString);
  }
  
  {
    try {
      (arg1)->SetText(arg2,arg3,(PoDoFo::PdfString const &)*arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_GetText(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  PoDoFo::PdfString result;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::GetText",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetText",1,"PoDoFo::PdfSimpleTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetText",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetText",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_GetText",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = ((PoDoFo::PdfSimpleTableModel const *)arg1)->GetText(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfString * resultptr = new PoDoFo::PdfString((const PoDoFo::PdfString &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfString,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_GetAlignment(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  PoDoFo::EPdfAlignment result;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::GetAlignment",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetAlignment",1,"PoDoFo::PdfSimpleTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetAlignment",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetAlignment",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_GetAlignment",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = (PoDoFo::EPdfAlignment)((PoDoFo::PdfSimpleTableModel const *)arg1)->GetAlignment(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_GetVerticalAlignment(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  PoDoFo::EPdfVerticalAlignment result;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::GetVerticalAlignment",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetVerticalAlignment",1,"PoDoFo::PdfSimpleTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetVerticalAlignment",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetVerticalAlignment",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_GetVerticalAlignment",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = (PoDoFo::EPdfVerticalAlignment)((PoDoFo::PdfSimpleTableModel const *)arg1)->GetVerticalAlignment(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number)(int)(result)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_GetFont(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  PoDoFo::PdfFont *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::GetFont",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetFont",1,"PoDoFo::PdfSimpleTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetFont",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetFont",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_GetFont",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = (PoDoFo::PdfFont *)((PoDoFo::PdfSimpleTableModel const *)arg1)->GetFont(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfFont,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_HasBackgroundColor(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::HasBackgroundColor",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::HasBackgroundColor",1,"PoDoFo::PdfSimpleTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::HasBackgroundColor",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::HasBackgroundColor",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_HasBackgroundColor",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = (bool)((PoDoFo::PdfSimpleTableModel const *)arg1)->HasBackgroundColor(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_GetBackgroundColor(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  PoDoFo::PdfColor result;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::GetBackgroundColor",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetBackgroundColor",1,"PoDoFo::PdfSimpleTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetBackgroundColor",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetBackgroundColor",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_GetBackgroundColor",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = ((PoDoFo::PdfSimpleTableModel const *)arg1)->GetBackgroundColor(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfColor * resultptr = new PoDoFo::PdfColor((const PoDoFo::PdfColor &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfColor,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_GetForegroundColor(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  PoDoFo::PdfColor result;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::GetForegroundColor",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetForegroundColor",1,"PoDoFo::PdfSimpleTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetForegroundColor",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetForegroundColor",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_GetForegroundColor",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = ((PoDoFo::PdfSimpleTableModel const *)arg1)->GetForegroundColor(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfColor * resultptr = new PoDoFo::PdfColor((const PoDoFo::PdfColor &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfColor,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_HasWordWrap(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::HasWordWrap",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::HasWordWrap",1,"PoDoFo::PdfSimpleTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::HasWordWrap",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::HasWordWrap",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_HasWordWrap",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = (bool)((PoDoFo::PdfSimpleTableModel const *)arg1)->HasWordWrap(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_HasBorders(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::HasBorders",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::HasBorders",1,"PoDoFo::PdfSimpleTableModel const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_HasBorders",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfSimpleTableModel const *)arg1)->HasBorders();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_GetBorderWidth(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  double result;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::GetBorderWidth",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetBorderWidth",1,"PoDoFo::PdfSimpleTableModel const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_GetBorderWidth",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  {
    try {
      result = (double)((PoDoFo::PdfSimpleTableModel const *)arg1)->GetBorderWidth();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_GetBorderColor(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  PoDoFo::PdfColor result;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::GetBorderColor",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetBorderColor",1,"PoDoFo::PdfSimpleTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetBorderColor",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetBorderColor",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_GetBorderColor",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = ((PoDoFo::PdfSimpleTableModel const *)arg1)->GetBorderColor(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  {
    PoDoFo::PdfColor * resultptr = new PoDoFo::PdfColor((const PoDoFo::PdfColor &) result);
    SWIG_NewPointerObj(L,(void *) resultptr,SWIGTYPE_p_PoDoFo__PdfColor,1); SWIG_arg++;
  }
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_HasImage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::HasImage",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::HasImage",1,"PoDoFo::PdfSimpleTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::HasImage",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::HasImage",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_HasImage",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = (bool)((PoDoFo::PdfSimpleTableModel const *)arg1)->HasImage(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfSimpleTableModel_GetImage(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) 0 ;
  int arg2 ;
  int arg3 ;
  PoDoFo::PdfImage *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfSimpleTableModel::GetImage",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetImage",1,"PoDoFo::PdfSimpleTableModel const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetImage",2,"int");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfSimpleTableModel::GetImage",3,"int");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,0))){
    SWIG_fail_ptr("PdfSimpleTableModel_GetImage",1,SWIGTYPE_p_PoDoFo__PdfSimpleTableModel);
  }
  
  arg2 = (int)lua_tonumber(L, 2);
  arg3 = (int)lua_tonumber(L, 3);
  {
    try {
      result = (PoDoFo::PdfImage *)((PoDoFo::PdfSimpleTableModel const *)arg1)->GetImage(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfImage,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfSimpleTableModel(void *obj) {
PoDoFo::PdfSimpleTableModel *arg1 = (PoDoFo::PdfSimpleTableModel *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfSimpleTableModel(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfSimpleTableModel);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfSimpleTableModel_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfSimpleTableModel_methods[]= {
    { "SetFont", _wrap_PdfSimpleTableModel_SetFont},
    { "SetAlignment", _wrap_PdfSimpleTableModel_SetAlignment},
    { "SetBackgroundColor", _wrap_PdfSimpleTableModel_SetBackgroundColor},
    { "SetForegroundColor", _wrap_PdfSimpleTableModel_SetForegroundColor},
    { "SetBackgroundEnabled", _wrap_PdfSimpleTableModel_SetBackgroundEnabled},
    { "SetWordWrapEnabled", _wrap_PdfSimpleTableModel_SetWordWrapEnabled},
    { "SetBorderEnabled", _wrap_PdfSimpleTableModel_SetBorderEnabled},
    { "SetBorderWidth", _wrap_PdfSimpleTableModel_SetBorderWidth},
    { "SetText", _wrap_PdfSimpleTableModel_SetText},
    { "GetText", _wrap_PdfSimpleTableModel_GetText},
    { "GetAlignment", _wrap_PdfSimpleTableModel_GetAlignment},
    { "GetVerticalAlignment", _wrap_PdfSimpleTableModel_GetVerticalAlignment},
    { "GetFont", _wrap_PdfSimpleTableModel_GetFont},
    { "HasBackgroundColor", _wrap_PdfSimpleTableModel_HasBackgroundColor},
    { "GetBackgroundColor", _wrap_PdfSimpleTableModel_GetBackgroundColor},
    { "GetForegroundColor", _wrap_PdfSimpleTableModel_GetForegroundColor},
    { "HasWordWrap", _wrap_PdfSimpleTableModel_HasWordWrap},
    { "HasBorders", _wrap_PdfSimpleTableModel_HasBorders},
    { "GetBorderWidth", _wrap_PdfSimpleTableModel_GetBorderWidth},
    { "GetBorderColor", _wrap_PdfSimpleTableModel_GetBorderColor},
    { "HasImage", _wrap_PdfSimpleTableModel_HasImage},
    { "GetImage", _wrap_PdfSimpleTableModel_GetImage},
    {0,0}
};
static swig_lua_method swig_PdfSimpleTableModel_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfSimpleTableModel_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfSimpleTableModel_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfSimpleTableModel_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfSimpleTableModel_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfSimpleTableModel_Sf_SwigStatic = {
    "PdfSimpleTableModel",
    swig_PdfSimpleTableModel_Sf_SwigStatic_methods,
    swig_PdfSimpleTableModel_Sf_SwigStatic_attributes,
    swig_PdfSimpleTableModel_Sf_SwigStatic_constants,
    swig_PdfSimpleTableModel_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfSimpleTableModel_bases[] = {0,0};
static const char *swig_PdfSimpleTableModel_base_names[] = {"PoDoFo::PdfTableModel *",0};
static swig_lua_class _wrap_class_PdfSimpleTableModel = { "PdfSimpleTableModel", "PdfSimpleTableModel", &SWIGTYPE_p_PoDoFo__PdfSimpleTableModel,_proxy__wrap_new_PdfSimpleTableModel, swig_delete_PdfSimpleTableModel, swig_PdfSimpleTableModel_methods, swig_PdfSimpleTableModel_attributes, &swig_PdfSimpleTableModel_Sf_SwigStatic, swig_PdfSimpleTableModel_meta, swig_PdfSimpleTableModel_bases, swig_PdfSimpleTableModel_base_names };

static int _wrap_new_PdfTable(lua_State* L) {
  int SWIG_arg = 0;
  int arg1 ;
  int arg2 ;
  PoDoFo::PdfTable *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTable::PdfTable",2,2)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::PdfTable",1,"int");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTable::PdfTable",2,"int");
  arg1 = (int)lua_tonumber(L, 1);
  arg2 = (int)lua_tonumber(L, 2);
  {
    try {
      result = (PoDoFo::PdfTable *)new PoDoFo::PdfTable(arg1,arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfTable,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_Draw__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  double arg2 ;
  double arg3 ;
  PoDoFo::PdfPainter *arg4 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfRect *arg5 = 0 ;
  double *arg6 = (double *) 0 ;
  double *arg7 = (double *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTable::Draw",7,7)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",1,"PoDoFo::PdfTable *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",3,"double");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",4,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,5)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",5,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,6)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",6,"double *");
  if(!SWIG_isptrtype(L,7)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",7,"double *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_Draw",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfTable_Draw",4,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&arg5,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfTable_Draw",5,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_double,0))){
    SWIG_fail_ptr("PdfTable_Draw",6,SWIGTYPE_p_double);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,7,(void**)&arg7,SWIGTYPE_p_double,0))){
    SWIG_fail_ptr("PdfTable_Draw",7,SWIGTYPE_p_double);
  }
  
  {
    try {
      (arg1)->Draw(arg2,arg3,arg4,(PoDoFo::PdfRect const &)*arg5,arg6,arg7);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_Draw__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  double arg2 ;
  double arg3 ;
  PoDoFo::PdfPainter *arg4 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfRect *arg5 = 0 ;
  double *arg6 = (double *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTable::Draw",6,6)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",1,"PoDoFo::PdfTable *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",3,"double");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",4,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,5)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",5,"PoDoFo::PdfRect const &");
  if(!SWIG_isptrtype(L,6)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",6,"double *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_Draw",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfTable_Draw",4,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&arg5,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfTable_Draw",5,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,6,(void**)&arg6,SWIGTYPE_p_double,0))){
    SWIG_fail_ptr("PdfTable_Draw",6,SWIGTYPE_p_double);
  }
  
  {
    try {
      (arg1)->Draw(arg2,arg3,arg4,(PoDoFo::PdfRect const &)*arg5,arg6);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_Draw__SWIG_2(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  double arg2 ;
  double arg3 ;
  PoDoFo::PdfPainter *arg4 = (PoDoFo::PdfPainter *) 0 ;
  PoDoFo::PdfRect *arg5 = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTable::Draw",5,5)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",1,"PoDoFo::PdfTable *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",3,"double");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",4,"PoDoFo::PdfPainter *");
  if(!lua_isuserdata(L,5)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",5,"PoDoFo::PdfRect const &");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_Draw",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfTable_Draw",4,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,5,(void**)&arg5,SWIGTYPE_p_PoDoFo__PdfRect,0))){
    SWIG_fail_ptr("PdfTable_Draw",5,SWIGTYPE_p_PoDoFo__PdfRect);
  }
  
  {
    try {
      (arg1)->Draw(arg2,arg3,arg4,(PoDoFo::PdfRect const &)*arg5);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_Draw__SWIG_3(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  double arg2 ;
  double arg3 ;
  PoDoFo::PdfPainter *arg4 = (PoDoFo::PdfPainter *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTable::Draw",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",1,"PoDoFo::PdfTable *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",3,"double");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfTable::Draw",4,"PoDoFo::PdfPainter *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_Draw",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfPainter,0))){
    SWIG_fail_ptr("PdfTable_Draw",4,SWIGTYPE_p_PoDoFo__PdfPainter);
  }
  
  {
    try {
      (arg1)->Draw(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_Draw(lua_State* L) {
  int argc;
  int argv[8]={
    1,2,3,4,5,6,7,8
  };
  
  argc = lua_gettop(L);
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfTable, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_PdfTable_Draw__SWIG_3(L);
          }
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfTable, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              void *ptr;
              if (lua_isuserdata(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              return _wrap_PdfTable_Draw__SWIG_2(L);
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfTable, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              void *ptr;
              if (lua_isuserdata(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              {
                void *ptr;
                if (SWIG_isptrtype(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_double, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                return _wrap_PdfTable_Draw__SWIG_1(L);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 7) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfTable, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfPainter, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            {
              void *ptr;
              if (lua_isuserdata(L,argv[4])==0 || SWIG_ConvertPtr(L,argv[4], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfRect, 0)) {
                _v = 0;
              } else {
                _v = 1;
              }
            }
            if (_v) {
              {
                void *ptr;
                if (SWIG_isptrtype(L,argv[5])==0 || SWIG_ConvertPtr(L,argv[5], (void **) &ptr, SWIGTYPE_p_double, 0)) {
                  _v = 0;
                } else {
                  _v = 1;
                }
              }
              if (_v) {
                {
                  void *ptr;
                  if (SWIG_isptrtype(L,argv[6])==0 || SWIG_ConvertPtr(L,argv[6], (void **) &ptr, SWIGTYPE_p_double, 0)) {
                    _v = 0;
                  } else {
                    _v = 1;
                  }
                }
                if (_v) {
                  return _wrap_PdfTable_Draw__SWIG_0(L);
                }
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfTable_Draw'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfTable::Draw(double,double,PoDoFo::PdfPainter *,PoDoFo::PdfRect const &,double *,double *)\n"
    "    PoDoFo::PdfTable::Draw(double,double,PoDoFo::PdfPainter *,PoDoFo::PdfRect const &,double *)\n"
    "    PoDoFo::PdfTable::Draw(double,double,PoDoFo::PdfPainter *,PoDoFo::PdfRect const &)\n"
    "    PoDoFo::PdfTable::Draw(double,double,PoDoFo::PdfPainter *)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfTable_GetWidth(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  double arg2 ;
  double arg3 ;
  PoDoFo::PdfCanvas *arg4 = (PoDoFo::PdfCanvas *) 0 ;
  double result;
  
  SWIG_check_num_args("PoDoFo::PdfTable::GetWidth",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::GetWidth",1,"PoDoFo::PdfTable const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTable::GetWidth",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTable::GetWidth",3,"double");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfTable::GetWidth",4,"PoDoFo::PdfCanvas *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_GetWidth",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfCanvas,0))){
    SWIG_fail_ptr("PdfTable_GetWidth",4,SWIGTYPE_p_PoDoFo__PdfCanvas);
  }
  
  {
    try {
      result = (double)((PoDoFo::PdfTable const *)arg1)->GetWidth(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_GetHeight(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  double arg2 ;
  double arg3 ;
  PoDoFo::PdfCanvas *arg4 = (PoDoFo::PdfCanvas *) 0 ;
  double result;
  
  SWIG_check_num_args("PoDoFo::PdfTable::GetHeight",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::GetHeight",1,"PoDoFo::PdfTable const *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTable::GetHeight",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTable::GetHeight",3,"double");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfTable::GetHeight",4,"PoDoFo::PdfCanvas *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_GetHeight",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,4,(void**)&arg4,SWIGTYPE_p_PoDoFo__PdfCanvas,0))){
    SWIG_fail_ptr("PdfTable_GetHeight",4,SWIGTYPE_p_PoDoFo__PdfCanvas);
  }
  
  {
    try {
      result = (double)((PoDoFo::PdfTable const *)arg1)->GetHeight(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_SetModel(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  PoDoFo::PdfTableModel *arg2 = (PoDoFo::PdfTableModel *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTable::SetModel",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::SetModel",1,"PoDoFo::PdfTable *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfTable::SetModel",2,"PoDoFo::PdfTableModel *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_SetModel",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_PoDoFo__PdfTableModel,0))){
    SWIG_fail_ptr("PdfTable_SetModel",2,SWIGTYPE_p_PoDoFo__PdfTableModel);
  }
  
  {
    try {
      (arg1)->SetModel(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_GetModel(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  PoDoFo::PdfTableModel *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTable::GetModel",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::GetModel",1,"PoDoFo::PdfTable const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_GetModel",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  {
    try {
      result = (PoDoFo::PdfTableModel *)((PoDoFo::PdfTable const *)arg1)->GetModel();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfTableModel,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_SetColumnWidths(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  double *arg2 = (double *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTable::SetColumnWidths",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::SetColumnWidths",1,"PoDoFo::PdfTable *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfTable::SetColumnWidths",2,"double *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_SetColumnWidths",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_double,0))){
    SWIG_fail_ptr("PdfTable_SetColumnWidths",2,SWIGTYPE_p_double);
  }
  
  {
    try {
      (arg1)->SetColumnWidths(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_SetRowHeights(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  double *arg2 = (double *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTable::SetRowHeights",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::SetRowHeights",1,"PoDoFo::PdfTable *");
  if(!SWIG_isptrtype(L,2)) SWIG_fail_arg("PoDoFo::PdfTable::SetRowHeights",2,"double *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_SetRowHeights",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,2,(void**)&arg2,SWIGTYPE_p_double,0))){
    SWIG_fail_ptr("PdfTable_SetRowHeights",2,SWIGTYPE_p_double);
  }
  
  {
    try {
      (arg1)->SetRowHeights(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_SetColumnWidth(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfTable::SetColumnWidth",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::SetColumnWidth",1,"PoDoFo::PdfTable *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTable::SetColumnWidth",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_SetColumnWidth",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetColumnWidth(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_SetRowHeight(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfTable::SetRowHeight",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::SetRowHeight",1,"PoDoFo::PdfTable *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTable::SetRowHeight",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_SetRowHeight",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetRowHeight(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_SetTableWidth(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfTable::SetTableWidth",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::SetTableWidth",1,"PoDoFo::PdfTable *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTable::SetTableWidth",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_SetTableWidth",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetTableWidth(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_SetTableHeight(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  double arg2 ;
  
  SWIG_check_num_args("PoDoFo::PdfTable::SetTableHeight",2,2)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::SetTableHeight",1,"PoDoFo::PdfTable *");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTable::SetTableHeight",2,"double");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_SetTableHeight",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  arg2 = (double)lua_tonumber(L, 2);
  {
    try {
      (arg1)->SetTableHeight(arg2);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_SetAutoPageBreak__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  bool arg2 ;
  PoDoFo::PdfTable::CreatePageCallback arg3 = (PoDoFo::PdfTable::CreatePageCallback) 0 ;
  void *arg4 = (void *) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTable::SetAutoPageBreak",4,4)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::SetAutoPageBreak",1,"PoDoFo::PdfTable *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfTable::SetAutoPageBreak",2,"bool");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfTable::SetAutoPageBreak",3,"PoDoFo::PdfTable::CreatePageCallback");
  if(!SWIG_isptrtype(L,4)) SWIG_fail_arg("PoDoFo::PdfTable::SetAutoPageBreak",4,"void *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_SetAutoPageBreak",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_f_r_PoDoFo__PdfRect_p_void__p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfTable_SetAutoPageBreak",3,SWIGTYPE_p_f_r_PoDoFo__PdfRect_p_void__p_PoDoFo__PdfPage);
  }
  
  arg4=(void *)SWIG_MustGetPtr(L,4,0,0,4,"PdfTable_SetAutoPageBreak");
  {
    try {
      (arg1)->SetAutoPageBreak(arg2,arg3,arg4);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_SetAutoPageBreak__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  bool arg2 ;
  PoDoFo::PdfTable::CreatePageCallback arg3 = (PoDoFo::PdfTable::CreatePageCallback) 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTable::SetAutoPageBreak",3,3)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::SetAutoPageBreak",1,"PoDoFo::PdfTable *");
  if(!lua_isboolean(L,2)) SWIG_fail_arg("PoDoFo::PdfTable::SetAutoPageBreak",2,"bool");
  if(!SWIG_isptrtype(L,3)) SWIG_fail_arg("PoDoFo::PdfTable::SetAutoPageBreak",3,"PoDoFo::PdfTable::CreatePageCallback");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_SetAutoPageBreak",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  arg2 = (lua_toboolean(L, 2)!=0);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,3,(void**)&arg3,SWIGTYPE_p_f_r_PoDoFo__PdfRect_p_void__p_PoDoFo__PdfPage,0))){
    SWIG_fail_ptr("PdfTable_SetAutoPageBreak",3,SWIGTYPE_p_f_r_PoDoFo__PdfRect_p_void__p_PoDoFo__PdfPage);
  }
  
  {
    try {
      (arg1)->SetAutoPageBreak(arg2,arg3);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_SetAutoPageBreak(lua_State* L) {
  int argc;
  int argv[5]={
    1,2,3,4,5
  };
  
  argc = lua_gettop(L);
  if (argc == 3) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfTable, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_f_r_PoDoFo__PdfRect_p_void__p_PoDoFo__PdfPage, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          return _wrap_PdfTable_SetAutoPageBreak__SWIG_1(L);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      void *ptr;
      if (SWIG_isptrtype(L,argv[0])==0 || SWIG_ConvertPtr(L,argv[0], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfTable, 0)) {
        _v = 0;
      } else {
        _v = 1;
      }
    }
    if (_v) {
      {
        _v = lua_isboolean(L,argv[1]);
      }
      if (_v) {
        {
          void *ptr;
          if (SWIG_isptrtype(L,argv[2])==0 || SWIG_ConvertPtr(L,argv[2], (void **) &ptr, SWIGTYPE_p_f_r_PoDoFo__PdfRect_p_void__p_PoDoFo__PdfPage, 0)) {
            _v = 0;
          } else {
            _v = 1;
          }
        }
        if (_v) {
          {
            void *ptr;
            if (SWIG_isptrtype(L,argv[3])==0 || SWIG_ConvertPtr(L,argv[3], (void **) &ptr, 0, 0)) {
              _v = 0;
            } else {
              _v = 1;
            }
          }
          if (_v) {
            return _wrap_PdfTable_SetAutoPageBreak__SWIG_0(L);
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'PdfTable_SetAutoPageBreak'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfTable::SetAutoPageBreak(bool,PoDoFo::PdfTable::CreatePageCallback,void *)\n"
    "    PoDoFo::PdfTable::SetAutoPageBreak(bool,PoDoFo::PdfTable::CreatePageCallback)\n");
  lua_error(L);return 0;
}


static int _wrap_PdfTable_GetAutoPageBreak(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  bool result;
  
  SWIG_check_num_args("PoDoFo::PdfTable::GetAutoPageBreak",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::GetAutoPageBreak",1,"PoDoFo::PdfTable const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_GetAutoPageBreak",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  {
    try {
      result = (bool)((PoDoFo::PdfTable const *)arg1)->GetAutoPageBreak();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushboolean(L,(int)(result!=0)); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_GetCols(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  int result;
  
  SWIG_check_num_args("PoDoFo::PdfTable::GetCols",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::GetCols",1,"PoDoFo::PdfTable const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_GetCols",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  {
    try {
      result = (int)((PoDoFo::PdfTable const *)arg1)->GetCols();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_PdfTable_GetRows(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) 0 ;
  int result;
  
  SWIG_check_num_args("PoDoFo::PdfTable::GetRows",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTable::GetRows",1,"PoDoFo::PdfTable const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTable,0))){
    SWIG_fail_ptr("PdfTable_GetRows",1,SWIGTYPE_p_PoDoFo__PdfTable);
  }
  
  {
    try {
      result = (int)((PoDoFo::PdfTable const *)arg1)->GetRows();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  lua_pushnumber(L, (lua_Number) result); SWIG_arg++;
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static void swig_delete_PdfTable(void *obj) {
PoDoFo::PdfTable *arg1 = (PoDoFo::PdfTable *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfTable(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfTable);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfTable_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfTable_methods[]= {
    { "Draw", _wrap_PdfTable_Draw},
    { "GetWidth", _wrap_PdfTable_GetWidth},
    { "GetHeight", _wrap_PdfTable_GetHeight},
    { "SetModel", _wrap_PdfTable_SetModel},
    { "GetModel", _wrap_PdfTable_GetModel},
    { "SetColumnWidths", _wrap_PdfTable_SetColumnWidths},
    { "SetRowHeights", _wrap_PdfTable_SetRowHeights},
    { "SetColumnWidth", _wrap_PdfTable_SetColumnWidth},
    { "SetRowHeight", _wrap_PdfTable_SetRowHeight},
    { "SetTableWidth", _wrap_PdfTable_SetTableWidth},
    { "SetTableHeight", _wrap_PdfTable_SetTableHeight},
    { "SetAutoPageBreak", _wrap_PdfTable_SetAutoPageBreak},
    { "GetAutoPageBreak", _wrap_PdfTable_GetAutoPageBreak},
    { "GetCols", _wrap_PdfTable_GetCols},
    { "GetRows", _wrap_PdfTable_GetRows},
    {0,0}
};
static swig_lua_method swig_PdfTable_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfTable_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfTable_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfTable_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfTable_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfTable_Sf_SwigStatic = {
    "PdfTable",
    swig_PdfTable_Sf_SwigStatic_methods,
    swig_PdfTable_Sf_SwigStatic_attributes,
    swig_PdfTable_Sf_SwigStatic_constants,
    swig_PdfTable_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfTable_bases[] = {0};
static const char *swig_PdfTable_base_names[] = {0};
static swig_lua_class _wrap_class_PdfTable = { "PdfTable", "PdfTable", &SWIGTYPE_p_PoDoFo__PdfTable,_proxy__wrap_new_PdfTable, swig_delete_PdfTable, swig_PdfTable_methods, swig_PdfTable_attributes, &swig_PdfTable_Sf_SwigStatic, swig_PdfTable_meta, swig_PdfTable_bases, swig_PdfTable_base_names };

static int _wrap_PdfTilingPattern_GetIdentifier(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::PdfTilingPattern *arg1 = (PoDoFo::PdfTilingPattern *) 0 ;
  PoDoFo::PdfName *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTilingPattern::GetIdentifier",1,1)
  if(!SWIG_isptrtype(L,1)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::GetIdentifier",1,"PoDoFo::PdfTilingPattern const *");
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,1,(void**)&arg1,SWIGTYPE_p_PoDoFo__PdfTilingPattern,0))){
    SWIG_fail_ptr("PdfTilingPattern_GetIdentifier",1,SWIGTYPE_p_PoDoFo__PdfTilingPattern);
  }
  
  {
    try {
      result = (PoDoFo::PdfName *) &((PoDoFo::PdfTilingPattern const *)arg1)->GetIdentifier();
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfName,0); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfTilingPattern__SWIG_0(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::EPdfTilingPatternType arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  bool arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  PoDoFo::PdfImage *arg11 = (PoDoFo::PdfImage *) 0 ;
  PoDoFo::PdfVecObjects *arg12 = (PoDoFo::PdfVecObjects *) 0 ;
  PoDoFo::PdfTilingPattern *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTilingPattern::PdfTilingPattern",12,12)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",1,"PoDoFo::EPdfTilingPatternType");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",4,"double");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",5,"bool");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",6,"double");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",7,"double");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",8,"double");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",9,"double");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",10,"double");
  if(!SWIG_isptrtype(L,11)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",11,"PoDoFo::PdfImage *");
  if(!SWIG_isptrtype(L,12)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",12,"PoDoFo::PdfVecObjects *");
  arg1 = (PoDoFo::EPdfTilingPatternType)(int)lua_tonumber(L, 1);
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (lua_toboolean(L, 5)!=0);
  arg6 = (double)lua_tonumber(L, 6);
  arg7 = (double)lua_tonumber(L, 7);
  arg8 = (double)lua_tonumber(L, 8);
  arg9 = (double)lua_tonumber(L, 9);
  arg10 = (double)lua_tonumber(L, 10);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,11,(void**)&arg11,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("new_PdfTilingPattern",11,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,12,(void**)&arg12,SWIGTYPE_p_PoDoFo__PdfVecObjects,0))){
    SWIG_fail_ptr("new_PdfTilingPattern",12,SWIGTYPE_p_PoDoFo__PdfVecObjects);
  }
  
  {
    try {
      result = (PoDoFo::PdfTilingPattern *)new PoDoFo::PdfTilingPattern(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfTilingPattern,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfTilingPattern__SWIG_1(lua_State* L) {
  int SWIG_arg = 0;
  PoDoFo::EPdfTilingPatternType arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  bool arg5 ;
  double arg6 ;
  double arg7 ;
  double arg8 ;
  double arg9 ;
  double arg10 ;
  PoDoFo::PdfImage *arg11 = (PoDoFo::PdfImage *) 0 ;
  PoDoFo::PdfDocument *arg12 = (PoDoFo::PdfDocument *) 0 ;
  PoDoFo::PdfTilingPattern *result = 0 ;
  
  SWIG_check_num_args("PoDoFo::PdfTilingPattern::PdfTilingPattern",12,12)
  if(!lua_isnumber(L,1)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",1,"PoDoFo::EPdfTilingPatternType");
  if(!lua_isnumber(L,2)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",2,"double");
  if(!lua_isnumber(L,3)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",3,"double");
  if(!lua_isnumber(L,4)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",4,"double");
  if(!lua_isboolean(L,5)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",5,"bool");
  if(!lua_isnumber(L,6)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",6,"double");
  if(!lua_isnumber(L,7)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",7,"double");
  if(!lua_isnumber(L,8)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",8,"double");
  if(!lua_isnumber(L,9)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",9,"double");
  if(!lua_isnumber(L,10)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",10,"double");
  if(!SWIG_isptrtype(L,11)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",11,"PoDoFo::PdfImage *");
  if(!SWIG_isptrtype(L,12)) SWIG_fail_arg("PoDoFo::PdfTilingPattern::PdfTilingPattern",12,"PoDoFo::PdfDocument *");
  arg1 = (PoDoFo::EPdfTilingPatternType)(int)lua_tonumber(L, 1);
  arg2 = (double)lua_tonumber(L, 2);
  arg3 = (double)lua_tonumber(L, 3);
  arg4 = (double)lua_tonumber(L, 4);
  arg5 = (lua_toboolean(L, 5)!=0);
  arg6 = (double)lua_tonumber(L, 6);
  arg7 = (double)lua_tonumber(L, 7);
  arg8 = (double)lua_tonumber(L, 8);
  arg9 = (double)lua_tonumber(L, 9);
  arg10 = (double)lua_tonumber(L, 10);
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,11,(void**)&arg11,SWIGTYPE_p_PoDoFo__PdfImage,0))){
    SWIG_fail_ptr("new_PdfTilingPattern",11,SWIGTYPE_p_PoDoFo__PdfImage);
  }
  
  
  if (!SWIG_IsOK(SWIG_ConvertPtr(L,12,(void**)&arg12,SWIGTYPE_p_PoDoFo__PdfDocument,0))){
    SWIG_fail_ptr("new_PdfTilingPattern",12,SWIGTYPE_p_PoDoFo__PdfDocument);
  }
  
  {
    try {
      result = (PoDoFo::PdfTilingPattern *)new PoDoFo::PdfTilingPattern(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,arg11,arg12);
    }
    catch (PoDoFo::PdfError e) {
      e.PrintErrorMsg();
      return 0;
    }
  }
  SWIG_NewPointerObj(L,result,SWIGTYPE_p_PoDoFo__PdfTilingPattern,1); SWIG_arg++; 
  return SWIG_arg;
  
  if(0) SWIG_fail;
  
fail:
  lua_error(L);
  return SWIG_arg;
}


static int _wrap_new_PdfTilingPattern(lua_State* L) {
  int argc;
  int argv[13]={
    1,2,3,4,5,6,7,8,9,10,11,12,13
  };
  
  argc = lua_gettop(L);
  if (argc == 12) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          void *ptr;
                          if (SWIG_isptrtype(L,argv[10])==0 || SWIG_ConvertPtr(L,argv[10], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfImage, 0)) {
                            _v = 0;
                          } else {
                            _v = 1;
                          }
                        }
                        if (_v) {
                          {
                            void *ptr;
                            if (SWIG_isptrtype(L,argv[11])==0 || SWIG_ConvertPtr(L,argv[11], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfVecObjects, 0)) {
                              _v = 0;
                            } else {
                              _v = 1;
                            }
                          }
                          if (_v) {
                            return _wrap_new_PdfTilingPattern__SWIG_0(L);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      _v = lua_isnumber(L,argv[0]);
    }
    if (_v) {
      {
        _v = lua_isnumber(L,argv[1]);
      }
      if (_v) {
        {
          _v = lua_isnumber(L,argv[2]);
        }
        if (_v) {
          {
            _v = lua_isnumber(L,argv[3]);
          }
          if (_v) {
            {
              _v = lua_isboolean(L,argv[4]);
            }
            if (_v) {
              {
                _v = lua_isnumber(L,argv[5]);
              }
              if (_v) {
                {
                  _v = lua_isnumber(L,argv[6]);
                }
                if (_v) {
                  {
                    _v = lua_isnumber(L,argv[7]);
                  }
                  if (_v) {
                    {
                      _v = lua_isnumber(L,argv[8]);
                    }
                    if (_v) {
                      {
                        _v = lua_isnumber(L,argv[9]);
                      }
                      if (_v) {
                        {
                          void *ptr;
                          if (SWIG_isptrtype(L,argv[10])==0 || SWIG_ConvertPtr(L,argv[10], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfImage, 0)) {
                            _v = 0;
                          } else {
                            _v = 1;
                          }
                        }
                        if (_v) {
                          {
                            void *ptr;
                            if (SWIG_isptrtype(L,argv[11])==0 || SWIG_ConvertPtr(L,argv[11], (void **) &ptr, SWIGTYPE_p_PoDoFo__PdfDocument, 0)) {
                              _v = 0;
                            } else {
                              _v = 1;
                            }
                          }
                          if (_v) {
                            return _wrap_new_PdfTilingPattern__SWIG_1(L);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  SWIG_Lua_pusherrstring(L,"Wrong arguments for overloaded function 'new_PdfTilingPattern'\n"
    "  Possible C/C++ prototypes are:\n"
    "    PoDoFo::PdfTilingPattern::PdfTilingPattern(PoDoFo::EPdfTilingPatternType,double,double,double,bool,double,double,double,double,double,PoDoFo::PdfImage *,PoDoFo::PdfVecObjects *)\n"
    "    PoDoFo::PdfTilingPattern::PdfTilingPattern(PoDoFo::EPdfTilingPatternType,double,double,double,bool,double,double,double,double,double,PoDoFo::PdfImage *,PoDoFo::PdfDocument *)\n");
  lua_error(L);return 0;
}


static void swig_delete_PdfTilingPattern(void *obj) {
PoDoFo::PdfTilingPattern *arg1 = (PoDoFo::PdfTilingPattern *) obj;
delete arg1;
}
static int _proxy__wrap_new_PdfTilingPattern(lua_State *L) {
    assert(lua_istable(L,1));
    lua_pushcfunction(L,_wrap_new_PdfTilingPattern);
    assert(!lua_isnil(L,-1));
    lua_replace(L,1); /* replace our table with real constructor */
    lua_call(L,lua_gettop(L)-1,1);
    return 1;
}
static swig_lua_attribute swig_PdfTilingPattern_attributes[] = {
    {0,0,0}
};
static swig_lua_method swig_PdfTilingPattern_methods[]= {
    { "GetIdentifier", _wrap_PdfTilingPattern_GetIdentifier},
    {0,0}
};
static swig_lua_method swig_PdfTilingPattern_meta[] = {
    {0,0}
};

static swig_lua_attribute swig_PdfTilingPattern_Sf_SwigStatic_attributes[] = {
    {0,0,0}
};
static swig_lua_const_info swig_PdfTilingPattern_Sf_SwigStatic_constants[]= {
    {0,0,0,0,0,0}
};
static swig_lua_method swig_PdfTilingPattern_Sf_SwigStatic_methods[]= {
    {0,0}
};
static swig_lua_class* swig_PdfTilingPattern_Sf_SwigStatic_classes[]= {
    0
};

static swig_lua_namespace swig_PdfTilingPattern_Sf_SwigStatic = {
    "PdfTilingPattern",
    swig_PdfTilingPattern_Sf_SwigStatic_methods,
    swig_PdfTilingPattern_Sf_SwigStatic_attributes,
    swig_PdfTilingPattern_Sf_SwigStatic_constants,
    swig_PdfTilingPattern_Sf_SwigStatic_classes,
    0
};
static swig_lua_class *swig_PdfTilingPattern_bases[] = {0,0};
static const char *swig_PdfTilingPattern_base_names[] = {"PoDoFo::PdfElement *",0};
static swig_lua_class _wrap_class_PdfTilingPattern = { "PdfTilingPattern", "PdfTilingPattern", &SWIGTYPE_p_PoDoFo__PdfTilingPattern,_proxy__wrap_new_PdfTilingPattern, swig_delete_PdfTilingPattern, swig_PdfTilingPattern_methods, swig_PdfTilingPattern_attributes, &swig_PdfTilingPattern_Sf_SwigStatic, swig_PdfTilingPattern_meta, swig_PdfTilingPattern_bases, swig_PdfTilingPattern_base_names };

static swig_lua_attribute swig_SwigModule_attributes[] = {
    { "ePdfVersion_Default", _wrap_ePdfVersion_Default_get, SWIG_Lua_set_immutable },
    { "ePdfWriteMode_Default", _wrap_ePdfWriteMode_Default_get, SWIG_Lua_set_immutable },
    { "ePdfCreateObject", _wrap_ePdfCreateObject_get, SWIG_Lua_set_immutable },
    { "ePdfDontCreateObject", _wrap_ePdfDontCreateObject_get, SWIG_Lua_set_immutable },
    { "s_szPdfVersions", _wrap_s_szPdfVersions_get, SWIG_Lua_set_immutable },
    { "s_szPdfVersionNums", _wrap_s_szPdfVersionNums_get, SWIG_Lua_set_immutable },
    { "s_nNumWhiteSpaces", _wrap_s_nNumWhiteSpaces_get, SWIG_Lua_set_immutable },
    { "s_cWhiteSpaces", _wrap_s_cWhiteSpaces_get, SWIG_Lua_set_immutable },
    { "s_nNumDelimiters", _wrap_s_nNumDelimiters_get, SWIG_Lua_set_immutable },
    { "s_cDelimiters", _wrap_s_cDelimiters_get, SWIG_Lua_set_immutable },
    { "PdfString_StringNull", _wrap_PdfString_StringNull_get, SWIG_Lua_set_immutable },
    { "CHAR_DATA_COURIER", _wrap_CHAR_DATA_COURIER_get, SWIG_Lua_set_immutable },
    { "CHAR_DATA_COURIER_BOLD", _wrap_CHAR_DATA_COURIER_BOLD_get, SWIG_Lua_set_immutable },
    { "CHAR_DATA_COURIER_BOLD_OBLIQUE", _wrap_CHAR_DATA_COURIER_BOLD_OBLIQUE_get, SWIG_Lua_set_immutable },
    { "CHAR_DATA_COURIER_OBLIQUE", _wrap_CHAR_DATA_COURIER_OBLIQUE_get, SWIG_Lua_set_immutable },
    { "CHAR_DATA_HELVETICA", _wrap_CHAR_DATA_HELVETICA_get, SWIG_Lua_set_immutable },
    { "CHAR_DATA_HELVETICA_BOLD", _wrap_CHAR_DATA_HELVETICA_BOLD_get, SWIG_Lua_set_immutable },
    { "CHAR_DATA_HELVETICA_BOLD_OBLIQUE", _wrap_CHAR_DATA_HELVETICA_BOLD_OBLIQUE_get, SWIG_Lua_set_immutable },
    { "CHAR_DATA_HELVETICA_OBLIQUE", _wrap_CHAR_DATA_HELVETICA_OBLIQUE_get, SWIG_Lua_set_immutable },
    { "CHAR_DATA_TIMES_ROMAN", _wrap_CHAR_DATA_TIMES_ROMAN_get, SWIG_Lua_set_immutable },
    { "CHAR_DATA_TIMES_BOLD", _wrap_CHAR_DATA_TIMES_BOLD_get, SWIG_Lua_set_immutable },
    { "CHAR_DATA_TIMES_BOLD_ITALIC", _wrap_CHAR_DATA_TIMES_BOLD_ITALIC_get, SWIG_Lua_set_immutable },
    { "CHAR_DATA_TIMES_ITALIC", _wrap_CHAR_DATA_TIMES_ITALIC_get, SWIG_Lua_set_immutable },
    { "CHAR_DATA_ZAPF_DINGBATS", _wrap_CHAR_DATA_ZAPF_DINGBATS_get, SWIG_Lua_set_immutable },
    { "CHAR_DATA_SYMBOL", _wrap_CHAR_DATA_SYMBOL_get, SWIG_Lua_set_immutable },
    { "PODOFO_TRUE", _wrap_PODOFO_TRUE_get, SWIG_Lua_set_immutable },
    { "PODOFO_FALSE", _wrap_PODOFO_FALSE_get, SWIG_Lua_set_immutable },
    { "PODOFO_BUILTIN_FONTS", _wrap_PODOFO_BUILTIN_FONTS_get, SWIG_Lua_set_immutable },
    {0,0,0}
};
static swig_lua_const_info swig_SwigModule_constants[]= {
    {SWIG_LUA_CONSTTAB_STRING("PODOFO_VERSION_STR", "(\"PODOFO_VERSION_MAJOR.PODOFO_VERSION_MINOR.PODOFO_VERSION_PATCH\")")},
    {SWIG_LUA_CONSTTAB_INT("USE_CXX_LOCALE", 1)},
    {SWIG_LUA_CONSTTAB_INT("ePdfVersion_1_0", PoDoFo::ePdfVersion_1_0)},
    {SWIG_LUA_CONSTTAB_INT("ePdfVersion_1_1", PoDoFo::ePdfVersion_1_1)},
    {SWIG_LUA_CONSTTAB_INT("ePdfVersion_1_2", PoDoFo::ePdfVersion_1_2)},
    {SWIG_LUA_CONSTTAB_INT("ePdfVersion_1_3", PoDoFo::ePdfVersion_1_3)},
    {SWIG_LUA_CONSTTAB_INT("ePdfVersion_1_4", PoDoFo::ePdfVersion_1_4)},
    {SWIG_LUA_CONSTTAB_INT("ePdfVersion_1_5", PoDoFo::ePdfVersion_1_5)},
    {SWIG_LUA_CONSTTAB_INT("ePdfVersion_1_6", PoDoFo::ePdfVersion_1_6)},
    {SWIG_LUA_CONSTTAB_INT("ePdfVersion_1_7", PoDoFo::ePdfVersion_1_7)},
    {SWIG_LUA_CONSTTAB_INT("ePdfWriteMode_Compact", PoDoFo::ePdfWriteMode_Compact)},
    {SWIG_LUA_CONSTTAB_INT("ePdfWriteMode_Clean", PoDoFo::ePdfWriteMode_Clean)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDataType_Bool", PoDoFo::ePdfDataType_Bool)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDataType_Number", PoDoFo::ePdfDataType_Number)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDataType_Real", PoDoFo::ePdfDataType_Real)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDataType_String", PoDoFo::ePdfDataType_String)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDataType_HexString", PoDoFo::ePdfDataType_HexString)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDataType_Name", PoDoFo::ePdfDataType_Name)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDataType_Array", PoDoFo::ePdfDataType_Array)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDataType_Dictionary", PoDoFo::ePdfDataType_Dictionary)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDataType_Null", PoDoFo::ePdfDataType_Null)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDataType_Reference", PoDoFo::ePdfDataType_Reference)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDataType_RawData", PoDoFo::ePdfDataType_RawData)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDataType_Unknown", PoDoFo::ePdfDataType_Unknown)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFilter_ASCIIHexDecode", PoDoFo::ePdfFilter_ASCIIHexDecode)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFilter_ASCII85Decode", PoDoFo::ePdfFilter_ASCII85Decode)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFilter_LZWDecode", PoDoFo::ePdfFilter_LZWDecode)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFilter_FlateDecode", PoDoFo::ePdfFilter_FlateDecode)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFilter_RunLengthDecode", PoDoFo::ePdfFilter_RunLengthDecode)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFilter_CCITTFaxDecode", PoDoFo::ePdfFilter_CCITTFaxDecode)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFilter_JBIG2Decode", PoDoFo::ePdfFilter_JBIG2Decode)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFilter_DCTDecode", PoDoFo::ePdfFilter_DCTDecode)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFilter_JPXDecode", PoDoFo::ePdfFilter_JPXDecode)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFilter_Crypt", PoDoFo::ePdfFilter_Crypt)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFontType_TrueType", PoDoFo::ePdfFontType_TrueType)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFontType_Type1Pfa", PoDoFo::ePdfFontType_Type1Pfa)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFontType_Type1Pfb", PoDoFo::ePdfFontType_Type1Pfb)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFontType_Type1Base14", PoDoFo::ePdfFontType_Type1Base14)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFontType_Type3", PoDoFo::ePdfFontType_Type3)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFontType_Unknown", PoDoFo::ePdfFontType_Unknown)},
    {SWIG_LUA_CONSTTAB_INT("ePdfColorSpace_DeviceGray", PoDoFo::ePdfColorSpace_DeviceGray)},
    {SWIG_LUA_CONSTTAB_INT("ePdfColorSpace_DeviceRGB", PoDoFo::ePdfColorSpace_DeviceRGB)},
    {SWIG_LUA_CONSTTAB_INT("ePdfColorSpace_DeviceCMYK", PoDoFo::ePdfColorSpace_DeviceCMYK)},
    {SWIG_LUA_CONSTTAB_INT("ePdfColorSpace_Separation", PoDoFo::ePdfColorSpace_Separation)},
    {SWIG_LUA_CONSTTAB_INT("ePdfColorSpace_CieLab", PoDoFo::ePdfColorSpace_CieLab)},
    {SWIG_LUA_CONSTTAB_INT("ePdfColorSpace_Indexed", PoDoFo::ePdfColorSpace_Indexed)},
    {SWIG_LUA_CONSTTAB_INT("ePdfColorSpace_Unknown", PoDoFo::ePdfColorSpace_Unknown)},
    {SWIG_LUA_CONSTTAB_INT("ePdfTextRenderingMode_Fill", PoDoFo::ePdfTextRenderingMode_Fill)},
    {SWIG_LUA_CONSTTAB_INT("ePdfTextRenderingMode_Stroke", PoDoFo::ePdfTextRenderingMode_Stroke)},
    {SWIG_LUA_CONSTTAB_INT("ePdfTextRenderingMode_FillAndStroke", PoDoFo::ePdfTextRenderingMode_FillAndStroke)},
    {SWIG_LUA_CONSTTAB_INT("ePdfTextRenderingMode_Invisible", PoDoFo::ePdfTextRenderingMode_Invisible)},
    {SWIG_LUA_CONSTTAB_INT("ePdfTextRenderingMode_FillToClipPath", PoDoFo::ePdfTextRenderingMode_FillToClipPath)},
    {SWIG_LUA_CONSTTAB_INT("ePdfTextRenderingMode_StrokeToClipPath", PoDoFo::ePdfTextRenderingMode_StrokeToClipPath)},
    {SWIG_LUA_CONSTTAB_INT("ePdfTextRenderingMode_FillAndStrokeToClipPath", PoDoFo::ePdfTextRenderingMode_FillAndStrokeToClipPath)},
    {SWIG_LUA_CONSTTAB_INT("ePdfTextRenderingMode_ToClipPath", PoDoFo::ePdfTextRenderingMode_ToClipPath)},
    {SWIG_LUA_CONSTTAB_INT("ePdfTextRenderingMode_Unknown", PoDoFo::ePdfTextRenderingMode_Unknown)},
    {SWIG_LUA_CONSTTAB_INT("ePdfStrokeStyle_Solid", PoDoFo::ePdfStrokeStyle_Solid)},
    {SWIG_LUA_CONSTTAB_INT("ePdfStrokeStyle_Dash", PoDoFo::ePdfStrokeStyle_Dash)},
    {SWIG_LUA_CONSTTAB_INT("ePdfStrokeStyle_Dot", PoDoFo::ePdfStrokeStyle_Dot)},
    {SWIG_LUA_CONSTTAB_INT("ePdfStrokeStyle_DashDot", PoDoFo::ePdfStrokeStyle_DashDot)},
    {SWIG_LUA_CONSTTAB_INT("ePdfStrokeStyle_DashDotDot", PoDoFo::ePdfStrokeStyle_DashDotDot)},
    {SWIG_LUA_CONSTTAB_INT("ePdfStrokeStyle_Custom", PoDoFo::ePdfStrokeStyle_Custom)},
    {SWIG_LUA_CONSTTAB_INT("ePdfTilingPatternType_BDiagonal", PoDoFo::ePdfTilingPatternType_BDiagonal)},
    {SWIG_LUA_CONSTTAB_INT("ePdfTilingPatternType_Cross", PoDoFo::ePdfTilingPatternType_Cross)},
    {SWIG_LUA_CONSTTAB_INT("ePdfTilingPatternType_DiagCross", PoDoFo::ePdfTilingPatternType_DiagCross)},
    {SWIG_LUA_CONSTTAB_INT("ePdfTilingPatternType_FDiagonal", PoDoFo::ePdfTilingPatternType_FDiagonal)},
    {SWIG_LUA_CONSTTAB_INT("ePdfTilingPatternType_Horizontal", PoDoFo::ePdfTilingPatternType_Horizontal)},
    {SWIG_LUA_CONSTTAB_INT("ePdfTilingPatternType_Vertical", PoDoFo::ePdfTilingPatternType_Vertical)},
    {SWIG_LUA_CONSTTAB_INT("ePdfTilingPatternType_Image", PoDoFo::ePdfTilingPatternType_Image)},
    {SWIG_LUA_CONSTTAB_INT("ePdfLineCapStyle_Butt", PoDoFo::ePdfLineCapStyle_Butt)},
    {SWIG_LUA_CONSTTAB_INT("ePdfLineCapStyle_Round", PoDoFo::ePdfLineCapStyle_Round)},
    {SWIG_LUA_CONSTTAB_INT("ePdfLineCapStyle_Square", PoDoFo::ePdfLineCapStyle_Square)},
    {SWIG_LUA_CONSTTAB_INT("ePdfLineJoinStyle_Miter", PoDoFo::ePdfLineJoinStyle_Miter)},
    {SWIG_LUA_CONSTTAB_INT("ePdfLineJoinStyle_Round", PoDoFo::ePdfLineJoinStyle_Round)},
    {SWIG_LUA_CONSTTAB_INT("ePdfLineJoinStyle_Bevel", PoDoFo::ePdfLineJoinStyle_Bevel)},
    {SWIG_LUA_CONSTTAB_INT("ePdfVerticalAlignment_Top", PoDoFo::ePdfVerticalAlignment_Top)},
    {SWIG_LUA_CONSTTAB_INT("ePdfVerticalAlignment_Center", PoDoFo::ePdfVerticalAlignment_Center)},
    {SWIG_LUA_CONSTTAB_INT("ePdfVerticalAlignment_Bottom", PoDoFo::ePdfVerticalAlignment_Bottom)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAlignment_Left", PoDoFo::ePdfAlignment_Left)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAlignment_Center", PoDoFo::ePdfAlignment_Center)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAlignment_Right", PoDoFo::ePdfAlignment_Right)},
    {SWIG_LUA_CONSTTAB_STRING("ePdfRenderingIntent_AbsoluteColorimetric", "AbsoluteColorimetric")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfRenderingIntent_RelativeColorimetric", "RelativeColorimetric")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfRenderingIntent_Perceptual", "Perceptual")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfRenderingIntent_Saturation", "Saturation")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfBlendMode_Normal", "Normal")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfBlendMode_Multiply", "Multiply")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfBlendMode_Screen", "Screen")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfBlendMode_Overlay", "Overlay")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfBlendMode_Darken", "Darken")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfBlendMode_Lighten", "Lighten")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfBlendMode_ColorDodge", "ColorDodge")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfBlendMode_ColorBurn", "ColorBurn")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfBlendMode_HardLight", "HardLight")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfBlendMode_SoftLight", "SoftLight")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfBlendMode_Difference", "Difference")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfBlendMode_Exclusion", "Exclusion")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfBlendMode_Hue", "Hue")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfBlendMode_Saturation", "Saturation")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfBlendMode_Color", "Color")},
    {SWIG_LUA_CONSTTAB_STRING("ePdfBlendMode_Luminosity", "Luminosity")},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageSize_A0", PoDoFo::ePdfPageSize_A0)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageSize_A1", PoDoFo::ePdfPageSize_A1)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageSize_A2", PoDoFo::ePdfPageSize_A2)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageSize_A3", PoDoFo::ePdfPageSize_A3)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageSize_A4", PoDoFo::ePdfPageSize_A4)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageSize_A5", PoDoFo::ePdfPageSize_A5)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageSize_A6", PoDoFo::ePdfPageSize_A6)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageSize_Letter", PoDoFo::ePdfPageSize_Letter)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageSize_Legal", PoDoFo::ePdfPageSize_Legal)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageSize_Tabloid", PoDoFo::ePdfPageSize_Tabloid)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageModeDontCare", PoDoFo::ePdfPageModeDontCare)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageModeUseNone", PoDoFo::ePdfPageModeUseNone)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageModeUseThumbs", PoDoFo::ePdfPageModeUseThumbs)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageModeUseBookmarks", PoDoFo::ePdfPageModeUseBookmarks)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageModeFullScreen", PoDoFo::ePdfPageModeFullScreen)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageModeUseOC", PoDoFo::ePdfPageModeUseOC)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageModeUseAttachments", PoDoFo::ePdfPageModeUseAttachments)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageLayoutIgnore", PoDoFo::ePdfPageLayoutIgnore)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageLayoutDefault", PoDoFo::ePdfPageLayoutDefault)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageLayoutSinglePage", PoDoFo::ePdfPageLayoutSinglePage)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageLayoutOneColumn", PoDoFo::ePdfPageLayoutOneColumn)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageLayoutTwoColumnLeft", PoDoFo::ePdfPageLayoutTwoColumnLeft)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageLayoutTwoColumnRight", PoDoFo::ePdfPageLayoutTwoColumnRight)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageLayoutTwoPageLeft", PoDoFo::ePdfPageLayoutTwoPageLeft)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageLayoutTwoPageRight", PoDoFo::ePdfPageLayoutTwoPageRight)},
    {SWIG_LUA_CONSTTAB_INT("MAX_PDF_VERSION_STRING_INDEX", 7)},
    {SWIG_LUA_CONSTTAB_FLOAT("PODOFO_CONVERSION_CONSTANT", 0.002834645669291339)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAcroFormDefaultAppearance_None", PoDoFo::ePdfAcroFormDefaultAppearance_None)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAcroFormDefaultAppearance_BlackText12pt", PoDoFo::ePdfAcroFormDefaultAppearance_BlackText12pt)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_GoTo", PoDoFo::ePdfAction_GoTo)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_GoToR", PoDoFo::ePdfAction_GoToR)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_GoToE", PoDoFo::ePdfAction_GoToE)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_Launch", PoDoFo::ePdfAction_Launch)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_Thread", PoDoFo::ePdfAction_Thread)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_URI", PoDoFo::ePdfAction_URI)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_Sound", PoDoFo::ePdfAction_Sound)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_Movie", PoDoFo::ePdfAction_Movie)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_Hide", PoDoFo::ePdfAction_Hide)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_Named", PoDoFo::ePdfAction_Named)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_SubmitForm", PoDoFo::ePdfAction_SubmitForm)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_ResetForm", PoDoFo::ePdfAction_ResetForm)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_ImportData", PoDoFo::ePdfAction_ImportData)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_JavaScript", PoDoFo::ePdfAction_JavaScript)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_SetOCGState", PoDoFo::ePdfAction_SetOCGState)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_Rendition", PoDoFo::ePdfAction_Rendition)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_Trans", PoDoFo::ePdfAction_Trans)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_GoTo3DView", PoDoFo::ePdfAction_GoTo3DView)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_RichMediaExecute", PoDoFo::ePdfAction_RichMediaExecute)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAction_Unknown", PoDoFo::ePdfAction_Unknown)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDestinationFit_Fit", PoDoFo::ePdfDestinationFit_Fit)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDestinationFit_FitH", PoDoFo::ePdfDestinationFit_FitH)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDestinationFit_FitV", PoDoFo::ePdfDestinationFit_FitV)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDestinationFit_FitB", PoDoFo::ePdfDestinationFit_FitB)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDestinationFit_FitBH", PoDoFo::ePdfDestinationFit_FitBH)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDestinationFit_FitBV", PoDoFo::ePdfDestinationFit_FitBV)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDestinationFit_Unknown", PoDoFo::ePdfDestinationFit_Unknown)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDestinationType_XYZ", PoDoFo::ePdfDestinationType_XYZ)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDestinationType_Fit", PoDoFo::ePdfDestinationType_Fit)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDestinationType_FitH", PoDoFo::ePdfDestinationType_FitH)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDestinationType_FitV", PoDoFo::ePdfDestinationType_FitV)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDestinationType_FitR", PoDoFo::ePdfDestinationType_FitR)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDestinationType_FitB", PoDoFo::ePdfDestinationType_FitB)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDestinationType_FitBH", PoDoFo::ePdfDestinationType_FitBH)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDestinationType_FitBV", PoDoFo::ePdfDestinationType_FitBV)},
    {SWIG_LUA_CONSTTAB_INT("ePdfDestinationType_Unknown", PoDoFo::ePdfDestinationType_Unknown)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Text", PoDoFo::ePdfAnnotation_Text)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Link", PoDoFo::ePdfAnnotation_Link)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_FreeText", PoDoFo::ePdfAnnotation_FreeText)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Line", PoDoFo::ePdfAnnotation_Line)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Square", PoDoFo::ePdfAnnotation_Square)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Circle", PoDoFo::ePdfAnnotation_Circle)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Polygon", PoDoFo::ePdfAnnotation_Polygon)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_PolyLine", PoDoFo::ePdfAnnotation_PolyLine)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Highlight", PoDoFo::ePdfAnnotation_Highlight)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Underline", PoDoFo::ePdfAnnotation_Underline)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Squiggly", PoDoFo::ePdfAnnotation_Squiggly)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_StrikeOut", PoDoFo::ePdfAnnotation_StrikeOut)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Stamp", PoDoFo::ePdfAnnotation_Stamp)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Caret", PoDoFo::ePdfAnnotation_Caret)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Ink", PoDoFo::ePdfAnnotation_Ink)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Popup", PoDoFo::ePdfAnnotation_Popup)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_FileAttachement", PoDoFo::ePdfAnnotation_FileAttachement)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Sound", PoDoFo::ePdfAnnotation_Sound)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Movie", PoDoFo::ePdfAnnotation_Movie)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Widget", PoDoFo::ePdfAnnotation_Widget)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Screen", PoDoFo::ePdfAnnotation_Screen)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_PrinterMark", PoDoFo::ePdfAnnotation_PrinterMark)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_TrapNet", PoDoFo::ePdfAnnotation_TrapNet)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Watermark", PoDoFo::ePdfAnnotation_Watermark)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_3D", PoDoFo::ePdfAnnotation_3D)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_RichMedia", PoDoFo::ePdfAnnotation_RichMedia)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_WebMedia", PoDoFo::ePdfAnnotation_WebMedia)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotation_Unknown", PoDoFo::ePdfAnnotation_Unknown)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotationFlags_Invisible", PoDoFo::ePdfAnnotationFlags_Invisible)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotationFlags_Hidden", PoDoFo::ePdfAnnotationFlags_Hidden)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotationFlags_Print", PoDoFo::ePdfAnnotationFlags_Print)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotationFlags_NoZoom", PoDoFo::ePdfAnnotationFlags_NoZoom)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotationFlags_NoRotate", PoDoFo::ePdfAnnotationFlags_NoRotate)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotationFlags_NoView", PoDoFo::ePdfAnnotationFlags_NoView)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotationFlags_ReadOnly", PoDoFo::ePdfAnnotationFlags_ReadOnly)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotationFlags_Locked", PoDoFo::ePdfAnnotationFlags_Locked)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotationFlags_ToggleNoView", PoDoFo::ePdfAnnotationFlags_ToggleNoView)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotationFlags_LockedContents", PoDoFo::ePdfAnnotationFlags_LockedContents)},
    {SWIG_LUA_CONSTTAB_INT("ePdfAnnotationFlags_Unknow", PoDoFo::ePdfAnnotationFlags_Unknow)},
    {SWIG_LUA_CONSTTAB_INT("PDF_STRING_BUFFER_SIZE", 24)},
    {SWIG_LUA_CONSTTAB_INT("ePdfStringConversion_Strict", PoDoFo::ePdfStringConversion_Strict)},
    {SWIG_LUA_CONSTTAB_INT("ePdfStringConversion_Lenient", PoDoFo::ePdfStringConversion_Lenient)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_ErrOk", PoDoFo::ePdfError_ErrOk)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_TestFailed", PoDoFo::ePdfError_TestFailed)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidHandle", PoDoFo::ePdfError_InvalidHandle)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_FileNotFound", PoDoFo::ePdfError_FileNotFound)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidDeviceOperation", PoDoFo::ePdfError_InvalidDeviceOperation)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_UnexpectedEOF", PoDoFo::ePdfError_UnexpectedEOF)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_OutOfMemory", PoDoFo::ePdfError_OutOfMemory)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_ValueOutOfRange", PoDoFo::ePdfError_ValueOutOfRange)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InternalLogic", PoDoFo::ePdfError_InternalLogic)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidEnumValue", PoDoFo::ePdfError_InvalidEnumValue)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_PageNotFound", PoDoFo::ePdfError_PageNotFound)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_NoPdfFile", PoDoFo::ePdfError_NoPdfFile)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_NoXRef", PoDoFo::ePdfError_NoXRef)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_NoTrailer", PoDoFo::ePdfError_NoTrailer)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_NoNumber", PoDoFo::ePdfError_NoNumber)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_NoObject", PoDoFo::ePdfError_NoObject)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_NoEOFToken", PoDoFo::ePdfError_NoEOFToken)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidTrailerSize", PoDoFo::ePdfError_InvalidTrailerSize)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidLinearization", PoDoFo::ePdfError_InvalidLinearization)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidDataType", PoDoFo::ePdfError_InvalidDataType)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidXRef", PoDoFo::ePdfError_InvalidXRef)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidXRefStream", PoDoFo::ePdfError_InvalidXRefStream)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidXRefType", PoDoFo::ePdfError_InvalidXRefType)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidPredictor", PoDoFo::ePdfError_InvalidPredictor)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidStrokeStyle", PoDoFo::ePdfError_InvalidStrokeStyle)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidHexString", PoDoFo::ePdfError_InvalidHexString)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidStream", PoDoFo::ePdfError_InvalidStream)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidStreamLength", PoDoFo::ePdfError_InvalidStreamLength)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidKey", PoDoFo::ePdfError_InvalidKey)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidName", PoDoFo::ePdfError_InvalidName)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidEncryptionDict", PoDoFo::ePdfError_InvalidEncryptionDict)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidPassword", PoDoFo::ePdfError_InvalidPassword)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidFontFile", PoDoFo::ePdfError_InvalidFontFile)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_InvalidContentStream", PoDoFo::ePdfError_InvalidContentStream)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_UnsupportedFilter", PoDoFo::ePdfError_UnsupportedFilter)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_UnsupportedFontFormat", PoDoFo::ePdfError_UnsupportedFontFormat)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_ActionAlreadyPresent", PoDoFo::ePdfError_ActionAlreadyPresent)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_WrongDestinationType", PoDoFo::ePdfError_WrongDestinationType)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_MissingEndStream", PoDoFo::ePdfError_MissingEndStream)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_Date", PoDoFo::ePdfError_Date)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_Flate", PoDoFo::ePdfError_Flate)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_FreeType", PoDoFo::ePdfError_FreeType)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_SignatureError", PoDoFo::ePdfError_SignatureError)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_MutexError", PoDoFo::ePdfError_MutexError)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_UnsupportedImageFormat", PoDoFo::ePdfError_UnsupportedImageFormat)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_CannotConvertColor", PoDoFo::ePdfError_CannotConvertColor)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_NotImplemented", PoDoFo::ePdfError_NotImplemented)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_DestinationAlreadyPresent", PoDoFo::ePdfError_DestinationAlreadyPresent)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_ChangeOnImmutable", PoDoFo::ePdfError_ChangeOnImmutable)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_NotCompiled", PoDoFo::ePdfError_NotCompiled)},
    {SWIG_LUA_CONSTTAB_INT("ePdfError_Unknown", PoDoFo::ePdfError_Unknown)},
    {SWIG_LUA_CONSTTAB_INT("eLogSeverity_Critical", PoDoFo::eLogSeverity_Critical)},
    {SWIG_LUA_CONSTTAB_INT("eLogSeverity_Error", PoDoFo::eLogSeverity_Error)},
    {SWIG_LUA_CONSTTAB_INT("eLogSeverity_Warning", PoDoFo::eLogSeverity_Warning)},
    {SWIG_LUA_CONSTTAB_INT("eLogSeverity_Information", PoDoFo::eLogSeverity_Information)},
    {SWIG_LUA_CONSTTAB_INT("eLogSeverity_Debug", PoDoFo::eLogSeverity_Debug)},
    {SWIG_LUA_CONSTTAB_INT("eLogSeverity_None", PoDoFo::eLogSeverity_None)},
    {SWIG_LUA_CONSTTAB_INT("eLogSeverity_Unknown", PoDoFo::eLogSeverity_Unknown)},
    {SWIG_LUA_CONSTTAB_INT("PdfCMapEncoding_eBaseEncoding_Font", PoDoFo::PdfCMapEncoding::eBaseEncoding_Font)},
    {SWIG_LUA_CONSTTAB_INT("PdfCMapEncoding_eBaseEncoding_WinAnsi", PoDoFo::PdfCMapEncoding::eBaseEncoding_WinAnsi)},
    {SWIG_LUA_CONSTTAB_INT("PdfCMapEncoding_eBaseEncoding_MacRoman", PoDoFo::PdfCMapEncoding::eBaseEncoding_MacRoman)},
    {SWIG_LUA_CONSTTAB_INT("PdfCMapEncoding_eBaseEncoding_MacExpert", PoDoFo::PdfCMapEncoding::eBaseEncoding_MacExpert)},
    {SWIG_LUA_CONSTTAB_INT("PdfDifferenceEncoding_eBaseEncoding_Font", PoDoFo::PdfDifferenceEncoding::eBaseEncoding_Font)},
    {SWIG_LUA_CONSTTAB_INT("PdfDifferenceEncoding_eBaseEncoding_WinAnsi", PoDoFo::PdfDifferenceEncoding::eBaseEncoding_WinAnsi)},
    {SWIG_LUA_CONSTTAB_INT("PdfDifferenceEncoding_eBaseEncoding_MacRoman", PoDoFo::PdfDifferenceEncoding::eBaseEncoding_MacRoman)},
    {SWIG_LUA_CONSTTAB_INT("PdfDifferenceEncoding_eBaseEncoding_MacExpert", PoDoFo::PdfDifferenceEncoding::eBaseEncoding_MacExpert)},
    {SWIG_LUA_CONSTTAB_INT("ePdfField_PushButton", PoDoFo::ePdfField_PushButton)},
    {SWIG_LUA_CONSTTAB_INT("ePdfField_CheckBox", PoDoFo::ePdfField_CheckBox)},
    {SWIG_LUA_CONSTTAB_INT("ePdfField_RadioButton", PoDoFo::ePdfField_RadioButton)},
    {SWIG_LUA_CONSTTAB_INT("ePdfField_TextField", PoDoFo::ePdfField_TextField)},
    {SWIG_LUA_CONSTTAB_INT("ePdfField_ComboBox", PoDoFo::ePdfField_ComboBox)},
    {SWIG_LUA_CONSTTAB_INT("ePdfField_ListBox", PoDoFo::ePdfField_ListBox)},
    {SWIG_LUA_CONSTTAB_INT("ePdfField_Signature", PoDoFo::ePdfField_Signature)},
    {SWIG_LUA_CONSTTAB_INT("ePdfField_Unknown", PoDoFo::ePdfField_Unknown)},
    {SWIG_LUA_CONSTTAB_INT("ePdfHighlightingMode_None", PoDoFo::ePdfHighlightingMode_None)},
    {SWIG_LUA_CONSTTAB_INT("ePdfHighlightingMode_Invert", PoDoFo::ePdfHighlightingMode_Invert)},
    {SWIG_LUA_CONSTTAB_INT("ePdfHighlightingMode_InvertOutline", PoDoFo::ePdfHighlightingMode_InvertOutline)},
    {SWIG_LUA_CONSTTAB_INT("ePdfHighlightingMode_Push", PoDoFo::ePdfHighlightingMode_Push)},
    {SWIG_LUA_CONSTTAB_INT("ePdfHighlightingMode_Unknown", PoDoFo::ePdfHighlightingMode_Unknown)},
    {SWIG_LUA_CONSTTAB_INT("PdfFontCache_eFontCreationFlags_None", PoDoFo::PdfFontCache::eFontCreationFlags_None)},
    {SWIG_LUA_CONSTTAB_INT("PdfFontCache_eFontCreationFlags_AutoSelectBase14", PoDoFo::PdfFontCache::eFontCreationFlags_AutoSelectBase14)},
    {SWIG_LUA_CONSTTAB_INT("PdfFontCache_eFontCreationFlags_Type1Subsetting", PoDoFo::PdfFontCache::eFontCreationFlags_Type1Subsetting)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFont_Normal", PoDoFo::ePdfFont_Normal)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFont_Embedded", PoDoFo::ePdfFont_Embedded)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFont_Bold", PoDoFo::ePdfFont_Bold)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFont_Italic", PoDoFo::ePdfFont_Italic)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFont_BoldItalic", PoDoFo::ePdfFont_BoldItalic)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFont_Subsetting", PoDoFo::ePdfFont_Subsetting)},
    {SWIG_LUA_CONSTTAB_STRING("PODOFO_HPDF_FONT_COURIER", "Courier")},
    {SWIG_LUA_CONSTTAB_STRING("PODOFO_HPDF_FONT_COURIER_BOLD", "Courier-Bold")},
    {SWIG_LUA_CONSTTAB_STRING("PODOFO_HPDF_FONT_COURIER_OBLIQUE", "Courier-Oblique")},
    {SWIG_LUA_CONSTTAB_STRING("PODOFO_HPDF_FONT_COURIER_BOLD_OBLIQUE", "Courier-BoldOblique")},
    {SWIG_LUA_CONSTTAB_STRING("PODOFO_HPDF_FONT_HELVETICA", "Helvetica")},
    {SWIG_LUA_CONSTTAB_STRING("PODOFO_HPDF_FONT_HELVETICA_BOLD", "Helvetica-Bold")},
    {SWIG_LUA_CONSTTAB_STRING("PODOFO_HPDF_FONT_HELVETICA_OBLIQUE", "Helvetica-Oblique")},
    {SWIG_LUA_CONSTTAB_STRING("PODOFO_HPDF_FONT_HELVETICA_BOLD_OBLIQUE", "Helvetica-BoldOblique")},
    {SWIG_LUA_CONSTTAB_STRING("PODOFO_HPDF_FONT_TIMES_ROMAN", "Times-Roman")},
    {SWIG_LUA_CONSTTAB_STRING("PODOFO_HPDF_FONT_TIMES_BOLD", "Times-Bold")},
    {SWIG_LUA_CONSTTAB_STRING("PODOFO_HPDF_FONT_TIMES_ITALIC", "Times-Italic")},
    {SWIG_LUA_CONSTTAB_STRING("PODOFO_HPDF_FONT_TIMES_BOLD_ITALIC", "Times-BoldItalic")},
    {SWIG_LUA_CONSTTAB_STRING("PODOFO_HPDF_FONT_SYMBOL", "Symbol")},
    {SWIG_LUA_CONSTTAB_STRING("PODOFO_HPDF_FONT_ZAPF_DINGBATS", "ZapfDingbats")},
    {SWIG_LUA_CONSTTAB_INT("PdfFontTTFSubset_eFontFileType_TTF", PoDoFo::PdfFontTTFSubset::eFontFileType_TTF)},
    {SWIG_LUA_CONSTTAB_INT("PdfFontTTFSubset_eFontFileType_TTC", PoDoFo::PdfFontTTFSubset::eFontFileType_TTC)},
    {SWIG_LUA_CONSTTAB_INT("PdfFontTTFSubset_eFontFileType_OTF", PoDoFo::PdfFontTTFSubset::eFontFileType_OTF)},
    {SWIG_LUA_CONSTTAB_INT("PdfFontTTFSubset_eFontFileType_Unknown", PoDoFo::PdfFontTTFSubset::eFontFileType_Unknown)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFunctionType_Sampled", PoDoFo::ePdfFunctionType_Sampled)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFunctionType_Exponential", PoDoFo::ePdfFunctionType_Exponential)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFunctionType_Stitching", PoDoFo::ePdfFunctionType_Stitching)},
    {SWIG_LUA_CONSTTAB_INT("ePdfFunctionType_PostScript", PoDoFo::ePdfFunctionType_PostScript)},
    {SWIG_LUA_CONSTTAB_INT("PdfInfo_ePdfInfoInitial_WriteCreationTime", PoDoFo::PdfInfo::ePdfInfoInitial_WriteCreationTime)},
    {SWIG_LUA_CONSTTAB_INT("PdfInfo_ePdfInfoInitial_WriteModificationTime", PoDoFo::PdfInfo::ePdfInfoInitial_WriteModificationTime)},
    {SWIG_LUA_CONSTTAB_INT("PdfInfo_ePdfInfoInitial_WriteProducer", PoDoFo::PdfInfo::ePdfInfoInitial_WriteProducer)},
    {SWIG_LUA_CONSTTAB_INT("ePdfNameLimits_Before", PoDoFo::ePdfNameLimits_Before)},
    {SWIG_LUA_CONSTTAB_INT("ePdfNameLimits_Inside", PoDoFo::ePdfNameLimits_Inside)},
    {SWIG_LUA_CONSTTAB_INT("ePdfNameLimits_After", PoDoFo::ePdfNameLimits_After)},
    {SWIG_LUA_CONSTTAB_INT("ePdfOutlineFormat_Default", PoDoFo::ePdfOutlineFormat_Default)},
    {SWIG_LUA_CONSTTAB_INT("ePdfOutlineFormat_Italic", PoDoFo::ePdfOutlineFormat_Italic)},
    {SWIG_LUA_CONSTTAB_INT("ePdfOutlineFormat_Bold", PoDoFo::ePdfOutlineFormat_Bold)},
    {SWIG_LUA_CONSTTAB_INT("ePdfOutlineFormat_BoldItalic", PoDoFo::ePdfOutlineFormat_BoldItalic)},
    {SWIG_LUA_CONSTTAB_INT("ePdfOutlineFormat_Unknown", PoDoFo::ePdfOutlineFormat_Unknown)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageInsertionPoint_InsertBeforeFirstPage", PoDoFo::ePdfPageInsertionPoint_InsertBeforeFirstPage)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageInsertionPoint_InsertLastPage", PoDoFo::ePdfPageInsertionPoint_InsertLastPage)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageInsertionPoint_InsertAllPages", PoDoFo::ePdfPageInsertionPoint_InsertAllPages)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageInsertionPoint_InsertOddPagesOnly", PoDoFo::ePdfPageInsertionPoint_InsertOddPagesOnly)},
    {SWIG_LUA_CONSTTAB_INT("ePdfPageInsertionPoint_InsertEvenPagesOnly", PoDoFo::ePdfPageInsertionPoint_InsertEvenPagesOnly)},
    {SWIG_LUA_CONSTTAB_FLOAT("CONVERSION_CONSTANT", 0.002834645669291339)},
    {SWIG_LUA_CONSTTAB_INT("ePdfShadingPatternType_FunctionBase", PoDoFo::ePdfShadingPatternType_FunctionBase)},
    {SWIG_LUA_CONSTTAB_INT("ePdfShadingPatternType_Axial", PoDoFo::ePdfShadingPatternType_Axial)},
    {SWIG_LUA_CONSTTAB_INT("ePdfShadingPatternType_Radial", PoDoFo::ePdfShadingPatternType_Radial)},
    {SWIG_LUA_CONSTTAB_INT("ePdfShadingPatternType_FreeForm", PoDoFo::ePdfShadingPatternType_FreeForm)},
    {SWIG_LUA_CONSTTAB_INT("ePdfShadingPatternType_LatticeForm", PoDoFo::ePdfShadingPatternType_LatticeForm)},
    {SWIG_LUA_CONSTTAB_INT("ePdfShadingPatternType_CoonsPatch", PoDoFo::ePdfShadingPatternType_CoonsPatch)},
    {SWIG_LUA_CONSTTAB_INT("ePdfShadingPatternType_TensorProduct", PoDoFo::ePdfShadingPatternType_TensorProduct)},
    {0,0,0,0,0,0}
};
static swig_lua_method swig_SwigModule_methods[]= {
    { "PdfCanvas_GetProcSet", _wrap_PdfCanvas_GetProcSet},
    { "PdfString_ConvertUTF8toUTF16", _wrap_PdfString_ConvertUTF8toUTF16},
    { "PdfString_ConvertUTF16toUTF8", _wrap_PdfString_ConvertUTF16toUTF8},
    { "PdfError_SetLogMessageCallback", _wrap_PdfError_SetLogMessageCallback},
    { "PdfError_ErrorName", _wrap_PdfError_ErrorName},
    { "PdfError_ErrorMessage", _wrap_PdfError_ErrorMessage},
    { "PdfError_LogMessage", _wrap_PdfError_LogMessage},
    { "PdfError_EnableLogging", _wrap_PdfError_EnableLogging},
    { "PdfError_LoggingEnabled", _wrap_PdfError_LoggingEnabled},
    { "PdfError_DebugMessage", _wrap_PdfError_DebugMessage},
    { "PdfError_EnableDebug", _wrap_PdfError_EnableDebug},
    { "PdfError_DebugEnabled", _wrap_PdfError_DebugEnabled},
    { "PdfDifferenceEncoding_NameToUnicodeID", _wrap_PdfDifferenceEncoding_NameToUnicodeID},
    { "PdfDifferenceEncoding_UnicodeIDToName", _wrap_PdfDifferenceEncoding_UnicodeIDToName},
    { "PdfEncodingObjectFactory_CreateEncoding", _wrap_PdfEncodingObjectFactory_CreateEncoding},
    { "PdfFontFactory_CreateFontObject", _wrap_PdfFontFactory_CreateFontObject},
    { "PdfFontFactory_CreateFont", _wrap_PdfFontFactory_CreateFont},
    { "PdfFontFactory_CreateBase14Font", _wrap_PdfFontFactory_CreateBase14Font},
    { "PdfFontFactory_GetFontType", _wrap_PdfFontFactory_GetFontType},
    { "PdfImage_GetSupportedFormats", _wrap_PdfImage_GetSupportedFormats},
    { "PdfNamesTree_CheckLimits", _wrap_PdfNamesTree_CheckLimits},
    { "PdfPage_CreateStandardPageSize", _wrap_PdfPage_CreateStandardPageSize},
    {0,0}
};
static swig_lua_class* swig_SwigModule_classes[]= {
&_wrap_class_PdfElement,
&_wrap_class_PdfAcroForm,
&_wrap_class_PdfAction,
&_wrap_class_PdfDestination,
&_wrap_class_PdfAnnotation,
&_wrap_class_PdfCanvas,
&_wrap_class_PdfRect,
&_wrap_class_PdfString,
&_wrap_class_PdfErrorInfo,
&_wrap_class_PdfError,
&_wrap_class_PdfCMapEncoding,
&_wrap_class_PdfContents,
&_wrap_class_PdfEncodingDifference,
&_wrap_class_PdfDifferenceEncoding,
&_wrap_class_PdfDocument,
&_wrap_class_PdfEncodingObjectFactory,
&_wrap_class_PdfExtGState,
&_wrap_class_PdfField,
&_wrap_class_PdfButton,
&_wrap_class_PdfPushButton,
&_wrap_class_PdfCheckBox,
&_wrap_class_PdfTextField,
&_wrap_class_PdfListField,
&_wrap_class_PdfComboBox,
&_wrap_class_PdfListBox,
&_wrap_class_PdfFileSpec,
&_wrap_class_PdfFont,
&_wrap_class_PdfFontCID,
&_wrap_class_TFontCacheElement,
&_wrap_class_PdfFontCache,
&_wrap_class_PdfFontConfigWrapper,
&_wrap_class_PdfFontFactory,
&_wrap_class_PODOFO_CharData,
&_wrap_class_PdfFontSimple,
&_wrap_class_PdfFontTTFSubset,
&_wrap_class_PdfFunction,
&_wrap_class_PdfSampledFunction,
&_wrap_class_PdfExponentialFunction,
&_wrap_class_PdfStitchingFunction,
&_wrap_class_PdfHintStream,
&_wrap_class_PdfIdentityEncoding,
&_wrap_class_PdfXObject,
&_wrap_class_PdfImage,
&_wrap_class_PdfInfo,
&_wrap_class_PdfStreamedDocument,
&_wrap_class_PdfMemDocument,
&_wrap_class_PdfNamesTree,
&_wrap_class_PdfOutlineItem,
&_wrap_class_PdfOutlines,
&_wrap_class_PdfPage,
&_wrap_class_PdfPagesTree,
&_wrap_class_PdfPagesTreeCache,
&_wrap_class_TLineElement,
&_wrap_class_PdfPainter,
&_wrap_class_PdfPainterMM,
&_wrap_class_PdfShadingPattern,
&_wrap_class_PdfAxialShadingPattern,
&_wrap_class_PdfFunctionBaseShadingPattern,
&_wrap_class_PdfRadialShadingPattern,
&_wrap_class_PdfTriangleShadingPattern,
&_wrap_class_PdfSigIncPainter,
&_wrap_class_PdfSignOutputDevice,
&_wrap_class_PdfSignatureField,
&_wrap_class_PdfTableModel,
&_wrap_class_PdfSimpleTableModel,
&_wrap_class_PdfTable,
&_wrap_class_PdfTilingPattern,
    0
};
static swig_lua_namespace* swig_SwigModule_namespaces[] = {
    0
};

static swig_lua_namespace swig_SwigModule = {
    "podofo",
    swig_SwigModule_methods,
    swig_SwigModule_attributes,
    swig_SwigModule_constants,
    swig_SwigModule_classes,
    swig_SwigModule_namespaces
};
#ifdef __cplusplus
}
#endif

/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_PoDoFo__PdfXObjectTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::PdfXObject *) x));
}
static void *_p_PoDoFo__PdfAnnotationTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::PdfAnnotation *) x));
}
static void *_p_PoDoFo__PdfNamesTreeTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::PdfNamesTree *) x));
}
static void *_p_PoDoFo__PdfOutlineItemTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::PdfOutlineItem *) x));
}
static void *_p_PoDoFo__PdfPagesTreeTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::PdfPagesTree *) x));
}
static void *_p_PoDoFo__PdfPageTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::PdfPage *) x));
}
static void *_p_PoDoFo__PdfContentsTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::PdfContents *) x));
}
static void *_p_PoDoFo__PdfFontTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::PdfFont *) x));
}
static void *_p_PoDoFo__PdfInfoTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::PdfInfo *) x));
}
static void *_p_PoDoFo__PdfShadingPatternTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::PdfShadingPattern *) x));
}
static void *_p_PoDoFo__PdfAxialShadingPatternTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *) (PoDoFo::PdfShadingPattern *) ((PoDoFo::PdfAxialShadingPattern *) x));
}
static void *_p_PoDoFo__PdfFunctionBaseShadingPatternTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *) (PoDoFo::PdfShadingPattern *) ((PoDoFo::PdfFunctionBaseShadingPattern *) x));
}
static void *_p_PoDoFo__PdfRadialShadingPatternTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *) (PoDoFo::PdfShadingPattern *) ((PoDoFo::PdfRadialShadingPattern *) x));
}
static void *_p_PoDoFo__PdfTriangleShadingPatternTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *) (PoDoFo::PdfShadingPattern *) ((PoDoFo::PdfTriangleShadingPattern *) x));
}
static void *_p_PoDoFo__PdfTilingPatternTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::PdfTilingPattern *) x));
}
static void *_p_PoDoFo__PdfExponentialFunctionTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *) (PoDoFo::PdfFunction *) ((PoDoFo::PdfExponentialFunction *) x));
}
static void *_p_PoDoFo__PdfSampledFunctionTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *) (PoDoFo::PdfFunction *) ((PoDoFo::PdfSampledFunction *) x));
}
static void *_p_PoDoFo__PdfFunctionTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::PdfFunction *) x));
}
static void *_p_PoDoFo__PdfDifferenceEncodingTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::PdfDifferenceEncoding *) x));
}
static void *_p_PoDoFo__PdfCMapEncodingTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::PdfCMapEncoding *) x));
}
static void *_p_PoDoFo__PdfFontSimpleTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *) (PoDoFo::PdfFont *) ((PoDoFo::PdfFontSimple *) x));
}
static void *_p_PoDoFo__PdfStitchingFunctionTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *) (PoDoFo::PdfFunction *) ((PoDoFo::PdfStitchingFunction *) x));
}
static void *_p_PoDoFo__PdfOutlinesTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *) (PoDoFo::PdfOutlineItem *) ((PoDoFo::PdfOutlines *) x));
}
static void *_p_PoDoFo__PdfExtGStateTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::PdfExtGState *) x));
}
static void *_p_PoDoFo__NonPublic__PdfHintStreamTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::NonPublic::PdfHintStream *) x));
}
static void *_p_PoDoFo__PdfImageTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *) (PoDoFo::PdfXObject *) ((PoDoFo::PdfImage *) x));
}
static void *_p_PoDoFo__PdfFontCIDTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *) (PoDoFo::PdfFont *) ((PoDoFo::PdfFontCID *) x));
}
static void *_p_PoDoFo__PdfFileSpecTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::PdfFileSpec *) x));
}
static void *_p_PoDoFo__PdfAcroFormTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::PdfAcroForm *) x));
}
static void *_p_PoDoFo__PdfActionTo_p_PoDoFo__PdfElement(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfElement *)  ((PoDoFo::PdfAction *) x));
}
static void *_p_PoDoFo__PdfStreamedDocumentTo_p_PoDoFo__PdfDocument(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfDocument *)  ((PoDoFo::PdfStreamedDocument *) x));
}
static void *_p_PoDoFo__PdfMemDocumentTo_p_PoDoFo__PdfDocument(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfDocument *)  ((PoDoFo::PdfMemDocument *) x));
}
static void *_p_PoDoFo__PdfImageTo_p_PoDoFo__PdfXObject(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfXObject *)  ((PoDoFo::PdfImage *) x));
}
static void *_p_PoDoFo__PdfPainterMMTo_p_PoDoFo__PdfPainter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfPainter *)  ((PoDoFo::PdfPainterMM *) x));
}
static void *_p_PoDoFo__PdfSigIncPainterTo_p_PoDoFo__PdfPainter(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfPainter *)  ((PoDoFo::PdfSigIncPainter *) x));
}
static void *_p_PoDoFo__PdfOutlinesTo_p_PoDoFo__PdfOutlineItem(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfOutlineItem *)  ((PoDoFo::PdfOutlines *) x));
}
static void *_p_PoDoFo__PdfPushButtonTo_p_PoDoFo__PdfButton(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfButton *)  ((PoDoFo::PdfPushButton *) x));
}
static void *_p_PoDoFo__PdfCheckBoxTo_p_PoDoFo__PdfButton(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfButton *)  ((PoDoFo::PdfCheckBox *) x));
}
static void *_p_PoDoFo__PdfComboBoxTo_p_PoDoFo__PdfListField(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfListField *)  ((PoDoFo::PdfComboBox *) x));
}
static void *_p_PoDoFo__PdfListBoxTo_p_PoDoFo__PdfListField(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfListField *)  ((PoDoFo::PdfListBox *) x));
}
static void *_p_PoDoFo__PdfAxialShadingPatternTo_p_PoDoFo__PdfShadingPattern(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfShadingPattern *)  ((PoDoFo::PdfAxialShadingPattern *) x));
}
static void *_p_PoDoFo__PdfFunctionBaseShadingPatternTo_p_PoDoFo__PdfShadingPattern(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfShadingPattern *)  ((PoDoFo::PdfFunctionBaseShadingPattern *) x));
}
static void *_p_PoDoFo__PdfRadialShadingPatternTo_p_PoDoFo__PdfShadingPattern(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfShadingPattern *)  ((PoDoFo::PdfRadialShadingPattern *) x));
}
static void *_p_PoDoFo__PdfTriangleShadingPatternTo_p_PoDoFo__PdfShadingPattern(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfShadingPattern *)  ((PoDoFo::PdfTriangleShadingPattern *) x));
}
static void *_p_PoDoFo__PdfSampledFunctionTo_p_PoDoFo__PdfFunction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfFunction *)  ((PoDoFo::PdfSampledFunction *) x));
}
static void *_p_PoDoFo__PdfExponentialFunctionTo_p_PoDoFo__PdfFunction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfFunction *)  ((PoDoFo::PdfExponentialFunction *) x));
}
static void *_p_PoDoFo__PdfStitchingFunctionTo_p_PoDoFo__PdfFunction(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfFunction *)  ((PoDoFo::PdfStitchingFunction *) x));
}
static void *_p_PoDoFo__PdfFontSimpleTo_p_PoDoFo__PdfFont(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfFont *)  ((PoDoFo::PdfFontSimple *) x));
}
static void *_p_PoDoFo__PdfFontCIDTo_p_PoDoFo__PdfFont(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfFont *)  ((PoDoFo::PdfFontCID *) x));
}
static void *_p_PoDoFo__PdfPageTo_p_PoDoFo__PdfCanvas(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfCanvas *)  ((PoDoFo::PdfPage *) x));
}
static void *_p_PoDoFo__PdfImageTo_p_PoDoFo__PdfCanvas(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfCanvas *) (PoDoFo::PdfXObject *) ((PoDoFo::PdfImage *) x));
}
static void *_p_PoDoFo__PdfXObjectTo_p_PoDoFo__PdfCanvas(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfCanvas *)  ((PoDoFo::PdfXObject *) x));
}
static void *_p_PoDoFo__PdfComboBoxTo_p_PoDoFo__PdfField(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfField *) (PoDoFo::PdfListField *) ((PoDoFo::PdfComboBox *) x));
}
static void *_p_PoDoFo__PdfButtonTo_p_PoDoFo__PdfField(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfField *)  ((PoDoFo::PdfButton *) x));
}
static void *_p_PoDoFo__PdfPushButtonTo_p_PoDoFo__PdfField(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfField *) (PoDoFo::PdfButton *) ((PoDoFo::PdfPushButton *) x));
}
static void *_p_PoDoFo__PdfListBoxTo_p_PoDoFo__PdfField(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfField *) (PoDoFo::PdfListField *) ((PoDoFo::PdfListBox *) x));
}
static void *_p_PoDoFo__PdfSignatureFieldTo_p_PoDoFo__PdfField(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfField *)  ((PoDoFo::PdfSignatureField *) x));
}
static void *_p_PoDoFo__PdfListFieldTo_p_PoDoFo__PdfField(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfField *)  ((PoDoFo::PdfListField *) x));
}
static void *_p_PoDoFo__PdfTextFieldTo_p_PoDoFo__PdfField(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfField *)  ((PoDoFo::PdfTextField *) x));
}
static void *_p_PoDoFo__PdfCheckBoxTo_p_PoDoFo__PdfField(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfField *) (PoDoFo::PdfButton *) ((PoDoFo::PdfCheckBox *) x));
}
static void *_p_PoDoFo__PdfSimpleTableModelTo_p_PoDoFo__PdfTableModel(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((PoDoFo::PdfTableModel *)  ((PoDoFo::PdfSimpleTableModel *) x));
}
static swig_type_info _swigt__p_FT_Library = {"_p_FT_Library", "FT_Library *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_List = {"_p_List", "List *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PdfArray = {"_p_PdfArray", "PdfArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PdfData = {"_p_PdfData", "PdfData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PdfDate = {"_p_PdfDate", "PdfDate *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PdfDictionary = {"_p_PdfDictionary", "PdfDictionary *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PdfEncrypt = {"_p_PdfEncrypt", "PdfEncrypt *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PdfFont = {"_p_PdfFont", "PdfFont *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PdfFontCache__EFontCreationFlags = {"_p_PdfFontCache__EFontCreationFlags", "PdfFontCache::EFontCreationFlags *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PdfFontMetrics = {"_p_PdfFontMetrics", "PdfFontMetrics *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PdfFontMetricsBase14 = {"_p_PdfFontMetricsBase14", "PdfFontMetricsBase14 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PdfObject = {"_p_PdfObject", "PdfObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PdfRefCountedBuffer = {"_p_PdfRefCountedBuffer", "PdfRefCountedBuffer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PdfRefCountedInputDevice = {"_p_PdfRefCountedInputDevice", "PdfRefCountedInputDevice *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PdfStream = {"_p_PdfStream", "PdfStream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__NonPublic__PdfHintStream = {"_p_PoDoFo__NonPublic__PdfHintStream", "PoDoFo::NonPublic::PdfHintStream *", 0, 0, (void*)&_wrap_class_PdfHintStream, 0};
static swig_type_info _swigt__p_PoDoFo__PODOFO_CharData = {"_p_PoDoFo__PODOFO_CharData", "PoDoFo::PODOFO_CharData *", 0, 0, (void*)&_wrap_class_PODOFO_CharData, 0};
static swig_type_info _swigt__p_PoDoFo__PdfAcroForm = {"_p_PoDoFo__PdfAcroForm", "PoDoFo::PdfAcroForm *", 0, 0, (void*)&_wrap_class_PdfAcroForm, 0};
static swig_type_info _swigt__p_PoDoFo__PdfAction = {"_p_PoDoFo__PdfAction", "PoDoFo::PdfAction *", 0, 0, (void*)&_wrap_class_PdfAction, 0};
static swig_type_info _swigt__p_PoDoFo__PdfAnnotation = {"_p_PoDoFo__PdfAnnotation", "PoDoFo::PdfAnnotation *", 0, 0, (void*)&_wrap_class_PdfAnnotation, 0};
static swig_type_info _swigt__p_PoDoFo__PdfArray = {"_p_PoDoFo__PdfArray", "PoDoFo::PdfArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__PdfAxialShadingPattern = {"_p_PoDoFo__PdfAxialShadingPattern", "PoDoFo::PdfAxialShadingPattern *", 0, 0, (void*)&_wrap_class_PdfAxialShadingPattern, 0};
static swig_type_info _swigt__p_PoDoFo__PdfButton = {"_p_PoDoFo__PdfButton", "PoDoFo::PdfButton *", 0, 0, (void*)&_wrap_class_PdfButton, 0};
static swig_type_info _swigt__p_PoDoFo__PdfCMapEncoding = {"_p_PoDoFo__PdfCMapEncoding", "PoDoFo::PdfCMapEncoding *", 0, 0, (void*)&_wrap_class_PdfCMapEncoding, 0};
static swig_type_info _swigt__p_PoDoFo__PdfCanvas = {"_p_PoDoFo__PdfCanvas", "PoDoFo::PdfCanvas *", 0, 0, (void*)&_wrap_class_PdfCanvas, 0};
static swig_type_info _swigt__p_PoDoFo__PdfCheckBox = {"_p_PoDoFo__PdfCheckBox", "PoDoFo::PdfCheckBox *", 0, 0, (void*)&_wrap_class_PdfCheckBox, 0};
static swig_type_info _swigt__p_PoDoFo__PdfColor = {"_p_PoDoFo__PdfColor", "PoDoFo::PdfColor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__PdfComboBox = {"_p_PoDoFo__PdfComboBox", "PoDoFo::PdfComboBox *", 0, 0, (void*)&_wrap_class_PdfComboBox, 0};
static swig_type_info _swigt__p_PoDoFo__PdfContents = {"_p_PoDoFo__PdfContents", "PoDoFo::PdfContents *", 0, 0, (void*)&_wrap_class_PdfContents, 0};
static swig_type_info _swigt__p_PoDoFo__PdfDestination = {"_p_PoDoFo__PdfDestination", "PoDoFo::PdfDestination *", 0, 0, (void*)&_wrap_class_PdfDestination, 0};
static swig_type_info _swigt__p_PoDoFo__PdfDictionary = {"_p_PoDoFo__PdfDictionary", "PoDoFo::PdfDictionary *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__PdfDifferenceEncoding = {"_p_PoDoFo__PdfDifferenceEncoding", "PoDoFo::PdfDifferenceEncoding *", 0, 0, (void*)&_wrap_class_PdfDifferenceEncoding, 0};
static swig_type_info _swigt__p_PoDoFo__PdfDocument = {"_p_PoDoFo__PdfDocument", "PoDoFo::PdfDocument *", 0, 0, (void*)&_wrap_class_PdfDocument, 0};
static swig_type_info _swigt__p_PoDoFo__PdfElement = {"_p_PoDoFo__PdfElement", "PoDoFo::PdfElement *", 0, 0, (void*)&_wrap_class_PdfElement, 0};
static swig_type_info _swigt__p_PoDoFo__PdfEncoding = {"_p_PoDoFo__PdfEncoding", "PoDoFo::PdfEncoding *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__PdfEncodingDifference = {"_p_PoDoFo__PdfEncodingDifference", "PoDoFo::PdfEncodingDifference *", 0, 0, (void*)&_wrap_class_PdfEncodingDifference, 0};
static swig_type_info _swigt__p_PoDoFo__PdfEncodingObjectFactory = {"_p_PoDoFo__PdfEncodingObjectFactory", "PoDoFo::PdfEncodingObjectFactory *", 0, 0, (void*)&_wrap_class_PdfEncodingObjectFactory, 0};
static swig_type_info _swigt__p_PoDoFo__PdfEncrypt = {"_p_PoDoFo__PdfEncrypt", "PoDoFo::PdfEncrypt *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__PdfEncrypt__EPdfEncryptAlgorithm = {"_p_PoDoFo__PdfEncrypt__EPdfEncryptAlgorithm", "PoDoFo::PdfEncrypt::EPdfEncryptAlgorithm *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__PdfEncrypt__EPdfKeyLength = {"_p_PoDoFo__PdfEncrypt__EPdfKeyLength", "PoDoFo::PdfEncrypt::EPdfKeyLength *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__PdfError = {"_p_PoDoFo__PdfError", "PoDoFo::PdfError *", 0, 0, (void*)&_wrap_class_PdfError, 0};
static swig_type_info _swigt__p_PoDoFo__PdfErrorInfo = {"_p_PoDoFo__PdfErrorInfo", "PoDoFo::PdfErrorInfo *", 0, 0, (void*)&_wrap_class_PdfErrorInfo, 0};
static swig_type_info _swigt__p_PoDoFo__PdfError__LogMessageCallback = {"_p_PoDoFo__PdfError__LogMessageCallback", "PoDoFo::PdfError::LogMessageCallback *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__PdfExponentialFunction = {"_p_PoDoFo__PdfExponentialFunction", "PoDoFo::PdfExponentialFunction *", 0, 0, (void*)&_wrap_class_PdfExponentialFunction, 0};
static swig_type_info _swigt__p_PoDoFo__PdfExtGState = {"_p_PoDoFo__PdfExtGState", "PoDoFo::PdfExtGState *", 0, 0, (void*)&_wrap_class_PdfExtGState, 0};
static swig_type_info _swigt__p_PoDoFo__PdfField = {"_p_PoDoFo__PdfField", "PoDoFo::PdfField *", 0, 0, (void*)&_wrap_class_PdfField, 0};
static swig_type_info _swigt__p_PoDoFo__PdfFileSpec = {"_p_PoDoFo__PdfFileSpec", "PoDoFo::PdfFileSpec *", 0, 0, (void*)&_wrap_class_PdfFileSpec, 0};
static swig_type_info _swigt__p_PoDoFo__PdfFont = {"_p_PoDoFo__PdfFont", "PoDoFo::PdfFont *", 0, 0, (void*)&_wrap_class_PdfFont, 0};
static swig_type_info _swigt__p_PoDoFo__PdfFontCID = {"_p_PoDoFo__PdfFontCID", "PoDoFo::PdfFontCID *", 0, 0, (void*)&_wrap_class_PdfFontCID, 0};
static swig_type_info _swigt__p_PoDoFo__PdfFontCache = {"_p_PoDoFo__PdfFontCache", "PoDoFo::PdfFontCache *", 0, 0, (void*)&_wrap_class_PdfFontCache, 0};
static swig_type_info _swigt__p_PoDoFo__PdfFontConfigWrapper = {"_p_PoDoFo__PdfFontConfigWrapper", "PoDoFo::PdfFontConfigWrapper *", 0, 0, (void*)&_wrap_class_PdfFontConfigWrapper, 0};
static swig_type_info _swigt__p_PoDoFo__PdfFontFactory = {"_p_PoDoFo__PdfFontFactory", "PoDoFo::PdfFontFactory *", 0, 0, (void*)&_wrap_class_PdfFontFactory, 0};
static swig_type_info _swigt__p_PoDoFo__PdfFontMetrics = {"_p_PoDoFo__PdfFontMetrics", "PoDoFo::PdfFontMetrics *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__PdfFontSimple = {"_p_PoDoFo__PdfFontSimple", "PoDoFo::PdfFontSimple *", 0, 0, (void*)&_wrap_class_PdfFontSimple, 0};
static swig_type_info _swigt__p_PoDoFo__PdfFontTTFSubset = {"_p_PoDoFo__PdfFontTTFSubset", "PoDoFo::PdfFontTTFSubset *", 0, 0, (void*)&_wrap_class_PdfFontTTFSubset, 0};
static swig_type_info _swigt__p_PoDoFo__PdfFunction = {"_p_PoDoFo__PdfFunction", "PoDoFo::PdfFunction *", 0, 0, (void*)&_wrap_class_PdfFunction, 0};
static swig_type_info _swigt__p_PoDoFo__PdfFunctionBaseShadingPattern = {"_p_PoDoFo__PdfFunctionBaseShadingPattern", "PoDoFo::PdfFunctionBaseShadingPattern *", 0, 0, (void*)&_wrap_class_PdfFunctionBaseShadingPattern, 0};
static swig_type_info _swigt__p_PoDoFo__PdfIdentityEncoding = {"_p_PoDoFo__PdfIdentityEncoding", "PoDoFo::PdfIdentityEncoding *", 0, 0, (void*)&_wrap_class_PdfIdentityEncoding, 0};
static swig_type_info _swigt__p_PoDoFo__PdfImage = {"_p_PoDoFo__PdfImage", "PoDoFo::PdfImage *", 0, 0, (void*)&_wrap_class_PdfImage, 0};
static swig_type_info _swigt__p_PoDoFo__PdfInfo = {"_p_PoDoFo__PdfInfo", "PoDoFo::PdfInfo *", 0, 0, (void*)&_wrap_class_PdfInfo, 0};
static swig_type_info _swigt__p_PoDoFo__PdfInputDevice = {"_p_PoDoFo__PdfInputDevice", "PoDoFo::PdfInputDevice *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__PdfInputStream = {"_p_PoDoFo__PdfInputStream", "PoDoFo::PdfInputStream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__PdfListBox = {"_p_PoDoFo__PdfListBox", "PoDoFo::PdfListBox *", 0, 0, (void*)&_wrap_class_PdfListBox, 0};
static swig_type_info _swigt__p_PoDoFo__PdfListField = {"_p_PoDoFo__PdfListField", "PoDoFo::PdfListField *", 0, 0, (void*)&_wrap_class_PdfListField, 0};
static swig_type_info _swigt__p_PoDoFo__PdfMemDocument = {"_p_PoDoFo__PdfMemDocument", "PoDoFo::PdfMemDocument *", 0, 0, (void*)&_wrap_class_PdfMemDocument, 0};
static swig_type_info _swigt__p_PoDoFo__PdfName = {"_p_PoDoFo__PdfName", "PoDoFo::PdfName *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__PdfNamesTree = {"_p_PoDoFo__PdfNamesTree", "PoDoFo::PdfNamesTree *", 0, 0, (void*)&_wrap_class_PdfNamesTree, 0};
static swig_type_info _swigt__p_PoDoFo__PdfObject = {"_p_PoDoFo__PdfObject", "PoDoFo::PdfObject *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__PdfOutlineItem = {"_p_PoDoFo__PdfOutlineItem", "PoDoFo::PdfOutlineItem *", 0, 0, (void*)&_wrap_class_PdfOutlineItem, 0};
static swig_type_info _swigt__p_PoDoFo__PdfOutlines = {"_p_PoDoFo__PdfOutlines", "PoDoFo::PdfOutlines *", 0, 0, (void*)&_wrap_class_PdfOutlines, 0};
static swig_type_info _swigt__p_PoDoFo__PdfOutputDevice = {"_p_PoDoFo__PdfOutputDevice", "PoDoFo::PdfOutputDevice *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__PdfPage = {"_p_PoDoFo__PdfPage", "PoDoFo::PdfPage *", 0, 0, (void*)&_wrap_class_PdfPage, 0};
static swig_type_info _swigt__p_PoDoFo__PdfPagesTree = {"_p_PoDoFo__PdfPagesTree", "PoDoFo::PdfPagesTree *", 0, 0, (void*)&_wrap_class_PdfPagesTree, 0};
static swig_type_info _swigt__p_PoDoFo__PdfPagesTreeCache = {"_p_PoDoFo__PdfPagesTreeCache", "PoDoFo::PdfPagesTreeCache *", 0, 0, (void*)&_wrap_class_PdfPagesTreeCache, 0};
static swig_type_info _swigt__p_PoDoFo__PdfPainter = {"_p_PoDoFo__PdfPainter", "PoDoFo::PdfPainter *", 0, 0, (void*)&_wrap_class_PdfPainter, 0};
static swig_type_info _swigt__p_PoDoFo__PdfPainterMM = {"_p_PoDoFo__PdfPainterMM", "PoDoFo::PdfPainterMM *", 0, 0, (void*)&_wrap_class_PdfPainterMM, 0};
static swig_type_info _swigt__p_PoDoFo__PdfPushButton = {"_p_PoDoFo__PdfPushButton", "PoDoFo::PdfPushButton *", 0, 0, (void*)&_wrap_class_PdfPushButton, 0};
static swig_type_info _swigt__p_PoDoFo__PdfRadialShadingPattern = {"_p_PoDoFo__PdfRadialShadingPattern", "PoDoFo::PdfRadialShadingPattern *", 0, 0, (void*)&_wrap_class_PdfRadialShadingPattern, 0};
static swig_type_info _swigt__p_PoDoFo__PdfRect = {"_p_PoDoFo__PdfRect", "PoDoFo::PdfRect *", 0, 0, (void*)&_wrap_class_PdfRect, 0};
static swig_type_info _swigt__p_PoDoFo__PdfReference = {"_p_PoDoFo__PdfReference", "PoDoFo::PdfReference *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__PdfSampledFunction = {"_p_PoDoFo__PdfSampledFunction", "PoDoFo::PdfSampledFunction *", 0, 0, (void*)&_wrap_class_PdfSampledFunction, 0};
static swig_type_info _swigt__p_PoDoFo__PdfShadingPattern = {"_p_PoDoFo__PdfShadingPattern", "PoDoFo::PdfShadingPattern *", 0, 0, (void*)&_wrap_class_PdfShadingPattern, 0};
static swig_type_info _swigt__p_PoDoFo__PdfSigIncPainter = {"_p_PoDoFo__PdfSigIncPainter", "PoDoFo::PdfSigIncPainter *", 0, 0, (void*)&_wrap_class_PdfSigIncPainter, 0};
static swig_type_info _swigt__p_PoDoFo__PdfSignOutputDevice = {"_p_PoDoFo__PdfSignOutputDevice", "PoDoFo::PdfSignOutputDevice *", 0, 0, (void*)&_wrap_class_PdfSignOutputDevice, 0};
static swig_type_info _swigt__p_PoDoFo__PdfSignatureField = {"_p_PoDoFo__PdfSignatureField", "PoDoFo::PdfSignatureField *", 0, 0, (void*)&_wrap_class_PdfSignatureField, 0};
static swig_type_info _swigt__p_PoDoFo__PdfSimpleTableModel = {"_p_PoDoFo__PdfSimpleTableModel", "PoDoFo::PdfSimpleTableModel *", 0, 0, (void*)&_wrap_class_PdfSimpleTableModel, 0};
static swig_type_info _swigt__p_PoDoFo__PdfStitchingFunction = {"_p_PoDoFo__PdfStitchingFunction", "PoDoFo::PdfStitchingFunction *", 0, 0, (void*)&_wrap_class_PdfStitchingFunction, 0};
static swig_type_info _swigt__p_PoDoFo__PdfStream = {"_p_PoDoFo__PdfStream", "PoDoFo::PdfStream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__PdfStreamedDocument = {"_p_PoDoFo__PdfStreamedDocument", "PoDoFo::PdfStreamedDocument *", 0, 0, (void*)&_wrap_class_PdfStreamedDocument, 0};
static swig_type_info _swigt__p_PoDoFo__PdfString = {"_p_PoDoFo__PdfString", "PoDoFo::PdfString *", 0, 0, (void*)&_wrap_class_PdfString, 0};
static swig_type_info _swigt__p_PoDoFo__PdfTable = {"_p_PoDoFo__PdfTable", "PoDoFo::PdfTable *", 0, 0, (void*)&_wrap_class_PdfTable, 0};
static swig_type_info _swigt__p_PoDoFo__PdfTableModel = {"_p_PoDoFo__PdfTableModel", "PoDoFo::PdfTableModel *", 0, 0, (void*)&_wrap_class_PdfTableModel, 0};
static swig_type_info _swigt__p_PoDoFo__PdfTextField = {"_p_PoDoFo__PdfTextField", "PoDoFo::PdfTextField *", 0, 0, (void*)&_wrap_class_PdfTextField, 0};
static swig_type_info _swigt__p_PoDoFo__PdfTilingPattern = {"_p_PoDoFo__PdfTilingPattern", "PoDoFo::PdfTilingPattern *", 0, 0, (void*)&_wrap_class_PdfTilingPattern, 0};
static swig_type_info _swigt__p_PoDoFo__PdfTriangleShadingPattern = {"_p_PoDoFo__PdfTriangleShadingPattern", "PoDoFo::PdfTriangleShadingPattern *", 0, 0, (void*)&_wrap_class_PdfTriangleShadingPattern, 0};
static swig_type_info _swigt__p_PoDoFo__PdfVariant = {"_p_PoDoFo__PdfVariant", "PoDoFo::PdfVariant *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__PdfVecObjects = {"_p_PoDoFo__PdfVecObjects", "PoDoFo::PdfVecObjects *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_PoDoFo__PdfXObject = {"_p_PoDoFo__PdfXObject", "PoDoFo::PdfXObject *", 0, 0, (void*)&_wrap_class_PdfXObject, 0};
static swig_type_info _swigt__p_PoDoFo__TFontCacheElement = {"_p_PoDoFo__TFontCacheElement", "PoDoFo::TFontCacheElement *", 0, 0, (void*)&_wrap_class_TFontCacheElement, 0};
static swig_type_info _swigt__p_PoDoFo__TLineElement = {"_p_PoDoFo__TLineElement", "PoDoFo::TLineElement *", 0, 0, (void*)&_wrap_class_TLineElement, 0};
static swig_type_info _swigt__p_Sample = {"_p_Sample", "Sample *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_TVecFilters = {"_p_TVecFilters", "TVecFilters *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_a_4__char = {"_p_a_4__char", "char (*)[4]", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_a_9__char = {"_p_a_9__char", "char (*)[9]", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_f_r_PoDoFo__PdfRect_p_void__p_PoDoFo__PdfPage = {"_p_f_r_PoDoFo__PdfRect_p_void__p_PoDoFo__PdfPage", "PoDoFo::PdfPage *(*)(PoDoFo::PdfRect &,void *)|PoDoFo::PdfTable::CreatePageCallback", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_char = {"_p_p_char", "char **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pdf_int16 = {"_p_pdf_int16", "pdf_int16 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pdf_int64 = {"_p_pdf_int64", "pdf_int64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pdf_long = {"_p_pdf_long", "pdf_long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pdf_uint16 = {"_p_pdf_uint16", "pdf_uint16 *|PoDoFo::pdf_utf16be *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_pdf_uint32 = {"_p_pdf_uint32", "pdf_uint32 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ptrdiff_t = {"_p_ptrdiff_t", "ptrdiff_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__dequeT_PoDoFo__PdfErrorInfo_t = {"_p_std__dequeT_PoDoFo__PdfErrorInfo_t", "PoDoFo::TDequeErrorInfo *|std::deque< PoDoFo::PdfErrorInfo > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__dequeT_PoDoFo__PdfErrorInfo_t__const_iterator = {"_p_std__dequeT_PoDoFo__PdfErrorInfo_t__const_iterator", "PoDoFo::TCIDequeErrorInfo *|std::deque< PoDoFo::PdfErrorInfo >::const_iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__dequeT_PoDoFo__PdfErrorInfo_t__iterator = {"_p_std__dequeT_PoDoFo__PdfErrorInfo_t__iterator", "PoDoFo::TIDequeErrorInfo *|std::deque< PoDoFo::PdfErrorInfo >::iterator *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__dequeT_PoDoFo__PdfObject_p_t = {"_p_std__dequeT_PoDoFo__PdfObject_p_t", "std::deque< PoDoFo::PdfObject * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_PoDoFo__PdfFunction_t = {"_p_std__listT_PoDoFo__PdfFunction_t", "PoDoFo::PdfFunction::List *|std::list< PoDoFo::PdfFunction > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__listT_char_t = {"_p_std__listT_char_t", "std::list< char > *|PoDoFo::PdfFunction::Sample *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t = {"_p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t", "std::map< PoDoFo::PdfReference,PoDoFo::PdfAnnotation * > *|PoDoFo::TMapAnnotation *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t__const_iterator = {"_p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t__const_iterator", "std::map< PoDoFo::PdfReference,PoDoFo::PdfAnnotation * >::const_iterator *|PoDoFo::TCIMapAnnotation *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t__iterator = {"_p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t__iterator", "std::map< PoDoFo::PdfReference,PoDoFo::PdfAnnotation * >::iterator *|PoDoFo::TIMapAnnotation *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__ostringstream = {"_p_std__ostringstream", "std::ostringstream *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__string = {"_p_std__string", "std::string *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_PdfExtension_t = {"_p_std__vectorT_PdfExtension_t", "std::vector< PdfExtension > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_PoDoFo__PdfObject_p_t = {"_p_std__vectorT_PoDoFo__PdfObject_p_t", "std::vector< PoDoFo::PdfObject * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_PoDoFo__PdfPage_p_t = {"_p_std__vectorT_PoDoFo__PdfPage_p_t", "std::vector< PoDoFo::PdfPage * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_PoDoFo__PdfRect_t = {"_p_std__vectorT_PoDoFo__PdfRect_t", "std::vector< PoDoFo::PdfRect > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__vectorT_PoDoFo__PdfString_t = {"_p_std__vectorT_PoDoFo__PdfString_t", "std::vector< PoDoFo::PdfString > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_std__wstring = {"_p_std__wstring", "std::wstring *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_unsigned_char = {"_p_unsigned_char", "unsigned char *|PoDoFo::pdf_utf8 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "void *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_wchar_t = {"_p_wchar_t", "wchar_t *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_FT_Library,
  &_swigt__p_List,
  &_swigt__p_PdfArray,
  &_swigt__p_PdfData,
  &_swigt__p_PdfDate,
  &_swigt__p_PdfDictionary,
  &_swigt__p_PdfEncrypt,
  &_swigt__p_PdfFont,
  &_swigt__p_PdfFontCache__EFontCreationFlags,
  &_swigt__p_PdfFontMetrics,
  &_swigt__p_PdfFontMetricsBase14,
  &_swigt__p_PdfObject,
  &_swigt__p_PdfRefCountedBuffer,
  &_swigt__p_PdfRefCountedInputDevice,
  &_swigt__p_PdfStream,
  &_swigt__p_PoDoFo__NonPublic__PdfHintStream,
  &_swigt__p_PoDoFo__PODOFO_CharData,
  &_swigt__p_PoDoFo__PdfAcroForm,
  &_swigt__p_PoDoFo__PdfAction,
  &_swigt__p_PoDoFo__PdfAnnotation,
  &_swigt__p_PoDoFo__PdfArray,
  &_swigt__p_PoDoFo__PdfAxialShadingPattern,
  &_swigt__p_PoDoFo__PdfButton,
  &_swigt__p_PoDoFo__PdfCMapEncoding,
  &_swigt__p_PoDoFo__PdfCanvas,
  &_swigt__p_PoDoFo__PdfCheckBox,
  &_swigt__p_PoDoFo__PdfColor,
  &_swigt__p_PoDoFo__PdfComboBox,
  &_swigt__p_PoDoFo__PdfContents,
  &_swigt__p_PoDoFo__PdfDestination,
  &_swigt__p_PoDoFo__PdfDictionary,
  &_swigt__p_PoDoFo__PdfDifferenceEncoding,
  &_swigt__p_PoDoFo__PdfDocument,
  &_swigt__p_PoDoFo__PdfElement,
  &_swigt__p_PoDoFo__PdfEncoding,
  &_swigt__p_PoDoFo__PdfEncodingDifference,
  &_swigt__p_PoDoFo__PdfEncodingObjectFactory,
  &_swigt__p_PoDoFo__PdfEncrypt,
  &_swigt__p_PoDoFo__PdfEncrypt__EPdfEncryptAlgorithm,
  &_swigt__p_PoDoFo__PdfEncrypt__EPdfKeyLength,
  &_swigt__p_PoDoFo__PdfError,
  &_swigt__p_PoDoFo__PdfErrorInfo,
  &_swigt__p_PoDoFo__PdfError__LogMessageCallback,
  &_swigt__p_PoDoFo__PdfExponentialFunction,
  &_swigt__p_PoDoFo__PdfExtGState,
  &_swigt__p_PoDoFo__PdfField,
  &_swigt__p_PoDoFo__PdfFileSpec,
  &_swigt__p_PoDoFo__PdfFont,
  &_swigt__p_PoDoFo__PdfFontCID,
  &_swigt__p_PoDoFo__PdfFontCache,
  &_swigt__p_PoDoFo__PdfFontConfigWrapper,
  &_swigt__p_PoDoFo__PdfFontFactory,
  &_swigt__p_PoDoFo__PdfFontMetrics,
  &_swigt__p_PoDoFo__PdfFontSimple,
  &_swigt__p_PoDoFo__PdfFontTTFSubset,
  &_swigt__p_PoDoFo__PdfFunction,
  &_swigt__p_PoDoFo__PdfFunctionBaseShadingPattern,
  &_swigt__p_PoDoFo__PdfIdentityEncoding,
  &_swigt__p_PoDoFo__PdfImage,
  &_swigt__p_PoDoFo__PdfInfo,
  &_swigt__p_PoDoFo__PdfInputDevice,
  &_swigt__p_PoDoFo__PdfInputStream,
  &_swigt__p_PoDoFo__PdfListBox,
  &_swigt__p_PoDoFo__PdfListField,
  &_swigt__p_PoDoFo__PdfMemDocument,
  &_swigt__p_PoDoFo__PdfName,
  &_swigt__p_PoDoFo__PdfNamesTree,
  &_swigt__p_PoDoFo__PdfObject,
  &_swigt__p_PoDoFo__PdfOutlineItem,
  &_swigt__p_PoDoFo__PdfOutlines,
  &_swigt__p_PoDoFo__PdfOutputDevice,
  &_swigt__p_PoDoFo__PdfPage,
  &_swigt__p_PoDoFo__PdfPagesTree,
  &_swigt__p_PoDoFo__PdfPagesTreeCache,
  &_swigt__p_PoDoFo__PdfPainter,
  &_swigt__p_PoDoFo__PdfPainterMM,
  &_swigt__p_PoDoFo__PdfPushButton,
  &_swigt__p_PoDoFo__PdfRadialShadingPattern,
  &_swigt__p_PoDoFo__PdfRect,
  &_swigt__p_PoDoFo__PdfReference,
  &_swigt__p_PoDoFo__PdfSampledFunction,
  &_swigt__p_PoDoFo__PdfShadingPattern,
  &_swigt__p_PoDoFo__PdfSigIncPainter,
  &_swigt__p_PoDoFo__PdfSignOutputDevice,
  &_swigt__p_PoDoFo__PdfSignatureField,
  &_swigt__p_PoDoFo__PdfSimpleTableModel,
  &_swigt__p_PoDoFo__PdfStitchingFunction,
  &_swigt__p_PoDoFo__PdfStream,
  &_swigt__p_PoDoFo__PdfStreamedDocument,
  &_swigt__p_PoDoFo__PdfString,
  &_swigt__p_PoDoFo__PdfTable,
  &_swigt__p_PoDoFo__PdfTableModel,
  &_swigt__p_PoDoFo__PdfTextField,
  &_swigt__p_PoDoFo__PdfTilingPattern,
  &_swigt__p_PoDoFo__PdfTriangleShadingPattern,
  &_swigt__p_PoDoFo__PdfVariant,
  &_swigt__p_PoDoFo__PdfVecObjects,
  &_swigt__p_PoDoFo__PdfXObject,
  &_swigt__p_PoDoFo__TFontCacheElement,
  &_swigt__p_PoDoFo__TLineElement,
  &_swigt__p_Sample,
  &_swigt__p_TVecFilters,
  &_swigt__p_a_4__char,
  &_swigt__p_a_9__char,
  &_swigt__p_char,
  &_swigt__p_double,
  &_swigt__p_f_r_PoDoFo__PdfRect_p_void__p_PoDoFo__PdfPage,
  &_swigt__p_p_char,
  &_swigt__p_pdf_int16,
  &_swigt__p_pdf_int64,
  &_swigt__p_pdf_long,
  &_swigt__p_pdf_uint16,
  &_swigt__p_pdf_uint32,
  &_swigt__p_ptrdiff_t,
  &_swigt__p_std__dequeT_PoDoFo__PdfErrorInfo_t,
  &_swigt__p_std__dequeT_PoDoFo__PdfErrorInfo_t__const_iterator,
  &_swigt__p_std__dequeT_PoDoFo__PdfErrorInfo_t__iterator,
  &_swigt__p_std__dequeT_PoDoFo__PdfObject_p_t,
  &_swigt__p_std__listT_PoDoFo__PdfFunction_t,
  &_swigt__p_std__listT_char_t,
  &_swigt__p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t,
  &_swigt__p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t__const_iterator,
  &_swigt__p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t__iterator,
  &_swigt__p_std__ostringstream,
  &_swigt__p_std__string,
  &_swigt__p_std__vectorT_PdfExtension_t,
  &_swigt__p_std__vectorT_PoDoFo__PdfObject_p_t,
  &_swigt__p_std__vectorT_PoDoFo__PdfPage_p_t,
  &_swigt__p_std__vectorT_PoDoFo__PdfRect_t,
  &_swigt__p_std__vectorT_PoDoFo__PdfString_t,
  &_swigt__p_std__wstring,
  &_swigt__p_unsigned_char,
  &_swigt__p_void,
  &_swigt__p_wchar_t,
};

static swig_cast_info _swigc__p_FT_Library[] = {  {&_swigt__p_FT_Library, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_List[] = {  {&_swigt__p_List, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PdfArray[] = {  {&_swigt__p_PdfArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PdfData[] = {  {&_swigt__p_PdfData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PdfDate[] = {  {&_swigt__p_PdfDate, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PdfDictionary[] = {  {&_swigt__p_PdfDictionary, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PdfEncrypt[] = {  {&_swigt__p_PdfEncrypt, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PdfFont[] = {  {&_swigt__p_PdfFont, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PdfFontCache__EFontCreationFlags[] = {  {&_swigt__p_PdfFontCache__EFontCreationFlags, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PdfFontMetrics[] = {  {&_swigt__p_PdfFontMetrics, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PdfFontMetricsBase14[] = {  {&_swigt__p_PdfFontMetricsBase14, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PdfObject[] = {  {&_swigt__p_PdfObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PdfRefCountedBuffer[] = {  {&_swigt__p_PdfRefCountedBuffer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PdfRefCountedInputDevice[] = {  {&_swigt__p_PdfRefCountedInputDevice, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PdfStream[] = {  {&_swigt__p_PdfStream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__NonPublic__PdfHintStream[] = {  {&_swigt__p_PoDoFo__NonPublic__PdfHintStream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PODOFO_CharData[] = {  {&_swigt__p_PoDoFo__PODOFO_CharData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfAcroForm[] = {  {&_swigt__p_PoDoFo__PdfAcroForm, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfAction[] = {  {&_swigt__p_PoDoFo__PdfAction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfAnnotation[] = {  {&_swigt__p_PoDoFo__PdfAnnotation, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfArray[] = {  {&_swigt__p_PoDoFo__PdfArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfAxialShadingPattern[] = {  {&_swigt__p_PoDoFo__PdfAxialShadingPattern, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfButton[] = {  {&_swigt__p_PoDoFo__PdfButton, 0, 0, 0},  {&_swigt__p_PoDoFo__PdfPushButton, _p_PoDoFo__PdfPushButtonTo_p_PoDoFo__PdfButton, 0, 0},  {&_swigt__p_PoDoFo__PdfCheckBox, _p_PoDoFo__PdfCheckBoxTo_p_PoDoFo__PdfButton, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfCMapEncoding[] = {  {&_swigt__p_PoDoFo__PdfCMapEncoding, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfCanvas[] = {  {&_swigt__p_PoDoFo__PdfPage, _p_PoDoFo__PdfPageTo_p_PoDoFo__PdfCanvas, 0, 0},  {&_swigt__p_PoDoFo__PdfImage, _p_PoDoFo__PdfImageTo_p_PoDoFo__PdfCanvas, 0, 0},  {&_swigt__p_PoDoFo__PdfXObject, _p_PoDoFo__PdfXObjectTo_p_PoDoFo__PdfCanvas, 0, 0},  {&_swigt__p_PoDoFo__PdfCanvas, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfCheckBox[] = {  {&_swigt__p_PoDoFo__PdfCheckBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfColor[] = {  {&_swigt__p_PoDoFo__PdfColor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfComboBox[] = {  {&_swigt__p_PoDoFo__PdfComboBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfContents[] = {  {&_swigt__p_PoDoFo__PdfContents, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfDestination[] = {  {&_swigt__p_PoDoFo__PdfDestination, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfDictionary[] = {  {&_swigt__p_PoDoFo__PdfDictionary, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfDifferenceEncoding[] = {  {&_swigt__p_PoDoFo__PdfDifferenceEncoding, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfDocument[] = {  {&_swigt__p_PoDoFo__PdfDocument, 0, 0, 0},  {&_swigt__p_PoDoFo__PdfStreamedDocument, _p_PoDoFo__PdfStreamedDocumentTo_p_PoDoFo__PdfDocument, 0, 0},  {&_swigt__p_PoDoFo__PdfMemDocument, _p_PoDoFo__PdfMemDocumentTo_p_PoDoFo__PdfDocument, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfElement[] = {  {&_swigt__p_PoDoFo__PdfXObject, _p_PoDoFo__PdfXObjectTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfAnnotation, _p_PoDoFo__PdfAnnotationTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfNamesTree, _p_PoDoFo__PdfNamesTreeTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfPagesTree, _p_PoDoFo__PdfPagesTreeTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfOutlineItem, _p_PoDoFo__PdfOutlineItemTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfPage, _p_PoDoFo__PdfPageTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfContents, _p_PoDoFo__PdfContentsTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfFont, _p_PoDoFo__PdfFontTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfInfo, _p_PoDoFo__PdfInfoTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfRadialShadingPattern, _p_PoDoFo__PdfRadialShadingPatternTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfFunctionBaseShadingPattern, _p_PoDoFo__PdfFunctionBaseShadingPatternTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfAxialShadingPattern, _p_PoDoFo__PdfAxialShadingPatternTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfShadingPattern, _p_PoDoFo__PdfShadingPatternTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfTriangleShadingPattern, _p_PoDoFo__PdfTriangleShadingPatternTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfTilingPattern, _p_PoDoFo__PdfTilingPatternTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfFontSimple, _p_PoDoFo__PdfFontSimpleTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfOutlines, _p_PoDoFo__PdfOutlinesTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfExponentialFunction, _p_PoDoFo__PdfExponentialFunctionTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfSampledFunction, _p_PoDoFo__PdfSampledFunctionTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfFunction, _p_PoDoFo__PdfFunctionTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfStitchingFunction, _p_PoDoFo__PdfStitchingFunctionTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfDifferenceEncoding, _p_PoDoFo__PdfDifferenceEncodingTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfCMapEncoding, _p_PoDoFo__PdfCMapEncodingTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfExtGState, _p_PoDoFo__PdfExtGStateTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfImage, _p_PoDoFo__PdfImageTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__NonPublic__PdfHintStream, _p_PoDoFo__NonPublic__PdfHintStreamTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfFontCID, _p_PoDoFo__PdfFontCIDTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfFileSpec, _p_PoDoFo__PdfFileSpecTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfAcroForm, _p_PoDoFo__PdfAcroFormTo_p_PoDoFo__PdfElement, 0, 0},  {&_swigt__p_PoDoFo__PdfElement, 0, 0, 0},  {&_swigt__p_PoDoFo__PdfAction, _p_PoDoFo__PdfActionTo_p_PoDoFo__PdfElement, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfEncoding[] = {  {&_swigt__p_PoDoFo__PdfEncoding, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfEncodingDifference[] = {  {&_swigt__p_PoDoFo__PdfEncodingDifference, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfEncodingObjectFactory[] = {  {&_swigt__p_PoDoFo__PdfEncodingObjectFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfEncrypt[] = {  {&_swigt__p_PoDoFo__PdfEncrypt, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfEncrypt__EPdfEncryptAlgorithm[] = {  {&_swigt__p_PoDoFo__PdfEncrypt__EPdfEncryptAlgorithm, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfEncrypt__EPdfKeyLength[] = {  {&_swigt__p_PoDoFo__PdfEncrypt__EPdfKeyLength, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfError[] = {  {&_swigt__p_PoDoFo__PdfError, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfErrorInfo[] = {  {&_swigt__p_PoDoFo__PdfErrorInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfError__LogMessageCallback[] = {  {&_swigt__p_PoDoFo__PdfError__LogMessageCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfExponentialFunction[] = {  {&_swigt__p_PoDoFo__PdfExponentialFunction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfExtGState[] = {  {&_swigt__p_PoDoFo__PdfExtGState, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfField[] = {  {&_swigt__p_PoDoFo__PdfComboBox, _p_PoDoFo__PdfComboBoxTo_p_PoDoFo__PdfField, 0, 0},  {&_swigt__p_PoDoFo__PdfButton, _p_PoDoFo__PdfButtonTo_p_PoDoFo__PdfField, 0, 0},  {&_swigt__p_PoDoFo__PdfPushButton, _p_PoDoFo__PdfPushButtonTo_p_PoDoFo__PdfField, 0, 0},  {&_swigt__p_PoDoFo__PdfListBox, _p_PoDoFo__PdfListBoxTo_p_PoDoFo__PdfField, 0, 0},  {&_swigt__p_PoDoFo__PdfSignatureField, _p_PoDoFo__PdfSignatureFieldTo_p_PoDoFo__PdfField, 0, 0},  {&_swigt__p_PoDoFo__PdfListField, _p_PoDoFo__PdfListFieldTo_p_PoDoFo__PdfField, 0, 0},  {&_swigt__p_PoDoFo__PdfField, 0, 0, 0},  {&_swigt__p_PoDoFo__PdfTextField, _p_PoDoFo__PdfTextFieldTo_p_PoDoFo__PdfField, 0, 0},  {&_swigt__p_PoDoFo__PdfCheckBox, _p_PoDoFo__PdfCheckBoxTo_p_PoDoFo__PdfField, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfFileSpec[] = {  {&_swigt__p_PoDoFo__PdfFileSpec, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfFont[] = {  {&_swigt__p_PoDoFo__PdfFontSimple, _p_PoDoFo__PdfFontSimpleTo_p_PoDoFo__PdfFont, 0, 0},  {&_swigt__p_PoDoFo__PdfFontCID, _p_PoDoFo__PdfFontCIDTo_p_PoDoFo__PdfFont, 0, 0},  {&_swigt__p_PoDoFo__PdfFont, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfFontCID[] = {  {&_swigt__p_PoDoFo__PdfFontCID, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfFontCache[] = {  {&_swigt__p_PoDoFo__PdfFontCache, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfFontConfigWrapper[] = {  {&_swigt__p_PoDoFo__PdfFontConfigWrapper, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfFontFactory[] = {  {&_swigt__p_PoDoFo__PdfFontFactory, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfFontMetrics[] = {  {&_swigt__p_PoDoFo__PdfFontMetrics, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfFontSimple[] = {  {&_swigt__p_PoDoFo__PdfFontSimple, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfFontTTFSubset[] = {  {&_swigt__p_PoDoFo__PdfFontTTFSubset, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfFunction[] = {  {&_swigt__p_PoDoFo__PdfFunction, 0, 0, 0},  {&_swigt__p_PoDoFo__PdfSampledFunction, _p_PoDoFo__PdfSampledFunctionTo_p_PoDoFo__PdfFunction, 0, 0},  {&_swigt__p_PoDoFo__PdfExponentialFunction, _p_PoDoFo__PdfExponentialFunctionTo_p_PoDoFo__PdfFunction, 0, 0},  {&_swigt__p_PoDoFo__PdfStitchingFunction, _p_PoDoFo__PdfStitchingFunctionTo_p_PoDoFo__PdfFunction, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfFunctionBaseShadingPattern[] = {  {&_swigt__p_PoDoFo__PdfFunctionBaseShadingPattern, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfIdentityEncoding[] = {  {&_swigt__p_PoDoFo__PdfIdentityEncoding, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfImage[] = {  {&_swigt__p_PoDoFo__PdfImage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfInfo[] = {  {&_swigt__p_PoDoFo__PdfInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfInputDevice[] = {  {&_swigt__p_PoDoFo__PdfInputDevice, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfInputStream[] = {  {&_swigt__p_PoDoFo__PdfInputStream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfListBox[] = {  {&_swigt__p_PoDoFo__PdfListBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfListField[] = {  {&_swigt__p_PoDoFo__PdfComboBox, _p_PoDoFo__PdfComboBoxTo_p_PoDoFo__PdfListField, 0, 0},  {&_swigt__p_PoDoFo__PdfListBox, _p_PoDoFo__PdfListBoxTo_p_PoDoFo__PdfListField, 0, 0},  {&_swigt__p_PoDoFo__PdfListField, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfMemDocument[] = {  {&_swigt__p_PoDoFo__PdfMemDocument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfName[] = {  {&_swigt__p_PoDoFo__PdfName, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfNamesTree[] = {  {&_swigt__p_PoDoFo__PdfNamesTree, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfObject[] = {  {&_swigt__p_PoDoFo__PdfObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfOutlineItem[] = {  {&_swigt__p_PoDoFo__PdfOutlines, _p_PoDoFo__PdfOutlinesTo_p_PoDoFo__PdfOutlineItem, 0, 0},  {&_swigt__p_PoDoFo__PdfOutlineItem, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfOutlines[] = {  {&_swigt__p_PoDoFo__PdfOutlines, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfOutputDevice[] = {  {&_swigt__p_PoDoFo__PdfOutputDevice, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfPage[] = {  {&_swigt__p_PoDoFo__PdfPage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfPagesTree[] = {  {&_swigt__p_PoDoFo__PdfPagesTree, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfPagesTreeCache[] = {  {&_swigt__p_PoDoFo__PdfPagesTreeCache, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfPainter[] = {  {&_swigt__p_PoDoFo__PdfPainter, 0, 0, 0},  {&_swigt__p_PoDoFo__PdfPainterMM, _p_PoDoFo__PdfPainterMMTo_p_PoDoFo__PdfPainter, 0, 0},  {&_swigt__p_PoDoFo__PdfSigIncPainter, _p_PoDoFo__PdfSigIncPainterTo_p_PoDoFo__PdfPainter, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfPainterMM[] = {  {&_swigt__p_PoDoFo__PdfPainterMM, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfPushButton[] = {  {&_swigt__p_PoDoFo__PdfPushButton, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfRadialShadingPattern[] = {  {&_swigt__p_PoDoFo__PdfRadialShadingPattern, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfRect[] = {  {&_swigt__p_PoDoFo__PdfRect, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfReference[] = {  {&_swigt__p_PoDoFo__PdfReference, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfSampledFunction[] = {  {&_swigt__p_PoDoFo__PdfSampledFunction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfShadingPattern[] = {  {&_swigt__p_PoDoFo__PdfShadingPattern, 0, 0, 0},  {&_swigt__p_PoDoFo__PdfAxialShadingPattern, _p_PoDoFo__PdfAxialShadingPatternTo_p_PoDoFo__PdfShadingPattern, 0, 0},  {&_swigt__p_PoDoFo__PdfFunctionBaseShadingPattern, _p_PoDoFo__PdfFunctionBaseShadingPatternTo_p_PoDoFo__PdfShadingPattern, 0, 0},  {&_swigt__p_PoDoFo__PdfRadialShadingPattern, _p_PoDoFo__PdfRadialShadingPatternTo_p_PoDoFo__PdfShadingPattern, 0, 0},  {&_swigt__p_PoDoFo__PdfTriangleShadingPattern, _p_PoDoFo__PdfTriangleShadingPatternTo_p_PoDoFo__PdfShadingPattern, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfSigIncPainter[] = {  {&_swigt__p_PoDoFo__PdfSigIncPainter, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfSignOutputDevice[] = {  {&_swigt__p_PoDoFo__PdfSignOutputDevice, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfSignatureField[] = {  {&_swigt__p_PoDoFo__PdfSignatureField, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfSimpleTableModel[] = {  {&_swigt__p_PoDoFo__PdfSimpleTableModel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfStitchingFunction[] = {  {&_swigt__p_PoDoFo__PdfStitchingFunction, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfStream[] = {  {&_swigt__p_PoDoFo__PdfStream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfStreamedDocument[] = {  {&_swigt__p_PoDoFo__PdfStreamedDocument, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfString[] = {  {&_swigt__p_PoDoFo__PdfString, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfTable[] = {  {&_swigt__p_PoDoFo__PdfTable, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfTableModel[] = {  {&_swigt__p_PoDoFo__PdfTableModel, 0, 0, 0},  {&_swigt__p_PoDoFo__PdfSimpleTableModel, _p_PoDoFo__PdfSimpleTableModelTo_p_PoDoFo__PdfTableModel, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfTextField[] = {  {&_swigt__p_PoDoFo__PdfTextField, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfTilingPattern[] = {  {&_swigt__p_PoDoFo__PdfTilingPattern, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfTriangleShadingPattern[] = {  {&_swigt__p_PoDoFo__PdfTriangleShadingPattern, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfVariant[] = {  {&_swigt__p_PoDoFo__PdfVariant, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfVecObjects[] = {  {&_swigt__p_PoDoFo__PdfVecObjects, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__PdfXObject[] = {  {&_swigt__p_PoDoFo__PdfImage, _p_PoDoFo__PdfImageTo_p_PoDoFo__PdfXObject, 0, 0},  {&_swigt__p_PoDoFo__PdfXObject, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__TFontCacheElement[] = {  {&_swigt__p_PoDoFo__TFontCacheElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_PoDoFo__TLineElement[] = {  {&_swigt__p_PoDoFo__TLineElement, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_Sample[] = {  {&_swigt__p_Sample, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_TVecFilters[] = {  {&_swigt__p_TVecFilters, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_a_4__char[] = {  {&_swigt__p_a_4__char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_a_9__char[] = {  {&_swigt__p_a_9__char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_f_r_PoDoFo__PdfRect_p_void__p_PoDoFo__PdfPage[] = {  {&_swigt__p_f_r_PoDoFo__PdfRect_p_void__p_PoDoFo__PdfPage, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_char[] = {  {&_swigt__p_p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pdf_int16[] = {  {&_swigt__p_pdf_int16, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pdf_int64[] = {  {&_swigt__p_pdf_int64, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pdf_long[] = {  {&_swigt__p_pdf_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pdf_uint16[] = {  {&_swigt__p_pdf_uint16, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_pdf_uint32[] = {  {&_swigt__p_pdf_uint32, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ptrdiff_t[] = {  {&_swigt__p_ptrdiff_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__dequeT_PoDoFo__PdfErrorInfo_t[] = {  {&_swigt__p_std__dequeT_PoDoFo__PdfErrorInfo_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__dequeT_PoDoFo__PdfErrorInfo_t__const_iterator[] = {  {&_swigt__p_std__dequeT_PoDoFo__PdfErrorInfo_t__const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__dequeT_PoDoFo__PdfErrorInfo_t__iterator[] = {  {&_swigt__p_std__dequeT_PoDoFo__PdfErrorInfo_t__iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__dequeT_PoDoFo__PdfObject_p_t[] = {  {&_swigt__p_std__dequeT_PoDoFo__PdfObject_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_PoDoFo__PdfFunction_t[] = {  {&_swigt__p_std__listT_PoDoFo__PdfFunction_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__listT_char_t[] = {  {&_swigt__p_std__listT_char_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t[] = {  {&_swigt__p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t__const_iterator[] = {  {&_swigt__p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t__const_iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t__iterator[] = {  {&_swigt__p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t__iterator, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__ostringstream[] = {  {&_swigt__p_std__ostringstream, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__string[] = {  {&_swigt__p_std__string, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_PdfExtension_t[] = {  {&_swigt__p_std__vectorT_PdfExtension_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_PoDoFo__PdfObject_p_t[] = {  {&_swigt__p_std__vectorT_PoDoFo__PdfObject_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_PoDoFo__PdfPage_p_t[] = {  {&_swigt__p_std__vectorT_PoDoFo__PdfPage_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_PoDoFo__PdfRect_t[] = {  {&_swigt__p_std__vectorT_PoDoFo__PdfRect_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__vectorT_PoDoFo__PdfString_t[] = {  {&_swigt__p_std__vectorT_PoDoFo__PdfString_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_std__wstring[] = {  {&_swigt__p_std__wstring, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_unsigned_char[] = {  {&_swigt__p_unsigned_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_wchar_t[] = {  {&_swigt__p_wchar_t, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_FT_Library,
  _swigc__p_List,
  _swigc__p_PdfArray,
  _swigc__p_PdfData,
  _swigc__p_PdfDate,
  _swigc__p_PdfDictionary,
  _swigc__p_PdfEncrypt,
  _swigc__p_PdfFont,
  _swigc__p_PdfFontCache__EFontCreationFlags,
  _swigc__p_PdfFontMetrics,
  _swigc__p_PdfFontMetricsBase14,
  _swigc__p_PdfObject,
  _swigc__p_PdfRefCountedBuffer,
  _swigc__p_PdfRefCountedInputDevice,
  _swigc__p_PdfStream,
  _swigc__p_PoDoFo__NonPublic__PdfHintStream,
  _swigc__p_PoDoFo__PODOFO_CharData,
  _swigc__p_PoDoFo__PdfAcroForm,
  _swigc__p_PoDoFo__PdfAction,
  _swigc__p_PoDoFo__PdfAnnotation,
  _swigc__p_PoDoFo__PdfArray,
  _swigc__p_PoDoFo__PdfAxialShadingPattern,
  _swigc__p_PoDoFo__PdfButton,
  _swigc__p_PoDoFo__PdfCMapEncoding,
  _swigc__p_PoDoFo__PdfCanvas,
  _swigc__p_PoDoFo__PdfCheckBox,
  _swigc__p_PoDoFo__PdfColor,
  _swigc__p_PoDoFo__PdfComboBox,
  _swigc__p_PoDoFo__PdfContents,
  _swigc__p_PoDoFo__PdfDestination,
  _swigc__p_PoDoFo__PdfDictionary,
  _swigc__p_PoDoFo__PdfDifferenceEncoding,
  _swigc__p_PoDoFo__PdfDocument,
  _swigc__p_PoDoFo__PdfElement,
  _swigc__p_PoDoFo__PdfEncoding,
  _swigc__p_PoDoFo__PdfEncodingDifference,
  _swigc__p_PoDoFo__PdfEncodingObjectFactory,
  _swigc__p_PoDoFo__PdfEncrypt,
  _swigc__p_PoDoFo__PdfEncrypt__EPdfEncryptAlgorithm,
  _swigc__p_PoDoFo__PdfEncrypt__EPdfKeyLength,
  _swigc__p_PoDoFo__PdfError,
  _swigc__p_PoDoFo__PdfErrorInfo,
  _swigc__p_PoDoFo__PdfError__LogMessageCallback,
  _swigc__p_PoDoFo__PdfExponentialFunction,
  _swigc__p_PoDoFo__PdfExtGState,
  _swigc__p_PoDoFo__PdfField,
  _swigc__p_PoDoFo__PdfFileSpec,
  _swigc__p_PoDoFo__PdfFont,
  _swigc__p_PoDoFo__PdfFontCID,
  _swigc__p_PoDoFo__PdfFontCache,
  _swigc__p_PoDoFo__PdfFontConfigWrapper,
  _swigc__p_PoDoFo__PdfFontFactory,
  _swigc__p_PoDoFo__PdfFontMetrics,
  _swigc__p_PoDoFo__PdfFontSimple,
  _swigc__p_PoDoFo__PdfFontTTFSubset,
  _swigc__p_PoDoFo__PdfFunction,
  _swigc__p_PoDoFo__PdfFunctionBaseShadingPattern,
  _swigc__p_PoDoFo__PdfIdentityEncoding,
  _swigc__p_PoDoFo__PdfImage,
  _swigc__p_PoDoFo__PdfInfo,
  _swigc__p_PoDoFo__PdfInputDevice,
  _swigc__p_PoDoFo__PdfInputStream,
  _swigc__p_PoDoFo__PdfListBox,
  _swigc__p_PoDoFo__PdfListField,
  _swigc__p_PoDoFo__PdfMemDocument,
  _swigc__p_PoDoFo__PdfName,
  _swigc__p_PoDoFo__PdfNamesTree,
  _swigc__p_PoDoFo__PdfObject,
  _swigc__p_PoDoFo__PdfOutlineItem,
  _swigc__p_PoDoFo__PdfOutlines,
  _swigc__p_PoDoFo__PdfOutputDevice,
  _swigc__p_PoDoFo__PdfPage,
  _swigc__p_PoDoFo__PdfPagesTree,
  _swigc__p_PoDoFo__PdfPagesTreeCache,
  _swigc__p_PoDoFo__PdfPainter,
  _swigc__p_PoDoFo__PdfPainterMM,
  _swigc__p_PoDoFo__PdfPushButton,
  _swigc__p_PoDoFo__PdfRadialShadingPattern,
  _swigc__p_PoDoFo__PdfRect,
  _swigc__p_PoDoFo__PdfReference,
  _swigc__p_PoDoFo__PdfSampledFunction,
  _swigc__p_PoDoFo__PdfShadingPattern,
  _swigc__p_PoDoFo__PdfSigIncPainter,
  _swigc__p_PoDoFo__PdfSignOutputDevice,
  _swigc__p_PoDoFo__PdfSignatureField,
  _swigc__p_PoDoFo__PdfSimpleTableModel,
  _swigc__p_PoDoFo__PdfStitchingFunction,
  _swigc__p_PoDoFo__PdfStream,
  _swigc__p_PoDoFo__PdfStreamedDocument,
  _swigc__p_PoDoFo__PdfString,
  _swigc__p_PoDoFo__PdfTable,
  _swigc__p_PoDoFo__PdfTableModel,
  _swigc__p_PoDoFo__PdfTextField,
  _swigc__p_PoDoFo__PdfTilingPattern,
  _swigc__p_PoDoFo__PdfTriangleShadingPattern,
  _swigc__p_PoDoFo__PdfVariant,
  _swigc__p_PoDoFo__PdfVecObjects,
  _swigc__p_PoDoFo__PdfXObject,
  _swigc__p_PoDoFo__TFontCacheElement,
  _swigc__p_PoDoFo__TLineElement,
  _swigc__p_Sample,
  _swigc__p_TVecFilters,
  _swigc__p_a_4__char,
  _swigc__p_a_9__char,
  _swigc__p_char,
  _swigc__p_double,
  _swigc__p_f_r_PoDoFo__PdfRect_p_void__p_PoDoFo__PdfPage,
  _swigc__p_p_char,
  _swigc__p_pdf_int16,
  _swigc__p_pdf_int64,
  _swigc__p_pdf_long,
  _swigc__p_pdf_uint16,
  _swigc__p_pdf_uint32,
  _swigc__p_ptrdiff_t,
  _swigc__p_std__dequeT_PoDoFo__PdfErrorInfo_t,
  _swigc__p_std__dequeT_PoDoFo__PdfErrorInfo_t__const_iterator,
  _swigc__p_std__dequeT_PoDoFo__PdfErrorInfo_t__iterator,
  _swigc__p_std__dequeT_PoDoFo__PdfObject_p_t,
  _swigc__p_std__listT_PoDoFo__PdfFunction_t,
  _swigc__p_std__listT_char_t,
  _swigc__p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t,
  _swigc__p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t__const_iterator,
  _swigc__p_std__mapT_PoDoFo__PdfReference_PoDoFo__PdfAnnotation_p_t__iterator,
  _swigc__p_std__ostringstream,
  _swigc__p_std__string,
  _swigc__p_std__vectorT_PdfExtension_t,
  _swigc__p_std__vectorT_PoDoFo__PdfObject_p_t,
  _swigc__p_std__vectorT_PoDoFo__PdfPage_p_t,
  _swigc__p_std__vectorT_PoDoFo__PdfRect_t,
  _swigc__p_std__vectorT_PoDoFo__PdfString_t,
  _swigc__p_std__wstring,
  _swigc__p_unsigned_char,
  _swigc__p_void,
  _swigc__p_wchar_t,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;

  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }

  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);

    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }

  /* When multiple interpreters are used, a module could have already been initialized in
     a different interpreter, but not yet have a pointer in this interpreter.
     In this case, we do not want to continue adding types... everything should be
     set up already */
  if (init == 0) return;

  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;

#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif

    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
	type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }

    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {

      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
	if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
	if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
	  printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
	  cast->type = ret;
	  ret = 0;
	} else {
	  /* Check for casting already in the list */
	  swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
	  if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
	  if (!ocast) ret = 0;
	}
      }

      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
	printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;

#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
  printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;

  if (init_run) return;
  init_run = 1;

  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
            SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{ /* c-mode */
#endif
}
#endif



/* Forward declaration of where the user's %init{} gets inserted */
void SWIG_init_user(lua_State* L );
    
#ifdef __cplusplus
extern "C" {
#endif
/* this is the initialization function
  added at the very end of the code
  the function is always called SWIG_init, but an earlier #define will rename it
*/
#if ((SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_ELUA) || (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_ELUAC))
LUALIB_API int SWIG_init(lua_State* L)
#else
SWIGEXPORT int SWIG_init(lua_State* L) /* default Lua action */
#endif
{
#if (SWIG_LUA_TARGET != SWIG_LUA_FLAVOR_ELUAC) /* valid for both Lua and eLua */
  int i;
  int globalRegister = 0;
  /* start with global table */
  lua_pushglobaltable (L);
  /* SWIG's internal initialisation */
  SWIG_InitializeModule((void*)L);
  SWIG_PropagateClientData();
#endif

#if ((SWIG_LUA_TARGET != SWIG_LUA_FLAVOR_ELUA) && (SWIG_LUA_TARGET != SWIG_LUA_FLAVOR_ELUAC)) || defined(SWIG_LUA_ELUA_EMULATE)
  /* add a global fn */
  SWIG_Lua_add_function(L,"swig_type",SWIG_Lua_type);
  SWIG_Lua_add_function(L,"swig_equals",SWIG_Lua_class_equal);
#endif

#if (SWIG_LUA_TARGET != SWIG_LUA_FLAVOR_ELUAC)
  /* set up base class pointers (the hierarchy) */
  for (i = 0; swig_types[i]; i++){
    if (swig_types[i]->clientdata){
      SWIG_Lua_init_base_class(L,(swig_lua_class*)(swig_types[i]->clientdata));
    }
  }
#ifdef SWIG_LUA_MODULE_GLOBAL
  globalRegister = 1;
#endif


#if (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_LUA)
  SWIG_Lua_namespace_register(L,&swig_SwigModule, globalRegister);
#endif

#if (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_ELUA) || (SWIG_LUA_TARGET == SWIG_LUA_FLAVOR_ELUAC)
  for (i = 0; swig_types[i]; i++){
    if (swig_types[i]->clientdata){
      SWIG_Lua_elua_class_register_instance(L,(swig_lua_class*)(swig_types[i]->clientdata));
    }
  }
#endif

#if defined(SWIG_LUA_ELUA_EMULATE)
  lua_newtable(L);
  SWIG_Lua_elua_emulate_register(L,swig_SwigModule.ns_methods);
  SWIG_Lua_elua_emulate_register_clear(L);
  if(globalRegister) {
    lua_pushstring(L,swig_SwigModule.name);
    lua_pushvalue(L,-2);
    lua_rawset(L,-4);
  }
#endif

#endif

#if (SWIG_LUA_TARGET != SWIG_LUA_FLAVOR_ELUAC)
  /* invoke user-specific initialization */
  SWIG_init_user(L);
  /* end module */
  /* Note: We do not clean up the stack here (Lua will do this for us). At this
     point, we have the globals table and out module table on the stack. Returning
     one value makes the module table the result of the require command. */
  return 1;
#else
  return 0;
#endif
}

#ifdef __cplusplus
}
#endif


const char* SWIG_LUACODE=
  "";

void SWIG_init_user(lua_State* L)
{
  /* exec Lua code if applicable */
  SWIG_Lua_dostring(L,SWIG_LUACODE);
}

